{"version":3,"file":"830485e4a01eef9412f4754ecfe08bd6e6417633-88d9aa707d3a1e5d07fe.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Devices.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceGroup.tsx","webpack://jacdac-docs/./src/components/alert/SimulateDeviceAlert.tsx","webpack://jacdac-docs/./src/components/makecode/MakeCodeAddBlocksButton.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareAlert.tsx","webpack://jacdac-docs/./src/components/dashboard/Dashboard.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/icons/MakeCodeIcon.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreInfrastructure: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full={true} transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { useId } from \"react-use-id-hook\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport GridHeader from \"../ui/GridHeader\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport DashboardDeviceItem from \"./DashboardDeviceItem\"\n\nexport default function DeviceGroup(\n    props: {\n        title: string\n        action?: JSX.Element\n        devices: JDDevice[]\n        children?: JSX.Element | JSX.Element[]\n    } & DashboardDeviceProps\n) {\n    const { title, action, devices, children, ...other } = props\n    const sectionId = useId()\n\n    if (!action && !devices?.length) return null\n\n    return (\n        <section id={sectionId}>\n            <Grid container spacing={1}>\n                <GridHeader title={title} action={action} />\n                {children}\n                {devices?.map(device => (\n                    <DashboardDeviceItem\n                        key={device.id}\n                        device={device}\n                        {...other}\n                    />\n                ))}\n            </Grid>\n        </section>\n    )\n}\n","import React, { useContext } from \"react\"\nimport {\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_HUMIDITY,\n    SRV_JOYSTICK,\n    SRV_LED,\n    SRV_TRAFFIC_LIGHT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { startServiceProviderFromServiceClass } from \"../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Alert from \"../ui/Alert\"\n\nexport function SimulateDeviceHint() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const handleStartSimulator = (serviceClass: number) => () =>\n        startServiceProviderFromServiceClass(bus, serviceClass)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    return (\n        <>\n            Simulate devices (\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.button\"\n                onClick={handleStartSimulator(SRV_BUTTON)}\n                title=\"button\"\n                aria-label=\"start button simulator\"\n            >\n                <span aria-label=\"button emoji\" role=\"img\">\n                    🔘\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.humidity\"\n                onClick={handleStartSimulator(SRV_HUMIDITY)}\n                title=\"humidity\"\n                aria-label=\"start traffic humidity sensor\"\n            >\n                <span aria-label=\"traffic light umbrella\" role=\"img\">\n                    ☂️\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.buzzer\"\n                onClick={handleStartSimulator(SRV_BUZZER)}\n                title=\"buzzer\"\n                aria-label=\"start buzzer simulator\"\n            >\n                <span aria-label=\"piano emoji\" role=\"img\">\n                    🎹\n                </span>\n            </IconButtonWithTooltip>\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.joystick\"\n                onClick={handleStartSimulator(SRV_JOYSTICK)}\n                title=\"joystick\"\n                aria-label=\"start joystick simulator\"\n            >\n                <span aria-label=\"joystick emoji\" role=\"img\">\n                    🕹️\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.led\"\n                onClick={handleStartSimulator(SRV_LED)}\n                title=\"LED\"\n                aria-label=\"start LED simulator\"\n            >\n                <span aria-label=\"lightbulb emoji\" role=\"img\">\n                    💡\n                </span>\n            </IconButtonWithTooltip>\n            ,\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.traffic\"\n                onClick={handleStartSimulator(SRV_TRAFFIC_LIGHT)}\n                title=\"traffic light\"\n                aria-label=\"start traffic light simulator\"\n            >\n                <span aria-label=\"traffic light emoji\" role=\"img\">\n                    🚦\n                </span>\n            </IconButtonWithTooltip>\n            , ...) by clicking &nbsp;\n            <IconButtonWithTooltip\n                trackName=\"simulator.hint.start\"\n                title=\"start simulator\"\n                onClick={toggleShowDeviceHostsDialog}\n            >\n                <AddIcon />\n            </IconButtonWithTooltip>\n            .\n        </>\n    )\n}\n\nexport default function SimulateDeviceAlert() {\n    return (\n        <Alert severity=\"info\">\n            <SimulateDeviceHint />\n        </Alert>\n    )\n}\n","import { Box } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { useContext, useMemo } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport IFrameBridgeClient from \"./iframebridgeclient\"\nimport MakeCodeIcon from \"../../components/icons/MakeCodeIcon\"\n\nexport default function MakeCodeAddBlocksButton() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const iframeBridge = bus.nodeData[\n        IFrameBridgeClient.DATA_ID\n    ] as IFrameBridgeClient\n    const extensions = useChange(iframeBridge, _ => _?.candidateExtensions)\n    const handleAdd = () => iframeBridge?.postAddExtensions()\n    const isMakeCodeTool = useMemo(\n        () =>\n            typeof window !== \"undefined\" &&\n            /makecode/.test(window.location.href),\n        []\n    )\n\n    if (!isMakeCodeTool || !extensions?.length) return null\n    return (\n        <Box m={1}>\n            <Button\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<MakeCodeIcon />}\n                onClick={handleAdd}\n                aria-label={\"Add blocks\"}\n            >\n                Add blocks\n            </Button>\n        </Box>\n    )\n}\n","import { Box, Grid } from \"@material-ui/core\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport { Button } from \"gatsby-material-ui-components\"\nimport React, { useContext } from \"react\"\nimport { updateApplicable } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { inIFrame } from \"../../../jacdac-ts/src/jdom/iframeclient\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport Alert from \"../ui/Alert\"\n\nexport default function FirmwareAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const updates = useChange(bus, _ => {\n        if (inIFrame()) return false\n\n        const blobs = _.firmwareBlobs\n        const infos = _.devices({ physical: true }).map(d => d.firmwareInfo)\n\n        return (\n            blobs &&\n            infos &&\n            infos.some(info => blobs.some(blob => updateApplicable(info, blob)))\n        )\n    })\n\n    if (!updates) return null\n\n    return (\n        <Grid item xs={12}>\n            <Alert severity=\"success\" closeable={true}>\n                <AlertTitle>Updates available</AlertTitle>\n                Update your devices to benefit from bug fixes and improvements.\n                <Box component=\"span\" ml={1}>\n                    <Button variant=\"outlined\" to=\"/tools/updater/\">\n                        Review updates\n                    </Button>\n                </Box>\n            </Alert>\n        </Grid>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { isReading, isValueOrIntensity } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { splitFilter, strcmp } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useDevices from \"../hooks/useDevices\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport AppContext from \"../AppContext\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport DashboardDeviceGroup from \"./DashboardDeviceGroup\"\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ClearIcon from \"@material-ui/icons/Clear\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DevicesIcon from \"@material-ui/icons/Devices\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useRoleManagerClient from \"../services/useRoleManagerClient\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport SimulateDeviceAlert from \"../alert/SimulateDeviceAlert\"\nimport MakeCodeAddBlocksButton from \"../makecode/MakeCodeAddBlocksButton\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport HostedSimulatorsContext from \"../HostedSimulatorsContext\"\nimport FirmwareAlert from \"../firmware/FirmwareAlert\"\n\nfunction defaultDeviceSort(l: JDDevice, r: JDDevice): number {\n    const srvScore = (srv: jdspec.ServiceSpec) =>\n        srv.packets.reduce(\n            (prev, pkt) =>\n                prev + (isReading(pkt) ? 10 : isValueOrIntensity(pkt) ? 1 : 0),\n            0\n        ) || 0\n    const score = (srvs: jdspec.ServiceSpec[]) =>\n        srvs.reduce((prev, srv) => srvScore(srv), 0)\n\n    const ls = score(\n        l\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    const rs = score(\n        r\n            .services()\n            .slice(1)\n            .map(srv => srv.specification)\n            .filter(spec => !!spec)\n    )\n    if (ls !== rs) return -ls + rs\n    return strcmp(l.deviceId, r.deviceId)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultDeviceFilter(d: JDDevice): boolean {\n    return true\n}\n\nexport interface DashboardDeviceProps {\n    showHeader?: boolean\n    showAvatar?: boolean\n    serviceFilter?: (srv: JDService) => boolean\n}\n\nexport interface DashboardProps extends DashboardDeviceProps {\n    hideSimulators?: boolean\n    showStartSimulators?: boolean\n    showStartRoleSimulators?: boolean\n    showConnect?: boolean\n    deviceFilter?: (d: JDDevice) => boolean\n    deviceSort?: (l: JDDevice, r: JDDevice) => number\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const {\n        hideSimulators,\n        showConnect,\n        showStartSimulators,\n        showStartRoleSimulators,\n        deviceSort = defaultDeviceSort,\n        deviceFilter = defaultDeviceFilter,\n        ...other\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { isHostedSimulator, clearHostedSimulators } = useContext(\n        HostedSimulatorsContext\n    )\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreInfrastructure: !Flags.diagnostics,\n    })\n        .filter(deviceFilter)\n        .sort(deviceSort)\n    const [simulators, physicals] = splitFilter(\n        devices,\n        d =>\n            !!bus.findServiceProvider(d.deviceId) ||\n            isHostedSimulator(d.deviceId)\n    )\n    const roleManager = useRoleManagerClient()\n    const handleClearSimulators = () => {\n        clearHostedSimulators()\n        bus.serviceProviders().forEach(dev => bus.removeServiceProvider(dev))\n    }\n    const handleStartSimulators = () => roleManager?.startSimulators()\n\n    return (\n        <>\n            <MakeCodeAddBlocksButton />\n            {!hideSimulators && (\n                <DashboardDeviceGroup\n                    title=\"Simulators\"\n                    action={\n                        <>\n                            {showStartRoleSimulators && (\n                                <IconButtonWithTooltip\n                                    trackName=\"dashboard.simulators.missing\"\n                                    title=\"start missing simulators for roles\"\n                                    onClick={handleStartSimulators}\n                                    disabled={!roleManager}\n                                >\n                                    <DevicesIcon />\n                                </IconButtonWithTooltip>\n                            )}\n                            <IconButtonWithTooltip\n                                trackName=\"dashboard.simulators.start\"\n                                title=\"start simulator\"\n                                onClick={toggleShowDeviceHostsDialog}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                            <IconButtonWithTooltip\n                                trackName=\"dashboard.simulators.clear\"\n                                title=\"clear simulators\"\n                                onClick={handleClearSimulators}\n                            >\n                                <ClearIcon />\n                            </IconButtonWithTooltip>{\" \"}\n                        </>\n                    }\n                    devices={simulators}\n                    {...other}\n                >\n                    {showStartSimulators && !simulators?.length && (\n                        <Grid item xs={12}>\n                            <SimulateDeviceAlert />\n                        </Grid>\n                    )}\n                </DashboardDeviceGroup>\n            )}\n            <DashboardDeviceGroup\n                title=\"Devices\"\n                action={\n                    showConnect && (\n                        <ConnectButtons\n                            full={\"disconnected\"}\n                            transparent={true}\n                        />\n                    )\n                }\n                devices={physicals}\n                {...other}\n            >\n                <FirmwareAlert />\n                {showConnect && !physicals.length && (\n                    <Grid item xs={12}>\n                        <ConnectAlert closeable={true} />\n                    </Grid>\n                )}\n            </DashboardDeviceGroup>\n        </>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const { device, variant, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType]\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} variant={variant} {...other} />\n        </Grid>\n    )\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default (props: SvgIconProps) =>\n    <SvgIcon titleAccess=\"MakeCode logo\" {...props}>\n        <path d=\"M4.703 2.615s-.505.05-.72.15a3.011 3.011 0 00-.391.221c-.22.12-.42.266-.6.444-.52.516-.795 1.2-.834 2.05a6.857 6.857 0 00-.066.961V8.36a5.117 5.117 0 01-.137 1.032 1.73 1.73 0 01-.4.773 2.006 2.006 0 00-.15.149 6.534 6.534 0 01-.848.617c-.303.196-.481.474-.537.83v.017c-.01.07-.017.14-.018.215L0 12.006v.008c0 .08.003.156.012.226h.002c.024.214.082.378.177.492.129.153.345.328.649.52.304.192.552.398.74.62.19.221.332.549.428.985.037.17.065.54.084 1.106v1.514c0 .285.023.542.056.787.001.047 0 .092.002.14.007.587.135 1.107.385 1.559.25.453.604.803 1.063 1.05.458.248.978.372 1.56.372h14.139c.262 0 .505-.05.72-.15.139-.064.267-.14.391-.221.218-.12.42-.266.6-.444.52-.516.795-1.2.834-2.05.042-.299.066-.618.066-.963v-1.918c.014-.372.059-.715.137-1.03.078-.314.213-.572.4-.775a1.98 1.98 0 00.15-.146c.2-.179.48-.384.848-.618.303-.196.481-.475.537-.832l.002-.015a1.66 1.66 0 00.018-.217V11.988c0-.08-.004-.156-.012-.226h-.002c-.024-.214-.082-.378-.177-.492-.129-.153-.345-.328-.649-.52a3.208 3.208 0 01-.74-.62c-.19-.221-.332-.55-.428-.987-.037-.17-.065-.538-.084-1.104V6.523c0-.285-.023-.542-.056-.787-.001-.047 0-.092-.002-.14-.007-.587-.135-1.107-.385-1.559a2.598 2.598 0 00-1.063-1.05c-.458-.248-.978-.372-1.56-.372H4.703zm1.22 1.24c.307 0 .533.058.673.172.115.096.168.24.168.453a.885.885 0 01-.069.36.501.501 0 01-.142.201.346.346 0 01-.18.07c-.31.042-.543.095-.713.164a1.03 1.03 0 00-.543.536c-.093.201-.149.47-.174.818-.022.301-.033.725-.033 1.293-.012.796-.058 1.422-.137 1.861-.07.398-.206.74-.4 1.02-.197.282-.499.552-.898.804l-.616.39.618.386c.286.18.52.368.695.558.166.18.304.407.414.672.115.277.2.614.248 1.004.051.413.076.908.076 1.47 0 .587.013 1.025.037 1.34.03.367.094.64.196.835.123.236.303.403.537.496.168.067.395.114.693.148a.404.404 0 01.268.16c.081.1.123.259.123.471 0 .308-.064.608-.84.608-.477 0-.898-.094-1.25-.282a2.006 2.006 0 01-.813-.785 2.402 2.402 0 01-.31-1.197c-.048-2.666-.098-3.199-.139-3.37-.115-.472-.286-.83-.525-1.097a3.373 3.373 0 00-.776-.633c-.216-.13-.375-.254-.47-.369-.027-.032-.088-.136-.088-.416 0-.288.09-.471.293-.596.454-.28.781-.522.998-.746.244-.251.415-.565.51-.931.084-.328.132-.788.148-1.407.015-.58.03-1.305.049-2.177.016-.706.229-1.25.654-1.666.426-.416.988-.618 1.719-.618zm12.153 0c.477 0 .898.095 1.25.282.348.185.612.442.813.785.2.343.305.746.31 1.197.048 2.666.098 3.199.139 3.37.115.472.286.83.525 1.097.216.24.476.452.776.633.217.131.376.255.47.369.027.032.088.136.088.416 0 .287-.09.471-.293.596-.454.28-.78.522-.998.746-.243.25-.415.565-.51.931-.084.328-.132.788-.148 1.407-.015.58-.03 1.305-.049 2.177-.016.706-.229 1.25-.654 1.666-.426.416-.988.618-1.719.618-.307 0-.533-.058-.672-.172-.116-.096-.168-.24-.168-.453 0-.135.021-.253.069-.36a.512.512 0 01.14-.201.353.353 0 01.182-.07c.31-.042.543-.095.713-.164.238-.099.424-.284.54-.538.094-.201.152-.468.177-.816.021-.301.033-.727.033-1.295.012-.796.058-1.42.137-1.86.07-.397.204-.74.398-1.019.196-.281.499-.552.898-.804l.616-.39-.616-.386a3.412 3.412 0 01-.695-.558 2.275 2.275 0 01-.416-.672 3.871 3.871 0 01-.246-1.004 12.22 12.22 0 01-.078-1.47c0-.587-.012-1.025-.037-1.34-.03-.367-.092-.64-.194-.835a1.021 1.021 0 00-.539-.496 2.76 2.76 0 00-.691-.148.4.4 0 01-.268-.16c-.082-.1-.123-.259-.123-.471 0-.308.064-.608.84-.608zm-6.29 1.348c.052-.005.341-.005.394 0v.01a1.524 1.524 0 011.287 1.457c0 .62-.332.891-.332.916-.33.346-.123.744.467.695 0 0 2.4.012 2.445 0a.576.576 0 01.422.555l-.002 2.574c-.106.3-.396.36-.658.111-.025 0-.296-.332-.916-.332a1.521 1.521 0 00-1.457 1.286h-.008a4.897 4.897 0 000 .394h.008a1.524 1.524 0 001.457 1.287c.62 0 .89-.332.916-.332.27-.256.557-.225.658.112v2.783a.562.562 0 01-.563.562H8.061a.561.561 0 01-.563-.562V8.836c0-.261.18-.492.422-.555.046.012 2.443 0 2.443 0 .659.032.798-.349.469-.695 0-.025-.332-.296-.332-.916a1.521 1.521 0 011.285-1.457v-.01z\" strokeWidth=\".75\" />\n    </SvgIcon>\n","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","useChange","ConnectButtons","NoSsrConnectAlert","props","serviceClass","closeable","bus","transports","devices","b","ignoreInfrastructure","spec","length","name","ConnectAlert","Grid","useId","GridHeader","DashboardDeviceItem","DeviceGroup","title","action","children","other","sectionId","map","device","id","SRV_BUTTON","SRV_BUZZER","SRV_HUMIDITY","SRV_JOYSTICK","SRV_LED","SRV_TRAFFIC_LIGHT","startServiceProviderFromServiceClass","AppContext","IconButtonWithTooltip","AddIcon","SimulateDeviceHint","handleStartSimulator","toggleShowDeviceHostsDialog","SimulateDeviceAlert","Button","useMemo","IFrameBridgeClient","MakeCodeIcon","MakeCodeAddBlocksButton","iframeBridge","nodeData","DATA_ID","extensions","_","candidateExtensions","handleAdd","postAddExtensions","isMakeCodeTool","window","test","location","href","AlertTitle","updateApplicable","inIFrame","FirmwareAlert","updates","blobs","firmwareBlobs","infos","physical","d","firmwareInfo","some","info","blob","isReading","isValueOrIntensity","splitFilter","strcmp","useDevices","DashboardDeviceGroup","ClearIcon","DevicesIcon","useRoleManagerClient","Flags","HostedSimulatorsContext","defaultDeviceSort","l","r","srvScore","srv","packets","reduce","prev","pkt","score","srvs","ls","services","slice","specification","filter","rs","deviceId","defaultDeviceFilter","Dashboard","hideSimulators","showConnect","showStartSimulators","showStartRoleSimulators","deviceSort","deviceFilter","isHostedSimulator","clearHostedSimulators","announced","diagnostics","sort","simulators","physicals","findServiceProvider","roleManager","handleClearSimulators","serviceProviders","forEach","dev","removeServiceProvider","handleStartSimulators","startSimulators","DashboardDevice","dashboardServiceWeight","DrawerType","variant","drawerType","breakpoints","breakpointWeight","readingRegister","valueRegister","intensityRegister","c","v","None","xs","sm","md","lg","xl","SvgIcon","Chip","createStyles","makeStyles","Typography","clsx","useStyles","theme","hr","background","palette","text","disabled","marginBottom","start","width","spacing","count","classes","undefined"],"sourceRoot":""}