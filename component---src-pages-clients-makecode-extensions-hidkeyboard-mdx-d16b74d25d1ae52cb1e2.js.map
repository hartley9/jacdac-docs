{"version":3,"file":"component---src-pages-clients-makecode-extensions-hidkeyboard-mdx-d16b74d25d1ae52cb1e2.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACE;;AACF;AACA;;AAEA;;AAEA;AACO,IAAMG,YAAY,GAAG,EAArB;AACP,IAAMC,WAAW,GAAG;AAClBD,EAAAA;AADkB,CAApB;AAGA,IAAME,SAAS,GAAGH,kHAAlB;AACe,SAASI,UAAT,OAGZ;AAAA,MAHgC;AACjCC,IAAAA;AADiC,GAGhC;AAAA,MADEC,KACF;;AACD,SAAO,mDAAC,SAAD,oBAAeJ,WAAf,EAAgCI,KAAhC;AAAuC,cAAU,EAAED,UAAnD;AAA+D,WAAO,EAAC;AAAvE,MAGL;AACE,UAAM,cADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,eADT;AAEC,kBAAc,wBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,iBAHK,EAuBL,8OAEF;AAAG,cAAU,EAAC,GAAd;AACM,YAAQ;AADd,wBAFE,UAIqC;AAAG,cAAU,EAAC,GAAd;AACjC,YAAQ;AADyB,4BAJrC,oGAvBK,EA+BL,6GACS;AAAY,cAAU,EAAC;AAAvB,WADT,gKA/BK,EAkCL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,gwBAAL,CAlCK,EAsCL,6EAAkB;AAAY,cAAU,EAAC;AAAvB,aAAlB,oHACoB;AAAY,cAAU,EAAC;AAAvB,YADpB,wBAC0F;AAAY,cAAU,EAAC;AAAvB,SAD1F,+CACoL;AAAY,cAAU,EAAC;AAAvB,SADpL,qEAtCK,EAyCL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,07BAAL,CAzCK,EA6CL;AACE,UAAM,UADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,WADT;AAEC,kBAAc,oBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,aA7CK,EAiEL,+DACE;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ;AADQ,6BAApB,CADF,CAjEK,CAAP;AAwED;AACD;AACAD,UAAU,CAACG,cAAX,GAA4B,IAA5B;;;;;;;;CCzFA;;AACA,IAAME,IAAI,GAAG,QAAyB;AAAA,MAAxB;AAAEH,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAwB;AAClC,sBAAO,iDAAC,2CAAD,EAAcJ,KAAd,EAAsBI,QAAtB,CAAP;AACH,CAFD;;AAIA,yDAAeD,IAAf","sources":["webpack://jacdac-docs/./src/pages/clients/makecode/extensions/hidkeyboard.mdx","webpack://jacdac-docs/./src/components/Page.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"hid-keyboard\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#hid-keyboard\",\n        \"aria-label\": \"hid keyboard permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`HID Keyboard`}</h1>\n    <p>{`The HID keyboard extension can be used to control a HID keyboard, via a Jacdac module\nthat implements HID (generally communicating to a desktop/laptop over USB). Use the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/devices/microsoft/research/jmbrainf441v02\"\n      }}>{`JM Brain F4 v0.2`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/devices/microsoft/research/jmbrainrp204059v01\"\n      }}>{`JM Brain RP2040 v0.1`}</a>{` module,\nloaded with the HID Keyboard + Mouse firmware that is available via the same links.  `}</p>\n    <p>{`As shown in the example below,\nthe method `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` sends a keyboard action ('press'), specified by the first argument,\nwith a modifier (second argument, 'none'), and a selected key (third argument, 'a'): `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-blocks\"\n      }}>{`{\"source\":\"input.onButtonPressed(Button.A, function() {\\\\n    modules.hidKeyboard1.key(jacdac.HidKeyboardAction.Press, \\\\n      jacdac.HidKeyboardModifiers.None, \\\\n      jacdac.HidKeyboardKey.A)\\\\n})\",\"rendered\":{\"req\":{\"code\":\"input.onButtonPressed(Button.A, function() {\\\\n    modules.hidKeyboard1.key(jacdac.HidKeyboardAction.Press, \\\\n      jacdac.HidKeyboardModifiers.None, \\\\n      jacdac.HidKeyboardKey.A)\\\\n})\",\"options\":{\"pixelDensity\":1,\"package\":\"jacdac=github:microsoft/pxt-jacdac#v0.7.6,jacdac-hid-keyboard=github:microsoft/pxt-jacdac/hid-keyboard#v0.7.6\"},\"type\":\"renderblocks\",\"id\":\"fd5937cb98f9b1c857a73f14f8b5af19\"},\"url\":\"/images/makecode/fd5937cb98f9b1c857a73f14f8b5af19.png\",\"width\":591,\"height\":128}}\n`}</code></pre>\n    <p>{`The method `}<inlineCode parentName=\"p\">{`clear`}</inlineCode>{` clears all currently pressed keys. In the program below, pressing the A button of the\nmicro:bit will send a `}<inlineCode parentName=\"p\">{`Down`}</inlineCode>{` event on the key `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` to the HID keyboard, causing the letter `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` to be repeated\nuntil the B button of the micro:bit is pressed:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-blocks\"\n      }}>{`{\"source\":\"input.onButtonPressed(Button.B, function() {\\\\n    modules.hidKeyboard1.clear()\\\\n})\\\\n\\\\ninput.onButtonPressed(Button.A, function() {\\\\n    modules.hidKeyboard1.key(jacdac.HidKeyboardAction.Down, \\\\n        jacdac.HidKeyboardModifiers.None, \\\\n        jacdac.HidKeyboardKey.A)\\\\n})\",\"rendered\":{\"req\":{\"code\":\"input.onButtonPressed(Button.B, function() {\\\\n    modules.hidKeyboard1.clear()\\\\n})\\\\n\\\\ninput.onButtonPressed(Button.A, function() {\\\\n    modules.hidKeyboard1.key(jacdac.HidKeyboardAction.Down, \\\\n        jacdac.HidKeyboardModifiers.None, \\\\n        jacdac.HidKeyboardKey.A)\\\\n})\",\"options\":{\"pixelDensity\":1,\"package\":\"jacdac=github:microsoft/pxt-jacdac#v0.7.6,jacdac-hid-keyboard=github:microsoft/pxt-jacdac/hid-keyboard#v0.7.6\"},\"type\":\"renderblocks\",\"id\":\"7f5a83cc04f69dbe1d0397aa5aa62f6f\"},\"url\":\"/images/makecode/7f5a83cc04f69dbe1d0397aa5aa62f6f.png\",\"width\":977,\"height\":128}}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See Also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/services/hidkeyboard/\"\n        }}>{`service specification`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\"\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page\n"],"names":["React","mdx","DefaultLayout","_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent","Fragment","Page","children"],"sourceRoot":""}