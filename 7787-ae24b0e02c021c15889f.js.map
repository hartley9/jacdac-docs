{"version":3,"file":"7787-ae24b0e02c021c15889f.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Clear.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Edit.js","webpack://jacdac-docs/./src/components/dashboard/DashboardCharacterScreen.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { ChangeEvent, useEffect, useState } from \"react\"\nimport {\n    CharacterScreenCmd,\n    CharacterScreenReg,\n    CharacterScreenTextDirection,\n    CharacterScreenVariant,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport { createStyles, Grid, makeStyles, TextField } from \"@material-ui/core\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\nimport CmdButton from \"../CmdButton\"\nimport ClearIcon from \"@material-ui/icons/Clear\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        text: {\n            fontFamily: \"monospace\",\n            fontWeight: 100,\n        },\n        box: {},\n    })\n)\n\n// https://en.wikipedia.org/wiki/Braille_ASCII\nconst BRAILE_CHARACTERS = {\n    \" \": \"⠀\", // space bar to dot-0\n    \"-\": \"⠤\",\n    \",\": \"⠠\",\n    \";\": \"⠰\",\n    \":\": \"⠱\",\n    \"!\": \"⠮\",\n    \"?\": \"⠹\",\n    \".\": \"⠨\",\n    \"(\": \"⠷\",\n    \"[\": \"⠪\",\n    \"@\": \"⠈\",\n    \"*\": \"⠡\",\n    \"/\": \"⠌\",\n    \"'\": \"⠄\",\n    '\"': \"⠐\",\n    \"\\\\\": \"⠳\",\n    \"&\": \"⠯\",\n    \"%\": \"⠩\",\n    \"^\": \"⠘\",\n    \"+\": \"⠬\",\n    \"<\": \"⠣\",\n    \">\": \"⠜\",\n    $: \"⠫\",\n    \"0\": \"⠴\",\n    \"1\": \"⠂\",\n    \"2\": \"⠆\",\n    \"3\": \"⠒\",\n    \"4\": \"⠲\",\n    \"5\": \"⠢\",\n    \"6\": \"⠖\",\n    \"7\": \"⠶\",\n    \"8\": \"⠦\",\n    \"9\": \"⠔\",\n    A: \"⠁\",\n    B: \"⠃\",\n    C: \"⠉\",\n    D: \"⠙\",\n    E: \"⠑\",\n    F: \"⠋\",\n    G: \"⠛\",\n    H: \"⠓\",\n    I: \"⠊\",\n    J: \"⠚\",\n    K: \"⠅\",\n    L: \"⠇\",\n    M: \"⠍\",\n    N: \"⠝\",\n    O: \"⠕\",\n    P: \"⠏\",\n    Q: \"⠟\",\n    R: \"⠗\",\n    S: \"⠎\",\n    T: \"⠞\",\n    U: \"⠥\",\n    V: \"⠧\",\n    W: \"⠺\",\n    X: \"⠭\",\n    Z: \"⠵\",\n    \"]\": \"⠻\",\n    \"#\": \"⠼\",\n    Y: \"⠽\",\n    \")\": \"⠾\",\n    \"=\": \"⠿\",\n    _: \"⠸\",\n}\nfunction brailify(s: string) {\n    if (!s) return s\n    let r = \"\"\n    const su = s.toLocaleUpperCase()\n    for (let i = 0; i < su.length; ++i) {\n        r += BRAILE_CHARACTERS[su.charAt(i)] || \"?\"\n    }\n    return r\n}\n\nexport default function DashboardCharacterScreen(props: DashboardServiceProps) {\n    const { service } = props\n    const classes = useStyles()\n    const messageRegister = useRegister(service, CharacterScreenReg.Message)\n    const rowsRegister = useRegister(service, CharacterScreenReg.Rows)\n    const columnsRegister = useRegister(service, CharacterScreenReg.Columns)\n    const textDirectionRegister = useRegister(\n        service,\n        CharacterScreenReg.TextDirection\n    )\n    const variantRegister = useRegister(service, CharacterScreenReg.Variant)\n    const [edit, setEdit] = useState(false)\n    const [message] = useRegisterUnpackedValue<[string]>(messageRegister, props)\n    const [rows] = useRegisterUnpackedValue<[number]>(rowsRegister, props)\n    const [columns] = useRegisterUnpackedValue<[number]>(columnsRegister, props)\n    const [textDirection] = useRegisterUnpackedValue<[number]>(\n        textDirectionRegister,\n        props\n    )\n    const [variant] = useRegisterUnpackedValue<[CharacterScreenVariant]>(\n        variantRegister,\n        props\n    )\n    const [fieldMessage, setFieldMessage] = useState(message)\n    const { textPrimary, background, controlBackground } =\n        useWidgetTheme(\"primary\")\n\n    const handleClear = async mounted => {\n        await service.sendCmdAsync(CharacterScreenCmd.Clear, undefined, true)\n        if (!mounted()) return\n        setFieldMessage(\"\")\n    }\n    const handleFieldMessageChange = async (\n        ev: ChangeEvent<HTMLTextAreaElement>\n    ) => {\n        setFieldMessage(ev.target.value)\n        await messageRegister.sendSetStringAsync(ev.target.value, true)\n    }\n    const handleEdit = () => setEdit(e => !e)\n\n    // set first value of message\n    useEffect(() => {\n        if (!fieldMessage && message) setFieldMessage(message)\n    }, [message])\n\n    if (rows === undefined || columns === undefined) return <LoadingProgress /> // size unknown\n\n    const cw = 8\n    const ch = 10\n    const m = 1\n    const mo = 2\n    const fs = 8\n\n    const rtl = textDirection === CharacterScreenTextDirection.RightToLeft\n    const w = columns * (cw + m) - m + 2 * mo\n    const h = rows * (ch + m) - m + 2 * mo\n\n    const lines = (message || \"\").split(/\\n/g)\n    const converter: (s: string) => string =\n        variant === CharacterScreenVariant.Braille ? brailify : s => s\n    const els: JSX.Element[] = []\n\n    let y = mo\n    for (let row = 0; row < rows; ++row) {\n        let x = mo\n        const line = lines[row]\n        for (let column = 0; column < columns; ++column) {\n            const char = line?.[rtl ? columns - 1 - column : column]\n            const dchar = converter(char)\n            els.push(\n                <g key={`${row}-${column}`}>\n                    <rect\n                        x={x}\n                        y={y}\n                        width={cw}\n                        height={ch}\n                        className={classes.box}\n                        fill={controlBackground}\n                    />\n                    {char && (\n                        <text\n                            x={x + cw / 2}\n                            y={y + ch - fs / 3}\n                            textAnchor=\"middle\"\n                            fontSize={fs}\n                            className={classes.text}\n                            fill={textPrimary}\n                            aria-label={char}\n                        >\n                            {dchar}\n                        </text>\n                    )}\n                </g>\n            )\n            x += cw + m\n        }\n\n        y += ch + m\n    }\n    return (\n        <Grid container spacing={1}>\n            {edit && (\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs>\n                            <TextField\n                                label=\"text\"\n                                value={fieldMessage}\n                                onChange={handleFieldMessageChange}\n                                multiline={true}\n                                rows={rows || 2}\n                                fullWidth={true}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <CmdButton\n                                title=\"clear the entire display\"\n                                onClick={handleClear}\n                                icon={<ClearIcon />}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n            <Grid item xs>\n                <SvgWidget\n                    tabIndex={0}\n                    title={`character screen displaying \"${message}\"`}\n                    width={w}\n                    height={h}\n                >\n                    <>\n                        <rect\n                            x={0}\n                            y={0}\n                            width={w}\n                            height={h}\n                            r={m / 2}\n                            fill={background}\n                        />\n                        {els}\n                    </>\n                </SvgWidget>\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={!edit ? \"show editor\" : \"hide editor\"}\n                    onClick={handleEdit}\n                >\n                    <EditIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["React","useEffect","useState","CharacterScreenCmd","CharacterScreenReg","CharacterScreenTextDirection","CharacterScreenVariant","useRegisterUnpackedValue","SvgWidget","createStyles","Grid","makeStyles","TextField","useWidgetTheme","LoadingProgress","useRegister","CmdButton","ClearIcon","EditIcon","IconButtonWithTooltip","useStyles","text","fontFamily","fontWeight","box","BRAILE_CHARACTERS","$","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Z","Y","_","brailify","s","r","su","toLocaleUpperCase","i","length","charAt","DashboardCharacterScreen","props","service","classes","messageRegister","Message","rowsRegister","Rows","columnsRegister","Columns","textDirectionRegister","TextDirection","variantRegister","Variant","edit","setEdit","message","rows","columns","textDirection","variant","fieldMessage","setFieldMessage","textPrimary","background","controlBackground","handleClear","mounted","sendCmdAsync","Clear","undefined","handleFieldMessageChange","ev","target","value","sendSetStringAsync","handleEdit","e","cw","ch","m","mo","fs","rtl","RightToLeft","w","h","lines","split","converter","Braille","els","y","row","x","line","column","char","dchar","push"],"sourceRoot":""}