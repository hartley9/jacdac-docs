{"version":3,"file":"141-07463ac6663d596729ff.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACgB;AACjB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,kCAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAK;AACpB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAwB;;AAEtC,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,yBAAU;AAC1D,gCAAgC,yBAAU;AAC1C;AACA,IAAI;AACJ;;AAEA;AACA,wBAAwB,qBAAI,kFAAkF,6BAAU,qDAAqD,6BAAU;AACvL,gDAAgD,oBAAoB,gCAAgC,kBAAkB;AACtH,iBAAiB,qBAAI;AACrB;AACA,KAAK,iBAAiB,mBAAmB,CAAC,MAAU;AACpD,iBAAiB,qBAAI;AACrB;AACA,KAAK;AACL;;AAEA;;AAEA,iCAAiC,oBAAoB;AACrD,0BAA0B,kBAAkB;AAC5C,iBAAiB,qBAAI,+HAA+H,6BAAU;AAC9J,KAAK;AACL;;AAEA;;AAEA,+BAA+B,oBAAoB;AACnD,wBAAwB,kBAAkB;AAC1C,iBAAiB,qBAAI,uHAAuH,6BAAU;AACtJ,KAAK;AACL;;AAEA,MAAM,KAAqC,EAAE,EAI1C;;AAEH,sBAAsB,mBAAmB,YAAY,8BAAQ;AAC7D;AACA,eAAe,qBAAI,yEAAyE,6BAAU,wDAAwD,6BAAU,uDAAuD,6BAAU;AACzO;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kDAAkD,mBAAmB;AACxE,eAAe,qBAAI;AACnB,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,8CAAe,6BAAU;AACzB;AACA,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpaR;AAEA;AAYA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AACA;AACA;AACA;AACA;AAEA;;AASA,SAAS+B,SAAT,CAAmBC,KAAnB,EAAoE;AAChE,MAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;AACA,MAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAwBH,IAA9B;AACA,MAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0BrC,+CAAQ,CAAC,EAAD,CAAxC;AACA,MAAM;AAAA,OAACsC,QAAD;AAAA,OAAWC;AAAX,MAA0BvC,+CAAQ,CAAC,KAAD,CAAxC;AACA,MAAMwC,QAAQ,GAAG5B,kEAAK,EAAtB;AACA,MAAM6B,UAAU,GAAG7B,kEAAK,EAAxB;;AACA,MAAM8B,oBAAoB,GAAIC,KAAD,IAA0C;AACnEN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAGA,MAAMC,gBAAgB;AAAA,iHAAG,aAAY;AACjC,YAAMf,OAAO,CAACgB,kBAAR,CACF5B,+GADE,EAEF,CAACc,IAAD,EAAOG,QAAQ,IAAI,EAAnB,CAFE,EAGF,IAHE,CAAN;AAKH,KANqB;;AAAA,oBAAhBU,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAOA,MAAMG,cAAc,GAAG,MAAMV,WAAW,CAAC,CAACD,QAAF,CAAxC;;AACA,MAAMY,WAAW,GAAG,CAAC,EAAEhB,KAAK,GAAGhB,qHAAV,CAArB;AACA,MAAMkC,YAAY,GACd,CAAChB,QAAD,IAAa,CAACc,WAAd,GAA4B,mBAA5B,GAAkDG,SADtD;AAGA,sBACI,iDAAC,mEAAD;AAAU,MAAE,EAAEb,QAAd;AAAwB,UAAM,MAA9B;AAA+B,WAAO,EAAES;AAAxC,kBACI,iDAAC,mEAAD;AAAc,WAAO,EAAEhB,IAAvB;AAA6B,aAAS,aAAWE;AAAjD,IADJ,EAEKG,QAAQ,iBACL,iHACI,iDAAC,mEAAD;AACI,MAAE,EAAEG,UADR;AAEI,SAAK,EAAEL,QAFX;AAGI,SAAK,EAAC,UAHV;AAII,aAAS,EAAE,IAJf;AAKI,QAAI,EAAC,UALT;AAMI,YAAQ,EAAE,CAACc,WANf;AAOI,cAAU,EAAEE,YAPhB;AAQI,YAAQ,EAAEV;AARd,IADJ,eAWI,iDAAC,2DAAD;AACI,WAAO,EAAC,WADZ;AAEI,SAAK,EAAC,SAFV;AAGI,YAAQ,EAAE,CAAC,CAACU,YAHhB;AAII,WAAO,EAAEN;AAJb,eAXJ,CAHR,CADJ;AA2BH;;AAED,SAASQ,aAAT,CAAuBxB,KAAvB,EAIG;AACC,MAAM;AAAEyB,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBzB,IAAAA;AAAjB,MAA6BD,KAAnC;AACA,MAAM;AAAA,OAAC2B,GAAD;AAAA,OAAMC;AAAN,MAAgB1D,+CAAQ,CAAe,EAAf,CAA9B;;AACA,MAAM2D,WAAW,GAAG,MAAMH,OAAO,CAAC,KAAD,CAAjC;;AACA,MAAMI,IAAI,GAAG,MAAM7B,OAAO,CAAC8B,YAAR,CAAqB1C,mGAArB,CAAnB;;AACA,MAAM4C,iBAAiB;AAAA,kHAAG,WAAMC,OAAN,EAAiB;AACvC,UAAMC,GAAG,SAASlC,OAAO,CAACmC,iBAAR,CAEhB/C,yHAFgB,EAES,2BAFT,CAAlB;AAGA,UAAI,CAAC6C,OAAO,EAAZ,EAAgB;AAEhB,UAAMI,MAAoB,GAAG9C,oFAAe,CAAC2C,GAAD,CAAf,CACxBI,GADwB,CACpB;AAAA,YAAC,CAACnC,KAAD,EAAQC,IAAR,EAAcmC,OAAd,EAAuBC,KAAvB,EAA8BtC,IAA9B,CAAD;AAAA,eAA0C;AAC3CC,UAAAA,KAD2C;AAE3CC,UAAAA,IAF2C;AAG3CmC,UAAAA,OAH2C;AAI3CC,UAAAA,KAJ2C;AAK3CtC,UAAAA;AAL2C,SAA1C;AAAA,OADoB,EAQxBuC,IARwB,CAQnB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtC,IAAF,GAASuC,CAAC,CAACvC,IARF,CAA7B;AASAuB,MAAAA,MAAM,CAACU,MAAM,IAAI,EAAX,CAAN;AACH,KAhBsB;;AAAA,oBAAjBL,iBAAiB;AAAA;AAAA;AAAA,KAAvB,CALD,CAuBC;;;AACArC,EAAAA,uEAAW,CAAC6B,IAAD,EAAOK,IAAP,EAAa,KAAb,EAAoB,CAAC7B,OAAD,CAApB,CAAX,CAxBD,CAyBC;;AACA,MAAM4C,iBAAiB,GAAGhD,qEAAQ,CAACI,OAAD,EAAUV,qHAAV,CAAlC;AACAtB,EAAAA,gDAAS,CACL,MAAM4E,iBAAiB,CAACE,SAAlB,CAA4BjD,4EAA5B,EAAmC,MAAMmC,iBAAzC,CADD,EAEL,CAACY,iBAAD,CAFK,CAAT;AAKA,sBACI,iDAAC,mEAAD;AACI,QAAI,EAAEpB,IADV;AAEI,aAAS,EAAE,IAFf;AAGI,YAAQ,EAAE,IAHd;AAII,WAAO,EAAEI;AAJb,kBAMI,iDAAC,mEAAD,qBACI,iDAAC,mEAAD,wCAEI,iDAAC,2DAAD;AACI,aAAS,EAAC,qBADd;AAEI,WAAO,EAAEC,IAFb;AAGI,SAAK,EAAC,MAHV;AAII,WAAO,EAAE;AAJb,kBAMI,iDAAC,4EAAD,OANJ,CAFJ,CADJ,eAYI,iDAAC,mEAAD,QACKH,GAAG,CAACY,GAAJ,CAAQS,EAAE,iBACP,iDAAC,SAAD;AAAW,OAAG,EAAEA,EAAE,CAAC7C,IAAnB;AAAyB,WAAO,EAAEF,OAAlC;AAA2C,QAAI,EAAE+C;AAAjD,IADH,CADL,CAZJ,CANJ,CADJ;AA2BH;;AAEc,SAASC,aAAT,CAAuBjD,KAAvB,EAAqD;AAChE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAM;AAAA,OAACyB,IAAD;AAAA,OAAOC;AAAP,MAAkBxD,+CAAQ,CAAC,KAAD,CAAhC;AAEA,MAAMgF,KAAK,GAAG,SAAd;AACA,MAAM;AAAEC,IAAAA;AAAF,MAAkBtE,4EAAc,CAACqE,KAAD,CAAtC;AACA,MAAME,eAAe,GAAGnD,OAAO,CAACoD,QAAR,CAAiB/D,yGAAjB,CAAxB;AACA,MAAMiE,OAAO,GAAGrE,wFAAoB,CAACkE,eAAD,EAAkBpD,KAAlB,CAApC;AACA,MAAMwD,iBAAiB,GAAGvD,OAAO,CAACoD,QAAR,CAAiB/D,6GAAjB,CAA1B;AACA,MAAMoE,SAAS,GAAGxE,wFAAoB,CAACsE,iBAAD,EAAoBxD,KAApB,CAAtC;AACA,MAAM2D,YAAY,GAAG1D,OAAO,CAACoD,QAAR,CAAiB/D,mGAAjB,CAArB;AACA,MAAM,CAACa,IAAD,IAAShB,4FAAwB,CAAWwE,YAAX,CAAvC;AACA,MAAME,iBAAiB,GAAG5D,OAAO,CAACoD,QAAR,CAAiB/D,6GAAjB,CAA1B;AACA,MAAM,CAACyE,EAAD,IAAO5E,4FAAwB,CAAe0E,iBAAf,CAArC;AACA,MAAMG,WAAW,GAAG/D,OAAO,CAACoD,QAAR,CAAiB/D,qGAAjB,CAApB;AACA,MAAM,CAAC4E,GAAD,IAAQ/E,4FAAwB,CAAe6E,WAAf,CAAtC;;AAEA,MAAMG,oBAAoB;AAAA,kHAAG,WAAOC,EAAP,EAAWC,OAAX,EAAgC;AACzD,UAAIA,OAAJ,EAAa;AACT,YAAI,CAACd,OAAL,EAAc,MAAMH,eAAe,CAACkB,gBAAhB,CAAiC,IAAjC,CAAN;AACd,cAAMrE,OAAO,CAACgB,kBAAR,CAA2B5B,6GAA3B,CAAN;AACH,OAHD,MAGO;AACH;AACA,cAAM+D,eAAe,CAACkB,gBAAhB,CAAiC,KAAjC,CAAN;AACH;AACJ,KARyB;;AAAA,oBAApBH,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AASA,MAAMK,eAAe,GAAG,MAAM9C,OAAO,CAAC,IAAD,CAArC;;AAEA,sBACI,iHACI,iDAAC,mEAAD;AACI,aAAS,MADb;AAEI,WAAO,EAAE,CAFb;AAGI,SAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAEC,WAAT;AAAsBsB,MAAAA,QAAQ,EAAE;AAAhC;AAHX,kBAKI,iDAAC,mEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,mEAAD;AAAY,aAAS,EAAC,MAAtB;AAA6B,WAAO,EAAC;AAArC,YADJ,CALJ,eAUI,iDAAC,mEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,oEAAD;AACI,WAAO,EAAElB,OAAO,IAAIG,SADxB;AAEI,YAAQ,EAAES,oBAFd;AAGI,YAAQ,EAAEZ,OAAO,KAAKhC,SAH1B;AAII,SAAK,EACDmC,SAAS,GACHvD,IAAI,IAAI,WADL,GAEHoD,OAAO,GACP,MADO,GAEP;AATd,IADJ,eAaI,iDAAC,0EAAD;AACI,SAAK,EAAC,gBADV;AAEI,WAAO,EAAEiB;AAFb,kBAII,iDAAC,6EAAD,OAJJ,CAbJ,CAVJ,EA8BKT,EAAE,IACEG,GAAG,iBACA,iDAAC,mEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,KACKH,EAAE,iBAAI,iDAAC,mEAAD;AAAM,SAAK,EAAEtE,0EAAK,CAACsE,EAAD;AAAlB,IADX,EAEKG,GAAG,iBAAI,iDAAC,mEAAD;AAAM,SAAK,YAAUzE,0EAAK,CAACyE,GAAD;AAA1B,IAFZ,CAhCZ,CADJ,eAuCI,iDAAC,aAAD;AAAe,QAAI,EAAEzC,IAArB;AAA2B,WAAO,EAAEC,OAApC;AAA6C,WAAO,EAAEzB;AAAtD,IAvCJ,CADJ;AA2CH;;;;;;;;;;;;;;;;ACxOD;AACA;AAEe,SAASN,eAAT,CACXK,KADW,EAEb;AACE,MAAM;AAAE4E,IAAAA;AAAF,MAAqB5E,KAA3B;AAAA,MAAkB6E,IAAlB,2GAA2B7E,KAA3B;;AACA,sBAAO,iDAAC,kEAAD;AAAkB,WAAO,eAAE,iDAAC,kEAAD,EAAY6E,IAAZ,CAA3B;AAAiD,SAAK,EAAED;AAAxD,IAAP;AACH","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./src/components/dashboard/DashboardWifi.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import React, { ChangeEvent, useEffect, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    Chip,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    List,\n    ListItem,\n    ListItemText,\n    TextField,\n    Typography,\n} from \"@material-ui/core\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { useId } from \"react-use-id-hook\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport CmdButton from \"../CmdButton\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport {\n    WifiAPFlags,\n    WifiCmd,\n    WifiReg,\n    WifiEvent,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { arrayConcatMany, toHex } from \"../../../jacdac-ts/src/jdom/utils\"\nimport RefreshIcon from \"@material-ui/icons/Refresh\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useInterval from \"../hooks/useInterval\"\nimport useEvent from \"../hooks/useEvent\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\nimport { EVENT } from \"../../../jacdac-ts/src/jdom/constants\"\ninterface ScanResult {\n    flags: WifiAPFlags\n    rssi: number\n    channel: number\n    bssid: Uint8Array\n    ssid: string\n}\n\nfunction ConnectAp(props: { service: JDService; info: ScanResult }) {\n    const { service, info } = props\n    const { ssid, flags, rssi } = info\n    const [password, setPassword] = useState(\"\")\n    const [selected, setSelected] = useState(false)\n    const selectId = useId()\n    const passwordId = useId()\n    const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.target.value)\n    }\n    const handleAddNetwork = async () => {\n        await service.sendCmdPackedAsync<[string, string]>(\n            WifiCmd.AddNetwork,\n            [ssid, password || \"\"],\n            true\n        )\n    }\n    const toggleSelected = () => setSelected(!selected)\n    const hasPassword = !!(flags & WifiAPFlags.HasPassword)\n    const connectError =\n        !password && !hasPassword ? \"password required\" : undefined\n\n    return (\n        <ListItem id={selectId} button onClick={toggleSelected}>\n            <ListItemText primary={ssid} secondary={`rssi: ${rssi}`} />\n            {selected && (\n                <>\n                    <TextField\n                        id={passwordId}\n                        value={password}\n                        label=\"Password\"\n                        fullWidth={true}\n                        type=\"password\"\n                        required={!hasPassword}\n                        helperText={connectError}\n                        onChange={handlePasswordChange}\n                    />\n                    <CmdButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!!connectError}\n                        onClick={handleAddNetwork}\n                    >\n                        Connect\n                    </CmdButton>\n                </>\n            )}\n        </ListItem>\n    )\n}\n\nfunction ConnectDialog(props: {\n    open: boolean\n    setOpen: (v: boolean) => void\n    service: JDService\n}) {\n    const { open, setOpen, service } = props\n    const [aps, setAps] = useState<ScanResult[]>([])\n    const handleClose = () => setOpen(false)\n    const scan = () => service.sendCmdAsync(WifiCmd.Scan)\n    const updateScanResults = async mounted => {\n        const res = await service.receiveWithInPipe<\n            [WifiAPFlags, number, number, Uint8Array, string][]\n        >(WifiCmd.LastScanResults, \"u32 x[4] i8 u8 b[6] s[33]\")\n        if (!mounted()) return\n\n        const newAps: ScanResult[] = arrayConcatMany(res)\n            .map(([flags, rssi, channel, bssid, ssid]) => ({\n                flags,\n                rssi,\n                channel,\n                bssid,\n                ssid,\n            }))\n            .sort((l, r) => l.rssi - r.rssi)\n        setAps(newAps || [])\n    }\n\n    // keep scanning\n    useInterval(open, scan, 30000, [service])\n    // refresh on scan update\n    const scanCompleteEvent = useEvent(service, WifiEvent.ScanComplete)\n    useEffect(\n        () => scanCompleteEvent.subscribe(EVENT, () => updateScanResults),\n        [scanCompleteEvent]\n    )\n\n    return (\n        <Dialog\n            open={open}\n            fullWidth={true}\n            maxWidth={\"lg\"}\n            onClose={handleClose}\n        >\n            <DialogContent>\n                <DialogTitle>\n                    Connect to Wifi\n                    <CmdButton\n                        trackName=\"dashboard.wifi.scan\"\n                        onClick={scan}\n                        title=\"scan\"\n                        autoRun={true}\n                    >\n                        <RefreshIcon />\n                    </CmdButton>\n                </DialogTitle>\n                <List>\n                    {aps.map(ap => (\n                        <ConnectAp key={ap.ssid} service={service} info={ap} />\n                    ))}\n                </List>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default function DashboardWifi(props: DashboardServiceProps) {\n    const { service } = props\n    const [open, setOpen] = useState(false)\n\n    const color = \"primary\"\n    const { textPrimary } = useWidgetTheme(color)\n    const enabledRegister = service.register(WifiReg.Enabled)\n    const enabled = useRegisterBoolValue(enabledRegister, props)\n    const connectedRegister = service.register(WifiReg.Connected)\n    const connected = useRegisterBoolValue(connectedRegister, props)\n    const ssidRegister = service.register(WifiReg.Ssid)\n    const [ssid] = useRegisterUnpackedValue<[string]>(ssidRegister)\n    const ipAddressRegister = service.register(WifiReg.IpAddress)\n    const [ip] = useRegisterUnpackedValue<[Uint8Array]>(ipAddressRegister)\n    const macRegister = service.register(WifiReg.Eui48)\n    const [mac] = useRegisterUnpackedValue<[Uint8Array]>(macRegister)\n\n    const handleEnabledChecked = async (ev, checked: boolean) => {\n        if (checked) {\n            if (!enabled) await enabledRegister.sendSetBoolAsync(true)\n            await service.sendCmdPackedAsync(WifiCmd.Reconnect)\n        } else {\n            // shut off\n            await enabledRegister.sendSetBoolAsync(false)\n        }\n    }\n    const handleConfigure = () => setOpen(true)\n\n    return (\n        <>\n            <Grid\n                container\n                spacing={1}\n                style={{ color: textPrimary, minWidth: \"16rem\" }}\n            >\n                <Grid item xs={12}>\n                    <Typography component=\"span\" variant=\"subtitle2\">\n                        Wifi\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <SwitchWithLabel\n                        checked={enabled && connected}\n                        onChange={handleEnabledChecked}\n                        disabled={enabled === undefined}\n                        label={\n                            connected\n                                ? ssid || \"connected\"\n                                : enabled\n                                ? \"idle\"\n                                : \"...\"\n                        }\n                    />\n                    <IconButtonWithTooltip\n                        title=\"Configure wifi\"\n                        onClick={handleConfigure}\n                    >\n                        <SettingsIcon />\n                    </IconButtonWithTooltip>\n                </Grid>\n                {ip ||\n                    (mac && (\n                        <Grid item xs={12}>\n                            {ip && <Chip label={toHex(ip)} />}\n                            {mac && <Chip label={`MAC: ${toHex(mac)}`} />}\n                        </Grid>\n                    ))}\n            </Grid>\n            <ConnectDialog open={open} setOpen={setOpen} service={service} />\n        </>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: { label: ReactNode } & SwitchProps\n) {\n    const { label, ...rest } = props\n    return <FormControlLabel control={<Switch {...rest} />} label={label} />\n}\n"],"names":["React","useEffect","useState","Chip","Dialog","DialogContent","DialogTitle","Grid","List","ListItem","ListItemText","TextField","Typography","useWidgetTheme","useId","SettingsIcon","IconButtonWithTooltip","CmdButton","useRegisterBoolValue","useRegisterUnpackedValue","WifiAPFlags","WifiCmd","WifiReg","WifiEvent","arrayConcatMany","toHex","RefreshIcon","SwitchWithLabel","useInterval","useEvent","EVENT","ConnectAp","props","service","info","ssid","flags","rssi","password","setPassword","selected","setSelected","selectId","passwordId","handlePasswordChange","event","target","value","handleAddNetwork","sendCmdPackedAsync","AddNetwork","toggleSelected","hasPassword","HasPassword","connectError","undefined","ConnectDialog","open","setOpen","aps","setAps","handleClose","scan","sendCmdAsync","Scan","updateScanResults","mounted","res","receiveWithInPipe","LastScanResults","newAps","map","channel","bssid","sort","l","r","scanCompleteEvent","ScanComplete","subscribe","ap","DashboardWifi","color","textPrimary","enabledRegister","register","Enabled","enabled","connectedRegister","Connected","connected","ssidRegister","Ssid","ipAddressRegister","IpAddress","ip","macRegister","Eui48","mac","handleEnabledChecked","ev","checked","sendSetBoolAsync","Reconnect","handleConfigure","minWidth","FormControlLabel","Switch","label","rest"],"sourceRoot":""}