{"version":3,"file":"component---src-pages-tools-hid-events-tsx-f5bb899c0f99fb3c2707.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/core-js/internals/html.js","webpack://jacdac-docs/./node_modules/core-js/internals/iterators.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-create.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-define-properties.js","webpack://jacdac-docs/./node_modules/core-js/internals/object-keys.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/clients/settingsclient.ts","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts","webpack://jacdac-docs/./src/pages/tools/hid-events.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nvar cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disableSpacing\n  } = ownerState;\n  var slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nvar CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(_ref => {\n  var {\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  }, !ownerState.disableSpacing && {\n    '& > :not(:first-of-type)': {\n      marginLeft: 8\n    }\n  });\n});\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  var {\n    disableSpacing = false,\n    className\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default CardActions;","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = {};\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","import { CHANGE, SettingsCmd } from \"../constants\"\nimport { jdpack, jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport { InPipeReader } from \"../pipes\"\nimport JDService from \"../service\"\nimport { JDServiceClient } from \"../serviceclient\"\nimport { bufferToString, stringToBuffer } from \"../utils\"\n\n/**\n * A settings service client implementation.\n * @category Clients\n */\nexport class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear)\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.ListKeys),\n            true\n        )\n        const { output } = await inp.readAll()\n        const keys = output.map(pkt => pkt.stringData)\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string; value?: Uint8Array }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.List),\n            true\n        )\n        const { output } = await inp.readAll()\n        return output\n            .map(pkt => {\n                const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n                return key && { key, value }\n            })\n            .filter(kv => !!kv)\n    }\n\n    async setValue(key: string, value: Uint8Array) {\n        key = key.trim()\n        if (value === undefined) {\n            await this.deleteValue(key)\n        } else {\n            const pkt = Packet.from(\n                SettingsCmd.Set,\n                jdpack(\"z b\", [key, value])\n            )\n            await this.service.sendPacketAsync(pkt)\n            this.emit(CHANGE)\n        }\n    }\n\n    async setStringValue(key: string, value: string) {\n        await this.setValue(key, value ? stringToBuffer(value) : undefined)\n    }\n\n    async getValue(key: string): Promise<Uint8Array> {\n        if (!key) return undefined\n\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]))\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt)\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\")\n        if (key !== rkey) {\n            console.error(\n                `device returned different key, got \"${rkey}\", expected \"${key}\"`\n            )\n            return undefined\n        }\n        return value\n    }\n\n    async getStringValue(key: string) {\n        const value = await this.getValue(key)\n        return value && bufferToString(value)\n    }\n\n    async deleteValue(key: string) {\n        if (!key) return\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]))\n        await this.service.sendPacketAsync(pkt)\n\n        this.emit(CHANGE)\n    }\n}\nexport default SettingsClient\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@mui/material\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import {\n    ControlReg,\n    JD_SERVICE_INDEX_CTRL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Grid, Typography } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useChange from \"../../jacdac/useChange\"\nimport useRegister from \"../hooks/useRegister\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const control = useChange(device, _ => _?.service(JD_SERVICE_INDEX_CTRL))\n    const productIdentifierRegister = useRegister(\n        control,\n        ControlReg.ProductIdentifier\n    )\n    const [productIdentifier] = useRegisterUnpackedValue<[number]>(\n        productIdentifierRegister\n    )\n    const firmwareVersionRegister = useRegister(\n        control,\n        ControlReg.FirmwareVersion\n    )\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n    if (firmwareVersion == undefined) return null\n\n    const firmwareName =\n        !!productIdentifier &&\n        specification?.firmwares?.find(\n            fw => fw.productIdentifier === productIdentifier\n        )?.name\n\n    return (\n        <Chip\n            size=\"small\"\n            label={[firmwareName, firmwareVersion].filter(f => !!f).join(\" \")}\n        />\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.McuTemperature)\n    )\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    if (isNaN(temperature)) return null\n    return <Chip size=\"small\" label={`${temperature}°`} />\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        underline=\"hover\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Typography variant=\"caption\" gutterBottom>\n                                {[\n                                    specification?.name,\n                                    showDeviceId && device.deviceId,\n                                ]\n                                    .filter(s => !!s)\n                                    .join(\", \")}\n                            </Typography>\n                        </Grid>\n                        {showFirmware && (\n                            <Grid item>\n                                <DeviceFirmwareVersionChip device={device} />\n                            </Grid>\n                        )}\n                        {showTemperature && (\n                            <Grid item>\n                                <DeviceTemperatureChip device={device} />\n                            </Grid>\n                        )}\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","import { useContext } from \"react\"\nimport DeviceFilter from \"../../../jacdac-ts/src/jdom/filters/devicefilter\"\nimport ServiceFilter from \"../../../jacdac-ts/src/jdom/filters/servicefilter\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, _ => _?.services(options) || [], [\n        JSON.stringify(options),\n    ])\n    return services\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}-hr`,\n    start: `${PREFIX}-start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import { GridSize } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize\n    md?: GridSize\n    sm?: GridSize\n    lg?: GridSize\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(\n    itemCount?: number\n): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n    const hasDrawer = drawerType !== DrawerType.None\n\n    if (!drawerType && itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2:\n                return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3:\n                return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (hasDrawer) return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else\n        return {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            xl: 3,\n        }\n}\n","import { useEffect, useState } from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(\n    service: JDService,\n    factory: (service: JDService) => T,\n    deps: React.DependencyList = []\n) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client\n}\n","import React, {\n    lazy,\n    useCallback,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Dialog,\n    DialogContent,\n    Grid,\n    Typography,\n} from \"@mui/material\"\nimport useChange from \"../../jacdac/useChange\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    HidKeyboardModifiers,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n    SystemEvent,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport KeyboardKeyInput from \"../../components/ui/KeyboardKeyInput\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport SettingsClient from \"../../../jacdac-ts/src/jdom/clients/settingsclient\"\nimport useServiceClient from \"../../components/useServiceClient\"\nimport {\n    arrayConcatMany,\n    clone,\n    fromHex,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport { jdpack, jdunpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { randomDeviceId } from \"../../../jacdac-ts/src/jdom/random\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport useServices from \"../../components/hooks/useServices\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport Alert from \"../../components/ui/Alert\"\nimport GridHeader from \"../../components/ui/GridHeader\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\nimport AppContext from \"../../components/AppContext\"\nimport { AlertTitle } from \"@mui/material\"\nimport { renderKeyboardKey } from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nimport DialogTitleWithClose from \"../../components/ui/DialogTitleWithClose\"\nconst ImportButton = lazy(() => import(\"../../components/ImportButton\"))\n\n// all settings keys are prefixed with this string\nconst PREFIX = \"@ke_\"\n// data layout format (18bytes)\nconst FORMAT = \"b[8] u32 u8 u8 u16 u16\"\n// data layout types\ntype FORMAT_TYPE = [Uint8Array, number, number, number, number, number]\n\ninterface HIDEvent {\n    key?: string\n    eventId: string\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nfunction HIDEventToBuffer(event: JDEvent, ev: HIDEvent) {\n    const deviceId = fromHex(event.service.device.deviceId)\n    const { service, code } = event\n    const { serviceClass, serviceIndex } = service\n    const { selector, modifiers } = ev\n    const payload = jdpack<FORMAT_TYPE>(FORMAT, [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        code,\n        selector,\n        modifiers,\n    ])\n    return payload\n}\n\nfunction bufferToHIDEvent(key: string, data: Uint8Array, bus: JDBus): HIDEvent {\n    if (data?.length !== 18) return undefined\n    const [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        eventCode,\n        selector,\n        modifiers,\n    ] = jdunpack<FORMAT_TYPE>(data, FORMAT)\n    const deviceIds = toHex(deviceId)\n    const device = bus.device(deviceIds, true)\n    const event = device?.service(serviceIndex)?.event(eventCode)\n\n    if (!event || event.service.serviceClass !== serviceClass) return undefined\n    return {\n        key,\n        eventId: event.id,\n        selector,\n        modifiers,\n    }\n}\n\nfunction SelectHIDEvent(props: { onAdd: (hidEvent: HIDEvent) => void }) {\n    const { onAdd } = props\n    const [event, setEvent] = useState<JDEvent>()\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n\n    const excludedServices = [\n        SRV_CONTROL,\n        SRV_PROTO_TEST,\n        SRV_ROLE_MANAGER,\n        SRV_SETTINGS,\n        SRV_LOGGER,\n    ]\n    const eventFilter = (ev: JDEvent) =>\n        ev.code !== SystemEvent.StatusCodeChanged\n    const services = useServices({\n        ignoreInfrastructure: true,\n        specification: true,\n    })\n        .filter(srv => excludedServices.indexOf(srv.serviceClass) < 0)\n        .filter(srv => srv.events.some(eventFilter))\n    const events = arrayConcatMany(\n        services.map(service => service.events.filter(eventFilter))\n    )\n\n    const handleClickEvent = (newEvent: JDEvent) => () =>\n        setEvent(event === newEvent ? undefined : newEvent)\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n    const disabled = !event || !selector\n    const handleAdd = () => onAdd({ eventId: event.id, selector, modifiers })\n\n    return (\n        <Grid container spacing={2}>\n            {!events?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        Connect your devices to bind keyboard commands.\n                    </Alert>\n                </Grid>\n            )}\n            {events\n                .filter(ev => !event || ev === event)\n                .map(ev => (\n                    <Grid item xs={12} sm={6} lg={4} xl={3} key={ev.id}>\n                        <Card>\n                            <DeviceCardHeader\n                                device={ev.service.device}\n                                showAvatar={true}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\">\n                                    {ev.service.name}\n                                </Typography>\n                                <Typography variant=\"h4\">\n                                    {humanify(ev.name)}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button\n                                    onClick={handleClickEvent(ev)}\n                                    variant={\"outlined\"}\n                                >\n                                    {ev === event ? \"unselect\" : \"select\"}\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            {event && (\n                <>\n                    <GridHeader title=\"Enter your keyboard/mouse command\" />\n                    <Grid item xs={12}>\n                        <KeyboardKeyInput\n                            selector={selector}\n                            modifiers={modifiers}\n                            onChange={handleKeyChange}\n                        />\n                    </Grid>\n                </>\n            )}\n            {!disabled && (\n                <>\n                    <GridHeader title=\"Save your binding\" />\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={disabled}\n                            onClick={handleAdd}\n                        >\n                            Save binding\n                        </Button>\n                    </Grid>\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function HIDEvents() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const settingsServices = useServices({ serviceClass: SRV_SETTINGS })\n    const [settingsService, setSettingsService] = useState<JDService>()\n    const [hidEvents, setHIDEvents] = useState<HIDEvent[]>([])\n    const [open, setOpen] = useState(false)\n    const gridBreakpoints = useGridBreakpoints()\n    const exportRef = useRef()\n\n    const handleOpenAdd = () => setOpen(true)\n    const handleCloseAdd = () => setOpen(false)\n\n    const factory = useCallback(srv => new SettingsClient(srv), [])\n    const settings = useServiceClient(settingsService, factory)\n\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    useChange(settings, async () => {\n        const hes: HIDEvent[] = []\n        if (settings) {\n            const all = await settings.list()\n            for (const kv of all.filter(entry =>\n                entry.key?.startsWith(PREFIX)\n            )) {\n                const { key, value } = kv\n                const he = bufferToHIDEvent(key, value, bus)\n                if (he) hes.push(he)\n            }\n        }\n        if (JSON.stringify(hes) !== JSON.stringify(hidEvents)) setHIDEvents(hes)\n    })\n    const handleAdd = async (hidEvent: HIDEvent) => {\n        setOpen(false)\n\n        const event = bus.node(hidEvent.eventId) as JDEvent\n        if (!event) return\n\n        const payload = HIDEventToBuffer(event, hidEvent)\n        settings.setValue(PREFIX + randomDeviceId(), payload)\n    }\n    const handleRemoveBinding = (index: number) => () => {\n        const { key } = hidEvents[index]\n        if (key) settings.deleteValue(key)\n    }\n    const handleSelectSettingsService = (service: JDService) => () =>\n        setSettingsService(settingsService === service ? undefined : service)\n\n    const exportUri =\n        hidEvents &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            JSON.stringify(\n                clone(hidEvents).map(h => {\n                    delete h.key\n                    return h\n                })\n            )\n        )}`\n    useEffect(() => {\n        if (exportRef.current)\n            (exportRef.current as HTMLAnchorElement).download = \"bindings.json\"\n    }, [exportRef.current])\n    const handleFilesUploaded = async (files: File[]) => {\n        for (const file of files) {\n            try {\n                const text = await file.text()\n                const json = JSON.parse(text)\n                if (Array.isArray(json)) {\n                    for (const hidEvent of json as HIDEvent[]) {\n                        const event = bus.node(hidEvent.eventId) as JDEvent\n                        if (event) {\n                            const payload = HIDEventToBuffer(event, hidEvent)\n                            settings.setValue(\n                                PREFIX + randomDeviceId(),\n                                payload\n                            )\n                        }\n                    }\n                }\n            } catch (e) {\n                console.warn(e)\n                setError(`invalid file ${file.name}`)\n            }\n        }\n    }\n    return (\n        <>\n            <h1>Accessibility Adapter</h1>\n            <Grid container spacing={1}>\n                <GridHeader title=\"Select an adapter\" />\n                {!settingsServices?.length && (\n                    <Grid item xs>\n                        <ConnectAlert serviceClass={SRV_SETTINGS} />\n                    </Grid>\n                )}\n                {settingsServices\n                    .filter(srv => !settingsService || srv === settingsService)\n                    .map(srv => (\n                        <Grid item key={srv.id} {...gridBreakpoints}>\n                            <Card>\n                                <DeviceCardHeader\n                                    device={srv.device}\n                                    showAvatar={true}\n                                    showMedia={true}\n                                />\n                                <CardActions>\n                                    <Button\n                                        variant={\"outlined\"}\n                                        onClick={handleSelectSettingsService(\n                                            srv\n                                        )}\n                                    >\n                                        {settingsService === srv\n                                            ? \"unselect\"\n                                            : \"select\"}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                {settings && (\n                    <>\n                        <GridHeader title=\"Command Bindings\" />\n                        {!hidEvents?.length && (\n                            <Grid item xs>\n                                <Alert severity=\"info\">\n                                    No bindings yet! Click{\" \"}\n                                    <strong>Add binding</strong> to start\n                                    building your adapter.\n                                </Alert>\n                            </Grid>\n                        )}\n                        {hidEvents\n                            ?.map(({ eventId, selector, modifiers }) => ({\n                                eventId,\n                                event: bus.node(eventId) as JDEvent,\n                                selector,\n                                modifiers,\n                            }))\n                            .map(\n                                (\n                                    { eventId, event, selector, modifiers },\n                                    index\n                                ) => (\n                                    <Grid\n                                        item\n                                        {...gridBreakpoints}\n                                        key={eventId}\n                                    >\n                                        <Card>\n                                            <DeviceCardHeader\n                                                device={event?.service.device}\n                                                showAvatar={true}\n                                            />\n                                            <CardContent>\n                                                {event ? (\n                                                    <Typography variant=\"h6\">\n                                                        {`${\n                                                            event.service.name\n                                                        } ${humanify(\n                                                            event.name\n                                                        )}`}\n                                                    </Typography>\n                                                ) : (\n                                                    <Alert severity=\"warning\">\n                                                        <AlertTitle>\n                                                            Device not found\n                                                        </AlertTitle>\n                                                    </Alert>\n                                                )}\n\n                                                <Typography variant=\"h5\">\n                                                    {renderKeyboardKey(\n                                                        selector,\n                                                        modifiers,\n                                                        true\n                                                    )}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <IconButtonWithTooltip\n                                                    title={\"Remove binding\"}\n                                                    onClick={handleRemoveBinding(\n                                                        index\n                                                    )}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButtonWithTooltip>\n                                            </CardActions>\n                                        </Card>\n                                    </Grid>\n                                )\n                            )}\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleOpenAdd}\n                                    >\n                                        Add binding\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        ref={exportRef}\n                                        variant=\"outlined\"\n                                        href={exportUri}\n                                    >\n                                        Export\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Suspense>\n                                        <ImportButton\n                                            icon={false}\n                                            text=\"Import\"\n                                            onFilesUploaded={\n                                                handleFilesUploaded\n                                            }\n                                            acceptedFiles={[\"application/json\"]}\n                                        />\n                                    </Suspense>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n            <Dialog\n                open={open}\n                onClose={handleCloseAdd}\n                maxWidth={\"lg\"}\n                fullWidth={true}\n            >\n                <DialogTitleWithClose onClose={handleCloseAdd}>\n                    Add binding\n                </DialogTitleWithClose>\n                <DialogContent>\n                    <SelectHIDEvent onAdd={handleAdd} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n"],"names":["CHANGE","SettingsCmd","jdpack","jdunpack","Packet","InPipeReader","JDServiceClient","bufferToString","stringToBuffer","SettingsClient","service","registersUseAcks","clear","sendCmdAsync","Clear","listKeys","inp","bus","sendPacketAsync","openCommand","ListKeys","output","readAll","keys","map","pkt","stringData","filter","k","list","List","key","value","kv","setValue","trim","undefined","deleteValue","from","Set","emit","setStringValue","getValue","Get","resp","sendCmdAwaitResponseAsync","rkey","data","console","error","getStringValue","Delete","Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","ConnectButtons","useDevices","NoSsrConnectAlert","props","serviceClass","closeable","transports","devices","ignoreInfrastructure","spec","length","name","ConnectAlert","useDeviceSpecification","useDeviceImage","CardMediaWithSkeleton","DeviceCardMedia","device","specification","imageUrl","ControlReg","JD_SERVICE_INDEX_CTRL","CardHeader","Chip","Grid","Typography","Link","useRegisterUnpackedValue","DeviceActions","DeviceName","identifierToUrlPath","DeviceAvatar","useChange","useRegister","DeviceFirmwareVersionChip","control","_","productIdentifierRegister","ProductIdentifier","productIdentifier","firmwareVersionRegister","FirmwareVersion","firmwareVersion","firmwareName","firmwares","find","fw","f","join","DeviceTemperatureChip","tempRegister","register","McuTemperature","temperature","isNaN","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","showSettings","showReset","id","deviceId","s","useServices","options","services","JSON","stringify","styled","clsx","PREFIX","classes","hr","start","StyledGrid","theme","background","palette","text","disabled","marginBottom","width","spacing","GridHeader","title","count","variant","action","AppContext","DrawerType","useGridBreakpoints","itemCount","drawerType","hasDrawer","None","xs","sm","md","lg","xl","useEffect","useState","useServiceClient","factory","deps","client","setClient","c","unmount","lazy","useCallback","useRef","Card","CardActions","CardContent","Dialog","DialogContent","HidKeyboardModifiers","SRV_CONTROL","SRV_LOGGER","SRV_PROTO_TEST","SRV_ROLE_MANAGER","SRV_SETTINGS","SystemEvent","KeyboardKeyInput","IconButtonWithTooltip","DeleteIcon","arrayConcatMany","clone","fromHex","toHex","randomDeviceId","Button","humanify","Suspense","useServiceProviderFromServiceClass","AlertTitle","renderKeyboardKey","DialogTitleWithClose","ImportButton","FORMAT","HIDEventToBuffer","event","ev","code","serviceIndex","selector","modifiers","payload","bufferToHIDEvent","eventCode","deviceIds","eventId","SelectHIDEvent","onAdd","setEvent","setSelector","setModifiers","excludedServices","eventFilter","StatusCodeChanged","srv","indexOf","events","some","handleClickEvent","newEvent","handleKeyChange","newSelector","newModifiers","handleAdd","HIDEvents","setError","settingsServices","settingsService","setSettingsService","hidEvents","setHIDEvents","open","setOpen","gridBreakpoints","exportRef","handleOpenAdd","handleCloseAdd","settings","hes","all","entry","startsWith","he","push","hidEvent","node","handleRemoveBinding","index","handleSelectSettingsService","exportUri","encodeURIComponent","h","current","download","handleFilesUploaded","files","file","json","parse","Array","isArray","e","warn"],"sourceRoot":""}