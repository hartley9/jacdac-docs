(self["webpackChunkjacdac_docs"] = self["webpackChunkjacdac_docs"] || []).push([[2143],{

/***/ 81506:
/***/ (function(module) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ 67154:
/***/ (function(module) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _extends.apply(this, arguments);
}

module.exports = _extends;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ 85354:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(99489);

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  setPrototypeOf(subClass, superClass);
}

module.exports = _inheritsLoose;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ 95318:
/***/ (function(module) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ 37316:
/***/ (function(module) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ 99489:
/***/ (function(module) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ 99015:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ emotion_cache_browser_esm; }
});

;// CONCATENATED MODULE: ./node_modules/@emotion/cache/node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */


  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}

function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);

  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }

  tag.appendChild(document.createTextNode(''));
  tag.setAttribute('data-s', '');
  return tag;
}

var StyleSheet = /*#__PURE__*/function () {
  function StyleSheet(options) {
    var _this = this;

    this._insertTag = function (tag) {
      var before;

      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }

      _this.container.insertBefore(tag, before);

      _this.tags.push(tag);
    };

    this.isSpeedy = options.speedy === undefined ? "production" === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }

  var _proto = StyleSheet.prototype;

  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };

  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }

    var tag = this.tags[this.tags.length - 1];

    if (false) { var isImportRule; }

    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);

      try {
        // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (false) {}
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }

    this.ctr++;
  };

  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;

    if (false) {}
  };

  return StyleSheet;
}();


// EXTERNAL MODULE: ./node_modules/stylis/src/Tokenizer.js
var Tokenizer = __webpack_require__(31062);
// EXTERNAL MODULE: ./node_modules/stylis/src/Utility.js
var Utility = __webpack_require__(97801);
// EXTERNAL MODULE: ./node_modules/stylis/src/Middleware.js + 1 modules
var Middleware = __webpack_require__(22443);
// EXTERNAL MODULE: ./node_modules/stylis/src/Serializer.js
var Serializer = __webpack_require__(97750);
// EXTERNAL MODULE: ./node_modules/stylis/src/Parser.js
var Parser = __webpack_require__(80071);
;// CONCATENATED MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js





var last = function last(arr) {
  return arr.length ? arr[arr.length - 1] : null;
}; // based on https://github.com/thysultan/stylis.js/blob/e6843c373ebcbbfade25ebcc23f540ed8508da0a/src/Tokenizer.js#L239-L244


var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
  var previous = 0;
  var character = 0;

  while (true) {
    previous = character;
    character = (0,Tokenizer/* peek */.fj)(); // &\f

    if (previous === 38 && character === 12) {
      points[index] = 1;
    }

    if ((0,Tokenizer/* token */.r)(character)) {
      break;
    }

    (0,Tokenizer/* next */.lp)();
  }

  return (0,Tokenizer/* slice */.tP)(begin, Tokenizer/* position */.FK);
};

var toRules = function toRules(parsed, points) {
  // pretend we've started with a comma
  var index = -1;
  var character = 44;

  do {
    switch ((0,Tokenizer/* token */.r)(character)) {
      case 0:
        // &\f
        if (character === 38 && (0,Tokenizer/* peek */.fj)() === 12) {
          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
          // and when it should just concatenate the outer and inner selectors
          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
          points[index] = 1;
        }

        parsed[index] += identifierWithPointTracking(Tokenizer/* position */.FK - 1, points, index);
        break;

      case 2:
        parsed[index] += (0,Tokenizer/* delimit */.iF)(character);
        break;

      case 4:
        // comma
        if (character === 44) {
          // colon
          parsed[++index] = (0,Tokenizer/* peek */.fj)() === 58 ? '&\f' : '';
          points[index] = parsed[index].length;
          break;
        }

      // fallthrough

      default:
        parsed[index] += (0,Utility/* from */.Dp)(character);
    }
  } while (character = (0,Tokenizer/* next */.lp)());

  return parsed;
};

var getRules = function getRules(value, points) {
  return (0,Tokenizer/* dealloc */.cE)(toRules((0,Tokenizer/* alloc */.un)(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11


var fixedElements = /* #__PURE__ */new WeakMap();

var compat = function compat(element) {
  if (element.type !== 'rule' || !element.parent || // .length indicates if this rule contains pseudo or not
  !element.length) {
    return;
  }

  var value = element.value,
      parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;

  while (parent.type !== 'rule') {
    parent = parent.parent;
    if (!parent) return;
  } // short-circuit for the simplest case


  if (element.props.length === 1 && value.charCodeAt(0) !== 58
  /* colon */
  && !fixedElements.get(parent)) {
    return;
  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"


  if (isImplicitRule) {
    return;
  }

  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;

  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};

var removeLabel = function removeLabel(element) {
  if (element.type === 'decl') {
    var value = element.value;

    if ( // charcode for l
    value.charCodeAt(0) === 108 && // charcode for b
    value.charCodeAt(2) === 98) {
      // this ignores label
      element["return"] = '';
      element.value = '';
    }
  }
};

var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';

var isIgnoringComment = function isIgnoringComment(element) {
  return !!element && element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
};

var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
  return function (element, index, children) {
    if (element.type !== 'rule') return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);

    if (unsafePseudoClasses && cache.compat !== true) {
      var prevElement = index > 0 ? children[index - 1] : null;

      if (prevElement && isIgnoringComment(last(prevElement.children))) {
        return;
      }

      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
      });
    }
  };
};

var isImportRule = function isImportRule(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};

var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
  for (var i = index - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }

  return false;
}; // use this to remove incorrect elements from further processing
// so they don't get handed to the `sheet` (or anything else)
// as that could potentially lead to additional logs which in turn could be overhelming to the user


var nullifyElement = function nullifyElement(element) {
  element.type = '';
  element.value = '';
  element["return"] = '';
  element.children = '';
  element.props = '';
};

var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
  if (!isImportRule(element)) {
    return;
  }

  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};

var defaultStylisPlugins = [Middleware/* prefixer */.Ji];

var createCache = function createCache(options) {
  var key = options.key;

  if (false) {}

  if (key === 'css') {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
    // note this very very intentionally targets all style elements regardless of the key to ensure
    // that creating a cache works inside of render of a React component

    Array.prototype.forEach.call(ssrStyles, function (node) {
      // we want to only move elements which have a space in the data-emotion attribute value
      // because that indicates that it is an Emotion 11 server-side rendered style elements
      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
      // will not result in the Emotion 10 styles being destroyed
      var dataEmotionAttribute = node.getAttribute('data-emotion');

      if (dataEmotionAttribute.indexOf(' ') === -1) {
        return;
      }

      document.head.appendChild(node);
      node.setAttribute('data-s', '');
    });
  }

  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;

  if (false) {}

  var inserted = {}; // $FlowFixMe

  var container;
  var nodesToHydrate = [];
  {
    container = options.container || document.head;
    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }

      nodesToHydrate.push(node);
    });
  }

  var _insert;

  var omnipresentPlugins = [compat, removeLabel];

  if (false) {}

  {
    var currentSheet;
    var finalizingPlugins = [Serializer/* stringify */.P,  false ? 0 : (0,Middleware/* rulesheet */.cD)(function (rule) {
      currentSheet.insert(rule);
    })];
    var serializer = (0,Middleware/* middleware */.qR)(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));

    var stylis = function stylis(styles) {
      return (0,Serializer/* serialize */.q)((0,Parser/* compile */.MY)(styles), serializer);
    };

    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;

      if (false) {}

      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);

      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key: key,
    sheet: new StyleSheet({
      key: key,
      container: container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted: inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};

/* harmony default export */ var emotion_cache_browser_esm = (createCache);

/***/ }),

/***/ 3762:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
/* eslint-disable */
// Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str) {
  // 'm' and 'r' are mixing constants generated offline.
  // They're not really 'magic', they just happen to work well.
  // const m = 0x5bd1e995;
  // const r = 24;
  // Initialize the hash
  var h = 0; // Mix 4 bytes at a time into the hash

  var k,
      i = 0,
      len = str.length;

  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k =
    /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
    k ^=
    /* k >>> r: */
    k >>> 24;
    h =
    /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^
    /* Math.imul(h, m): */
    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Handle the last few bytes of the input array


  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h =
      /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Do a few final mixes of the hash to ensure the last few
  // bytes are well-incorporated.


  h ^= h >>> 13;
  h =
  /* Math.imul(h, m): */
  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}

/* harmony default export */ __webpack_exports__["Z"] = (murmur2);

/***/ }),

/***/ 7548:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
function memoize(fn) {
  var cache = Object.create(null);
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ __webpack_exports__["Z"] = (memoize);

/***/ }),

/***/ 81041:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "C": function() { return /* binding */ CacheProvider; },
  "E": function() { return /* binding */ Emotion; },
  "T": function() { return /* binding */ ThemeContext; },
  "_": function() { return /* binding */ __unsafe_useEmotionCache; },
  "a": function() { return /* binding */ ThemeProvider; },
  "b": function() { return /* binding */ withTheme; },
  "c": function() { return /* binding */ createEmotionProps; },
  "h": function() { return /* binding */ emotion_element_699e6908_browser_esm_hasOwnProperty; },
  "u": function() { return /* binding */ useTheme; },
  "w": function() { return /* binding */ withEmotionCache; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js + 1 modules
var emotion_cache_browser_esm = __webpack_require__(99015);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js
var weak_memoize_browser_esm = __webpack_require__(32319);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(15706);
var hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);
;// CONCATENATED MODULE: ./node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js
 // this file isolates this package that is not tree-shakeable
// and if this module doesn't actually contain any logic of its own
// then Rollup just use 'hoist-non-react-statics' directly in other chunks

var hoistNonReactStatics = function hoistNonReactStatics(targetComponent, sourceComponent) {
  return hoist_non_react_statics_cjs_default()(targetComponent, sourceComponent);
};

/* harmony default export */ var emotion_react_isolated_hnrs_browser_esm = (hoistNonReactStatics);
// EXTERNAL MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var emotion_utils_browser_esm = __webpack_require__(74660);
// EXTERNAL MODULE: ./node_modules/@emotion/react/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js
var emotion_serialize_browser_esm = __webpack_require__(97570);
;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-element-699e6908.browser.esm.js







var emotion_element_699e6908_browser_esm_hasOwnProperty = {}.hasOwnProperty;
var EmotionCacheContext = /* #__PURE__ */(0,react.createContext)( // we're doing this to avoid preconstruct's dead code elimination in this one case
// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement !== 'undefined' ? /* #__PURE__ */(0,emotion_cache_browser_esm/* default */.Z)({
  key: 'css'
}) : null);

if (false) {}

var CacheProvider = EmotionCacheContext.Provider;

var __unsafe_useEmotionCache = function useEmotionCache() {
  return (0,react.useContext)(EmotionCacheContext);
};

var withEmotionCache = function withEmotionCache(func) {
  // $FlowFixMe
  return /*#__PURE__*/(0,react.forwardRef)(function (props, ref) {
    // the cache will never be null in the browser
    var cache = (0,react.useContext)(EmotionCacheContext);
    return func(props, cache, ref);
  });
};

var ThemeContext = /* #__PURE__ */(0,react.createContext)({});

if (false) {}

var useTheme = function useTheme() {
  return (0,react.useContext)(ThemeContext);
};

var getTheme = function getTheme(outerTheme, theme) {
  if (typeof theme === 'function') {
    var mergedTheme = theme(outerTheme);

    if (false) {}

    return mergedTheme;
  }

  if (false) {}

  return (0,esm_extends/* default */.Z)({}, outerTheme, theme);
};

var createCacheWithTheme = /* #__PURE__ */(0,weak_memoize_browser_esm/* default */.Z)(function (outerTheme) {
  return (0,weak_memoize_browser_esm/* default */.Z)(function (theme) {
    return getTheme(outerTheme, theme);
  });
});

var ThemeProvider = function ThemeProvider(props) {
  var theme = (0,react.useContext)(ThemeContext);

  if (props.theme !== theme) {
    theme = createCacheWithTheme(theme)(props.theme);
  }

  return /*#__PURE__*/(0,react.createElement)(ThemeContext.Provider, {
    value: theme
  }, props.children);
};

function withTheme(Component) {
  var componentName = Component.displayName || Component.name || 'Component';

  var render = function render(props, ref) {
    var theme = (0,react.useContext)(ThemeContext);
    return /*#__PURE__*/(0,react.createElement)(Component, (0,esm_extends/* default */.Z)({
      theme: theme,
      ref: ref
    }, props));
  }; // $FlowFixMe


  var WithTheme = /*#__PURE__*/(0,react.forwardRef)(render);
  WithTheme.displayName = "WithTheme(" + componentName + ")";
  return emotion_react_isolated_hnrs_browser_esm(WithTheme, Component);
}

var getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {
  // V8
  var match = /^\s+at\s+([A-Za-z0-9$.]+)\s/.exec(line);

  if (match) {
    // The match may be something like 'Object.createEmotionProps'
    var parts = match[1].split('.');
    return parts[parts.length - 1];
  } // Safari / Firefox


  match = /^([A-Za-z0-9$.]+)@/.exec(line);
  if (match) return match[1];
  return undefined;
};

var internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS
// identifiers, thus we only need to replace what is a valid character for JS,
// but not for CSS.

var sanitizeIdentifier = function sanitizeIdentifier(identifier) {
  return identifier.replace(/\$/g, '-');
};

var getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {
  if (!stackTrace) return undefined;
  var lines = stackTrace.split('\n');

  for (var i = 0; i < lines.length; i++) {
    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just "Error"

    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit

    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an
    // uppercase letter

    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);
  }

  return undefined;
};

var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';

var createEmotionProps = function createEmotionProps(type, props) {
  if (false) {}

  var newProps = {};

  for (var key in props) {
    if (emotion_element_699e6908_browser_esm_hasOwnProperty.call(props, key)) {
      newProps[key] = props[key];
    }
  }

  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when
  // the label hasn't already been computed

  if (false) { var label; }

  return newProps;
};

var Noop = function Noop() {
  return null;
};

var Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {
  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
  // not passing the registered cache to serializeStyles because it would
  // make certain babel optimisations not possible

  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
    cssProp = cache.registered[cssProp];
  }

  var type = props[typePropName];
  var registeredStyles = [cssProp];
  var className = '';

  if (typeof props.className === 'string') {
    className = (0,emotion_utils_browser_esm/* getRegisteredStyles */.f)(cache.registered, registeredStyles, props.className);
  } else if (props.className != null) {
    className = props.className + " ";
  }

  var serialized = (0,emotion_serialize_browser_esm/* serializeStyles */.O)(registeredStyles, undefined, (0,react.useContext)(ThemeContext));

  if (false) { var labelFromStack; }

  var rules = (0,emotion_utils_browser_esm/* insertStyles */.M)(cache, serialized, typeof type === 'string');
  className += cache.key + "-" + serialized.name;
  var newProps = {};

  for (var key in props) {
    if (emotion_element_699e6908_browser_esm_hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( true || 0)) {
      newProps[key] = props[key];
    }
  }

  newProps.ref = ref;
  newProps.className = className;
  var ele = /*#__PURE__*/(0,react.createElement)(type, newProps);
  var possiblyStyleElement = /*#__PURE__*/(0,react.createElement)(Noop, null);
  return /*#__PURE__*/(0,react.createElement)(react.Fragment, null, possiblyStyleElement, ele);
});

if (false) {}



/***/ }),

/***/ 7611:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "CacheProvider": function() { return /* reexport */ emotion_element_699e6908_browser_esm.C; },
  "ClassNames": function() { return /* binding */ ClassNames; },
  "Global": function() { return /* binding */ Global; },
  "ThemeContext": function() { return /* reexport */ emotion_element_699e6908_browser_esm.T; },
  "ThemeProvider": function() { return /* reexport */ emotion_element_699e6908_browser_esm.a; },
  "__unsafe_useEmotionCache": function() { return /* reexport */ emotion_element_699e6908_browser_esm._; },
  "createElement": function() { return /* binding */ jsx; },
  "css": function() { return /* binding */ css; },
  "jsx": function() { return /* binding */ jsx; },
  "keyframes": function() { return /* binding */ keyframes; },
  "useTheme": function() { return /* reexport */ emotion_element_699e6908_browser_esm.u; },
  "withEmotionCache": function() { return /* reexport */ emotion_element_699e6908_browser_esm.w; },
  "withTheme": function() { return /* reexport */ emotion_element_699e6908_browser_esm.b; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js + 1 modules
var emotion_cache_browser_esm = __webpack_require__(99015);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-699e6908.browser.esm.js + 1 modules
var emotion_element_699e6908_browser_esm = __webpack_require__(81041);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/extends.js
var helpers_extends = __webpack_require__(67154);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(15706);
// EXTERNAL MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var emotion_utils_browser_esm = __webpack_require__(74660);
// EXTERNAL MODULE: ./node_modules/@emotion/react/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js
var emotion_serialize_browser_esm = __webpack_require__(97570);
;// CONCATENATED MODULE: ./node_modules/@emotion/react/node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */


  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}

function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);

  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }

  tag.appendChild(document.createTextNode(''));
  tag.setAttribute('data-s', '');
  return tag;
}

var StyleSheet = /*#__PURE__*/function () {
  function StyleSheet(options) {
    var _this = this;

    this._insertTag = function (tag) {
      var before;

      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }

      _this.container.insertBefore(tag, before);

      _this.tags.push(tag);
    };

    this.isSpeedy = options.speedy === undefined ? "production" === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }

  var _proto = StyleSheet.prototype;

  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };

  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }

    var tag = this.tags[this.tags.length - 1];

    if (false) { var isImportRule; }

    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);

      try {
        // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (false) {}
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }

    this.ctr++;
  };

  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;

    if (false) {}
  };

  return StyleSheet;
}();


;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js











var pkg = {
  name: "@emotion/react",
  version: "11.7.0",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.cjs.js": "./dist/emotion-react.browser.cjs.js",
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  types: "types/index.d.ts",
  files: ["src", "dist", "jsx-runtime", "jsx-dev-runtime", "_isolated-hnrs", "types/*.d.ts", "macro.js", "macro.d.ts", "macro.js.flow"],
  sideEffects: false,
  author: "mitchellhamilton <mitchell@mitchellhamilton.me>",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.13.10",
    "@emotion/cache": "^11.6.0",
    "@emotion/serialize": "^1.0.2",
    "@emotion/sheet": "^1.1.0",
    "@emotion/utils": "^1.0.0",
    "@emotion/weak-memoize": "^0.2.5",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: true
    },
    "@types/react": {
      optional: true
    }
  },
  devDependencies: {
    "@babel/core": "^7.13.10",
    "@emotion/css": "11.5.0",
    "@emotion/css-prettifier": "1.0.0",
    "@emotion/server": "11.4.0",
    "@emotion/styled": "11.6.0",
    "@types/react": "^16.9.11",
    dtslint: "^0.3.0",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: ["./index.js", "./jsx-runtime.js", "./jsx-dev-runtime.js", "./_isolated-hnrs.js"],
    umdName: "emotionReact"
  }
};

var jsx = function jsx(type, props) {
  var args = arguments;

  if (props == null || !emotion_element_699e6908_browser_esm.h.call(props, 'css')) {
    // $FlowFixMe
    return react.createElement.apply(undefined, args);
  }

  var argsLength = args.length;
  var createElementArgArray = new Array(argsLength);
  createElementArgArray[0] = emotion_element_699e6908_browser_esm.E;
  createElementArgArray[1] = (0,emotion_element_699e6908_browser_esm.c)(type, props);

  for (var i = 2; i < argsLength; i++) {
    createElementArgArray[i] = args[i];
  } // $FlowFixMe


  return react.createElement.apply(null, createElementArgArray);
};

var warnedAboutCssPropForGlobal = false; // maintain place over rerenders.
// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag

var Global = /* #__PURE__ */(0,emotion_element_699e6908_browser_esm.w)(function (props, cache) {
  if (false) {}

  var styles = props.styles;
  var serialized = (0,emotion_serialize_browser_esm/* serializeStyles */.O)([styles], undefined, (0,react.useContext)(emotion_element_699e6908_browser_esm.T)); // but it is based on a constant that will never change at runtime
  // it's effectively like having two implementations and switching them out
  // so it's not actually breaking anything

  var sheetRef = (0,react.useRef)();
  (0,react.useLayoutEffect)(function () {
    var key = cache.key + "-global";
    var sheet = new StyleSheet({
      key: key,
      nonce: cache.sheet.nonce,
      container: cache.sheet.container,
      speedy: cache.sheet.isSpeedy
    });
    var rehydrating = false; // $FlowFixMe

    var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");

    if (cache.sheet.tags.length) {
      sheet.before = cache.sheet.tags[0];
    }

    if (node !== null) {
      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

      node.setAttribute('data-emotion', key);
      sheet.hydrate([node]);
    }

    sheetRef.current = [sheet, rehydrating];
    return function () {
      sheet.flush();
    };
  }, [cache]);
  (0,react.useLayoutEffect)(function () {
    var sheetRefCurrent = sheetRef.current;
    var sheet = sheetRefCurrent[0],
        rehydrating = sheetRefCurrent[1];

    if (rehydrating) {
      sheetRefCurrent[1] = false;
      return;
    }

    if (serialized.next !== undefined) {
      // insert keyframes
      (0,emotion_utils_browser_esm/* insertStyles */.M)(cache, serialized.next, true);
    }

    if (sheet.tags.length) {
      // if this doesn't exist then it will be null so the style element will be appended
      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
      sheet.before = element;
      sheet.flush();
    }

    cache.insert("", serialized, sheet, false);
  }, [cache, serialized.name]);
  return null;
});

if (false) {}

function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0,emotion_serialize_browser_esm/* serializeStyles */.O)(args);
}

var keyframes = function keyframes() {
  var insertable = css.apply(void 0, arguments);
  var name = "animation-" + insertable.name; // $FlowFixMe

  return {
    name: name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};

var classnames = function classnames(args) {
  var len = args.length;
  var i = 0;
  var cls = '';

  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;

    switch (typeof arg) {
      case 'boolean':
        break;

      case 'object':
        {
          if (Array.isArray(arg)) {
            toAdd = classnames(arg);
          } else {
            if (false) {}

            toAdd = '';

            for (var k in arg) {
              if (arg[k] && k) {
                toAdd && (toAdd += ' ');
                toAdd += k;
              }
            }
          }

          break;
        }

      default:
        {
          toAdd = arg;
        }
    }

    if (toAdd) {
      cls && (cls += ' ');
      cls += toAdd;
    }
  }

  return cls;
};

function merge(registered, css, className) {
  var registeredStyles = [];
  var rawClassName = (0,emotion_utils_browser_esm/* getRegisteredStyles */.f)(registered, registeredStyles, className);

  if (registeredStyles.length < 2) {
    return className;
  }

  return rawClassName + css(registeredStyles);
}

var Noop = function Noop() {
  return null;
};

var ClassNames = /* #__PURE__ */(0,emotion_element_699e6908_browser_esm.w)(function (props, cache) {
  var hasRendered = false;

  var css = function css() {
    if (hasRendered && "production" !== 'production') {}

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var serialized = (0,emotion_serialize_browser_esm/* serializeStyles */.O)(args, cache.registered);
    {
      (0,emotion_utils_browser_esm/* insertStyles */.M)(cache, serialized, false);
    }
    return cache.key + "-" + serialized.name;
  };

  var cx = function cx() {
    if (hasRendered && "production" !== 'production') {}

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return merge(cache.registered, css, classnames(args));
  };

  var content = {
    css: css,
    cx: cx,
    theme: (0,react.useContext)(emotion_element_699e6908_browser_esm.T)
  };
  var ele = props.children(content);
  hasRendered = true;
  var possiblyStyleElement = /*#__PURE__*/(0,react.createElement)(Noop, null);
  return /*#__PURE__*/(0,react.createElement)(react.Fragment, null, possiblyStyleElement, ele);
});

if (false) {}

if (false) { var globalKey, globalContext, isJest, isBrowser; }



/***/ }),

/***/ 97570:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "O": function() { return /* binding */ serializeStyles; }
/* harmony export */ });
/* harmony import */ var _emotion_hash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3762);
/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(44759);
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7548);



var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;

var isCustomProperty = function isCustomProperty(property) {
  return property.charCodeAt(1) === 45;
};

var isProcessableValue = function isProcessableValue(value) {
  return value != null && typeof value !== 'boolean';
};

var processStyleName = /* #__PURE__ */(0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(function (styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }

  if (_emotion_unitless__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
    return value + 'px';
  }

  return value;
};

if (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }

function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return '';
  }

  if (interpolation.__emotion_styles !== undefined) {
    if (false) {}

    return interpolation;
  }

  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }

    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }

        if (interpolation.styles !== undefined) {
          var next = interpolation.next;

          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }

          var styles = interpolation.styles + ";";

          if (false) {}

          return styles;
        }

        return createStringFromObject(mergedProps, registered, interpolation);
      }

    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result);
        } else if (false) {}

        break;
      }

    case 'string':
      if (false) { var replaced, matched; }

      break;
  } // finalize string values (regular strings and functions interpolated into css calls)


  if (registered == null) {
    return interpolation;
  }

  var cached = registered[interpolation];
  return cached !== undefined ? cached : interpolation;
}

function createStringFromObject(mergedProps, registered, obj) {
  var string = '';

  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];

      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && "production" !== 'production') {}

        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);

          switch (_key) {
            case 'animation':
            case 'animationName':
              {
                string += processStyleName(_key) + ":" + interpolated + ";";
                break;
              }

            default:
              {
                if (false) {}

                string += _key + "{" + interpolated + "}";
              }
          }
        }
      }
    }
  }

  return string;
}

var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;

if (false) {} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list


var cursor;

var serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }

  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];

  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    if (false) {}

    styles += strings[0];
  } // we start at 1 since we've already handled the first arg


  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i]);

    if (stringMode) {
      if (false) {}

      styles += strings[i];
    }
  }

  var sourceMap;

  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time


  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' + // $FlowFixMe we know it's not null
    match[1];
  }

  var name = (0,_emotion_hash__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(styles) + identifierName;

  if (false) {}

  return {
    name: name,
    styles: styles,
    next: cursor
  };
};



/***/ }),

/***/ 44759:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
/* harmony default export */ __webpack_exports__["Z"] = (unitlessKeys);

/***/ }),

/***/ 74660:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "f": function() { return /* binding */ getRegisteredStyles; },
/* harmony export */   "M": function() { return /* binding */ insertStyles; }
/* harmony export */ });
var isBrowser = "object" !== 'undefined';

function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = '';
  classNames.split(' ').forEach(function (className) {
    if (registered[className] !== undefined) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}

var insertStyles = function insertStyles(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;

  if ( // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (isStringTag === false || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  isBrowser === false) && cache.registered[className] === undefined) {
    cache.registered[className] = serialized.styles;
  }

  if (cache.inserted[serialized.name] === undefined) {
    var current = serialized;

    do {
      var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
      current = current.next;
    } while (current !== undefined);
  }
};



/***/ }),

/***/ 32319:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
var weakMemoize = function weakMemoize(func) {
  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps
  var cache = new WeakMap();
  return function (arg) {
    if (cache.has(arg)) {
      // $FlowFixMe
      return cache.get(arg);
    }

    var ret = func(arg);
    cache.set(arg, ret);
    return ret;
  };
};

/* harmony default export */ __webpack_exports__["Z"] = (weakMemoize);

/***/ }),

/***/ 22393:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var getLocation = function getLocation(source) {
  var _source$location = source.location,
      search = _source$location.search,
      hash = _source$location.hash,
      href = _source$location.href,
      origin = _source$location.origin,
      protocol = _source$location.protocol,
      host = _source$location.host,
      hostname = _source$location.hostname,
      port = _source$location.port;
  var pathname = source.location.pathname;

  if (!pathname && href && canUseDOM) {
    var url = new URL(href);
    pathname = url.pathname;
  }

  return {
    pathname: encodeURI(decodeURI(pathname)),
    search: search,
    hash: hash,
    href: href,
    origin: origin,
    protocol: protocol,
    host: host,
    hostname: hostname,
    port: port,
    state: source.history.state,
    key: source.history.state && source.history.state.key || "initial"
  };
};

var createHistory = function createHistory(source, options) {
  var listeners = [];
  var location = getLocation(source);
  var transitioning = false;

  var resolveTransition = function resolveTransition() {};

  return {
    get location() {
      return location;
    },

    get transitioning() {
      return transitioning;
    },

    _onTransitionComplete: function _onTransitionComplete() {
      transitioning = false;
      resolveTransition();
    },
    listen: function listen(listener) {
      listeners.push(listener);

      var popstateListener = function popstateListener() {
        location = getLocation(source);
        listener({
          location: location,
          action: "POP"
        });
      };

      source.addEventListener("popstate", popstateListener);
      return function () {
        source.removeEventListener("popstate", popstateListener);
        listeners = listeners.filter(function (fn) {
          return fn !== listener;
        });
      };
    },
    navigate: function navigate(to) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          state = _ref.state,
          _ref$replace = _ref.replace,
          replace = _ref$replace === undefined ? false : _ref$replace;

      if (typeof to === "number") {
        source.history.go(to);
      } else {
        state = _extends({}, state, {
          key: Date.now() + ""
        }); // try...catch iOS Safari limits to 100 pushState calls

        try {
          if (transitioning || replace) {
            source.history.replaceState(state, null, to);
          } else {
            source.history.pushState(state, null, to);
          }
        } catch (e) {
          source.location[replace ? "replace" : "assign"](to);
        }
      }

      location = getLocation(source);
      transitioning = true;
      var transition = new Promise(function (res) {
        return resolveTransition = res;
      });
      listeners.forEach(function (listener) {
        return listener({
          location: location,
          action: "PUSH"
        });
      });
      return transition;
    }
  };
}; ////////////////////////////////////////////////////////////////////////////////
// Stores history entries in memory for testing or other platforms like Native


var createMemorySource = function createMemorySource() {
  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var searchIndex = initialPath.indexOf("?");
  var initialLocation = {
    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,
    search: searchIndex > -1 ? initialPath.substr(searchIndex) : ""
  };
  var index = 0;
  var stack = [initialLocation];
  var states = [null];
  return {
    get location() {
      return stack[index];
    },

    addEventListener: function addEventListener(name, fn) {},
    removeEventListener: function removeEventListener(name, fn) {},
    history: {
      get entries() {
        return stack;
      },

      get index() {
        return index;
      },

      get state() {
        return states[index];
      },

      pushState: function pushState(state, _, uri) {
        var _uri$split = uri.split("?"),
            pathname = _uri$split[0],
            _uri$split$ = _uri$split[1],
            search = _uri$split$ === undefined ? "" : _uri$split$;

        index++;
        stack.push({
          pathname: pathname,
          search: search.length ? "?" + search : search
        });
        states.push(state);
      },
      replaceState: function replaceState(state, _, uri) {
        var _uri$split2 = uri.split("?"),
            pathname = _uri$split2[0],
            _uri$split2$ = _uri$split2[1],
            search = _uri$split2$ === undefined ? "" : _uri$split2$;

        stack[index] = {
          pathname: pathname,
          search: search
        };
        states[index] = state;
      },
      go: function go(to) {
        var newIndex = index + to;

        if (newIndex < 0 || newIndex > states.length - 1) {
          return;
        }

        index = newIndex;
      }
    }
  };
}; ////////////////////////////////////////////////////////////////////////////////
// global history - uses window.history as the source if available, otherwise a
// memory history


var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);

var getSource = function getSource() {
  return canUseDOM ? window : createMemorySource();
};

var globalHistory = createHistory(getSource());
var navigate = globalHistory.navigate; ////////////////////////////////////////////////////////////////////////////////

exports.V5 = globalHistory;
__webpack_unused_export__ = navigate;
__webpack_unused_export__ = createHistory;
__webpack_unused_export__ = createMemorySource;

/***/ }),

/***/ 92098:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.shallowCompare = exports.validateRedirect = exports.insertParams = exports.resolve = exports.match = exports.pick = exports.startsWith = undefined;

var _invariant = __webpack_require__(41143);

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} ////////////////////////////////////////////////////////////////////////////////
// startsWith(string, search) - Check if `string` starts with `search`


var startsWith = function startsWith(string, search) {
  return string.substr(0, search.length) === search;
}; ////////////////////////////////////////////////////////////////////////////////
// pick(routes, uri)
//
// Ranks and picks the best route to match. Each segment gets the highest
// amount of points, then the type of segment gets an additional amount of
// points where
//
//     static > dynamic > splat > root
//
// This way we don't have to worry about the order of our routes, let the
// computers do it.
//
// A route looks like this
//
//     { path, default, value }
//
// And a returned match looks like:
//
//     { route, params, uri }
//
// I know, I should use TypeScript not comments for these types.


var pick = function pick(routes, uri) {
  var match = void 0;
  var default_ = void 0;

  var _uri$split = uri.split("?"),
      uriPathname = _uri$split[0];

  var uriSegments = segmentize(uriPathname);
  var isRootUri = uriSegments[0] === "";
  var ranked = rankRoutes(routes);

  for (var i = 0, l = ranked.length; i < l; i++) {
    var missed = false;
    var route = ranked[i].route;

    if (route.default) {
      default_ = {
        route: route,
        params: {},
        uri: uri
      };
      continue;
    }

    var routeSegments = segmentize(route.path);
    var params = {};
    var max = Math.max(uriSegments.length, routeSegments.length);
    var index = 0;

    for (; index < max; index++) {
      var routeSegment = routeSegments[index];
      var uriSegment = uriSegments[index];

      if (isSplat(routeSegment)) {
        // Hit a splat, just grab the rest, and return a match
        // uri:   /files/documents/work
        // route: /files/*
        var param = routeSegment.slice(1) || "*";
        params[param] = uriSegments.slice(index).map(decodeURIComponent).join("/");
        break;
      }

      if (uriSegment === undefined) {
        // URI is shorter than the route, no match
        // uri:   /users
        // route: /users/:userId
        missed = true;
        break;
      }

      var dynamicMatch = paramRe.exec(routeSegment);

      if (dynamicMatch && !isRootUri) {
        var matchIsNotReserved = reservedNames.indexOf(dynamicMatch[1]) === -1;
        !matchIsNotReserved ?  false ? 0 : (0, _invariant2.default)(false) : void 0;
        var value = decodeURIComponent(uriSegment);
        params[dynamicMatch[1]] = value;
      } else if (routeSegment !== uriSegment) {
        // Current segments don't match, not dynamic, not splat, so no match
        // uri:   /users/123/settings
        // route: /users/:id/profile
        missed = true;
        break;
      }
    }

    if (!missed) {
      match = {
        route: route,
        params: params,
        uri: "/" + uriSegments.slice(0, index).join("/")
      };
      break;
    }
  }

  return match || default_ || null;
}; ////////////////////////////////////////////////////////////////////////////////
// match(path, uri) - Matches just one path to a uri, also lol


var match = function match(path, uri) {
  return pick([{
    path: path
  }], uri);
}; ////////////////////////////////////////////////////////////////////////////////
// resolve(to, basepath)
//
// Resolves URIs as though every path is a directory, no files.  Relative URIs
// in the browser can feel awkward because not only can you be "in a directory"
// you can be "at a file", too. For example
//
//     browserSpecResolve('foo', '/bar/') => /bar/foo
//     browserSpecResolve('foo', '/bar') => /foo
//
// But on the command line of a file system, it's not as complicated, you can't
// `cd` from a file, only directories.  This way, links have to know less about
// their current path. To go deeper you can do this:
//
//     <Link to="deeper"/>
//     // instead of
//     <Link to=`{${props.uri}/deeper}`/>
//
// Just like `cd`, if you want to go deeper from the command line, you do this:
//
//     cd deeper
//     # not
//     cd $(pwd)/deeper
//
// By treating every path as a directory, linking to relative paths should
// require less contextual information and (fingers crossed) be more intuitive.


var resolve = function resolve(to, base) {
  // /foo/bar, /baz/qux => /foo/bar
  if (startsWith(to, "/")) {
    return to;
  }

  var _to$split = to.split("?"),
      toPathname = _to$split[0],
      toQuery = _to$split[1];

  var _base$split = base.split("?"),
      basePathname = _base$split[0];

  var toSegments = segmentize(toPathname);
  var baseSegments = segmentize(basePathname); // ?a=b, /users?b=c => /users?a=b

  if (toSegments[0] === "") {
    return addQuery(basePathname, toQuery);
  } // profile, /users/789 => /users/789/profile


  if (!startsWith(toSegments[0], ".")) {
    var pathname = baseSegments.concat(toSegments).join("/");
    return addQuery((basePathname === "/" ? "" : "/") + pathname, toQuery);
  } // ./         /users/123  =>  /users/123
  // ../        /users/123  =>  /users
  // ../..      /users/123  =>  /
  // ../../one  /a/b/c/d    =>  /a/b/one
  // .././one   /a/b/c/d    =>  /a/b/c/one


  var allSegments = baseSegments.concat(toSegments);
  var segments = [];

  for (var i = 0, l = allSegments.length; i < l; i++) {
    var segment = allSegments[i];
    if (segment === "..") segments.pop();else if (segment !== ".") segments.push(segment);
  }

  return addQuery("/" + segments.join("/"), toQuery);
}; ////////////////////////////////////////////////////////////////////////////////
// insertParams(path, params)


var insertParams = function insertParams(path, params) {
  var _path$split = path.split("?"),
      pathBase = _path$split[0],
      _path$split$ = _path$split[1],
      query = _path$split$ === undefined ? "" : _path$split$;

  var segments = segmentize(pathBase);
  var constructedPath = "/" + segments.map(function (segment) {
    var match = paramRe.exec(segment);
    return match ? params[match[1]] : segment;
  }).join("/");
  var _params$location = params.location;
  _params$location = _params$location === undefined ? {} : _params$location;
  var _params$location$sear = _params$location.search,
      search = _params$location$sear === undefined ? "" : _params$location$sear;
  var searchSplit = search.split("?")[1] || "";
  constructedPath = addQuery(constructedPath, query, searchSplit);
  return constructedPath;
};

var validateRedirect = function validateRedirect(from, to) {
  var filter = function filter(segment) {
    return isDynamic(segment);
  };

  var fromString = segmentize(from).filter(filter).sort().join("/");
  var toString = segmentize(to).filter(filter).sort().join("/");
  return fromString === toString;
}; ////////////////////////////////////////////////////////////////////////////////
// Junk


var paramRe = /^:(.+)/;
var SEGMENT_POINTS = 4;
var STATIC_POINTS = 3;
var DYNAMIC_POINTS = 2;
var SPLAT_PENALTY = 1;
var ROOT_POINTS = 1;

var isRootSegment = function isRootSegment(segment) {
  return segment === "";
};

var isDynamic = function isDynamic(segment) {
  return paramRe.test(segment);
};

var isSplat = function isSplat(segment) {
  return segment && segment[0] === "*";
};

var rankRoute = function rankRoute(route, index) {
  var score = route.default ? 0 : segmentize(route.path).reduce(function (score, segment) {
    score += SEGMENT_POINTS;
    if (isRootSegment(segment)) score += ROOT_POINTS;else if (isDynamic(segment)) score += DYNAMIC_POINTS;else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY;else score += STATIC_POINTS;
    return score;
  }, 0);
  return {
    route: route,
    score: score,
    index: index
  };
};

var rankRoutes = function rankRoutes(routes) {
  return routes.map(rankRoute).sort(function (a, b) {
    return a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index;
  });
};

var segmentize = function segmentize(uri) {
  return uri // strip starting/ending slashes
  .replace(/(^\/+|\/+$)/g, "").split("/");
};

var addQuery = function addQuery(pathname) {
  for (var _len = arguments.length, query = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    query[_key - 1] = arguments[_key];
  }

  query = query.filter(function (q) {
    return q && q.length > 0;
  });
  return pathname + (query && query.length > 0 ? "?" + query.join("&") : "");
};

var reservedNames = ["uri", "path"];
/**
 * Shallow compares two objects.
 * @param {Object} obj1 The first object to compare.
 * @param {Object} obj2 The second object to compare.
 */

var shallowCompare = function shallowCompare(obj1, obj2) {
  var obj1Keys = Object.keys(obj1);
  return obj1Keys.length === Object.keys(obj2).length && obj1Keys.every(function (key) {
    return obj2.hasOwnProperty(key) && obj1[key] === obj2[key];
  });
}; ////////////////////////////////////////////////////////////////////////////////


exports.startsWith = startsWith;
exports.pick = pick;
exports.match = match;
exports.resolve = resolve;
exports.insertParams = insertParams;
exports.validateRedirect = validateRedirect;
exports.shallowCompare = shallowCompare;

/***/ }),

/***/ 64983:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MDXContext": function() { return /* binding */ MDXContext; },
/* harmony export */   "MDXProvider": function() { return /* binding */ MDXProvider; },
/* harmony export */   "mdx": function() { return /* binding */ createElement; },
/* harmony export */   "useMDXComponents": function() { return /* binding */ useMDXComponents; },
/* harmony export */   "withMDXComponents": function() { return /* binding */ withMDXComponents; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var isFunction = function isFunction(obj) {
  return typeof obj === 'function';
};

var MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({});

var withMDXComponents = function withMDXComponents(Component) {
  return function (props) {
    var allComponents = useMDXComponents(props.components);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, _extends({}, props, {
      components: allComponents
    }));
  };
};

var useMDXComponents = function useMDXComponents(components) {
  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);
  var allComponents = contextComponents;

  if (components) {
    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);
  }

  return allComponents;
};

var MDXProvider = function MDXProvider(props) {
  var allComponents = useMDXComponents(props.components);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider, {
    value: allComponents
  }, props.children);
};

var TYPE_PROP_NAME = 'mdxType';
var DEFAULTS = {
  inlineCode: 'code',
  wrapper: function wrapper(_ref) {
    var children = _ref.children;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, children);
  }
};
var MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
  var propComponents = props.components,
      mdxType = props.mdxType,
      originalType = props.originalType,
      parentName = props.parentName,
      etc = _objectWithoutProperties(props, ["components", "mdxType", "originalType", "parentName"]);

  var components = useMDXComponents(propComponents);
  var type = mdxType;
  var Component = components["".concat(parentName, ".").concat(type)] || components[type] || DEFAULTS[type] || originalType;

  if (propComponents) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, _objectSpread2(_objectSpread2({
      ref: ref
    }, etc), {}, {
      components: propComponents
    }));
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, _objectSpread2({
    ref: ref
  }, etc));
});
MDXCreateElement.displayName = 'MDXCreateElement';

function createElement(type, props) {
  var args = arguments;
  var mdxType = props && props.mdxType;

  if (typeof type === 'string' || mdxType) {
    var argsLength = args.length;
    var createElementArgArray = new Array(argsLength);
    createElementArgArray[0] = MDXCreateElement;
    var newProps = {};

    for (var key in props) {
      if (hasOwnProperty.call(props, key)) {
        newProps[key] = props[key];
      }
    }

    newProps.originalType = type;
    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;
    createElementArgArray[1] = newProps;

    for (var i = 2; i < argsLength; i++) {
      createElementArgArray[i] = args[i];
    }

    return react__WEBPACK_IMPORTED_MODULE_0__.createElement.apply(null, createElementArgArray);
  }

  return react__WEBPACK_IMPORTED_MODULE_0__.createElement.apply(null, args);
}



/***/ }),

/***/ 5061:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86164);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


/**
 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
 *
 * This component can be useful in a variety of situations:
 * - Escape hatch for broken dependencies not supporting SSR.
 * - Improve the time-to-first paint on the client by only rendering above the fold.
 * - Reduce the rendering time on the server.
 * - Under too heavy server load, you can turn on service degradation.
 */



function NoSsr(props) {
  var {
    children,
    defer = false,
    fallback = null
  } = props;
  var [mountedState, setMountedState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
  (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(() => {
    if (!defer) {
      setMountedState(true);
    }
  }, [defer]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (defer) {
      setMountedState(true);
    }
  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.

  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: mountedState ? children : fallback
  });
}

 false ? 0 : void 0;

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (NoSsr);

/***/ }),

/***/ 95795:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73935);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28127);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86164);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(96386);




function getContainer(container) {
  return typeof container === 'function' ? container() : container;
}
/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */


var Portal = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Portal(props, ref) {
  var {
    children,
    container,
    disablePortal = false
  } = props;
  var [mountNode, setMountNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  var handleRef = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children) ? children.ref : null, ref);
  (0,_mui_utils__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(() => {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  (0,_mui_utils__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(() => {
    if (mountNode && !disablePortal) {
      (0,_mui_utils__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(ref, mountNode);
      return () => {
        (0,_mui_utils__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(ref, null);
      };
    }

    return undefined;
  }, [ref, mountNode, disablePortal]);

  if (disablePortal) {
    if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {
        ref: handleRef
      });
    }

    return children;
  }

  return mountNode ? /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(children, mountNode) : mountNode;
});
 false ? 0 : void 0;

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (Portal);

/***/ }),

/***/ 49408:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ composeClasses; }
/* harmony export */ });
function composeClasses(slots, getUtilityClass, classes) {
  var output = {};
  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
  slot => {
    output[slot] = slots[slot].reduce((acc, key) => {
      if (key) {
        if (classes && classes[key]) {
          acc.push(classes[key]);
        }

        acc.push(getUtilityClass(key));
      }

      return acc;
    }, []).join(' ');
  });
  return output;
}

/***/ }),

/***/ 86756:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
var defaultGenerator = componentName => componentName;

var createClassNameGenerator = () => {
  var generate = defaultGenerator;
  return {
    configure(generator) {
      generate = generator;
    },

    generate(componentName) {
      return generate(componentName);
    },

    reset() {
      generate = defaultGenerator;
    }

  };
};

var ClassNameGenerator = createClassNameGenerator();
/* harmony default export */ __webpack_exports__["Z"] = (ClassNameGenerator);

/***/ }),

/***/ 48416:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ generateUtilityClass; }
/* harmony export */ });
/* harmony import */ var _ClassNameGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86756);

var globalStateClassesMapping = {
  active: 'Mui-active',
  checked: 'Mui-checked',
  completed: 'Mui-completed',
  disabled: 'Mui-disabled',
  error: 'Mui-error',
  expanded: 'Mui-expanded',
  focused: 'Mui-focused',
  focusVisible: 'Mui-focusVisible',
  required: 'Mui-required',
  selected: 'Mui-selected'
};
function generateUtilityClass(componentName, slot) {
  var globalStateClass = globalStateClassesMapping[slot];
  return globalStateClass || "".concat(_ClassNameGenerator__WEBPACK_IMPORTED_MODULE_0__/* ["default"].generate */ .Z.generate(componentName), "-").concat(slot);
}

/***/ }),

/***/ 62194:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ generateUtilityClasses; }
/* harmony export */ });
/* harmony import */ var _generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);

function generateUtilityClasses(componentName, slots) {
  var result = {};
  slots.forEach(slot => {
    result[slot] = (0,_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(componentName, slot);
  });
  return result;
}

/***/ }),

/***/ 22234:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
/**
 * Determines if a given element is a DOM element name (i.e. not a React component).
 */
function isHostComponent(element) {
  return typeof element === 'string';
}

/* harmony default export */ __webpack_exports__["Z"] = (isHostComponent);

/***/ }),

/***/ 99107:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z"
}), 'AccountTree');

exports.Z = _default;

/***/ }),

/***/ 81098:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z"
}), 'BarChart');

exports.Z = _default;

/***/ }),

/***/ 27161:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M17.71 7.71 12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88z"
}), 'Bluetooth');

exports.Z = _default;

/***/ }),

/***/ 10800:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M5 17.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 13c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM3 21h18v-2H3v2zM5 9.5c.83 0 1.5-.67 1.5-1.5S5.83 6.5 5 6.5 3.5 7.17 3.5 8 4.17 9.5 5 9.5zm0 4c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 17c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8-.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM3 3v2h18V3H3zm14 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm0 4c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM13 9c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1z"
}), 'BlurLinear');

exports.Z = _default;

/***/ }),

/***/ 58547:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
  cx: "7.2",
  cy: "14.4",
  r: "3.2"
}, "0"), /*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
  cx: "14.8",
  cy: "18",
  r: "2"
}, "1"), /*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
  cx: "15.2",
  cy: "8.8",
  r: "4.8"
}, "2")], 'BubbleChart');

exports.Z = _default;

/***/ }),

/***/ 42324:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "m22.7 19-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"
}), 'Build');

exports.Z = _default;

/***/ }),

/***/ 10078:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z"
}), 'CallToAction');

exports.Z = _default;

/***/ }),

/***/ 3084:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "m9.4 10.5 4.77-8.26C13.47 2.09 12.75 2 12 2c-2.4 0-4.6.85-6.32 2.25l3.66 6.35.06-.1zM21.54 9c-.92-2.92-3.15-5.26-6-6.34L11.88 9h9.66zm.26 1h-7.49l.29.5 4.76 8.25C21 16.97 22 14.61 22 12c0-.69-.07-1.35-.2-2zM8.54 12l-3.9-6.75C3.01 7.03 2 9.39 2 12c0 .69.07 1.35.2 2h7.49l-1.15-2zm-6.08 3c.92 2.92 3.15 5.26 6 6.34L12.12 15H2.46zm11.27 0-3.9 6.76c.7.15 1.42.24 2.17.24 2.4 0 4.6-.85 6.32-2.25l-3.66-6.35-.93 1.6z"
}), 'Camera');

exports.Z = _default;

/***/ }),

/***/ 79404:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), 'CheckCircle');

exports.Z = _default;

/***/ }),

/***/ 35902:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), 'Close');

exports.Z = _default;

/***/ }),

/***/ 90035:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"
}), 'Computer');

exports.Z = _default;

/***/ }),

/***/ 89247:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M22 10V6c0-1.11-.9-2-2-2H4c-1.1 0-1.99.89-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2s.9-2 2-2zm-9 7.5h-2v-2h2v2zm0-4.5h-2v-2h2v2zm0-4.5h-2v-2h2v2z"
}), 'ConfirmationNumber');

exports.Z = _default;

/***/ }),

/***/ 64478:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
}), 'Create');

exports.Z = _default;

/***/ }),

/***/ 61323:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M13 2.05v3.03c3.39.49 6 3.39 6 6.92 0 .9-.18 1.75-.48 2.54l2.6 1.53c.56-1.24.88-2.62.88-4.07 0-5.18-3.95-9.45-9-9.95zM12 19c-3.87 0-7-3.13-7-7 0-3.53 2.61-6.43 6-6.92V2.05c-5.06.5-9 4.76-9 9.95 0 5.52 4.47 10 9.99 10 3.31 0 6.24-1.61 8.06-4.09l-2.6-1.53C16.17 17.98 14.21 19 12 19z"
}), 'DataUsage');

exports.Z = _default;

/***/ }),

/***/ 51125:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "m17 16-4-4V8.82C14.16 8.4 15 7.3 15 6c0-1.66-1.34-3-3-3S9 4.34 9 6c0 1.3.84 2.4 2 2.82V12l-4 4H3v5h5v-3.05l4-4.2 4 4.2V21h5v-5h-4z"
}), 'DeviceHub');

exports.Z = _default;

/***/ }),

/***/ 53093:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M17 1H7c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 18H7V5h10v14zM12 6.72c-1.96 0-3.5 1.52-3.5 3.47h1.75c0-.93.82-1.75 1.75-1.75s1.75.82 1.75 1.75c0 1.75-2.63 1.57-2.63 4.45h1.76c0-1.96 2.62-2.19 2.62-4.45 0-1.96-1.54-3.47-3.5-3.47zm-.88 8.8h1.76v1.76h-1.76z"
}), 'DeviceUnknown');

exports.Z = _default;

/***/ }),

/***/ 48888:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M3 6h18V4H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V6zm10 6H9v1.78c-.61.55-1 1.33-1 2.22s.39 1.67 1 2.22V20h4v-1.78c.61-.55 1-1.34 1-2.22s-.39-1.67-1-2.22V12zm-2 5.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM22 8h-6c-.5 0-1 .5-1 1v10c0 .5.5 1 1 1h6c.5 0 1-.5 1-1V9c0-.5-.5-1-1-1zm-1 10h-4v-8h4v8z"
}), 'DevicesOther');

exports.Z = _default;

/***/ }),

/***/ 65207:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M4 16c0 .88.39 1.67 1 2.22V20c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h8v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.78c.61-.55 1-1.34 1-2.22V6c0-3.5-3.58-4-8-4s-8 .5-8 4v10zm3.5 1c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm9 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6H6V6h12v5z"
}), 'DirectionsBus');

exports.Z = _default;

/***/ }),

/***/ 30035:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"
}), 'Error');

exports.Z = _default;

/***/ }),

/***/ 95698:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z"
}), 'FindReplace');

exports.Z = _default;

/***/ }),

/***/ 21860:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z"
}), 'Fingerprint');

exports.Z = _default;

/***/ }),

/***/ 68974:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M7 2v11h3v9l7-12h-4l4-8z"
}), 'FlashOn');

exports.Z = _default;

/***/ }),

/***/ 57759:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"
}), 'Forum');

exports.Z = _default;

/***/ }),

/***/ 90695:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var React = _interopRequireWildcard(__webpack_require__(67294));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M12 1.27a11 11 0 00-3.48 21.46c.55.09.73-.28.73-.55v-1.84c-3.03.64-3.67-1.46-3.67-1.46-.55-1.29-1.28-1.65-1.28-1.65-.92-.65.1-.65.1-.65 1.1 0 1.73 1.1 1.73 1.1.92 1.65 2.57 1.2 3.21.92a2 2 0 01.64-1.47c-2.47-.27-5.04-1.19-5.04-5.5 0-1.1.46-2.1 1.2-2.84a3.76 3.76 0 010-2.93s.91-.28 3.11 1.1c1.8-.49 3.7-.49 5.5 0 2.1-1.38 3.02-1.1 3.02-1.1a3.76 3.76 0 010 2.93c.83.74 1.2 1.74 1.2 2.94 0 4.21-2.57 5.13-5.04 5.4.45.37.82.92.82 2.02v3.03c0 .27.1.64.73.55A11 11 0 0012 1.27"
}), 'GitHub');

exports.Z = _default;

/***/ }),

/***/ 68604:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M11 9h2v2h-2zm-2 2h2v2H9zm4 0h2v2h-2zm2-2h2v2h-2zM7 9h2v2H7zm12-6H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 18H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm2-7h-2v2h2v2h-2v-2h-2v2h-2v-2h-2v2H9v-2H7v2H5v-2h2v-2H5V5h14v6z"
}), 'Gradient');

exports.Z = _default;

/***/ }),

/***/ 52861:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"
}), 'History');

exports.Z = _default;

/***/ }),

/***/ 68347:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
}), 'Lock');

exports.Z = _default;

/***/ }),

/***/ 47358:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
}), 'Menu');

exports.Z = _default;

/***/ }),

/***/ 37321:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), 'MoreVert');

exports.Z = _default;

/***/ }),

/***/ 32815:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z"
}), 'NotificationsNone');

exports.Z = _default;

/***/ }),

/***/ 15316:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M3 10h11v2H3zm0-4h11v2H3zm0 8h7v2H3zm17.59-2.07-4.25 4.24-2.12-2.12-1.41 1.41L16.34 19 22 13.34z"
}), 'PlaylistAddCheck');

exports.Z = _default;

/***/ }),

/***/ 38043:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M13 3h-2v10h2V3zm4.83 2.17-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z"
}), 'PowerSettingsNew');

exports.Z = _default;

/***/ }),

/***/ 80766:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"
}), 'Refresh');

exports.Z = _default;

/***/ }),

/***/ 7087:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"
}), 'Reply');

exports.Z = _default;

/***/ }),

/***/ 43917:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
}), 'Save');

exports.Z = _default;

/***/ }),

/***/ 73741:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M2.01 21 23 12 2.01 3 2 10l15 2-15 2z"
}), 'Send');

exports.Z = _default;

/***/ }),

/***/ 64726:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"
}), 'Settings');

exports.Z = _default;

/***/ }),

/***/ 76354:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 10v8c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2v-8c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2zm-6 4-6-3.27v6.53L16 16z"
}), 'Subscriptions');

exports.Z = _default;

/***/ }),

/***/ 60489:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var React = _interopRequireWildcard(__webpack_require__(67294));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z"
}), 'Telegram');

exports.Z = _default;

/***/ }),

/***/ 21898:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M15 7v4h1v2h-3V5h2l-3-4-3 4h2v8H8v-2.07c.7-.37 1.2-1.08 1.2-1.93 0-1.21-.99-2.2-2.2-2.2-1.21 0-2.2.99-2.2 2.2 0 .85.5 1.56 1.2 1.93V13c0 1.11.89 2 2 2h3v3.05c-.71.37-1.2 1.1-1.2 1.95 0 1.22.99 2.2 2.2 2.2 1.21 0 2.2-.98 2.2-2.2 0-.85-.49-1.58-1.2-1.95V15h3c1.11 0 2-.89 2-2v-2h1V7h-4z"
}), 'Usb');

exports.Z = _default;

/***/ }),

/***/ 2930:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = ({
  value: true
});
exports.Z = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(32174));

var _jsxRuntime = __webpack_require__(85893);

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "m1 9 2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8 3 3 3-3c-1.65-1.66-4.34-1.66-6 0zm-4-4 2 2c2.76-2.76 7.24-2.76 10 0l2-2C15.14 9.14 8.87 9.14 5 13z"
}), 'Wifi');

exports.Z = _default;

/***/ }),

/***/ 32174:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _utils.createSvgIcon;
  }
}));

var _utils = __webpack_require__(22617);

/***/ }),

/***/ 79764:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Alert_Alert; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Alert/alertClasses.js

function getAlertUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiAlert', slot);
}
var alertClasses = (0,generateUtilityClasses/* default */.Z)('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);
/* harmony default export */ var Alert_alertClasses = (alertClasses);
// EXTERNAL MODULE: ./node_modules/@mui/material/IconButton/IconButton.js + 1 modules
var IconButton = __webpack_require__(90581);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js
var createSvgIcon = __webpack_require__(25833);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js


/**
 * @ignore - internal component.
 */


/* harmony default export */ var SuccessOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), 'SuccessOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js


/**
 * @ignore - internal component.
 */


/* harmony default export */ var ReportProblemOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), 'ReportProblemOutlined'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/ErrorOutline.js


/**
 * @ignore - internal component.
 */


/* harmony default export */ var ErrorOutline = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), 'ErrorOutline'));
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/InfoOutlined.js


/**
 * @ignore - internal component.
 */


/* harmony default export */ var InfoOutlined = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), 'InfoOutlined'));
// EXTERNAL MODULE: ./node_modules/@mui/material/internal/svg-icons/Close.js
var Close = __webpack_require__(47402);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Alert/Alert.js



var _CloseIcon;

var _excluded = ["action", "children", "className", "closeText", "color", "icon", "iconMapping", "onClose", "role", "severity", "variant"];


















var useUtilityClasses = ownerState => {
  var {
    variant,
    color,
    severity,
    classes
  } = ownerState;
  var slots = {
    root: ['root', "".concat(variant).concat((0,capitalize/* default */.Z)(color || severity)), "".concat(variant)],
    icon: ['icon'],
    message: ['message'],
    action: ['action']
  };
  return (0,composeClasses/* default */.Z)(slots, getAlertUtilityClass, classes);
};

var AlertRoot = (0,styled/* default */.ZP)(Paper/* default */.Z, {
  name: 'MuiAlert',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], styles["".concat(ownerState.variant).concat((0,capitalize/* default */.Z)(ownerState.color || ownerState.severity))]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  var getColor = theme.palette.mode === 'light' ? colorManipulator/* darken */._j : colorManipulator/* lighten */.$n;
  var getBackgroundColor = theme.palette.mode === 'light' ? colorManipulator/* lighten */.$n : colorManipulator/* darken */._j;
  var color = ownerState.color || ownerState.severity;
  return (0,esm_extends/* default */.Z)({}, theme.typography.body2, {
    borderRadius: theme.shape.borderRadius,
    backgroundColor: 'transparent',
    display: 'flex',
    padding: '6px 16px'
  }, color && ownerState.variant === 'standard' && {
    color: getColor(theme.palette[color].light, 0.6),
    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),
    ["& .".concat(Alert_alertClasses.icon)]: {
      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light
    }
  }, color && ownerState.variant === 'outlined' && {
    color: getColor(theme.palette[color].light, 0.6),
    border: "1px solid ".concat(theme.palette[color].light),
    ["& .".concat(Alert_alertClasses.icon)]: {
      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light
    }
  }, color && ownerState.variant === 'filled' && {
    color: '#fff',
    fontWeight: theme.typography.fontWeightMedium,
    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main
  });
});
var AlertIcon = (0,styled/* default */.ZP)('div', {
  name: 'MuiAlert',
  slot: 'Icon',
  overridesResolver: (props, styles) => styles.icon
})({
  marginRight: 12,
  padding: '7px 0',
  display: 'flex',
  fontSize: 22,
  opacity: 0.9
});
var AlertMessage = (0,styled/* default */.ZP)('div', {
  name: 'MuiAlert',
  slot: 'Message',
  overridesResolver: (props, styles) => styles.message
})({
  padding: '8px 0'
});
var AlertAction = (0,styled/* default */.ZP)('div', {
  name: 'MuiAlert',
  slot: 'Action',
  overridesResolver: (props, styles) => styles.action
})({
  display: 'flex',
  alignItems: 'flex-start',
  padding: '4px 0 0 16px',
  marginLeft: 'auto',
  marginRight: -8
});
var defaultIconMapping = {
  success: /*#__PURE__*/(0,jsx_runtime.jsx)(SuccessOutlined, {
    fontSize: "inherit"
  }),
  warning: /*#__PURE__*/(0,jsx_runtime.jsx)(ReportProblemOutlined, {
    fontSize: "inherit"
  }),
  error: /*#__PURE__*/(0,jsx_runtime.jsx)(ErrorOutline, {
    fontSize: "inherit"
  }),
  info: /*#__PURE__*/(0,jsx_runtime.jsx)(InfoOutlined, {
    fontSize: "inherit"
  })
};
var Alert = /*#__PURE__*/react.forwardRef(function Alert(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiAlert'
  });

  var {
    action,
    children,
    className,
    closeText = 'Close',
    color,
    icon,
    iconMapping = defaultIconMapping,
    onClose,
    role = 'alert',
    severity = 'success',
    variant = 'standard'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    severity,
    variant
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(AlertRoot, (0,esm_extends/* default */.Z)({
    role: role,
    square: true,
    elevation: 0,
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className),
    ref: ref
  }, other, {
    children: [icon !== false ? /*#__PURE__*/(0,jsx_runtime.jsx)(AlertIcon, {
      ownerState: ownerState,
      className: classes.icon,
      children: icon || iconMapping[severity] || defaultIconMapping[severity]
    }) : null, /*#__PURE__*/(0,jsx_runtime.jsx)(AlertMessage, {
      ownerState: ownerState,
      className: classes.message,
      children: children
    }), action != null ? /*#__PURE__*/(0,jsx_runtime.jsx)(AlertAction, {
      className: classes.action,
      children: action
    }) : null, action == null && onClose ? /*#__PURE__*/(0,jsx_runtime.jsx)(AlertAction, {
      ownerState: ownerState,
      className: classes.action,
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(IconButton/* default */.Z, {
        size: "small",
        "aria-label": closeText,
        title: closeText,
        color: "inherit",
        onClick: onClose,
        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/(0,jsx_runtime.jsx)(Close/* default */.Z, {
          fontSize: "small"
        }))
      })
    }) : null]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Alert_Alert = (Alert);

/***/ }),

/***/ 89132:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ AlertTitle_AlertTitle; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/AlertTitle/alertTitleClasses.js

function getAlertTitleUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiAlertTitle', slot);
}
var alertTitleClasses = (0,generateUtilityClasses/* default */.Z)('MuiAlertTitle', ['root']);
/* harmony default export */ var AlertTitle_alertTitleClasses = ((/* unused pure expression or super */ null && (alertTitleClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/AlertTitle/AlertTitle.js


var _excluded = ["className"];









var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getAlertTitleUtilityClass, classes);
};

var AlertTitleRoot = (0,styled/* default */.ZP)(Typography/* default */.Z, {
  name: 'MuiAlertTitle',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})(_ref => {
  var {
    theme
  } = _ref;
  return {
    fontWeight: theme.typography.fontWeightMedium,
    marginTop: -2
  };
});
var AlertTitle = /*#__PURE__*/react.forwardRef(function AlertTitle(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiAlertTitle'
  });

  var {
    className
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = props;
  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(AlertTitleRoot, (0,esm_extends/* default */.Z)({
    gutterBottom: true,
    component: "div",
    ownerState: ownerState,
    ref: ref,
    className: (0,clsx_m["default"])(classes.root, className)
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var AlertTitle_AlertTitle = (AlertTitle);

/***/ }),

/***/ 85190:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ AppBar_AppBar; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/AppBar/appBarClasses.js

function getAppBarUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiAppBar', slot);
}
var appBarClasses = (0,generateUtilityClasses/* default */.Z)('MuiAppBar', ['root', 'positionFixed', 'positionAbsolute', 'positionSticky', 'positionStatic', 'positionRelative', 'colorDefault', 'colorPrimary', 'colorSecondary', 'colorInherit', 'colorTransparent']);
/* harmony default export */ var AppBar_appBarClasses = ((/* unused pure expression or super */ null && (appBarClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/AppBar/AppBar.js


var _excluded = ["className", "color", "enableColorOnDark", "position"];










var useUtilityClasses = ownerState => {
  var {
    color,
    position,
    classes
  } = ownerState;
  var slots = {
    root: ['root', "color".concat((0,capitalize/* default */.Z)(color)), "position".concat((0,capitalize/* default */.Z)(position))]
  };
  return (0,composeClasses/* default */.Z)(slots, getAppBarUtilityClass, classes);
};

var AppBarRoot = (0,styled/* default */.ZP)(Paper/* default */.Z, {
  name: 'MuiAppBar',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles["position".concat((0,capitalize/* default */.Z)(ownerState.position))], styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  var backgroundColorDefault = theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];
  return (0,esm_extends/* default */.Z)({
    display: 'flex',
    flexDirection: 'column',
    width: '100%',
    boxSizing: 'border-box',
    // Prevent padding issue with the Modal and fixed positioned AppBar.
    flexShrink: 0
  }, ownerState.position === 'fixed' && {
    position: 'fixed',
    zIndex: theme.zIndex.appBar,
    top: 0,
    left: 'auto',
    right: 0,
    '@media print': {
      // Prevent the app bar to be visible on each printed page.
      position: 'absolute'
    }
  }, ownerState.position === 'absolute' && {
    position: 'absolute',
    zIndex: theme.zIndex.appBar,
    top: 0,
    left: 'auto',
    right: 0
  }, ownerState.position === 'sticky' && {
    // ⚠️ sticky is not supported by IE11.
    position: 'sticky',
    zIndex: theme.zIndex.appBar,
    top: 0,
    left: 'auto',
    right: 0
  }, ownerState.position === 'static' && {
    position: 'static'
  }, ownerState.position === 'relative' && {
    position: 'relative'
  }, ownerState.color === 'default' && {
    backgroundColor: backgroundColorDefault,
    color: theme.palette.getContrastText(backgroundColorDefault)
  }, ownerState.color && ownerState.color !== 'default' && ownerState.color !== 'inherit' && ownerState.color !== 'transparent' && {
    backgroundColor: theme.palette[ownerState.color].main,
    color: theme.palette[ownerState.color].contrastText
  }, ownerState.color === 'inherit' && {
    color: 'inherit'
  }, theme.palette.mode === 'dark' && !ownerState.enableColorOnDark && {
    backgroundColor: null,
    color: null
  }, ownerState.color === 'transparent' && (0,esm_extends/* default */.Z)({
    backgroundColor: 'transparent',
    color: 'inherit'
  }, theme.palette.mode === 'dark' && {
    backgroundImage: 'none'
  }));
});
var AppBar = /*#__PURE__*/react.forwardRef(function AppBar(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiAppBar'
  });

  var {
    className,
    color = 'primary',
    enableColorOnDark = false,
    position = 'fixed'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    position,
    enableColorOnDark
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(AppBarRoot, (0,esm_extends/* default */.Z)({
    square: true,
    component: "header",
    ownerState: ownerState,
    elevation: 4,
    className: (0,clsx_m["default"])(classes.root, className, position === 'fixed' && 'mui-fixed'),
    ref: ref
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var AppBar_AppBar = (AppBar);

/***/ }),

/***/ 93818:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Backdrop_Backdrop; }
});

// UNUSED EXPORTS: backdropClasses

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
;// CONCATENATED MODULE: ./node_modules/@mui/base/BackdropUnstyled/backdropUnstyledClasses.js


function getBackdropUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiBackdrop', slot);
}
var backdropUnstyledClasses_backdropUnstyledClasses = (0,generateUtilityClasses/* default */.Z)('MuiBackdrop', ['root', 'invisible']);
/* harmony default export */ var BackdropUnstyled_backdropUnstyledClasses = ((/* unused pure expression or super */ null && (backdropUnstyledClasses_backdropUnstyledClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/BackdropUnstyled/BackdropUnstyled.js


var _excluded = ["classes", "className", "invisible", "component", "components", "componentsProps", "theme"];







var useUtilityClasses = ownerState => {
  var {
    classes,
    invisible
  } = ownerState;
  var slots = {
    root: ['root', invisible && 'invisible']
  };
  return (0,composeClasses/* default */.Z)(slots, getBackdropUtilityClass, classes);
};

var BackdropUnstyled = /*#__PURE__*/react.forwardRef(function BackdropUnstyled(props, ref) {
  var {
    classes: classesProp,
    className,
    invisible = false,
    component = 'div',
    components = {},
    componentsProps = {},

    /* eslint-disable react/prop-types */
    theme
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    classes: classesProp,
    invisible
  });

  var classes = useUtilityClasses(ownerState);
  var Root = components.Root || component;
  var rootProps = componentsProps.root || {};
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Root, (0,esm_extends/* default */.Z)({
    "aria-hidden": true
  }, rootProps, !(0,isHostComponent/* default */.Z)(Root) && {
    as: component,
    ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState),
    theme
  }, {
    ref: ref
  }, other, {
    className: (0,clsx_m["default"])(classes.root, rootProps.className, className)
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var BackdropUnstyled_BackdropUnstyled = (BackdropUnstyled);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/Fade/Fade.js
var Fade = __webpack_require__(8290);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Backdrop/Backdrop.js


var Backdrop_excluded = ["children", "components", "componentsProps", "className", "invisible", "open", "transitionDuration", "TransitionComponent"];







var backdropClasses = (/* unused pure expression or super */ null && (backdropUnstyledClasses));

var extendUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  return classes;
};

var BackdropRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiBackdrop',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.invisible && styles.invisible];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    position: 'fixed',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    right: 0,
    bottom: 0,
    top: 0,
    left: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    WebkitTapHighlightColor: 'transparent'
  }, ownerState.invisible && {
    backgroundColor: 'transparent'
  });
});
var Backdrop = /*#__PURE__*/react.forwardRef(function Backdrop(inProps, ref) {
  var _componentsProps$root;

  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiBackdrop'
  });

  var {
    children,
    components = {},
    componentsProps = {},
    className,
    invisible = false,
    open,
    transitionDuration,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Fade/* default */.Z
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Backdrop_excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    invisible
  });

  var classes = extendUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
    in: open,
    timeout: transitionDuration
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(BackdropUnstyled_BackdropUnstyled, {
      className: className,
      invisible: invisible,
      components: (0,esm_extends/* default */.Z)({
        Root: BackdropRoot
      }, components),
      componentsProps: {
        root: (0,esm_extends/* default */.Z)({}, componentsProps.root, (!components.Root || !(0,isHostComponent/* default */.Z)(components.Root)) && {
          ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState)
        })
      },
      classes: classes,
      ref: ref,
      children: children
    })
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Backdrop_Backdrop = (Backdrop);

/***/ }),

/***/ 97321:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Badge_Badge; }
});

// UNUSED EXPORTS: badgeClasses

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/usePreviousProps.js


var usePreviousProps = value => {
  var ref = react.useRef({});
  react.useEffect(() => {
    ref.current = value;
  });
  return ref.current;
};

/* harmony default export */ var esm_usePreviousProps = (usePreviousProps);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
;// CONCATENATED MODULE: ./node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js


function getBadgeUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiBadge', slot);
}
var badgeUnstyledClasses = (0,generateUtilityClasses/* default */.Z)('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular', 'invisible']);
/* harmony default export */ var BadgeUnstyled_badgeUnstyledClasses = (badgeUnstyledClasses);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/capitalize.js
var capitalize = __webpack_require__(6550);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js


var _excluded = ["anchorOrigin", "classes", "badgeContent", "component", "children", "className", "components", "componentsProps", "invisible", "max", "overlap", "showZero", "variant", "theme"];









var useUtilityClasses = ownerState => {
  var {
    variant,
    anchorOrigin,
    overlap,
    invisible,
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    badge: ['badge', variant, "anchorOrigin".concat((0,capitalize/* default */.Z)(anchorOrigin.vertical)).concat((0,capitalize/* default */.Z)(anchorOrigin.horizontal)).concat((0,capitalize/* default */.Z)(overlap)), invisible && 'invisible']
  };
  return (0,composeClasses/* default */.Z)(slots, getBadgeUtilityClass, classes);
};

var BadgeUnstyled = /*#__PURE__*/react.forwardRef(function BadgeUnstyled(props, ref) {
  var {
    anchorOrigin: anchorOriginProp = {
      vertical: 'top',
      horizontal: 'right'
    },
    classes: classesProp,
    badgeContent: badgeContentProp,
    component = 'span',
    children,
    className,
    components = {},
    componentsProps = {},
    invisible: invisibleProp,
    max: maxProp = 99,
    overlap: overlapProp = 'rectangular',
    showZero = false,
    variant: variantProp = 'standard',

    /* eslint-disable react/prop-types */
    theme
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var prevProps = esm_usePreviousProps({
    anchorOrigin: anchorOriginProp,
    badgeContent: badgeContentProp,
    max: maxProp,
    overlap: overlapProp,
    variant: variantProp
  });
  var invisible = invisibleProp;

  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {
    invisible = true;
  }

  var {
    anchorOrigin = anchorOriginProp,
    badgeContent,
    max = maxProp,
    overlap = overlapProp,
    variant = variantProp
  } = invisible ? prevProps : props;

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    anchorOrigin,
    badgeContent,
    classes: classesProp,
    invisible,
    max,
    overlap,
    variant
  });

  var displayValue = '';

  if (variant !== 'dot') {
    displayValue = badgeContent > max ? "".concat(max, "+") : badgeContent;
  }

  var classes = useUtilityClasses(ownerState);
  var Root = components.Root || component;
  var rootProps = componentsProps.root || {};
  var Badge = components.Badge || 'span';
  var badgeProps = componentsProps.badge || {};
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({}, rootProps, !(0,isHostComponent/* default */.Z)(Root) && {
    as: component,
    ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState),
    theme
  }, {
    ref: ref
  }, other, {
    className: (0,clsx_m["default"])(classes.root, rootProps.className, className),
    children: [children, /*#__PURE__*/(0,jsx_runtime.jsx)(Badge, (0,esm_extends/* default */.Z)({}, badgeProps, !(0,isHostComponent/* default */.Z)(Badge) && {
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, badgeProps.ownerState),
      theme
    }, {
      className: (0,clsx_m["default"])(classes.badge, badgeProps.className),
      children: displayValue
    }))]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var BadgeUnstyled_BadgeUnstyled = (BadgeUnstyled);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var utils_capitalize = __webpack_require__(49240);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Badge/Badge.js


var Badge_excluded = ["components", "componentsProps", "color", "invisible", "badgeContent", "showZero", "variant"];









var badgeClasses = (0,esm_extends/* default */.Z)({}, BadgeUnstyled_badgeUnstyledClasses, (0,generateUtilityClasses/* default */.Z)('MuiBadge', ['colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning']));
var RADIUS_STANDARD = 10;
var RADIUS_DOT = 4;

var extendUtilityClasses = ownerState => {
  var {
    color,
    classes = {}
  } = ownerState;
  return (0,esm_extends/* default */.Z)({}, classes, {
    badge: (0,clsx_m["default"])(classes.badge, color !== 'default' && [getBadgeUtilityClass("color".concat((0,utils_capitalize/* default */.Z)(color))), classes["color".concat((0,utils_capitalize/* default */.Z)(color))]])
  });
};

var BadgeRoot = (0,styled/* default */.ZP)('span', {
  name: 'MuiBadge',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  position: 'relative',
  display: 'inline-flex',
  // For correct alignment with the text.
  verticalAlign: 'middle',
  flexShrink: 0
});
var BadgeBadge = (0,styled/* default */.ZP)('span', {
  name: 'MuiBadge',
  slot: 'Badge',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.badge, styles[ownerState.variant], styles["anchorOrigin".concat((0,utils_capitalize/* default */.Z)(ownerState.anchorOrigin.vertical)).concat((0,utils_capitalize/* default */.Z)(ownerState.anchorOrigin.horizontal)).concat((0,utils_capitalize/* default */.Z)(ownerState.overlap))], ownerState.color !== 'default' && styles["color".concat((0,utils_capitalize/* default */.Z)(ownerState.color))], ownerState.invisible && styles.invisible];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'flex',
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center',
    alignContent: 'center',
    alignItems: 'center',
    position: 'absolute',
    boxSizing: 'border-box',
    fontFamily: theme.typography.fontFamily,
    fontWeight: theme.typography.fontWeightMedium,
    fontSize: theme.typography.pxToRem(12),
    minWidth: RADIUS_STANDARD * 2,
    lineHeight: 1,
    padding: '0 6px',
    height: RADIUS_STANDARD * 2,
    borderRadius: RADIUS_STANDARD,
    zIndex: 1,
    // Render the badge on top of potential ripples.
    transition: theme.transitions.create('transform', {
      easing: theme.transitions.easing.easeInOut,
      duration: theme.transitions.duration.enteringScreen
    })
  }, ownerState.color !== 'default' && {
    backgroundColor: theme.palette[ownerState.color].main,
    color: theme.palette[ownerState.color].contrastText
  }, ownerState.variant === 'dot' && {
    borderRadius: RADIUS_DOT,
    height: RADIUS_DOT * 2,
    minWidth: RADIUS_DOT * 2,
    padding: 0
  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {
    top: 0,
    right: 0,
    transform: 'scale(1) translate(50%, -50%)',
    transformOrigin: '100% 0%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(50%, -50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {
    bottom: 0,
    right: 0,
    transform: 'scale(1) translate(50%, 50%)',
    transformOrigin: '100% 100%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(50%, 50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {
    top: 0,
    left: 0,
    transform: 'scale(1) translate(-50%, -50%)',
    transformOrigin: '0% 0%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(-50%, -50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {
    bottom: 0,
    left: 0,
    transform: 'scale(1) translate(-50%, 50%)',
    transformOrigin: '0% 100%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(-50%, 50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {
    top: '14%',
    right: '14%',
    transform: 'scale(1) translate(50%, -50%)',
    transformOrigin: '100% 0%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(50%, -50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {
    bottom: '14%',
    right: '14%',
    transform: 'scale(1) translate(50%, 50%)',
    transformOrigin: '100% 100%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(50%, 50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {
    top: '14%',
    left: '14%',
    transform: 'scale(1) translate(-50%, -50%)',
    transformOrigin: '0% 0%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(-50%, -50%)'
    }
  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {
    bottom: '14%',
    left: '14%',
    transform: 'scale(1) translate(-50%, 50%)',
    transformOrigin: '0% 100%',
    ["&.".concat(badgeClasses.invisible)]: {
      transform: 'scale(0) translate(-50%, 50%)'
    }
  }, ownerState.invisible && {
    transition: theme.transitions.create('transform', {
      easing: theme.transitions.easing.easeInOut,
      duration: theme.transitions.duration.leavingScreen
    })
  });
});
var Badge = /*#__PURE__*/react.forwardRef(function Badge(inProps, ref) {
  var _componentsProps$root, _componentsProps$badg;

  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiBadge'
  });

  var {
    components = {},
    componentsProps = {},
    color: colorProp = 'default',
    invisible: invisibleProp,
    badgeContent: badgeContentProp,
    showZero = false,
    variant: variantProp = 'standard'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Badge_excluded);

  var prevProps = esm_usePreviousProps({
    color: colorProp
  });
  var invisible = invisibleProp;

  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {
    invisible = true;
  }

  var {
    color = colorProp
  } = invisible ? prevProps : props;

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    invisible,
    color
  });

  var classes = extendUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(BadgeUnstyled_BadgeUnstyled, (0,esm_extends/* default */.Z)({
    invisible: invisibleProp,
    badgeContent: badgeContentProp,
    showZero: showZero,
    variant: variantProp
  }, other, {
    components: (0,esm_extends/* default */.Z)({
      Root: BadgeRoot,
      Badge: BadgeBadge
    }, components),
    componentsProps: {
      root: (0,esm_extends/* default */.Z)({}, componentsProps.root, (!components.Root || !(0,isHostComponent/* default */.Z)(components.Root)) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState, {
          color
        })
      }),
      badge: (0,esm_extends/* default */.Z)({}, componentsProps.badge, (!components.Thumb || !(0,isHostComponent/* default */.Z)(components.Thumb)) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.ownerState, {
          color
        })
      })
    },
    classes: classes,
    ref: ref
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Badge_Badge = (Badge);

/***/ }),

/***/ 39211:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Box_Box; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/styled-engine/index.js + 4 modules
var styled_engine = __webpack_require__(38615);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
var styleFunctionSx = __webpack_require__(12037);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js
var extendSxProp = __webpack_require__(18297);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useTheme.js
var useTheme = __webpack_require__(48377);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createBox.js


var _excluded = ["className", "component"];






function createBox() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var {
    defaultTheme,
    defaultClassName = 'MuiBox-root',
    generateClassName
  } = options;
  var BoxRoot = (0,styled_engine/* default */.ZP)('div')(styleFunctionSx/* default */.Z);
  var Box = /*#__PURE__*/react.forwardRef(function Box(inProps, ref) {
    var theme = (0,useTheme/* default */.Z)(defaultTheme);

    var _extendSxProp = (0,extendSxProp/* default */.Z)(inProps),
        {
      className,
      component = 'div'
    } = _extendSxProp,
        other = (0,objectWithoutPropertiesLoose/* default */.Z)(_extendSxProp, _excluded);

    return /*#__PURE__*/(0,jsx_runtime.jsx)(BoxRoot, (0,esm_extends/* default */.Z)({
      as: component,
      ref: ref,
      className: (0,clsx_m["default"])(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
      theme: theme
    }, other));
  });
   false ? 0 : void 0;
  return Box;
}
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/ClassNameGenerator.js
var ClassNameGenerator = __webpack_require__(86756);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTheme.js + 13 modules
var createTheme = __webpack_require__(78790);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Box/Box.js



var defaultTheme = (0,createTheme/* default */.Z)();
/**
 * @ignore - do not document.
 */

var Box = createBox({
  defaultTheme,
  defaultClassName: 'MuiBox-root',
  generateClassName: ClassNameGenerator/* default.generate */.Z.generate
});
/* harmony default export */ var Box_Box = (Box);

/***/ }),

/***/ 76968:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Button_Button; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Button/buttonClasses.js

function getButtonUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiButton', slot);
}
var buttonClasses = (0,generateUtilityClasses/* default */.Z)('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);
/* harmony default export */ var Button_buttonClasses = (buttonClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js

/**
 * @ignore - internal component.
 */

var ButtonGroupContext = /*#__PURE__*/react.createContext({});

if (false) {}

/* harmony default export */ var ButtonGroup_ButtonGroupContext = (ButtonGroupContext);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Button/Button.js


var _excluded = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"];













var useUtilityClasses = ownerState => {
  var {
    color,
    disableElevation,
    fullWidth,
    size,
    variant,
    classes
  } = ownerState;
  var slots = {
    root: ['root', variant, "".concat(variant).concat((0,capitalize/* default */.Z)(color)), "size".concat((0,capitalize/* default */.Z)(size)), "".concat(variant, "Size").concat((0,capitalize/* default */.Z)(size)), color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],
    label: ['label'],
    startIcon: ['startIcon', "iconSize".concat((0,capitalize/* default */.Z)(size))],
    endIcon: ['endIcon', "iconSize".concat((0,capitalize/* default */.Z)(size))]
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getButtonUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};

var commonIconStyles = ownerState => (0,esm_extends/* default */.Z)({}, ownerState.size === 'small' && {
  '& > *:nth-of-type(1)': {
    fontSize: 18
  }
}, ownerState.size === 'medium' && {
  '& > *:nth-of-type(1)': {
    fontSize: 20
  }
}, ownerState.size === 'large' && {
  '& > *:nth-of-type(1)': {
    fontSize: 22
  }
});

var ButtonRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  shouldForwardProp: prop => (0,styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes',
  name: 'MuiButton',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], styles["".concat(ownerState.variant).concat((0,capitalize/* default */.Z)(ownerState.color))], styles["size".concat((0,capitalize/* default */.Z)(ownerState.size))], styles["".concat(ownerState.variant, "Size").concat((0,capitalize/* default */.Z)(ownerState.size))], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({}, theme.typography.button, {
    minWidth: 64,
    padding: '6px 16px',
    borderRadius: theme.shape.borderRadius,
    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {
      duration: theme.transitions.duration.short
    }),
    '&:hover': (0,esm_extends/* default */.Z)({
      textDecoration: 'none',
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.text.primary, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {
      border: "1px solid ".concat(theme.palette[ownerState.color].main),
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }, ownerState.variant === 'contained' && {
      backgroundColor: theme.palette.grey.A100,
      boxShadow: theme.shadows[4],
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        boxShadow: theme.shadows[2],
        backgroundColor: theme.palette.grey[300]
      }
    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
      backgroundColor: theme.palette[ownerState.color].dark,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: theme.palette[ownerState.color].main
      }
    }),
    '&:active': (0,esm_extends/* default */.Z)({}, ownerState.variant === 'contained' && {
      boxShadow: theme.shadows[8]
    }),
    ["&.".concat(Button_buttonClasses.focusVisible)]: (0,esm_extends/* default */.Z)({}, ownerState.variant === 'contained' && {
      boxShadow: theme.shadows[6]
    }),
    ["&.".concat(Button_buttonClasses.disabled)]: (0,esm_extends/* default */.Z)({
      color: theme.palette.action.disabled
    }, ownerState.variant === 'outlined' && {
      border: "1px solid ".concat(theme.palette.action.disabledBackground)
    }, ownerState.variant === 'outlined' && ownerState.color === 'secondary' && {
      border: "1px solid ".concat(theme.palette.action.disabled)
    }, ownerState.variant === 'contained' && {
      color: theme.palette.action.disabled,
      boxShadow: theme.shadows[0],
      backgroundColor: theme.palette.action.disabledBackground
    })
  }, ownerState.variant === 'text' && {
    padding: '6px 8px'
  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
    color: theme.palette[ownerState.color].main
  }, ownerState.variant === 'outlined' && {
    padding: '5px 15px',
    border: "1px solid ".concat(theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {
    color: theme.palette[ownerState.color].main,
    border: "1px solid ".concat((0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, 0.5))
  }, ownerState.variant === 'contained' && {
    color: theme.palette.getContrastText(theme.palette.grey[300]),
    backgroundColor: theme.palette.grey[300],
    boxShadow: theme.shadows[2]
  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
    color: theme.palette[ownerState.color].contrastText,
    backgroundColor: theme.palette[ownerState.color].main
  }, ownerState.color === 'inherit' && {
    color: 'inherit',
    borderColor: 'currentColor'
  }, ownerState.size === 'small' && ownerState.variant === 'text' && {
    padding: '4px 5px',
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === 'large' && ownerState.variant === 'text' && {
    padding: '8px 11px',
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {
    padding: '3px 9px',
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {
    padding: '7px 21px',
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {
    padding: '4px 10px',
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {
    padding: '8px 22px',
    fontSize: theme.typography.pxToRem(15)
  }, ownerState.fullWidth && {
    width: '100%'
  });
}, _ref2 => {
  var {
    ownerState
  } = _ref2;
  return ownerState.disableElevation && {
    boxShadow: 'none',
    '&:hover': {
      boxShadow: 'none'
    },
    ["&.".concat(Button_buttonClasses.focusVisible)]: {
      boxShadow: 'none'
    },
    '&:active': {
      boxShadow: 'none'
    },
    ["&.".concat(Button_buttonClasses.disabled)]: {
      boxShadow: 'none'
    }
  };
});
var ButtonStartIcon = (0,styled/* default */.ZP)('span', {
  name: 'MuiButton',
  slot: 'StartIcon',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.startIcon, styles["iconSize".concat((0,capitalize/* default */.Z)(ownerState.size))]];
  }
})(_ref3 => {
  var {
    ownerState
  } = _ref3;
  return (0,esm_extends/* default */.Z)({
    display: 'inherit',
    marginRight: 8,
    marginLeft: -4
  }, ownerState.size === 'small' && {
    marginLeft: -2
  }, commonIconStyles(ownerState));
});
var ButtonEndIcon = (0,styled/* default */.ZP)('span', {
  name: 'MuiButton',
  slot: 'EndIcon',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.endIcon, styles["iconSize".concat((0,capitalize/* default */.Z)(ownerState.size))]];
  }
})(_ref4 => {
  var {
    ownerState
  } = _ref4;
  return (0,esm_extends/* default */.Z)({
    display: 'inherit',
    marginRight: -4,
    marginLeft: 8
  }, ownerState.size === 'small' && {
    marginRight: -2
  }, commonIconStyles(ownerState));
});
var Button = /*#__PURE__*/react.forwardRef(function Button(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiButton'
  });
  var {
    className: classNameContext,
    color: colorContext,
    disabled: disabledContext,
    disableElevation: disableElevationContext,
    disableFocusRipple: disableFocusRippleContext,
    disableRipple: disableRippleContext,
    fullWidth: fullWidthContext,
    size: sizeContext,
    variant: variantContext
  } = react.useContext(ButtonGroup_ButtonGroupContext);

  var {
    children,
    className,
    color: colorProp,
    component = 'button',
    disabled: disabledProp,
    disableElevation: disableElevationProp,
    disableFocusRipple: disableFocusRippleProp,
    disableRipple: disableRippleProp,
    endIcon: endIconProp,
    focusVisibleClassName,
    fullWidth: fullWidthProp,
    size: sizeProp,
    startIcon: startIconProp,
    type,
    variant: variantProp
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var color = colorProp || colorContext || 'primary'; // TODO v6: Use nullish coalescing (??) instead of OR operator for these boolean props so that these boolean props for Button with ButtonGroup context take priority. See conversation from https://github.com/mui-org/material-ui/pull/28645#discussion_r738380902.

  var disabled = disabledProp || disabledContext || false;
  var disableElevation = disableElevationProp || disableElevationContext || false;
  var disableFocusRipple = disableFocusRippleProp || disableFocusRippleContext || false;
  var fullWidth = fullWidthProp || fullWidthContext || false;
  var size = sizeProp || sizeContext || 'medium';
  var variant = variantProp || variantContext || 'text';
  var disableRipple = disableRippleProp || disableRippleContext || false;

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    component,
    disabled,
    disableElevation,
    disableFocusRipple,
    fullWidth,
    size,
    type,
    variant
  });

  var classes = useUtilityClasses(ownerState);

  var startIcon = startIconProp && /*#__PURE__*/(0,jsx_runtime.jsx)(ButtonStartIcon, {
    className: classes.startIcon,
    ownerState: ownerState,
    children: startIconProp
  });

  var endIcon = endIconProp && /*#__PURE__*/(0,jsx_runtime.jsx)(ButtonEndIcon, {
    className: classes.endIcon,
    ownerState: ownerState,
    children: endIconProp
  });

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonRoot, (0,esm_extends/* default */.Z)({
    ownerState: ownerState,
    className: (0,clsx_m["default"])(className, classNameContext),
    component: component,
    disabled: disabled,
    disableRipple: disableRipple,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: (0,clsx_m["default"])(classes.focusVisible, focusVisibleClassName),
    ref: ref,
    type: type
  }, other, {
    classes: classes,
    children: [startIcon, children, endIcon]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Button_Button = (Button);

/***/ }),

/***/ 21919:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ ButtonBase_ButtonBase; }
});

// UNUSED EXPORTS: ButtonBaseRoot

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEventCallback.js
var useEventCallback = __webpack_require__(10955);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js
var useIsFocusVisible = __webpack_require__(96698);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js
var taggedTemplateLiteral = __webpack_require__(30168);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js
var TransitionGroupContext = __webpack_require__(1278);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0,react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0,react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0,react.isValidElement)(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = (0,react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0,react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0,react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js








var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind((0,assertThisInitialized/* default */.Z)(_this)); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = (0,esm_extends/* default */.Z)({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return /*#__PURE__*/react.createElement(TransitionGroupContext/* default.Provider */.Z.Provider, {
        value: contextValue
      }, children);
    }

    return /*#__PURE__*/react.createElement(TransitionGroupContext/* default.Provider */.Z.Provider, {
      value: contextValue
    }, /*#__PURE__*/react.createElement(Component, props, children));
  };

  return TransitionGroup;
}(react.Component);

TransitionGroup.defaultProps = defaultProps;
/* harmony default export */ var esm_TransitionGroup = (TransitionGroup);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js + 1 modules
var emotion_react_browser_esm = __webpack_require__(7611);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/Ripple.js



/**
 * @ignore - internal component.
 */



function Ripple(props) {
  var {
    className,
    classes,
    pulsate = false,
    rippleX,
    rippleY,
    rippleSize,
    in: inProp,
    onExited,
    timeout
  } = props;
  var [leaving, setLeaving] = react.useState(false);
  var rippleClassName = (0,clsx_m["default"])(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
  var rippleStyles = {
    width: rippleSize,
    height: rippleSize,
    top: -(rippleSize / 2) + rippleY,
    left: -(rippleSize / 2) + rippleX
  };
  var childClassName = (0,clsx_m["default"])(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);

  if (!inProp && !leaving) {
    setLeaving(true);
  }

  react.useEffect(() => {
    if (!inProp && onExited != null) {
      // react-transition-group#onExited
      var timeoutId = setTimeout(onExited, timeout);
      return () => {
        clearTimeout(timeoutId);
      };
    }

    return undefined;
  }, [onExited, inProp, timeout]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
    className: rippleClassName,
    style: rippleStyles,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
      className: childClassName
    })
  });
}

 false ? 0 : void 0;
/* harmony default export */ var ButtonBase_Ripple = (Ripple);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/touchRippleClasses.js

function getTouchRippleUtilityClass(slot) {
  return generateUtilityClass('MuiTouchRipple', slot);
}
var touchRippleClasses = (0,generateUtilityClasses/* default */.Z)('MuiTouchRipple', ['root', 'ripple', 'rippleVisible', 'ripplePulsate', 'child', 'childLeaving', 'childPulsate']);
/* harmony default export */ var ButtonBase_touchRippleClasses = (touchRippleClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/TouchRipple.js


var _templateObject, _templateObject2, _templateObject3, _templateObject4;



var _excluded = ["center", "classes", "className"];

var _ = t => t,
    _t,
    _t2,
    _t3,
    _t4;











var DURATION = 550;
var DELAY_RIPPLE = 80;
var enterKeyframe = (0,emotion_react_browser_esm.keyframes)(_t || (_t = _(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n"])))));
var exitKeyframe = (0,emotion_react_browser_esm.keyframes)(_t2 || (_t2 = _(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n"])))));
var pulsateKeyframe = (0,emotion_react_browser_esm.keyframes)(_t3 || (_t3 = _(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n"])))));
var TouchRippleRoot = (0,styled/* default */.ZP)('span', {
  name: 'MuiTouchRipple',
  slot: 'Root',
  skipSx: true
})({
  overflow: 'hidden',
  pointerEvents: 'none',
  position: 'absolute',
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: 'inherit'
}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes
// in string templates. Do not convert these styles in JS object as it will break.

var TouchRippleRipple = (0,styled/* default */.ZP)(ButtonBase_Ripple, {
  name: 'MuiTouchRipple',
  slot: 'Ripple'
})(_t4 || (_t4 = _(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\n  opacity: 0;\n  position: absolute;\n\n  &.", " {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ", ";\n    animation-duration: ", "ms;\n    animation-timing-function: ", ";\n  }\n\n  &.", " {\n    animation-duration: ", "ms;\n  }\n\n  & .", " {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .", " {\n    opacity: 0;\n    animation-name: ", ";\n    animation-duration: ", "ms;\n    animation-timing-function: ", ";\n  }\n\n  & .", " {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ", ";\n    animation-duration: 2500ms;\n    animation-timing-function: ", ";\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n"])), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)), ButtonBase_touchRippleClasses.rippleVisible, enterKeyframe, DURATION, _ref => {
  var {
    theme
  } = _ref;
  return theme.transitions.easing.easeInOut;
}, ButtonBase_touchRippleClasses.ripplePulsate, _ref2 => {
  var {
    theme
  } = _ref2;
  return theme.transitions.duration.shorter;
}, ButtonBase_touchRippleClasses.child, ButtonBase_touchRippleClasses.childLeaving, exitKeyframe, DURATION, _ref3 => {
  var {
    theme
  } = _ref3;
  return theme.transitions.easing.easeInOut;
}, ButtonBase_touchRippleClasses.childPulsate, pulsateKeyframe, _ref4 => {
  var {
    theme
  } = _ref4;
  return theme.transitions.easing.easeInOut;
});
/**
 * @ignore - internal component.
 *
 * TODO v5: Make private
 */

var TouchRipple = /*#__PURE__*/react.forwardRef(function TouchRipple(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTouchRipple'
  });

  var {
    center: centerProp = false,
    classes = {},
    className
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var [ripples, setRipples] = react.useState([]);
  var nextKey = react.useRef(0);
  var rippleCallback = react.useRef(null);
  react.useEffect(() => {
    if (rippleCallback.current) {
      rippleCallback.current();
      rippleCallback.current = null;
    }
  }, [ripples]); // Used to filter out mouse emulated events on mobile.

  var ignoringMouseDown = react.useRef(false); // We use a timer in order to only show the ripples for touch "click" like events.
  // We don't want to display the ripple for touch scroll events.

  var startTimer = react.useRef(null); // This is the hook called once the previous timeout is ready.

  var startTimerCommit = react.useRef(null);
  var container = react.useRef(null);
  react.useEffect(() => {
    return () => {
      clearTimeout(startTimer.current);
    };
  }, []);
  var startCommit = react.useCallback(params => {
    var {
      pulsate,
      rippleX,
      rippleY,
      rippleSize,
      cb
    } = params;
    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/(0,jsx_runtime.jsx)(TouchRippleRipple, {
      classes: {
        ripple: (0,clsx_m["default"])(classes.ripple, ButtonBase_touchRippleClasses.ripple),
        rippleVisible: (0,clsx_m["default"])(classes.rippleVisible, ButtonBase_touchRippleClasses.rippleVisible),
        ripplePulsate: (0,clsx_m["default"])(classes.ripplePulsate, ButtonBase_touchRippleClasses.ripplePulsate),
        child: (0,clsx_m["default"])(classes.child, ButtonBase_touchRippleClasses.child),
        childLeaving: (0,clsx_m["default"])(classes.childLeaving, ButtonBase_touchRippleClasses.childLeaving),
        childPulsate: (0,clsx_m["default"])(classes.childPulsate, ButtonBase_touchRippleClasses.childPulsate)
      },
      timeout: DURATION,
      pulsate: pulsate,
      rippleX: rippleX,
      rippleY: rippleY,
      rippleSize: rippleSize
    }, nextKey.current)]);
    nextKey.current += 1;
    rippleCallback.current = cb;
  }, [classes]);
  var start = react.useCallback(function () {
    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var cb = arguments.length > 2 ? arguments[2] : undefined;
    var {
      pulsate = false,
      center = centerProp || options.pulsate,
      fakeElement = false // For test purposes

    } = options;

    if (event.type === 'mousedown' && ignoringMouseDown.current) {
      ignoringMouseDown.current = false;
      return;
    }

    if (event.type === 'touchstart') {
      ignoringMouseDown.current = true;
    }

    var element = fakeElement ? null : container.current;
    var rect = element ? element.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    }; // Get the size of the ripple

    var rippleX;
    var rippleY;
    var rippleSize;

    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
      rippleX = Math.round(rect.width / 2);
      rippleY = Math.round(rect.height / 2);
    } else {
      var {
        clientX,
        clientY
      } = event.touches ? event.touches[0] : event;
      rippleX = Math.round(clientX - rect.left);
      rippleY = Math.round(clientY - rect.top);
    }

    if (center) {
      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.

      if (rippleSize % 2 === 0) {
        rippleSize += 1;
      }
    } else {
      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);
    } // Touche devices


    if (event.touches) {
      // check that this isn't another touchstart due to multitouch
      // otherwise we will only clear a single timer when unmounting while two
      // are running
      if (startTimerCommit.current === null) {
        // Prepare the ripple effect.
        startTimerCommit.current = () => {
          startCommit({
            pulsate,
            rippleX,
            rippleY,
            rippleSize,
            cb
          });
        }; // Delay the execution of the ripple effect.


        startTimer.current = setTimeout(() => {
          if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
          }
        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
      }
    } else {
      startCommit({
        pulsate,
        rippleX,
        rippleY,
        rippleSize,
        cb
      });
    }
  }, [centerProp, startCommit]);
  var pulsate = react.useCallback(() => {
    start({}, {
      pulsate: true
    });
  }, [start]);
  var stop = react.useCallback((event, cb) => {
    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.
    // We still want to show ripple effect.

    if (event.type === 'touchend' && startTimerCommit.current) {
      startTimerCommit.current();
      startTimerCommit.current = null;
      startTimer.current = setTimeout(() => {
        stop(event, cb);
      });
      return;
    }

    startTimerCommit.current = null;
    setRipples(oldRipples => {
      if (oldRipples.length > 0) {
        return oldRipples.slice(1);
      }

      return oldRipples;
    });
    rippleCallback.current = cb;
  }, []);
  react.useImperativeHandle(ref, () => ({
    pulsate,
    start,
    stop
  }), [pulsate, start, stop]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TouchRippleRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, ButtonBase_touchRippleClasses.root, className),
    ref: container
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(esm_TransitionGroup, {
      component: null,
      exit: true,
      children: ripples
    })
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var ButtonBase_TouchRipple = (TouchRipple);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass_generateUtilityClass = __webpack_require__(48416);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/buttonBaseClasses.js

function getButtonBaseUtilityClass(slot) {
  return (0,generateUtilityClass_generateUtilityClass/* default */.Z)('MuiButtonBase', slot);
}
var buttonBaseClasses = (0,generateUtilityClasses/* default */.Z)('MuiButtonBase', ['root', 'disabled', 'focusVisible']);
/* harmony default export */ var ButtonBase_buttonBaseClasses = (buttonBaseClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js


var ButtonBase_excluded = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "type"];














var useUtilityClasses = ownerState => {
  var {
    disabled,
    focusVisible,
    focusVisibleClassName,
    classes
  } = ownerState;
  var slots = {
    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getButtonBaseUtilityClass, classes);

  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += " ".concat(focusVisibleClassName);
  }

  return composedClasses;
};

var ButtonBaseRoot = (0,styled/* default */.ZP)('button', {
  name: 'MuiButtonBase',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  display: 'inline-flex',
  alignItems: 'center',
  justifyContent: 'center',
  position: 'relative',
  boxSizing: 'border-box',
  WebkitTapHighlightColor: 'transparent',
  backgroundColor: 'transparent',
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: 'pointer',
  userSelect: 'none',
  verticalAlign: 'middle',
  MozAppearance: 'none',
  // Reset
  WebkitAppearance: 'none',
  // Reset
  textDecoration: 'none',
  // So we take precedent over the style of a native <a /> element.
  color: 'inherit',
  '&::-moz-focus-inner': {
    borderStyle: 'none' // Remove Firefox dotted outline.

  },
  ["&.".concat(ButtonBase_buttonBaseClasses.disabled)]: {
    pointerEvents: 'none',
    // Disable link interactions
    cursor: 'default'
  },
  '@media print': {
    colorAdjust: 'exact'
  }
});
/**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */

var ButtonBase = /*#__PURE__*/react.forwardRef(function ButtonBase(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiButtonBase'
  });

  var {
    action,
    centerRipple = false,
    children,
    className,
    component = 'button',
    disabled = false,
    disableRipple = false,
    disableTouchRipple = false,
    focusRipple = false,
    LinkComponent = 'a',
    onBlur,
    onClick,
    onContextMenu,
    onDragLeave,
    onFocus,
    onFocusVisible,
    onKeyDown,
    onKeyUp,
    onMouseDown,
    onMouseLeave,
    onMouseUp,
    onTouchEnd,
    onTouchMove,
    onTouchStart,
    tabIndex = 0,
    TouchRippleProps,
    type
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, ButtonBase_excluded);

  var buttonRef = react.useRef(null);
  var rippleRef = react.useRef(null);
  var {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: focusVisibleRef
  } = (0,useIsFocusVisible/* default */.Z)();
  var [focusVisible, setFocusVisible] = react.useState(false);

  if (disabled && focusVisible) {
    setFocusVisible(false);
  }

  react.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      buttonRef.current.focus();
    }
  }), []);
  react.useEffect(() => {
    if (focusVisible && focusRipple && !disableRipple) {
      rippleRef.current.pulsate();
    }
  }, [disableRipple, focusRipple, focusVisible]);

  function useRippleHandler(rippleAction, eventCallback) {
    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;
    return (0,useEventCallback/* default */.Z)(event => {
      if (eventCallback) {
        eventCallback(event);
      }

      var ignore = skipRippleAction;

      if (!ignore && rippleRef.current) {
        rippleRef.current[rippleAction](event);
      }

      return true;
    });
  }

  var handleMouseDown = useRippleHandler('start', onMouseDown);
  var handleContextMenu = useRippleHandler('stop', onContextMenu);
  var handleDragLeave = useRippleHandler('stop', onDragLeave);
  var handleMouseUp = useRippleHandler('stop', onMouseUp);
  var handleMouseLeave = useRippleHandler('stop', event => {
    if (focusVisible) {
      event.preventDefault();
    }

    if (onMouseLeave) {
      onMouseLeave(event);
    }
  });
  var handleTouchStart = useRippleHandler('start', onTouchStart);
  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);
  var handleTouchMove = useRippleHandler('stop', onTouchMove);
  var handleBlur = useRippleHandler('stop', event => {
    handleBlurVisible(event);

    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }

    if (onBlur) {
      onBlur(event);
    }
  }, false);
  var handleFocus = (0,useEventCallback/* default */.Z)(event => {
    // Fix for https://github.com/facebook/react/issues/7769
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }

    handleFocusVisible(event);

    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);

      if (onFocusVisible) {
        onFocusVisible(event);
      }
    }

    if (onFocus) {
      onFocus(event);
    }
  });

  var isNonNativeButton = () => {
    var button = buttonRef.current;
    return component && component !== 'button' && !(button.tagName === 'A' && button.href);
  };
  /**
   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat
   */


  var keydownRef = react.useRef(false);
  var handleKeyDown = (0,useEventCallback/* default */.Z)(event => {
    // Check if key is already down to avoid repeats being counted as multiple activations
    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {
      keydownRef.current = true;
      rippleRef.current.stop(event, () => {
        rippleRef.current.start(event);
      });
    }

    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {
      event.preventDefault();
    }

    if (onKeyDown) {
      onKeyDown(event);
    } // Keyboard accessibility for non interactive elements


    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {
      event.preventDefault();

      if (onClick) {
        onClick(event);
      }
    }
  });
  var handleKeyUp = (0,useEventCallback/* default */.Z)(event => {
    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed
    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0
    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {
      keydownRef.current = false;
      rippleRef.current.stop(event, () => {
        rippleRef.current.pulsate(event);
      });
    }

    if (onKeyUp) {
      onKeyUp(event);
    } // Keyboard accessibility for non interactive elements


    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {
      onClick(event);
    }
  });
  var ComponentProp = component;

  if (ComponentProp === 'button' && (other.href || other.to)) {
    ComponentProp = LinkComponent;
  }

  var buttonProps = {};

  if (ComponentProp === 'button') {
    buttonProps.type = type === undefined ? 'button' : type;
    buttonProps.disabled = disabled;
  } else {
    if (!other.href && !other.to) {
      buttonProps.role = 'button';
    }

    if (disabled) {
      buttonProps['aria-disabled'] = disabled;
    }
  }

  var handleOwnRef = (0,useForkRef/* default */.Z)(focusVisibleRef, buttonRef);
  var handleRef = (0,useForkRef/* default */.Z)(ref, handleOwnRef);
  var [mountedState, setMountedState] = react.useState(false);
  react.useEffect(() => {
    setMountedState(true);
  }, []);
  var enableTouchRipple = mountedState && !disableRipple && !disabled;

  if (false) {}

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    centerRipple,
    component,
    disabled,
    disableRipple,
    disableTouchRipple,
    focusRipple,
    tabIndex,
    focusVisible
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonBaseRoot, (0,esm_extends/* default */.Z)({
    as: ComponentProp,
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    onBlur: handleBlur,
    onClick: onClick,
    onContextMenu: handleContextMenu,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    onMouseDown: handleMouseDown,
    onMouseLeave: handleMouseLeave,
    onMouseUp: handleMouseUp,
    onDragLeave: handleDragLeave,
    onTouchEnd: handleTouchEnd,
    onTouchMove: handleTouchMove,
    onTouchStart: handleTouchStart,
    ref: handleRef,
    tabIndex: disabled ? -1 : tabIndex,
    type: type
  }, buttonProps, other, {
    children: [children, enableTouchRipple ?
    /*#__PURE__*/

    /* TouchRipple is only needed client-side, x2 boost on the server. */
    (0,jsx_runtime.jsx)(ButtonBase_TouchRipple, (0,esm_extends/* default */.Z)({
      ref: rippleRef,
      center: centerRipple
    }, TouchRippleProps)) : null]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var ButtonBase_ButtonBase = (ButtonBase);

/***/ }),

/***/ 30664:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Card_Card; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Card/cardClasses.js

function getCardUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCard', slot);
}
var cardClasses = (0,generateUtilityClasses/* default */.Z)('MuiCard', ['root']);
/* harmony default export */ var Card_cardClasses = ((/* unused pure expression or super */ null && (cardClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Card/Card.js


var _excluded = ["className", "raised"];










var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getCardUtilityClass, classes);
};

var CardRoot = (0,styled/* default */.ZP)(Paper/* default */.Z, {
  name: 'MuiCard',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})(() => {
  return {
    overflow: 'hidden'
  };
});
var Card = /*#__PURE__*/react.forwardRef(function Card(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCard'
  });

  var {
    className,
    raised = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    raised
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(CardRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    elevation: raised ? 8 : undefined,
    ref: ref,
    ownerState: ownerState
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Card_Card = (Card);

/***/ }),

/***/ 75510:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ CardContent_CardContent; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardContent/cardContentClasses.js

function getCardContentUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCardContent', slot);
}
var cardContentClasses = (0,generateUtilityClasses/* default */.Z)('MuiCardContent', ['root']);
/* harmony default export */ var CardContent_cardContentClasses = ((/* unused pure expression or super */ null && (cardContentClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardContent/CardContent.js


var _excluded = ["className", "component"];








var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getCardContentUtilityClass, classes);
};

var CardContentRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiCardContent',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})(() => {
  return {
    padding: 16,
    '&:last-child': {
      paddingBottom: 24
    }
  };
});
var CardContent = /*#__PURE__*/react.forwardRef(function CardContent(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCardContent'
  });

  var {
    className,
    component = 'div'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(CardContentRoot, (0,esm_extends/* default */.Z)({
    as: component,
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var CardContent_CardContent = (CardContent);

/***/ }),

/***/ 5234:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ CardHeader_CardHeader; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardHeader/cardHeaderClasses.js

function getCardHeaderUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCardHeader', slot);
}
var cardHeaderClasses = (0,generateUtilityClasses/* default */.Z)('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);
/* harmony default export */ var CardHeader_cardHeaderClasses = (cardHeaderClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardHeader/CardHeader.js


var _excluded = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"];










var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    avatar: ['avatar'],
    action: ['action'],
    content: ['content'],
    title: ['title'],
    subheader: ['subheader']
  };
  return (0,composeClasses/* default */.Z)(slots, getCardHeaderUtilityClass, classes);
};

var CardHeaderRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiCardHeader',
  slot: 'Root',
  overridesResolver: (props, styles) => (0,esm_extends/* default */.Z)({
    ["& .".concat(CardHeader_cardHeaderClasses.title)]: styles.title,
    ["& .".concat(CardHeader_cardHeaderClasses.subheader)]: styles.subheader
  }, styles.root)
})({
  display: 'flex',
  alignItems: 'center',
  padding: 16
});
var CardHeaderAvatar = (0,styled/* default */.ZP)('div', {
  name: 'MuiCardHeader',
  slot: 'Avatar',
  overridesResolver: (props, styles) => styles.avatar
})({
  display: 'flex',
  flex: '0 0 auto',
  marginRight: 16
});
var CardHeaderAction = (0,styled/* default */.ZP)('div', {
  name: 'MuiCardHeader',
  slot: 'Action',
  overridesResolver: (props, styles) => styles.action
})({
  flex: '0 0 auto',
  alignSelf: 'flex-start',
  marginTop: -4,
  marginRight: -8,
  marginBottom: -4
});
var CardHeaderContent = (0,styled/* default */.ZP)('div', {
  name: 'MuiCardHeader',
  slot: 'Content',
  overridesResolver: (props, styles) => styles.content
})({
  flex: '1 1 auto'
});
var CardHeader = /*#__PURE__*/react.forwardRef(function CardHeader(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCardHeader'
  });

  var {
    action,
    avatar,
    className,
    component = 'div',
    disableTypography = false,
    subheader: subheaderProp,
    subheaderTypographyProps,
    title: titleProp,
    titleTypographyProps
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    disableTypography
  });

  var classes = useUtilityClasses(ownerState);
  var title = titleProp;

  if (title != null && title.type !== Typography/* default */.Z && !disableTypography) {
    title = /*#__PURE__*/(0,jsx_runtime.jsx)(Typography/* default */.Z, (0,esm_extends/* default */.Z)({
      variant: avatar ? 'body2' : 'h5',
      className: classes.title,
      component: "span",
      display: "block"
    }, titleTypographyProps, {
      children: title
    }));
  }

  var subheader = subheaderProp;

  if (subheader != null && subheader.type !== Typography/* default */.Z && !disableTypography) {
    subheader = /*#__PURE__*/(0,jsx_runtime.jsx)(Typography/* default */.Z, (0,esm_extends/* default */.Z)({
      variant: avatar ? 'body2' : 'body1',
      className: classes.subheader,
      color: "text.secondary",
      component: "span",
      display: "block"
    }, subheaderTypographyProps, {
      children: subheader
    }));
  }

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(CardHeaderRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    as: component,
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: [avatar && /*#__PURE__*/(0,jsx_runtime.jsx)(CardHeaderAvatar, {
      className: classes.avatar,
      ownerState: ownerState,
      children: avatar
    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(CardHeaderContent, {
      className: classes.content,
      ownerState: ownerState,
      children: [title, subheader]
    }), action && /*#__PURE__*/(0,jsx_runtime.jsx)(CardHeaderAction, {
      className: classes.action,
      ownerState: ownerState,
      children: action
    })]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var CardHeader_CardHeader = (CardHeader);

/***/ }),

/***/ 27221:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ CardMedia_CardMedia; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardMedia/cardMediaClasses.js

function getCardMediaUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCardMedia', slot);
}
var cardMediaClasses = (0,generateUtilityClasses/* default */.Z)('MuiCardMedia', ['root', 'media', 'img']);
/* harmony default export */ var CardMedia_cardMediaClasses = ((/* unused pure expression or super */ null && (cardMediaClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardMedia/CardMedia.js


var _excluded = ["children", "className", "component", "image", "src", "style"];









var useUtilityClasses = ownerState => {
  var {
    classes,
    isMediaComponent,
    isImageComponent
  } = ownerState;
  var slots = {
    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']
  };
  return (0,composeClasses/* default */.Z)(slots, getCardMediaUtilityClass, classes);
};

var CardMediaRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiCardMedia',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    var {
      isMediaComponent,
      isImageComponent
    } = ownerState;
    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'block',
    backgroundSize: 'cover',
    backgroundRepeat: 'no-repeat',
    backgroundPosition: 'center'
  }, ownerState.isMediaComponent && {
    width: '100%'
  }, ownerState.isImageComponent && {
    // ⚠️ object-fit is not supported by IE11.
    objectFit: 'cover'
  });
});
var MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];
var IMAGE_COMPONENTS = ['picture', 'img'];
var CardMedia = /*#__PURE__*/react.forwardRef(function CardMedia(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCardMedia'
  });

  var {
    children,
    className,
    component = 'div',
    image,
    src,
    style
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;
  var composedStyle = !isMediaComponent && image ? (0,esm_extends/* default */.Z)({
    backgroundImage: "url(\"".concat(image, "\")")
  }, style) : style;

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    isMediaComponent,
    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(CardMediaRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    as: component,
    role: !isMediaComponent && image ? 'img' : undefined,
    ref: ref,
    style: composedStyle,
    ownerState: ownerState,
    src: isMediaComponent ? image || src : undefined
  }, other, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var CardMedia_CardMedia = (CardMedia);

/***/ }),

/***/ 82374:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ CircularProgress_CircularProgress; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js
var taggedTemplateLiteral = __webpack_require__(30168);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js + 1 modules
var emotion_react_browser_esm = __webpack_require__(7611);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CircularProgress/circularProgressClasses.js

function getCircularProgressUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCircularProgress', slot);
}
var circularProgressClasses = (0,generateUtilityClasses/* default */.Z)('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);
/* harmony default export */ var CircularProgress_circularProgressClasses = ((/* unused pure expression or super */ null && (circularProgressClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CircularProgress/CircularProgress.js


var _templateObject, _templateObject2, _templateObject3, _templateObject4;



var _excluded = ["className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"];

var _ = t => t,
    _t,
    _t2,
    _t3,
    _t4;











var SIZE = 44;
var circularRotateKeyframe = (0,emotion_react_browser_esm.keyframes)(_t || (_t = _(_templateObject || (_templateObject = (0,taggedTemplateLiteral/* default */.Z)(["\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n"])))));
var circularDashKeyframe = (0,emotion_react_browser_esm.keyframes)(_t2 || (_t2 = _(_templateObject2 || (_templateObject2 = (0,taggedTemplateLiteral/* default */.Z)(["\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n"])))));

var useUtilityClasses = ownerState => {
  var {
    classes,
    variant,
    color,
    disableShrink
  } = ownerState;
  var slots = {
    root: ['root', variant, "color".concat((0,capitalize/* default */.Z)(color))],
    svg: ['svg'],
    circle: ['circle', "circle".concat((0,capitalize/* default */.Z)(variant)), disableShrink && 'circleDisableShrink']
  };
  return (0,composeClasses/* default */.Z)(slots, getCircularProgressUtilityClass, classes);
};

var CircularProgressRoot = (0,styled/* default */.ZP)('span', {
  name: 'MuiCircularProgress',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))]];
  }
})(_ref => {
  var {
    ownerState,
    theme
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'inline-block'
  }, ownerState.variant === 'determinate' && {
    transition: theme.transitions.create('transform')
  }, ownerState.color !== 'inherit' && {
    color: theme.palette[ownerState.color].main
  });
}, _ref2 => {
  var {
    ownerState
  } = _ref2;
  return ownerState.variant === 'indeterminate' && (0,emotion_react_browser_esm.css)(_t3 || (_t3 = _(_templateObject3 || (_templateObject3 = (0,taggedTemplateLiteral/* default */.Z)(["\n      animation: ", " 1.4s linear infinite;\n    "])), 0)), circularRotateKeyframe);
});
var CircularProgressSVG = (0,styled/* default */.ZP)('svg', {
  name: 'MuiCircularProgress',
  slot: 'Svg',
  overridesResolver: (props, styles) => styles.svg
})({
  display: 'block' // Keeps the progress centered

});
var CircularProgressCircle = (0,styled/* default */.ZP)('circle', {
  name: 'MuiCircularProgress',
  slot: 'Circle',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.circle, styles["circle".concat((0,capitalize/* default */.Z)(ownerState.variant))], ownerState.disableShrink && styles.circleDisableShrink];
  }
})(_ref3 => {
  var {
    ownerState,
    theme
  } = _ref3;
  return (0,esm_extends/* default */.Z)({
    stroke: 'currentColor'
  }, ownerState.variant === 'determinate' && {
    transition: theme.transitions.create('stroke-dashoffset')
  }, ownerState.variant === 'indeterminate' && {
    // Some default value that looks fine waiting for the animation to kicks in.
    strokeDasharray: '80px, 200px',
    strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.

  });
}, _ref4 => {
  var {
    ownerState
  } = _ref4;
  return ownerState.variant === 'indeterminate' && !ownerState.disableShrink && (0,emotion_react_browser_esm.css)(_t4 || (_t4 = _(_templateObject4 || (_templateObject4 = (0,taggedTemplateLiteral/* default */.Z)(["\n      animation: ", " 1.4s ease-in-out infinite;\n    "])), 0)), circularDashKeyframe);
});
/**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */

var CircularProgress = /*#__PURE__*/react.forwardRef(function CircularProgress(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCircularProgress'
  });

  var {
    className,
    color = 'primary',
    disableShrink = false,
    size = 40,
    style,
    thickness = 3.6,
    value = 0,
    variant = 'indeterminate'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    disableShrink,
    size,
    thickness,
    value,
    variant
  });

  var classes = useUtilityClasses(ownerState);
  var circleStyle = {};
  var rootStyle = {};
  var rootProps = {};

  if (variant === 'determinate') {
    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
    circleStyle.strokeDasharray = circumference.toFixed(3);
    rootProps['aria-valuenow'] = Math.round(value);
    circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
    rootStyle.transform = 'rotate(-90deg)';
  }

  return /*#__PURE__*/(0,jsx_runtime.jsx)(CircularProgressRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    style: (0,esm_extends/* default */.Z)({
      width: size,
      height: size
    }, rootStyle, style),
    ownerState: ownerState,
    ref: ref,
    role: "progressbar"
  }, rootProps, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(CircularProgressSVG, {
      className: classes.svg,
      ownerState: ownerState,
      viewBox: "".concat(SIZE / 2, " ").concat(SIZE / 2, " ").concat(SIZE, " ").concat(SIZE),
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(CircularProgressCircle, {
        className: classes.circle,
        style: circleStyle,
        ownerState: ownerState,
        cx: SIZE,
        cy: SIZE,
        r: (SIZE - thickness) / 2,
        fill: "none",
        strokeWidth: thickness
      })
    })
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var CircularProgress_CircularProgress = (CircularProgress);

/***/ }),

/***/ 96037:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Collapse_Collapse; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/Transition.js + 1 modules
var Transition = __webpack_require__(81423);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTransitions.js
var createTransitions = __webpack_require__(34584);
// EXTERNAL MODULE: ./node_modules/@mui/material/transitions/utils.js
var utils = __webpack_require__(40615);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Collapse/collapseClasses.js

function getCollapseUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCollapse', slot);
}
var collapseClasses = (0,generateUtilityClasses/* default */.Z)('MuiCollapse', ['root', 'horizontal', 'vertical', 'entered', 'hidden', 'wrapper', 'wrapperInner']);
/* harmony default export */ var Collapse_collapseClasses = ((/* unused pure expression or super */ null && (collapseClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Collapse/Collapse.js


var _excluded = ["addEndListener", "children", "className", "collapsedSize", "component", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "orientation", "style", "timeout", "TransitionComponent"];














var useUtilityClasses = ownerState => {
  var {
    orientation,
    classes
  } = ownerState;
  var slots = {
    root: ['root', "".concat(orientation)],
    entered: ['entered'],
    hidden: ['hidden'],
    wrapper: ['wrapper', "".concat(orientation)],
    wrapperInner: ['wrapperInner', "".concat(orientation)]
  };
  return (0,composeClasses/* default */.Z)(slots, getCollapseUtilityClass, classes);
};

var CollapseRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiCollapse',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.orientation], ownerState.state === 'entered' && styles.entered, ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && styles.hidden];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    height: 0,
    overflow: 'hidden',
    transition: theme.transitions.create('height')
  }, ownerState.orientation === 'horizontal' && {
    height: 'auto',
    width: 0,
    transition: theme.transitions.create('width')
  }, ownerState.state === 'entered' && (0,esm_extends/* default */.Z)({
    height: 'auto',
    overflow: 'visible'
  }, ownerState.orientation === 'horizontal' && {
    width: 'auto'
  }), ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && {
    visibility: 'hidden'
  });
});
var CollapseWrapper = (0,styled/* default */.ZP)('div', {
  name: 'MuiCollapse',
  slot: 'Wrapper',
  overridesResolver: (props, styles) => styles.wrapper
})(_ref2 => {
  var {
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    // Hack to get children with a negative margin to not falsify the height computation.
    display: 'flex',
    width: '100%'
  }, ownerState.orientation === 'horizontal' && {
    width: 'auto',
    height: '100%'
  });
});
var CollapseWrapperInner = (0,styled/* default */.ZP)('div', {
  name: 'MuiCollapse',
  slot: 'WrapperInner',
  overridesResolver: (props, styles) => styles.wrapperInner
})(_ref3 => {
  var {
    ownerState
  } = _ref3;
  return (0,esm_extends/* default */.Z)({
    width: '100%'
  }, ownerState.orientation === 'horizontal' && {
    width: 'auto',
    height: '100%'
  });
});
/**
 * The Collapse transition is used by the
 * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

var Collapse = /*#__PURE__*/react.forwardRef(function Collapse(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCollapse'
  });

  var {
    addEndListener,
    children: _children,
    className,
    collapsedSize: collapsedSizeProp = '0px',
    component,
    easing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    orientation = 'vertical',
    style,
    timeout = createTransitions/* duration.standard */.x9.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition/* default */.ZP
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    orientation,
    collapsedSize: collapsedSizeProp
  });

  var classes = useUtilityClasses(ownerState);
  var theme = (0,useTheme/* default */.Z)();
  var timer = react.useRef();
  var wrapperRef = react.useRef(null);
  var autoTransitionDuration = react.useRef();
  var collapsedSize = typeof collapsedSizeProp === 'number' ? "".concat(collapsedSizeProp, "px") : collapsedSizeProp;
  var isHorizontal = orientation === 'horizontal';
  var size = isHorizontal ? 'width' : 'height';
  react.useEffect(() => {
    return () => {
      clearTimeout(timer.current);
    };
  }, []);
  var nodeRef = react.useRef(null);
  var handleRef = (0,useForkRef/* default */.Z)(ref, nodeRef);

  var normalizedTransitionCallback = callback => maybeIsAppearing => {
    if (callback) {
      var node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.

      if (maybeIsAppearing === undefined) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };

  var getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;

  var handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    if (wrapperRef.current && isHorizontal) {
      // Set absolute position to get the size of collapsed content
      wrapperRef.current.style.position = 'absolute';
    }

    node.style[size] = collapsedSize;

    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntering = normalizedTransitionCallback((node, isAppearing) => {
    var wrapperSize = getWrapperSize();

    if (wrapperRef.current && isHorizontal) {
      // After the size is read reset the position back to default
      wrapperRef.current.style.position = '';
    }

    var {
      duration: transitionDuration,
      easing: transitionTimingFunction
    } = (0,utils/* getTransitionProps */.C)({
      style,
      timeout,
      easing
    }, {
      mode: 'enter'
    });

    if (timeout === 'auto') {
      var duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);
      node.style.transitionDuration = "".concat(duration2, "ms");
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
    }

    node.style[size] = "".concat(wrapperSize, "px");
    node.style.transitionTimingFunction = transitionTimingFunction;

    if (onEntering) {
      onEntering(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback((node, isAppearing) => {
    node.style[size] = 'auto';

    if (onEntered) {
      onEntered(node, isAppearing);
    }
  });
  var handleExit = normalizedTransitionCallback(node => {
    node.style[size] = "".concat(getWrapperSize(), "px");

    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var handleExiting = normalizedTransitionCallback(node => {
    var wrapperSize = getWrapperSize();
    var {
      duration: transitionDuration,
      easing: transitionTimingFunction
    } = (0,utils/* getTransitionProps */.C)({
      style,
      timeout,
      easing
    }, {
      mode: 'exit'
    });

    if (timeout === 'auto') {
      // TODO: rename getAutoHeightDuration to something more generic (width support)
      // Actually it just calculates animation duration based on size
      var duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);
      node.style.transitionDuration = "".concat(duration2, "ms");
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
    }

    node.style[size] = collapsedSize;
    node.style.transitionTimingFunction = transitionTimingFunction;

    if (onExiting) {
      onExiting(node);
    }
  });

  var handleAddEndListener = next => {
    if (timeout === 'auto') {
      timer.current = setTimeout(next, autoTransitionDuration.current || 0);
    }

    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };

  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
    in: inProp,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    nodeRef: nodeRef,
    timeout: timeout === 'auto' ? null : timeout
  }, other, {
    children: (state, childProps) => /*#__PURE__*/(0,jsx_runtime.jsx)(CollapseRoot, (0,esm_extends/* default */.Z)({
      as: component,
      className: (0,clsx_m["default"])(classes.root, className, {
        'entered': classes.entered,
        'exited': !inProp && collapsedSize === '0px' && classes.hidden
      }[state]),
      style: (0,esm_extends/* default */.Z)({
        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize
      }, style),
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, {
        state
      }),
      ref: handleRef
    }, childProps, {
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(CollapseWrapper, {
        ownerState: (0,esm_extends/* default */.Z)({}, ownerState, {
          state
        }),
        className: classes.wrapper,
        ref: wrapperRef,
        children: /*#__PURE__*/(0,jsx_runtime.jsx)(CollapseWrapperInner, {
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, {
            state
          }),
          className: classes.wrapperInner,
          children: _children
        })
      })
    }))
  }));
});
 false ? 0 : void 0;
Collapse.muiSupportAuto = true;
/* harmony default export */ var Collapse_Collapse = (Collapse);

/***/ }),

/***/ 10532:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony exports html, body, styles */
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87462);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47761);
/* harmony import */ var _GlobalStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79612);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);






var html = (theme, enableColorScheme) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
  WebkitFontSmoothing: 'antialiased',
  // Antialiasing.
  MozOsxFontSmoothing: 'grayscale',
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: 'border-box',
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: '100%'
}, enableColorScheme && {
  colorScheme: theme.palette.mode
});
var body = theme => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
  color: theme.palette.text.primary
}, theme.typography.body1, {
  backgroundColor: theme.palette.background.default,
  '@media print': {
    // Save printer ink.
    backgroundColor: theme.palette.common.white
  }
});

var _styles = function styles(theme) {
  var enableColorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var _theme$components, _theme$components$Mui;

  var defaultStyles = {
    html: html(theme, enableColorScheme),
    '*, *::before, *::after': {
      boxSizing: 'inherit'
    },
    'strong, b': {
      fontWeight: theme.typography.fontWeightBold
    },
    body: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
      margin: 0
    }, body(theme), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      '&::backdrop': {
        backgroundColor: theme.palette.background.default
      }
    })
  };
  var themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;

  if (themeOverrides) {
    defaultStyles = [defaultStyles, themeOverrides];
  }

  return defaultStyles;
};
/**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */




function CssBaseline(inProps) {
  var props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({
    props: inProps,
    name: 'MuiCssBaseline'
  });
  var {
    children,
    enableColorScheme = false
  } = props;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_GlobalStyles__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
      styles: theme => _styles(theme, enableColorScheme)
    }), children]
  });
}

 false ? 0 : void 0;
/* harmony default export */ __webpack_exports__["ZP"] = (CssBaseline);

/***/ }),

/***/ 61359:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Dialog_Dialog; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useId.js
var useId = __webpack_require__(95025);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/Modal/Modal.js + 4 modules
var Modal = __webpack_require__(33300);
// EXTERNAL MODULE: ./node_modules/@mui/material/Fade/Fade.js
var Fade = __webpack_require__(8290);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTransitions.js
var createTransitions = __webpack_require__(34584);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Dialog/dialogClasses.js

function getDialogUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiDialog', slot);
}
var dialogClasses = (0,generateUtilityClasses/* default */.Z)('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);
/* harmony default export */ var Dialog_dialogClasses = (dialogClasses);
// EXTERNAL MODULE: ./node_modules/@mui/material/Dialog/DialogContext.js
var DialogContext = __webpack_require__(69463);
// EXTERNAL MODULE: ./node_modules/@mui/material/Backdrop/Backdrop.js + 2 modules
var Backdrop = __webpack_require__(93818);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Dialog/Dialog.js


var _excluded = ["aria-describedby", "aria-labelledby", "BackdropComponent", "BackdropProps", "children", "className", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps"];















var DialogBackdrop = (0,styled/* default */.ZP)(Backdrop/* default */.Z, {
  name: 'MuiDialog',
  slot: 'Backdrop',
  overrides: (props, styles) => styles.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
});

var useUtilityClasses = ownerState => {
  var {
    classes,
    scroll,
    maxWidth,
    fullWidth,
    fullScreen
  } = ownerState;
  var slots = {
    root: ['root'],
    container: ['container', "scroll".concat((0,capitalize/* default */.Z)(scroll))],
    paper: ['paper', "paperScroll".concat((0,capitalize/* default */.Z)(scroll)), "paperWidth".concat((0,capitalize/* default */.Z)(String(maxWidth))), fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']
  };
  return (0,composeClasses/* default */.Z)(slots, getDialogUtilityClass, classes);
};

var DialogRoot = (0,styled/* default */.ZP)(Modal/* default */.Z, {
  name: 'MuiDialog',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  '@media print': {
    // Use !important to override the Modal inline-style.
    position: 'absolute !important'
  }
});
var DialogContainer = (0,styled/* default */.ZP)('div', {
  name: 'MuiDialog',
  slot: 'Container',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.container, styles["scroll".concat((0,capitalize/* default */.Z)(ownerState.scroll))]];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    height: '100%',
    '@media print': {
      height: 'auto'
    },
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0
  }, ownerState.scroll === 'paper' && {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center'
  }, ownerState.scroll === 'body' && {
    overflowY: 'auto',
    overflowX: 'hidden',
    textAlign: 'center',
    '&:after': {
      content: '""',
      display: 'inline-block',
      verticalAlign: 'middle',
      height: '100%',
      width: '0'
    }
  });
});
var DialogPaper = (0,styled/* default */.ZP)(Paper/* default */.Z, {
  name: 'MuiDialog',
  slot: 'Paper',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.paper, styles["scrollPaper".concat((0,capitalize/* default */.Z)(ownerState.scroll))], styles["paperWidth".concat((0,capitalize/* default */.Z)(String(ownerState.maxWidth)))], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];
  }
})(_ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    margin: 32,
    position: 'relative',
    overflowY: 'auto',
    // Fix IE11 issue, to remove at some point.
    '@media print': {
      overflowY: 'visible',
      boxShadow: 'none'
    }
  }, ownerState.scroll === 'paper' && {
    display: 'flex',
    flexDirection: 'column',
    maxHeight: 'calc(100% - 64px)'
  }, ownerState.scroll === 'body' && {
    display: 'inline-block',
    verticalAlign: 'middle',
    textAlign: 'left' // 'initial' doesn't work on IE11

  }, !ownerState.maxWidth && {
    maxWidth: 'calc(100% - 64px)'
  }, ownerState.maxWidth === 'xs' && {
    maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : "".concat(theme.breakpoints.values.xs).concat(theme.breakpoints.unit),
    ["&.".concat(Dialog_dialogClasses.paperScrollBody)]: {
      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {
        maxWidth: 'calc(100% - 64px)'
      }
    }
  }, ownerState.maxWidth !== 'xs' && {
    maxWidth: "".concat(theme.breakpoints.values[ownerState.maxWidth]).concat(theme.breakpoints.unit),
    ["&.".concat(Dialog_dialogClasses.paperScrollBody)]: {
      [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {
        maxWidth: 'calc(100% - 64px)'
      }
    }
  }, ownerState.fullWidth && {
    width: 'calc(100% - 64px)'
  }, ownerState.fullScreen && {
    margin: 0,
    width: '100%',
    maxWidth: '100%',
    height: '100%',
    maxHeight: 'none',
    borderRadius: 0,
    ["&.".concat(Dialog_dialogClasses.paperScrollBody)]: {
      margin: 0,
      maxWidth: '100%'
    }
  });
});
var defaultTransitionDuration = {
  enter: createTransitions/* duration.enteringScreen */.x9.enteringScreen,
  exit: createTransitions/* duration.leavingScreen */.x9.leavingScreen
};
/**
 * Dialogs are overlaid modal paper based components with a backdrop.
 */

var Dialog = /*#__PURE__*/react.forwardRef(function Dialog(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiDialog'
  });

  var {
    'aria-describedby': ariaDescribedby,
    'aria-labelledby': ariaLabelledbyProp,
    BackdropComponent,
    BackdropProps,
    children,
    className,
    disableEscapeKeyDown = false,
    fullScreen = false,
    fullWidth = false,
    maxWidth = 'sm',
    onBackdropClick,
    onClose,
    open,
    PaperComponent = Paper/* default */.Z,
    PaperProps = {},
    scroll = 'paper',
    TransitionComponent = Fade/* default */.Z,
    transitionDuration = defaultTransitionDuration,
    TransitionProps
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disableEscapeKeyDown,
    fullScreen,
    fullWidth,
    maxWidth,
    scroll
  });

  var classes = useUtilityClasses(ownerState);
  var backdropClick = react.useRef();

  var handleMouseDown = event => {
    // We don't want to close the dialog when clicking the dialog content.
    // Make sure the event starts and ends on the same DOM element.
    backdropClick.current = event.target === event.currentTarget;
  };

  var handleBackdropClick = event => {
    // Ignore the events not coming from the "backdrop".
    if (!backdropClick.current) {
      return;
    }

    backdropClick.current = null;

    if (onBackdropClick) {
      onBackdropClick(event);
    }

    if (onClose) {
      onClose(event, 'backdropClick');
    }
  };

  var ariaLabelledby = (0,useId/* default */.Z)(ariaLabelledbyProp);
  var dialogContextValue = react.useMemo(() => {
    return {
      titleId: ariaLabelledby
    };
  }, [ariaLabelledby]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(DialogRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    BackdropProps: (0,esm_extends/* default */.Z)({
      transitionDuration,
      as: BackdropComponent
    }, BackdropProps),
    closeAfterTransition: true,
    BackdropComponent: DialogBackdrop,
    disableEscapeKeyDown: disableEscapeKeyDown,
    onClose: onClose,
    open: open,
    ref: ref,
    onClick: handleBackdropClick,
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
      appear: true,
      in: open,
      timeout: transitionDuration,
      role: "presentation"
    }, TransitionProps, {
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(DialogContainer, {
        className: (0,clsx_m["default"])(classes.container),
        onMouseDown: handleMouseDown,
        ownerState: ownerState,
        children: /*#__PURE__*/(0,jsx_runtime.jsx)(DialogPaper, (0,esm_extends/* default */.Z)({
          as: PaperComponent,
          elevation: 24,
          role: "dialog",
          "aria-describedby": ariaDescribedby,
          "aria-labelledby": ariaLabelledby
        }, PaperProps, {
          className: (0,clsx_m["default"])(classes.paper, PaperProps.className),
          ownerState: ownerState,
          children: /*#__PURE__*/(0,jsx_runtime.jsx)(DialogContext/* default.Provider */.Z.Provider, {
            value: dialogContextValue,
            children: children
          })
        }))
      })
    }))
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Dialog_Dialog = (Dialog);

/***/ }),

/***/ 69463:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var DialogContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (DialogContext);

/***/ }),

/***/ 86763:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ DialogContent_DialogContent; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/DialogContent/dialogContentClasses.js

function getDialogContentUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiDialogContent', slot);
}
var dialogContentClasses = (0,generateUtilityClasses/* default */.Z)('MuiDialogContent', ['root', 'dividers']);
/* harmony default export */ var DialogContent_dialogContentClasses = ((/* unused pure expression or super */ null && (dialogContentClasses)));
// EXTERNAL MODULE: ./node_modules/@mui/material/DialogTitle/dialogTitleClasses.js
var dialogTitleClasses = __webpack_require__(14193);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/DialogContent/DialogContent.js


var _excluded = ["className", "dividers"];









var useUtilityClasses = ownerState => {
  var {
    classes,
    dividers
  } = ownerState;
  var slots = {
    root: ['root', dividers && 'dividers']
  };
  return (0,composeClasses/* default */.Z)(slots, getDialogContentUtilityClass, classes);
};

var DialogContentRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiDialogContent',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.dividers && styles.dividers];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    flex: '1 1 auto',
    // Add iOS momentum scrolling for iOS < 13.0
    WebkitOverflowScrolling: 'touch',
    overflowY: 'auto',
    padding: '20px 24px'
  }, ownerState.dividers ? {
    padding: '16px 24px',
    borderTop: "1px solid ".concat(theme.palette.divider),
    borderBottom: "1px solid ".concat(theme.palette.divider)
  } : {
    [".".concat(dialogTitleClasses/* default.root */.Z.root, " + &")]: {
      paddingTop: 0
    }
  });
});
var DialogContent = /*#__PURE__*/react.forwardRef(function DialogContent(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiDialogContent'
  });

  var {
    className,
    dividers = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    dividers
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(DialogContentRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var DialogContent_DialogContent = (DialogContent);

/***/ }),

/***/ 14193:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": function() { return /* binding */ getDialogTitleUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getDialogTitleUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiDialogTitle', slot);
}
var dialogTitleClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiDialogTitle', ['root']);
/* harmony default export */ __webpack_exports__["Z"] = (dialogTitleClasses);

/***/ }),

/***/ 92103:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "V": function() { return /* binding */ getDividerUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getDividerUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiDivider', slot);
}
var dividerClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);
/* harmony default export */ __webpack_exports__["Z"] = (dividerClasses);

/***/ }),

/***/ 8290:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(87462);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(63366);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81423);
/* harmony import */ var _styles_createTransitions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34584);
/* harmony import */ var _styles_useTheme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66449);
/* harmony import */ var _transitions_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(40615);
/* harmony import */ var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(65973);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];








var styles = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
};
var defaultTimeout = {
  enter: _styles_createTransitions__WEBPACK_IMPORTED_MODULE_2__/* .duration.enteringScreen */ .x9.enteringScreen,
  exit: _styles_createTransitions__WEBPACK_IMPORTED_MODULE_2__/* .duration.leavingScreen */ .x9.leavingScreen
};
/**
 * The Fade transition is used by the [Modal](/components/modal/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

var Fade = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Fade(props, ref) {
  var {
    addEndListener,
    appear = true,
    children: _children,
    easing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style,
    timeout = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = react_transition_group__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(props, _excluded);

  var theme = (0,_styles_useTheme__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
  var enableStrictModeCompat = true;
  var nodeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  var foreignRef = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_children.ref, ref);
  var handleRef = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(nodeRef, foreignRef);

  var normalizedTransitionCallback = callback => maybeIsAppearing => {
    if (callback) {
      var node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.

      if (maybeIsAppearing === undefined) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };

  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_7__/* .reflow */ .n)(node); // So the animation always start from the start.

    var transitionProps = (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_7__/* .getTransitionProps */ .C)({
      style,
      timeout,
      easing
    }, {
      mode: 'enter'
    });
    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
    node.style.transition = theme.transitions.create('opacity', transitionProps);

    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(node => {
    var transitionProps = (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_7__/* .getTransitionProps */ .C)({
      style,
      timeout,
      easing
    }, {
      mode: 'exit'
    });
    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
    node.style.transition = theme.transitions.create('opacity', transitionProps);

    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);

  var handleAddEndListener = next => {
    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };

  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TransitionComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)({
    appear: appear,
    in: inProp,
    nodeRef: enableStrictModeCompat ? nodeRef : undefined,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout
  }, other, {
    children: (state, childProps) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(_children, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)({
        style: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)({
          opacity: 0,
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, styles[state], style, _children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
 false ? 0 : void 0;
/* harmony default export */ __webpack_exports__["Z"] = (Fade);

/***/ }),

/***/ 11519:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(63366);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87462);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(26486);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49408);
/* harmony import */ var _InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(86360);
/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(98348);
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47761);
/* harmony import */ var _filledInputClasses__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(56154);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "type"];










var useUtilityClasses = ownerState => {
  var {
    classes,
    disableUnderline
  } = ownerState;
  var slots = {
    root: ['root', !disableUnderline && 'underline'],
    input: ['input']
  };
  var composedClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(slots, _filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* .getFilledInputUtilityClass */ ._, classes);
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({}, classes, composedClasses);
};

var FilledInputRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)(_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .InputBaseRoot */ .Ej, {
  shouldForwardProp: prop => (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* .rootShouldForwardProp */ .FO)(prop) || prop === 'classes',
  name: 'MuiFilledInput',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [...(0,_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .rootOverridesResolver */ .Gx)(props, styles), !ownerState.disableUnderline && styles.underline];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  var light = theme.palette.mode === 'light';
  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
  var backgroundColor = light ? 'rgba(0, 0, 0, 0.06)' : 'rgba(255, 255, 255, 0.09)';
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    position: 'relative',
    backgroundColor,
    borderTopLeftRadius: theme.shape.borderRadius,
    borderTopRightRadius: theme.shape.borderRadius,
    transition: theme.transitions.create('background-color', {
      duration: theme.transitions.duration.shorter,
      easing: theme.transitions.easing.easeOut
    }),
    '&:hover': {
      backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.13)',
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor
      }
    },
    ["&.".concat(_filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].focused */ .Z.focused)]: {
      backgroundColor
    },
    ["&.".concat(_filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].disabled */ .Z.disabled)]: {
      backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'
    }
  }, !ownerState.disableUnderline && {
    '&:after': {
      borderBottom: "2px solid ".concat(theme.palette[ownerState.color].main),
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: 'absolute',
      right: 0,
      transform: 'scaleX(0)',
      transition: theme.transitions.create('transform', {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: 'none' // Transparent to the hover style.

    },
    ["&.".concat(_filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].focused */ .Z.focused, ":after")]: {
      transform: 'scaleX(1)'
    },
    ["&.".concat(_filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].error */ .Z.error, ":after")]: {
      borderBottomColor: theme.palette.error.main,
      transform: 'scaleX(1)' // error is always underlined in red

    },
    '&:before': {
      borderBottom: "1px solid ".concat(bottomLineColor),
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: 'absolute',
      right: 0,
      transition: theme.transitions.create('border-bottom-color', {
        duration: theme.transitions.duration.shorter
      }),
      pointerEvents: 'none' // Transparent to the hover style.

    },
    ["&:hover:not(.".concat(_filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].disabled */ .Z.disabled, "):before")]: {
      borderBottom: "1px solid ".concat(theme.palette.text.primary)
    },
    ["&.".concat(_filledInputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].disabled */ .Z.disabled, ":before")]: {
      borderBottomStyle: 'dotted'
    }
  }, ownerState.startAdornment && {
    paddingLeft: 12
  }, ownerState.endAdornment && {
    paddingRight: 12
  }, ownerState.multiline && (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    padding: '25px 12px 8px'
  }, ownerState.size === 'small' && {
    paddingTop: 21,
    paddingBottom: 4
  }, ownerState.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }));
});
var FilledInputInput = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)(_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .InputBaseComponent */ .rA, {
  name: 'MuiFilledInput',
  slot: 'Input',
  overridesResolver: _InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .inputOverridesResolver */ ._o
})(_ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    paddingTop: 25,
    paddingRight: 12,
    paddingBottom: 8,
    paddingLeft: 12,
    '&:-webkit-autofill': {
      WebkitBoxShadow: theme.palette.mode === 'light' ? null : '0 0 0 100px #266798 inset',
      WebkitTextFillColor: theme.palette.mode === 'light' ? null : '#fff',
      caretColor: theme.palette.mode === 'light' ? null : '#fff',
      borderTopLeftRadius: 'inherit',
      borderTopRightRadius: 'inherit'
    }
  }, ownerState.size === 'small' && {
    paddingTop: 21,
    paddingBottom: 4
  }, ownerState.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }, ownerState.multiline && {
    paddingTop: 0,
    paddingBottom: 0,
    paddingLeft: 0,
    paddingRight: 0
  }, ownerState.startAdornment && {
    paddingLeft: 0
  }, ownerState.endAdornment && {
    paddingRight: 0
  }, ownerState.hiddenLabel && ownerState.size === 'small' && {
    paddingTop: 8,
    paddingBottom: 9
  });
});
var FilledInput = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FilledInput(inProps, ref) {
  var props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
    props: inProps,
    name: 'MuiFilledInput'
  });

  var {
    components = {},
    componentsProps: componentsPropsProp,
    fullWidth = false,
    // declare here to prevent spreading to DOM
    inputComponent = 'input',
    multiline = false,
    type = 'text'
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(props, _excluded);

  var ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({}, props, {
    fullWidth,
    inputComponent,
    multiline,
    type
  });

  var classes = useUtilityClasses(props);
  var filledInputComponentsProps = {
    root: {
      ownerState
    },
    input: {
      ownerState
    }
  };
  var componentsProps = componentsPropsProp ? (0,_mui_utils__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(componentsPropsProp, filledInputComponentsProps) : filledInputComponentsProps;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    components: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
      Root: FilledInputRoot,
      Input: FilledInputInput
    }, components),
    componentsProps: componentsProps,
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    ref: ref,
    type: type
  }, other, {
    classes: classes
  }));
});
 false ? 0 : void 0;
FilledInput.muiName = 'Input';
/* harmony default export */ __webpack_exports__["Z"] = (FilledInput);

/***/ }),

/***/ 56154:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_": function() { return /* binding */ getFilledInputUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getFilledInputUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiFilledInput', slot);
}
var filledInputClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiFilledInput', ['root', 'colorSecondary', 'underline', 'focused', 'disabled', 'adornedStart', 'adornedEnd', 'error', 'sizeSmall', 'multiline', 'hiddenLabel', 'input', 'inputSizeSmall', 'inputHiddenLabel', 'inputMultiline', 'inputAdornedStart', 'inputAdornedEnd']);
/* harmony default export */ __webpack_exports__["Z"] = (filledInputClasses);

/***/ }),

/***/ 13827:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ FormControl_FormControl; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/InputBase/utils.js
var utils = __webpack_require__(19);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/isMuiElement.js + 1 modules
var isMuiElement = __webpack_require__(63128);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/FormControlContext.js
var FormControlContext = __webpack_require__(26759);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/formControlClasses.js

function getFormControlUtilityClasses(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiFormControl', slot);
}
var formControlClasses = (0,generateUtilityClasses/* default */.Z)('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);
/* harmony default export */ var FormControl_formControlClasses = ((/* unused pure expression or super */ null && (formControlClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControl/FormControl.js


var _excluded = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"];












var useUtilityClasses = ownerState => {
  var {
    classes,
    margin,
    fullWidth
  } = ownerState;
  var slots = {
    root: ['root', margin !== 'none' && "margin".concat((0,capitalize/* default */.Z)(margin)), fullWidth && 'fullWidth']
  };
  return (0,composeClasses/* default */.Z)(slots, getFormControlUtilityClasses, classes);
};

var FormControlRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiFormControl',
  slot: 'Root',
  overridesResolver: (_ref, styles) => {
    var {
      ownerState
    } = _ref;
    return (0,esm_extends/* default */.Z)({}, styles.root, styles["margin".concat((0,capitalize/* default */.Z)(ownerState.margin))], ownerState.fullWidth && styles.fullWidth);
  }
})(_ref2 => {
  var {
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    display: 'inline-flex',
    flexDirection: 'column',
    position: 'relative',
    // Reset fieldset default style.
    minWidth: 0,
    padding: 0,
    margin: 0,
    border: 0,
    verticalAlign: 'top'
  }, ownerState.margin === 'normal' && {
    marginTop: 16,
    marginBottom: 8
  }, ownerState.margin === 'dense' && {
    marginTop: 8,
    marginBottom: 4
  }, ownerState.fullWidth && {
    width: '100%'
  });
});
/**
 * Provides context such as filled/focused/error/required for form inputs.
 * Relying on the context provides high flexibility and ensures that the state always stays
 * consistent across the children of the `FormControl`.
 * This context is used by the following components:
 *
 *  - FormLabel
 *  - FormHelperText
 *  - Input
 *  - InputLabel
 *
 * You can find one composition example below and more going to [the demos](/components/text-fields/#components).
 *
 * ```jsx
 * <FormControl>
 *   <InputLabel htmlFor="my-input">Email address</InputLabel>
 *   <Input id="my-input" aria-describedby="my-helper-text" />
 *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
 * </FormControl>
 * ```
 *
 * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.
 * For instance, only one input can be focused at the same time, the state shouldn't be shared.
 */

var FormControl = /*#__PURE__*/react.forwardRef(function FormControl(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFormControl'
  });

  var {
    children,
    className,
    color = 'primary',
    component = 'div',
    disabled = false,
    error = false,
    focused: visuallyFocused,
    fullWidth = false,
    hiddenLabel = false,
    margin = 'none',
    required = false,
    size = 'medium',
    variant = 'outlined'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    component,
    disabled,
    error,
    fullWidth,
    hiddenLabel,
    margin,
    required,
    size,
    variant
  });

  var classes = useUtilityClasses(ownerState);
  var [adornedStart, setAdornedStart] = react.useState(() => {
    // We need to iterate through the children and find the Input in order
    // to fully support server-side rendering.
    var initialAdornedStart = false;

    if (children) {
      react.Children.forEach(children, child => {
        if (!(0,isMuiElement/* default */.Z)(child, ['Input', 'Select'])) {
          return;
        }

        var input = (0,isMuiElement/* default */.Z)(child, ['Select']) ? child.props.input : child;

        if (input && (0,utils/* isAdornedStart */.B7)(input.props)) {
          initialAdornedStart = true;
        }
      });
    }

    return initialAdornedStart;
  });
  var [filled, setFilled] = react.useState(() => {
    // We need to iterate through the children and find the Input in order
    // to fully support server-side rendering.
    var initialFilled = false;

    if (children) {
      react.Children.forEach(children, child => {
        if (!(0,isMuiElement/* default */.Z)(child, ['Input', 'Select'])) {
          return;
        }

        if ((0,utils/* isFilled */.vd)(child.props, true)) {
          initialFilled = true;
        }
      });
    }

    return initialFilled;
  });
  var [focusedState, setFocused] = react.useState(false);

  if (disabled && focusedState) {
    setFocused(false);
  }

  var focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;
  var registerEffect;

  if (false) { var registeredInput; }

  var onFilled = react.useCallback(() => {
    setFilled(true);
  }, []);
  var onEmpty = react.useCallback(() => {
    setFilled(false);
  }, []);
  var childContext = {
    adornedStart,
    setAdornedStart,
    color,
    disabled,
    error,
    filled,
    focused,
    fullWidth,
    hiddenLabel,
    size,
    onBlur: () => {
      setFocused(false);
    },
    onEmpty,
    onFilled,
    onFocus: () => {
      setFocused(true);
    },
    registerEffect,
    required,
    variant
  };
  return /*#__PURE__*/(0,jsx_runtime.jsx)(FormControlContext/* default.Provider */.Z.Provider, {
    value: childContext,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(FormControlRoot, (0,esm_extends/* default */.Z)({
      as: component,
      ownerState: ownerState,
      className: (0,clsx_m["default"])(classes.root, className),
      ref: ref
    }, other, {
      children: children
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var FormControl_FormControl = (FormControl);

/***/ }),

/***/ 26759:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

/**
 * @ignore - internal component.
 */

var FormControlContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext();

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (FormControlContext);

/***/ }),

/***/ 11825:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ formControlState; }
/* harmony export */ });
function formControlState(_ref) {
  var {
    props,
    states,
    muiFormControl
  } = _ref;
  return states.reduce((acc, state) => {
    acc[state] = props[state];

    if (muiFormControl) {
      if (typeof props[state] === 'undefined') {
        acc[state] = muiFormControl[state];
      }
    }

    return acc;
  }, {});
}

/***/ }),

/***/ 8230:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useFormControl; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _FormControlContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26759);


function useFormControl() {
  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(_FormControlContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
}

/***/ }),

/***/ 91570:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ FormControlLabel_FormControlLabel; }
});

// UNUSED EXPORTS: FormControlLabelRoot

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js
var useFormControl = __webpack_require__(8230);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js

function getFormControlLabelUtilityClasses(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiFormControlLabel', slot);
}
var formControlLabelClasses = (0,generateUtilityClasses/* default */.Z)('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);
/* harmony default export */ var FormControlLabel_formControlLabelClasses = (formControlLabelClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormControlLabel/FormControlLabel.js


var _excluded = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "value"];













var useUtilityClasses = ownerState => {
  var {
    classes,
    disabled,
    labelPlacement
  } = ownerState;
  var slots = {
    root: ['root', disabled && 'disabled', "labelPlacement".concat((0,capitalize/* default */.Z)(labelPlacement))],
    label: ['label', disabled && 'disabled']
  };
  return (0,composeClasses/* default */.Z)(slots, getFormControlLabelUtilityClasses, classes);
};

var FormControlLabelRoot = (0,styled/* default */.ZP)('label', {
  name: 'MuiFormControlLabel',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [{
      ["& .".concat(FormControlLabel_formControlLabelClasses.label)]: styles.label
    }, styles.root, styles["labelPlacement".concat((0,capitalize/* default */.Z)(ownerState.labelPlacement))]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'inline-flex',
    alignItems: 'center',
    cursor: 'pointer',
    // For correct alignment with the text.
    verticalAlign: 'middle',
    WebkitTapHighlightColor: 'transparent',
    marginLeft: -11,
    marginRight: 16,
    // used for row presentation of radio/checkbox
    ["&.".concat(FormControlLabel_formControlLabelClasses.disabled)]: {
      cursor: 'default'
    }
  }, ownerState.labelPlacement === 'start' && {
    flexDirection: 'row-reverse',
    marginLeft: 16,
    // used for row presentation of radio/checkbox
    marginRight: -11
  }, ownerState.labelPlacement === 'top' && {
    flexDirection: 'column-reverse',
    marginLeft: 16
  }, ownerState.labelPlacement === 'bottom' && {
    flexDirection: 'column',
    marginLeft: 16
  }, {
    ["& .".concat(FormControlLabel_formControlLabelClasses.label)]: {
      ["&.".concat(FormControlLabel_formControlLabelClasses.disabled)]: {
        color: theme.palette.text.disabled
      }
    }
  });
});
/**
 * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.
 * Use this component if you want to display an extra label.
 */

var FormControlLabel = /*#__PURE__*/react.forwardRef(function FormControlLabel(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFormControlLabel'
  });

  var {
    className,
    componentsProps = {},
    control,
    disabled: disabledProp,
    disableTypography,
    label,
    labelPlacement = 'end'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var muiFormControl = (0,useFormControl/* default */.Z)();
  var disabled = disabledProp;

  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {
    disabled = control.props.disabled;
  }

  if (typeof disabled === 'undefined' && muiFormControl) {
    disabled = muiFormControl.disabled;
  }

  var controlProps = {
    disabled
  };
  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {
    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {
      controlProps[key] = props[key];
    }
  });

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disabled,
    label,
    labelPlacement
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(FormControlLabelRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref
  }, other, {
    children: [/*#__PURE__*/react.cloneElement(control, controlProps), label.type === Typography/* default */.Z || disableTypography ? label : /*#__PURE__*/(0,jsx_runtime.jsx)(Typography/* default */.Z, (0,esm_extends/* default */.Z)({
      component: "span",
      className: classes.label
    }, componentsProps.typography, {
      children: label
    }))]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var FormControlLabel_FormControlLabel = (FormControlLabel);

/***/ }),

/***/ 32990:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ FormHelperText_FormHelperText; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/formControlState.js
var formControlState = __webpack_require__(11825);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js
var useFormControl = __webpack_require__(8230);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormHelperText/formHelperTextClasses.js

function getFormHelperTextUtilityClasses(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiFormHelperText', slot);
}
var formHelperTextClasses = (0,generateUtilityClasses/* default */.Z)('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);
/* harmony default export */ var FormHelperText_formHelperTextClasses = (formHelperTextClasses);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/FormHelperText/FormHelperText.js


var _excluded = ["children", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"];











var useUtilityClasses = ownerState => {
  var {
    classes,
    contained,
    size,
    disabled,
    error,
    filled,
    focused,
    required
  } = ownerState;
  var slots = {
    root: ['root', disabled && 'disabled', error && 'error', size && "size".concat((0,capitalize/* default */.Z)(size)), contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']
  };
  return (0,composeClasses/* default */.Z)(slots, getFormHelperTextUtilityClasses, classes);
};

var FormHelperTextRoot = (0,styled/* default */.ZP)('p', {
  name: 'MuiFormHelperText',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.size && styles["size".concat((0,capitalize/* default */.Z)(ownerState.size))], ownerState.contained && styles.contained, ownerState.filled && styles.filled];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    color: theme.palette.text.secondary
  }, theme.typography.caption, {
    textAlign: 'left',
    marginTop: 3,
    marginRight: 0,
    marginBottom: 0,
    marginLeft: 0,
    ["&.".concat(FormHelperText_formHelperTextClasses.disabled)]: {
      color: theme.palette.text.disabled
    },
    ["&.".concat(FormHelperText_formHelperTextClasses.error)]: {
      color: theme.palette.error.main
    }
  }, ownerState.size === 'small' && {
    marginTop: 4
  }, ownerState.contained && {
    marginLeft: 14,
    marginRight: 14
  });
});
var FormHelperText = /*#__PURE__*/react.forwardRef(function FormHelperText(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFormHelperText'
  });

  var {
    children,
    className,
    component = 'p'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var muiFormControl = (0,useFormControl/* default */.Z)();
  var fcs = (0,formControlState/* default */.Z)({
    props,
    muiFormControl,
    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']
  });

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',
    variant: fcs.variant,
    size: fcs.size,
    disabled: fcs.disabled,
    error: fcs.error,
    filled: fcs.filled,
    focused: fcs.focused,
    required: fcs.required
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(FormHelperTextRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className),
    ref: ref
  }, other, {
    children: children === ' ' ?
    /*#__PURE__*/
    // notranslate needed while Google Translate will not fix zero-width space issue
    // eslint-disable-next-line react/no-danger
    (0,jsx_runtime.jsx)("span", {
      className: "notranslate",
      dangerouslySetInnerHTML: {
        __html: '&#8203;'
      }
    }) : children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var FormHelperText_FormHelperText = (FormHelperText);

/***/ }),

/***/ 11780:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export FormLabelRoot */
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(63366);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87462);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(85505);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49408);
/* harmony import */ var _FormControl_formControlState__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(11825);
/* harmony import */ var _FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(8230);
/* harmony import */ var _utils_capitalize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49240);
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47761);
/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(98348);
/* harmony import */ var _formLabelClasses__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(55654);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"];











var useUtilityClasses = ownerState => {
  var {
    classes,
    color,
    focused,
    disabled,
    error,
    filled,
    required
  } = ownerState;
  var slots = {
    root: ['root', "color".concat((0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(color)), disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],
    asterisk: ['asterisk', error && 'error']
  };
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(slots, _formLabelClasses__WEBPACK_IMPORTED_MODULE_4__/* .getFormLabelUtilityClasses */ .M, classes);
};

var FormLabelRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)('label', {
  name: 'MuiFormLabel',
  slot: 'Root',
  overridesResolver: (_ref, styles) => {
    var {
      ownerState
    } = _ref;
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({}, styles.root, ownerState.color === 'secondary' && styles.colorSecondary, ownerState.filled && styles.filled);
  }
})(_ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({
    color: theme.palette.text.secondary
  }, theme.typography.body1, {
    lineHeight: '1.4375em',
    padding: 0,
    position: 'relative',
    ["&.".concat(_formLabelClasses__WEBPACK_IMPORTED_MODULE_4__/* ["default"].focused */ .Z.focused)]: {
      color: theme.palette[ownerState.color].main
    },
    ["&.".concat(_formLabelClasses__WEBPACK_IMPORTED_MODULE_4__/* ["default"].disabled */ .Z.disabled)]: {
      color: theme.palette.text.disabled
    },
    ["&.".concat(_formLabelClasses__WEBPACK_IMPORTED_MODULE_4__/* ["default"].error */ .Z.error)]: {
      color: theme.palette.error.main
    }
  });
});
var AsteriskComponent = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)('span', {
  name: 'MuiFormLabel',
  slot: 'Asterisk',
  overridesResolver: (props, styles) => styles.asterisk
})(_ref3 => {
  var {
    theme
  } = _ref3;
  return {
    ["&.".concat(_formLabelClasses__WEBPACK_IMPORTED_MODULE_4__/* ["default"].error */ .Z.error)]: {
      color: theme.palette.error.main
    }
  };
});
var FormLabel = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FormLabel(inProps, ref) {
  var props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
    props: inProps,
    name: 'MuiFormLabel'
  });

  var {
    children,
    className,
    component = 'label'
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(props, _excluded);

  var muiFormControl = (0,_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)();
  var fcs = (0,_FormControl_formControlState__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)({
    props,
    muiFormControl,
    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']
  });

  var ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({}, props, {
    color: fcs.color || 'primary',
    component,
    disabled: fcs.disabled,
    error: fcs.error,
    filled: fcs.filled,
    focused: fcs.focused,
    required: fcs.required
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(FormLabelRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_11__["default"])(classes.root, className),
    ref: ref
  }, other, {
    children: [children, fcs.required && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(AsteriskComponent, {
      ownerState: ownerState,
      "aria-hidden": true,
      className: classes.asterisk,
      children: ["\u2009", '*']
    })]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ __webpack_exports__["Z"] = (FormLabel);

/***/ }),

/***/ 55654:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "M": function() { return /* binding */ getFormLabelUtilityClasses; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getFormLabelUtilityClasses(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiFormLabel', slot);
}
var formLabelClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);
/* harmony default export */ __webpack_exports__["Z"] = (formLabelClasses);

/***/ }),

/***/ 79612:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ material_GlobalStyles_GlobalStyles; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js + 1 modules
var emotion_react_browser_esm = __webpack_require__(7611);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js





function isEmpty(obj) {
  return obj === undefined || obj === null || Object.keys(obj).length === 0;
}

function GlobalStyles(props) {
  var {
    styles,
    defaultTheme = {}
  } = props;
  var globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(emotion_react_browser_esm.Global, {
    styles: globalStyles
  });
}
 false ? 0 : void 0;
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/defaultTheme.js
var defaultTheme = __webpack_require__(59552);
;// CONCATENATED MODULE: ./node_modules/@mui/material/GlobalStyles/GlobalStyles.js






function GlobalStyles_GlobalStyles(props) {
  return /*#__PURE__*/(0,jsx_runtime.jsx)(GlobalStyles, (0,esm_extends/* default */.Z)({}, props, {
    defaultTheme: defaultTheme/* default */.Z
  }));
}

 false ? 0 : void 0;
/* harmony default export */ var material_GlobalStyles_GlobalStyles = (GlobalStyles_GlobalStyles);

/***/ }),

/***/ 4320:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ Grid_Grid; }
});

// UNUSED EXPORTS: generateColumnGap, generateDirection, generateRowGap

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js
var breakpoints = __webpack_require__(22692);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js
var extendSxProp = __webpack_require__(18297);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Grid/GridContext.js

/**
 * @ignore - internal component.
 */

var GridContext = /*#__PURE__*/react.createContext();

if (false) {}

/* harmony default export */ var Grid_GridContext = (GridContext);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Grid/gridClasses.js

function getGridUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiGrid', slot);
}
var SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];
var WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];
var GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var gridClasses = (0,generateUtilityClasses/* default */.Z)('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings
...SPACINGS.map(spacing => "spacing-xs-".concat(spacing)), // direction values
...DIRECTIONS.map(direction => "direction-xs-".concat(direction)), // wrap values
...WRAPS.map(wrap => "wrap-xs-".concat(wrap)), // grid sizes for all breakpoints
...GRID_SIZES.map(size => "grid-xs-".concat(size)), ...GRID_SIZES.map(size => "grid-sm-".concat(size)), ...GRID_SIZES.map(size => "grid-md-".concat(size)), ...GRID_SIZES.map(size => "grid-lg-".concat(size)), ...GRID_SIZES.map(size => "grid-xl-".concat(size))]);
/* harmony default export */ var Grid_gridClasses = (gridClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Grid/Grid.js


var _excluded = ["className", "columns", "columnSpacing", "component", "container", "direction", "item", "lg", "md", "rowSpacing", "sm", "spacing", "wrap", "xl", "xs", "zeroMinWidth"]; // A grid component using the following libs as inspiration.
//
// For the implementation:
// - https://getbootstrap.com/docs/4.3/layout/grid/
// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css
// - https://github.com/roylee0704/react-flexbox-grid
// - https://material.angularjs.org/latest/layout/introduction
//
// Follow this flexbox Guide to better understand the underlying model:
// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/












function getOffset(val) {
  var parse = parseFloat(val);
  return "".concat(parse).concat(String(val).replace(String(parse), '') || 'px');
}

function generateGrid(globalStyles, theme, breakpoint, ownerState) {
  var size = ownerState[breakpoint];

  if (!size) {
    return;
  }

  var styles = {};

  if (size === true) {
    // For the auto layouting
    styles = {
      flexBasis: 0,
      flexGrow: 1,
      maxWidth: '100%'
    };
  } else if (size === 'auto') {
    styles = {
      flexBasis: 'auto',
      flexGrow: 0,
      flexShrink: 0,
      maxWidth: 'none',
      width: 'auto'
    };
  } else {
    var columnsBreakpointValues = (0,breakpoints/* resolveBreakpointValues */.P$)({
      values: ownerState.columns,
      breakpoints: theme.breakpoints.values
    });
    var columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.

    var width = "".concat(Math.round(size / columnValue * 10e7) / 10e5, "%");
    var more = {};

    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {
      var themeSpacing = theme.spacing(ownerState.columnSpacing);

      if (themeSpacing !== '0px') {
        var fullWidth = "calc(".concat(width, " + ").concat(getOffset(themeSpacing), ")");
        more = {
          flexBasis: fullWidth,
          maxWidth: fullWidth
        };
      }
    } // Close to the bootstrap implementation:
    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41


    styles = (0,esm_extends/* default */.Z)({
      flexBasis: width,
      flexGrow: 0,
      maxWidth: width
    }, more);
  } // No need for a media query for the first size.


  if (theme.breakpoints.values[breakpoint] === 0) {
    Object.assign(globalStyles, styles);
  } else {
    globalStyles[theme.breakpoints.up(breakpoint)] = styles;
  }
}

function generateDirection(_ref) {
  var {
    theme,
    ownerState
  } = _ref;
  var directionValues = (0,breakpoints/* resolveBreakpointValues */.P$)({
    values: ownerState.direction,
    breakpoints: theme.breakpoints.values
  });
  return (0,breakpoints/* handleBreakpoints */.k9)({
    theme
  }, directionValues, propValue => {
    var output = {
      flexDirection: propValue
    };

    if (propValue.indexOf('column') === 0) {
      output["& > .".concat(Grid_gridClasses.item)] = {
        maxWidth: 'none'
      };
    }

    return output;
  });
}
function generateRowGap(_ref2) {
  var {
    theme,
    ownerState
  } = _ref2;
  var {
    container,
    rowSpacing
  } = ownerState;
  var styles = {};

  if (container && rowSpacing !== 0) {
    var rowSpacingValues = (0,breakpoints/* resolveBreakpointValues */.P$)({
      values: rowSpacing,
      breakpoints: theme.breakpoints.values
    });
    styles = (0,breakpoints/* handleBreakpoints */.k9)({
      theme
    }, rowSpacingValues, propValue => {
      var themeSpacing = theme.spacing(propValue);

      if (themeSpacing !== '0px') {
        return {
          marginTop: "-".concat(getOffset(themeSpacing)),
          ["& > .".concat(Grid_gridClasses.item)]: {
            paddingTop: getOffset(themeSpacing)
          }
        };
      }

      return {};
    });
  }

  return styles;
}
function generateColumnGap(_ref3) {
  var {
    theme,
    ownerState
  } = _ref3;
  var {
    container,
    columnSpacing
  } = ownerState;
  var styles = {};

  if (container && columnSpacing !== 0) {
    var columnSpacingValues = (0,breakpoints/* resolveBreakpointValues */.P$)({
      values: columnSpacing,
      breakpoints: theme.breakpoints.values
    });
    styles = (0,breakpoints/* handleBreakpoints */.k9)({
      theme
    }, columnSpacingValues, propValue => {
      var themeSpacing = theme.spacing(propValue);

      if (themeSpacing !== '0px') {
        return {
          width: "calc(100% + ".concat(getOffset(themeSpacing), ")"),
          marginLeft: "-".concat(getOffset(themeSpacing)),
          ["& > .".concat(Grid_gridClasses.item)]: {
            paddingLeft: getOffset(themeSpacing)
          }
        };
      }

      return {};
    });
  }

  return styles;
} // Default CSS values
// flex: '0 1 auto',
// flexDirection: 'row',
// alignItems: 'flex-start',
// flexWrap: 'nowrap',
// justifyContent: 'flex-start',

var GridRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiGrid',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      container,
      direction,
      item,
      lg,
      md,
      sm,
      spacing,
      wrap,
      xl,
      xs,
      zeroMinWidth
    } = props.ownerState;
    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles["spacing-xs-".concat(String(spacing))], direction !== 'row' && styles["direction-xs-".concat(String(direction))], wrap !== 'wrap' && styles["wrap-xs-".concat(String(wrap))], xs !== false && styles["grid-xs-".concat(String(xs))], sm !== false && styles["grid-sm-".concat(String(sm))], md !== false && styles["grid-md-".concat(String(md))], lg !== false && styles["grid-lg-".concat(String(lg))], xl !== false && styles["grid-xl-".concat(String(xl))]];
  }
})(_ref4 => {
  var {
    ownerState
  } = _ref4;
  return (0,esm_extends/* default */.Z)({
    boxSizing: 'border-box'
  }, ownerState.container && {
    display: 'flex',
    flexWrap: 'wrap',
    width: '100%'
  }, ownerState.item && {
    margin: 0 // For instance, it's useful when used with a `figure` element.

  }, ownerState.zeroMinWidth && {
    minWidth: 0
  }, ownerState.wrap === 'nowrap' && {
    flexWrap: 'nowrap'
  }, ownerState.wrap === 'reverse' && {
    flexWrap: 'wrap-reverse'
  });
}, generateDirection, generateRowGap, generateColumnGap, _ref5 => {
  var {
    theme,
    ownerState
  } = _ref5;
  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {
    // Use side effect over immutability for better performance.
    generateGrid(globalStyles, theme, breakpoint, ownerState);
    return globalStyles;
  }, {});
});

var useUtilityClasses = ownerState => {
  var {
    classes,
    container,
    direction,
    item,
    lg,
    md,
    sm,
    spacing,
    wrap,
    xl,
    xs,
    zeroMinWidth
  } = ownerState;
  var slots = {
    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && "spacing-xs-".concat(String(spacing)), direction !== 'row' && "direction-xs-".concat(String(direction)), wrap !== 'wrap' && "wrap-xs-".concat(String(wrap)), xs !== false && "grid-xs-".concat(String(xs)), sm !== false && "grid-sm-".concat(String(sm)), md !== false && "grid-md-".concat(String(md)), lg !== false && "grid-lg-".concat(String(lg)), xl !== false && "grid-xl-".concat(String(xl))]
  };
  return (0,composeClasses/* default */.Z)(slots, getGridUtilityClass, classes);
};

var Grid = /*#__PURE__*/react.forwardRef(function Grid(inProps, ref) {
  var themeProps = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiGrid'
  });
  var props = (0,extendSxProp/* default */.Z)(themeProps);

  var {
    className,
    columns: columnsProp,
    columnSpacing: columnSpacingProp,
    component = 'div',
    container = false,
    direction = 'row',
    item = false,
    lg = false,
    md = false,
    rowSpacing: rowSpacingProp,
    sm = false,
    spacing = 0,
    wrap = 'wrap',
    xl = false,
    xs = false,
    zeroMinWidth = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var rowSpacing = rowSpacingProp || spacing;
  var columnSpacing = columnSpacingProp || spacing;
  var columnsContext = react.useContext(Grid_GridContext); // setting prop before context to accomodate nesting
  // colums set with default breakpoint unit of 12

  var columns = columnsProp || columnsContext || 12;

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    columns,
    container,
    direction,
    item,
    lg,
    md,
    sm,
    rowSpacing,
    columnSpacing,
    wrap,
    xl,
    xs,
    zeroMinWidth
  });

  var classes = useUtilityClasses(ownerState);

  var wrapChild = element => columns !== 12 ? /*#__PURE__*/(0,jsx_runtime.jsx)(Grid_GridContext.Provider, {
    value: columns,
    children: element
  }) : element;

  return wrapChild( /*#__PURE__*/(0,jsx_runtime.jsx)(GridRoot, (0,esm_extends/* default */.Z)({
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className),
    as: component,
    ref: ref
  }, other)));
});
 false ? 0 : void 0;

if (false) { var requireProp; }

/* harmony default export */ var Grid_Grid = (Grid);

/***/ }),

/***/ 64522:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87462);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63366);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81423);
/* harmony import */ var _styles_useTheme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66449);
/* harmony import */ var _transitions_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(40615);
/* harmony import */ var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(65973);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];








function getScale(value) {
  return "scale(".concat(value, ", ").concat(value ** 2, ")");
}

var styles = {
  entering: {
    opacity: 1,
    transform: getScale(1)
  },
  entered: {
    opacity: 1,
    transform: 'none'
  }
};
/**
 * The Grow transition is used by the [Tooltip](/components/tooltips/) and
 * [Popover](/components/popover/) components.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

var Grow = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Grow(props, ref) {
  var {
    addEndListener,
    appear = true,
    children: _children,
    easing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style,
    timeout = 'auto',
    // eslint-disable-next-line react/prop-types
    TransitionComponent = react_transition_group__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(props, _excluded);

  var timer = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  var autoTimeout = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  var theme = (0,_styles_useTheme__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)();
  var nodeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  var foreignRef = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(_children.ref, ref);
  var handleRef = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(nodeRef, foreignRef);

  var normalizedTransitionCallback = callback => maybeIsAppearing => {
    if (callback) {
      var node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.

      if (maybeIsAppearing === undefined) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };

  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_6__/* .reflow */ .n)(node); // So the animation always start from the start.

    var {
      duration: transitionDuration,
      delay,
      easing: transitionTimingFunction
    } = (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_6__/* .getTransitionProps */ .C)({
      style,
      timeout,
      easing
    }, {
      mode: 'enter'
    });
    var duration;

    if (timeout === 'auto') {
      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
      autoTimeout.current = duration;
    } else {
      duration = transitionDuration;
    }

    node.style.transition = [theme.transitions.create('opacity', {
      duration,
      delay
    }), theme.transitions.create('transform', {
      duration: duration * 0.666,
      delay,
      easing: transitionTimingFunction
    })].join(',');

    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(node => {
    var {
      duration: transitionDuration,
      delay,
      easing: transitionTimingFunction
    } = (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_6__/* .getTransitionProps */ .C)({
      style,
      timeout,
      easing
    }, {
      mode: 'exit'
    });
    var duration;

    if (timeout === 'auto') {
      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
      autoTimeout.current = duration;
    } else {
      duration = transitionDuration;
    }

    node.style.transition = [theme.transitions.create('opacity', {
      duration,
      delay
    }), theme.transitions.create('transform', {
      duration: duration * 0.666,
      delay: delay || duration * 0.333,
      easing: transitionTimingFunction
    })].join(',');
    node.style.opacity = '0';
    node.style.transform = getScale(0.75);

    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);

  var handleAddEndListener = next => {
    if (timeout === 'auto') {
      timer.current = setTimeout(next, autoTimeout.current || 0);
    }

    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };

  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    return () => {
      clearTimeout(timer.current);
    };
  }, []);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TransitionComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
    appear: appear,
    in: inProp,
    nodeRef: nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout === 'auto' ? null : timeout
  }, other, {
    children: (state, childProps) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(_children, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
        style: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
          opacity: 0,
          transform: getScale(0.75),
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, styles[state], style, _children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
 false ? 0 : void 0;
Grow.muiSupportAuto = true;
/* harmony default export */ __webpack_exports__["Z"] = (Grow);

/***/ }),

/***/ 71027:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Hidden_Hidden; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeProps/getThemeProps.js
var getThemeProps = __webpack_require__(94379);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(15706);
var hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/@mui/material/useMediaQuery/useMediaQuery.js
var useMediaQuery = __webpack_require__(22840);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Hidden/withWidth.js


var _excluded = ["initialWidth", "width"];









var breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // By default, returns true if screen width is the same or greater than the given breakpoint.

var isWidthUp = function isWidthUp(breakpoint, width) {
  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  if (inclusive) {
    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);
  }

  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);
}; // By default, returns true if screen width is the same or less than the given breakpoint.

var isWidthDown = function isWidthDown(breakpoint, width) {
  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (inclusive) {
    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);
  }

  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);
};

var withWidth = function withWidth() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return Component => {
    var {
      withTheme: withThemeOption = false,
      noSSR = false,
      initialWidth: initialWidthOption
    } = options;

    function WithWidth(props) {
      var contextTheme = (0,useTheme/* default */.Z)();
      var theme = props.theme || contextTheme;

      var _getThemeProps = (0,getThemeProps/* default */.Z)({
        theme,
        name: 'MuiWithWidth',
        props
      }),
          {
        initialWidth,
        width
      } = _getThemeProps,
          other = (0,objectWithoutPropertiesLoose/* default */.Z)(_getThemeProps, _excluded);

      var [mountedState, setMountedState] = react.useState(false);
      (0,useEnhancedEffect/* default */.Z)(() => {
        setMountedState(true);
      }, []);
      /**
       * innerWidth |xs      sm      md      lg      xl
       *            |-------|-------|-------|-------|------>
       * width      |  xs   |  sm   |  md   |  lg   |  xl
       */

      var keys = theme.breakpoints.keys.slice().reverse();
      var widthComputed = keys.reduce((output, key) => {
        // eslint-disable-next-line react-hooks/rules-of-hooks
        var matches = (0,useMediaQuery/* default */.Z)(theme.breakpoints.up(key));
        return !output && matches ? key : output;
      }, null);

      var more = (0,esm_extends/* default */.Z)({
        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption
      }, withThemeOption ? {
        theme
      } : {}, other); // When rendering the component on the server,
      // we have no idea about the client browser screen width.
      // In order to prevent blinks and help the reconciliation of the React tree
      // we are not rendering the child component.
      //
      // An alternative is to use the `initialWidth` property.


      if (more.width === undefined) {
        return null;
      }

      return /*#__PURE__*/(0,jsx_runtime.jsx)(Component, (0,esm_extends/* default */.Z)({}, more));
    }

     false ? 0 : void 0;

    if (false) {}

    hoist_non_react_statics_cjs_default()(WithWidth, Component);
    return WithWidth;
  };
};

/* harmony default export */ var Hidden_withWidth = (withWidth);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Hidden/HiddenJs.js




/**
 * @ignore - internal component.
 */

function HiddenJs(props) {
  var {
    children,
    only,
    width
  } = props;
  var theme = (0,useTheme/* default */.Z)();
  var visible = true; // `only` check is faster to get out sooner if used.

  if (only) {
    if (Array.isArray(only)) {
      for (var i = 0; i < only.length; i += 1) {
        var breakpoint = only[i];

        if (width === breakpoint) {
          visible = false;
          break;
        }
      }
    } else if (only && width === only) {
      visible = false;
    }
  } // Allow `only` to be combined with other props. If already hidden, no need to check others.


  if (visible) {
    // determine visibility based on the smallest size up
    for (var _i = 0; _i < theme.breakpoints.keys.length; _i += 1) {
      var _breakpoint = theme.breakpoints.keys[_i];
      var breakpointUp = props["".concat(_breakpoint, "Up")];
      var breakpointDown = props["".concat(_breakpoint, "Down")];

      if (breakpointUp && isWidthUp(_breakpoint, width) || breakpointDown && isWidthDown(_breakpoint, width)) {
        visible = false;
        break;
      }
    }
  }

  if (!visible) {
    return null;
  }

  return children;
}

HiddenJs.propTypes = {
  /**
   * The content of the component.
   */
  children: (prop_types_default()).node,

  /**
   * @ignore
   */
  className: (prop_types_default()).string,

  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: prop_types_default().oneOf(['js', 'css']),

  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use a heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: prop_types_default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']),

  /**
   * If `true`, screens this size and down are hidden.
   */
  lgDown: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and up are hidden.
   */
  lgUp: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and down are hidden.
   */
  mdDown: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and up are hidden.
   */
  mdUp: (prop_types_default()).bool,

  /**
   * Hide the given breakpoint(s).
   */
  only: prop_types_default().oneOfType([prop_types_default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']), prop_types_default().arrayOf(prop_types_default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),

  /**
   * If `true`, screens this size and down are hidden.
   */
  smDown: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and up are hidden.
   */
  smUp: (prop_types_default()).bool,

  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: (prop_types_default()).string.isRequired,

  /**
   * If `true`, screens this size and down are hidden.
   */
  xlDown: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and up are hidden.
   */
  xlUp: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and down are hidden.
   */
  xsDown: (prop_types_default()).bool,

  /**
   * If `true`, screens this size and up are hidden.
   */
  xsUp: (prop_types_default()).bool
};

if (false) {}

/* harmony default export */ var Hidden_HiddenJs = (Hidden_withWidth()(HiddenJs));
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Hidden/hiddenCssClasses.js

function getHiddenCssUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('PrivateHiddenCss', slot);
}
var hiddenCssClasses = (0,generateUtilityClasses/* default */.Z)('PrivateHiddenCss', ['root', 'xlDown', 'xlUp', 'onlyXl', 'lgDown', 'lgUp', 'onlyLg', 'mdDown', 'mdUp', 'onlyMd', 'smDown', 'smUp', 'onlySm', 'xsDown', 'xsUp', 'onlyXs']);
/* harmony default export */ var Hidden_hiddenCssClasses = ((/* unused pure expression or super */ null && (hiddenCssClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Hidden/HiddenCss.js


var HiddenCss_excluded = ["children", "className", "only"];










var useUtilityClasses = ownerState => {
  var {
    classes,
    breakpoints
  } = ownerState;
  var slots = {
    root: ['root', ...breakpoints.map(_ref => {
      var {
        breakpoint,
        dir
      } = _ref;
      return dir === 'only' ? "".concat(dir).concat((0,capitalize/* default */.Z)(breakpoint)) : "".concat(breakpoint).concat((0,capitalize/* default */.Z)(dir));
    })]
  };
  return (0,composeClasses/* default */.Z)(slots, getHiddenCssUtilityClass, classes);
};

var HiddenCssRoot = (0,styled/* default */.ZP)('div', {
  name: 'PrivateHiddenCss',
  slot: 'Root'
})(_ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  var hidden = {
    display: 'none'
  };
  return (0,esm_extends/* default */.Z)({}, ownerState.breakpoints.map(_ref3 => {
    var {
      breakpoint,
      dir
    } = _ref3;

    if (dir === 'only') {
      return {
        [theme.breakpoints.only(breakpoint)]: hidden
      };
    }

    return dir === 'up' ? {
      [theme.breakpoints.up(breakpoint)]: hidden
    } : {
      [theme.breakpoints.down(breakpoint)]: hidden
    };
  }).reduce((r, o) => {
    Object.keys(o).forEach(k => {
      r[k] = o[k];
    });
    return r;
  }, {}));
});
/**
 * @ignore - internal component.
 */

function HiddenCss(props) {
  var {
    children,
    className,
    only
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, HiddenCss_excluded);

  var theme = (0,useTheme/* default */.Z)();

  if (false) { var unknownProps; }

  var breakpoints = [];

  for (var i = 0; i < theme.breakpoints.keys.length; i += 1) {
    var breakpoint = theme.breakpoints.keys[i];
    var breakpointUp = other["".concat(breakpoint, "Up")];
    var breakpointDown = other["".concat(breakpoint, "Down")];

    if (breakpointUp) {
      breakpoints.push({
        breakpoint,
        dir: 'up'
      });
    }

    if (breakpointDown) {
      breakpoints.push({
        breakpoint,
        dir: 'down'
      });
    }
  }

  if (only) {
    var onlyBreakpoints = Array.isArray(only) ? only : [only];
    onlyBreakpoints.forEach(breakpoint => {
      breakpoints.push({
        breakpoint,
        dir: 'only'
      });
    });
  }

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    breakpoints
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(HiddenCssRoot, {
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    children: children
  });
}

 false ? 0 : void 0;
/* harmony default export */ var Hidden_HiddenCss = (HiddenCss);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Hidden/Hidden.js


var Hidden_excluded = ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"];



/**
 * Responsively hides children based on the selected implementation.
 */



function Hidden(props) {
  var {
    implementation = 'js',
    lgDown = false,
    lgUp = false,
    mdDown = false,
    mdUp = false,
    smDown = false,
    smUp = false,
    xlDown = false,
    xlUp = false,
    xsDown = false,
    xsUp = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Hidden_excluded);

  if (implementation === 'js') {
    return /*#__PURE__*/(0,jsx_runtime.jsx)(Hidden_HiddenJs, (0,esm_extends/* default */.Z)({
      lgDown: lgDown,
      lgUp: lgUp,
      mdDown: mdDown,
      mdUp: mdUp,
      smDown: smDown,
      smUp: smUp,
      xlDown: xlDown,
      xlUp: xlUp,
      xsDown: xsDown,
      xsUp: xsUp
    }, other));
  }

  return /*#__PURE__*/(0,jsx_runtime.jsx)(Hidden_HiddenCss, (0,esm_extends/* default */.Z)({
    lgDown: lgDown,
    lgUp: lgUp,
    mdDown: mdDown,
    mdUp: mdUp,
    smDown: smDown,
    smUp: smUp,
    xlDown: xlDown,
    xlUp: xlUp,
    xsDown: xsDown,
    xsUp: xsUp
  }, other));
}

 false ? 0 : void 0;
/* harmony default export */ var Hidden_Hidden = (Hidden);

/***/ }),

/***/ 90581:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ IconButton_IconButton; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/IconButton/iconButtonClasses.js

function getIconButtonUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiIconButton', slot);
}
var iconButtonClasses = (0,generateUtilityClasses/* default */.Z)('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);
/* harmony default export */ var IconButton_iconButtonClasses = (iconButtonClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/IconButton/IconButton.js


var _excluded = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"];












var useUtilityClasses = ownerState => {
  var {
    classes,
    disabled,
    color,
    edge,
    size
  } = ownerState;
  var slots = {
    root: ['root', disabled && 'disabled', color !== 'default' && "color".concat((0,capitalize/* default */.Z)(color)), edge && "edge".concat((0,capitalize/* default */.Z)(edge)), "size".concat((0,capitalize/* default */.Z)(size))]
  };
  return (0,composeClasses/* default */.Z)(slots, getIconButtonUtilityClass, classes);
};

var IconButtonRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  name: 'MuiIconButton',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.color !== 'default' && styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))], ownerState.edge && styles["edge".concat((0,capitalize/* default */.Z)(ownerState.edge))], styles["size".concat((0,capitalize/* default */.Z)(ownerState.size))]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    textAlign: 'center',
    flex: '0 0 auto',
    fontSize: theme.typography.pxToRem(24),
    padding: 8,
    borderRadius: '50%',
    overflow: 'visible',
    // Explicitly set the default value to solve a bug on IE11.
    color: theme.palette.action.active,
    transition: theme.transitions.create('background-color', {
      duration: theme.transitions.duration.shortest
    })
  }, !ownerState.disableRipple && {
    '&:hover': {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.action.active, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }
  }, ownerState.edge === 'start' && {
    marginLeft: ownerState.size === 'small' ? -3 : -12
  }, ownerState.edge === 'end' && {
    marginRight: ownerState.size === 'small' ? -3 : -12
  });
}, _ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({}, ownerState.color === 'inherit' && {
    color: 'inherit'
  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && (0,esm_extends/* default */.Z)({
    color: theme.palette[ownerState.color].main
  }, !ownerState.disableRipple && {
    '&:hover': {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }
  }), ownerState.size === 'small' && {
    padding: 5,
    fontSize: theme.typography.pxToRem(18)
  }, ownerState.size === 'large' && {
    padding: 12,
    fontSize: theme.typography.pxToRem(28)
  }, {
    ["&.".concat(IconButton_iconButtonClasses.disabled)]: {
      backgroundColor: 'transparent',
      color: theme.palette.action.disabled
    }
  });
});
/**
 * Refer to the [Icons](/components/icons/) section of the documentation
 * regarding the available icon options.
 */

var IconButton = /*#__PURE__*/react.forwardRef(function IconButton(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiIconButton'
  });

  var {
    edge = false,
    children,
    className,
    color = 'default',
    disabled = false,
    disableFocusRipple = false,
    size = 'medium'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    edge,
    color,
    disabled,
    disableFocusRipple,
    size
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(IconButtonRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled: disabled,
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var IconButton_IconButton = (IconButton);

/***/ }),

/***/ 3320:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(63366);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87462);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49408);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(26486);
/* harmony import */ var _InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(86360);
/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(98348);
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47761);
/* harmony import */ var _inputClasses__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15717);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "type"];










var useUtilityClasses = ownerState => {
  var {
    classes,
    disableUnderline
  } = ownerState;
  var slots = {
    root: ['root', !disableUnderline && 'underline'],
    input: ['input']
  };
  var composedClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(slots, _inputClasses__WEBPACK_IMPORTED_MODULE_3__/* .getInputUtilityClass */ .l, classes);
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({}, classes, composedClasses);
};

var InputRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)(_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .InputBaseRoot */ .Ej, {
  shouldForwardProp: prop => (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* .rootShouldForwardProp */ .FO)(prop) || prop === 'classes',
  name: 'MuiInput',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [...(0,_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .rootOverridesResolver */ .Gx)(props, styles), !ownerState.disableUnderline && styles.underline];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  var light = theme.palette.mode === 'light';
  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    position: 'relative'
  }, ownerState.formControl && {
    'label + &': {
      marginTop: 16
    }
  }, !ownerState.disableUnderline && {
    '&:after': {
      borderBottom: "2px solid ".concat(theme.palette[ownerState.color].main),
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: 'absolute',
      right: 0,
      transform: 'scaleX(0)',
      transition: theme.transitions.create('transform', {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: 'none' // Transparent to the hover style.

    },
    ["&.".concat(_inputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].focused */ .Z.focused, ":after")]: {
      transform: 'scaleX(1)'
    },
    ["&.".concat(_inputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].error */ .Z.error, ":after")]: {
      borderBottomColor: theme.palette.error.main,
      transform: 'scaleX(1)' // error is always underlined in red

    },
    '&:before': {
      borderBottom: "1px solid ".concat(bottomLineColor),
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: 'absolute',
      right: 0,
      transition: theme.transitions.create('border-bottom-color', {
        duration: theme.transitions.duration.shorter
      }),
      pointerEvents: 'none' // Transparent to the hover style.

    },
    ["&:hover:not(.".concat(_inputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].disabled */ .Z.disabled, "):before")]: {
      borderBottom: "2px solid ".concat(theme.palette.text.primary),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        borderBottom: "1px solid ".concat(bottomLineColor)
      }
    },
    ["&.".concat(_inputClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].disabled */ .Z.disabled, ":before")]: {
      borderBottomStyle: 'dotted'
    }
  });
});
var InputInput = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)(_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .InputBaseComponent */ .rA, {
  name: 'MuiInput',
  slot: 'Input',
  overridesResolver: _InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* .inputOverridesResolver */ ._o
})({});
var Input = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Input(inProps, ref) {
  var props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
    props: inProps,
    name: 'MuiInput'
  });

  var {
    disableUnderline,
    components = {},
    componentsProps: componentsPropsProp,
    fullWidth = false,
    inputComponent = 'input',
    multiline = false,
    type = 'text'
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(props, _excluded);

  var classes = useUtilityClasses(props);
  var ownerState = {
    disableUnderline
  };
  var inputComponentsProps = {
    root: {
      ownerState
    }
  };
  var componentsProps = componentsPropsProp ? (0,_mui_utils__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(componentsPropsProp, inputComponentsProps) : inputComponentsProps;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_InputBase_InputBase__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    components: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
      Root: InputRoot,
      Input: InputInput
    }, components),
    componentsProps: componentsProps,
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    ref: ref,
    type: type
  }, other, {
    classes: classes
  }));
});
 false ? 0 : void 0;
Input.muiName = 'Input';
/* harmony default export */ __webpack_exports__["Z"] = (Input);

/***/ }),

/***/ 15717:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "l": function() { return /* binding */ getInputUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getInputUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiInput', slot);
}
var inputClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiInput', ['root', 'formControl', 'focused', 'disabled', 'colorSecondary', 'underline', 'error', 'sizeSmall', 'multiline', 'fullWidth', 'input', 'inputSizeSmall', 'inputMultiline', 'inputTypeSearch']);
/* harmony default export */ __webpack_exports__["Z"] = (inputClasses);

/***/ }),

/***/ 86360:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "rA": function() { return /* binding */ InputBaseComponent; },
  "Ej": function() { return /* binding */ InputBaseRoot; },
  "ZP": function() { return /* binding */ InputBase_InputBase; },
  "_o": function() { return /* binding */ inputOverridesResolver; },
  "Gx": function() { return /* binding */ rootOverridesResolver; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js
var formatMuiErrorMessage = __webpack_require__(93864);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useForkRef.js
var useForkRef = __webpack_require__(28127);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerWindow.js
var ownerWindow = __webpack_require__(19475);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/debounce.js
var debounce = __webpack_require__(35176);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(86164);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js


var _excluded = ["onChange", "maxRows", "minRows", "style", "value"];





function getStyleValue(computedStyle, property) {
  return parseInt(computedStyle[property], 10) || 0;
}

var styles = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: 'hidden',
    // Remove from the content flow
    position: 'absolute',
    // Ignore the scrollbar width
    overflow: 'hidden',
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: 'translateZ(0)'
  }
};
var TextareaAutosize = /*#__PURE__*/react.forwardRef(function TextareaAutosize(props, ref) {
  var {
    onChange,
    maxRows,
    minRows = 1,
    style,
    value
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var {
    current: isControlled
  } = react.useRef(value != null);
  var inputRef = react.useRef(null);
  var handleRef = (0,useForkRef/* default */.Z)(ref, inputRef);
  var shadowRef = react.useRef(null);
  var renders = react.useRef(0);
  var [state, setState] = react.useState({});
  var syncHeight = react.useCallback(() => {
    var input = inputRef.current;
    var containerWindow = (0,ownerWindow/* default */.Z)(input);
    var computedStyle = containerWindow.getComputedStyle(input); // If input's width is shrunk and it's not visible, don't sync height.

    if (computedStyle.width === '0px') {
      return;
    }

    var inputShallow = shadowRef.current;
    inputShallow.style.width = computedStyle.width;
    inputShallow.value = input.value || props.placeholder || 'x';

    if (inputShallow.value.slice(-1) === '\n') {
      // Certain fonts which overflow the line height will cause the textarea
      // to report a different scrollHeight depending on whether the last line
      // is empty. Make it non-empty to avoid this issue.
      inputShallow.value += ' ';
    }

    var boxSizing = computedStyle['box-sizing'];
    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');
    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content

    var innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row

    inputShallow.value = 'x';
    var singleRowHeight = inputShallow.scrollHeight; // The height of the outer content

    var outerHeight = innerHeight;

    if (minRows) {
      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
    }

    if (maxRows) {
      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
    }

    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.

    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);
    var overflow = Math.abs(outerHeight - innerHeight) <= 1;
    setState(prevState => {
      // Need a large enough difference to update the height.
      // This prevents infinite rendering loop.
      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {
        renders.current += 1;
        return {
          overflow,
          outerHeightStyle
        };
      }

      if (false) {}

      return prevState;
    });
  }, [maxRows, minRows, props.placeholder]);
  react.useEffect(() => {
    var handleResize = (0,debounce/* default */.Z)(() => {
      renders.current = 0;
      syncHeight();
    });
    var containerWindow = (0,ownerWindow/* default */.Z)(inputRef.current);
    containerWindow.addEventListener('resize', handleResize);
    var resizeObserver;

    if (typeof ResizeObserver !== 'undefined') {
      resizeObserver = new ResizeObserver(handleResize);
      resizeObserver.observe(inputRef.current);
    }

    return () => {
      handleResize.clear();
      containerWindow.removeEventListener('resize', handleResize);

      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  }, [syncHeight]);
  (0,useEnhancedEffect/* default */.Z)(() => {
    syncHeight();
  });
  react.useEffect(() => {
    renders.current = 0;
  }, [value]);

  var handleChange = event => {
    renders.current = 0;

    if (!isControlled) {
      syncHeight();
    }

    if (onChange) {
      onChange(event);
    }
  };

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("textarea", (0,esm_extends/* default */.Z)({
      value: value,
      onChange: handleChange,
      ref: handleRef // Apply the rows prop to get a "correct" first SSR paint
      ,
      rows: minRows,
      style: (0,esm_extends/* default */.Z)({
        height: state.outerHeightStyle,
        // Need a large enough difference to allow scrolling.
        // This prevents infinite rendering loop.
        overflow: state.overflow ? 'hidden' : null
      }, style)
    }, other)), /*#__PURE__*/(0,jsx_runtime.jsx)("textarea", {
      "aria-hidden": true,
      className: props.className,
      readOnly: true,
      ref: shadowRef,
      tabIndex: -1,
      style: (0,esm_extends/* default */.Z)({}, styles.shadow, style, {
        padding: 0
      })
    })]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var TextareaAutosize_TextareaAutosize = (TextareaAutosize);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/formControlState.js
var formControlState = __webpack_require__(11825);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/FormControlContext.js
var FormControlContext = __webpack_require__(26759);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js
var useFormControl = __webpack_require__(8230);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var utils_useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var utils_useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/@mui/material/GlobalStyles/GlobalStyles.js + 1 modules
var GlobalStyles = __webpack_require__(79612);
// EXTERNAL MODULE: ./node_modules/@mui/material/InputBase/utils.js
var utils = __webpack_require__(19);
// EXTERNAL MODULE: ./node_modules/@mui/material/InputBase/inputBaseClasses.js
var inputBaseClasses = __webpack_require__(23660);
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputBase/InputBase.js



var InputBase_excluded = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "startAdornment", "type", "value"];

















var rootOverridesResolver = (props, styles) => {
  var {
    ownerState
  } = props;
  return [styles.root, ownerState.formControl && styles.formControl, ownerState.startAdornment && styles.adornedStart, ownerState.endAdornment && styles.adornedEnd, ownerState.error && styles.error, ownerState.size === 'small' && styles.sizeSmall, ownerState.multiline && styles.multiline, ownerState.color && styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))], ownerState.fullWidth && styles.fullWidth, ownerState.hiddenLabel && styles.hiddenLabel];
};
var inputOverridesResolver = (props, styles) => {
  var {
    ownerState
  } = props;
  return [styles.input, ownerState.size === 'small' && styles.inputSizeSmall, ownerState.multiline && styles.inputMultiline, ownerState.type === 'search' && styles.inputTypeSearch, ownerState.startAdornment && styles.inputAdornedStart, ownerState.endAdornment && styles.inputAdornedEnd, ownerState.hiddenLabel && styles.inputHiddenLabel];
};

var useUtilityClasses = ownerState => {
  var {
    classes,
    color,
    disabled,
    error,
    endAdornment,
    focused,
    formControl,
    fullWidth,
    hiddenLabel,
    multiline,
    size,
    startAdornment,
    type
  } = ownerState;
  var slots = {
    root: ['root', "color".concat((0,capitalize/* default */.Z)(color)), disabled && 'disabled', error && 'error', fullWidth && 'fullWidth', focused && 'focused', formControl && 'formControl', size === 'small' && 'sizeSmall', multiline && 'multiline', startAdornment && 'adornedStart', endAdornment && 'adornedEnd', hiddenLabel && 'hiddenLabel'],
    input: ['input', disabled && 'disabled', type === 'search' && 'inputTypeSearch', multiline && 'inputMultiline', size === 'small' && 'inputSizeSmall', hiddenLabel && 'inputHiddenLabel', startAdornment && 'inputAdornedStart', endAdornment && 'inputAdornedEnd']
  };
  return (0,composeClasses/* default */.Z)(slots, inputBaseClasses/* getInputBaseUtilityClass */.u, classes);
};

var InputBaseRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiInputBase',
  slot: 'Root',
  overridesResolver: rootOverridesResolver
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({}, theme.typography.body1, {
    color: theme.palette.text.primary,
    lineHeight: '1.4375em',
    // 23px
    boxSizing: 'border-box',
    // Prevent padding issue with fullWidth.
    position: 'relative',
    cursor: 'text',
    display: 'inline-flex',
    alignItems: 'center',
    ["&.".concat(inputBaseClasses/* default.disabled */.Z.disabled)]: {
      color: theme.palette.text.disabled,
      cursor: 'default'
    }
  }, ownerState.multiline && (0,esm_extends/* default */.Z)({
    padding: '4px 0 5px'
  }, ownerState.size === 'small' && {
    paddingTop: 1
  }), ownerState.fullWidth && {
    width: '100%'
  });
});
var InputBaseComponent = (0,styled/* default */.ZP)('input', {
  name: 'MuiInputBase',
  slot: 'Input',
  overridesResolver: inputOverridesResolver
})(_ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  var light = theme.palette.mode === 'light';
  var placeholder = {
    color: 'currentColor',
    opacity: light ? 0.42 : 0.5,
    transition: theme.transitions.create('opacity', {
      duration: theme.transitions.duration.shorter
    })
  };
  var placeholderHidden = {
    opacity: '0 !important'
  };
  var placeholderVisible = {
    opacity: light ? 0.42 : 0.5
  };
  return (0,esm_extends/* default */.Z)({
    font: 'inherit',
    letterSpacing: 'inherit',
    color: 'currentColor',
    padding: '4px 0 5px',
    border: 0,
    boxSizing: 'content-box',
    background: 'none',
    height: '1.4375em',
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: 'transparent',
    display: 'block',
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: '100%',
    // Fix IE11 width issue
    animationName: 'mui-auto-fill-cancel',
    animationDuration: '10ms',
    '&::-webkit-input-placeholder': placeholder,
    '&::-moz-placeholder': placeholder,
    // Firefox 19+
    '&:-ms-input-placeholder': placeholder,
    // IE11
    '&::-ms-input-placeholder': placeholder,
    // Edge
    '&:focus': {
      outline: 0
    },
    // Reset Firefox invalid required input style
    '&:invalid': {
      boxShadow: 'none'
    },
    '&::-webkit-search-decoration': {
      // Remove the padding when type=search.
      WebkitAppearance: 'none'
    },
    // Show and hide the placeholder logic
    ["label[data-shrink=false] + .".concat(inputBaseClasses/* default.formControl */.Z.formControl, " &")]: {
      '&::-webkit-input-placeholder': placeholderHidden,
      '&::-moz-placeholder': placeholderHidden,
      // Firefox 19+
      '&:-ms-input-placeholder': placeholderHidden,
      // IE11
      '&::-ms-input-placeholder': placeholderHidden,
      // Edge
      '&:focus::-webkit-input-placeholder': placeholderVisible,
      '&:focus::-moz-placeholder': placeholderVisible,
      // Firefox 19+
      '&:focus:-ms-input-placeholder': placeholderVisible,
      // IE11
      '&:focus::-ms-input-placeholder': placeholderVisible // Edge

    },
    ["&.".concat(inputBaseClasses/* default.disabled */.Z.disabled)]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: theme.palette.text.disabled // Fix opacity Safari bug

    },
    '&:-webkit-autofill': {
      animationDuration: '5000s',
      animationName: 'mui-auto-fill'
    }
  }, ownerState.size === 'small' && {
    paddingTop: 1
  }, ownerState.multiline && {
    height: 'auto',
    resize: 'none',
    padding: 0,
    paddingTop: 0
  }, ownerState.type === 'search' && {
    // Improve type search style.
    MozAppearance: 'textfield'
  });
});

var inputGlobalStyles = /*#__PURE__*/(0,jsx_runtime.jsx)(GlobalStyles/* default */.Z, {
  styles: {
    '@keyframes mui-auto-fill': {
      from: {
        display: 'block'
      }
    },
    '@keyframes mui-auto-fill-cancel': {
      from: {
        display: 'block'
      }
    }
  }
});
/**
 * `InputBase` contains as few styles as possible.
 * It aims to be a simple building block for creating an input.
 * It contains a load of style reset and some state logic.
 */


var InputBase = /*#__PURE__*/react.forwardRef(function InputBase(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiInputBase'
  });

  var {
    'aria-describedby': ariaDescribedby,
    autoComplete,
    autoFocus,
    className,
    components = {},
    componentsProps = {},
    defaultValue,
    disabled,
    endAdornment,
    fullWidth = false,
    id,
    inputComponent = 'input',
    inputProps: inputPropsProp = {},
    inputRef: inputRefProp,
    maxRows,
    minRows,
    multiline = false,
    name,
    onBlur,
    onChange,
    onClick,
    onFocus,
    onKeyDown,
    onKeyUp,
    placeholder,
    readOnly,
    renderSuffix,
    rows,
    startAdornment,
    type = 'text',
    value: valueProp
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, InputBase_excluded);

  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;
  var {
    current: isControlled
  } = react.useRef(value != null);
  var inputRef = react.useRef();
  var handleInputRefWarning = react.useCallback(instance => {
    if (false) {}
  }, []);
  var handleInputPropsRefProp = (0,utils_useForkRef/* default */.Z)(inputPropsProp.ref, handleInputRefWarning);
  var handleInputRefProp = (0,utils_useForkRef/* default */.Z)(inputRefProp, handleInputPropsRefProp);
  var handleInputRef = (0,utils_useForkRef/* default */.Z)(inputRef, handleInputRefProp);
  var [focused, setFocused] = react.useState(false);
  var muiFormControl = (0,useFormControl/* default */.Z)();

  if (false) {}

  var fcs = (0,formControlState/* default */.Z)({
    props,
    muiFormControl,
    states: ['color', 'disabled', 'error', 'hiddenLabel', 'size', 'required', 'filled']
  });
  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.
  // We need to book keep the focused state manually.

  react.useEffect(() => {
    if (!muiFormControl && disabled && focused) {
      setFocused(false);

      if (onBlur) {
        onBlur();
      }
    }
  }, [muiFormControl, disabled, focused, onBlur]);
  var onFilled = muiFormControl && muiFormControl.onFilled;
  var onEmpty = muiFormControl && muiFormControl.onEmpty;
  var checkDirty = react.useCallback(obj => {
    if ((0,utils/* isFilled */.vd)(obj)) {
      if (onFilled) {
        onFilled();
      }
    } else if (onEmpty) {
      onEmpty();
    }
  }, [onFilled, onEmpty]);
  (0,utils_useEnhancedEffect/* default */.Z)(() => {
    if (isControlled) {
      checkDirty({
        value
      });
    }
  }, [value, checkDirty, isControlled]);

  var handleFocus = event => {
    // Fix a bug with IE11 where the focus/blur events are triggered
    // while the component is disabled.
    if (fcs.disabled) {
      event.stopPropagation();
      return;
    }

    if (onFocus) {
      onFocus(event);
    }

    if (inputPropsProp.onFocus) {
      inputPropsProp.onFocus(event);
    }

    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    } else {
      setFocused(true);
    }
  };

  var handleBlur = event => {
    if (onBlur) {
      onBlur(event);
    }

    if (inputPropsProp.onBlur) {
      inputPropsProp.onBlur(event);
    }

    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    } else {
      setFocused(false);
    }
  };

  var handleChange = function handleChange(event) {
    if (!isControlled) {
      var element = event.target || inputRef.current;

      if (element == null) {
        throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(1));
      }

      checkDirty({
        value: element.value
      });
    }

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (inputPropsProp.onChange) {
      inputPropsProp.onChange(event, ...args);
    } // Perform in the willUpdate


    if (onChange) {
      onChange(event, ...args);
    }
  }; // Check the input state on mount, in case it was filled by the user
  // or auto filled by the browser before the hydration (for SSR).


  react.useEffect(() => {
    checkDirty(inputRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  var handleClick = event => {
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }

    if (onClick) {
      onClick(event);
    }
  };

  var InputComponent = inputComponent;
  var inputProps = inputPropsProp;

  if (multiline && InputComponent === 'input') {
    if (rows) {
      if (false) {}

      inputProps = (0,esm_extends/* default */.Z)({
        type: undefined,
        minRows: rows,
        maxRows: rows
      }, inputProps);
    } else {
      inputProps = (0,esm_extends/* default */.Z)({
        type: undefined,
        maxRows,
        minRows
      }, inputProps);
    }

    InputComponent = TextareaAutosize_TextareaAutosize;
  }

  var handleAutoFill = event => {
    // Provide a fake value as Chrome might not let you access it for security reasons.
    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {
      value: 'x'
    });
  };

  react.useEffect(() => {
    if (muiFormControl) {
      muiFormControl.setAdornedStart(Boolean(startAdornment));
    }
  }, [muiFormControl, startAdornment]);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color: fcs.color || 'primary',
    disabled: fcs.disabled,
    endAdornment,
    error: fcs.error,
    focused: fcs.focused,
    formControl: muiFormControl,
    fullWidth,
    hiddenLabel: fcs.hiddenLabel,
    multiline,
    size: fcs.size,
    startAdornment,
    type
  });

  var classes = useUtilityClasses(ownerState);
  var Root = components.Root || InputBaseRoot;
  var rootProps = componentsProps.root || {};
  var Input = components.Input || InputBaseComponent;
  inputProps = (0,esm_extends/* default */.Z)({}, inputProps, componentsProps.input);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [inputGlobalStyles, /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({}, rootProps, !(0,isHostComponent/* default */.Z)(Root) && {
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState)
    }, {
      ref: ref,
      onClick: handleClick
    }, other, {
      className: (0,clsx_m["default"])(classes.root, rootProps.className, className),
      children: [startAdornment, /*#__PURE__*/(0,jsx_runtime.jsx)(FormControlContext/* default.Provider */.Z.Provider, {
        value: null,
        children: /*#__PURE__*/(0,jsx_runtime.jsx)(Input, (0,esm_extends/* default */.Z)({
          ownerState: ownerState,
          "aria-invalid": fcs.error,
          "aria-describedby": ariaDescribedby,
          autoComplete: autoComplete,
          autoFocus: autoFocus,
          defaultValue: defaultValue,
          disabled: fcs.disabled,
          id: id,
          onAnimationStart: handleAutoFill,
          name: name,
          placeholder: placeholder,
          readOnly: readOnly,
          required: fcs.required,
          rows: rows,
          value: value,
          onKeyDown: onKeyDown,
          onKeyUp: onKeyUp,
          type: type
        }, inputProps, !(0,isHostComponent/* default */.Z)(Input) && {
          as: InputComponent,
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, inputProps.ownerState)
        }, {
          ref: handleInputRef,
          className: (0,clsx_m["default"])(classes.input, inputProps.className),
          onBlur: handleBlur,
          onChange: handleChange,
          onFocus: handleFocus
        }))
      }), endAdornment, renderSuffix ? renderSuffix((0,esm_extends/* default */.Z)({}, fcs, {
        startAdornment
      })) : null]
    }))]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var InputBase_InputBase = (InputBase);

/***/ }),

/***/ 23660:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u": function() { return /* binding */ getInputBaseUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getInputBaseUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiInputBase', slot);
}
var inputBaseClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiInputBase', ['root', 'formControl', 'focused', 'disabled', 'adornedStart', 'adornedEnd', 'error', 'sizeSmall', 'multiline', 'colorSecondary', 'fullWidth', 'hiddenLabel', 'input', 'inputSizeSmall', 'inputMultiline', 'inputTypeSearch', 'inputAdornedStart', 'inputAdornedEnd', 'inputHiddenLabel']);
/* harmony default export */ __webpack_exports__["Z"] = (inputBaseClasses);

/***/ }),

/***/ 19:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "vd": function() { return /* binding */ isFilled; },
/* harmony export */   "B7": function() { return /* binding */ isAdornedStart; }
/* harmony export */ });
/* unused harmony export hasValue */
// Supports determination of isControlled().
// Controlled input accepts its current value as a prop.
//
// @see https://facebook.github.io/react/docs/forms.html#controlled-components
// @param value
// @returns {boolean} true if string (including '') or number (including zero)
function hasValue(value) {
  return value != null && !(Array.isArray(value) && value.length === 0);
} // Determine if field is empty or filled.
// Response determines if label is presented above field or as placeholder.
//
// @param obj
// @param SSR
// @returns {boolean} False when not present or empty string.
//                    True when any number or string with length.

function isFilled(obj) {
  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
} // Determine if an Input is adorned on start.
// It's corresponding to the left with LTR.
//
// @param obj
// @returns {boolean} False when no adornments.
//                    True when adorned at the start.

function isAdornedStart(obj) {
  return obj.startAdornment;
}

/***/ }),

/***/ 24157:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ InputLabel_InputLabel; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/formControlState.js
var formControlState = __webpack_require__(11825);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js
var useFormControl = __webpack_require__(8230);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormLabel/FormLabel.js
var FormLabel = __webpack_require__(11780);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormLabel/formLabelClasses.js
var formLabelClasses = __webpack_require__(55654);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputLabel/inputLabelClasses.js

function getInputLabelUtilityClasses(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiInputLabel', slot);
}
var inputLabelClasses = (0,generateUtilityClasses/* default */.Z)('MuiInputLabel', ['root', 'focused', 'disabled', 'error', 'required', 'asterisk', 'formControl', 'sizeSmall', 'shrink', 'animated', 'standard', 'filled', 'outlined']);
/* harmony default export */ var InputLabel_inputLabelClasses = ((/* unused pure expression or super */ null && (inputLabelClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/InputLabel/InputLabel.js


var _excluded = ["disableAnimation", "margin", "shrink", "variant"];










var useUtilityClasses = ownerState => {
  var {
    classes,
    formControl,
    size,
    shrink,
    disableAnimation,
    variant,
    required
  } = ownerState;
  var slots = {
    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant],
    asterisk: [required && 'asterisk']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getInputLabelUtilityClasses, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};

var InputLabelRoot = (0,styled/* default */.ZP)(FormLabel/* default */.Z, {
  shouldForwardProp: prop => (0,styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes',
  name: 'MuiInputLabel',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [{
      ["& .".concat(formLabelClasses/* default.asterisk */.Z.asterisk)]: styles.asterisk
    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'block',
    transformOrigin: 'top left',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    maxWidth: '100%'
  }, ownerState.formControl && {
    position: 'absolute',
    left: 0,
    top: 0,
    // slight alteration to spec spacing to match visual spec result
    transform: 'translate(0, 20px) scale(1)'
  }, ownerState.size === 'small' && {
    // Compensation for the `Input.inputSizeSmall` style.
    transform: 'translate(0, 17px) scale(1)'
  }, ownerState.shrink && {
    transform: 'translate(0, -1.5px) scale(0.75)',
    transformOrigin: 'top left',
    maxWidth: '133%'
  }, !ownerState.disableAnimation && {
    transition: theme.transitions.create(['color', 'transform', 'max-width'], {
      duration: theme.transitions.duration.shorter,
      easing: theme.transitions.easing.easeOut
    })
  }, ownerState.variant === 'filled' && (0,esm_extends/* default */.Z)({
    // Chrome's autofill feature gives the input field a yellow background.
    // Since the input field is behind the label in the HTML tree,
    // the input field is drawn last and hides the label with an opaque background color.
    // zIndex: 1 will raise the label above opaque background-colors of input.
    zIndex: 1,
    pointerEvents: 'none',
    transform: 'translate(12px, 16px) scale(1)',
    maxWidth: 'calc(100% - 24px)'
  }, ownerState.size === 'small' && {
    transform: 'translate(12px, 13px) scale(1)'
  }, ownerState.shrink && (0,esm_extends/* default */.Z)({
    transform: 'translate(12px, 7px) scale(0.75)',
    maxWidth: 'calc(133% - 24px)'
  }, ownerState.size === 'small' && {
    transform: 'translate(12px, 4px) scale(0.75)'
  })), ownerState.variant === 'outlined' && (0,esm_extends/* default */.Z)({
    // see comment above on filled.zIndex
    zIndex: 1,
    pointerEvents: 'none',
    transform: 'translate(14px, 16px) scale(1)',
    maxWidth: 'calc(100% - 24px)'
  }, ownerState.size === 'small' && {
    transform: 'translate(14px, 9px) scale(1)'
  }, ownerState.shrink && {
    maxWidth: 'calc(133% - 24px)',
    transform: 'translate(14px, -9px) scale(0.75)'
  }));
});
var InputLabel = /*#__PURE__*/react.forwardRef(function InputLabel(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    name: 'MuiInputLabel',
    props: inProps
  });

  var {
    disableAnimation = false,
    shrink: shrinkProp
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var muiFormControl = (0,useFormControl/* default */.Z)();
  var shrink = shrinkProp;

  if (typeof shrink === 'undefined' && muiFormControl) {
    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
  }

  var fcs = (0,formControlState/* default */.Z)({
    props,
    muiFormControl,
    states: ['size', 'variant', 'required']
  });

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disableAnimation,
    formControl: muiFormControl,
    shrink,
    size: fcs.size,
    variant: fcs.variant,
    required: fcs.required
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputLabelRoot, (0,esm_extends/* default */.Z)({
    "data-shrink": shrink,
    ownerState: ownerState,
    ref: ref
  }, other, {
    classes: classes
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var InputLabel_InputLabel = (InputLabel);

/***/ }),

/***/ 36190:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Link_Link; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js
var style = __webpack_require__(45535);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js
var useIsFocusVisible = __webpack_require__(96698);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Link/linkClasses.js

function getLinkUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiLink', slot);
}
var linkClasses = (0,generateUtilityClasses/* default */.Z)('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);
/* harmony default export */ var Link_linkClasses = (linkClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Link/Link.js


var _excluded = ["className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant"];













var colorTransformations = {
  primary: 'primary.main',
  textPrimary: 'text.primary',
  secondary: 'secondary.main',
  textSecondary: 'text.secondary',
  error: 'error.main'
};

var transformDeprecatedColors = color => {
  return colorTransformations[color] || color;
};

var useUtilityClasses = ownerState => {
  var {
    classes,
    component,
    focusVisible,
    underline
  } = ownerState;
  var slots = {
    root: ['root', "underline".concat((0,capitalize/* default */.Z)(underline)), component === 'button' && 'button', focusVisible && 'focusVisible']
  };
  return (0,composeClasses/* default */.Z)(slots, getLinkUtilityClass, classes);
};

var LinkRoot = (0,styled/* default */.ZP)(Typography/* default */.Z, {
  name: 'MuiLink',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles["underline".concat((0,capitalize/* default */.Z)(ownerState.underline))], ownerState.component === 'button' && styles.button];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  var color = (0,style/* getPath */.D)(theme, "palette.".concat(transformDeprecatedColors(ownerState.color))) || ownerState.color;
  return (0,esm_extends/* default */.Z)({}, ownerState.underline === 'none' && {
    textDecoration: 'none'
  }, ownerState.underline === 'hover' && {
    textDecoration: 'none',
    '&:hover': {
      textDecoration: 'underline'
    }
  }, ownerState.underline === 'always' && {
    textDecoration: 'underline',
    textDecorationColor: color !== 'inherit' ? (0,colorManipulator/* alpha */.Fq)(color, 0.4) : undefined,
    '&:hover': {
      textDecorationColor: 'inherit'
    }
  }, ownerState.component === 'button' && {
    position: 'relative',
    WebkitTapHighlightColor: 'transparent',
    backgroundColor: 'transparent',
    // Reset default value
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    border: 0,
    margin: 0,
    // Remove the margin in Safari
    borderRadius: 0,
    padding: 0,
    // Remove the padding in Firefox
    cursor: 'pointer',
    userSelect: 'none',
    verticalAlign: 'middle',
    MozAppearance: 'none',
    // Reset
    WebkitAppearance: 'none',
    // Reset
    '&::-moz-focus-inner': {
      borderStyle: 'none' // Remove Firefox dotted outline.

    },
    ["&.".concat(Link_linkClasses.focusVisible)]: {
      outline: 'auto'
    }
  });
});
var Link = /*#__PURE__*/react.forwardRef(function Link(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiLink'
  });

  var {
    className,
    color = 'primary',
    component = 'a',
    onBlur,
    onFocus,
    TypographyClasses,
    underline = 'always',
    variant = 'inherit'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = (0,useIsFocusVisible/* default */.Z)();
  var [focusVisible, setFocusVisible] = react.useState(false);
  var handlerRef = (0,useForkRef/* default */.Z)(ref, focusVisibleRef);

  var handleBlur = event => {
    handleBlurVisible(event);

    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }

    if (onBlur) {
      onBlur(event);
    }
  };

  var handleFocus = event => {
    handleFocusVisible(event);

    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }

    if (onFocus) {
      onFocus(event);
    }
  };

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    component,
    focusVisible,
    underline,
    variant
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(LinkRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    classes: TypographyClasses,
    color: color,
    component: component,
    onBlur: handleBlur,
    onFocus: handleFocus,
    ref: handlerRef,
    ownerState: ownerState,
    variant: variant
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Link_Link = (Link);

/***/ }),

/***/ 59644:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ List_List; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/List/ListContext.js
var ListContext = __webpack_require__(48267);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/List/listClasses.js

function getListUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiList', slot);
}
var listClasses = (0,generateUtilityClasses/* default */.Z)('MuiList', ['root', 'padding', 'dense', 'subheader']);
/* harmony default export */ var List_listClasses = ((/* unused pure expression or super */ null && (listClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/List/List.js


var _excluded = ["children", "className", "component", "dense", "disablePadding", "subheader"];










var useUtilityClasses = ownerState => {
  var {
    classes,
    disablePadding,
    dense,
    subheader
  } = ownerState;
  var slots = {
    root: ['root', !disablePadding && 'padding', dense && 'dense', subheader && 'subheader']
  };
  return (0,composeClasses/* default */.Z)(slots, getListUtilityClass, classes);
};

var ListRoot = (0,styled/* default */.ZP)('ul', {
  name: 'MuiList',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    listStyle: 'none',
    margin: 0,
    padding: 0,
    position: 'relative'
  }, !ownerState.disablePadding && {
    paddingTop: 8,
    paddingBottom: 8
  }, ownerState.subheader && {
    paddingTop: 0
  });
});
var List = /*#__PURE__*/react.forwardRef(function List(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiList'
  });

  var {
    children,
    className,
    component = 'ul',
    dense = false,
    disablePadding = false,
    subheader
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var context = react.useMemo(() => ({
    dense
  }), [dense]);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    dense,
    disablePadding
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ListContext/* default.Provider */.Z.Provider, {
    value: context,
    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(ListRoot, (0,esm_extends/* default */.Z)({
      as: component,
      className: (0,clsx_m["default"])(classes.root, className),
      ref: ref,
      ownerState: ownerState
    }, other, {
      children: [subheader, children]
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var List_List = (List);

/***/ }),

/***/ 48267:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

/**
 * @ignore - internal component.
 */

var ListContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({});

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (ListContext);

/***/ }),

/***/ 91263:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ ListItem_ListItem; }
});

// UNUSED EXPORTS: ListItemRoot, overridesResolver

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/isMuiElement.js + 1 modules
var isMuiElement = __webpack_require__(63128);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/List/ListContext.js
var ListContext = __webpack_require__(48267);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItem/listItemClasses.js

function getListItemUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiListItem', slot);
}
var listItemClasses = (0,generateUtilityClasses/* default */.Z)('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);
/* harmony default export */ var ListItem_listItemClasses = (listItemClasses);
// EXTERNAL MODULE: ./node_modules/@mui/material/ListItemButton/listItemButtonClasses.js
var listItemButtonClasses = __webpack_require__(51594);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js

function getListItemSecondaryActionClassesUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiListItemSecondaryAction', slot);
}
var listItemSecondaryActionClasses = (0,generateUtilityClasses/* default */.Z)('MuiListItemSecondaryAction', ['root', 'disableGutters']);
/* harmony default export */ var ListItemSecondaryAction_listItemSecondaryActionClasses = ((/* unused pure expression or super */ null && (listItemSecondaryActionClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js


var _excluded = ["className"];









var useUtilityClasses = ownerState => {
  var {
    disableGutters,
    classes
  } = ownerState;
  var slots = {
    root: ['root', disableGutters && 'disableGutters']
  };
  return (0,composeClasses/* default */.Z)(slots, getListItemSecondaryActionClassesUtilityClass, classes);
};

var ListItemSecondaryActionRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiListItemSecondaryAction',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.disableGutters && styles.disableGutters];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    position: 'absolute',
    right: 16,
    top: '50%',
    transform: 'translateY(-50%)'
  }, ownerState.disableGutters && {
    right: 0
  });
});
/**
 * Must be used as the last child of ListItem to function properly.
 */

var ListItemSecondaryAction = /*#__PURE__*/react.forwardRef(function ListItemSecondaryAction(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiListItemSecondaryAction'
  });

  var {
    className
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var context = react.useContext(ListContext/* default */.Z);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disableGutters: context.disableGutters
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ListItemSecondaryActionRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref
  }, other));
});
 false ? 0 : void 0;
ListItemSecondaryAction.muiName = 'ListItemSecondaryAction';
/* harmony default export */ var ListItemSecondaryAction_ListItemSecondaryAction = (ListItemSecondaryAction);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItem/ListItem.js


var ListItem_excluded = ["className"],
    _excluded2 = ["alignItems", "autoFocus", "button", "children", "className", "component", "components", "componentsProps", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "disablePadding", "divider", "focusVisibleClassName", "secondaryAction", "selected"];

















var overridesResolver = (props, styles) => {
  var {
    ownerState
  } = props;
  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];
};

var ListItem_useUtilityClasses = ownerState => {
  var {
    alignItems,
    button,
    classes,
    dense,
    disabled,
    disableGutters,
    disablePadding,
    divider,
    hasSecondaryAction,
    selected
  } = ownerState;
  var slots = {
    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],
    container: ['container']
  };
  return (0,composeClasses/* default */.Z)(slots, getListItemUtilityClass, classes);
};

var ListItemRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiListItem',
  slot: 'Root',
  overridesResolver
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'flex',
    justifyContent: 'flex-start',
    alignItems: 'center',
    position: 'relative',
    textDecoration: 'none',
    width: '100%',
    boxSizing: 'border-box',
    textAlign: 'left'
  }, !ownerState.disablePadding && (0,esm_extends/* default */.Z)({
    paddingTop: 8,
    paddingBottom: 8
  }, ownerState.dense && {
    paddingTop: 4,
    paddingBottom: 4
  }, !ownerState.disableGutters && {
    paddingLeft: 16,
    paddingRight: 16
  }, !!ownerState.secondaryAction && {
    // Add some space to avoid collision as `ListItemSecondaryAction`
    // is absolutely positioned.
    paddingRight: 48
  }), !!ownerState.secondaryAction && {
    ["& > .".concat(listItemButtonClasses/* default.root */.Z.root)]: {
      paddingRight: 48
    }
  }, {
    ["&.".concat(ListItem_listItemClasses.focusVisible)]: {
      backgroundColor: theme.palette.action.focus
    },
    ["&.".concat(ListItem_listItemClasses.selected)]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity),
      ["&.".concat(ListItem_listItemClasses.focusVisible)]: {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
      }
    },
    ["&.".concat(ListItem_listItemClasses.disabled)]: {
      opacity: theme.palette.action.disabledOpacity
    }
  }, ownerState.alignItems === 'flex-start' && {
    alignItems: 'flex-start'
  }, ownerState.divider && {
    borderBottom: "1px solid ".concat(theme.palette.divider),
    backgroundClip: 'padding-box'
  }, ownerState.button && {
    transition: theme.transitions.create('background-color', {
      duration: theme.transitions.duration.shortest
    }),
    '&:hover': {
      textDecoration: 'none',
      backgroundColor: theme.palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    },
    ["&.".concat(ListItem_listItemClasses.selected, ":hover")]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity)
      }
    }
  }, ownerState.hasSecondaryAction && {
    // Add some space to avoid collision as `ListItemSecondaryAction`
    // is absolutely positioned.
    paddingRight: 48
  });
});
var ListItemContainer = (0,styled/* default */.ZP)('li', {
  name: 'MuiListItem',
  slot: 'Container',
  overridesResolver: (props, styles) => styles.container
})({
  position: 'relative'
});
/**
 * Uses an additional container component if `ListItemSecondaryAction` is the last child.
 */

var ListItem = /*#__PURE__*/react.forwardRef(function ListItem(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiListItem'
  });

  var {
    alignItems = 'center',
    autoFocus = false,
    button = false,
    children: childrenProp,
    className,
    component: componentProp,
    components = {},
    componentsProps = {},
    ContainerComponent = 'li',
    ContainerProps: {
      className: ContainerClassName
    } = {},
    dense = false,
    disabled = false,
    disableGutters = false,
    disablePadding = false,
    divider = false,
    focusVisibleClassName,
    secondaryAction,
    selected = false
  } = props,
      ContainerProps = (0,objectWithoutPropertiesLoose/* default */.Z)(props.ContainerProps, ListItem_excluded),
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded2);

  var context = react.useContext(ListContext/* default */.Z);
  var childContext = {
    dense: dense || context.dense || false,
    alignItems,
    disableGutters
  };
  var listItemRef = react.useRef(null);
  (0,useEnhancedEffect/* default */.Z)(() => {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (false) {}
    }
  }, [autoFocus]);
  var children = react.Children.toArray(childrenProp); // v4 implementation, deprecated in v5, will be removed in v6

  var hasSecondaryAction = children.length && (0,isMuiElement/* default */.Z)(children[children.length - 1], ['ListItemSecondaryAction']);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    alignItems,
    autoFocus,
    button,
    dense: childContext.dense,
    disabled,
    disableGutters,
    disablePadding,
    divider,
    hasSecondaryAction,
    selected
  });

  var classes = ListItem_useUtilityClasses(ownerState);
  var handleRef = (0,useForkRef/* default */.Z)(listItemRef, ref);
  var Root = components.Root || ListItemRoot;
  var rootProps = componentsProps.root || {};

  var componentProps = (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, rootProps.className, className),
    disabled
  }, other);

  var Component = componentProp || 'li';

  if (button) {
    componentProps.component = componentProp || 'div';
    componentProps.focusVisibleClassName = (0,clsx_m["default"])(ListItem_listItemClasses.focusVisible, focusVisibleClassName);
    Component = ButtonBase/* default */.Z;
  } // v4 implementation, deprecated in v5, will be removed in v6


  if (hasSecondaryAction) {
    // Use div by default.
    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.

    if (ContainerComponent === 'li') {
      if (Component === 'li') {
        Component = 'div';
      } else if (componentProps.component === 'li') {
        componentProps.component = 'div';
      }
    }

    return /*#__PURE__*/(0,jsx_runtime.jsx)(ListContext/* default.Provider */.Z.Provider, {
      value: childContext,
      children: /*#__PURE__*/(0,jsx_runtime.jsxs)(ListItemContainer, (0,esm_extends/* default */.Z)({
        as: ContainerComponent,
        className: (0,clsx_m["default"])(classes.container, ContainerClassName),
        ref: handleRef,
        ownerState: ownerState
      }, ContainerProps, {
        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Root, (0,esm_extends/* default */.Z)({}, rootProps, !(0,isHostComponent/* default */.Z)(Root) && {
          as: Component,
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState)
        }, componentProps, {
          children: children
        })), children.pop()]
      }))
    });
  }

  return /*#__PURE__*/(0,jsx_runtime.jsx)(ListContext/* default.Provider */.Z.Provider, {
    value: childContext,
    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({}, rootProps, {
      as: Component,
      ref: handleRef,
      ownerState: ownerState
    }, !(0,isHostComponent/* default */.Z)(Root) && {
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState)
    }, componentProps, {
      children: [children, secondaryAction && /*#__PURE__*/(0,jsx_runtime.jsx)(ListItemSecondaryAction_ListItemSecondaryAction, {
        children: secondaryAction
      })]
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var ListItem_ListItem = (ListItem);

/***/ }),

/***/ 51594:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "t": function() { return /* binding */ getListItemButtonUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getListItemButtonUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiListItemButton', slot);
}
var listItemButtonClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiListItemButton', ['root', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'selected']);
/* harmony default export */ __webpack_exports__["Z"] = (listItemButtonClasses);

/***/ }),

/***/ 86228:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "f": function() { return /* binding */ getListItemIconUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getListItemIconUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiListItemIcon', slot);
}
var listItemIconClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiListItemIcon', ['root', 'alignItemsFlexStart']);
/* harmony default export */ __webpack_exports__["Z"] = (listItemIconClasses);

/***/ }),

/***/ 20171:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63366);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87462);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(85505);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49408);
/* harmony import */ var _Typography__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(49308);
/* harmony import */ var _List_ListContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(48267);
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(47761);
/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(98348);
/* harmony import */ var _listItemTextClasses__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18041);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["children", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"];











var useUtilityClasses = ownerState => {
  var {
    classes,
    inset,
    primary,
    secondary,
    dense
  } = ownerState;
  var slots = {
    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],
    primary: ['primary'],
    secondary: ['secondary']
  };
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(slots, _listItemTextClasses__WEBPACK_IMPORTED_MODULE_3__/* .getListItemTextUtilityClass */ .L, classes);
};

var ListItemTextRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP)('div', {
  name: 'MuiListItemText',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [{
      ["& .".concat(_listItemTextClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].primary */ .Z.primary)]: styles.primary
    }, {
      ["& .".concat(_listItemTextClasses__WEBPACK_IMPORTED_MODULE_3__/* ["default"].secondary */ .Z.secondary)]: styles.secondary
    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({
    flex: '1 1 auto',
    minWidth: 0,
    marginTop: 4,
    marginBottom: 4
  }, ownerState.primary && ownerState.secondary && {
    marginTop: 6,
    marginBottom: 6
  }, ownerState.inset && {
    paddingLeft: 56
  });
});
var ListItemText = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function ListItemText(inProps, ref) {
  var props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({
    props: inProps,
    name: 'MuiListItemText'
  });

  var {
    children,
    className,
    disableTypography = false,
    inset = false,
    primary: primaryProp,
    primaryTypographyProps,
    secondary: secondaryProp,
    secondaryTypographyProps
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(props, _excluded);

  var {
    dense
  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_List_ListContext__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z);
  var primary = primaryProp != null ? primaryProp : children;
  var secondary = secondaryProp;

  var ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, props, {
    disableTypography,
    inset,
    primary: !!primary,
    secondary: !!secondary,
    dense
  });

  var classes = useUtilityClasses(ownerState);

  if (primary != null && primary.type !== _Typography__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z && !disableTypography) {
    primary = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Typography__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({
      variant: dense ? 'body2' : 'body1',
      className: classes.primary,
      component: "span",
      display: "block"
    }, primaryTypographyProps, {
      children: primary
    }));
  }

  if (secondary != null && secondary.type !== _Typography__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z && !disableTypography) {
    secondary = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Typography__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({
      variant: "body2",
      className: classes.secondary,
      color: "text.secondary",
      display: "block"
    }, secondaryTypographyProps, {
      children: secondary
    }));
  }

  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(ListItemTextRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_10__["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref
  }, other, {
    children: [primary, secondary]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ __webpack_exports__["Z"] = (ListItemText);

/***/ }),

/***/ 18041:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "L": function() { return /* binding */ getListItemTextUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getListItemTextUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiListItemText', slot);
}
var listItemTextClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);
/* harmony default export */ __webpack_exports__["Z"] = (listItemTextClasses);

/***/ }),

/***/ 42333:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Menu_Menu; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(8812);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument = __webpack_require__(79072);
// EXTERNAL MODULE: ./node_modules/@mui/material/List/List.js + 1 modules
var List = __webpack_require__(59644);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/getScrollbarSize.js
var getScrollbarSize = __webpack_require__(56706);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/getScrollbarSize.js

/* harmony default export */ var utils_getScrollbarSize = (getScrollbarSize/* default */.Z);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuList/MenuList.js


var _excluded = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];









function nextItem(list, item, disableListWrap) {
  if (list === item) {
    return list.firstChild;
  }

  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }

  return disableListWrap ? null : list.firstChild;
}

function previousItem(list, item, disableListWrap) {
  if (list === item) {
    return disableListWrap ? list.firstChild : list.lastChild;
  }

  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }

  return disableListWrap ? null : list.lastChild;
}

function textCriteriaMatches(nextFocus, textCriteria) {
  if (textCriteria === undefined) {
    return true;
  }

  var text = nextFocus.innerText;

  if (text === undefined) {
    // jsdom doesn't support innerText
    text = nextFocus.textContent;
  }

  text = text.trim().toLowerCase();

  if (text.length === 0) {
    return false;
  }

  if (textCriteria.repeating) {
    return text[0] === textCriteria.keys[0];
  }

  return text.indexOf(textCriteria.keys.join('')) === 0;
}

function moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {
  var wrappedOnce = false;
  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);

  while (nextFocus) {
    // Prevent infinite loop.
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return false;
      }

      wrappedOnce = true;
    } // Same logic as useAutocomplete.js


    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';

    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {
      // Move to the next element.
      nextFocus = traversalFunction(list, nextFocus, disableListWrap);
    } else {
      nextFocus.focus();
      return true;
    }
  }

  return false;
}
/**
 * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.
 * It's exposed to help customization of the [`Menu`](/api/menu/) component if you
 * use it separately you need to move focus into the component manually. Once
 * the focus is placed inside the component it is fully keyboard accessible.
 */


var MenuList = /*#__PURE__*/react.forwardRef(function MenuList(props, ref) {
  var {
    // private
    // eslint-disable-next-line react/prop-types
    actions,
    autoFocus = false,
    autoFocusItem = false,
    children,
    className,
    disabledItemsFocusable = false,
    disableListWrap = false,
    onKeyDown,
    variant = 'selectedMenu'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var listRef = react.useRef(null);
  var textCriteriaRef = react.useRef({
    keys: [],
    repeating: true,
    previousKeyMatched: true,
    lastTime: null
  });
  (0,useEnhancedEffect/* default */.Z)(() => {
    if (autoFocus) {
      listRef.current.focus();
    }
  }, [autoFocus]);
  react.useImperativeHandle(actions, () => ({
    adjustStyleForScrollbar: (containerElement, theme) => {
      // Let's ignore that piece of logic if users are already overriding the width
      // of the menu.
      var noExplicitWidth = !listRef.current.style.width;

      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
        var scrollbarSize = "".concat(utils_getScrollbarSize((0,ownerDocument/* default */.Z)(containerElement)), "px");
        listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;
        listRef.current.style.width = "calc(100% + ".concat(scrollbarSize, ")");
      }

      return listRef.current;
    }
  }), []);

  var handleKeyDown = event => {
    var list = listRef.current;
    var key = event.key;
    /**
     * @type {Element} - will always be defined since we are in a keydown handler
     * attached to an element. A keydown event is either dispatched to the activeElement
     * or document.body or document.documentElement. Only the first case will
     * trigger this specific handler.
     */

    var currentFocus = (0,ownerDocument/* default */.Z)(list).activeElement;

    if (key === 'ArrowDown') {
      // Prevent scroll of the page
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === 'ArrowUp') {
      event.preventDefault();
      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key === 'Home') {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);
    } else if (key === 'End') {
      event.preventDefault();
      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);
    } else if (key.length === 1) {
      var criteria = textCriteriaRef.current;
      var lowerKey = key.toLowerCase();
      var currTime = performance.now();

      if (criteria.keys.length > 0) {
        // Reset
        if (currTime - criteria.lastTime > 500) {
          criteria.keys = [];
          criteria.repeating = true;
          criteria.previousKeyMatched = true;
        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {
          criteria.repeating = false;
        }
      }

      criteria.lastTime = currTime;
      criteria.keys.push(lowerKey);
      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);

      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {
        event.preventDefault();
      } else {
        criteria.previousKeyMatched = false;
      }
    }

    if (onKeyDown) {
      onKeyDown(event);
    }
  };

  var handleRef = (0,useForkRef/* default */.Z)(listRef, ref);
  /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */

  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead
  // to check if there is a `selected` item. We're looking for the last `selected`
  // item and use the first valid item as a fallback

  react.Children.forEach(children, (child, index) => {
    if (! /*#__PURE__*/react.isValidElement(child)) {
      return;
    }

    if (false) {}

    if (!child.props.disabled) {
      if (variant === 'selectedMenu' && child.props.selected) {
        activeItemIndex = index;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index;
      }
    }
  });
  var items = react.Children.map(children, (child, index) => {
    if (index === activeItemIndex) {
      var newChildProps = {};

      if (autoFocusItem) {
        newChildProps.autoFocus = true;
      }

      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {
        newChildProps.tabIndex = 0;
      }

      return /*#__PURE__*/react.cloneElement(child, newChildProps);
    }

    return child;
  });
  return /*#__PURE__*/(0,jsx_runtime.jsx)(List/* default */.Z, (0,esm_extends/* default */.Z)({
    role: "menu",
    ref: handleRef,
    className: className,
    onKeyDown: handleKeyDown,
    tabIndex: autoFocus ? 0 : -1
  }, other, {
    children: items
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var MenuList_MenuList = (MenuList);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/debounce.js
var debounce = __webpack_require__(95152);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerWindow.js
var ownerWindow = __webpack_require__(9217);
// EXTERNAL MODULE: ./node_modules/@mui/material/Grow/Grow.js
var Grow = __webpack_require__(64522);
// EXTERNAL MODULE: ./node_modules/@mui/material/Modal/Modal.js + 4 modules
var Modal = __webpack_require__(33300);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Popover/popoverClasses.js

function getPopoverUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiPopover', slot);
}
var popoverClasses = (0,generateUtilityClasses/* default */.Z)('MuiPopover', ['root', 'paper']);
/* harmony default export */ var Popover_popoverClasses = ((/* unused pure expression or super */ null && (popoverClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Popover/Popover.js


var Popover_excluded = ["onEntering"],
    _excluded2 = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"];















function getOffsetTop(rect, vertical) {
  var offset = 0;

  if (typeof vertical === 'number') {
    offset = vertical;
  } else if (vertical === 'center') {
    offset = rect.height / 2;
  } else if (vertical === 'bottom') {
    offset = rect.height;
  }

  return offset;
}
function getOffsetLeft(rect, horizontal) {
  var offset = 0;

  if (typeof horizontal === 'number') {
    offset = horizontal;
  } else if (horizontal === 'center') {
    offset = rect.width / 2;
  } else if (horizontal === 'right') {
    offset = rect.width;
  }

  return offset;
}

function getTransformOriginValue(transformOrigin) {
  return [transformOrigin.horizontal, transformOrigin.vertical].map(n => typeof n === 'number' ? "".concat(n, "px") : n).join(' ');
}

function resolveAnchorEl(anchorEl) {
  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}

var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    paper: ['paper']
  };
  return (0,composeClasses/* default */.Z)(slots, getPopoverUtilityClass, classes);
};

var PopoverRoot = (0,styled/* default */.ZP)(Modal/* default */.Z, {
  name: 'MuiPopover',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({});
var PopoverPaper = (0,styled/* default */.ZP)(Paper/* default */.Z, {
  name: 'MuiPopover',
  slot: 'Paper',
  overridesResolver: (props, styles) => styles.paper
})({
  position: 'absolute',
  overflowY: 'auto',
  overflowX: 'hidden',
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: 'calc(100% - 32px)',
  maxHeight: 'calc(100% - 32px)',
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var Popover = /*#__PURE__*/react.forwardRef(function Popover(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiPopover'
  });

  var {
    action,
    anchorEl,
    anchorOrigin = {
      vertical: 'top',
      horizontal: 'left'
    },
    anchorPosition,
    anchorReference = 'anchorEl',
    children,
    className,
    container: containerProp,
    elevation = 8,
    marginThreshold = 16,
    open,
    PaperProps = {},
    transformOrigin = {
      vertical: 'top',
      horizontal: 'left'
    },
    TransitionComponent = Grow/* default */.Z,
    transitionDuration: transitionDurationProp = 'auto',
    TransitionProps: {
      onEntering
    } = {}
  } = props,
      TransitionProps = (0,objectWithoutPropertiesLoose/* default */.Z)(props.TransitionProps, Popover_excluded),
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded2);

  var paperRef = react.useRef();
  var handlePaperRef = (0,useForkRef/* default */.Z)(paperRef, PaperProps.ref);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    anchorOrigin,
    anchorReference,
    elevation,
    marginThreshold,
    PaperProps,
    transformOrigin,
    TransitionComponent,
    transitionDuration: transitionDurationProp,
    TransitionProps
  });

  var classes = useUtilityClasses(ownerState); // Returns the top/left offset of the position
  // to attach to on the anchor element (or body if none is provided)

  var getAnchorOffset = react.useCallback(() => {
    if (anchorReference === 'anchorPosition') {
      if (false) {}

      return anchorPosition;
    }

    var resolvedAnchorEl = resolveAnchorEl(anchorEl); // If an anchor element wasn't provided, just use the parent body element of this Popover

    var anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : (0,ownerDocument/* default */.Z)(paperRef.current).body;
    var anchorRect = anchorElement.getBoundingClientRect();

    if (false) { var box; }

    return {
      top: anchorRect.top + getOffsetTop(anchorRect, anchorOrigin.vertical),
      left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)
    };
  }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]); // Returns the base transform origin using the element

  var getTransformOrigin = react.useCallback(elemRect => {
    return {
      vertical: getOffsetTop(elemRect, transformOrigin.vertical),
      horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)
    };
  }, [transformOrigin.horizontal, transformOrigin.vertical]);
  var getPositioningStyle = react.useCallback(element => {
    var elemRect = {
      width: element.offsetWidth,
      height: element.offsetHeight
    }; // Get the transform origin point on the element itself

    var elemTransformOrigin = getTransformOrigin(elemRect);

    if (anchorReference === 'none') {
      return {
        top: null,
        left: null,
        transformOrigin: getTransformOriginValue(elemTransformOrigin)
      };
    } // Get the offset of the anchoring element


    var anchorOffset = getAnchorOffset(); // Calculate element positioning

    var top = anchorOffset.top - elemTransformOrigin.vertical;
    var left = anchorOffset.left - elemTransformOrigin.horizontal;
    var bottom = top + elemRect.height;
    var right = left + elemRect.width; // Use the parent window of the anchorEl if provided

    var containerWindow = (0,ownerWindow/* default */.Z)(resolveAnchorEl(anchorEl)); // Window thresholds taking required margin into account

    var heightThreshold = containerWindow.innerHeight - marginThreshold;
    var widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting

    if (top < marginThreshold) {
      var diff = top - marginThreshold;
      top -= diff;
      elemTransformOrigin.vertical += diff;
    } else if (bottom > heightThreshold) {
      var _diff = bottom - heightThreshold;

      top -= _diff;
      elemTransformOrigin.vertical += _diff;
    }

    if (false) {} // Check if the horizontal axis needs shifting


    if (left < marginThreshold) {
      var _diff2 = left - marginThreshold;

      left -= _diff2;
      elemTransformOrigin.horizontal += _diff2;
    } else if (right > widthThreshold) {
      var _diff3 = right - widthThreshold;

      left -= _diff3;
      elemTransformOrigin.horizontal += _diff3;
    }

    return {
      top: "".concat(Math.round(top), "px"),
      left: "".concat(Math.round(left), "px"),
      transformOrigin: getTransformOriginValue(elemTransformOrigin)
    };
  }, [anchorEl, anchorReference, getAnchorOffset, getTransformOrigin, marginThreshold]);
  var setPositioningStyles = react.useCallback(() => {
    var element = paperRef.current;

    if (!element) {
      return;
    }

    var positioning = getPositioningStyle(element);

    if (positioning.top !== null) {
      element.style.top = positioning.top;
    }

    if (positioning.left !== null) {
      element.style.left = positioning.left;
    }

    element.style.transformOrigin = positioning.transformOrigin;
  }, [getPositioningStyle]);

  var handleEntering = (element, isAppearing) => {
    if (onEntering) {
      onEntering(element, isAppearing);
    }

    setPositioningStyles();
  };

  react.useEffect(() => {
    if (open) {
      setPositioningStyles();
    }
  });
  react.useImperativeHandle(action, () => open ? {
    updatePosition: () => {
      setPositioningStyles();
    }
  } : null, [open, setPositioningStyles]);
  react.useEffect(() => {
    if (!open) {
      return undefined;
    }

    var handleResize = (0,debounce/* default */.Z)(() => {
      setPositioningStyles();
    });
    var containerWindow = (0,ownerWindow/* default */.Z)(anchorEl);
    containerWindow.addEventListener('resize', handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener('resize', handleResize);
    };
  }, [anchorEl, open, setPositioningStyles]);
  var transitionDuration = transitionDurationProp;

  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
    transitionDuration = undefined;
  } // If the container prop is provided, use that
  // If the anchorEl prop is provided, use its parent body element as the container
  // If neither are provided let the Modal take care of choosing the container


  var container = containerProp || (anchorEl ? (0,ownerDocument/* default */.Z)(resolveAnchorEl(anchorEl)).body : undefined);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(PopoverRoot, (0,esm_extends/* default */.Z)({
    BackdropProps: {
      invisible: true
    },
    className: (0,clsx_m["default"])(classes.root, className),
    container: container,
    open: open,
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
      appear: true,
      in: open,
      onEntering: handleEntering,
      timeout: transitionDuration
    }, TransitionProps, {
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(PopoverPaper, (0,esm_extends/* default */.Z)({
        elevation: elevation
      }, PaperProps, {
        ref: handlePaperRef,
        className: (0,clsx_m["default"])(classes.paper, PaperProps.className),
        children: children
      }))
    }))
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Popover_Popover = (Popover);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Menu/menuClasses.js

function getMenuUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiMenu', slot);
}
var menuClasses = (0,generateUtilityClasses/* default */.Z)('MuiMenu', ['root', 'paper', 'list']);
/* harmony default export */ var Menu_menuClasses = ((/* unused pure expression or super */ null && (menuClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Menu/Menu.js


var Menu_excluded = ["onEntering"],
    Menu_excluded2 = ["autoFocus", "children", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant"];













var RTL_ORIGIN = {
  vertical: 'top',
  horizontal: 'right'
};
var LTR_ORIGIN = {
  vertical: 'top',
  horizontal: 'left'
};

var Menu_useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    paper: ['paper'],
    list: ['list']
  };
  return (0,composeClasses/* default */.Z)(slots, getMenuUtilityClass, classes);
};

var MenuRoot = (0,styled/* default */.ZP)(Popover_Popover, {
  shouldForwardProp: prop => (0,styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes',
  name: 'MuiMenu',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({});
var MenuPaper = (0,styled/* default */.ZP)(Paper/* default */.Z, {
  name: 'MuiMenu',
  slot: 'Paper',
  overridesResolver: (props, styles) => styles.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tapable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: 'calc(100% - 96px)',
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: 'touch'
});
var MenuMenuList = (0,styled/* default */.ZP)(MenuList_MenuList, {
  name: 'MuiMenu',
  slot: 'List',
  overridesResolver: (props, styles) => styles.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var Menu = /*#__PURE__*/react.forwardRef(function Menu(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiMenu'
  });

  var {
    autoFocus = true,
    children,
    disableAutoFocusItem = false,
    MenuListProps = {},
    onClose,
    open,
    PaperProps = {},
    PopoverClasses,
    transitionDuration = 'auto',
    TransitionProps: {
      onEntering
    } = {},
    variant = 'selectedMenu'
  } = props,
      TransitionProps = (0,objectWithoutPropertiesLoose/* default */.Z)(props.TransitionProps, Menu_excluded),
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Menu_excluded2);

  var theme = (0,useTheme/* default */.Z)();
  var isRtl = theme.direction === 'rtl';

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    autoFocus,
    disableAutoFocusItem,
    MenuListProps,
    onEntering,
    PaperProps,
    transitionDuration,
    TransitionProps,
    variant
  });

  var classes = Menu_useUtilityClasses(ownerState);
  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;
  var menuListActionsRef = react.useRef(null);

  var handleEntering = (element, isAppearing) => {
    if (menuListActionsRef.current) {
      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);
    }

    if (onEntering) {
      onEntering(element, isAppearing);
    }
  };

  var handleListKeyDown = event => {
    if (event.key === 'Tab') {
      event.preventDefault();

      if (onClose) {
        onClose(event, 'tabKeyDown');
      }
    }
  };
  /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */


  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead
  // to check if there is a `selected` item. We're looking for the last `selected`
  // item and use the first valid item as a fallback

  react.Children.map(children, (child, index) => {
    if (! /*#__PURE__*/react.isValidElement(child)) {
      return;
    }

    if (false) {}

    if (!child.props.disabled) {
      if (variant === 'selectedMenu' && child.props.selected) {
        activeItemIndex = index;
      } else if (activeItemIndex === -1) {
        activeItemIndex = index;
      }
    }
  });
  return /*#__PURE__*/(0,jsx_runtime.jsx)(MenuRoot, (0,esm_extends/* default */.Z)({
    classes: PopoverClasses,
    onClose: onClose,
    anchorOrigin: {
      vertical: 'bottom',
      horizontal: isRtl ? 'right' : 'left'
    },
    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,
    PaperProps: (0,esm_extends/* default */.Z)({
      component: MenuPaper
    }, PaperProps, {
      classes: (0,esm_extends/* default */.Z)({}, PaperProps.classes, {
        root: classes.paper
      })
    }),
    className: classes.root,
    open: open,
    ref: ref,
    transitionDuration: transitionDuration,
    TransitionProps: (0,esm_extends/* default */.Z)({
      onEntering: handleEntering
    }, TransitionProps),
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(MenuMenuList, (0,esm_extends/* default */.Z)({
      onKeyDown: handleListKeyDown,
      actions: menuListActionsRef,
      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),
      autoFocusItem: autoFocusItem,
      variant: variant
    }, MenuListProps, {
      className: (0,clsx_m["default"])(classes.list, MenuListProps.className),
      children: children
    }))
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Menu_Menu = (Menu);

/***/ }),

/***/ 87122:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ MenuItem_MenuItem; }
});

// UNUSED EXPORTS: overridesResolver

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/List/ListContext.js
var ListContext = __webpack_require__(48267);
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/Divider/dividerClasses.js
var dividerClasses = __webpack_require__(92103);
// EXTERNAL MODULE: ./node_modules/@mui/material/ListItemIcon/listItemIconClasses.js
var listItemIconClasses = __webpack_require__(86228);
// EXTERNAL MODULE: ./node_modules/@mui/material/ListItemText/listItemTextClasses.js
var listItemTextClasses = __webpack_require__(18041);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuItem/menuItemClasses.js

function getMenuItemUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiMenuItem', slot);
}
var menuItemClasses = (0,generateUtilityClasses/* default */.Z)('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);
/* harmony default export */ var MenuItem_menuItemClasses = (menuItemClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/MenuItem/MenuItem.js


var _excluded = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex"];















var overridesResolver = (props, styles) => {
  var {
    ownerState
  } = props;
  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];
};

var useUtilityClasses = ownerState => {
  var {
    disabled,
    dense,
    divider,
    disableGutters,
    selected,
    classes
  } = ownerState;
  var slots = {
    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getMenuItemUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};

var MenuItemRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  shouldForwardProp: prop => (0,styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes',
  name: 'MuiMenuItem',
  slot: 'Root',
  overridesResolver
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({}, theme.typography.body1, {
    display: 'flex',
    justifyContent: 'flex-start',
    alignItems: 'center',
    position: 'relative',
    textDecoration: 'none',
    minHeight: 48,
    paddingTop: 6,
    paddingBottom: 6,
    boxSizing: 'border-box',
    whiteSpace: 'nowrap'
  }, !ownerState.disableGutters && {
    paddingLeft: 16,
    paddingRight: 16
  }, ownerState.divider && {
    borderBottom: "1px solid ".concat(theme.palette.divider),
    backgroundClip: 'padding-box'
  }, {
    '&:hover': {
      textDecoration: 'none',
      backgroundColor: theme.palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    },
    ["&.".concat(MenuItem_menuItemClasses.selected)]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity),
      ["&.".concat(MenuItem_menuItemClasses.focusVisible)]: {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
      }
    },
    ["&.".concat(MenuItem_menuItemClasses.selected, ":hover")]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity)
      }
    },
    ["&.".concat(MenuItem_menuItemClasses.focusVisible)]: {
      backgroundColor: theme.palette.action.focus
    },
    ["&.".concat(MenuItem_menuItemClasses.disabled)]: {
      opacity: theme.palette.action.disabledOpacity
    },
    ["& + .".concat(dividerClasses/* default.root */.Z.root)]: {
      marginTop: theme.spacing(1),
      marginBottom: theme.spacing(1)
    },
    ["& + .".concat(dividerClasses/* default.inset */.Z.inset)]: {
      marginLeft: 52
    },
    ["& .".concat(listItemTextClasses/* default.root */.Z.root)]: {
      marginTop: 0,
      marginBottom: 0
    },
    ["& .".concat(listItemTextClasses/* default.inset */.Z.inset)]: {
      paddingLeft: 36
    },
    ["& .".concat(listItemIconClasses/* default.root */.Z.root)]: {
      minWidth: 36
    }
  }, !ownerState.dense && {
    [theme.breakpoints.up('sm')]: {
      minHeight: 'auto'
    }
  }, ownerState.dense && (0,esm_extends/* default */.Z)({
    minHeight: 32,
    // https://material.io/components/menus#specs > Dense
    paddingTop: 4,
    paddingBottom: 4
  }, theme.typography.body2, {
    ["& .".concat(listItemIconClasses/* default.root */.Z.root, " svg")]: {
      fontSize: '1.25rem'
    }
  }));
});
var MenuItem = /*#__PURE__*/react.forwardRef(function MenuItem(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiMenuItem'
  });

  var {
    autoFocus = false,
    component = 'li',
    dense = false,
    divider = false,
    disableGutters = false,
    focusVisibleClassName,
    role = 'menuitem',
    tabIndex: tabIndexProp
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var context = react.useContext(ListContext/* default */.Z);
  var childContext = {
    dense: dense || context.dense || false,
    disableGutters
  };
  var menuItemRef = react.useRef(null);
  (0,useEnhancedEffect/* default */.Z)(() => {
    if (autoFocus) {
      if (menuItemRef.current) {
        menuItemRef.current.focus();
      } else if (false) {}
    }
  }, [autoFocus]);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    dense: childContext.dense,
    divider,
    disableGutters
  });

  var classes = useUtilityClasses(props);
  var handleRef = (0,useForkRef/* default */.Z)(menuItemRef, ref);
  var tabIndex;

  if (!props.disabled) {
    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;
  }

  return /*#__PURE__*/(0,jsx_runtime.jsx)(ListContext/* default.Provider */.Z.Provider, {
    value: childContext,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(MenuItemRoot, (0,esm_extends/* default */.Z)({
      ref: handleRef,
      role: role,
      tabIndex: tabIndex,
      component: component,
      focusVisibleClassName: (0,clsx_m["default"])(classes.focusVisible, focusVisibleClassName)
    }, other, {
      ownerState: ownerState,
      classes: classes
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var MenuItem_MenuItem = (MenuItem);

/***/ }),

/***/ 33300:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Modal_Modal; }
});

// UNUSED EXPORTS: modalClasses

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useForkRef.js
var useForkRef = __webpack_require__(28127);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerDocument.js
var ownerDocument = __webpack_require__(74694);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEventCallback.js
var useEventCallback = __webpack_require__(13634);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/createChainedFunction.js
var createChainedFunction = __webpack_require__(80721);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/base/Portal/Portal.js
var Portal = __webpack_require__(95795);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerWindow.js
var ownerWindow = __webpack_require__(19475);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/getScrollbarSize.js
var getScrollbarSize = __webpack_require__(56706);
;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/ModalManager.js
 // Is a vertical scrollbar displayed?

function isOverflowing(container) {
  var doc = (0,ownerDocument/* default */.Z)(container);

  if (doc.body === container) {
    return (0,ownerWindow/* default */.Z)(container).innerWidth > doc.documentElement.clientWidth;
  }

  return container.scrollHeight > container.clientHeight;
}

function ariaHidden(element, show) {
  if (show) {
    element.setAttribute('aria-hidden', 'true');
  } else {
    element.removeAttribute('aria-hidden');
  }
}

function getPaddingRight(element) {
  return parseInt((0,ownerWindow/* default */.Z)(element).getComputedStyle(element).paddingRight, 10) || 0;
}

function ariaHiddenSiblings(container, mountElement, currentElement) {
  var elementsToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var show = arguments.length > 4 ? arguments[4] : undefined;
  var blacklist = [mountElement, currentElement, ...elementsToExclude];
  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];
  [].forEach.call(container.children, element => {
    if (blacklist.indexOf(element) === -1 && blacklistTagNames.indexOf(element.tagName) === -1) {
      ariaHidden(element, show);
    }
  });
}

function findIndexOf(items, callback) {
  var idx = -1;
  items.some((item, index) => {
    if (callback(item)) {
      idx = index;
      return true;
    }

    return false;
  });
  return idx;
}

function handleContainer(containerInfo, props) {
  var restoreStyle = [];
  var container = containerInfo.container;

  if (!props.disableScrollLock) {
    if (isOverflowing(container)) {
      // Compute the size before applying overflow hidden to avoid any scroll jumps.
      var scrollbarSize = (0,getScrollbarSize/* default */.Z)((0,ownerDocument/* default */.Z)(container));
      restoreStyle.push({
        value: container.style.paddingRight,
        property: 'padding-right',
        el: container
      }); // Use computed style, here to get the real padding to add our scrollbar width.

      container.style.paddingRight = "".concat(getPaddingRight(container) + scrollbarSize, "px"); // .mui-fixed is a global helper.

      var fixedElements = (0,ownerDocument/* default */.Z)(container).querySelectorAll('.mui-fixed');
      [].forEach.call(fixedElements, element => {
        restoreStyle.push({
          value: element.style.paddingRight,
          property: 'padding-right',
          el: element
        });
        element.style.paddingRight = "".concat(getPaddingRight(element) + scrollbarSize, "px");
      });
    } // Improve Gatsby support
    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/


    var parent = container.parentElement;
    var containerWindow = (0,ownerWindow/* default */.Z)(container);
    var scrollContainer = (parent == null ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard
    // screensize shrink.

    restoreStyle.push({
      value: scrollContainer.style.overflow,
      property: 'overflow',
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowX,
      property: 'overflow-x',
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowY,
      property: 'overflow-y',
      el: scrollContainer
    });
    scrollContainer.style.overflow = 'hidden';
  }

  var restore = () => {
    restoreStyle.forEach(_ref => {
      var {
        value,
        el,
        property
      } = _ref;

      if (value) {
        el.style.setProperty(property, value);
      } else {
        el.style.removeProperty(property);
      }
    });
  };

  return restore;
}

function getHiddenSiblings(container) {
  var hiddenSiblings = [];
  [].forEach.call(container.children, element => {
    if (element.getAttribute('aria-hidden') === 'true') {
      hiddenSiblings.push(element);
    }
  });
  return hiddenSiblings;
}
/**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */


class ModalManager {
  constructor() {
    this.containers = void 0;
    this.modals = void 0;
    this.modals = [];
    this.containers = [];
  }

  add(modal, container) {
    var modalIndex = this.modals.indexOf(modal);

    if (modalIndex !== -1) {
      return modalIndex;
    }

    modalIndex = this.modals.length;
    this.modals.push(modal); // If the modal we are adding is already in the DOM.

    if (modal.modalRef) {
      ariaHidden(modal.modalRef, false);
    }

    var hiddenSiblings = getHiddenSiblings(container);
    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);
    var containerIndex = findIndexOf(this.containers, item => item.container === container);

    if (containerIndex !== -1) {
      this.containers[containerIndex].modals.push(modal);
      return modalIndex;
    }

    this.containers.push({
      modals: [modal],
      container,
      restore: null,
      hiddenSiblings
    });
    return modalIndex;
  }

  mount(modal, props) {
    var containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);
    var containerInfo = this.containers[containerIndex];

    if (!containerInfo.restore) {
      containerInfo.restore = handleContainer(containerInfo, props);
    }
  }

  remove(modal) {
    var modalIndex = this.modals.indexOf(modal);

    if (modalIndex === -1) {
      return modalIndex;
    }

    var containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);
    var containerInfo = this.containers[containerIndex];
    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
    this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.

    if (containerInfo.modals.length === 0) {
      // The modal might be closed before it had the chance to be mounted in the DOM.
      if (containerInfo.restore) {
        containerInfo.restore();
      }

      if (modal.modalRef) {
        // In case the modal wasn't in the DOM yet.
        ariaHidden(modal.modalRef, true);
      }

      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);
      this.containers.splice(containerIndex, 1);
    } else {
      // Otherwise make sure the next top modal is visible to a screen reader.
      var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set
      // aria-hidden because the dom element doesn't exist either
      // when modal was unmounted before modalRef gets null

      if (nextTop.modalRef) {
        ariaHidden(nextTop.modalRef, false);
      }
    }

    return modalIndex;
  }

  isTopModal(modal) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
  }

}
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/Unstable_TrapFocus/Unstable_TrapFocus.js
/* eslint-disable @typescript-eslint/naming-convention, consistent-return, jsx-a11y/no-noninteractive-tabindex */

 // Inspired by https://github.com/focus-trap/tabbable



var candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'].join(',');

function getTabIndex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);

  if (!Number.isNaN(tabindexAttr)) {
    return tabindexAttr;
  } // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2
  // so if they don't have a tabindex attribute specifically set, assume it's 0.
  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
  //  yet they are still part of the regular tab order; in FF, they get a default
  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab
  //  order, consider their tab index to be 0.


  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {
    return 0;
  }

  return node.tabIndex;
}

function isNonTabbableRadio(node) {
  if (node.tagName !== 'INPUT' || node.type !== 'radio') {
    return false;
  }

  if (!node.name) {
    return false;
  }

  var getRadio = selector => node.ownerDocument.querySelector("input[type=\"radio\"]".concat(selector));

  var roving = getRadio("[name=\"".concat(node.name, "\"]:checked"));

  if (!roving) {
    roving = getRadio("[name=\"".concat(node.name, "\"]"));
  }

  return roving !== node;
}

function isNodeMatchingSelectorFocusable(node) {
  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {
    return false;
  }

  return true;
}

function defaultGetTabbable(root) {
  var regularTabNodes = [];
  var orderedTabNodes = [];
  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i) => {
    var nodeTabIndex = getTabIndex(node);

    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {
      return;
    }

    if (nodeTabIndex === 0) {
      regularTabNodes.push(node);
    } else {
      orderedTabNodes.push({
        documentOrder: i,
        tabIndex: nodeTabIndex,
        node
      });
    }
  });
  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map(a => a.node).concat(regularTabNodes);
}

function defaultIsEnabled() {
  return true;
}
/**
 * Utility component that locks focus inside the component.
 */


function Unstable_TrapFocus(props) {
  var {
    children,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableRestoreFocus = false,
    getTabbable = defaultGetTabbable,
    isEnabled = defaultIsEnabled,
    open
  } = props;
  var ignoreNextEnforceFocus = react.useRef();
  var sentinelStart = react.useRef(null);
  var sentinelEnd = react.useRef(null);
  var nodeToRestore = react.useRef(null);
  var reactFocusEventTarget = react.useRef(null); // This variable is useful when disableAutoFocus is true.
  // It waits for the active element to move into the component to activate.

  var activated = react.useRef(false);
  var rootRef = react.useRef(null);
  var handleRef = (0,useForkRef/* default */.Z)(children.ref, rootRef);
  var lastKeydown = react.useRef(null);
  react.useEffect(() => {
    // We might render an empty child.
    if (!open || !rootRef.current) {
      return;
    }

    activated.current = !disableAutoFocus;
  }, [disableAutoFocus, open]);
  react.useEffect(() => {
    // We might render an empty child.
    if (!open || !rootRef.current) {
      return;
    }

    var doc = (0,ownerDocument/* default */.Z)(rootRef.current);

    if (!rootRef.current.contains(doc.activeElement)) {
      if (!rootRef.current.hasAttribute('tabIndex')) {
        if (false) {}

        rootRef.current.setAttribute('tabIndex', -1);
      }

      if (activated.current) {
        rootRef.current.focus();
      }
    }

    return () => {
      // restoreLastFocus()
      if (!disableRestoreFocus) {
        // In IE11 it is possible for document.activeElement to be null resulting
        // in nodeToRestore.current being null.
        // Not all elements in IE11 have a focus method.
        // Once IE11 support is dropped the focus() call can be unconditional.
        if (nodeToRestore.current && nodeToRestore.current.focus) {
          ignoreNextEnforceFocus.current = true;
          nodeToRestore.current.focus();
        }

        nodeToRestore.current = null;
      }
    }; // Missing `disableRestoreFocus` which is fine.
    // We don't support changing that prop on an open TrapFocus
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [open]);
  react.useEffect(() => {
    // We might render an empty child.
    if (!open || !rootRef.current) {
      return;
    }

    var doc = (0,ownerDocument/* default */.Z)(rootRef.current);

    var contain = nativeEvent => {
      var {
        current: rootElement
      } = rootRef; // Cleanup functions are executed lazily in React 17.
      // Contain can be called between the component being unmounted and its cleanup function being run.

      if (rootElement === null) {
        return;
      }

      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
        ignoreNextEnforceFocus.current = false;
        return;
      }

      if (!rootElement.contains(doc.activeElement)) {
        // if the focus event is not coming from inside the children's react tree, reset the refs
        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {
          reactFocusEventTarget.current = null;
        } else if (reactFocusEventTarget.current !== null) {
          return;
        }

        if (!activated.current) {
          return;
        }

        var tabbable = [];

        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {
          tabbable = getTabbable(rootRef.current);
        }

        if (tabbable.length > 0) {
          var _lastKeydown$current, _lastKeydown$current2;

          var isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');
          var focusNext = tabbable[0];
          var focusPrevious = tabbable[tabbable.length - 1];

          if (isShiftTab) {
            focusPrevious.focus();
          } else {
            focusNext.focus();
          }
        } else {
          rootElement.focus();
        }
      }
    };

    var loopFocus = nativeEvent => {
      lastKeydown.current = nativeEvent;

      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {
        return;
      } // Make sure the next tab starts from the right place.
      // doc.activeElement referes to the origin.


      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {
        // We need to ignore the next contain as
        // it will try to move the focus back to the rootRef element.
        ignoreNextEnforceFocus.current = true;
        sentinelEnd.current.focus();
      }
    };

    doc.addEventListener('focusin', contain);
    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.
    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.
    // Instead, we can look if the active element was restored on the BODY element.
    //
    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:
    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.

    var interval = setInterval(() => {
      if (doc.activeElement.tagName === 'BODY') {
        contain();
      }
    }, 50);
    return () => {
      clearInterval(interval);
      doc.removeEventListener('focusin', contain);
      doc.removeEventListener('keydown', loopFocus, true);
    };
  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);

  var onFocus = event => {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }

    activated.current = true;
    reactFocusEventTarget.current = event.target;
    var childrenPropsHandler = children.props.onFocus;

    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };

  var handleFocusSentinel = event => {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }

    activated.current = true;
  };

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {
      tabIndex: 0,
      onFocus: handleFocusSentinel,
      ref: sentinelStart,
      "data-test": "sentinelStart"
    }), /*#__PURE__*/react.cloneElement(children, {
      ref: handleRef,
      onFocus
    }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {
      tabIndex: 0,
      onFocus: handleFocusSentinel,
      ref: sentinelEnd,
      "data-test": "sentinelEnd"
    })]
  });
}

 false ? 0 : void 0;

if (false) {}

/* harmony default export */ var Unstable_TrapFocus_Unstable_TrapFocus = (Unstable_TrapFocus);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/modalUnstyledClasses.js


function getModalUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiModal', slot);
}
var modalUnstyledClasses_modalUnstyledClasses = (0,generateUtilityClasses/* default */.Z)('MuiModal', ['root', 'hidden']);
/* harmony default export */ var ModalUnstyled_modalUnstyledClasses = ((/* unused pure expression or super */ null && (modalUnstyledClasses_modalUnstyledClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js


var _excluded = ["BackdropComponent", "BackdropProps", "children", "classes", "className", "closeAfterTransition", "component", "components", "componentsProps", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onKeyDown", "open", "theme", "onTransitionEnter", "onTransitionExited"];












var useUtilityClasses = ownerState => {
  var {
    open,
    exited,
    classes
  } = ownerState;
  var slots = {
    root: ['root', !open && exited && 'hidden']
  };
  return (0,composeClasses/* default */.Z)(slots, getModalUtilityClass, classes);
};

function getContainer(container) {
  return typeof container === 'function' ? container() : container;
}

function getHasTransition(props) {
  return props.children ? props.children.props.hasOwnProperty('in') : false;
} // A modal manager used to track and manage the state of open Modals.
// Modals don't open on the server so this won't conflict with concurrent requests.


var defaultManager = new ModalManager();
/**
 * Modal is a lower-level construct that is leveraged by the following components:
 *
 * - [Dialog](/api/dialog/)
 * - [Drawer](/api/drawer/)
 * - [Menu](/api/menu/)
 * - [Popover](/api/popover/)
 *
 * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component
 * rather than directly using Modal.
 *
 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
 */

var ModalUnstyled = /*#__PURE__*/react.forwardRef(function ModalUnstyled(props, ref) {
  var {
    BackdropComponent,
    BackdropProps,
    children,
    classes: classesProp,
    className,
    closeAfterTransition = false,
    component = 'div',
    components = {},
    componentsProps = {},
    container,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false,
    // private
    // eslint-disable-next-line react/prop-types
    manager = defaultManager,
    onBackdropClick,
    onClose,
    onKeyDown,
    open,

    /* eslint-disable react/prop-types */
    theme,
    onTransitionEnter,
    onTransitionExited
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var [exited, setExited] = react.useState(true);
  var modal = react.useRef({});
  var mountNodeRef = react.useRef(null);
  var modalRef = react.useRef(null);
  var handleRef = (0,useForkRef/* default */.Z)(modalRef, ref);
  var hasTransition = getHasTransition(props);

  var getDoc = () => (0,ownerDocument/* default */.Z)(mountNodeRef.current);

  var getModal = () => {
    modal.current.modalRef = modalRef.current;
    modal.current.mountNode = mountNodeRef.current;
    return modal.current;
  };

  var handleMounted = () => {
    manager.mount(getModal(), {
      disableScrollLock
    }); // Fix a bug on Chrome where the scroll isn't initially 0.

    modalRef.current.scrollTop = 0;
  };

  var handleOpen = (0,useEventCallback/* default */.Z)(() => {
    var resolvedContainer = getContainer(container) || getDoc().body;
    manager.add(getModal(), resolvedContainer); // The element was already mounted.

    if (modalRef.current) {
      handleMounted();
    }
  });
  var isTopModal = react.useCallback(() => manager.isTopModal(getModal()), [manager]);
  var handlePortalRef = (0,useEventCallback/* default */.Z)(node => {
    mountNodeRef.current = node;

    if (!node) {
      return;
    }

    if (open && isTopModal()) {
      handleMounted();
    } else {
      ariaHidden(modalRef.current, true);
    }
  });
  var handleClose = react.useCallback(() => {
    manager.remove(getModal());
  }, [manager]);
  react.useEffect(() => {
    return () => {
      handleClose();
    };
  }, [handleClose]);
  react.useEffect(() => {
    if (open) {
      handleOpen();
    } else if (!hasTransition || !closeAfterTransition) {
      handleClose();
    }
  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    classes: classesProp,
    closeAfterTransition,
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    exited,
    hideBackdrop,
    keepMounted
  });

  var classes = useUtilityClasses(ownerState);

  if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
  }

  var handleEnter = () => {
    setExited(false);

    if (onTransitionEnter) {
      onTransitionEnter();
    }
  };

  var handleExited = () => {
    setExited(true);

    if (onTransitionExited) {
      onTransitionExited();
    }

    if (closeAfterTransition) {
      handleClose();
    }
  };

  var handleBackdropClick = event => {
    if (event.target !== event.currentTarget) {
      return;
    }

    if (onBackdropClick) {
      onBackdropClick(event);
    }

    if (onClose) {
      onClose(event, 'backdropClick');
    }
  };

  var handleKeyDown = event => {
    if (onKeyDown) {
      onKeyDown(event);
    } // The handler doesn't take event.defaultPrevented into account:
    //
    // event.preventDefault() is meant to stop default behaviors like
    // clicking a checkbox to check it, hitting a button to submit a form,
    // and hitting left arrow to move the cursor in a text input etc.
    // Only special HTML elements have these default behaviors.


    if (event.key !== 'Escape' || !isTopModal()) {
      return;
    }

    if (!disableEscapeKeyDown) {
      // Swallow the event, in case someone is listening for the escape key on the body.
      event.stopPropagation();

      if (onClose) {
        onClose(event, 'escapeKeyDown');
      }
    }
  };

  var childProps = {};

  if (children.props.tabIndex === undefined) {
    childProps.tabIndex = '-1';
  } // It's a Transition like component


  if (hasTransition) {
    childProps.onEnter = (0,createChainedFunction/* default */.Z)(handleEnter, children.props.onEnter);
    childProps.onExited = (0,createChainedFunction/* default */.Z)(handleExited, children.props.onExited);
  }

  var Root = components.Root || component;
  var rootProps = componentsProps.root || {};
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Portal/* default */.Z, {
    ref: handlePortalRef,
    container: container,
    disablePortal: disablePortal,
    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({
      role: "presentation"
    }, rootProps, !(0,isHostComponent/* default */.Z)(Root) && {
      as: component,
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState),
      theme
    }, other, {
      ref: handleRef,
      onKeyDown: handleKeyDown,
      className: (0,clsx_m["default"])(classes.root, rootProps.className, className),
      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/(0,jsx_runtime.jsx)(BackdropComponent, (0,esm_extends/* default */.Z)({
        open: open,
        onClick: handleBackdropClick
      }, BackdropProps)) : null, /*#__PURE__*/(0,jsx_runtime.jsx)(Unstable_TrapFocus_Unstable_TrapFocus, {
        disableEnforceFocus: disableEnforceFocus,
        disableAutoFocus: disableAutoFocus,
        disableRestoreFocus: disableRestoreFocus,
        isEnabled: isTopModal,
        open: open,
        children: /*#__PURE__*/react.cloneElement(children, childProps)
      })]
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var ModalUnstyled_ModalUnstyled = (ModalUnstyled);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/Backdrop/Backdrop.js + 2 modules
var Backdrop = __webpack_require__(93818);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Modal/Modal.js


var Modal_excluded = ["BackdropComponent", "closeAfterTransition", "children", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted"];








var modalClasses = (/* unused pure expression or super */ null && (modalUnstyledClasses));

var extendUtilityClasses = ownerState => {
  return ownerState.classes;
};

var ModalRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiModal',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    position: 'fixed',
    zIndex: theme.zIndex.modal,
    right: 0,
    bottom: 0,
    top: 0,
    left: 0
  }, !ownerState.open && ownerState.exited && {
    visibility: 'hidden'
  });
});
var ModalBackdrop = (0,styled/* default */.ZP)(Backdrop/* default */.Z, {
  name: 'MuiModal',
  slot: 'Backdrop',
  overridesResolver: (props, styles) => {
    return styles.backdrop;
  }
})({
  zIndex: -1
});
/**
 * Modal is a lower-level construct that is leveraged by the following components:
 *
 * - [Dialog](/api/dialog/)
 * - [Drawer](/api/drawer/)
 * - [Menu](/api/menu/)
 * - [Popover](/api/popover/)
 *
 * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component
 * rather than directly using Modal.
 *
 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
 */

var Modal = /*#__PURE__*/react.forwardRef(function Modal(inProps, ref) {
  var _componentsProps$root;

  var props = (0,useThemeProps/* default */.Z)({
    name: 'MuiModal',
    props: inProps
  });

  var {
    BackdropComponent = ModalBackdrop,
    closeAfterTransition = false,
    children,
    components = {},
    componentsProps = {},
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Modal_excluded);

  var [exited, setExited] = react.useState(true);
  var commonProps = {
    closeAfterTransition,
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    hideBackdrop,
    keepMounted
  };

  var ownerState = (0,esm_extends/* default */.Z)({}, props, commonProps, {
    exited
  });

  var classes = extendUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ModalUnstyled_ModalUnstyled, (0,esm_extends/* default */.Z)({
    components: (0,esm_extends/* default */.Z)({
      Root: ModalRoot
    }, components),
    componentsProps: {
      root: (0,esm_extends/* default */.Z)({}, componentsProps.root, (!components.Root || !(0,isHostComponent/* default */.Z)(components.Root)) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState)
      })
    },
    BackdropComponent: BackdropComponent,
    onTransitionEnter: () => setExited(false),
    onTransitionExited: () => setExited(true),
    ref: ref
  }, other, {
    classes: classes
  }, commonProps, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Modal_Modal = (Modal);

/***/ }),

/***/ 73750:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ OutlinedInput_OutlinedInput; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/NotchedOutline.js


var _excluded = ["children", "classes", "className", "label", "notched"];




var NotchedOutlineRoot = (0,styled/* default */.ZP)('fieldset')({
  textAlign: 'left',
  position: 'absolute',
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: '0 8px',
  pointerEvents: 'none',
  borderRadius: 'inherit',
  borderStyle: 'solid',
  borderWidth: 1,
  overflow: 'hidden',
  minWidth: '0%'
});
var NotchedOutlineLegend = (0,styled/* default */.ZP)('legend', {
  skipSx: true
})(_ref => {
  var {
    ownerState,
    theme
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    float: 'unset'
  }, ownerState.label === undefined && {
    padding: 0,
    lineHeight: '11px',
    // sync with `height` in `legend` styles
    transition: theme.transitions.create('width', {
      duration: 150,
      easing: theme.transitions.easing.easeOut
    })
  }, ownerState.label !== undefined && (0,esm_extends/* default */.Z)({
    display: 'block',
    // Fix conflict with normalize.css and sanitize.css
    width: 'auto',
    // Fix conflict with bootstrap
    padding: 0,
    height: 11,
    // sync with `lineHeight` in `legend` styles
    fontSize: '0.75em',
    visibility: 'hidden',
    maxWidth: 0.01,
    transition: theme.transitions.create('max-width', {
      duration: 50,
      easing: theme.transitions.easing.easeOut
    }),
    whiteSpace: 'nowrap',
    '& > span': {
      paddingLeft: 5,
      paddingRight: 5,
      display: 'inline-block'
    }
  }, ownerState.notched && {
    maxWidth: '100%',
    transition: theme.transitions.create('max-width', {
      duration: 100,
      easing: theme.transitions.easing.easeOut,
      delay: 50
    })
  }));
});
/**
 * @ignore - internal component.
 */

function NotchedOutline(props) {
  var {
    className,
    label,
    notched
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    notched,
    label
  });

  return /*#__PURE__*/(0,jsx_runtime.jsx)(NotchedOutlineRoot, (0,esm_extends/* default */.Z)({
    "aria-hidden": true,
    className: className,
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(NotchedOutlineLegend, {
      ownerState: ownerState,
      children: label ? /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
        children: label
      }) :
      /*#__PURE__*/
      // notranslate needed while Google Translate will not fix zero-width space issue
      // eslint-disable-next-line react/no-danger
      (0,jsx_runtime.jsx)("span", {
        className: "notranslate",
        dangerouslySetInnerHTML: {
          __html: '&#8203;'
        }
      })
    })
  }));
}
 false ? 0 : void 0;
// EXTERNAL MODULE: ./node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js
var outlinedInputClasses = __webpack_require__(49118);
// EXTERNAL MODULE: ./node_modules/@mui/material/InputBase/InputBase.js + 1 modules
var InputBase = __webpack_require__(86360);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
;// CONCATENATED MODULE: ./node_modules/@mui/material/OutlinedInput/OutlinedInput.js


var OutlinedInput_excluded = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "type"];










var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    notchedOutline: ['notchedOutline'],
    input: ['input']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, outlinedInputClasses/* getOutlinedInputUtilityClass */.e, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};

var OutlinedInputRoot = (0,styled/* default */.ZP)(InputBase/* InputBaseRoot */.Ej, {
  shouldForwardProp: prop => (0,styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes',
  name: 'MuiOutlinedInput',
  slot: 'Root',
  overridesResolver: InputBase/* rootOverridesResolver */.Gx
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  var borderColor = theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';
  return (0,esm_extends/* default */.Z)({
    position: 'relative',
    borderRadius: theme.shape.borderRadius,
    ["&:hover .".concat(outlinedInputClasses/* default.notchedOutline */.Z.notchedOutline)]: {
      borderColor: theme.palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    '@media (hover: none)': {
      ["&:hover .".concat(outlinedInputClasses/* default.notchedOutline */.Z.notchedOutline)]: {
        borderColor
      }
    },
    ["&.".concat(outlinedInputClasses/* default.focused */.Z.focused, " .").concat(outlinedInputClasses/* default.notchedOutline */.Z.notchedOutline)]: {
      borderColor: theme.palette[ownerState.color].main,
      borderWidth: 2
    },
    ["&.".concat(outlinedInputClasses/* default.error */.Z.error, " .").concat(outlinedInputClasses/* default.notchedOutline */.Z.notchedOutline)]: {
      borderColor: theme.palette.error.main
    },
    ["&.".concat(outlinedInputClasses/* default.disabled */.Z.disabled, " .").concat(outlinedInputClasses/* default.notchedOutline */.Z.notchedOutline)]: {
      borderColor: theme.palette.action.disabled
    }
  }, ownerState.startAdornment && {
    paddingLeft: 14
  }, ownerState.endAdornment && {
    paddingRight: 14
  }, ownerState.multiline && (0,esm_extends/* default */.Z)({
    padding: '16.5px 14px'
  }, ownerState.size === 'small' && {
    padding: '8.5px 14px'
  }));
});
var OutlinedInput_NotchedOutlineRoot = (0,styled/* default */.ZP)(NotchedOutline, {
  name: 'MuiOutlinedInput',
  slot: 'NotchedOutline',
  overridesResolver: (props, styles) => styles.notchedOutline
})(_ref2 => {
  var {
    theme
  } = _ref2;
  return {
    borderColor: theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'
  };
});
var OutlinedInputInput = (0,styled/* default */.ZP)(InputBase/* InputBaseComponent */.rA, {
  name: 'MuiOutlinedInput',
  slot: 'Input',
  overridesResolver: InputBase/* inputOverridesResolver */._o
})(_ref3 => {
  var {
    theme,
    ownerState
  } = _ref3;
  return (0,esm_extends/* default */.Z)({
    padding: '16.5px 14px',
    '&:-webkit-autofill': {
      WebkitBoxShadow: theme.palette.mode === 'light' ? null : '0 0 0 100px #266798 inset',
      WebkitTextFillColor: theme.palette.mode === 'light' ? null : '#fff',
      caretColor: theme.palette.mode === 'light' ? null : '#fff',
      borderRadius: 'inherit'
    }
  }, ownerState.size === 'small' && {
    padding: '8.5px 14px'
  }, ownerState.multiline && {
    padding: 0
  }, ownerState.startAdornment && {
    paddingLeft: 0
  }, ownerState.endAdornment && {
    paddingRight: 0
  });
});
var OutlinedInput = /*#__PURE__*/react.forwardRef(function OutlinedInput(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiOutlinedInput'
  });

  var {
    components = {},
    fullWidth = false,
    inputComponent = 'input',
    label,
    multiline = false,
    notched,
    type = 'text'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, OutlinedInput_excluded);

  var classes = useUtilityClasses(props);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(InputBase/* default */.ZP, (0,esm_extends/* default */.Z)({
    components: (0,esm_extends/* default */.Z)({
      Root: OutlinedInputRoot,
      Input: OutlinedInputInput
    }, components),
    renderSuffix: state => /*#__PURE__*/(0,jsx_runtime.jsx)(OutlinedInput_NotchedOutlineRoot, {
      className: classes.notchedOutline,
      label: label,
      notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)
    }),
    fullWidth: fullWidth,
    inputComponent: inputComponent,
    multiline: multiline,
    ref: ref,
    type: type
  }, other, {
    classes: (0,esm_extends/* default */.Z)({}, classes, {
      notchedOutline: null
    })
  }));
});
 false ? 0 : void 0;
OutlinedInput.muiName = 'Input';
/* harmony default export */ var OutlinedInput_OutlinedInput = (OutlinedInput);

/***/ }),

/***/ 49118:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "e": function() { return /* binding */ getOutlinedInputUtilityClass; }
/* harmony export */ });
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48416);
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62194);

function getOutlinedInputUtilityClass(slot) {
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('MuiOutlinedInput', slot);
}
var outlinedInputClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)('MuiOutlinedInput', ['root', 'colorSecondary', 'focused', 'disabled', 'adornedStart', 'adornedEnd', 'error', 'sizeSmall', 'multiline', 'notchedOutline', 'input', 'inputSizeSmall', 'inputMultiline', 'inputAdornedStart', 'inputAdornedEnd']);
/* harmony default export */ __webpack_exports__["Z"] = (outlinedInputClasses);

/***/ }),

/***/ 98953:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Paper_Paper; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Paper/paperClasses.js

function getPaperUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiPaper', slot);
}
var paperClasses = (0,generateUtilityClasses/* default */.Z)('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);
/* harmony default export */ var Paper_paperClasses = ((/* unused pure expression or super */ null && (paperClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Paper/Paper.js


var _excluded = ["className", "component", "elevation", "square", "variant"];








 // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61



var getOverlayAlpha = elevation => {
  var alphaValue;

  if (elevation < 1) {
    alphaValue = 5.11916 * elevation ** 2;
  } else {
    alphaValue = 4.5 * Math.log(elevation + 1) + 2;
  }

  return (alphaValue / 100).toFixed(2);
};

var useUtilityClasses = ownerState => {
  var {
    square,
    elevation,
    variant,
    classes
  } = ownerState;
  var slots = {
    root: ['root', variant, !square && 'rounded', variant === 'elevation' && "elevation".concat(elevation)]
  };
  return (0,composeClasses/* default */.Z)(slots, getPaperUtilityClass, classes);
};

var PaperRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiPaper',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles["elevation".concat(ownerState.elevation)]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    backgroundColor: theme.palette.background.paper,
    color: theme.palette.text.primary,
    transition: theme.transitions.create('box-shadow')
  }, !ownerState.square && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === 'outlined' && {
    border: "1px solid ".concat(theme.palette.divider)
  }, ownerState.variant === 'elevation' && (0,esm_extends/* default */.Z)({
    boxShadow: theme.shadows[ownerState.elevation]
  }, theme.palette.mode === 'dark' && {
    backgroundImage: "linear-gradient(".concat((0,colorManipulator/* alpha */.Fq)('#fff', getOverlayAlpha(ownerState.elevation)), ", ").concat((0,colorManipulator/* alpha */.Fq)('#fff', getOverlayAlpha(ownerState.elevation)), ")")
  }));
});
var Paper = /*#__PURE__*/react.forwardRef(function Paper(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiPaper'
  });

  var {
    className,
    component = 'div',
    elevation = 1,
    square = false,
    variant = 'elevation'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    elevation,
    square,
    variant
  });

  var classes = useUtilityClasses(ownerState);

  if (false) { var theme; }

  return /*#__PURE__*/(0,jsx_runtime.jsx)(PaperRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className),
    ref: ref
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Paper_Paper = (Paper);

/***/ }),

/***/ 36693:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Popper_Popper; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useForkRef.js
var useForkRef = __webpack_require__(28127);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(86164);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerDocument.js
var ownerDocument = __webpack_require__(74694);
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
// import { isHTMLElement } from './instanceOf';
function getBoundingClientRect(element, // eslint-disable-next-line unused-imports/no-unused-vars
includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1; // FIXME:
  // `offsetWidth` returns an integer while `getBoundingClientRect`
  // returns a float. This results in `scaleX` or `scaleY` being
  // non-1 when it should be for elements that aren't a full pixel in
  // width or height.
  // if (isHTMLElement(element) && includeScale) {
  //   const offsetHeight = element.offsetHeight;
  //   const offsetWidth = element.offsetWidth;
  //   // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
  //   // Fallback to 1 in case both values are `0`
  //   if (offsetWidth > 0) {
  //     scaleX = rect.width / offsetWidth || 1;
  //   }
  //   if (offsetHeight > 0) {
  //     scaleY = rect.height / offsetHeight || 1;
  //   }
  // }

  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js


function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}


;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js




function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js

function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js








function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = rect.width / element.offsetWidth || 1;
  var scaleY = rect.height / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js



function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js







function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js
var enums_top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [enums_top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/createPopper.js














var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (false) {}

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (false) {}

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (false) {}

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/(/* unused pure expression or super */ null && (popperGenerator())); // eslint-disable-next-line import/no-unused-modules


;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var eventListeners = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js

function getBasePlacement(placement) {
  return placement.split('-')[0];
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split('-')[1];
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case enums_top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name; // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step

  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_popperOffsets = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/math.js
var math_max = Math.max;
var math_min = Math.min;
var round = Math.round;
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(round(x * dpr) / dpr) || 0,
    y: round(round(y * dpr) / dpr) || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets;

  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,
      _ref3$x = _ref3.x,
      x = _ref3$x === void 0 ? 0 : _ref3$x,
      _ref3$y = _ref3.y,
      y = _ref3$y === void 0 ? 0 : _ref3$y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = enums_top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === enums_top || (placement === left || placement === right) && variation === end) {
      sideY = bottom; // $FlowFixMe[prop-missing]

      y -= offsetParent[heightProp] - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === enums_top || placement === bottom) && variation === end) {
      sideX = right; // $FlowFixMe[prop-missing]

      x -= offsetParent[widthProp] - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref4) {
  var state = _ref4.state,
      options = _ref4.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (false) { var transitionProperty; }

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_computeStyles = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function applyStyles_effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_applyStyles = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: applyStyles_effect,
  requires: ['computeStyles']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js


function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = enums_placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_offset = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var getOppositeVariationPlacement_hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return getOppositeVariationPlacement_hash[matched];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js



function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle(body || html).direction === 'rtl') {
    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;

    do {
      if (next && parent.isSameNode(next)) {
        return true;
      } // $FlowFixMe[prop-missing]: need a better way to handle this...


      next = next.parentNode || next.host;
    } while (next);
  } // Give up, the result is false


  return false;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js















function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = math_max(rect.top, accRect.top);
    accRect.right = math_min(rect.right, accRect.right);
    accRect.bottom = math_min(rect.bottom, accRect.bottom);
    accRect.left = math_max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if (false) {}
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_flip = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js

function within(min, value, max) {
  return math_max(min, math_min(value, max));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js












function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis || checkAltAxis) {
    var mainSide = mainAxis === 'y' ? enums_top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = popperOffsets[mainAxis] + overflow[mainSide];
    var max = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;

    if (checkMainAxis) {
      var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);
      popperOffsets[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset;
    }

    if (checkAltAxis) {
      var _mainSide = mainAxis === 'x' ? enums_top : left;

      var _altSide = mainAxis === 'x' ? bottom : right;

      var _offset = popperOffsets[altAxis];

      var _min = _offset + overflow[_mainSide];

      var _max = _offset - overflow[_altSide];

      var _preventedOffset = within(tether ? math_min(_min, tetherMin) : _min, _offset, tether ? math_max(_max, tetherMax) : _max);

      popperOffsets[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_preventOverflow = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js









 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? enums_top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function arrow_effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (false) {}

  if (!contains(state.elements.popper, arrowElement)) {
    if (false) {}

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_arrow = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: arrow_effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [enums_top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ var modifiers_hide = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js










var defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];
var popper_createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules


// EXTERNAL MODULE: ./node_modules/@mui/base/Portal/Portal.js
var Portal = __webpack_require__(95795);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/PopperUnstyled/PopperUnstyled.js


var _excluded = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "TransitionProps"],
    _excluded2 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition"];






function flipPlacement(placement, direction) {
  if (direction === 'ltr') {
    return placement;
  }

  switch (placement) {
    case 'bottom-end':
      return 'bottom-start';

    case 'bottom-start':
      return 'bottom-end';

    case 'top-end':
      return 'top-start';

    case 'top-start':
      return 'top-end';

    default:
      return placement;
  }
}

function resolveAnchorEl(anchorEl) {
  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}

var defaultPopperOptions = {};
/* eslint-disable react/prop-types */

var PopperTooltip = /*#__PURE__*/react.forwardRef(function PopperTooltip(props, ref) {
  var {
    anchorEl,
    children,
    direction,
    disablePortal,
    modifiers,
    open,
    placement: initialPlacement,
    popperOptions,
    popperRef: popperRefProp,
    TransitionProps
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var tooltipRef = react.useRef(null);
  var ownRef = (0,useForkRef/* default */.Z)(tooltipRef, ref);
  var popperRef = react.useRef(null);
  var handlePopperRef = (0,useForkRef/* default */.Z)(popperRef, popperRefProp);
  var handlePopperRefRef = react.useRef(handlePopperRef);
  (0,useEnhancedEffect/* default */.Z)(() => {
    handlePopperRefRef.current = handlePopperRef;
  }, [handlePopperRef]);
  react.useImperativeHandle(popperRefProp, () => popperRef.current, []);
  var rtlPlacement = flipPlacement(initialPlacement, direction);
  /**
   * placement initialized from prop but can change during lifetime if modifiers.flip.
   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
   */

  var [placement, setPlacement] = react.useState(rtlPlacement);
  react.useEffect(() => {
    if (popperRef.current) {
      popperRef.current.forceUpdate();
    }
  });
  (0,useEnhancedEffect/* default */.Z)(() => {
    if (!anchorEl || !open) {
      return undefined;
    }

    var handlePopperUpdate = data => {
      setPlacement(data.placement);
    };

    var resolvedAnchorEl = resolveAnchorEl(anchorEl);

    if (false) { var box; }

    var popperModifiers = [{
      name: 'preventOverflow',
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: 'flip',
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: 'onUpdate',
      enabled: true,
      phase: 'afterWrite',
      fn: _ref => {
        var {
          state
        } = _ref;
        handlePopperUpdate(state);
      }
    }];

    if (modifiers != null) {
      popperModifiers = popperModifiers.concat(modifiers);
    }

    if (popperOptions && popperOptions.modifiers != null) {
      popperModifiers = popperModifiers.concat(popperOptions.modifiers);
    }

    var popper = popper_createPopper(resolveAnchorEl(anchorEl), tooltipRef.current, (0,esm_extends/* default */.Z)({
      placement: rtlPlacement
    }, popperOptions, {
      modifiers: popperModifiers
    }));
    handlePopperRefRef.current(popper);
    return () => {
      popper.destroy();
      handlePopperRefRef.current(null);
    };
  }, [anchorEl, disablePortal, modifiers, open, popperOptions, rtlPlacement]);
  var childProps = {
    placement
  };

  if (TransitionProps !== null) {
    childProps.TransitionProps = TransitionProps;
  }

  return /*#__PURE__*/(0,jsx_runtime.jsx)("div", (0,esm_extends/* default */.Z)({
    ref: ownRef,
    role: "tooltip"
  }, other, {
    children: typeof children === 'function' ? children(childProps) : children
  }));
});
/* eslint-enable react/prop-types */

/**
 * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v2/) for positioning.
 */

var PopperUnstyled = /*#__PURE__*/react.forwardRef(function PopperUnstyled(props, ref) {
  var {
    anchorEl,
    children,
    container: containerProp,
    direction = 'ltr',
    disablePortal = false,
    keepMounted = false,
    modifiers,
    open,
    placement = 'bottom',
    popperOptions = defaultPopperOptions,
    popperRef,
    style,
    transition = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded2);

  var [exited, setExited] = react.useState(true);

  var handleEnter = () => {
    setExited(false);
  };

  var handleExited = () => {
    setExited(true);
  };

  if (!keepMounted && !open && (!transition || exited)) {
    return null;
  } // If the container prop is provided, use that
  // If the anchorEl prop is provided, use its parent body element as the container
  // If neither are provided let the Modal take care of choosing the container


  var container = containerProp || (anchorEl ? (0,ownerDocument/* default */.Z)(resolveAnchorEl(anchorEl)).body : undefined);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Portal/* default */.Z, {
    disablePortal: disablePortal,
    container: container,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(PopperTooltip, (0,esm_extends/* default */.Z)({
      anchorEl: anchorEl,
      direction: direction,
      disablePortal: disablePortal,
      modifiers: modifiers,
      ref: ref,
      open: transition ? !exited : open,
      placement: placement,
      popperOptions: popperOptions,
      popperRef: popperRef
    }, other, {
      style: (0,esm_extends/* default */.Z)({
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: 'fixed',
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: !open && keepMounted && (!transition || exited) ? 'none' : null
      }, style),
      TransitionProps: transition ? {
        in: open,
        onEnter: handleEnter,
        onExited: handleExited
      } : null,
      children: children
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var PopperUnstyled_PopperUnstyled = (PopperUnstyled);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeWithoutDefault.js
var useThemeWithoutDefault = __webpack_require__(2665);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Popper/Popper.js






/**
 *
 * Demos:
 *
 * - [Autocomplete](https://mui.com/components/autocomplete/)
 * - [Menus](https://mui.com/components/menus/)
 * - [Popper](https://mui.com/components/popper/)
 *
 * API:
 *
 * - [Popper API](https://mui.com/api/popper/)
 */

var Popper = /*#__PURE__*/react.forwardRef(function Popper(props, ref) {
  var theme = (0,useThemeWithoutDefault/* default */.Z)();
  return /*#__PURE__*/(0,jsx_runtime.jsx)(PopperUnstyled_PopperUnstyled, (0,esm_extends/* default */.Z)({
    direction: theme == null ? void 0 : theme.direction
  }, props, {
    ref: ref
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Popper_Popper = (Popper);

/***/ }),

/***/ 67486:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Select_Select; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js
var deepmerge = __webpack_require__(26486);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js
var formatMuiErrorMessage = __webpack_require__(93864);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(8812);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument = __webpack_require__(79072);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/Menu/Menu.js + 5 modules
var Menu = __webpack_require__(42333);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/NativeSelect/nativeSelectClasses.js

function getNativeSelectUtilityClasses(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiNativeSelect', slot);
}
var nativeSelectClasses = (0,generateUtilityClasses/* default */.Z)('MuiNativeSelect', ['root', 'select', 'multiple', 'filled', 'outlined', 'standard', 'disabled', 'icon', 'iconOpen', 'iconFilled', 'iconOutlined', 'iconStandard', 'nativeInput']);
/* harmony default export */ var NativeSelect_nativeSelectClasses = (nativeSelectClasses);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/NativeSelect/NativeSelectInput.js


var _excluded = ["className", "disabled", "IconComponent", "inputRef", "variant"];











var useUtilityClasses = ownerState => {
  var {
    classes,
    variant,
    disabled,
    multiple,
    open
  } = ownerState;
  var slots = {
    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],
    icon: ['icon', "icon".concat((0,capitalize/* default */.Z)(variant)), open && 'iconOpen', disabled && 'disabled']
  };
  return (0,composeClasses/* default */.Z)(slots, getNativeSelectUtilityClasses, classes);
};

var nativeSelectSelectStyles = _ref => {
  var {
    ownerState,
    theme
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    MozAppearance: 'none',
    // Reset
    WebkitAppearance: 'none',
    // Reset
    // When interacting quickly, the text can end up selected.
    // Native select can't be selected either.
    userSelect: 'none',
    borderRadius: 0,
    // Reset
    cursor: 'pointer',
    '&:focus': {
      // Show that it's not an text input
      backgroundColor: theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
      borderRadius: 0 // Reset Chrome style

    },
    // Remove IE11 arrow
    '&::-ms-expand': {
      display: 'none'
    },
    ["&.".concat(NativeSelect_nativeSelectClasses.disabled)]: {
      cursor: 'default'
    },
    '&[multiple]': {
      height: 'auto'
    },
    '&:not([multiple]) option, &:not([multiple]) optgroup': {
      backgroundColor: theme.palette.background.paper
    },
    // Bump specificity to allow extending custom inputs
    '&&&': {
      paddingRight: 24,
      minWidth: 16 // So it doesn't collapse.

    }
  }, ownerState.variant === 'filled' && {
    '&&&': {
      paddingRight: 32
    }
  }, ownerState.variant === 'outlined' && {
    borderRadius: theme.shape.borderRadius,
    '&:focus': {
      borderRadius: theme.shape.borderRadius // Reset the reset for Chrome style

    },
    '&&&': {
      paddingRight: 32
    }
  });
};
var NativeSelectSelect = (0,styled/* default */.ZP)('select', {
  name: 'MuiNativeSelect',
  slot: 'Select',
  shouldForwardProp: styled/* rootShouldForwardProp */.FO,
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.select, styles[ownerState.variant], {
      ["&.".concat(NativeSelect_nativeSelectClasses.multiple)]: styles.multiple
    }];
  }
})(nativeSelectSelectStyles);
var nativeSelectIconStyles = _ref2 => {
  var {
    ownerState,
    theme
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    // We use a position absolute over a flexbox in order to forward the pointer events
    // to the input and to support wrapping tags..
    position: 'absolute',
    right: 0,
    top: 'calc(50% - .5em)',
    // Center vertically, height is 1em
    pointerEvents: 'none',
    // Don't block pointer events on the select under the icon.
    color: theme.palette.action.active,
    ["&.".concat(NativeSelect_nativeSelectClasses.disabled)]: {
      color: theme.palette.action.disabled
    }
  }, ownerState.open && {
    transform: 'rotate(180deg)'
  }, ownerState.variant === 'filled' && {
    right: 7
  }, ownerState.variant === 'outlined' && {
    right: 7
  });
};
var NativeSelectIcon = (0,styled/* default */.ZP)('svg', {
  name: 'MuiNativeSelect',
  slot: 'Icon',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.icon, ownerState.variant && styles["icon".concat((0,capitalize/* default */.Z)(ownerState.variant))], ownerState.open && styles.iconOpen];
  }
})(nativeSelectIconStyles);
/**
 * @ignore - internal component.
 */

var NativeSelectInput = /*#__PURE__*/react.forwardRef(function NativeSelectInput(props, ref) {
  var {
    className,
    disabled,
    IconComponent,
    inputRef,
    variant = 'standard'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    disabled,
    variant
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(NativeSelectSelect, (0,esm_extends/* default */.Z)({
      ownerState: ownerState,
      className: (0,clsx_m["default"])(classes.select, className),
      disabled: disabled,
      ref: inputRef || ref
    }, other)), props.multiple ? null : /*#__PURE__*/(0,jsx_runtime.jsx)(NativeSelectIcon, {
      as: IconComponent,
      ownerState: ownerState,
      className: classes.icon
    })]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var NativeSelect_NativeSelectInput = (NativeSelectInput);
// EXTERNAL MODULE: ./node_modules/@mui/material/InputBase/utils.js
var utils = __webpack_require__(19);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useControlled.js
var useControlled = __webpack_require__(42583);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/selectClasses.js

function getSelectUtilityClasses(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiSelect', slot);
}
var selectClasses = (0,generateUtilityClasses/* default */.Z)('MuiSelect', ['select', 'multiple', 'filled', 'outlined', 'standard', 'disabled', 'focused', 'icon', 'iconOpen', 'iconFilled', 'iconOutlined', 'iconStandard', 'nativeInput']);
/* harmony default export */ var Select_selectClasses = (selectClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/SelectInput.js



var SelectInput_excluded = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultValue", "disabled", "displayEmpty", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"];
















var SelectSelect = (0,styled/* default */.ZP)('div', {
  name: 'MuiSelect',
  slot: 'Select',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [// Win specificity over the input base
    {
      ["&.".concat(Select_selectClasses.select)]: styles.select
    }, {
      ["&.".concat(Select_selectClasses.select)]: styles[ownerState.variant]
    }, {
      ["&.".concat(Select_selectClasses.multiple)]: styles.multiple
    }];
  }
})(nativeSelectSelectStyles, {
  // Win specificity over the input base
  ["&.".concat(Select_selectClasses.select)]: {
    height: 'auto',
    // Resets for multiple select with chips
    minHeight: '1.4375em',
    // Required for select\text-field height consistency
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    overflow: 'hidden'
  }
});
var SelectIcon = (0,styled/* default */.ZP)('svg', {
  name: 'MuiSelect',
  slot: 'Icon',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.icon, ownerState.variant && styles["icon".concat((0,capitalize/* default */.Z)(ownerState.variant))], ownerState.open && styles.iconOpen];
  }
})(nativeSelectIconStyles);
var SelectNativeInput = (0,styled/* default */.ZP)('input', {
  shouldForwardProp: prop => (0,styled/* slotShouldForwardProp */.Dz)(prop) && prop !== 'classes',
  name: 'MuiSelect',
  slot: 'NativeInput',
  overridesResolver: (props, styles) => styles.nativeInput
})({
  bottom: 0,
  left: 0,
  position: 'absolute',
  opacity: 0,
  pointerEvents: 'none',
  width: '100%',
  boxSizing: 'border-box'
});

function areEqualValues(a, b) {
  if (typeof b === 'object' && b !== null) {
    return a === b;
  } // The value could be a number, the DOM will stringify it anyway.


  return String(a) === String(b);
}

function isEmpty(display) {
  return display == null || typeof display === 'string' && !display.trim();
}

var SelectInput_useUtilityClasses = ownerState => {
  var {
    classes,
    variant,
    disabled,
    multiple,
    open
  } = ownerState;
  var slots = {
    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],
    icon: ['icon', "icon".concat((0,capitalize/* default */.Z)(variant)), open && 'iconOpen', disabled && 'disabled'],
    nativeInput: ['nativeInput']
  };
  return (0,composeClasses/* default */.Z)(slots, getSelectUtilityClasses, classes);
};
/**
 * @ignore - internal component.
 */


var SelectInput = /*#__PURE__*/react.forwardRef(function SelectInput(props, ref) {
  var {
    'aria-describedby': ariaDescribedby,
    'aria-label': ariaLabel,
    autoFocus,
    autoWidth,
    children,
    className,
    defaultValue,
    disabled,
    displayEmpty,
    IconComponent,
    inputRef: inputRefProp,
    labelId,
    MenuProps = {},
    multiple,
    name,
    onBlur,
    onChange,
    onClose,
    onFocus,
    onOpen,
    open: openProp,
    readOnly,
    renderValue,
    SelectDisplayProps = {},
    tabIndex: tabIndexProp,
    value: valueProp,
    variant = 'standard'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, SelectInput_excluded);

  var [value, setValueState] = (0,useControlled/* default */.Z)({
    controlled: valueProp,
    default: defaultValue,
    name: 'Select'
  });
  var inputRef = react.useRef(null);
  var displayRef = react.useRef(null);
  var [displayNode, setDisplayNode] = react.useState(null);
  var {
    current: isOpenControlled
  } = react.useRef(openProp != null);
  var [menuMinWidthState, setMenuMinWidthState] = react.useState();
  var [openState, setOpenState] = react.useState(false);
  var handleRef = (0,useForkRef/* default */.Z)(ref, inputRefProp);
  var handleDisplayRef = react.useCallback(node => {
    displayRef.current = node;

    if (node) {
      setDisplayNode(node);
    }
  }, []);
  react.useImperativeHandle(handleRef, () => ({
    focus: () => {
      displayRef.current.focus();
    },
    node: inputRef.current,
    value
  }), [value]);
  react.useEffect(() => {
    if (autoFocus) {
      displayRef.current.focus();
    }
  }, [autoFocus]);
  react.useEffect(() => {
    var label = (0,ownerDocument/* default */.Z)(displayRef.current).getElementById(labelId);

    if (label) {
      var handler = () => {
        if (getSelection().isCollapsed) {
          displayRef.current.focus();
        }
      };

      label.addEventListener('click', handler);
      return () => {
        label.removeEventListener('click', handler);
      };
    }

    return undefined;
  }, [labelId]);

  var update = (open, event) => {
    if (open) {
      if (onOpen) {
        onOpen(event);
      }
    } else if (onClose) {
      onClose(event);
    }

    if (!isOpenControlled) {
      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
      setOpenState(open);
    }
  };

  var handleMouseDown = event => {
    // Ignore everything but left-click
    if (event.button !== 0) {
      return;
    } // Hijack the default focus behavior.


    event.preventDefault();
    displayRef.current.focus();
    update(true, event);
  };

  var handleClose = event => {
    update(false, event);
  };

  var childrenArray = react.Children.toArray(children); // Support autofill.

  var handleChange = event => {
    var index = childrenArray.map(child => child.props.value).indexOf(event.target.value);

    if (index === -1) {
      return;
    }

    var child = childrenArray[index];
    setValueState(child.props.value);

    if (onChange) {
      onChange(event, child);
    }
  };

  var handleItemClick = child => event => {
    var newValue; // We use the tabindex attribute to signal the available options.

    if (!event.currentTarget.hasAttribute('tabindex')) {
      return;
    }

    if (multiple) {
      newValue = Array.isArray(value) ? value.slice() : [];
      var itemIndex = value.indexOf(child.props.value);

      if (itemIndex === -1) {
        newValue.push(child.props.value);
      } else {
        newValue.splice(itemIndex, 1);
      }
    } else {
      newValue = child.props.value;
    }

    if (child.props.onClick) {
      child.props.onClick(event);
    }

    if (value !== newValue) {
      setValueState(newValue);

      if (onChange) {
        // Redefine target to allow name and value to be read.
        // This allows seamless integration with the most popular form libraries.
        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492
        // Clone the event to not override `target` of the original event.
        var nativeEvent = event.nativeEvent || event;
        var clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
        Object.defineProperty(clonedEvent, 'target', {
          writable: true,
          value: {
            value: newValue,
            name
          }
        });
        onChange(clonedEvent, child);
      }
    }

    if (!multiple) {
      update(false, event);
    }
  };

  var handleKeyDown = event => {
    if (!readOnly) {
      var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by
      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html
      'Enter'];

      if (validKeys.indexOf(event.key) !== -1) {
        event.preventDefault();
        update(true, event);
      }
    }
  };

  var open = displayNode !== null && (isOpenControlled ? openProp : openState);

  var handleBlur = event => {
    // if open event.stopImmediatePropagation
    if (!open && onBlur) {
      // Preact support, target is read only property on a native event.
      Object.defineProperty(event, 'target', {
        writable: true,
        value: {
          value,
          name
        }
      });
      onBlur(event);
    }
  };

  delete other['aria-invalid'];
  var display;
  var displaySingle;
  var displayMultiple = [];
  var computeDisplay = false;
  var foundMatch = false; // No need to display any value if the field is empty.

  if ((0,utils/* isFilled */.vd)({
    value
  }) || displayEmpty) {
    if (renderValue) {
      display = renderValue(value);
    } else {
      computeDisplay = true;
    }
  }

  var items = childrenArray.map(child => {
    if (! /*#__PURE__*/react.isValidElement(child)) {
      return null;
    }

    if (false) {}

    var selected;

    if (multiple) {
      if (!Array.isArray(value)) {
        throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(2));
      }

      selected = value.some(v => areEqualValues(v, child.props.value));

      if (selected && computeDisplay) {
        displayMultiple.push(child.props.children);
      }
    } else {
      selected = areEqualValues(value, child.props.value);

      if (selected && computeDisplay) {
        displaySingle = child.props.children;
      }
    }

    if (selected) {
      foundMatch = true;
    }

    return /*#__PURE__*/react.cloneElement(child, {
      'aria-selected': selected ? 'true' : 'false',
      onClick: handleItemClick(child),
      onKeyUp: event => {
        if (event.key === ' ') {
          // otherwise our MenuItems dispatches a click event
          // it's not behavior of the native <option> and causes
          // the select to close immediately since we open on space keydown
          event.preventDefault();
        }

        if (child.props.onKeyUp) {
          child.props.onKeyUp(event);
        }
      },
      role: 'option',
      selected,
      value: undefined,
      // The value is most likely not a valid HTML attribute.
      'data-value': child.props.value // Instead, we provide it as a data attribute.

    });
  });

  if (false) {}

  if (computeDisplay) {
    if (multiple) {
      display = displayMultiple.reduce((prev, curr) => [prev, ', ', curr]);
    } else {
      display = displaySingle;
    }
  } // Avoid performing a layout computation in the render method.


  var menuMinWidth = menuMinWidthState;

  if (!autoWidth && isOpenControlled && displayNode) {
    menuMinWidth = displayNode.clientWidth;
  }

  var tabIndex;

  if (typeof tabIndexProp !== 'undefined') {
    tabIndex = tabIndexProp;
  } else {
    tabIndex = disabled ? null : 0;
  }

  var buttonId = SelectDisplayProps.id || (name ? "mui-component-select-".concat(name) : undefined);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    variant,
    value,
    open
  });

  var classes = SelectInput_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(SelectSelect, (0,esm_extends/* default */.Z)({
      ref: handleDisplayRef,
      tabIndex: tabIndex,
      role: "button",
      "aria-disabled": disabled ? 'true' : undefined,
      "aria-expanded": open ? 'true' : 'false',
      "aria-haspopup": "listbox",
      "aria-label": ariaLabel,
      "aria-labelledby": [labelId, buttonId].filter(Boolean).join(' ') || undefined,
      "aria-describedby": ariaDescribedby,
      onKeyDown: handleKeyDown,
      onMouseDown: disabled || readOnly ? null : handleMouseDown,
      onBlur: handleBlur,
      onFocus: onFocus
    }, SelectDisplayProps, {
      ownerState: ownerState,
      className: (0,clsx_m["default"])(classes.select, className, SelectDisplayProps.className) // The id is required for proper a11y
      ,
      id: buttonId,
      children: isEmpty(display) ?
      /*#__PURE__*/
      // notranslate needed while Google Translate will not fix zero-width space issue
      // eslint-disable-next-line react/no-danger
      (0,jsx_runtime.jsx)("span", {
        className: "notranslate",
        dangerouslySetInnerHTML: {
          __html: '&#8203;'
        }
      }) : display
    })), /*#__PURE__*/(0,jsx_runtime.jsx)(SelectNativeInput, (0,esm_extends/* default */.Z)({
      value: Array.isArray(value) ? value.join(',') : value,
      name: name,
      ref: inputRef,
      "aria-hidden": true,
      onChange: handleChange,
      tabIndex: -1,
      disabled: disabled,
      className: classes.nativeInput,
      autoFocus: autoFocus,
      ownerState: ownerState
    }, other)), /*#__PURE__*/(0,jsx_runtime.jsx)(SelectIcon, {
      as: IconComponent,
      className: classes.icon,
      ownerState: ownerState
    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Menu/* default */.Z, (0,esm_extends/* default */.Z)({
      id: "menu-".concat(name || ''),
      anchorEl: displayNode,
      open: open,
      onClose: handleClose,
      anchorOrigin: {
        vertical: 'bottom',
        horizontal: 'center'
      },
      transformOrigin: {
        vertical: 'top',
        horizontal: 'center'
      }
    }, MenuProps, {
      MenuListProps: (0,esm_extends/* default */.Z)({
        'aria-labelledby': labelId,
        role: 'listbox',
        disableListWrap: true
      }, MenuProps.MenuListProps),
      PaperProps: (0,esm_extends/* default */.Z)({}, MenuProps.PaperProps, {
        style: (0,esm_extends/* default */.Z)({
          minWidth: menuMinWidth
        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
      }),
      children: items
    }))]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var Select_SelectInput = (SelectInput);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/formControlState.js
var formControlState = __webpack_require__(11825);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js
var useFormControl = __webpack_require__(8230);
// EXTERNAL MODULE: ./node_modules/@mui/material/internal/svg-icons/ArrowDropDown.js
var ArrowDropDown = __webpack_require__(89275);
// EXTERNAL MODULE: ./node_modules/@mui/material/Input/Input.js
var Input = __webpack_require__(3320);
// EXTERNAL MODULE: ./node_modules/@mui/material/FilledInput/FilledInput.js
var FilledInput = __webpack_require__(11519);
// EXTERNAL MODULE: ./node_modules/@mui/material/OutlinedInput/OutlinedInput.js + 1 modules
var OutlinedInput = __webpack_require__(73750);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Select/Select.js



var _Input, _FilledInput;

var Select_excluded = ["autoWidth", "children", "classes", "className", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"];















var Select_useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  return classes;
};

var Select = /*#__PURE__*/react.forwardRef(function Select(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    name: 'MuiSelect',
    props: inProps
  });

  var {
    autoWidth = false,
    children,
    classes: classesProp = {},
    className,
    displayEmpty = false,
    IconComponent = ArrowDropDown/* default */.Z,
    id,
    input,
    inputProps,
    label,
    labelId,
    MenuProps,
    multiple = false,
    native = false,
    onClose,
    onOpen,
    open,
    renderValue,
    SelectDisplayProps,
    variant: variantProps = 'outlined'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Select_excluded);

  var inputComponent = native ? NativeSelect_NativeSelectInput : Select_SelectInput;
  var muiFormControl = (0,useFormControl/* default */.Z)();
  var fcs = (0,formControlState/* default */.Z)({
    props,
    muiFormControl,
    states: ['variant']
  });
  var variant = fcs.variant || variantProps;
  var InputComponent = input || {
    standard: _Input || (_Input = /*#__PURE__*/(0,jsx_runtime.jsx)(Input/* default */.Z, {})),
    outlined: /*#__PURE__*/(0,jsx_runtime.jsx)(OutlinedInput/* default */.Z, {
      label: label
    }),
    filled: _FilledInput || (_FilledInput = /*#__PURE__*/(0,jsx_runtime.jsx)(FilledInput/* default */.Z, {}))
  }[variant];

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    classes: classesProp
  });

  var classes = Select_useUtilityClasses(ownerState);
  var inputComponentRef = (0,useForkRef/* default */.Z)(ref, InputComponent.ref);
  return /*#__PURE__*/react.cloneElement(InputComponent, (0,esm_extends/* default */.Z)({
    // Most of the logic is implemented in `SelectInput`.
    // The `Select` component is a simple API wrapper to expose something better to play with.
    inputComponent,
    inputProps: (0,esm_extends/* default */.Z)({
      children,
      IconComponent,
      variant,
      type: undefined,
      // We render a select. We can ignore the type provided by the `Input`.
      multiple
    }, native ? {
      id
    } : {
      autoWidth,
      displayEmpty,
      labelId,
      MenuProps,
      onClose,
      onOpen,
      open,
      renderValue,
      SelectDisplayProps: (0,esm_extends/* default */.Z)({
        id
      }, SelectDisplayProps)
    }, inputProps, {
      classes: inputProps ? (0,deepmerge/* default */.Z)(classes, inputProps.classes) : classes
    }, input ? input.props.inputProps : {})
  }, multiple && native && variant === 'outlined' ? {
    notched: true
  } : {}, {
    ref: inputComponentRef,
    className: (0,clsx_m["default"])(InputComponent.props.className, className)
  }, other));
});
 false ? 0 : void 0;
Select.muiName = 'Select';
/* harmony default export */ var Select_Select = (Select);

/***/ }),

/***/ 57635:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export setTranslateValue */
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87462);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(63366);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81423);
/* harmony import */ var _utils_debounce__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(95152);
/* harmony import */ var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(65973);
/* harmony import */ var _styles_useTheme__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(66449);
/* harmony import */ var _styles_createTransitions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(34584);
/* harmony import */ var _transitions_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(40615);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9217);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


var _excluded = ["addEndListener", "appear", "children", "container", "direction", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];








 // Translate the node so it can't be seen on the screen.
// Later, we're going to translate the node back to its original location with `none`.



function getTranslateValue(direction, node, resolvedContainer) {
  var rect = node.getBoundingClientRect();
  var containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();
  var containerWindow = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(node);
  var transform;

  if (node.fakeTransform) {
    transform = node.fakeTransform;
  } else {
    var computedStyle = containerWindow.getComputedStyle(node);
    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');
  }

  var offsetX = 0;
  var offsetY = 0;

  if (transform && transform !== 'none' && typeof transform === 'string') {
    var transformValues = transform.split('(')[1].split(')')[0].split(',');
    offsetX = parseInt(transformValues[4], 10);
    offsetY = parseInt(transformValues[5], 10);
  }

  if (direction === 'left') {
    if (containerRect) {
      return "translateX(".concat(containerRect.right + offsetX - rect.left, "px)");
    }

    return "translateX(".concat(containerWindow.innerWidth + offsetX - rect.left, "px)");
  }

  if (direction === 'right') {
    if (containerRect) {
      return "translateX(-".concat(rect.right - containerRect.left - offsetX, "px)");
    }

    return "translateX(-".concat(rect.left + rect.width - offsetX, "px)");
  }

  if (direction === 'up') {
    if (containerRect) {
      return "translateY(".concat(containerRect.bottom + offsetY - rect.top, "px)");
    }

    return "translateY(".concat(containerWindow.innerHeight + offsetY - rect.top, "px)");
  } // direction === 'down'


  if (containerRect) {
    return "translateY(-".concat(rect.top - containerRect.top + rect.height - offsetY, "px)");
  }

  return "translateY(-".concat(rect.top + rect.height - offsetY, "px)");
}

function resolveContainer(containerPropProp) {
  return typeof containerPropProp === 'function' ? containerPropProp() : containerPropProp;
}

function setTranslateValue(direction, node, containerProp) {
  var resolvedContainer = resolveContainer(containerProp);
  var transform = getTranslateValue(direction, node, resolvedContainer);

  if (transform) {
    node.style.webkitTransform = transform;
    node.style.transform = transform;
  }
}
var defaultEasing = {
  enter: _styles_createTransitions__WEBPACK_IMPORTED_MODULE_3__/* .easing.easeOut */ .Ui.easeOut,
  exit: _styles_createTransitions__WEBPACK_IMPORTED_MODULE_3__/* .easing.sharp */ .Ui.sharp
};
var defaultTimeout = {
  enter: _styles_createTransitions__WEBPACK_IMPORTED_MODULE_3__/* .duration.enteringScreen */ .x9.enteringScreen,
  exit: _styles_createTransitions__WEBPACK_IMPORTED_MODULE_3__/* .duration.leavingScreen */ .x9.leavingScreen
};
/**
 * The Slide transition is used by the [Drawer](/components/drawers/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

var Slide = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Slide(props, ref) {
  var {
    addEndListener,
    appear = true,
    children: _children,
    container: containerProp,
    direction = 'down',
    easing: easingProp = defaultEasing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style,
    timeout = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = react_transition_group__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(props, _excluded);

  var theme = (0,_styles_useTheme__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)();
  var childrenRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  var handleRefIntermediary = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_children.ref, childrenRef);
  var handleRef = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(handleRefIntermediary, ref);

  var normalizedTransitionCallback = callback => isAppearing => {
    if (callback) {
      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
      if (isAppearing === undefined) {
        callback(childrenRef.current);
      } else {
        callback(childrenRef.current, isAppearing);
      }
    }
  };

  var handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    setTranslateValue(direction, node, containerProp);
    (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_8__/* .reflow */ .n)(node);

    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntering = normalizedTransitionCallback((node, isAppearing) => {
    var transitionProps = (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_8__/* .getTransitionProps */ .C)({
      timeout,
      style,
      easing: easingProp
    }, {
      mode: 'enter'
    });
    node.style.webkitTransition = theme.transitions.create('-webkit-transform', (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)({}, transitionProps));
    node.style.transition = theme.transitions.create('transform', (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)({}, transitionProps));
    node.style.webkitTransform = 'none';
    node.style.transform = 'none';

    if (onEntering) {
      onEntering(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(node => {
    var transitionProps = (0,_transitions_utils__WEBPACK_IMPORTED_MODULE_8__/* .getTransitionProps */ .C)({
      timeout,
      style,
      easing: easingProp
    }, {
      mode: 'exit'
    });
    node.style.webkitTransition = theme.transitions.create('-webkit-transform', transitionProps);
    node.style.transition = theme.transitions.create('transform', transitionProps);
    setTranslateValue(direction, node, containerProp);

    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(node => {
    // No need for transitions when the component is hidden
    node.style.webkitTransition = '';
    node.style.transition = '';

    if (onExited) {
      onExited(node);
    }
  });

  var handleAddEndListener = next => {
    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(childrenRef.current, next);
    }
  };

  var updatePosition = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
    if (childrenRef.current) {
      setTranslateValue(direction, childrenRef.current, containerProp);
    }
  }, [direction, containerProp]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    // Skip configuration where the position is screen size invariant.
    if (inProp || direction === 'down' || direction === 'right') {
      return undefined;
    }

    var handleResize = (0,_utils_debounce__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(() => {
      if (childrenRef.current) {
        setTranslateValue(direction, childrenRef.current, containerProp);
      }
    });
    var containerWindow = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(childrenRef.current);
    containerWindow.addEventListener('resize', handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener('resize', handleResize);
    };
  }, [direction, inProp, containerProp]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!inProp) {
      // We need to update the position of the drawer when the direction change and
      // when it's hidden.
      updatePosition();
    }
  }, [inProp, updatePosition]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TransitionComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)({
    nodeRef: childrenRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    appear: appear,
    in: inProp,
    timeout: timeout
  }, other, {
    children: (state, childProps) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(_children, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)({
        ref: handleRef,
        style: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)({
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, style, _children.props.style)
      }, childProps));
    }
  }));
});
 false ? 0 : void 0;
/* harmony default export */ __webpack_exports__["Z"] = (Slide);

/***/ }),

/***/ 879:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ Slider_Slider; }
});

// UNUSED EXPORTS: SliderMark, SliderMarkLabel, SliderRail, SliderRoot, SliderThumb, SliderTrack, SliderValueLabel, sliderClasses

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
;// CONCATENATED MODULE: ./node_modules/@mui/base/SliderUnstyled/sliderUnstyledClasses.js


function getSliderUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiSlider', slot);
}
var sliderUnstyledClasses = (0,generateUtilityClasses/* default */.Z)('MuiSlider', ['root', 'active', 'focusVisible', 'disabled', 'dragging', 'marked', 'vertical', 'trackInverted', 'trackFalse', 'rail', 'track', 'mark', 'markActive', 'markLabel', 'markLabelActive', 'thumb', 'valueLabel', 'valueLabelOpen', 'valueLabelCircle', 'valueLabelLabel']);
/* harmony default export */ var SliderUnstyled_sliderUnstyledClasses = (sliderUnstyledClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/SliderUnstyled/SliderValueLabelUnstyled.js






var useValueLabelClasses = props => {
  var {
    open
  } = props;
  var utilityClasses = {
    offset: (0,clsx_m["default"])(open && SliderUnstyled_sliderUnstyledClasses.valueLabelOpen),
    circle: SliderUnstyled_sliderUnstyledClasses.valueLabelCircle,
    label: SliderUnstyled_sliderUnstyledClasses.valueLabelLabel
  };
  return utilityClasses;
};
/**
 * @ignore - internal component.
 */


function SliderValueLabelUnstyled(props) {
  var {
    children,
    className,
    value,
    theme
  } = props;
  var classes = useValueLabelClasses(props);
  return /*#__PURE__*/react.cloneElement(children, {
    className: (0,clsx_m["default"])(children.props.className)
  }, /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [children.props.children, /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
      className: (0,clsx_m["default"])(classes.offset, className),
      theme: theme,
      "aria-hidden": true,
      children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
        className: classes.circle,
        children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {
          className: classes.label,
          children: value
        })
      })
    })]
  }));
}

 false ? 0 : void 0;
/* harmony default export */ var SliderUnstyled_SliderValueLabelUnstyled = (SliderValueLabelUnstyled);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerDocument.js
var ownerDocument = __webpack_require__(74694);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useControlled.js
var useControlled = __webpack_require__(35833);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useIsFocusVisible.js
var useIsFocusVisible = __webpack_require__(95768);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useForkRef.js
var useForkRef = __webpack_require__(28127);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEventCallback.js
var useEventCallback = __webpack_require__(13634);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(86164);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/visuallyHidden.js
var visuallyHidden = {
  border: 0,
  clip: 'rect(0 0 0 0)',
  height: '1px',
  margin: -1,
  overflow: 'hidden',
  padding: 0,
  position: 'absolute',
  whiteSpace: 'nowrap',
  width: '1px'
};
/* harmony default export */ var esm_visuallyHidden = (visuallyHidden);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
;// CONCATENATED MODULE: ./node_modules/@mui/base/SliderUnstyled/SliderUnstyled.js


var _excluded = ["aria-label", "aria-labelledby", "aria-valuetext", "className", "component", "classes", "defaultValue", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "onMouseDown", "orientation", "scale", "step", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat", "isRtl", "components", "componentsProps"];









var INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;

function asc(a, b) {
  return a - b;
}

function clamp(value, min, max) {
  if (value == null) {
    return min;
  }

  return Math.min(Math.max(min, value), max);
}

function findClosest(values, currentValue) {
  var {
    index: closestIndex
  } = values.reduce((acc, value, index) => {
    var distance = Math.abs(currentValue - value);

    if (acc === null || distance < acc.distance || distance === acc.distance) {
      return {
        distance,
        index
      };
    }

    return acc;
  }, null);
  return closestIndex;
}

function trackFinger(event, touchId) {
  if (touchId.current !== undefined && event.changedTouches) {
    for (var i = 0; i < event.changedTouches.length; i += 1) {
      var touch = event.changedTouches[i];

      if (touch.identifier === touchId.current) {
        return {
          x: touch.clientX,
          y: touch.clientY
        };
      }
    }

    return false;
  }

  return {
    x: event.clientX,
    y: event.clientY
  };
}

function valueToPercent(value, min, max) {
  return (value - min) * 100 / (max - min);
}

function percentToValue(percent, min, max) {
  return (max - min) * percent + min;
}

function getDecimalPrecision(num) {
  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.
  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.
  if (Math.abs(num) < 1) {
    var parts = num.toExponential().split('e-');
    var matissaDecimalPart = parts[0].split('.')[1];
    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
  }

  var decimalPart = num.toString().split('.')[1];
  return decimalPart ? decimalPart.length : 0;
}

function roundValueToStep(value, step, min) {
  var nearest = Math.round((value - min) / step) * step + min;
  return Number(nearest.toFixed(getDecimalPrecision(step)));
}

function setValueIndex(_ref) {
  var {
    values,
    newValue,
    index
  } = _ref;
  var output = values.slice();
  output[index] = newValue;
  return output.sort(asc);
}

function focusThumb(_ref2) {
  var {
    sliderRef,
    activeIndex,
    setActive
  } = _ref2;
  var doc = (0,ownerDocument/* default */.Z)(sliderRef.current);

  if (!sliderRef.current.contains(doc.activeElement) || Number(doc.activeElement.getAttribute('data-index')) !== activeIndex) {
    sliderRef.current.querySelector("[type=\"range\"][data-index=\"".concat(activeIndex, "\"]")).focus();
  }

  if (setActive) {
    setActive(activeIndex);
  }
}

var axisProps = {
  horizontal: {
    offset: percent => ({
      left: "".concat(percent, "%")
    }),
    leap: percent => ({
      width: "".concat(percent, "%")
    })
  },
  'horizontal-reverse': {
    offset: percent => ({
      right: "".concat(percent, "%")
    }),
    leap: percent => ({
      width: "".concat(percent, "%")
    })
  },
  vertical: {
    offset: percent => ({
      bottom: "".concat(percent, "%")
    }),
    leap: percent => ({
      height: "".concat(percent, "%")
    })
  }
};

var Identity = x => x; // TODO: remove support for Safari < 13.
// https://caniuse.com/#search=touch-action
//
// Safari, on iOS, supports touch action since v13.
// Over 80% of the iOS phones are compatible
// in August 2020.
// Utilizing the CSS.supports method to check if touch-action is supported.
// Since CSS.supports is supported on all but Edge@12 and IE and touch-action
// is supported on both Edge@12 and IE if CSS.supports is not available that means that
// touch-action will be supported


var cachedSupportsTouchActionNone;

function doesSupportTouchActionNone() {
  if (cachedSupportsTouchActionNone === undefined) {
    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {
      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');
    } else {
      cachedSupportsTouchActionNone = true;
    }
  }

  return cachedSupportsTouchActionNone;
}

var useUtilityClasses = ownerState => {
  var {
    disabled,
    dragging,
    marked,
    orientation,
    track,
    classes
  } = ownerState;
  var slots = {
    root: ['root', disabled && 'disabled', dragging && 'dragging', marked && 'marked', orientation === 'vertical' && 'vertical', track === 'inverted' && 'trackInverted', track === false && 'trackFalse'],
    rail: ['rail'],
    track: ['track'],
    mark: ['mark'],
    markActive: ['markActive'],
    markLabel: ['markLabel'],
    markLabelActive: ['markLabelActive'],
    valueLabel: ['valueLabel'],
    thumb: ['thumb', disabled && 'disabled'],
    active: ['active'],
    disabled: ['disabled'],
    focusVisible: ['focusVisible']
  };
  return (0,composeClasses/* default */.Z)(slots, getSliderUtilityClass, classes);
};

var Forward = _ref3 => {
  var {
    children
  } = _ref3;
  return children;
};

var SliderUnstyled = /*#__PURE__*/react.forwardRef(function SliderUnstyled(props, ref) {
  var {
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledby,
    'aria-valuetext': ariaValuetext,
    className,
    component = 'span',
    classes: classesProp,
    defaultValue,
    disableSwap = false,
    disabled = false,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max = 100,
    min = 0,
    name,
    onChange,
    onChangeCommitted,
    onMouseDown,
    orientation = 'horizontal',
    scale = Identity,
    step = 1,
    tabIndex,
    track = 'normal',
    value: valueProp,
    valueLabelDisplay = 'off',
    valueLabelFormat = Identity,
    isRtl = false,
    components = {},
    componentsProps = {}
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var touchId = react.useRef(); // We can't use the :active browser pseudo-classes.
  // - The active state isn't triggered when clicking on the rail.
  // - The active state isn't transferred when inversing a range slider.

  var [active, setActive] = react.useState(-1);
  var [open, setOpen] = react.useState(-1);
  var [dragging, setDragging] = react.useState(false);
  var moveCount = react.useRef(0);
  var [valueDerived, setValueState] = (0,useControlled/* default */.Z)({
    controlled: valueProp,
    default: defaultValue != null ? defaultValue : min,
    name: 'Slider'
  });

  var handleChange = onChange && ((event, value, thumbIndex) => {
    // Redefine target to allow name and value to be read.
    // This allows seamless integration with the most popular form libraries.
    // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492
    // Clone the event to not override `target` of the original event.
    var nativeEvent = event.nativeEvent || event;
    var clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
    Object.defineProperty(clonedEvent, 'target', {
      writable: true,
      value: {
        value,
        name
      }
    });
    onChange(clonedEvent, value, thumbIndex);
  });

  var range = Array.isArray(valueDerived);
  var values = range ? valueDerived.slice().sort(asc) : [valueDerived];
  values = values.map(value => clamp(value, min, max));
  var marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({
    value: min + step * index
  })) : marksProp || [];
  var {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = (0,useIsFocusVisible/* default */.Z)();
  var [focusVisible, setFocusVisible] = react.useState(-1);
  var sliderRef = react.useRef();
  var handleFocusRef = (0,useForkRef/* default */.Z)(focusVisibleRef, sliderRef);
  var handleRef = (0,useForkRef/* default */.Z)(ref, handleFocusRef);

  var handleFocus = event => {
    var index = Number(event.currentTarget.getAttribute('data-index'));
    handleFocusVisible(event);

    if (isFocusVisibleRef.current === true) {
      setFocusVisible(index);
    }

    setOpen(index);
  };

  var handleBlur = event => {
    handleBlurVisible(event);

    if (isFocusVisibleRef.current === false) {
      setFocusVisible(-1);
    }

    setOpen(-1);
  };

  var handleMouseOver = (0,useEventCallback/* default */.Z)(event => {
    var index = Number(event.currentTarget.getAttribute('data-index'));
    setOpen(index);
  });
  var handleMouseLeave = (0,useEventCallback/* default */.Z)(() => {
    setOpen(-1);
  });
  (0,useEnhancedEffect/* default */.Z)(() => {
    if (disabled && sliderRef.current.contains(document.activeElement)) {
      // This is necessary because Firefox and Safari will keep focus
      // on a disabled element:
      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js
      document.activeElement.blur();
    }
  }, [disabled]);

  if (disabled && active !== -1) {
    setActive(-1);
  }

  if (disabled && focusVisible !== -1) {
    setFocusVisible(-1);
  }

  var handleHiddenInputChange = event => {
    var index = Number(event.currentTarget.getAttribute('data-index'));
    var value = values[index];
    var marksValues = marks.map(mark => mark.value);
    var marksIndex = marksValues.indexOf(value);
    var newValue = event.target.valueAsNumber;

    if (marks && step == null) {
      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];
    }

    newValue = clamp(newValue, min, max);

    if (marks && step == null) {
      var markValues = marks.map(mark => mark.value);
      var currentMarkIndex = markValues.indexOf(values[index]);
      newValue = newValue < values[index] ? markValues[currentMarkIndex - 1] : markValues[currentMarkIndex + 1];
    }

    if (range) {
      // Bound the new value to the thumb's neighbours.
      if (disableSwap) {
        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);
      }

      var previousValue = newValue;
      newValue = setValueIndex({
        values,
        newValue,
        index
      });
      var activeIndex = index; // Potentially swap the index if needed.

      if (!disableSwap) {
        activeIndex = newValue.indexOf(previousValue);
      }

      focusThumb({
        sliderRef,
        activeIndex
      });
    }

    setValueState(newValue);
    setFocusVisible(index);

    if (handleChange) {
      handleChange(event, newValue, index);
    }

    if (onChangeCommitted) {
      onChangeCommitted(event, newValue);
    }
  };

  var previousIndex = react.useRef();
  var axis = orientation;

  if (isRtl && orientation !== "vertical") {
    axis += '-reverse';
  }

  var getFingerNewValue = _ref4 => {
    var {
      finger,
      move = false,
      values: values2
    } = _ref4;
    var {
      current: slider
    } = sliderRef;
    var {
      width,
      height,
      bottom,
      left
    } = slider.getBoundingClientRect();
    var percent;

    if (axis.indexOf('vertical') === 0) {
      percent = (bottom - finger.y) / height;
    } else {
      percent = (finger.x - left) / width;
    }

    if (axis.indexOf('-reverse') !== -1) {
      percent = 1 - percent;
    }

    var newValue;
    newValue = percentToValue(percent, min, max);

    if (step) {
      newValue = roundValueToStep(newValue, step, min);
    } else {
      var marksValues = marks.map(mark => mark.value);
      var closestIndex = findClosest(marksValues, newValue);
      newValue = marksValues[closestIndex];
    }

    newValue = clamp(newValue, min, max);
    var activeIndex = 0;

    if (range) {
      if (!move) {
        activeIndex = findClosest(values2, newValue);
      } else {
        activeIndex = previousIndex.current;
      } // Bound the new value to the thumb's neighbours.


      if (disableSwap) {
        newValue = clamp(newValue, values2[activeIndex - 1] || -Infinity, values2[activeIndex + 1] || Infinity);
      }

      var previousValue = newValue;
      newValue = setValueIndex({
        values: values2,
        newValue,
        index: activeIndex
      }); // Potentially swap the index if needed.

      if (!(disableSwap && move)) {
        activeIndex = newValue.indexOf(previousValue);
        previousIndex.current = activeIndex;
      }
    }

    return {
      newValue,
      activeIndex
    };
  };

  var handleTouchMove = (0,useEventCallback/* default */.Z)(nativeEvent => {
    var finger = trackFinger(nativeEvent, touchId);

    if (!finger) {
      return;
    }

    moveCount.current += 1; // Cancel move in case some other element consumed a mouseup event and it was not fired.

    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {
      // eslint-disable-next-line @typescript-eslint/no-use-before-define
      handleTouchEnd(nativeEvent);
      return;
    }

    var {
      newValue,
      activeIndex
    } = getFingerNewValue({
      finger,
      move: true,
      values
    });
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);

    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {
      setDragging(true);
    }

    if (handleChange) {
      handleChange(nativeEvent, newValue, activeIndex);
    }
  });
  var handleTouchEnd = (0,useEventCallback/* default */.Z)(nativeEvent => {
    var finger = trackFinger(nativeEvent, touchId);
    setDragging(false);

    if (!finger) {
      return;
    }

    var {
      newValue
    } = getFingerNewValue({
      finger,
      values
    });
    setActive(-1);

    if (nativeEvent.type === 'touchend') {
      setOpen(-1);
    }

    if (onChangeCommitted) {
      onChangeCommitted(nativeEvent, newValue);
    }

    touchId.current = undefined; // eslint-disable-next-line @typescript-eslint/no-use-before-define

    stopListening();
  });
  var handleTouchStart = (0,useEventCallback/* default */.Z)(nativeEvent => {
    // If touch-action: none; is not supported we need to prevent the scroll manually.
    if (!doesSupportTouchActionNone()) {
      nativeEvent.preventDefault();
    }

    var touch = nativeEvent.changedTouches[0];

    if (touch != null) {
      // A number that uniquely identifies the current finger in the touch session.
      touchId.current = touch.identifier;
    }

    var finger = trackFinger(nativeEvent, touchId);
    var {
      newValue,
      activeIndex
    } = getFingerNewValue({
      finger,
      values
    });
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);

    if (handleChange) {
      handleChange(nativeEvent, newValue, activeIndex);
    }

    moveCount.current = 0;
    var doc = (0,ownerDocument/* default */.Z)(sliderRef.current);
    doc.addEventListener('touchmove', handleTouchMove);
    doc.addEventListener('touchend', handleTouchEnd);
  });
  var stopListening = react.useCallback(() => {
    var doc = (0,ownerDocument/* default */.Z)(sliderRef.current);
    doc.removeEventListener('mousemove', handleTouchMove);
    doc.removeEventListener('mouseup', handleTouchEnd);
    doc.removeEventListener('touchmove', handleTouchMove);
    doc.removeEventListener('touchend', handleTouchEnd);
  }, [handleTouchEnd, handleTouchMove]);
  react.useEffect(() => {
    var {
      current: slider
    } = sliderRef;
    slider.addEventListener('touchstart', handleTouchStart, {
      passive: doesSupportTouchActionNone()
    });
    return () => {
      slider.removeEventListener('touchstart', handleTouchStart, {
        passive: doesSupportTouchActionNone()
      });
      stopListening();
    };
  }, [stopListening, handleTouchStart]);
  react.useEffect(() => {
    if (disabled) {
      stopListening();
    }
  }, [disabled, stopListening]);
  var handleMouseDown = (0,useEventCallback/* default */.Z)(event => {
    if (onMouseDown) {
      onMouseDown(event);
    } // Only handle left clicks


    if (event.button !== 0) {
      return;
    } // Avoid text selection


    event.preventDefault();
    var finger = trackFinger(event, touchId);
    var {
      newValue,
      activeIndex
    } = getFingerNewValue({
      finger,
      values
    });
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);

    if (handleChange) {
      handleChange(event, newValue, activeIndex);
    }

    moveCount.current = 0;
    var doc = (0,ownerDocument/* default */.Z)(sliderRef.current);
    doc.addEventListener('mousemove', handleTouchMove);
    doc.addEventListener('mouseup', handleTouchEnd);
  });
  var trackOffset = valueToPercent(range ? values[0] : min, min, max);
  var trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;

  var trackStyle = (0,esm_extends/* default */.Z)({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));

  var Root = components.Root || component;
  var rootProps = componentsProps.root || {};
  var Rail = components.Rail || 'span';
  var railProps = componentsProps.rail || {};
  var Track = components.Track || 'span';
  var trackProps = componentsProps.track || {};
  var Thumb = components.Thumb || 'span';
  var thumbProps = componentsProps.thumb || {};
  var ValueLabel = components.ValueLabel || SliderUnstyled_SliderValueLabelUnstyled;
  var valueLabelProps = componentsProps.valueLabel || {};
  var Mark = components.Mark || 'span';
  var markProps = componentsProps.mark || {};
  var MarkLabel = components.MarkLabel || 'span';
  var markLabelProps = componentsProps.markLabel || {}; // all props with defaults
  // consider extracting to hook an reusing the lint rule for the varints

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    classes: classesProp,
    disabled,
    dragging,
    isRtl,
    marked: marks.length > 0 && marks.some(mark => mark.label),
    max,
    min,
    orientation,
    scale,
    step,
    track,
    valueLabelDisplay,
    valueLabelFormat
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(Root, (0,esm_extends/* default */.Z)({
    ref: handleRef,
    onMouseDown: handleMouseDown
  }, rootProps, !(0,isHostComponent/* default */.Z)(Root) && {
    as: component,
    ownerState: (0,esm_extends/* default */.Z)({}, ownerState, rootProps.ownerState)
  }, other, {
    className: (0,clsx_m["default"])(classes.root, rootProps.className, className),
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Rail, (0,esm_extends/* default */.Z)({}, railProps, !(0,isHostComponent/* default */.Z)(Rail) && {
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, railProps.ownerState)
    }, {
      className: (0,clsx_m["default"])(classes.rail, railProps.className)
    })), /*#__PURE__*/(0,jsx_runtime.jsx)(Track, (0,esm_extends/* default */.Z)({}, trackProps, !(0,isHostComponent/* default */.Z)(Track) && {
      ownerState: (0,esm_extends/* default */.Z)({}, ownerState, trackProps.ownerState)
    }, {
      className: (0,clsx_m["default"])(classes.track, trackProps.className),
      style: (0,esm_extends/* default */.Z)({}, trackStyle, trackProps.style)
    })), marks.map((mark, index) => {
      var percent = valueToPercent(mark.value, min, max);
      var style = axisProps[axis].offset(percent);
      var markActive;

      if (track === false) {
        markActive = values.indexOf(mark.value) !== -1;
      } else {
        markActive = track === 'normal' && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === 'inverted' && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
      }

      return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Mark, (0,esm_extends/* default */.Z)({
          "data-index": index
        }, markProps, !(0,isHostComponent/* default */.Z)(Mark) && {
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, markProps.ownerState),
          markActive
        }, {
          style: (0,esm_extends/* default */.Z)({}, style, markProps.style),
          className: (0,clsx_m["default"])(classes.mark, markProps.className, markActive && classes.markActive)
        })), mark.label != null ? /*#__PURE__*/(0,jsx_runtime.jsx)(MarkLabel, (0,esm_extends/* default */.Z)({
          "aria-hidden": true,
          "data-index": index
        }, markLabelProps, !(0,isHostComponent/* default */.Z)(MarkLabel) && {
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, markLabelProps.ownerState)
        }, {
          markLabelActive: markActive,
          style: (0,esm_extends/* default */.Z)({}, style, markLabelProps.style),
          className: (0,clsx_m["default"])(classes.markLabel, markLabelProps.className, markActive && classes.markLabelActive),
          children: mark.label
        })) : null]
      }, mark.value);
    }), values.map((value, index) => {
      var percent = valueToPercent(value, min, max);
      var style = axisProps[axis].offset(percent);
      var ValueLabelComponent = valueLabelDisplay === 'off' ? Forward : ValueLabel;
      return /*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment, {
        children: /*#__PURE__*/(0,jsx_runtime.jsx)(ValueLabelComponent, (0,esm_extends/* default */.Z)({
          valueLabelFormat: valueLabelFormat,
          valueLabelDisplay: valueLabelDisplay,
          value: typeof valueLabelFormat === 'function' ? valueLabelFormat(scale(value), index) : valueLabelFormat,
          index: index,
          open: open === index || active === index || valueLabelDisplay === 'on',
          disabled: disabled
        }, valueLabelProps, {
          className: (0,clsx_m["default"])(classes.valueLabel, valueLabelProps.className)
        }, !(0,isHostComponent/* default */.Z)(ValueLabel) && {
          ownerState: (0,esm_extends/* default */.Z)({}, ownerState, valueLabelProps.ownerState)
        }, {
          children: /*#__PURE__*/(0,jsx_runtime.jsx)(Thumb, (0,esm_extends/* default */.Z)({
            "data-index": index,
            onMouseOver: handleMouseOver,
            onMouseLeave: handleMouseLeave
          }, thumbProps, {
            className: (0,clsx_m["default"])(classes.thumb, thumbProps.className, active === index && classes.active, focusVisible === index && classes.focusVisible)
          }, !(0,isHostComponent/* default */.Z)(Thumb) && {
            ownerState: (0,esm_extends/* default */.Z)({}, ownerState, thumbProps.ownerState)
          }, {
            style: (0,esm_extends/* default */.Z)({}, style, {
              pointerEvents: disableSwap && active !== index ? 'none' : undefined
            }, thumbProps.style),
            children: /*#__PURE__*/(0,jsx_runtime.jsx)("input", {
              tabIndex: tabIndex,
              "data-index": index,
              "aria-label": getAriaLabel ? getAriaLabel(index) : ariaLabel,
              "aria-labelledby": ariaLabelledby,
              "aria-orientation": orientation,
              "aria-valuemax": scale(max),
              "aria-valuemin": scale(min),
              "aria-valuenow": scale(value),
              "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,
              onFocus: handleFocus,
              onBlur: handleBlur,
              name: name,
              type: "range",
              min: props.min,
              max: props.max,
              step: props.step,
              disabled: disabled,
              value: values[index],
              onChange: handleHiddenInputChange,
              style: (0,esm_extends/* default */.Z)({}, esm_visuallyHidden, {
                direction: isRtl ? 'rtl' : 'ltr',
                // So that VoiceOver's focus indicator matches the thumb's dimensions
                width: '100%',
                height: '100%'
              })
            })
          }))
        }))
      }, index);
    })]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var SliderUnstyled_SliderUnstyled = (SliderUnstyled);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Slider/Slider.js


var Slider_excluded = ["components", "componentsProps", "color", "size"];












var sliderClasses = (0,esm_extends/* default */.Z)({}, SliderUnstyled_sliderUnstyledClasses, (0,generateUtilityClasses/* default */.Z)('MuiSlider', ['colorPrimary', 'colorSecondary', 'thumbColorPrimary', 'thumbColorSecondary', 'sizeSmall', 'thumbSizeSmall']));
var SliderRoot = (0,styled/* default */.ZP)('span', {
  name: 'MuiSlider',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    var marks = ownerState.marksProp === true && ownerState.step !== null ? [...Array(Math.floor((ownerState.max - ownerState.min) / ownerState.step) + 1)].map((_, index) => ({
      value: ownerState.min + ownerState.step * index
    })) : ownerState.marksProp || [];
    var marked = marks.length > 0 && marks.some(mark => mark.label);
    return [styles.root, styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))], ownerState.size !== 'medium' && styles["size".concat((0,capitalize/* default */.Z)(ownerState.size))], marked && styles.marked, ownerState.orientation === 'vertical' && styles.vertical, ownerState.track === 'inverted' && styles.trackInverted, ownerState.track === false && styles.trackFalse];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    borderRadius: 12,
    boxSizing: 'content-box',
    display: 'inline-block',
    position: 'relative',
    cursor: 'pointer',
    touchAction: 'none',
    color: theme.palette[ownerState.color].main,
    WebkitTapHighlightColor: 'transparent'
  }, ownerState.orientation === 'horizontal' && (0,esm_extends/* default */.Z)({
    height: 4,
    width: '100%',
    padding: '13px 0',
    // The primary input mechanism of the device includes a pointing device of limited accuracy.
    '@media (pointer: coarse)': {
      // Reach 42px touch target, about ~8mm on screen.
      padding: '20px 0'
    }
  }, ownerState.size === 'small' && {
    height: 2
  }, ownerState.marked && {
    marginBottom: 20
  }), ownerState.orientation === 'vertical' && (0,esm_extends/* default */.Z)({
    height: '100%',
    width: 4,
    padding: '0 13px',
    // The primary input mechanism of the device includes a pointing device of limited accuracy.
    '@media (pointer: coarse)': {
      // Reach 42px touch target, about ~8mm on screen.
      padding: '0 20px'
    }
  }, ownerState.size === 'small' && {
    width: 2
  }, ownerState.marked && {
    marginRight: 44
  }), {
    '@media print': {
      colorAdjust: 'exact'
    },
    ["&.".concat(sliderClasses.disabled)]: {
      pointerEvents: 'none',
      cursor: 'default',
      color: theme.palette.grey[400]
    },
    ["&.".concat(sliderClasses.dragging)]: {
      ["& .".concat(sliderClasses.thumb, ", & .").concat(sliderClasses.track)]: {
        transition: 'none'
      }
    }
  });
});
var SliderRail = (0,styled/* default */.ZP)('span', {
  name: 'MuiSlider',
  slot: 'Rail',
  overridesResolver: (props, styles) => styles.rail
})(_ref2 => {
  var {
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    display: 'block',
    position: 'absolute',
    borderRadius: 'inherit',
    backgroundColor: 'currentColor',
    opacity: 0.38
  }, ownerState.orientation === 'horizontal' && {
    width: '100%',
    height: 'inherit',
    top: '50%',
    transform: 'translateY(-50%)'
  }, ownerState.orientation === 'vertical' && {
    height: '100%',
    width: 'inherit',
    left: '50%',
    transform: 'translateX(-50%)'
  }, ownerState.track === 'inverted' && {
    opacity: 1
  });
});
var SliderTrack = (0,styled/* default */.ZP)('span', {
  name: 'MuiSlider',
  slot: 'Track',
  overridesResolver: (props, styles) => styles.track
})(_ref3 => {
  var {
    theme,
    ownerState
  } = _ref3;
  var color = // Same logic as the LinearProgress track color
  theme.palette.mode === 'light' ? (0,colorManipulator/* lighten */.$n)(theme.palette[ownerState.color].main, 0.62) : (0,colorManipulator/* darken */._j)(theme.palette[ownerState.color].main, 0.5);
  return (0,esm_extends/* default */.Z)({
    display: 'block',
    position: 'absolute',
    borderRadius: 'inherit',
    border: '1px solid currentColor',
    backgroundColor: 'currentColor',
    transition: theme.transitions.create(['left', 'width', 'bottom', 'height'], {
      duration: theme.transitions.duration.shortest
    })
  }, ownerState.size === 'small' && {
    border: 'none'
  }, ownerState.orientation === 'horizontal' && {
    height: 'inherit',
    top: '50%',
    transform: 'translateY(-50%)'
  }, ownerState.orientation === 'vertical' && {
    width: 'inherit',
    left: '50%',
    transform: 'translateX(-50%)'
  }, ownerState.track === false && {
    display: 'none'
  }, ownerState.track === 'inverted' && {
    backgroundColor: color,
    borderColor: color
  });
});
var SliderThumb = (0,styled/* default */.ZP)('span', {
  name: 'MuiSlider',
  slot: 'Thumb',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.thumb, styles["thumbColor".concat((0,capitalize/* default */.Z)(ownerState.color))], ownerState.size !== 'medium' && styles["thumbSize".concat((0,capitalize/* default */.Z)(ownerState.size))]];
  }
})(_ref4 => {
  var {
    theme,
    ownerState
  } = _ref4;
  return (0,esm_extends/* default */.Z)({
    position: 'absolute',
    width: 20,
    height: 20,
    boxSizing: 'border-box',
    borderRadius: '50%',
    outline: 0,
    backgroundColor: 'currentColor',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    transition: theme.transitions.create(['box-shadow', 'left', 'bottom'], {
      duration: theme.transitions.duration.shortest
    })
  }, ownerState.size === 'small' && {
    width: 12,
    height: 12
  }, ownerState.orientation === 'horizontal' && {
    top: '50%',
    transform: 'translate(-50%, -50%)'
  }, ownerState.orientation === 'vertical' && {
    left: '50%',
    transform: 'translate(-50%, 50%)'
  }, {
    '&:before': (0,esm_extends/* default */.Z)({
      position: 'absolute',
      content: '""',
      borderRadius: 'inherit',
      width: '100%',
      height: '100%',
      boxShadow: theme.shadows[2]
    }, ownerState.size === 'small' && {
      boxShadow: 'none'
    }),
    '&::after': {
      position: 'absolute',
      content: '""',
      borderRadius: '50%',
      // 42px is the hit target
      width: 42,
      height: 42,
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)'
    },
    ["&:hover, &.".concat(sliderClasses.focusVisible)]: {
      boxShadow: "0px 0px 0px 8px ".concat((0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, 0.16)),
      '@media (hover: none)': {
        boxShadow: 'none'
      }
    },
    ["&.".concat(sliderClasses.active)]: {
      boxShadow: "0px 0px 0px 14px ".concat((0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, 0.16))
    },
    ["&.".concat(sliderClasses.disabled)]: {
      '&:hover': {
        boxShadow: 'none'
      }
    }
  });
});
var SliderValueLabel = (0,styled/* default */.ZP)(SliderUnstyled_SliderValueLabelUnstyled, {
  name: 'MuiSlider',
  slot: 'ValueLabel',
  overridesResolver: (props, styles) => styles.valueLabel
})(_ref5 => {
  var {
    theme,
    ownerState
  } = _ref5;
  return (0,esm_extends/* default */.Z)({
    ["&.".concat(sliderClasses.valueLabelOpen)]: {
      transform: 'translateY(-100%) scale(1)'
    },
    zIndex: 1,
    whiteSpace: 'nowrap'
  }, theme.typography.body2, {
    fontWeight: 500,
    transition: theme.transitions.create(['transform'], {
      duration: theme.transitions.duration.shortest
    }),
    top: -10,
    transformOrigin: 'bottom center',
    transform: 'translateY(-100%) scale(0)',
    position: 'absolute',
    backgroundColor: theme.palette.grey[600],
    borderRadius: 2,
    color: theme.palette.common.white,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    padding: '0.25rem 0.75rem'
  }, ownerState.size === 'small' && {
    fontSize: theme.typography.pxToRem(12),
    padding: '0.25rem 0.5rem'
  }, {
    '&:before': {
      position: 'absolute',
      content: '""',
      width: 8,
      height: 8,
      bottom: 0,
      left: '50%',
      transform: 'translate(-50%, 50%) rotate(45deg)',
      backgroundColor: 'inherit'
    }
  });
});
var SliderMark = (0,styled/* default */.ZP)('span', {
  name: 'MuiSlider',
  slot: 'Mark',
  shouldForwardProp: prop => (0,styled/* slotShouldForwardProp */.Dz)(prop) && prop !== 'markActive',
  overridesResolver: (props, styles) => styles.mark
})(_ref6 => {
  var {
    theme,
    ownerState,
    markActive
  } = _ref6;
  return (0,esm_extends/* default */.Z)({
    position: 'absolute',
    width: 2,
    height: 2,
    borderRadius: 1,
    backgroundColor: 'currentColor'
  }, ownerState.orientation === 'horizontal' && {
    top: '50%',
    transform: 'translate(-1px, -50%)'
  }, ownerState.orientation === 'vertical' && {
    left: '50%',
    transform: 'translate(-50%, 1px)'
  }, markActive && {
    backgroundColor: theme.palette.background.paper,
    opacity: 0.8
  });
});
var SliderMarkLabel = (0,styled/* default */.ZP)('span', {
  name: 'MuiSlider',
  slot: 'MarkLabel',
  shouldForwardProp: prop => (0,styled/* slotShouldForwardProp */.Dz)(prop) && prop !== 'markLabelActive',
  overridesResolver: (props, styles) => styles.markLabel
})(_ref7 => {
  var {
    theme,
    ownerState,
    markLabelActive
  } = _ref7;
  return (0,esm_extends/* default */.Z)({}, theme.typography.body2, {
    color: theme.palette.text.secondary,
    position: 'absolute',
    whiteSpace: 'nowrap'
  }, ownerState.orientation === 'horizontal' && {
    top: 30,
    transform: 'translateX(-50%)',
    '@media (pointer: coarse)': {
      top: 40
    }
  }, ownerState.orientation === 'vertical' && {
    left: 36,
    transform: 'translateY(50%)',
    '@media (pointer: coarse)': {
      left: 44
    }
  }, markLabelActive && {
    color: theme.palette.text.primary
  });
});
SliderRoot.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * @ignore
   */
  children: (prop_types_default()).node,

  /**
   * @ignore
   */
  ownerState: prop_types_default().shape({
    'aria-label': (prop_types_default()).string,
    'aria-labelledby': (prop_types_default()).string,
    'aria-valuetext': (prop_types_default()).string,
    classes: (prop_types_default()).object,
    color: prop_types_default().oneOf(['primary', 'secondary']),
    defaultValue: prop_types_default().oneOfType([prop_types_default().arrayOf((prop_types_default()).number), (prop_types_default()).number]),
    disabled: (prop_types_default()).bool,
    getAriaLabel: (prop_types_default()).func,
    getAriaValueText: (prop_types_default()).func,
    isRtl: (prop_types_default()).bool,
    marks: prop_types_default().oneOfType([prop_types_default().arrayOf(prop_types_default().shape({
      label: (prop_types_default()).node,
      value: (prop_types_default()).number.isRequired
    })), (prop_types_default()).bool]),
    max: (prop_types_default()).number,
    min: (prop_types_default()).number,
    name: (prop_types_default()).string,
    onChange: (prop_types_default()).func,
    onChangeCommitted: (prop_types_default()).func,
    orientation: prop_types_default().oneOf(['horizontal', 'vertical']),
    scale: (prop_types_default()).func,
    step: (prop_types_default()).number,
    track: prop_types_default().oneOf(['inverted', 'normal', false]),
    value: prop_types_default().oneOfType([prop_types_default().arrayOf((prop_types_default()).number), (prop_types_default()).number]),
    valueLabelDisplay: prop_types_default().oneOf(['auto', 'off', 'on']),
    valueLabelFormat: prop_types_default().oneOfType([(prop_types_default()).func, (prop_types_default()).string])
  })
};

var extendUtilityClasses = ownerState => {
  var {
    color,
    size,
    classes = {}
  } = ownerState;
  return (0,esm_extends/* default */.Z)({}, classes, {
    root: (0,clsx_m["default"])(classes.root, getSliderUtilityClass("color".concat((0,capitalize/* default */.Z)(color))), classes["color".concat((0,capitalize/* default */.Z)(color))], size && [getSliderUtilityClass("size".concat((0,capitalize/* default */.Z)(size))), classes["size".concat((0,capitalize/* default */.Z)(size))]]),
    thumb: (0,clsx_m["default"])(classes.thumb, getSliderUtilityClass("thumbColor".concat((0,capitalize/* default */.Z)(color))), classes["thumbColor".concat((0,capitalize/* default */.Z)(color))], size && [getSliderUtilityClass("thumbSize".concat((0,capitalize/* default */.Z)(size))), classes["thumbSize".concat((0,capitalize/* default */.Z)(size))]])
  });
};

var shouldSpreadOwnerState = Component => {
  return !Component || !(0,isHostComponent/* default */.Z)(Component);
};

var Slider = /*#__PURE__*/react.forwardRef(function Slider(inputProps, ref) {
  var _componentsProps$root, _componentsProps$thum, _componentsProps$trac, _componentsProps$valu;

  var props = (0,useThemeProps/* default */.Z)({
    props: inputProps,
    name: 'MuiSlider'
  });
  var theme = (0,useTheme/* default */.Z)();
  var isRtl = theme.direction === 'rtl';

  var {
    components = {},
    componentsProps = {},
    color = 'primary',
    size = 'medium'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Slider_excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    size
  });

  var classes = extendUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(SliderUnstyled_SliderUnstyled, (0,esm_extends/* default */.Z)({}, other, {
    isRtl: isRtl,
    components: (0,esm_extends/* default */.Z)({
      Root: SliderRoot,
      Rail: SliderRail,
      Track: SliderTrack,
      Thumb: SliderThumb,
      ValueLabel: SliderValueLabel,
      Mark: SliderMark,
      MarkLabel: SliderMarkLabel
    }, components),
    componentsProps: (0,esm_extends/* default */.Z)({}, componentsProps, {
      root: (0,esm_extends/* default */.Z)({}, componentsProps.root, shouldSpreadOwnerState(components.Root) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState, {
          color,
          size
        })
      }),
      thumb: (0,esm_extends/* default */.Z)({}, componentsProps.thumb, shouldSpreadOwnerState(components.Thumb) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$thum = componentsProps.thumb) == null ? void 0 : _componentsProps$thum.ownerState, {
          color,
          size
        })
      }),
      track: (0,esm_extends/* default */.Z)({}, componentsProps.track, shouldSpreadOwnerState(components.Track) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$trac = componentsProps.track) == null ? void 0 : _componentsProps$trac.ownerState, {
          color,
          size
        })
      }),
      valueLabel: (0,esm_extends/* default */.Z)({}, componentsProps.valueLabel, shouldSpreadOwnerState(components.ValueLabel) && {
        ownerState: (0,esm_extends/* default */.Z)({}, (_componentsProps$valu = componentsProps.valueLabel) == null ? void 0 : _componentsProps$valu.ownerState, {
          color,
          size
        })
      })
    }),
    classes: classes,
    ref: ref
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Slider_Slider = (Slider);

/***/ }),

/***/ 67648:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ SvgIcon_SvgIcon; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/SvgIcon/svgIconClasses.js

function getSvgIconUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiSvgIcon', slot);
}
var svgIconClasses = (0,generateUtilityClasses/* default */.Z)('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);
/* harmony default export */ var SvgIcon_svgIconClasses = ((/* unused pure expression or super */ null && (svgIconClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/SvgIcon/SvgIcon.js


var _excluded = ["children", "className", "color", "component", "fontSize", "htmlColor", "titleAccess", "viewBox"];










var useUtilityClasses = ownerState => {
  var {
    color,
    fontSize,
    classes
  } = ownerState;
  var slots = {
    root: ['root', color !== 'inherit' && "color".concat((0,capitalize/* default */.Z)(color)), "fontSize".concat((0,capitalize/* default */.Z)(fontSize))]
  };
  return (0,composeClasses/* default */.Z)(slots, getSvgIconUtilityClass, classes);
};

var SvgIconRoot = (0,styled/* default */.ZP)('svg', {
  name: 'MuiSvgIcon',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.color !== 'inherit' && styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))], styles["fontSize".concat((0,capitalize/* default */.Z)(ownerState.fontSize))]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;

  var _theme$palette$ownerS, _theme$palette$ownerS2;

  return {
    userSelect: 'none',
    width: '1em',
    height: '1em',
    display: 'inline-block',
    fill: 'currentColor',
    flexShrink: 0,
    transition: theme.transitions.create('fill', {
      duration: theme.transitions.duration.shorter
    }),
    fontSize: {
      inherit: 'inherit',
      small: theme.typography.pxToRem(20),
      medium: theme.typography.pxToRem(24),
      large: theme.typography.pxToRem(35)
    }[ownerState.fontSize],
    // TODO v5 deprecate, v6 remove for sx
    color: (_theme$palette$ownerS = (_theme$palette$ownerS2 = theme.palette[ownerState.color]) == null ? void 0 : _theme$palette$ownerS2.main) != null ? _theme$palette$ownerS : {
      action: theme.palette.action.active,
      disabled: theme.palette.action.disabled,
      inherit: undefined
    }[ownerState.color]
  };
});
var SvgIcon = /*#__PURE__*/react.forwardRef(function SvgIcon(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiSvgIcon'
  });

  var {
    children,
    className,
    color = 'inherit',
    component = 'svg',
    fontSize = 'medium',
    htmlColor,
    titleAccess,
    viewBox = '0 0 24 24'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    component,
    fontSize,
    viewBox
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(SvgIconRoot, (0,esm_extends/* default */.Z)({
    as: component,
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    focusable: "false",
    viewBox: viewBox,
    color: htmlColor,
    "aria-hidden": titleAccess ? undefined : true,
    role: titleAccess ? 'img' : undefined,
    ref: ref
  }, other, {
    children: [children, titleAccess ? /*#__PURE__*/(0,jsx_runtime.jsx)("title", {
      children: titleAccess
    }) : null]
  }));
});
 false ? 0 : void 0;
SvgIcon.muiName = 'SvgIcon';
/* harmony default export */ var SvgIcon_SvgIcon = (SvgIcon);

/***/ }),

/***/ 94548:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Switch_Switch; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/internal/SwitchBase.js + 1 modules
var SwitchBase = __webpack_require__(18440);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Switch/switchClasses.js

function getSwitchUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiSwitch', slot);
}
var switchClasses = (0,generateUtilityClasses/* default */.Z)('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);
/* harmony default export */ var Switch_switchClasses = (switchClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Switch/Switch.js


var _excluded = ["className", "color", "edge", "size", "sx"]; // @inheritedComponent IconButton














var useUtilityClasses = ownerState => {
  var {
    classes,
    edge,
    size,
    color,
    checked,
    disabled
  } = ownerState;
  var slots = {
    root: ['root', edge && "edge".concat((0,capitalize/* default */.Z)(edge)), "size".concat((0,capitalize/* default */.Z)(size))],
    switchBase: ['switchBase', "color".concat((0,capitalize/* default */.Z)(color)), checked && 'checked', disabled && 'disabled'],
    thumb: ['thumb'],
    track: ['track'],
    input: ['input']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, getSwitchUtilityClass, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};

var SwitchRoot = (0,styled/* default */.ZP)('span', {
  name: 'MuiSwitch',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.edge && styles["edge".concat((0,capitalize/* default */.Z)(ownerState.edge))], styles["size".concat((0,capitalize/* default */.Z)(ownerState.size))]];
  }
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'inline-flex',
    width: 34 + 12 * 2,
    height: 14 + 12 * 2,
    overflow: 'hidden',
    padding: 12,
    boxSizing: 'border-box',
    position: 'relative',
    flexShrink: 0,
    zIndex: 0,
    // Reset the stacking context.
    verticalAlign: 'middle',
    // For correct alignment with the text.
    '@media print': {
      colorAdjust: 'exact'
    }
  }, ownerState.edge === 'start' && {
    marginLeft: -8
  }, ownerState.edge === 'end' && {
    marginRight: -8
  }, ownerState.size === 'small' && {
    width: 40,
    height: 24,
    padding: 7,
    ["& .".concat(Switch_switchClasses.thumb)]: {
      width: 16,
      height: 16
    },
    ["& .".concat(Switch_switchClasses.switchBase)]: {
      padding: 4,
      ["&.".concat(Switch_switchClasses.checked)]: {
        transform: 'translateX(16px)'
      }
    }
  });
});
var SwitchSwitchBase = (0,styled/* default */.ZP)(SwitchBase/* default */.Z, {
  name: 'MuiSwitch',
  slot: 'SwitchBase',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.switchBase, {
      ["& .".concat(Switch_switchClasses.input)]: styles.input
    }, ownerState.color !== 'default' && styles["color".concat((0,capitalize/* default */.Z)(ownerState.color))]];
  }
})(_ref2 => {
  var {
    theme
  } = _ref2;
  return {
    position: 'absolute',
    top: 0,
    left: 0,
    zIndex: 1,
    // Render above the focus ripple.
    color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],
    transition: theme.transitions.create(['left', 'transform'], {
      duration: theme.transitions.duration.shortest
    }),
    ["&.".concat(Switch_switchClasses.checked)]: {
      transform: 'translateX(20px)'
    },
    ["&.".concat(Switch_switchClasses.disabled)]: {
      color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]
    },
    ["&.".concat(Switch_switchClasses.checked, " + .").concat(Switch_switchClasses.track)]: {
      opacity: 0.5
    },
    ["&.".concat(Switch_switchClasses.disabled, " + .").concat(Switch_switchClasses.track)]: {
      opacity: theme.palette.mode === 'light' ? 0.12 : 0.2
    },
    ["& .".concat(Switch_switchClasses.input)]: {
      left: '-100%',
      width: '300%'
    }
  };
}, _ref3 => {
  var {
    theme,
    ownerState
  } = _ref3;
  return (0,esm_extends/* default */.Z)({
    '&:hover': {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.action.active, theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    }
  }, ownerState.color !== 'default' && {
    ["&.".concat(Switch_switchClasses.checked)]: {
      color: theme.palette[ownerState.color].main,
      '&:hover': {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
        '@media (hover: none)': {
          backgroundColor: 'transparent'
        }
      },
      ["&.".concat(Switch_switchClasses.disabled)]: {
        color: theme.palette.mode === 'light' ? (0,colorManipulator/* lighten */.$n)(theme.palette[ownerState.color].main, 0.62) : (0,colorManipulator/* darken */._j)(theme.palette[ownerState.color].main, 0.55)
      }
    },
    ["&.".concat(Switch_switchClasses.checked, " + .").concat(Switch_switchClasses.track)]: {
      backgroundColor: theme.palette[ownerState.color].main
    }
  });
});
var SwitchTrack = (0,styled/* default */.ZP)('span', {
  name: 'MuiSwitch',
  slot: 'Track',
  overridesResolver: (props, styles) => styles.track
})(_ref4 => {
  var {
    theme
  } = _ref4;
  return {
    height: '100%',
    width: '100%',
    borderRadius: 14 / 2,
    zIndex: -1,
    transition: theme.transitions.create(['opacity', 'background-color'], {
      duration: theme.transitions.duration.shortest
    }),
    backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,
    opacity: theme.palette.mode === 'light' ? 0.38 : 0.3
  };
});
var SwitchThumb = (0,styled/* default */.ZP)('span', {
  name: 'MuiSwitch',
  slot: 'Thumb',
  overridesResolver: (props, styles) => styles.thumb
})(_ref5 => {
  var {
    theme
  } = _ref5;
  return {
    boxShadow: theme.shadows[1],
    backgroundColor: 'currentColor',
    width: 20,
    height: 20,
    borderRadius: '50%'
  };
});
var Switch = /*#__PURE__*/react.forwardRef(function Switch(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiSwitch'
  });

  var {
    className,
    color = 'primary',
    edge = false,
    size = 'medium',
    sx
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    edge,
    size
  });

  var classes = useUtilityClasses(ownerState);

  var icon = /*#__PURE__*/(0,jsx_runtime.jsx)(SwitchThumb, {
    className: classes.thumb,
    ownerState: ownerState
  });

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(SwitchRoot, {
    className: (0,clsx_m["default"])(classes.root, className),
    sx: sx,
    ownerState: ownerState,
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(SwitchSwitchBase, (0,esm_extends/* default */.Z)({
      type: "checkbox",
      icon: icon,
      checkedIcon: icon,
      ref: ref,
      ownerState: ownerState
    }, other, {
      classes: (0,esm_extends/* default */.Z)({}, classes, {
        root: classes.switchBase
      })
    })), /*#__PURE__*/(0,jsx_runtime.jsx)(SwitchTrack, {
      className: classes.track,
      ownerState: ownerState
    })]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var Switch_Switch = (Switch);

/***/ }),

/***/ 92664:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Table_Table; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/Table/TableContext.js
var TableContext = __webpack_require__(90694);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Table/tableClasses.js

function getTableUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTable', slot);
}
var tableClasses = (0,generateUtilityClasses/* default */.Z)('MuiTable', ['root', 'stickyHeader']);
/* harmony default export */ var Table_tableClasses = ((/* unused pure expression or super */ null && (tableClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Table/Table.js


var _excluded = ["className", "component", "padding", "size", "stickyHeader"];









var useUtilityClasses = ownerState => {
  var {
    classes,
    stickyHeader
  } = ownerState;
  var slots = {
    root: ['root', stickyHeader && 'stickyHeader']
  };
  return (0,composeClasses/* default */.Z)(slots, getTableUtilityClass, classes);
};

var TableRoot = (0,styled/* default */.ZP)('table', {
  name: 'MuiTable',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'table',
    width: '100%',
    borderCollapse: 'collapse',
    borderSpacing: 0,
    '& caption': (0,esm_extends/* default */.Z)({}, theme.typography.body2, {
      padding: theme.spacing(2),
      color: theme.palette.text.secondary,
      textAlign: 'left',
      captionSide: 'bottom'
    })
  }, ownerState.stickyHeader && {
    borderCollapse: 'separate'
  });
});
var defaultComponent = 'table';
var Table = /*#__PURE__*/react.forwardRef(function Table(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTable'
  });

  var {
    className,
    component = defaultComponent,
    padding = 'normal',
    size = 'medium',
    stickyHeader = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    padding,
    size,
    stickyHeader
  });

  var classes = useUtilityClasses(ownerState);
  var table = react.useMemo(() => ({
    padding,
    size,
    stickyHeader
  }), [padding, size, stickyHeader]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TableContext/* default.Provider */.Z.Provider, {
    value: table,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TableRoot, (0,esm_extends/* default */.Z)({
      as: component,
      role: component === defaultComponent ? null : 'table',
      ref: ref,
      className: (0,clsx_m["default"])(classes.root, className),
      ownerState: ownerState
    }, other))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var Table_Table = (Table);

/***/ }),

/***/ 90694:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

/**
 * @ignore - internal component.
 */

var TableContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext();

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (TableContext);

/***/ }),

/***/ 70473:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

/**
 * @ignore - internal component.
 */

var Tablelvl2Context = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext();

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (Tablelvl2Context);

/***/ }),

/***/ 57783:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ TableBody_TableBody; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/Table/Tablelvl2Context.js
var Tablelvl2Context = __webpack_require__(70473);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableBody/tableBodyClasses.js

function getTableBodyUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTableBody', slot);
}
var tableBodyClasses = (0,generateUtilityClasses/* default */.Z)('MuiTableBody', ['root']);
/* harmony default export */ var TableBody_tableBodyClasses = ((/* unused pure expression or super */ null && (tableBodyClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableBody/TableBody.js


var _excluded = ["className", "component"];









var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getTableBodyUtilityClass, classes);
};

var TableBodyRoot = (0,styled/* default */.ZP)('tbody', {
  name: 'MuiTableBody',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  display: 'table-row-group'
});
var tablelvl2 = {
  variant: 'body'
};
var defaultComponent = 'tbody';
var TableBody = /*#__PURE__*/react.forwardRef(function TableBody(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTableBody'
  });

  var {
    className,
    component = defaultComponent
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Tablelvl2Context/* default.Provider */.Z.Provider, {
    value: tablelvl2,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TableBodyRoot, (0,esm_extends/* default */.Z)({
      className: (0,clsx_m["default"])(classes.root, className),
      as: component,
      ref: ref,
      role: component === defaultComponent ? null : 'rowgroup',
      ownerState: ownerState
    }, other))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var TableBody_TableBody = (TableBody);

/***/ }),

/***/ 75319:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ TableContainer_TableContainer; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableContainer/tableContainerClasses.js

function getTableContainerUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTableContainer', slot);
}
var tableContainerClasses = (0,generateUtilityClasses/* default */.Z)('MuiTableContainer', ['root']);
/* harmony default export */ var TableContainer_tableContainerClasses = ((/* unused pure expression or super */ null && (tableContainerClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableContainer/TableContainer.js


var _excluded = ["className", "component"];








var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getTableContainerUtilityClass, classes);
};

var TableContainerRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiTableContainer',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  width: '100%',
  overflowX: 'auto'
});
var TableContainer = /*#__PURE__*/react.forwardRef(function TableContainer(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTableContainer'
  });

  var {
    className,
    component = 'div'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TableContainerRoot, (0,esm_extends/* default */.Z)({
    ref: ref,
    as: component,
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var TableContainer_TableContainer = (TableContainer);

/***/ }),

/***/ 17708:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ TableHead_TableHead; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/Table/Tablelvl2Context.js
var Tablelvl2Context = __webpack_require__(70473);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableHead/tableHeadClasses.js

function getTableHeadUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTableHead', slot);
}
var tableHeadClasses = (0,generateUtilityClasses/* default */.Z)('MuiTableHead', ['root']);
/* harmony default export */ var TableHead_tableHeadClasses = ((/* unused pure expression or super */ null && (tableHeadClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableHead/TableHead.js


var _excluded = ["className", "component"];









var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getTableHeadUtilityClass, classes);
};

var TableHeadRoot = (0,styled/* default */.ZP)('thead', {
  name: 'MuiTableHead',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  display: 'table-header-group'
});
var tablelvl2 = {
  variant: 'head'
};
var defaultComponent = 'thead';
var TableHead = /*#__PURE__*/react.forwardRef(function TableHead(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTableHead'
  });

  var {
    className,
    component = defaultComponent
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(Tablelvl2Context/* default.Provider */.Z.Provider, {
    value: tablelvl2,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(TableHeadRoot, (0,esm_extends/* default */.Z)({
      as: component,
      className: (0,clsx_m["default"])(classes.root, className),
      ref: ref,
      role: component === defaultComponent ? null : 'rowgroup',
      ownerState: ownerState
    }, other))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var TableHead_TableHead = (TableHead);

/***/ }),

/***/ 33182:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ TableRow_TableRow; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/Table/Tablelvl2Context.js
var Tablelvl2Context = __webpack_require__(70473);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableRow/tableRowClasses.js

function getTableRowUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTableRow', slot);
}
var tableRowClasses = (0,generateUtilityClasses/* default */.Z)('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);
/* harmony default export */ var TableRow_tableRowClasses = (tableRowClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TableRow/TableRow.js


var _excluded = ["className", "component", "hover", "selected"];










var useUtilityClasses = ownerState => {
  var {
    classes,
    selected,
    hover,
    head,
    footer
  } = ownerState;
  var slots = {
    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']
  };
  return (0,composeClasses/* default */.Z)(slots, getTableRowUtilityClass, classes);
};

var TableRowRoot = (0,styled/* default */.ZP)('tr', {
  name: 'MuiTableRow',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];
  }
})(_ref => {
  var {
    theme
  } = _ref;
  return {
    color: 'inherit',
    display: 'table-row',
    verticalAlign: 'middle',
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    ["&.".concat(TableRow_tableRowClasses.hover, ":hover")]: {
      backgroundColor: theme.palette.action.hover
    },
    ["&.".concat(TableRow_tableRowClasses.selected)]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity),
      '&:hover': {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)
      }
    }
  };
});
var defaultComponent = 'tr';
/**
 * Will automatically set dynamic row height
 * based on the material table element parent (head, body, etc).
 */

var TableRow = /*#__PURE__*/react.forwardRef(function TableRow(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTableRow'
  });

  var {
    className,
    component = defaultComponent,
    hover = false,
    selected = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var tablelvl2 = react.useContext(Tablelvl2Context/* default */.Z);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    hover,
    selected,
    head: tablelvl2 && tablelvl2.variant === 'head',
    footer: tablelvl2 && tablelvl2.variant === 'footer'
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TableRowRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ref: ref,
    className: (0,clsx_m["default"])(classes.root, className),
    role: component === defaultComponent ? null : 'row',
    ownerState: ownerState
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var TableRow_TableRow = (TableRow);

/***/ }),

/***/ 65970:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ TextField_TextField; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useId.js
var useId = __webpack_require__(95025);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/Input/Input.js
var Input = __webpack_require__(3320);
// EXTERNAL MODULE: ./node_modules/@mui/material/FilledInput/FilledInput.js
var FilledInput = __webpack_require__(11519);
// EXTERNAL MODULE: ./node_modules/@mui/material/OutlinedInput/OutlinedInput.js + 1 modules
var OutlinedInput = __webpack_require__(73750);
// EXTERNAL MODULE: ./node_modules/@mui/material/InputLabel/InputLabel.js + 1 modules
var InputLabel = __webpack_require__(24157);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/FormControl.js + 1 modules
var FormControl = __webpack_require__(13827);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormHelperText/FormHelperText.js + 1 modules
var FormHelperText = __webpack_require__(32990);
// EXTERNAL MODULE: ./node_modules/@mui/material/Select/Select.js + 4 modules
var Select = __webpack_require__(67486);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TextField/textFieldClasses.js

function getTextFieldUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTextField', slot);
}
var textFieldClasses = (0,generateUtilityClasses/* default */.Z)('MuiTextField', ['root']);
/* harmony default export */ var TextField_textFieldClasses = ((/* unused pure expression or super */ null && (textFieldClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/TextField/TextField.js


var _excluded = ["autoComplete", "autoFocus", "children", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "select", "SelectProps", "type", "value", "variant"];
















var variantComponent = {
  standard: Input/* default */.Z,
  filled: FilledInput/* default */.Z,
  outlined: OutlinedInput/* default */.Z
};

var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, getTextFieldUtilityClass, classes);
};

var TextFieldRoot = (0,styled/* default */.ZP)(FormControl/* default */.Z, {
  name: 'MuiTextField',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({});
/**
 * The `TextField` is a convenience wrapper for the most common cases (80%).
 * It cannot be all things to all people, otherwise the API would grow out of control.
 *
 * ## Advanced Configuration
 *
 * It's important to understand that the text field is a simple abstraction
 * on top of the following components:
 *
 * - [FormControl](/api/form-control/)
 * - [InputLabel](/api/input-label/)
 * - [FilledInput](/api/filled-input/)
 * - [OutlinedInput](/api/outlined-input/)
 * - [Input](/api/input/)
 * - [FormHelperText](/api/form-helper-text/)
 *
 * If you wish to alter the props applied to the `input` element, you can do so as follows:
 *
 * ```jsx
 * const inputProps = {
 *   step: 300,
 * };
 *
 * return <TextField id="time" type="time" inputProps={inputProps} />;
 * ```
 *
 * For advanced cases, please look at the source of TextField by clicking on the
 * "Edit this page" button above. Consider either:
 *
 * - using the upper case props for passing values directly to the components
 * - using the underlying components directly as shown in the demos
 */

var TextField = /*#__PURE__*/react.forwardRef(function TextField(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTextField'
  });

  var {
    autoComplete,
    autoFocus = false,
    children,
    className,
    color = 'primary',
    defaultValue,
    disabled = false,
    error = false,
    FormHelperTextProps,
    fullWidth = false,
    helperText,
    id: idOverride,
    InputLabelProps,
    inputProps,
    InputProps,
    inputRef,
    label,
    maxRows,
    minRows,
    multiline = false,
    name,
    onBlur,
    onChange,
    onFocus,
    placeholder,
    required = false,
    rows,
    select = false,
    SelectProps,
    type,
    value,
    variant = 'outlined'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    autoFocus,
    color,
    disabled,
    error,
    fullWidth,
    multiline,
    required,
    select,
    variant
  });

  var classes = useUtilityClasses(ownerState);

  if (false) {}

  var InputMore = {};

  if (variant === 'outlined') {
    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {
      InputMore.notched = InputLabelProps.shrink;
    }

    if (label) {
      var _InputLabelProps$requ;

      var displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;
      InputMore.label = /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
        children: [label, displayRequired && '\u00a0*']
      });
    }
  }

  if (select) {
    // unset defaults from textbox inputs
    if (!SelectProps || !SelectProps.native) {
      InputMore.id = undefined;
    }

    InputMore['aria-describedby'] = undefined;
  }

  var id = (0,useId/* default */.Z)(idOverride);
  var helperTextId = helperText && id ? "".concat(id, "-helper-text") : undefined;
  var inputLabelId = label && id ? "".concat(id, "-label") : undefined;
  var InputComponent = variantComponent[variant];

  var InputElement = /*#__PURE__*/(0,jsx_runtime.jsx)(InputComponent, (0,esm_extends/* default */.Z)({
    "aria-describedby": helperTextId,
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    defaultValue: defaultValue,
    fullWidth: fullWidth,
    multiline: multiline,
    name: name,
    rows: rows,
    maxRows: maxRows,
    minRows: minRows,
    type: type,
    value: value,
    id: id,
    inputRef: inputRef,
    onBlur: onBlur,
    onChange: onChange,
    onFocus: onFocus,
    placeholder: placeholder,
    inputProps: inputProps
  }, InputMore, InputProps));

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(TextFieldRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    disabled: disabled,
    error: error,
    fullWidth: fullWidth,
    ref: ref,
    required: required,
    color: color,
    variant: variant,
    ownerState: ownerState
  }, other, {
    children: [label && /*#__PURE__*/(0,jsx_runtime.jsx)(InputLabel/* default */.Z, (0,esm_extends/* default */.Z)({
      htmlFor: id,
      id: inputLabelId
    }, InputLabelProps, {
      children: label
    })), select ? /*#__PURE__*/(0,jsx_runtime.jsx)(Select/* default */.Z, (0,esm_extends/* default */.Z)({
      "aria-describedby": helperTextId,
      id: id,
      labelId: inputLabelId,
      value: value,
      input: InputElement
    }, SelectProps, {
      children: children
    })) : InputElement, helperText && /*#__PURE__*/(0,jsx_runtime.jsx)(FormHelperText/* default */.Z, (0,esm_extends/* default */.Z)({
      id: helperTextId
    }, FormHelperTextProps, {
      children: helperText
    }))]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var TextField_TextField = (TextField);

/***/ }),

/***/ 97098:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Toolbar_Toolbar; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Toolbar/toolbarClasses.js

function getToolbarUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiToolbar', slot);
}
var toolbarClasses = (0,generateUtilityClasses/* default */.Z)('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);
/* harmony default export */ var Toolbar_toolbarClasses = ((/* unused pure expression or super */ null && (toolbarClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Toolbar/Toolbar.js


var _excluded = ["className", "component", "disableGutters", "variant"];








var useUtilityClasses = ownerState => {
  var {
    classes,
    disableGutters,
    variant
  } = ownerState;
  var slots = {
    root: ['root', !disableGutters && 'gutters', variant]
  };
  return (0,composeClasses/* default */.Z)(slots, getToolbarUtilityClass, classes);
};

var ToolbarRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiToolbar',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    position: 'relative',
    display: 'flex',
    alignItems: 'center'
  }, !ownerState.disableGutters && {
    paddingLeft: theme.spacing(2),
    paddingRight: theme.spacing(2),
    [theme.breakpoints.up('sm')]: {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }
  }, ownerState.variant === 'dense' && {
    minHeight: 48
  });
}, _ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return ownerState.variant === 'regular' && theme.mixins.toolbar;
});
var Toolbar = /*#__PURE__*/react.forwardRef(function Toolbar(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiToolbar'
  });

  var {
    className,
    component = 'div',
    disableGutters = false,
    variant = 'regular'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    disableGutters,
    variant
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ToolbarRoot, (0,esm_extends/* default */.Z)({
    as: component,
    className: (0,clsx_m["default"])(classes.root, className),
    ref: ref,
    ownerState: ownerState
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Toolbar_Toolbar = (Toolbar);

/***/ }),

/***/ 23961:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Tooltip_Tooltip; }
});

// UNUSED EXPORTS: testReset

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/utils/isHostComponent.js
var isHostComponent = __webpack_require__(22234);
;// CONCATENATED MODULE: ./node_modules/@mui/base/utils/appendOwnerState.js


/**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.
 * @param existingProps Props of the element.
 * @param ownerState
 */

function appendOwnerState(elementType, existingProps, ownerState) {
  if ((0,isHostComponent/* default */.Z)(elementType)) {
    return existingProps;
  }

  return (0,esm_extends/* default */.Z)({}, existingProps, {
    ownerState: (0,esm_extends/* default */.Z)({}, existingProps.ownerState, ownerState)
  });
}
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/Grow/Grow.js
var Grow = __webpack_require__(64522);
// EXTERNAL MODULE: ./node_modules/@mui/material/Popper/Popper.js + 53 modules
var Popper = __webpack_require__(36693);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEventCallback.js
var useEventCallback = __webpack_require__(10955);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useId.js
var useId = __webpack_require__(62152);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js
var useIsFocusVisible = __webpack_require__(96698);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useControlled.js
var useControlled = __webpack_require__(42583);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Tooltip/tooltipClasses.js

function getTooltipUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTooltip', slot);
}
var tooltipClasses = (0,generateUtilityClasses/* default */.Z)('MuiTooltip', ['popper', 'popperInteractive', 'popperArrow', 'popperClose', 'tooltip', 'tooltipArrow', 'touch', 'tooltipPlacementLeft', 'tooltipPlacementRight', 'tooltipPlacementTop', 'tooltipPlacementBottom', 'arrow']);
/* harmony default export */ var Tooltip_tooltipClasses = (tooltipClasses);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Tooltip/Tooltip.js


var _excluded = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "title", "TransitionComponent", "TransitionProps"];




















function round(value) {
  return Math.round(value * 1e5) / 1e5;
}

var useUtilityClasses = ownerState => {
  var {
    classes,
    disableInteractive,
    arrow,
    touch,
    placement
  } = ownerState;
  var slots = {
    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],
    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', "tooltipPlacement".concat((0,capitalize/* default */.Z)(placement.split('-')[0]))],
    arrow: ['arrow']
  };
  return (0,composeClasses/* default */.Z)(slots, getTooltipUtilityClass, classes);
};

var TooltipPopper = (0,styled/* default */.ZP)(Popper/* default */.Z, {
  name: 'MuiTooltip',
  slot: 'Popper',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.popper, !ownerState.disableInteractive && styles.popperInteractive, ownerState.arrow && styles.popperArrow, !ownerState.open && styles.popperClose];
  }
})(_ref2 => {
  var {
    theme,
    ownerState,
    open
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    zIndex: theme.zIndex.tooltip,
    pointerEvents: 'none'
  }, !ownerState.disableInteractive && {
    pointerEvents: 'auto'
  }, !open && {
    pointerEvents: 'none'
  }, ownerState.arrow && {
    ["&[data-popper-placement*=\"bottom\"] .".concat(Tooltip_tooltipClasses.arrow)]: {
      top: 0,
      marginTop: '-0.71em',
      '&::before': {
        transformOrigin: '0 100%'
      }
    },
    ["&[data-popper-placement*=\"top\"] .".concat(Tooltip_tooltipClasses.arrow)]: {
      bottom: 0,
      marginBottom: '-0.71em',
      '&::before': {
        transformOrigin: '100% 0'
      }
    },
    ["&[data-popper-placement*=\"right\"] .".concat(Tooltip_tooltipClasses.arrow)]: (0,esm_extends/* default */.Z)({}, !ownerState.isRtl ? {
      left: 0,
      marginLeft: '-0.71em'
    } : {
      right: 0,
      marginRight: '-0.71em'
    }, {
      height: '1em',
      width: '0.71em',
      '&::before': {
        transformOrigin: '100% 100%'
      }
    }),
    ["&[data-popper-placement*=\"left\"] .".concat(Tooltip_tooltipClasses.arrow)]: (0,esm_extends/* default */.Z)({}, !ownerState.isRtl ? {
      right: 0,
      marginRight: '-0.71em'
    } : {
      left: 0,
      marginLeft: '-0.71em'
    }, {
      height: '1em',
      width: '0.71em',
      '&::before': {
        transformOrigin: '0 0'
      }
    })
  });
});
var TooltipTooltip = (0,styled/* default */.ZP)('div', {
  name: 'MuiTooltip',
  slot: 'Tooltip',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.tooltip, ownerState.touch && styles.touch, ownerState.arrow && styles.tooltipArrow, styles["tooltipPlacement".concat((0,capitalize/* default */.Z)(ownerState.placement.split('-')[0]))]];
  }
})(_ref3 => {
  var {
    theme,
    ownerState
  } = _ref3;
  return (0,esm_extends/* default */.Z)({
    backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.grey[700], 0.92),
    borderRadius: theme.shape.borderRadius,
    color: theme.palette.common.white,
    fontFamily: theme.typography.fontFamily,
    padding: '4px 8px',
    fontSize: theme.typography.pxToRem(11),
    maxWidth: 300,
    margin: 2,
    wordWrap: 'break-word',
    fontWeight: theme.typography.fontWeightMedium
  }, ownerState.arrow && {
    position: 'relative',
    margin: 0
  }, ownerState.touch && {
    padding: '8px 16px',
    fontSize: theme.typography.pxToRem(14),
    lineHeight: "".concat(round(16 / 14), "em"),
    fontWeight: theme.typography.fontWeightRegular
  }, {
    [".".concat(Tooltip_tooltipClasses.popper, "[data-popper-placement*=\"left\"] &")]: (0,esm_extends/* default */.Z)({
      transformOrigin: 'right center'
    }, !ownerState.isRtl ? (0,esm_extends/* default */.Z)({
      marginRight: '14px'
    }, ownerState.touch && {
      marginRight: '24px'
    }) : (0,esm_extends/* default */.Z)({
      marginLeft: '14px'
    }, ownerState.touch && {
      marginLeft: '24px'
    })),
    [".".concat(Tooltip_tooltipClasses.popper, "[data-popper-placement*=\"right\"] &")]: (0,esm_extends/* default */.Z)({
      transformOrigin: 'left center'
    }, !ownerState.isRtl ? (0,esm_extends/* default */.Z)({
      marginLeft: '14px'
    }, ownerState.touch && {
      marginLeft: '24px'
    }) : (0,esm_extends/* default */.Z)({
      marginRight: '14px'
    }, ownerState.touch && {
      marginRight: '24px'
    })),
    [".".concat(Tooltip_tooltipClasses.popper, "[data-popper-placement*=\"top\"] &")]: (0,esm_extends/* default */.Z)({
      transformOrigin: 'center bottom',
      marginBottom: '14px'
    }, ownerState.touch && {
      marginBottom: '24px'
    }),
    [".".concat(Tooltip_tooltipClasses.popper, "[data-popper-placement*=\"bottom\"] &")]: (0,esm_extends/* default */.Z)({
      transformOrigin: 'center top',
      marginTop: '14px'
    }, ownerState.touch && {
      marginTop: '24px'
    })
  });
});
var TooltipArrow = (0,styled/* default */.ZP)('span', {
  name: 'MuiTooltip',
  slot: 'Arrow',
  overridesResolver: (props, styles) => styles.arrow
})(_ref4 => {
  var {
    theme
  } = _ref4;
  return {
    overflow: 'hidden',
    position: 'absolute',
    width: '1em',
    height: '0.71em'
    /* = width / sqrt(2) = (length of the hypotenuse) */
    ,
    boxSizing: 'border-box',
    color: (0,colorManipulator/* alpha */.Fq)(theme.palette.grey[700], 0.9),
    '&::before': {
      content: '""',
      margin: 'auto',
      display: 'block',
      width: '100%',
      height: '100%',
      backgroundColor: 'currentColor',
      transform: 'rotate(45deg)'
    }
  };
});
var hystersisOpen = false;
var hystersisTimer = null;
function testReset() {
  hystersisOpen = false;
  clearTimeout(hystersisTimer);
}

function composeEventHandler(handler, eventHandler) {
  return event => {
    if (eventHandler) {
      eventHandler(event);
    }

    handler(event);
  };
} // TODO v6: Remove PopperComponent, PopperProps, TransitionComponent and TransitionProps.


var Tooltip = /*#__PURE__*/react.forwardRef(function Tooltip(inProps, ref) {
  var _components$Popper, _ref, _components$Transitio, _components$Tooltip, _components$Arrow, _componentsProps$popp;

  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTooltip'
  });

  var {
    arrow = false,
    children,
    components = {},
    componentsProps = {},
    describeChild = false,
    disableFocusListener = false,
    disableHoverListener = false,
    disableInteractive: disableInteractiveProp = false,
    disableTouchListener = false,
    enterDelay = 100,
    enterNextDelay = 0,
    enterTouchDelay = 700,
    followCursor = false,
    id: idProp,
    leaveDelay = 0,
    leaveTouchDelay = 1500,
    onClose,
    onOpen,
    open: openProp,
    placement = 'bottom',
    PopperComponent: PopperComponentProp,
    PopperProps = {},
    title,
    TransitionComponent: TransitionComponentProp = Grow/* default */.Z,
    TransitionProps
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var theme = (0,useTheme/* default */.Z)();
  var isRtl = theme.direction === 'rtl';
  var [childNode, setChildNode] = react.useState();
  var [arrowRef, setArrowRef] = react.useState(null);
  var ignoreNonTouchEvents = react.useRef(false);
  var disableInteractive = disableInteractiveProp || followCursor;
  var closeTimer = react.useRef();
  var enterTimer = react.useRef();
  var leaveTimer = react.useRef();
  var touchTimer = react.useRef();
  var [openState, setOpenState] = (0,useControlled/* default */.Z)({
    controlled: openProp,
    default: false,
    name: 'Tooltip',
    state: 'open'
  });
  var open = openState;

  if (false) { var isControlled; }

  var id = (0,useId/* default */.Z)(idProp);
  var prevUserSelect = react.useRef();
  var stopTouchInteraction = react.useCallback(() => {
    if (prevUserSelect.current !== undefined) {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      prevUserSelect.current = undefined;
    }

    clearTimeout(touchTimer.current);
  }, []);
  react.useEffect(() => {
    return () => {
      clearTimeout(closeTimer.current);
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      stopTouchInteraction();
    };
  }, [stopTouchInteraction]);

  var handleOpen = event => {
    clearTimeout(hystersisTimer);
    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.
    // We can skip rerendering when the tooltip is already open.
    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.

    setOpenState(true);

    if (onOpen && !open) {
      onOpen(event);
    }
  };

  var handleClose = (0,useEventCallback/* default */.Z)(
  /**
   * @param {React.SyntheticEvent | Event} event
   */
  event => {
    clearTimeout(hystersisTimer);
    hystersisTimer = setTimeout(() => {
      hystersisOpen = false;
    }, 800 + leaveDelay);
    setOpenState(false);

    if (onClose && open) {
      onClose(event);
    }

    clearTimeout(closeTimer.current);
    closeTimer.current = setTimeout(() => {
      ignoreNonTouchEvents.current = false;
    }, theme.transitions.duration.shortest);
  });

  var handleEnter = event => {
    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {
      return;
    } // Remove the title ahead of time.
    // We don't want to wait for the next render commit.
    // We would risk displaying two tooltips at the same time (native + this one).


    if (childNode) {
      childNode.removeAttribute('title');
    }

    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);

    if (enterDelay || hystersisOpen && enterNextDelay) {
      enterTimer.current = setTimeout(() => {
        handleOpen(event);
      }, hystersisOpen ? enterNextDelay : enterDelay);
    } else {
      handleOpen(event);
    }
  };

  var handleLeave = event => {
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveDelay);
  };

  var {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = (0,useIsFocusVisible/* default */.Z)(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).
  // We just need to re-render the Tooltip if the focus-visible state changes.

  var [, setChildIsFocusVisible] = react.useState(false);

  var handleBlur = event => {
    handleBlurVisible(event);

    if (isFocusVisibleRef.current === false) {
      setChildIsFocusVisible(false);
      handleLeave(event);
    }
  };

  var handleFocus = event => {
    // Workaround for https://github.com/facebook/react/issues/7769
    // The autoFocus of React might trigger the event before the componentDidMount.
    // We need to account for this eventuality.
    if (!childNode) {
      setChildNode(event.currentTarget);
    }

    handleFocusVisible(event);

    if (isFocusVisibleRef.current === true) {
      setChildIsFocusVisible(true);
      handleEnter(event);
    }
  };

  var detectTouchStart = event => {
    ignoreNonTouchEvents.current = true;
    var childrenProps = children.props;

    if (childrenProps.onTouchStart) {
      childrenProps.onTouchStart(event);
    }
  };

  var handleMouseOver = handleEnter;
  var handleMouseLeave = handleLeave;

  var handleTouchStart = event => {
    detectTouchStart(event);
    clearTimeout(leaveTimer.current);
    clearTimeout(closeTimer.current);
    stopTouchInteraction();
    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.

    document.body.style.WebkitUserSelect = 'none';
    touchTimer.current = setTimeout(() => {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      handleEnter(event);
    }, enterTouchDelay);
  };

  var handleTouchEnd = event => {
    if (children.props.onTouchEnd) {
      children.props.onTouchEnd(event);
    }

    stopTouchInteraction();
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveTouchDelay);
  };

  react.useEffect(() => {
    if (!open) {
      return undefined;
    }
    /**
     * @param {KeyboardEvent} nativeEvent
     */


    function handleKeyDown(nativeEvent) {
      // IE11, Edge (prior to using Bink?) use 'Esc'
      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {
        handleClose(nativeEvent);
      }
    }

    document.addEventListener('keydown', handleKeyDown);
    return () => {
      document.removeEventListener('keydown', handleKeyDown);
    };
  }, [handleClose, open]);
  var handleUseRef = (0,useForkRef/* default */.Z)(setChildNode, ref);
  var handleFocusRef = (0,useForkRef/* default */.Z)(focusVisibleRef, handleUseRef);
  var handleRef = (0,useForkRef/* default */.Z)(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.

  if (title === '') {
    open = false;
  }

  var positionRef = react.useRef({
    x: 0,
    y: 0
  });
  var popperRef = react.useRef();

  var handleMouseMove = event => {
    var childrenProps = children.props;

    if (childrenProps.onMouseMove) {
      childrenProps.onMouseMove(event);
    }

    positionRef.current = {
      x: event.clientX,
      y: event.clientY
    };

    if (popperRef.current) {
      popperRef.current.update();
    }
  };

  var nameOrDescProps = {};
  var titleIsString = typeof title === 'string';

  if (describeChild) {
    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;
    nameOrDescProps['aria-describedby'] = open ? id : null;
  } else {
    nameOrDescProps['aria-label'] = titleIsString ? title : null;
    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;
  }

  var childrenProps = (0,esm_extends/* default */.Z)({}, nameOrDescProps, other, children.props, {
    className: (0,clsx_m["default"])(other.className, children.props.className),
    onTouchStart: detectTouchStart,
    ref: handleRef
  }, followCursor ? {
    onMouseMove: handleMouseMove
  } : {});

  if (false) {}

  var interactiveWrapperListeners = {};

  if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
  }

  if (!disableHoverListener) {
    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);
    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);

    if (!disableInteractive) {
      interactiveWrapperListeners.onMouseOver = handleMouseOver;
      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;
    }
  }

  if (!disableFocusListener) {
    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);
    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);

    if (!disableInteractive) {
      interactiveWrapperListeners.onFocus = handleFocus;
      interactiveWrapperListeners.onBlur = handleBlur;
    }
  }

  if (false) {}

  var popperOptions = react.useMemo(() => {
    var _PopperProps$popperOp;

    var tooltipModifiers = [{
      name: 'arrow',
      enabled: Boolean(arrowRef),
      options: {
        element: arrowRef,
        padding: 4
      }
    }];

    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {
      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);
    }

    return (0,esm_extends/* default */.Z)({}, PopperProps.popperOptions, {
      modifiers: tooltipModifiers
    });
  }, [arrowRef, PopperProps]);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    isRtl,
    arrow,
    disableInteractive,
    placement,
    PopperComponentProp,
    touch: ignoreNonTouchEvents.current
  });

  var classes = useUtilityClasses(ownerState);
  var PopperComponent = (_components$Popper = components.Popper) != null ? _components$Popper : TooltipPopper;
  var TransitionComponent = (_ref = (_components$Transitio = components.Transition) != null ? _components$Transitio : TransitionComponentProp) != null ? _ref : Grow/* default */.Z;
  var TooltipComponent = (_components$Tooltip = components.Tooltip) != null ? _components$Tooltip : TooltipTooltip;
  var ArrowComponent = (_components$Arrow = components.Arrow) != null ? _components$Arrow : TooltipArrow;
  var popperProps = appendOwnerState(PopperComponent, (0,esm_extends/* default */.Z)({}, PopperProps, componentsProps.popper), ownerState);
  var transitionProps = appendOwnerState(TransitionComponent, (0,esm_extends/* default */.Z)({}, TransitionProps, componentsProps.transition), ownerState);
  var tooltipProps = appendOwnerState(TooltipComponent, (0,esm_extends/* default */.Z)({}, componentsProps.tooltip), ownerState);
  var tooltipArrowProps = appendOwnerState(ArrowComponent, (0,esm_extends/* default */.Z)({}, componentsProps.arrow), ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment, {
    children: [/*#__PURE__*/react.cloneElement(children, childrenProps), /*#__PURE__*/(0,jsx_runtime.jsx)(PopperComponent, (0,esm_extends/* default */.Z)({
      as: PopperComponentProp != null ? PopperComponentProp : Popper/* default */.Z,
      placement: placement,
      anchorEl: followCursor ? {
        getBoundingClientRect: () => ({
          top: positionRef.current.y,
          left: positionRef.current.x,
          right: positionRef.current.x,
          bottom: positionRef.current.y,
          width: 0,
          height: 0
        })
      } : childNode,
      popperRef: popperRef,
      open: childNode ? open : false,
      id: id,
      transition: true
    }, interactiveWrapperListeners, popperProps, {
      className: (0,clsx_m["default"])(classes.popper, PopperProps == null ? void 0 : PopperProps.className, (_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className),
      popperOptions: popperOptions,
      children: _ref5 => {
        var {
          TransitionProps: TransitionPropsInner
        } = _ref5;

        var _componentsProps$tool, _componentsProps$arro;

        return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
          timeout: theme.transitions.duration.shorter
        }, TransitionPropsInner, transitionProps, {
          children: /*#__PURE__*/(0,jsx_runtime.jsxs)(TooltipComponent, (0,esm_extends/* default */.Z)({}, tooltipProps, {
            className: (0,clsx_m["default"])(classes.tooltip, (_componentsProps$tool = componentsProps.tooltip) == null ? void 0 : _componentsProps$tool.className),
            children: [title, arrow ? /*#__PURE__*/(0,jsx_runtime.jsx)(ArrowComponent, (0,esm_extends/* default */.Z)({}, tooltipArrowProps, {
              className: (0,clsx_m["default"])(classes.arrow, (_componentsProps$arro = componentsProps.arrow) == null ? void 0 : _componentsProps$arro.className),
              ref: setArrowRef
            })) : null]
          }))
        }));
      }
    }))]
  });
});
 false ? 0 : void 0;
/* harmony default export */ var Tooltip_Tooltip = (Tooltip);

/***/ }),

/***/ 49308:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Typography_Typography; }
});

// UNUSED EXPORTS: TypographyRoot

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js
var extendSxProp = __webpack_require__(18297);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Typography/typographyClasses.js

function getTypographyUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiTypography', slot);
}
var typographyClasses = (0,generateUtilityClasses/* default */.Z)('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);
/* harmony default export */ var Typography_typographyClasses = ((/* unused pure expression or super */ null && (typographyClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Typography/Typography.js


var _excluded = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];










var useUtilityClasses = ownerState => {
  var {
    align,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    classes
  } = ownerState;
  var slots = {
    root: ['root', variant, ownerState.align !== 'inherit' && "align".concat((0,capitalize/* default */.Z)(align)), gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']
  };
  return (0,composeClasses/* default */.Z)(slots, getTypographyUtilityClass, classes);
};

var TypographyRoot = (0,styled/* default */.ZP)('span', {
  name: 'MuiTypography',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles["align".concat((0,capitalize/* default */.Z)(ownerState.align))], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    margin: 0
  }, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {
    textAlign: ownerState.align
  }, ownerState.noWrap && {
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
  }, ownerState.gutterBottom && {
    marginBottom: '0.35em'
  }, ownerState.paragraph && {
    marginBottom: 16
  });
});
var defaultVariantMapping = {
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  subtitle1: 'h6',
  subtitle2: 'h6',
  body1: 'p',
  body2: 'p',
  inherit: 'p'
}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6

var colorTransformations = {
  primary: 'primary.main',
  textPrimary: 'text.primary',
  secondary: 'secondary.main',
  textSecondary: 'text.secondary',
  error: 'error.main'
};

var transformDeprecatedColors = color => {
  return colorTransformations[color] || color;
};

var Typography = /*#__PURE__*/react.forwardRef(function Typography(inProps, ref) {
  var themeProps = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiTypography'
  });
  var color = transformDeprecatedColors(themeProps.color);
  var props = (0,extendSxProp/* default */.Z)((0,esm_extends/* default */.Z)({}, themeProps, {
    color
  }));

  var {
    align = 'inherit',
    className,
    component,
    gutterBottom = false,
    noWrap = false,
    paragraph = false,
    variant = 'body1',
    variantMapping = defaultVariantMapping
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    align,
    color,
    className,
    component,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    variantMapping
  });

  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(TypographyRoot, (0,esm_extends/* default */.Z)({
    as: Component,
    ref: ref,
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className)
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Typography_Typography = (Typography);

/***/ }),

/***/ 18440:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ internal_SwitchBase; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useControlled.js
var useControlled = __webpack_require__(42583);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/useFormControl.js
var useFormControl = __webpack_require__(8230);
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/switchBaseClasses.js

function getSwitchBaseUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('PrivateSwitchBase', slot);
}
var switchBaseClasses = (0,generateUtilityClasses/* default */.Z)('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);
/* harmony default export */ var internal_switchBaseClasses = ((/* unused pure expression or super */ null && (switchBaseClasses)));
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/SwitchBase.js


var _excluded = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"];














var useUtilityClasses = ownerState => {
  var {
    classes,
    checked,
    disabled,
    edge
  } = ownerState;
  var slots = {
    root: ['root', checked && 'checked', disabled && 'disabled', edge && "edge".concat((0,capitalize/* default */.Z)(edge))],
    input: ['input']
  };
  return (0,composeClasses/* default */.Z)(slots, getSwitchBaseUtilityClass, classes);
};

var SwitchBaseRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  skipSx: true
})(_ref => {
  var {
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    padding: 9,
    borderRadius: '50%'
  }, ownerState.edge === 'start' && {
    marginLeft: ownerState.size === 'small' ? -3 : -12
  }, ownerState.edge === 'end' && {
    marginRight: ownerState.size === 'small' ? -3 : -12
  });
});
var SwitchBaseInput = (0,styled/* default */.ZP)('input', {
  skipSx: true
})({
  cursor: 'inherit',
  position: 'absolute',
  opacity: 0,
  width: '100%',
  height: '100%',
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
});
/**
 * @ignore - internal component.
 */

var SwitchBase = /*#__PURE__*/react.forwardRef(function SwitchBase(props, ref) {
  var {
    autoFocus,
    checked: checkedProp,
    checkedIcon,
    className,
    defaultChecked,
    disabled: disabledProp,
    disableFocusRipple = false,
    edge = false,
    icon,
    id,
    inputProps,
    inputRef,
    name,
    onBlur,
    onChange,
    onFocus,
    readOnly,
    required,
    tabIndex,
    type,
    value
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var [checked, setCheckedState] = (0,useControlled/* default */.Z)({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: 'SwitchBase',
    state: 'checked'
  });
  var muiFormControl = (0,useFormControl/* default */.Z)();

  var handleFocus = event => {
    if (onFocus) {
      onFocus(event);
    }

    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    }
  };

  var handleBlur = event => {
    if (onBlur) {
      onBlur(event);
    }

    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    }
  };

  var handleInputChange = event => {
    // Workaround for https://github.com/facebook/react/issues/9023
    if (event.nativeEvent.defaultPrevented) {
      return;
    }

    var newChecked = event.target.checked;
    setCheckedState(newChecked);

    if (onChange) {
      // TODO v6: remove the second argument.
      onChange(event, newChecked);
    }
  };

  var disabled = disabledProp;

  if (muiFormControl) {
    if (typeof disabled === 'undefined') {
      disabled = muiFormControl.disabled;
    }
  }

  var hasLabelFor = type === 'checkbox' || type === 'radio';

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    checked,
    disabled,
    disableFocusRipple,
    edge
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(SwitchBaseRoot, (0,esm_extends/* default */.Z)({
    component: "span",
    className: (0,clsx_m["default"])(classes.root, className),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled: disabled,
    tabIndex: null,
    role: undefined,
    onFocus: handleFocus,
    onBlur: handleBlur,
    ownerState: ownerState,
    ref: ref
  }, other, {
    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(SwitchBaseInput, (0,esm_extends/* default */.Z)({
      autoFocus: autoFocus,
      checked: checkedProp,
      defaultChecked: defaultChecked,
      className: classes.input,
      disabled: disabled,
      id: hasLabelFor && id,
      name: name,
      onChange: handleInputChange,
      readOnly: readOnly,
      ref: inputRef,
      required: required,
      ownerState: ownerState,
      tabIndex: tabIndex,
      type: type
    }, type === 'checkbox' && value === undefined ? {} : {
      value
    }, inputProps)), checked ? checkedIcon : icon]
  }));
}); // NB: If changed, please update Checkbox, Switch and Radio
// so that the API documentation is updated.

 false ? 0 : void 0;
/* harmony default export */ var internal_SwitchBase = (SwitchBase);

/***/ }),

/***/ 89275:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25833);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


/**
 * @ignore - internal component.
 */


/* harmony default export */ __webpack_exports__["Z"] = ((0,_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
  d: "M7 10l5 5 5-5z"
}), 'ArrowDropDown'));

/***/ }),

/***/ 47402:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25833);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);


/**
 * @ignore - internal component.
 *
 * Alias to `Clear`.
 */


/* harmony default export */ __webpack_exports__["Z"] = ((0,_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), 'Close'));

/***/ }),

/***/ 78790:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ styles_createTheme; }
});

// UNUSED EXPORTS: createMuiTheme

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js
var deepmerge = __webpack_require__(26486);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules
var createTheme = __webpack_require__(53409);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createMixins.js

function createMixins(breakpoints, spacing, mixins) {
  return (0,esm_extends/* default */.Z)({
    toolbar: {
      minHeight: 56,
      ["".concat(breakpoints.up('xs'), " and (orientation: landscape)")]: {
        minHeight: 48
      },
      [breakpoints.up('sm')]: {
        minHeight: 64
      }
    }
  }, mixins);
}
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/formatMuiErrorMessage.js
var formatMuiErrorMessage = __webpack_require__(93864);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/common.js
var common = {
  black: '#000',
  white: '#fff'
};
/* harmony default export */ var colors_common = (common);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/grey.js
var grey = {
  50: '#fafafa',
  100: '#f5f5f5',
  200: '#eeeeee',
  300: '#e0e0e0',
  400: '#bdbdbd',
  500: '#9e9e9e',
  600: '#757575',
  700: '#616161',
  800: '#424242',
  900: '#212121',
  A100: '#f5f5f5',
  A200: '#eeeeee',
  A400: '#bdbdbd',
  A700: '#616161'
};
/* harmony default export */ var colors_grey = (grey);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/purple.js
var purple = {
  50: '#f3e5f5',
  100: '#e1bee7',
  200: '#ce93d8',
  300: '#ba68c8',
  400: '#ab47bc',
  500: '#9c27b0',
  600: '#8e24aa',
  700: '#7b1fa2',
  800: '#6a1b9a',
  900: '#4a148c',
  A100: '#ea80fc',
  A200: '#e040fb',
  A400: '#d500f9',
  A700: '#aa00ff'
};
/* harmony default export */ var colors_purple = (purple);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/red.js
var red = {
  50: '#ffebee',
  100: '#ffcdd2',
  200: '#ef9a9a',
  300: '#e57373',
  400: '#ef5350',
  500: '#f44336',
  600: '#e53935',
  700: '#d32f2f',
  800: '#c62828',
  900: '#b71c1c',
  A100: '#ff8a80',
  A200: '#ff5252',
  A400: '#ff1744',
  A700: '#d50000'
};
/* harmony default export */ var colors_red = (red);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/orange.js
var orange = {
  50: '#fff3e0',
  100: '#ffe0b2',
  200: '#ffcc80',
  300: '#ffb74d',
  400: '#ffa726',
  500: '#ff9800',
  600: '#fb8c00',
  700: '#f57c00',
  800: '#ef6c00',
  900: '#e65100',
  A100: '#ffd180',
  A200: '#ffab40',
  A400: '#ff9100',
  A700: '#ff6d00'
};
/* harmony default export */ var colors_orange = (orange);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/blue.js
var blue = {
  50: '#e3f2fd',
  100: '#bbdefb',
  200: '#90caf9',
  300: '#64b5f6',
  400: '#42a5f5',
  500: '#2196f3',
  600: '#1e88e5',
  700: '#1976d2',
  800: '#1565c0',
  900: '#0d47a1',
  A100: '#82b1ff',
  A200: '#448aff',
  A400: '#2979ff',
  A700: '#2962ff'
};
/* harmony default export */ var colors_blue = (blue);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/lightBlue.js
var lightBlue = {
  50: '#e1f5fe',
  100: '#b3e5fc',
  200: '#81d4fa',
  300: '#4fc3f7',
  400: '#29b6f6',
  500: '#03a9f4',
  600: '#039be5',
  700: '#0288d1',
  800: '#0277bd',
  900: '#01579b',
  A100: '#80d8ff',
  A200: '#40c4ff',
  A400: '#00b0ff',
  A700: '#0091ea'
};
/* harmony default export */ var colors_lightBlue = (lightBlue);
;// CONCATENATED MODULE: ./node_modules/@mui/material/colors/green.js
var green = {
  50: '#e8f5e9',
  100: '#c8e6c9',
  200: '#a5d6a7',
  300: '#81c784',
  400: '#66bb6a',
  500: '#4caf50',
  600: '#43a047',
  700: '#388e3c',
  800: '#2e7d32',
  900: '#1b5e20',
  A100: '#b9f6ca',
  A200: '#69f0ae',
  A400: '#00e676',
  A700: '#00c853'
};
/* harmony default export */ var colors_green = (green);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createPalette.js



var _excluded = ["mode", "contrastThreshold", "tonalOffset"];










var light = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: 'rgba(0, 0, 0, 0.87)',
    // Secondary text.
    secondary: 'rgba(0, 0, 0, 0.6)',
    // Disabled text have even lower visual prominence.
    disabled: 'rgba(0, 0, 0, 0.38)'
  },
  // The color used to divide different elements.
  divider: 'rgba(0, 0, 0, 0.12)',
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: colors_common.white,
    default: colors_common.white
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: 'rgba(0, 0, 0, 0.54)',
    // The color of an hovered action.
    hover: 'rgba(0, 0, 0, 0.04)',
    hoverOpacity: 0.04,
    // The color of a selected action.
    selected: 'rgba(0, 0, 0, 0.08)',
    selectedOpacity: 0.08,
    // The color of a disabled action.
    disabled: 'rgba(0, 0, 0, 0.26)',
    // The background color of a disabled action.
    disabledBackground: 'rgba(0, 0, 0, 0.12)',
    disabledOpacity: 0.38,
    focus: 'rgba(0, 0, 0, 0.12)',
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
var dark = {
  text: {
    primary: colors_common.white,
    secondary: 'rgba(255, 255, 255, 0.7)',
    disabled: 'rgba(255, 255, 255, 0.5)',
    icon: 'rgba(255, 255, 255, 0.5)'
  },
  divider: 'rgba(255, 255, 255, 0.12)',
  background: {
    paper: '#121212',
    default: '#121212'
  },
  action: {
    active: colors_common.white,
    hover: 'rgba(255, 255, 255, 0.08)',
    hoverOpacity: 0.08,
    selected: 'rgba(255, 255, 255, 0.16)',
    selectedOpacity: 0.16,
    disabled: 'rgba(255, 255, 255, 0.3)',
    disabledBackground: 'rgba(255, 255, 255, 0.12)',
    disabledOpacity: 0.38,
    focus: 'rgba(255, 255, 255, 0.12)',
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};

function addLightOrDark(intent, direction, shade, tonalOffset) {
  var tonalOffsetLight = tonalOffset.light || tonalOffset;
  var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;

  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === 'light') {
      intent.light = (0,colorManipulator/* lighten */.$n)(intent.main, tonalOffsetLight);
    } else if (direction === 'dark') {
      intent.dark = (0,colorManipulator/* darken */._j)(intent.main, tonalOffsetDark);
    }
  }
}

function getDefaultPrimary() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

  if (mode === 'dark') {
    return {
      main: colors_blue[200],
      light: colors_blue[50],
      dark: colors_blue[400]
    };
  }

  return {
    main: colors_blue[700],
    light: colors_blue[400],
    dark: colors_blue[800]
  };
}

function getDefaultSecondary() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

  if (mode === 'dark') {
    return {
      main: colors_purple[200],
      light: colors_purple[50],
      dark: colors_purple[400]
    };
  }

  return {
    main: colors_purple[500],
    light: colors_purple[300],
    dark: colors_purple[700]
  };
}

function getDefaultError() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

  if (mode === 'dark') {
    return {
      main: colors_red[500],
      light: colors_red[300],
      dark: colors_red[700]
    };
  }

  return {
    main: colors_red[700],
    light: colors_red[400],
    dark: colors_red[800]
  };
}

function getDefaultInfo() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

  if (mode === 'dark') {
    return {
      main: colors_lightBlue[400],
      light: colors_lightBlue[300],
      dark: colors_lightBlue[700]
    };
  }

  return {
    main: colors_lightBlue[700],
    light: colors_lightBlue[500],
    dark: colors_lightBlue[900]
  };
}

function getDefaultSuccess() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

  if (mode === 'dark') {
    return {
      main: colors_green[400],
      light: colors_green[300],
      dark: colors_green[700]
    };
  }

  return {
    main: colors_green[800],
    light: colors_green[500],
    dark: colors_green[900]
  };
}

function getDefaultWarning() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

  if (mode === 'dark') {
    return {
      main: colors_orange[400],
      light: colors_orange[300],
      dark: colors_orange[700]
    };
  }

  return {
    main: '#ed6c02',
    // closest to orange[800] that pass 3:1.
    light: colors_orange[500],
    dark: colors_orange[900]
  };
}

function createPalette(palette) {
  var {
    mode = 'light',
    contrastThreshold = 3,
    tonalOffset = 0.2
  } = palette,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(palette, _excluded);

  var primary = palette.primary || getDefaultPrimary(mode);
  var secondary = palette.secondary || getDefaultSecondary(mode);
  var error = palette.error || getDefaultError(mode);
  var info = palette.info || getDefaultInfo(mode);
  var success = palette.success || getDefaultSuccess(mode);
  var warning = palette.warning || getDefaultWarning(mode); // Use the same logic as
  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

  function getContrastText(background) {
    var contrastText = (0,colorManipulator/* getContrastRatio */.mi)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;

    if (false) { var contrast; }

    return contrastText;
  }

  var augmentColor = _ref => {
    var {
      color,
      name,
      mainShade = 500,
      lightShade = 300,
      darkShade = 700
    } = _ref;
    color = (0,esm_extends/* default */.Z)({}, color);

    if (!color.main && color[mainShade]) {
      color.main = color[mainShade];
    }

    if (!color.hasOwnProperty('main')) {
      throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(11, name ? " (".concat(name, ")") : '', mainShade));
    }

    if (typeof color.main !== 'string') {
      throw new Error( false ? 0 : (0,formatMuiErrorMessage/* default */.Z)(12, name ? " (".concat(name, ")") : '', JSON.stringify(color.main)));
    }

    addLightOrDark(color, 'light', lightShade, tonalOffset);
    addLightOrDark(color, 'dark', darkShade, tonalOffset);

    if (!color.contrastText) {
      color.contrastText = getContrastText(color.main);
    }

    return color;
  };

  var modes = {
    dark,
    light
  };

  if (false) {}

  var paletteOutput = (0,deepmerge/* default */.Z)((0,esm_extends/* default */.Z)({
    // A collection of common colors.
    common: colors_common,
    // The palette mode, can be light or dark.
    mode,
    // The colors used to represent primary interface elements for a user.
    primary: augmentColor({
      color: primary,
      name: 'primary'
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: augmentColor({
      color: secondary,
      name: 'secondary',
      mainShade: 'A400',
      lightShade: 'A200',
      darkShade: 'A700'
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: augmentColor({
      color: error,
      name: 'error'
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: augmentColor({
      color: warning,
      name: 'warning'
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: augmentColor({
      color: info,
      name: 'info'
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: augmentColor({
      color: success,
      name: 'success'
    }),
    // The grey colors.
    grey: colors_grey,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText,
    // Generate a rich color object.
    augmentColor,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset
  }, modes[mode]), other);
  return paletteOutput;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTypography.js


var createTypography_excluded = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];


function round(value) {
  return Math.round(value * 1e5) / 1e5;
}

var caseAllCaps = {
  textTransform: 'uppercase'
};
var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
/**
 * @see @link{https://material.io/design/typography/the-type-system.html}
 * @see @link{https://material.io/design/typography/understanding-typography.html}
 */

function createTypography(palette, typography) {
  var _ref = typeof typography === 'function' ? typography(palette) : typography,
      {
    fontFamily = defaultFontFamily,
    // The default font size of the Material Specification.
    fontSize = 14,
    // px
    fontWeightLight = 300,
    fontWeightRegular = 400,
    fontWeightMedium = 500,
    fontWeightBold = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize = 16,
    // Apply the CSS properties to all the variants.
    allVariants,
    pxToRem: pxToRem2
  } = _ref,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, createTypography_excluded);

  if (false) {}

  var coef = fontSize / 14;

  var pxToRem = pxToRem2 || (size => "".concat(size / htmlFontSize * coef, "rem"));

  var buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => (0,esm_extends/* default */.Z)({
    fontFamily,
    fontWeight,
    fontSize: pxToRem(size),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight
  }, fontFamily === defaultFontFamily ? {
    letterSpacing: "".concat(round(letterSpacing / size), "em")
  } : {}, casing, allVariants);

  var variants = {
    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
  };
  return (0,deepmerge/* default */.Z)((0,esm_extends/* default */.Z)({
    htmlFontSize,
    pxToRem,
    fontFamily,
    fontSize,
    fontWeightLight,
    fontWeightRegular,
    fontWeightMedium,
    fontWeightBold
  }, variants), other, {
    clone: false // No need to clone deep

  });
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/shadows.js
var shadowKeyUmbraOpacity = 0.2;
var shadowKeyPenumbraOpacity = 0.14;
var shadowAmbientShadowOpacity = 0.12;

function createShadow() {
  return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0,0,0,").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0,0,0,").concat(shadowAmbientShadowOpacity, ")")].join(',');
} // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss


var shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
/* harmony default export */ var styles_shadows = (shadows);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTransitions.js
var createTransitions = __webpack_require__(34584);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/zIndex.js
// We need to centralize the zIndex definitions as they work
// like global values in the browser.
var zIndex = {
  mobileStepper: 1000,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
/* harmony default export */ var styles_zIndex = (zIndex);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/createTheme.js


var createTheme_excluded = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];










function createTheme_createTheme() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var {
    mixins: mixinsInput = {},
    palette: paletteInput = {},
    transitions: transitionsInput = {},
    typography: typographyInput = {}
  } = options,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);

  var palette = createPalette(paletteInput);
  var systemTheme = (0,createTheme/* default */.Z)(options);
  var muiTheme = (0,deepmerge/* default */.Z)(systemTheme, {
    mixins: createMixins(systemTheme.breakpoints, systemTheme.spacing, mixinsInput),
    palette,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: styles_shadows.slice(),
    typography: createTypography(palette, typographyInput),
    transitions: (0,createTransitions/* default */.ZP)(transitionsInput),
    zIndex: (0,esm_extends/* default */.Z)({}, styles_zIndex)
  });
  muiTheme = (0,deepmerge/* default */.Z)(muiTheme, other);

  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  muiTheme = args.reduce((acc, argument) => (0,deepmerge/* default */.Z)(acc, argument), muiTheme);

  if (false) { var traverse, stateClasses; }

  return muiTheme;
}

var warnedOnce = false;
function createMuiTheme() {
  if (false) {}

  return createTheme_createTheme(...arguments);
}
/* harmony default export */ var styles_createTheme = (createTheme_createTheme);

/***/ }),

/***/ 34584:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ui": function() { return /* binding */ easing; },
/* harmony export */   "x9": function() { return /* binding */ duration; },
/* harmony export */   "ZP": function() { return /* binding */ createTransitions; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63366);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87462);


var _excluded = ["duration", "easing", "delay"]; // Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
// to learn the context in which each easing should be used.

var easing = {
  // This is the most common easing curve.
  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
// to learn when use what timing

var duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};

function formatMs(milliseconds) {
  return "".concat(Math.round(milliseconds), "ms");
}

function getAutoHeightDuration(height) {
  if (!height) {
    return 0;
  }

  var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}

function createTransitions(inputTransitions) {
  var mergedEasing = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, easing, inputTransitions.easing);

  var mergedDuration = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, duration, inputTransitions.duration);

  var create = function create() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var {
      duration: durationOption = mergedDuration.standard,
      easing: easingOption = mergedEasing.easeInOut,
      delay = 0
    } = options,
        other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _excluded);

    if (false) { var isNumber, isString; }

    return (Array.isArray(props) ? props : [props]).map(animatedProp => "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay))).join(',');
  };

  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({
    getAutoHeightDuration,
    create
  }, inputTransitions, {
    easing: mergedEasing,
    duration: mergedDuration
  });
}

/***/ }),

/***/ 38549:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dA": function() { return /* binding */ isUnitless; },
/* harmony export */   "Wy": function() { return /* binding */ getUnit; },
/* harmony export */   "YL": function() { return /* binding */ toUnitless; },
/* harmony export */   "vs": function() { return /* binding */ convertLength; },
/* harmony export */   "LV": function() { return /* binding */ alignProperty; },
/* harmony export */   "vY": function() { return /* binding */ fontGrid; },
/* harmony export */   "ze": function() { return /* binding */ responsiveProperty; }
/* harmony export */ });
function isUnitless(value) {
  return String(parseFloat(value)).length === String(value).length;
} // Ported from Compass
// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss
// Emulate the sass function "unit"

function getUnit(input) {
  return String(input).match(/[\d.\-+]*\s*(.*)/)[1] || '';
} // Emulate the sass function "unitless"

function toUnitless(length) {
  return parseFloat(length);
} // Convert any CSS <length> or <percentage> value to any another.
// From https://github.com/KyleAMathews/convert-css-length

function convertLength(baseFontSize) {
  return (length, toUnit) => {
    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.

    if (fromUnit === toUnit) {
      return length;
    } // Convert input length to pixels.


    var pxLength = toUnitless(length);

    if (fromUnit !== 'px') {
      if (fromUnit === 'em') {
        pxLength = toUnitless(length) * toUnitless(baseFontSize);
      } else if (fromUnit === 'rem') {
        pxLength = toUnitless(length) * toUnitless(baseFontSize);
      }
    } // Convert length in pixels to the output unit


    var outputLength = pxLength;

    if (toUnit !== 'px') {
      if (toUnit === 'em') {
        outputLength = pxLength / toUnitless(baseFontSize);
      } else if (toUnit === 'rem') {
        outputLength = pxLength / toUnitless(baseFontSize);
      } else {
        return length;
      }
    }

    return parseFloat(outputLength.toFixed(5)) + toUnit;
  };
}
function alignProperty(_ref) {
  var {
    size,
    grid
  } = _ref;
  var sizeBelow = size - size % grid;
  var sizeAbove = sizeBelow + grid;
  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;
} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the
// lineHeight falls under a x pixels grid, 4px in the case of Material Design,
// without changing the relative line height

function fontGrid(_ref2) {
  var {
    lineHeight,
    pixels,
    htmlFontSize
  } = _ref2;
  return pixels / (lineHeight * htmlFontSize);
}
/**
 * generate a responsive version of a given CSS property
 * @example
 * responsiveProperty({
 *   cssProperty: 'fontSize',
 *   min: 15,
 *   max: 20,
 *   unit: 'px',
 *   breakpoints: [300, 600],
 * })
 *
 * // this returns
 *
 * {
 *   fontSize: '15px',
 *   '@media (min-width:300px)': {
 *     fontSize: '17.5px',
 *   },
 *   '@media (min-width:600px)': {
 *     fontSize: '20px',
 *   },
 * }
 * @param {Object} params
 * @param {string} params.cssProperty - The CSS property to be made responsive
 * @param {number} params.min - The smallest value of the CSS property
 * @param {number} params.max - The largest value of the CSS property
 * @param {string} [params.unit] - The unit to be used for the CSS property
 * @param {Array.number} [params.breakpoints]  - An array of breakpoints
 * @param {number} [params.alignStep] - Round scaled value to fall under this grid
 * @returns {Object} responsive styles for {params.cssProperty}
 */

function responsiveProperty(_ref3) {
  var {
    cssProperty,
    min,
    max,
    unit = 'rem',
    breakpoints = [600, 900, 1200],
    transform = null
  } = _ref3;
  var output = {
    [cssProperty]: "".concat(min).concat(unit)
  };
  var factor = (max - min) / breakpoints[breakpoints.length - 1];
  breakpoints.forEach(breakpoint => {
    var value = min + factor * breakpoint;

    if (transform !== null) {
      value = transform(value);
    }

    output["@media (min-width:".concat(breakpoint, "px)")] = {
      [cssProperty]: "".concat(Math.round(value * 10000) / 10000).concat(unit)
    };
  });
  return output;
}

/***/ }),

/***/ 59552:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(78790);

var defaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
/* harmony default export */ __webpack_exports__["Z"] = (defaultTheme);

/***/ }),

/***/ 88887:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ responsiveFontSizes; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87462);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93864);
/* harmony import */ var _cssUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38549);



function responsiveFontSizes(themeInput) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var {
    breakpoints = ['sm', 'md', 'lg'],
    disableAlign = false,
    factor = 2,
    variants = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline']
  } = options;

  var theme = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, themeInput);

  theme.typography = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, theme.typography);
  var typography = theme.typography; // Convert between CSS lengths e.g. em->px or px->rem
  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).

  var convert = (0,_cssUtils__WEBPACK_IMPORTED_MODULE_1__/* .convertLength */ .vs)(typography.htmlFontSize);
  var breakpointValues = breakpoints.map(x => theme.breakpoints.values[x]);
  variants.forEach(variant => {
    var style = typography[variant];
    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));

    if (remFontSize <= 1) {
      return;
    }

    var maxFontSize = remFontSize;
    var minFontSize = 1 + (maxFontSize - 1) / factor;
    var {
      lineHeight
    } = style;

    if (!(0,_cssUtils__WEBPACK_IMPORTED_MODULE_1__/* .isUnitless */ .dA)(lineHeight) && !disableAlign) {
      throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(6));
    }

    if (!(0,_cssUtils__WEBPACK_IMPORTED_MODULE_1__/* .isUnitless */ .dA)(lineHeight)) {
      // make it unitless
      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);
    }

    var transform = null;

    if (!disableAlign) {
      transform = value => (0,_cssUtils__WEBPACK_IMPORTED_MODULE_1__/* .alignProperty */ .LV)({
        size: value,
        grid: (0,_cssUtils__WEBPACK_IMPORTED_MODULE_1__/* .fontGrid */ .vY)({
          pixels: 4,
          lineHeight,
          htmlFontSize: typography.htmlFontSize
        })
      });
    }

    typography[variant] = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, style, (0,_cssUtils__WEBPACK_IMPORTED_MODULE_1__/* .responsiveProperty */ .ze)({
      cssProperty: 'fontSize',
      min: minFontSize,
      max: maxFontSize,
      unit: 'rem',
      breakpoints: breakpointValues,
      transform
    }));
  });
  return theme;
}

/***/ }),

/***/ 98348:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ styles_styled; },
  "FO": function() { return /* binding */ rootShouldForwardProp; },
  "Dz": function() { return /* binding */ slotShouldForwardProp; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@mui/styled-engine/index.js + 4 modules
var styled_engine = __webpack_require__(38615);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules
var createTheme = __webpack_require__(53409);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js
var styleFunctionSx = __webpack_require__(12037);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/capitalize.js
var capitalize = __webpack_require__(6550);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/propsToClassKey.js

var _excluded = ["variant"];


function isEmpty(string) {
  return string.length === 0;
}
/**
 * Generates string classKey based on the properties provided. It starts with the
 * variant if defined, and then it appends all other properties in alphabetical order.
 * @param {object} props - the properties for which the classKey should be created.
 */


function propsToClassKey(props) {
  var {
    variant
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var classKey = variant || '';
  Object.keys(other).sort().forEach(key => {
    if (key === 'color') {
      classKey += isEmpty(classKey) ? props[key] : (0,capitalize/* default */.Z)(props[key]);
    } else {
      classKey += "".concat(isEmpty(classKey) ? key : (0,capitalize/* default */.Z)(key)).concat((0,capitalize/* default */.Z)(props[key].toString()));
    }
  });
  return classKey;
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createStyled.js


var createStyled_excluded = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"],
    _excluded2 = ["theme"],
    _excluded3 = ["theme"];






function createStyled_isEmpty(obj) {
  return Object.keys(obj).length === 0;
}

var getStyleOverrides = (name, theme) => {
  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {
    return theme.components[name].styleOverrides;
  }

  return null;
};

var getVariantStyles = (name, theme) => {
  var variants = [];

  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
    variants = theme.components[name].variants;
  }

  var variantsStyles = {};
  variants.forEach(definition => {
    var key = propsToClassKey(definition.props);
    variantsStyles[key] = definition.style;
  });
  return variantsStyles;
};

var variantsResolver = (props, styles, theme, name) => {
  var _theme$components, _theme$components$nam;

  var {
    ownerState = {}
  } = props;
  var variantsStyles = [];
  var themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;

  if (themeVariants) {
    themeVariants.forEach(themeVariant => {
      var isMatch = true;
      Object.keys(themeVariant.props).forEach(key => {
        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {
          isMatch = false;
        }
      });

      if (isMatch) {
        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);
      }
    });
  }

  return variantsStyles;
};

function shouldForwardProp(prop) {
  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
}
var systemDefaultTheme = (0,createTheme/* default */.Z)();

var lowercaseFirstLetter = string => {
  return string.charAt(0).toLowerCase() + string.slice(1);
};

function createStyled() {
  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var {
    defaultTheme = systemDefaultTheme,
    rootShouldForwardProp = shouldForwardProp,
    slotShouldForwardProp = shouldForwardProp
  } = input;
  return function (tag) {
    var inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var {
      name: componentName,
      slot: componentSlot,
      skipVariantsResolver: inputSkipVariantsResolver,
      skipSx: inputSkipSx,
      overridesResolver
    } = inputOptions,
        options = (0,objectWithoutPropertiesLoose/* default */.Z)(inputOptions, createStyled_excluded); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.


    var skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : componentSlot && componentSlot !== 'Root' || false;
    var skipSx = inputSkipSx || false;
    var label;

    if (false) {}

    var shouldForwardPropOption = shouldForwardProp;

    if (componentSlot === 'Root') {
      shouldForwardPropOption = rootShouldForwardProp;
    } else if (componentSlot) {
      // any other slot specified
      shouldForwardPropOption = slotShouldForwardProp;
    }

    var defaultStyledResolver = (0,styled_engine/* default */.ZP)(tag, (0,esm_extends/* default */.Z)({
      shouldForwardProp: shouldForwardPropOption,
      label
    }, options));

    var muiStyledResolver = function muiStyledResolver(styleArg) {
      for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        expressions[_key - 1] = arguments[_key];
      }

      var expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {
        // On the server emotion doesn't use React.forwardRef for creating components, so the created
        // component stays as a function. This condition makes sure that we do not interpolate functions
        // which are basically components used as a selectors.
        // eslint-disable-next-line no-underscore-dangle
        return typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg ? _ref => {
          var {
            theme: themeInput
          } = _ref,
              other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, _excluded2);

          return stylesArg((0,esm_extends/* default */.Z)({
            theme: createStyled_isEmpty(themeInput) ? defaultTheme : themeInput
          }, other));
        } : stylesArg;
      }) : [];
      var transformedStyleArg = styleArg;

      if (componentName && overridesResolver) {
        expressionsWithDefaultTheme.push(props => {
          var theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;
          var styleOverrides = getStyleOverrides(componentName, theme);

          if (styleOverrides) {
            return overridesResolver(props, styleOverrides);
          }

          return null;
        });
      }

      if (componentName && !skipVariantsResolver) {
        expressionsWithDefaultTheme.push(props => {
          var theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;
          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);
        });
      }

      if (!skipSx) {
        expressionsWithDefaultTheme.push(props => {
          var theme = createStyled_isEmpty(props.theme) ? defaultTheme : props.theme;
          return (0,styleFunctionSx/* default */.Z)((0,esm_extends/* default */.Z)({}, props, {
            theme
          }));
        });
      }

      var numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;

      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
        var placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.

        transformedStyleArg = [...styleArg, ...placeholders];
        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
      } else if (typeof styleArg === 'function') {
        // If the type is function, we need to define the default theme.
        transformedStyleArg = _ref2 => {
          var {
            theme: themeInput
          } = _ref2,
              other = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref2, _excluded3);

          return styleArg((0,esm_extends/* default */.Z)({
            theme: createStyled_isEmpty(themeInput) ? defaultTheme : themeInput
          }, other));
        };
      }

      var Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);

      if (false) { var displayName; }

      return Component;
    };

    return muiStyledResolver;
  };
}
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/defaultTheme.js
var defaultTheme = __webpack_require__(59552);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/styled.js


var rootShouldForwardProp = prop => shouldForwardProp(prop) && prop !== 'classes';
var slotShouldForwardProp = shouldForwardProp;
var styled = createStyled({
  defaultTheme: defaultTheme/* default */.Z,
  rootShouldForwardProp
});
/* harmony default export */ var styles_styled = (styled);

/***/ }),

/***/ 66449:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useTheme; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48377);
/* harmony import */ var _defaultTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59552);



function useTheme() {
  var theme = (0,_mui_system__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(_defaultTheme__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);

  if (false) {}

  return theme;
}

/***/ }),

/***/ 47761:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ useThemeProps_useThemeProps; }
});

// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useThemeProps/getThemeProps.js
var getThemeProps = __webpack_require__(94379);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useTheme.js
var useTheme = __webpack_require__(48377);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/useThemeProps/useThemeProps.js


function useThemeProps(_ref) {
  var {
    props,
    name,
    defaultTheme
  } = _ref;
  var theme = (0,useTheme/* default */.Z)(defaultTheme);
  var mergedProps = (0,getThemeProps/* default */.Z)({
    theme,
    name,
    props
  });
  return mergedProps;
}
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/defaultTheme.js
var defaultTheme = __webpack_require__(59552);
;// CONCATENATED MODULE: ./node_modules/@mui/material/styles/useThemeProps.js


function useThemeProps_useThemeProps(_ref) {
  var {
    props,
    name
  } = _ref;
  return useThemeProps({
    props,
    name,
    defaultTheme: defaultTheme/* default */.Z
  });
}

/***/ }),

/***/ 40615:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "n": function() { return /* binding */ reflow; },
/* harmony export */   "C": function() { return /* binding */ getTransitionProps; }
/* harmony export */ });
var reflow = node => node.scrollTop;
function getTransitionProps(props, options) {
  var _style$transitionDura, _style$transitionTimi;

  var {
    timeout,
    easing,
    style = {}
  } = props;
  return {
    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,
    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,
    delay: style.transitionDelay
  };
}

/***/ }),

/***/ 22840:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useMediaQuery; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2665);
/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94379);
/* harmony import */ var _utils_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94026);



/**
 * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.
 */

function useMediaQuery(queryInput) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var theme = (0,_mui_system__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(); // Wait for jsdom to support the match media feature.
  // All the browsers MUI support have this built-in.
  // This defensive check is here for simplicity.
  // Most of the time, the match media logic isn't central to people tests.

  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';
  var {
    defaultMatches = false,
    matchMedia = supportMatchMedia ? window.matchMedia : null,
    noSsr = false,
    ssrMatchMedia = null
  } = (0,_mui_system__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
    name: 'MuiUseMediaQuery',
    props: options,
    theme
  });

  if (false) {}

  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;
  query = query.replace(/^@media( ?)/m, '');
  var [match, setMatch] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => {
    if (noSsr && supportMatchMedia) {
      return matchMedia(query).matches;
    }

    if (ssrMatchMedia) {
      return ssrMatchMedia(query).matches;
    } // Once the component is mounted, we rely on the
    // event listeners to return the correct matches value.


    return defaultMatches;
  });
  (0,_utils_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(() => {
    var active = true;

    if (!supportMatchMedia) {
      return undefined;
    }

    var queryList = matchMedia(query);

    var updateMatch = () => {
      // Workaround Safari wrong implementation of matchMedia
      // TODO can we remove it?
      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677
      if (active) {
        setMatch(queryList.matches);
      }
    };

    updateMatch();
    queryList.addListener(updateMatch);
    return () => {
      active = false;
      queryList.removeListener(updateMatch);
    };
  }, [query, matchMedia, supportMatchMedia]);

  if (false) {}

  return match;
}

/***/ }),

/***/ 49240:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6550);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 95626:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80721);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 25833:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ createSvgIcon; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87462);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _SvgIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67648);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);



/**
 * Private module reserved for @mui packages.
 */


function createSvgIcon(path, displayName) {
  var Component = (props, ref) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_SvgIcon__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({
    "data-testid": "".concat(displayName, "Icon"),
    ref: ref
  }, props, {
    children: path
  }));

  if (false) {}

  Component.muiName = _SvgIcon__WEBPACK_IMPORTED_MODULE_2__/* ["default"].muiName */ .Z.muiName;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.memo( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(Component));
}

/***/ }),

/***/ 95152:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35176);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 22617:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "capitalize": function() { return /* reexport */ capitalize/* default */.Z; },
  "createChainedFunction": function() { return /* reexport */ createChainedFunction/* default */.Z; },
  "createSvgIcon": function() { return /* reexport */ createSvgIcon/* default */.Z; },
  "debounce": function() { return /* reexport */ debounce/* default */.Z; },
  "deprecatedPropType": function() { return /* reexport */ utils_deprecatedPropType; },
  "isMuiElement": function() { return /* reexport */ isMuiElement/* default */.Z; },
  "ownerDocument": function() { return /* reexport */ ownerDocument/* default */.Z; },
  "ownerWindow": function() { return /* reexport */ ownerWindow/* default */.Z; },
  "requirePropFactory": function() { return /* reexport */ utils_requirePropFactory; },
  "setRef": function() { return /* reexport */ utils_setRef; },
  "unstable_ClassNameGenerator": function() { return /* reexport */ ClassNameGenerator/* default */.Z; },
  "unstable_useEnhancedEffect": function() { return /* reexport */ useEnhancedEffect/* default */.Z; },
  "unstable_useId": function() { return /* reexport */ useId/* default */.Z; },
  "unsupportedProp": function() { return /* reexport */ utils_unsupportedProp; },
  "useControlled": function() { return /* reexport */ useControlled/* default */.Z; },
  "useEventCallback": function() { return /* reexport */ useEventCallback/* default */.Z; },
  "useForkRef": function() { return /* reexport */ useForkRef/* default */.Z; },
  "useIsFocusVisible": function() { return /* reexport */ useIsFocusVisible/* default */.Z; }
});

// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createChainedFunction.js
var createChainedFunction = __webpack_require__(95626);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js
var createSvgIcon = __webpack_require__(25833);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/debounce.js
var debounce = __webpack_require__(95152);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/deprecatedPropType.js
function deprecatedPropType(validator, reason) {
  if (true) {
    return () => null;
  }

  return (props, propName, componentName, location, propFullName) => {
    var componentNameSafe = componentName || '<<anonymous>>';
    var propFullNameSafe = propFullName || propName;

    if (typeof props[propName] !== 'undefined') {
      return new Error("The ".concat(location, " `").concat(propFullNameSafe, "` of ") + "`".concat(componentNameSafe, "` is deprecated. ").concat(reason));
    }

    return null;
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/deprecatedPropType.js

/* harmony default export */ var utils_deprecatedPropType = (deprecatedPropType);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/isMuiElement.js + 1 modules
var isMuiElement = __webpack_require__(63128);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerDocument.js
var ownerDocument = __webpack_require__(79072);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/ownerWindow.js
var ownerWindow = __webpack_require__(9217);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/requirePropFactory.js

function requirePropFactory(componentNameInError, Component) {
  if (true) {
    return () => null;
  } // eslint-disable-next-line react/forbid-foreign-prop-types


  var prevPropTypes = Component ? (0,esm_extends/* default */.Z)({}, Component.propTypes) : null;

  var requireProp = requiredProp => function (props, propName, componentName, location, propFullName) {
    var propFullNameSafe = propFullName || propName;
    var defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];

    if (defaultTypeChecker) {
      for (var _len = arguments.length, args = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        args[_key - 5] = arguments[_key];
      }

      var typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);

      if (typeCheckerResult) {
        return typeCheckerResult;
      }
    }

    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {
      return new Error("The prop `".concat(propFullNameSafe, "` of ") + "`".concat(componentNameInError, "` can only be used together with the `").concat(requiredProp, "` prop."));
    }

    return null;
  };

  return requireProp;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/requirePropFactory.js

/* harmony default export */ var utils_requirePropFactory = (requirePropFactory);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/setRef.js
var setRef = __webpack_require__(96386);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/setRef.js

/* harmony default export */ var utils_setRef = (setRef/* default */.Z);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useId.js
var useId = __webpack_require__(62152);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/unsupportedProp.js
function unsupportedProp(props, propName, componentName, location, propFullName) {
  if (true) {
    return null;
  }

  var propFullNameSafe = propFullName || propName;

  if (typeof props[propName] !== 'undefined') {
    return new Error("The prop `".concat(propFullNameSafe, "` is not supported. Please remove it."));
  }

  return null;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/unsupportedProp.js

/* harmony default export */ var utils_unsupportedProp = (unsupportedProp);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useControlled.js
var useControlled = __webpack_require__(42583);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEventCallback.js
var useEventCallback = __webpack_require__(10955);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useIsFocusVisible.js
var useIsFocusVisible = __webpack_require__(96698);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/ClassNameGenerator.js
var ClassNameGenerator = __webpack_require__(86756);
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/index.js



















/***/ }),

/***/ 63128:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ utils_isMuiElement; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
;// CONCATENATED MODULE: ./node_modules/@mui/utils/esm/isMuiElement.js

function isMuiElement(element, muiNames) {
  return /*#__PURE__*/react.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@mui/material/utils/isMuiElement.js

/* harmony default export */ var utils_isMuiElement = (isMuiElement);

/***/ }),

/***/ 79072:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74694);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 9217:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19475);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 42583:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35833);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 94026:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86164);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 10955:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13634);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 65973:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28127);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 62152:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(95025);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 96698:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(95768);

/* harmony default export */ __webpack_exports__["Z"] = (_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);

/***/ }),

/***/ 5793:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var ThemeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);

if (false) {}

/* harmony default export */ __webpack_exports__["Z"] = (ThemeContext);

/***/ }),

/***/ 61758:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useTheme; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ThemeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5793);


function useTheme() {
  var theme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_ThemeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);

  if (false) {}

  return theme;
}

/***/ }),

/***/ 38776:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ StyledEngineProvider; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81041);
/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99015);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(85893);



 // Cache with option to prepend emotion's style tag


var cache = (0,_emotion_cache__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
  key: 'css',
  prepend: true
});
function StyledEngineProvider(props) {
  var {
    injectFirst,
    children
  } = props;
  return injectFirst ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_emotion_react__WEBPACK_IMPORTED_MODULE_4__.C, {
    value: cache,
    children: children
  }) : children;
}
 false ? 0 : void 0;

/***/ }),

/***/ 38615:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ styled; }
});

// UNUSED EXPORTS: GlobalStyles, StyledEngineProvider, ThemeContext, css, keyframes

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/extends.js
var helpers_extends = __webpack_require__(67154);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js
var emotion_memoize_browser_esm = __webpack_require__(7548);
;// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js

var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var isPropValid = /* #__PURE__ */(0,emotion_memoize_browser_esm/* default */.Z)(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);
/* harmony default export */ var emotion_is_prop_valid_browser_esm = (isPropValid);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-699e6908.browser.esm.js + 1 modules
var emotion_element_699e6908_browser_esm = __webpack_require__(81041);
// EXTERNAL MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var emotion_utils_browser_esm = __webpack_require__(74660);
// EXTERNAL MODULE: ./node_modules/@emotion/hash/dist/hash.browser.esm.js
var hash_browser_esm = __webpack_require__(3762);
// EXTERNAL MODULE: ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js
var unitless_browser_esm = __webpack_require__(44759);
;// CONCATENATED MODULE: ./node_modules/@emotion/styled/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js



var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;

var isCustomProperty = function isCustomProperty(property) {
  return property.charCodeAt(1) === 45;
};

var isProcessableValue = function isProcessableValue(value) {
  return value != null && typeof value !== 'boolean';
};

var processStyleName = /* #__PURE__ */(0,emotion_memoize_browser_esm/* default */.Z)(function (styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }

  if (unitless_browser_esm/* default */.Z[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
    return value + 'px';
  }

  return value;
};

if (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }

function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return '';
  }

  if (interpolation.__emotion_styles !== undefined) {
    if (false) {}

    return interpolation;
  }

  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }

    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }

        if (interpolation.styles !== undefined) {
          var next = interpolation.next;

          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }

          var styles = interpolation.styles + ";";

          if (false) {}

          return styles;
        }

        return createStringFromObject(mergedProps, registered, interpolation);
      }

    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result);
        } else if (false) {}

        break;
      }

    case 'string':
      if (false) { var replaced, matched; }

      break;
  } // finalize string values (regular strings and functions interpolated into css calls)


  if (registered == null) {
    return interpolation;
  }

  var cached = registered[interpolation];
  return cached !== undefined ? cached : interpolation;
}

function createStringFromObject(mergedProps, registered, obj) {
  var string = '';

  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];

      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && "production" !== 'production') {}

        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);

          switch (_key) {
            case 'animation':
            case 'animationName':
              {
                string += processStyleName(_key) + ":" + interpolated + ";";
                break;
              }

            default:
              {
                if (false) {}

                string += _key + "{" + interpolated + "}";
              }
          }
        }
      }
    }
  }

  return string;
}

var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;

if (false) {} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list


var cursor;

var serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }

  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];

  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    if (false) {}

    styles += strings[0];
  } // we start at 1 since we've already handled the first arg


  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i]);

    if (stringMode) {
      if (false) {}

      styles += strings[i];
    }
  }

  var sourceMap;

  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time


  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' + // $FlowFixMe we know it's not null
    match[1];
  }

  var name = (0,hash_browser_esm/* default */.Z)(styles) + identifierName;

  if (false) {}

  return {
    name: name,
    styles: styles,
    next: cursor
  };
};


;// CONCATENATED MODULE: ./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js






var testOmitPropsOnStringTag = emotion_is_prop_valid_browser_esm;

var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
  return key !== 'theme';
};

var getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {
  return typeof tag === 'string' && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};

var composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {
  var shouldForwardProp;

  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {
      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }

  if (typeof shouldForwardProp !== 'function' && isReal) {
    shouldForwardProp = tag.__emotion_forwardProp;
  }

  return shouldForwardProp;
};

var emotion_styled_base_browser_esm_ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";

var Noop = function Noop() {
  return null;
};

var createStyled = function createStyled(tag, options) {
  if (false) {}

  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;
  var identifierName;
  var targetClassName;

  if (options !== undefined) {
    identifierName = options.label;
    targetClassName = options.target;
  }

  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp('as');
  return function () {
    var args = arguments;
    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];

    if (identifierName !== undefined) {
      styles.push("label:" + identifierName + ";");
    }

    if (args[0] == null || args[0].raw === undefined) {
      styles.push.apply(styles, args);
    } else {
      if (false) {}

      styles.push(args[0][0]);
      var len = args.length;
      var i = 1;

      for (; i < len; i++) {
        if (false) {}

        styles.push(args[i], args[0][i]);
      }
    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class


    var Styled = (0,emotion_element_699e6908_browser_esm.w)(function (props, cache, ref) {
      var finalTag = shouldUseAs && props.as || baseTag;
      var className = '';
      var classInterpolations = [];
      var mergedProps = props;

      if (props.theme == null) {
        mergedProps = {};

        for (var key in props) {
          mergedProps[key] = props[key];
        }

        mergedProps.theme = (0,react.useContext)(emotion_element_699e6908_browser_esm.T);
      }

      if (typeof props.className === 'string') {
        className = (0,emotion_utils_browser_esm/* getRegisteredStyles */.f)(cache.registered, classInterpolations, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }

      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);
      var rules = (0,emotion_utils_browser_esm/* insertStyles */.M)(cache, serialized, typeof finalTag === 'string');
      className += cache.key + "-" + serialized.name;

      if (targetClassName !== undefined) {
        className += " " + targetClassName;
      }

      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;
      var newProps = {};

      for (var _key in props) {
        if (shouldUseAs && _key === 'as') continue;

        if ( // $FlowFixMe
        finalShouldForwardProp(_key)) {
          newProps[_key] = props[_key];
        }
      }

      newProps.className = className;
      newProps.ref = ref;
      var ele = /*#__PURE__*/(0,react.createElement)(finalTag, newProps);
      var possiblyStyleElement = /*#__PURE__*/(0,react.createElement)(Noop, null);
      return /*#__PURE__*/(0,react.createElement)(react.Fragment, null, possiblyStyleElement, ele);
    });
    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles;
    Styled.__emotion_forwardProp = shouldForwardProp;
    Object.defineProperty(Styled, 'toString', {
      value: function value() {
        if (targetClassName === undefined && "production" !== 'production') {} // $FlowFixMe: coerce undefined to string


        return "." + targetClassName;
      }
    });

    Styled.withComponent = function (nextTag, nextOptions) {
      return createStyled(nextTag, (0,esm_extends/* default */.Z)({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles);
    };

    return Styled;
  };
};

/* harmony default export */ var emotion_styled_base_browser_esm = (createStyled);
;// CONCATENATED MODULE: ./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js







var tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG
'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
var newStyled = emotion_styled_base_browser_esm.bind();
tags.forEach(function (tagName) {
  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type
  newStyled[tagName] = newStyled(tagName);
});
/* harmony default export */ var emotion_styled_browser_esm = (newStyled);
;// CONCATENATED MODULE: ./node_modules/@mui/styled-engine/index.js
/** @license MUI v5.2.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function styled(tag, options) {
  var stylesFactory = emotion_styled_browser_esm(tag, options);

  if (false) {}

  return stylesFactory;
}




/***/ }),

/***/ 65668:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ esm_ThemeProvider_ThemeProvider; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@mui/private-theming/useTheme/ThemeContext.js
var ThemeContext = __webpack_require__(5793);
// EXTERNAL MODULE: ./node_modules/@mui/private-theming/useTheme/useTheme.js
var useTheme = __webpack_require__(61758);
;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/ThemeProvider/nested.js
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
/* harmony default export */ var nested = (hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__');
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js






 // To support composition of theme.



function mergeOuterLocalTheme(outerTheme, localTheme) {
  if (typeof localTheme === 'function') {
    var mergedTheme = localTheme(outerTheme);

    if (false) {}

    return mergedTheme;
  }

  return (0,esm_extends/* default */.Z)({}, outerTheme, localTheme);
}
/**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */


function ThemeProvider(props) {
  var {
    children,
    theme: localTheme
  } = props;
  var outerTheme = (0,useTheme/* default */.Z)();

  if (false) {}

  var theme = react.useMemo(() => {
    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);

    if (output != null) {
      output[nested] = outerTheme !== null;
    }

    return output;
  }, [localTheme, outerTheme]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ThemeContext/* default.Provider */.Z.Provider, {
    value: theme,
    children: children
  });
}

 false ? 0 : void 0;

if (false) {}

/* harmony default export */ var ThemeProvider_ThemeProvider = (ThemeProvider);
// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-element-699e6908.browser.esm.js + 1 modules
var emotion_element_699e6908_browser_esm = __webpack_require__(81041);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/useTheme.js
var esm_useTheme = __webpack_require__(48377);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js








function InnerThemeProvider(props) {
  var theme = (0,esm_useTheme/* default */.Z)();
  return /*#__PURE__*/(0,jsx_runtime.jsx)(emotion_element_699e6908_browser_esm.T.Provider, {
    value: typeof theme === 'object' ? theme : {},
    children: props.children
  });
}

 false ? 0 : void 0;
/**
 * This component makes the `theme` available down the React tree.
 * It should preferably be used at **the root of your component tree**.
 */

function ThemeProvider_ThemeProvider_ThemeProvider(props) {
  var {
    children,
    theme: localTheme
  } = props;
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ThemeProvider_ThemeProvider, {
    theme: localTheme,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(InnerThemeProvider, {
      children: children
    })
  });
}

 false ? 0 : void 0;

if (false) {}

/* harmony default export */ var esm_ThemeProvider_ThemeProvider = (ThemeProvider_ThemeProvider_ThemeProvider);

/***/ }),

/***/ 22692:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VO": function() { return /* binding */ values; },
/* harmony export */   "k9": function() { return /* binding */ handleBreakpoints; },
/* harmony export */   "W8": function() { return /* binding */ createEmptyBreakpointObject; },
/* harmony export */   "L7": function() { return /* binding */ removeUnusedBreakpoints; },
/* harmony export */   "P$": function() { return /* binding */ resolveBreakpointValues; }
/* harmony export */ });
/* unused harmony exports mergeBreakpointsInOrder, computeBreakpointsBase */
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);



 // The breakpoint **start** at this value.
// For instance with the first breakpoint xs: [xs, sm[.

var values = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536 // large screen

};
var defaultBreakpoints = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ['xs', 'sm', 'md', 'lg', 'xl'],
  up: key => "@media (min-width:".concat(values[key], "px)")
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
  var theme = props.theme || {};

  if (Array.isArray(propValue)) {
    var themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return propValue.reduce((acc, item, index) => {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
      return acc;
    }, {});
  }

  if (typeof propValue === 'object') {
    var _themeBreakpoints = theme.breakpoints || defaultBreakpoints;

    return Object.keys(propValue).reduce((acc, breakpoint) => {
      // key is breakpoint
      if (Object.keys(_themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {
        var mediaKey = _themeBreakpoints.up(breakpoint);

        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
      } else {
        var cssKey = breakpoint;
        acc[cssKey] = propValue[cssKey];
      }

      return acc;
    }, {});
  }

  var output = styleFromPropValue(propValue);
  return output;
}

function breakpoints(styleFunction) {
  var newStyleFunction = props => {
    var theme = props.theme || {};
    var base = styleFunction(props);
    var themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    var extended = themeBreakpoints.keys.reduce((acc, key) => {
      if (props[key]) {
        acc = acc || {};
        acc[themeBreakpoints.up(key)] = styleFunction(_extends({
          theme
        }, props[key]));
      }

      return acc;
    }, null);
    return merge(base, extended);
  };

  newStyleFunction.propTypes =  false ? 0 : {};
  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];
  return newStyleFunction;
}

function createEmptyBreakpointObject() {
  var breakpointsInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _breakpointsInput$key;

  var breakpointsInOrder = breakpointsInput == null ? void 0 : (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
    var breakpointStyleKey = breakpointsInput.up(key);
    acc[breakpointStyleKey] = {};
    return acc;
  }, {});
  return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style) {
  return breakpointKeys.reduce((acc, key) => {
    var breakpointOutput = acc[key];
    var isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;

    if (isBreakpointUnused) {
      delete acc[key];
    }

    return acc;
  }, style);
}
function mergeBreakpointsInOrder(breakpointsInput) {
  var emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);

  for (var _len = arguments.length, styles = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    styles[_key - 1] = arguments[_key];
  }

  var mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});
  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);
} // compute base for responsive values; e.g.,
// [1,2,3] => {xs: true, sm: true, md: true}
// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}

function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
  // fixed value
  if (typeof breakpointValues !== 'object') {
    return {};
  }

  var base = {};
  var breakpointsKeys = Object.keys(themeBreakpoints);

  if (Array.isArray(breakpointValues)) {
    breakpointsKeys.forEach((breakpoint, i) => {
      if (i < breakpointValues.length) {
        base[breakpoint] = true;
      }
    });
  } else {
    breakpointsKeys.forEach(breakpoint => {
      if (breakpointValues[breakpoint] != null) {
        base[breakpoint] = true;
      }
    });
  }

  return base;
}
function resolveBreakpointValues(_ref) {
  var {
    values: breakpointValues,
    breakpoints: themeBreakpoints,
    base: customBase
  } = _ref;
  var base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
  var keys = Object.keys(base);

  if (keys.length === 0) {
    return breakpointValues;
  }

  var previous;
  return keys.reduce((acc, breakpoint, i) => {
    if (Array.isArray(breakpointValues)) {
      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];
      previous = i;
    } else {
      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous] || breakpointValues;
      previous = breakpoint;
    }

    return acc;
  }, {});
}
/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (breakpoints)));

/***/ }),

/***/ 67663:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mi": function() { return /* binding */ getContrastRatio; },
/* harmony export */   "Fq": function() { return /* binding */ alpha; },
/* harmony export */   "_j": function() { return /* binding */ darken; },
/* harmony export */   "$n": function() { return /* binding */ lighten; },
/* harmony export */   "_4": function() { return /* binding */ emphasize; }
/* harmony export */ });
/* unused harmony exports hexToRgb, decomposeColor, recomposeColor, rgbToHex, hslToRgb, getLuminance */
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(93864);

/**
 * Returns a number whose value is limited to the given range.
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */

function clamp(value) {
  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

  if (false) {}

  return Math.min(Math.max(min, value), max);
}
/**
 * Converts a color from CSS hex format to CSS rgb format.
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */


function hexToRgb(color) {
  color = color.substr(1);
  var re = new RegExp(".{1,".concat(color.length >= 6 ? 2 : 1, "}"), 'g');
  var colors = color.match(re);

  if (colors && colors[0].length === 1) {
    colors = colors.map(n => n + n);
  }

  return colors ? "rgb".concat(colors.length === 4 ? 'a' : '', "(").concat(colors.map((n, index) => {
    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
  }).join(', '), ")") : '';
}

function intToHex(int) {
  var hex = int.toString(16);
  return hex.length === 1 ? "0".concat(hex) : hex;
}
/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */


function decomposeColor(color) {
  // Idempotent
  if (color.type) {
    return color;
  }

  if (color.charAt(0) === '#') {
    return decomposeColor(hexToRgb(color));
  }

  var marker = color.indexOf('(');
  var type = color.substring(0, marker);

  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {
    throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(9, color));
  }

  var values = color.substring(marker + 1, color.length - 1);
  var colorSpace;

  if (type === 'color') {
    values = values.split(' ');
    colorSpace = values.shift();

    if (values.length === 4 && values[3].charAt(0) === '/') {
      values[3] = values[3].substr(1);
    }

    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {
      throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(10, colorSpace));
    }
  } else {
    values = values.split(',');
  }

  values = values.map(value => parseFloat(value));
  return {
    type,
    values,
    colorSpace
  };
}
/**
 * Converts a color object with type and values to a string.
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */

function recomposeColor(color) {
  var {
    type,
    colorSpace
  } = color;
  var {
    values
  } = color;

  if (type.indexOf('rgb') !== -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);
  } else if (type.indexOf('hsl') !== -1) {
    values[1] = "".concat(values[1], "%");
    values[2] = "".concat(values[2], "%");
  }

  if (type.indexOf('color') !== -1) {
    values = "".concat(colorSpace, " ").concat(values.join(' '));
  } else {
    values = "".concat(values.join(', '));
  }

  return "".concat(type, "(").concat(values, ")");
}
/**
 * Converts a color from CSS rgb format to CSS hex format.
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */

function rgbToHex(color) {
  // Idempotent
  if (color.indexOf('#') === 0) {
    return color;
  }

  var {
    values
  } = decomposeColor(color);
  return "#".concat(values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join(''));
}
/**
 * Converts a color from hsl format to rgb format.
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */

function hslToRgb(color) {
  color = decomposeColor(color);
  var {
    values
  } = color;
  var h = values[0];
  var s = values[1] / 100;
  var l = values[2] / 100;
  var a = s * Math.min(l, 1 - l);

  var f = function f(n) {
    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;
    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
  };

  var type = 'rgb';
  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];

  if (color.type === 'hsla') {
    type += 'a';
    rgb.push(values[3]);
  }

  return recomposeColor({
    type,
    values: rgb
  });
}
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */

function getLuminance(color) {
  color = decomposeColor(color);
  var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;
  rgb = rgb.map(val => {
    if (color.type !== 'color') {
      val /= 255; // normalized
    }

    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
  }); // Truncate at 3 digits

  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */

function getContrastRatio(foreground, background) {
  var lumA = getLuminance(foreground);
  var lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
/**
 * Sets the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} value - value to set the alpha channel to in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

function alpha(color, value) {
  color = decomposeColor(color);
  value = clamp(value);

  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }

  if (color.type === 'color') {
    color.values[3] = "/".concat(value);
  } else {
    color.values[3] = value;
  }

  return recomposeColor(color);
}
/**
 * Darkens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

function darken(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient);

  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] *= 1 - coefficient;
    }
  }

  return recomposeColor(color);
}
/**
 * Lightens a color.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

function lighten(color, coefficient) {
  color = decomposeColor(color);
  coefficient = clamp(coefficient);

  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  } else if (color.type.indexOf('color') !== -1) {
    for (var _i = 0; _i < 3; _i += 1) {
      color.values[_i] += (1 - color.values[_i]) * coefficient;
    }
  }

  return recomposeColor(color);
}
/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

function emphasize(color) {
  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}

/***/ }),

/***/ 53409:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ createTheme_createTheme; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js
var deepmerge = __webpack_require__(26486);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createBreakpoints.js


var _excluded = ["values", "unit", "step"]; // Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.

var breakpointKeys = (/* unused pure expression or super */ null && (['xs', 'sm', 'md', 'lg', 'xl'])); // Keep in mind that @media is inclusive by the CSS specification.

function createBreakpoints(breakpoints) {
  var {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536 // large screen

    },
    unit = 'px',
    step = 5
  } = breakpoints,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(breakpoints, _excluded);

  var keys = Object.keys(values);

  function up(key) {
    var value = typeof values[key] === 'number' ? values[key] : key;
    return "@media (min-width:".concat(value).concat(unit, ")");
  }

  function down(key) {
    var value = typeof values[key] === 'number' ? values[key] : key;
    return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
  }

  function between(start, end) {
    var endIndex = keys.indexOf(end);
    return "@media (min-width:".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, ") and ") + "(max-width:".concat((endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100).concat(unit, ")");
  }

  function only(key) {
    if (keys.indexOf(key) + 1 < keys.length) {
      return between(key, keys[keys.indexOf(key) + 1]);
    }

    return up(key);
  }

  return (0,esm_extends/* default */.Z)({
    keys,
    values,
    up,
    down,
    between,
    only,
    unit
  }, other);
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/shape.js
var shape = {
  borderRadius: 4
};
/* harmony default export */ var createTheme_shape = (shape);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules
var esm_spacing = __webpack_require__(25332);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createSpacing.js

/* tslint:enable:unified-signatures */

function createSpacing() {
  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

  // Already transformed.
  if (spacingInput.mui) {
    return spacingInput;
  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
  // Smaller components, such as icons, can align to a 4dp grid.
  // https://material.io/design/layout/understanding-layout.html#usage


  var transform = (0,esm_spacing/* createUnarySpacing */.hB)({
    spacing: spacingInput
  });

  var spacing = function spacing() {
    for (var _len = arguments.length, argsInput = new Array(_len), _key = 0; _key < _len; _key++) {
      argsInput[_key] = arguments[_key];
    }

    if (false) {}

    var args = argsInput.length === 0 ? [1] : argsInput;
    return args.map(argument => {
      var output = transform(argument);
      return typeof output === 'number' ? "".concat(output, "px") : output;
    }).join(' ');
  };

  spacing.mui = true;
  return spacing;
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js


var createTheme_excluded = ["breakpoints", "palette", "spacing", "shape"];





function createTheme() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var {
    breakpoints: breakpointsInput = {},
    palette: paletteInput = {},
    spacing: spacingInput,
    shape: shapeInput = {}
  } = options,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);

  var breakpoints = createBreakpoints(breakpointsInput);
  var spacing = createSpacing(spacingInput);
  var muiTheme = (0,deepmerge/* default */.Z)({
    breakpoints,
    direction: 'ltr',
    components: {},
    // Inject component definitions.
    palette: (0,esm_extends/* default */.Z)({
      mode: 'light'
    }, paletteInput),
    spacing,
    shape: (0,esm_extends/* default */.Z)({}, createTheme_shape, shapeInput)
  }, other);

  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  muiTheme = args.reduce((acc, argument) => (0,deepmerge/* default */.Z)(acc, argument), muiTheme);
  return muiTheme;
}

/* harmony default export */ var createTheme_createTheme = (createTheme);

/***/ }),

/***/ 49665:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ esm_getThemeValue; },
  "G": function() { return /* binding */ propToStyleFunction; }
});

// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js
var style = __webpack_require__(45535);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js
var merge = __webpack_require__(14106);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/compose.js


function compose() {
  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {
    styles[_key] = arguments[_key];
  }

  var handlers = styles.reduce((acc, style) => {
    style.filterProps.forEach(prop => {
      acc[prop] = style;
    });
    return acc;
  }, {});

  var fn = props => {
    return Object.keys(props).reduce((acc, prop) => {
      if (handlers[prop]) {
        return (0,merge/* default */.Z)(acc, handlers[prop](props));
      }

      return acc;
    }, {});
  };

  fn.propTypes =  false ? 0 : {};
  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);
  return fn;
}

/* harmony default export */ var esm_compose = (compose);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules
var spacing = __webpack_require__(25332);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js
var breakpoints = __webpack_require__(22692);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/borders.js






function getBorder(value) {
  if (typeof value !== 'number') {
    return value;
  }

  return "".concat(value, "px solid");
}

var border = (0,style/* default */.Z)({
  prop: 'border',
  themeKey: 'borders',
  transform: getBorder
});
var borderTop = (0,style/* default */.Z)({
  prop: 'borderTop',
  themeKey: 'borders',
  transform: getBorder
});
var borderRight = (0,style/* default */.Z)({
  prop: 'borderRight',
  themeKey: 'borders',
  transform: getBorder
});
var borderBottom = (0,style/* default */.Z)({
  prop: 'borderBottom',
  themeKey: 'borders',
  transform: getBorder
});
var borderLeft = (0,style/* default */.Z)({
  prop: 'borderLeft',
  themeKey: 'borders',
  transform: getBorder
});
var borderColor = (0,style/* default */.Z)({
  prop: 'borderColor',
  themeKey: 'palette'
});
var borderTopColor = (0,style/* default */.Z)({
  prop: 'borderTopColor',
  themeKey: 'palette'
});
var borderRightColor = (0,style/* default */.Z)({
  prop: 'borderRightColor',
  themeKey: 'palette'
});
var borderBottomColor = (0,style/* default */.Z)({
  prop: 'borderBottomColor',
  themeKey: 'palette'
});
var borderLeftColor = (0,style/* default */.Z)({
  prop: 'borderLeftColor',
  themeKey: 'palette'
});
var borderRadius = props => {
  if (props.borderRadius !== undefined && props.borderRadius !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'shape.borderRadius', 4, 'borderRadius');

    var styleFromPropValue = propValue => ({
      borderRadius: (0,spacing/* getValue */.NA)(transformer, propValue)
    });

    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.borderRadius, styleFromPropValue);
  }

  return null;
};
borderRadius.propTypes =  false ? 0 : {};
borderRadius.filterProps = ['borderRadius'];
var borders = esm_compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
/* harmony default export */ var esm_borders = (borders);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/display.js


var displayPrint = (0,style/* default */.Z)({
  prop: 'displayPrint',
  cssProperty: false,
  transform: value => ({
    '@media print': {
      display: value
    }
  })
});
var displayRaw = (0,style/* default */.Z)({
  prop: 'display'
});
var overflow = (0,style/* default */.Z)({
  prop: 'overflow'
});
var textOverflow = (0,style/* default */.Z)({
  prop: 'textOverflow'
});
var visibility = (0,style/* default */.Z)({
  prop: 'visibility'
});
var whiteSpace = (0,style/* default */.Z)({
  prop: 'whiteSpace'
});
/* harmony default export */ var display = (esm_compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace));
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/flexbox.js


var flexBasis = (0,style/* default */.Z)({
  prop: 'flexBasis'
});
var flexDirection = (0,style/* default */.Z)({
  prop: 'flexDirection'
});
var flexWrap = (0,style/* default */.Z)({
  prop: 'flexWrap'
});
var justifyContent = (0,style/* default */.Z)({
  prop: 'justifyContent'
});
var alignItems = (0,style/* default */.Z)({
  prop: 'alignItems'
});
var alignContent = (0,style/* default */.Z)({
  prop: 'alignContent'
});
var order = (0,style/* default */.Z)({
  prop: 'order'
});
var flex = (0,style/* default */.Z)({
  prop: 'flex'
});
var flexGrow = (0,style/* default */.Z)({
  prop: 'flexGrow'
});
var flexShrink = (0,style/* default */.Z)({
  prop: 'flexShrink'
});
var alignSelf = (0,style/* default */.Z)({
  prop: 'alignSelf'
});
var justifyItems = (0,style/* default */.Z)({
  prop: 'justifyItems'
});
var justifySelf = (0,style/* default */.Z)({
  prop: 'justifySelf'
});
var flexbox = esm_compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
/* harmony default export */ var esm_flexbox = (flexbox);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/grid.js





var gap = props => {
  if (props.gap !== undefined && props.gap !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'gap');

    var styleFromPropValue = propValue => ({
      gap: (0,spacing/* getValue */.NA)(transformer, propValue)
    });

    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.gap, styleFromPropValue);
  }

  return null;
};
gap.propTypes =  false ? 0 : {};
gap.filterProps = ['gap'];
var columnGap = props => {
  if (props.columnGap !== undefined && props.columnGap !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'columnGap');

    var styleFromPropValue = propValue => ({
      columnGap: (0,spacing/* getValue */.NA)(transformer, propValue)
    });

    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.columnGap, styleFromPropValue);
  }

  return null;
};
columnGap.propTypes =  false ? 0 : {};
columnGap.filterProps = ['columnGap'];
var rowGap = props => {
  if (props.rowGap !== undefined && props.rowGap !== null) {
    var transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'rowGap');

    var styleFromPropValue = propValue => ({
      rowGap: (0,spacing/* getValue */.NA)(transformer, propValue)
    });

    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.rowGap, styleFromPropValue);
  }

  return null;
};
rowGap.propTypes =  false ? 0 : {};
rowGap.filterProps = ['rowGap'];
var gridColumn = (0,style/* default */.Z)({
  prop: 'gridColumn'
});
var gridRow = (0,style/* default */.Z)({
  prop: 'gridRow'
});
var gridAutoFlow = (0,style/* default */.Z)({
  prop: 'gridAutoFlow'
});
var gridAutoColumns = (0,style/* default */.Z)({
  prop: 'gridAutoColumns'
});
var gridAutoRows = (0,style/* default */.Z)({
  prop: 'gridAutoRows'
});
var gridTemplateColumns = (0,style/* default */.Z)({
  prop: 'gridTemplateColumns'
});
var gridTemplateRows = (0,style/* default */.Z)({
  prop: 'gridTemplateRows'
});
var gridTemplateAreas = (0,style/* default */.Z)({
  prop: 'gridTemplateAreas'
});
var gridArea = (0,style/* default */.Z)({
  prop: 'gridArea'
});
var grid = esm_compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
/* harmony default export */ var esm_grid = (grid);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/positions.js


var position = (0,style/* default */.Z)({
  prop: 'position'
});
var zIndex = (0,style/* default */.Z)({
  prop: 'zIndex',
  themeKey: 'zIndex'
});
var positions_top = (0,style/* default */.Z)({
  prop: 'top'
});
var right = (0,style/* default */.Z)({
  prop: 'right'
});
var bottom = (0,style/* default */.Z)({
  prop: 'bottom'
});
var left = (0,style/* default */.Z)({
  prop: 'left'
});
/* harmony default export */ var positions = (esm_compose(position, zIndex, positions_top, right, bottom, left));
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/palette.js


var color = (0,style/* default */.Z)({
  prop: 'color',
  themeKey: 'palette'
});
var bgcolor = (0,style/* default */.Z)({
  prop: 'bgcolor',
  cssProperty: 'backgroundColor',
  themeKey: 'palette'
});
var backgroundColor = (0,style/* default */.Z)({
  prop: 'backgroundColor',
  themeKey: 'palette'
});
var palette = esm_compose(color, bgcolor, backgroundColor);
/* harmony default export */ var esm_palette = (palette);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/shadows.js

var boxShadow = (0,style/* default */.Z)({
  prop: 'boxShadow',
  themeKey: 'shadows'
});
/* harmony default export */ var shadows = (boxShadow);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/sizing.js




function transform(value) {
  return value <= 1 && value !== 0 ? "".concat(value * 100, "%") : value;
}

var width = (0,style/* default */.Z)({
  prop: 'width',
  transform
});
var maxWidth = props => {
  if (props.maxWidth !== undefined && props.maxWidth !== null) {
    var styleFromPropValue = propValue => {
      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;

      var breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || breakpoints/* values */.VO[propValue];
      return {
        maxWidth: breakpoint || transform(propValue)
      };
    };

    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.maxWidth, styleFromPropValue);
  }

  return null;
};
maxWidth.filterProps = ['maxWidth'];
var minWidth = (0,style/* default */.Z)({
  prop: 'minWidth',
  transform
});
var height = (0,style/* default */.Z)({
  prop: 'height',
  transform
});
var maxHeight = (0,style/* default */.Z)({
  prop: 'maxHeight',
  transform
});
var minHeight = (0,style/* default */.Z)({
  prop: 'minHeight',
  transform
});
var sizeWidth = (0,style/* default */.Z)({
  prop: 'size',
  cssProperty: 'width',
  transform
});
var sizeHeight = (0,style/* default */.Z)({
  prop: 'size',
  cssProperty: 'height',
  transform
});
var boxSizing = (0,style/* default */.Z)({
  prop: 'boxSizing'
});
var sizing = esm_compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
/* harmony default export */ var esm_sizing = (sizing);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/typography.js


var fontFamily = (0,style/* default */.Z)({
  prop: 'fontFamily',
  themeKey: 'typography'
});
var fontSize = (0,style/* default */.Z)({
  prop: 'fontSize',
  themeKey: 'typography'
});
var fontStyle = (0,style/* default */.Z)({
  prop: 'fontStyle',
  themeKey: 'typography'
});
var fontWeight = (0,style/* default */.Z)({
  prop: 'fontWeight',
  themeKey: 'typography'
});
var letterSpacing = (0,style/* default */.Z)({
  prop: 'letterSpacing'
});
var lineHeight = (0,style/* default */.Z)({
  prop: 'lineHeight'
});
var textAlign = (0,style/* default */.Z)({
  prop: 'textAlign'
});
var typographyVariant = (0,style/* default */.Z)({
  prop: 'typography',
  cssProperty: false,
  themeKey: 'typography'
});
var typography = esm_compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);
/* harmony default export */ var esm_typography = (typography);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/getThemeValue.js










var filterPropsMapping = {
  borders: esm_borders.filterProps,
  display: display.filterProps,
  flexbox: esm_flexbox.filterProps,
  grid: esm_grid.filterProps,
  positions: positions.filterProps,
  palette: esm_palette.filterProps,
  shadows: shadows.filterProps,
  sizing: esm_sizing.filterProps,
  spacing: spacing/* default.filterProps */.ZP.filterProps,
  typography: esm_typography.filterProps
};
var styleFunctionMapping = {
  borders: esm_borders,
  display: display,
  flexbox: esm_flexbox,
  grid: esm_grid,
  positions: positions,
  palette: esm_palette,
  shadows: shadows,
  sizing: esm_sizing,
  spacing: spacing/* default */.ZP,
  typography: esm_typography
};
var propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {
  filterPropsMapping[styleFnName].forEach(propName => {
    acc[propName] = styleFunctionMapping[styleFnName];
  });
  return acc;
}, {});

function getThemeValue(prop, value, theme) {
  var inputProps = {
    [prop]: value,
    theme
  };
  var styleFunction = propToStyleFunction[prop];
  return styleFunction ? styleFunction(inputProps) : {
    [prop]: value
  };
}

/* harmony default export */ var esm_getThemeValue = (getThemeValue);

/***/ }),

/***/ 14106:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26486);


function merge(acc, item) {
  if (!item) {
    return acc;
  }

  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(acc, item, {
    clone: false // No need to clone deep, it's way faster.

  });
}

/* harmony default export */ __webpack_exports__["Z"] = (merge);

/***/ }),

/***/ 25332:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "hB": function() { return /* binding */ createUnarySpacing; },
  "eI": function() { return /* binding */ createUnaryUnit; },
  "ZP": function() { return /* binding */ esm_spacing; },
  "NA": function() { return /* binding */ getValue; }
});

// UNUSED EXPORTS: getStyleFromPropValue, margin, padding

// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js
var breakpoints = __webpack_require__(22692);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js
var style = __webpack_require__(45535);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js
var merge = __webpack_require__(14106);
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/memoize.js
function memoize(fn) {
  var cache = {};
  return arg => {
    if (cache[arg] === undefined) {
      cache[arg] = fn(arg);
    }

    return cache[arg];
  };
}
;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/spacing.js





var properties = {
  m: 'margin',
  p: 'padding'
};
var directions = {
  t: 'Top',
  r: 'Right',
  b: 'Bottom',
  l: 'Left',
  x: ['Left', 'Right'],
  y: ['Top', 'Bottom']
};
var aliases = {
  marginX: 'mx',
  marginY: 'my',
  paddingX: 'px',
  paddingY: 'py'
}; // memoize() impact:
// From 300,000 ops/sec
// To 350,000 ops/sec

var getCssProperties = memoize(prop => {
  // It's not a shorthand notation.
  if (prop.length > 2) {
    if (aliases[prop]) {
      prop = aliases[prop];
    } else {
      return [prop];
    }
  }

  var [a, b] = prop.split('');
  var property = properties[a];
  var direction = directions[b] || '';
  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];
});
var marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];
var paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];
var spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
  var themeSpacing = (0,style/* getPath */.D)(theme, themeKey) || defaultValue;

  if (typeof themeSpacing === 'number') {
    return abs => {
      if (typeof abs === 'string') {
        return abs;
      }

      if (false) {}

      return themeSpacing * abs;
    };
  }

  if (Array.isArray(themeSpacing)) {
    return abs => {
      if (typeof abs === 'string') {
        return abs;
      }

      if (false) {}

      return themeSpacing[abs];
    };
  }

  if (typeof themeSpacing === 'function') {
    return themeSpacing;
  }

  if (false) {}

  return () => undefined;
}
function createUnarySpacing(theme) {
  return createUnaryUnit(theme, 'spacing', 8, 'spacing');
}
function getValue(transformer, propValue) {
  if (typeof propValue === 'string' || propValue == null) {
    return propValue;
  }

  var abs = Math.abs(propValue);
  var transformed = transformer(abs);

  if (propValue >= 0) {
    return transformed;
  }

  if (typeof transformed === 'number') {
    return -transformed;
  }

  return "-".concat(transformed);
}
function getStyleFromPropValue(cssProperties, transformer) {
  return propValue => cssProperties.reduce((acc, cssProperty) => {
    acc[cssProperty] = getValue(transformer, propValue);
    return acc;
  }, {});
}

function resolveCssProperty(props, keys, prop, transformer) {
  // Using a hash computation over an array iteration could be faster, but with only 28 items,
  // it's doesn't worth the bundle size.
  if (keys.indexOf(prop) === -1) {
    return null;
  }

  var cssProperties = getCssProperties(prop);
  var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
  var propValue = props[prop];
  return (0,breakpoints/* handleBreakpoints */.k9)(props, propValue, styleFromPropValue);
}

function spacing_style(props, keys) {
  var transformer = createUnarySpacing(props.theme);
  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge/* default */.Z, {});
}

function margin(props) {
  return spacing_style(props, marginKeys);
}
margin.propTypes =  false ? 0 : {};
margin.filterProps = marginKeys;
function padding(props) {
  return spacing_style(props, paddingKeys);
}
padding.propTypes =  false ? 0 : {};
padding.filterProps = paddingKeys;

function spacing(props) {
  return spacing_style(props, spacingKeys);
}

spacing.propTypes =  false ? 0 : {};
spacing.filterProps = spacingKeys;
/* harmony default export */ var esm_spacing = (spacing);

/***/ }),

/***/ 45535:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": function() { return /* binding */ getPath; }
/* harmony export */ });
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6550);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22692);



function getPath(obj, path) {
  if (!path || typeof path !== 'string') {
    return null;
  }

  return path.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
}

function getValue(themeMapping, transform, propValueFinal) {
  var userValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : propValueFinal;
  var value;

  if (typeof themeMapping === 'function') {
    value = themeMapping(propValueFinal);
  } else if (Array.isArray(themeMapping)) {
    value = themeMapping[propValueFinal] || userValue;
  } else {
    value = getPath(themeMapping, propValueFinal) || userValue;
  }

  if (transform) {
    value = transform(value);
  }

  return value;
}

function style(options) {
  var {
    prop,
    cssProperty = options.prop,
    themeKey,
    transform
  } = options;

  var fn = props => {
    if (props[prop] == null) {
      return null;
    }

    var propValue = props[prop];
    var theme = props.theme;
    var themeMapping = getPath(theme, themeKey) || {};

    var styleFromPropValue = propValueFinal => {
      var value = getValue(themeMapping, transform, propValueFinal);

      if (propValueFinal === value && typeof propValueFinal === 'string') {
        // Haven't found value
        value = getValue(themeMapping, transform, "".concat(prop).concat(propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(propValueFinal)), propValueFinal);
      }

      if (cssProperty === false) {
        return value;
      }

      return {
        [cssProperty]: value
      };
    };

    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_1__/* .handleBreakpoints */ .k9)(props, propValue, styleFromPropValue);
  };

  fn.propTypes =  false ? 0 : {};
  fn.filterProps = [prop];
  return fn;
}

/* harmony default export */ __webpack_exports__["Z"] = (style);

/***/ }),

/***/ 18297:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ extendSxProp; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87462);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63366);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26486);
/* harmony import */ var _getThemeValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49665);


var _excluded = ["sx"];



var splitProps = props => {
  var result = {
    systemProps: {},
    otherProps: {}
  };
  Object.keys(props).forEach(prop => {
    if (_getThemeValue__WEBPACK_IMPORTED_MODULE_0__/* .propToStyleFunction */ .G[prop]) {
      result.systemProps[prop] = props[prop];
    } else {
      result.otherProps[prop] = props[prop];
    }
  });
  return result;
};

function extendSxProp(props) {
  var {
    sx: inSx
  } = props,
      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(props, _excluded);

  var {
    systemProps,
    otherProps
  } = splitProps(other);
  var finalSx;

  if (Array.isArray(inSx)) {
    finalSx = [systemProps, ...inSx];
  } else if (typeof inSx === 'function') {
    finalSx = function finalSx() {
      var result = inSx(...arguments);

      if (!(0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__/* .isPlainObject */ .P)(result)) {
        return systemProps;
      }

      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({}, systemProps, result);
    };
  } else {
    finalSx = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({}, systemProps, inSx);
  }

  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({}, otherProps, {
    sx: finalSx
  });
}

/***/ }),

/***/ 12037:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14106);
/* harmony import */ var _getThemeValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49665);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22692);




function objectsHaveSameKeys() {
  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {
    objects[_key] = arguments[_key];
  }

  var allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
  var union = new Set(allKeys);
  return objects.every(object => union.size === Object.keys(object).length);
}

function callIfFn(maybeFn, arg) {
  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
}

function styleFunctionSx(props) {
  var {
    sx,
    theme = {}
  } = props || {};

  if (!sx) {
    return null; // emotion & styled-components will neglect null
  }
  /*
   * Receive `sxInput` as object or callback
   * and then recursively check keys & values to create media query object styles.
   * (the result will be used in `styled`)
   */


  function traverse(sxInput) {
    var sxObject = sxInput;

    if (typeof sxInput === 'function') {
      sxObject = sxInput(theme);
    } else if (typeof sxInput !== 'object') {
      // value
      return sxInput;
    }

    var emptyBreakpoints = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_0__/* .createEmptyBreakpointObject */ .W8)(theme.breakpoints);
    var breakpointsKeys = Object.keys(emptyBreakpoints);
    var css = emptyBreakpoints;
    Object.keys(sxObject).forEach(styleKey => {
      var value = callIfFn(sxObject[styleKey], theme);

      if (value !== null && value !== undefined) {
        if (typeof value === 'object') {
          if (_getThemeValue__WEBPACK_IMPORTED_MODULE_1__/* .propToStyleFunction */ .G[styleKey]) {
            css = (0,_merge__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(css, (0,_getThemeValue__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(styleKey, value, theme));
          } else {
            var breakpointsValues = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_0__/* .handleBreakpoints */ .k9)({
              theme
            }, value, x => ({
              [styleKey]: x
            }));

            if (objectsHaveSameKeys(breakpointsValues, value)) {
              css[styleKey] = styleFunctionSx({
                sx: value,
                theme
              });
            } else {
              css = (0,_merge__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(css, breakpointsValues);
            }
          }
        } else {
          css = (0,_merge__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(css, (0,_getThemeValue__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(styleKey, value, theme));
        }
      }
    });
    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_0__/* .removeUnusedBreakpoints */ .L7)(breakpointsKeys, css);
  }

  return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
}

styleFunctionSx.filterProps = ['sx'];
/* harmony default export */ __webpack_exports__["Z"] = (styleFunctionSx);

/***/ }),

/***/ 48377:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export systemDefaultTheme */
/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53409);
/* harmony import */ var _useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2665);


var systemDefaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();

function useTheme() {
  var defaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : systemDefaultTheme;
  return (0,_useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(defaultTheme);
}

/* harmony default export */ __webpack_exports__["Z"] = (useTheme);

/***/ }),

/***/ 94379:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ getThemeProps; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87462);

/* eslint-disable no-restricted-syntax */

function getThemeProps(params) {
  var {
    theme,
    name,
    props
  } = params;

  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }

  var output = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, props); // Resolve default props, code borrow from React source.
  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221


  var defaultProps = theme.components[name].defaultProps;
  var propName;

  for (propName in defaultProps) {
    if (output[propName] === undefined) {
      output[propName] = defaultProps[propName];
    }
  }

  return output;
}

/***/ }),

/***/ 2665:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_private_theming__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(61758);


function isObjectEmpty(obj) {
  return Object.keys(obj).length === 0;
}

function useTheme() {
  var defaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var contextTheme = (0,_mui_private_theming__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
}

/* harmony default export */ __webpack_exports__["Z"] = (useTheme);

/***/ }),

/***/ 6550:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ capitalize; }
/* harmony export */ });
/* harmony import */ var _formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(93864);
 // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
//
// A strict capitalization should uppercase the first letter of each word in the sentence.
// We only handle the first word.

function capitalize(string) {
  if (typeof string !== 'string') {
    throw new Error( false ? 0 : (0,_formatMuiErrorMessage__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(7));
  }

  return string.charAt(0).toUpperCase() + string.slice(1);
}

/***/ }),

/***/ 80721:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ createChainedFunction; }
/* harmony export */ });
/**
 * Safe chained function.
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 */
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  return funcs.reduce((acc, func) => {
    if (func == null) {
      return acc;
    }

    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      acc.apply(this, args);
      func.apply(this, args);
    };
  }, () => {});
}

/***/ }),

/***/ 35176:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ debounce; }
/* harmony export */ });
// Corresponds to 10 frames at 60 Hz.
// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
function debounce(func) {
  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;
  var timeout;

  function debounced() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var later = () => {
      func.apply(this, args);
    };

    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }

  debounced.clear = () => {
    clearTimeout(timeout);
  };

  return debounced;
}

/***/ }),

/***/ 26486:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": function() { return /* binding */ isPlainObject; },
/* harmony export */   "Z": function() { return /* binding */ deepmerge; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87462);

function isPlainObject(item) {
  return item !== null && typeof item === 'object' && item.constructor === Object;
}
function deepmerge(target, source) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    clone: true
  };
  var output = options.clone ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, target) : target;

  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach(key => {
      // Avoid prototype pollution
      if (key === '__proto__') {
        return;
      }

      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
        output[key] = deepmerge(target[key], source[key], options);
      } else {
        output[key] = source[key];
      }
    });
  }

  return output;
}

/***/ }),

/***/ 93864:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ formatMuiErrorMessage; }
/* harmony export */ });
/**
 * WARNING: Don't import this directly.
 * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.
 * @param {number} code
 */
function formatMuiErrorMessage(code) {
  // Apply babel-plugin-transform-template-literals in loose mode
  // loose mode is safe iff we're concatenating primitives
  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose

  /* eslint-disable prefer-template */
  var url = 'https://mui.com/production-error/?code=' + code;

  for (var i = 1; i < arguments.length; i += 1) {
    // rest params over-transpile for this case
    // eslint-disable-next-line prefer-rest-params
    url += '&args[]=' + encodeURIComponent(arguments[i]);
  }

  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';
  /* eslint-enable prefer-template */
}

/***/ }),

/***/ 56706:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ getScrollbarSize; }
/* harmony export */ });
// A change of the browser zoom change the scrollbar size.
// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18
function getScrollbarSize(doc) {
  // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes
  var documentWidth = doc.documentElement.clientWidth;
  return Math.abs(window.innerWidth - documentWidth);
}

/***/ }),

/***/ 74694:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ownerDocument; }
/* harmony export */ });
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

/***/ }),

/***/ 19475:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ownerWindow; }
/* harmony export */ });
/* harmony import */ var _ownerDocument__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74694);

function ownerWindow(node) {
  var doc = (0,_ownerDocument__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(node);
  return doc.defaultView || window;
}

/***/ }),

/***/ 96386:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ setRef; }
/* harmony export */ });
/**
 * TODO v5: consider making it private
 *
 * passes {value} to {ref}
 *
 * WARNING: Be sure to only call this inside a callback that is passed as a ref.
 * Otherwise, make sure to cleanup the previous {ref} if it changes. See
 * https://github.com/mui-org/material-ui/issues/13539
 *
 * Useful if you want to expose the ref of an inner component to the public API
 * while still using it inside the component.
 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
 */
function setRef(ref, value) {
  if (typeof ref === 'function') {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}

/***/ }),

/***/ 35833:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useControlled; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

function useControlled(_ref) {
  var {
    controlled,
    default: defaultProp,
    name,
    state = 'value'
  } = _ref;
  // isControlled is ignored in the hook dependency lists as it should never change.
  var {
    current: isControlled
  } = react__WEBPACK_IMPORTED_MODULE_0__.useRef(controlled !== undefined);
  var [valueState, setValue] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultProp);
  var value = isControlled ? controlled : valueState;

  if (false) { var defaultValue; }

  var setValueIfUncontrolled = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newValue => {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

/***/ }),

/***/ 86164:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var useEnhancedEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;
/* harmony default export */ __webpack_exports__["Z"] = (useEnhancedEffect);

/***/ }),

/***/ 13634:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useEventCallback; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86164);


/**
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 */

function useEventCallback(fn) {
  var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);
  (0,_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(() => {
    ref.current = fn;
  });
  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    return (// @ts-expect-error hide `this`
      // tslint:disable-next-line:ban-comma-operator
      (0, ref.current)(...arguments)
    );
  }, []);
}

/***/ }),

/***/ 28127:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useForkRef; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _setRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(96386);


function useForkRef(refA, refB) {
  /**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior.
   */
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (refA == null && refB == null) {
      return null;
    }

    return refValue => {
      (0,_setRef__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(refA, refValue);
      (0,_setRef__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(refB, refValue);
    };
  }, [refA, refB]);
}

/***/ }),

/***/ 95025:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useId; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var globalId = 0;
function useId(idOverride) {
  var [defaultId, setDefaultId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(idOverride);
  var id = idOverride || defaultId;
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (defaultId == null) {
      // Fallback to this default id when possible.
      // Use the incrementing value for client-side rendering only.
      // We can't use it server-side.
      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem
      globalId += 1;
      setDefaultId("mui-".concat(globalId));
    }
  }, [defaultId]);
  return id;
}

/***/ }),

/***/ 95768:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useIsFocusVisible; }
/* harmony export */ });
/* unused harmony export teardown */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js

var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var hadFocusVisibleRecentlyTimeout;
var inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  'datetime-local': true
};
/**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @returns {boolean}
 */

function focusTriggersKeyboardModality(node) {
  var {
    type,
    tagName
  } = node;

  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {
    return true;
  }

  if (tagName === 'TEXTAREA' && !node.readOnly) {
    return true;
  }

  if (node.isContentEditable) {
    return true;
  }

  return false;
}
/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */


function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }

  hadKeyboardEvent = true;
}
/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */


function handlePointerDown() {
  hadKeyboardEvent = false;
}

function handleVisibilityChange() {
  if (this.visibilityState === 'hidden') {
    // If the tab becomes active again, the browser will handle calling focus
    // on the element (Safari actually calls it twice).
    // If this tab change caused a blur on an element with focus-visible,
    // re-apply the class when the user switches back to the tab.
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}

function prepare(doc) {
  doc.addEventListener('keydown', handleKeyDown, true);
  doc.addEventListener('mousedown', handlePointerDown, true);
  doc.addEventListener('pointerdown', handlePointerDown, true);
  doc.addEventListener('touchstart', handlePointerDown, true);
  doc.addEventListener('visibilitychange', handleVisibilityChange, true);
}

function teardown(doc) {
  doc.removeEventListener('keydown', handleKeyDown, true);
  doc.removeEventListener('mousedown', handlePointerDown, true);
  doc.removeEventListener('pointerdown', handlePointerDown, true);
  doc.removeEventListener('touchstart', handlePointerDown, true);
  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);
}

function isFocusVisible(event) {
  var {
    target
  } = event;

  try {
    return target.matches(':focus-visible');
  } catch (error) {// Browsers not implementing :focus-visible will throw a SyntaxError.
    // We use our own heuristic for those browsers.
    // Rethrow might be better if it's not the expected error but do we really
    // want to crash if focus-visible malfunctioned?
  } // No need for validFocusTarget check. The user does that by attaching it to
  // focusable events only.


  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}

function useIsFocusVisible() {
  var ref = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    if (node != null) {
      prepare(node.ownerDocument);
    }
  }, []);
  var isFocusVisibleRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  /**
   * Should be called if a blur event is fired
   */

  function handleBlurVisible() {
    // checking against potential state variable does not suffice if we focus and blur synchronously.
    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.
    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.
    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751
    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).
    if (isFocusVisibleRef.current) {
      // To detect a tab/window switch, we look for a blur event followed
      // rapidly by a visibility change.
      // If we don't see a visibility change within 100ms, it's probably a
      // regular focus change.
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
        hadFocusVisibleRecently = false;
      }, 100);
      isFocusVisibleRef.current = false;
      return true;
    }

    return false;
  }
  /**
   * Should be called if a blur event is fired
   */


  function handleFocusVisible(event) {
    if (isFocusVisible(event)) {
      isFocusVisibleRef.current = true;
      return true;
    }

    return false;
  }

  return {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref
  };
}

/***/ }),

/***/ 74811:
/***/ (function(module) {

"use strict";


var preserveCamelCase = string => {
  var isLastCharLower = false;
  var isLastCharUpper = false;
  var isLastLastCharUpper = false;

  for (var i = 0; i < string.length; i++) {
    var character = string[i];

    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {
      string = string.slice(0, i) + '-' + string.slice(i);
      isLastCharLower = false;
      isLastLastCharUpper = isLastCharUpper;
      isLastCharUpper = true;
      i++;
    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {
      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);
      isLastLastCharUpper = isLastCharUpper;
      isLastCharUpper = false;
      isLastCharLower = true;
    } else {
      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;
      isLastLastCharUpper = isLastCharUpper;
      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;
    }
  }

  return string;
};

var camelCase = (input, options) => {
  if (!(typeof input === 'string' || Array.isArray(input))) {
    throw new TypeError('Expected the input to be `string | string[]`');
  }

  options = Object.assign({
    pascalCase: false
  }, options);

  var postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;

  if (Array.isArray(input)) {
    input = input.map(x => x.trim()).filter(x => x.length).join('-');
  } else {
    input = input.trim();
  }

  if (input.length === 0) {
    return '';
  }

  if (input.length === 1) {
    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();
  }

  var hasUpperCase = input !== input.toLowerCase();

  if (hasUpperCase) {
    input = preserveCamelCase(input);
  }

  input = input.replace(/^[_.\- ]+/, '').toLowerCase().replace(/[_.\- ]+(\w|$)/g, (_, p1) => p1.toUpperCase()).replace(/\d+(\w|$)/g, m => m.toUpperCase());
  return postProcess(input);
};

module.exports = camelCase; // TODO: Remove this for the next major release

module.exports["default"] = camelCase;

/***/ }),

/***/ 85505:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }
/* harmony export */ });
function toVal(mix) {
  var k,
      y,
      str = '';

  if (typeof mix === 'string' || typeof mix === 'number') {
    str += mix;
  } else if (typeof mix === 'object') {
    if (Array.isArray(mix)) {
      for (k = 0; k < mix.length; k++) {
        if (mix[k]) {
          if (y = toVal(mix[k])) {
            str && (str += ' ');
            str += y;
          }
        }
      }
    } else {
      for (k in mix) {
        if (mix[k]) {
          str && (str += ' ');
          str += k;
        }
      }
    }
  }

  return str;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var i = 0,
      tmp,
      x,
      str = '';

  while (i < arguments.length) {
    if (tmp = arguments[i++]) {
      if (x = toVal(tmp)) {
        str && (str += ' ');
        str += x;
      }
    }
  }

  return str;
}

/***/ }),

/***/ 34041:
/***/ (function() {

"use strict";

// UNUSED EXPORTS: TemplateTag, codeBlock, commaLists, commaListsAnd, commaListsOr, html, inlineArrayTransformer, inlineLists, oneLine, oneLineCommaLists, oneLineCommaListsAnd, oneLineCommaListsOr, oneLineInlineLists, oneLineTrim, removeNonPrintingValuesTransformer, replaceResultTransformer, replaceStringTransformer, replaceSubstitutionTransformer, safeHtml, source, splitStringTransformer, stripIndent, stripIndentTransformer, stripIndents, trimResultTransformer

;// CONCATENATED MODULE: ./node_modules/common-tags/es/TemplateTag/TemplateTag.js
var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _templateObject = _taggedTemplateLiteral(['', ''], ['', '']);

function _taggedTemplateLiteral(strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
/**
 * @class TemplateTag
 * @classdesc Consumes a pipeline of composable transformer plugins and produces a template tag.
 */


var TemplateTag = function () {
  /**
   * constructs a template tag
   * @constructs TemplateTag
   * @param  {...Object} [...transformers] - an array or arguments list of transformers
   * @return {Function}                    - a template tag
   */
  function TemplateTag() {
    var _this = this;

    for (var _len = arguments.length, transformers = Array(_len), _key = 0; _key < _len; _key++) {
      transformers[_key] = arguments[_key];
    }

    _classCallCheck(this, TemplateTag);

    this.tag = function (strings) {
      for (var _len2 = arguments.length, expressions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        expressions[_key2 - 1] = arguments[_key2];
      }

      if (typeof strings === 'function') {
        // if the first argument passed is a function, assume it is a template tag and return
        // an intermediary tag that processes the template using the aforementioned tag, passing the
        // result to our tag
        return _this.interimTag.bind(_this, strings);
      }

      if (typeof strings === 'string') {
        // if the first argument passed is a string, just transform it
        return _this.transformEndResult(strings);
      } // else, return a transformed end result of processing the template with our tag


      strings = strings.map(_this.transformString.bind(_this));
      return _this.transformEndResult(strings.reduce(_this.processSubstitutions.bind(_this, expressions)));
    }; // if first argument is an array, extrude it as a list of transformers


    if (transformers.length > 0 && Array.isArray(transformers[0])) {
      transformers = transformers[0];
    } // if any transformers are functions, this means they are not initiated - automatically initiate them


    this.transformers = transformers.map(function (transformer) {
      return typeof transformer === 'function' ? transformer() : transformer;
    }); // return an ES2015 template tag

    return this.tag;
  }
  /**
   * Applies all transformers to a template literal tagged with this method.
   * If a function is passed as the first argument, assumes the function is a template tag
   * and applies it to the template, returning a template tag.
   * @param  {(Function|String|Array<String>)} strings        - Either a template tag or an array containing template strings separated by identifier
   * @param  {...*}                            ...expressions - Optional list of substitution values.
   * @return {(String|Function)}                              - Either an intermediary tag function or the results of processing the template.
   */


  _createClass(TemplateTag, [{
    key: 'interimTag',

    /**
     * An intermediary template tag that receives a template tag and passes the result of calling the template with the received
     * template tag to our own template tag.
     * @param  {Function}        nextTag          - the received template tag
     * @param  {Array<String>}   template         - the template to process
     * @param  {...*}            ...substitutions - `substitutions` is an array of all substitutions in the template
     * @return {*}                                - the final processed value
     */
    value: function interimTag(previousTag, template) {
      for (var _len3 = arguments.length, substitutions = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
        substitutions[_key3 - 2] = arguments[_key3];
      }

      return this.tag(_templateObject, previousTag.apply(undefined, [template].concat(substitutions)));
    }
    /**
     * Performs bulk processing on the tagged template, transforming each substitution and then
     * concatenating the resulting values into a string.
     * @param  {Array<*>} substitutions - an array of all remaining substitutions present in this template
     * @param  {String}   resultSoFar   - this iteration's result string so far
     * @param  {String}   remainingPart - the template chunk after the current substitution
     * @return {String}                 - the result of joining this iteration's processed substitution with the result
     */

  }, {
    key: 'processSubstitutions',
    value: function processSubstitutions(substitutions, resultSoFar, remainingPart) {
      var substitution = this.transformSubstitution(substitutions.shift(), resultSoFar);
      return ''.concat(resultSoFar, substitution, remainingPart);
    }
    /**
     * Iterate through each transformer, applying the transformer's `onString` method to the template
     * strings before all substitutions are processed.
     * @param {String}  str - The input string
     * @return {String}     - The final results of processing each transformer
     */

  }, {
    key: 'transformString',
    value: function transformString(str) {
      var cb = function cb(res, transform) {
        return transform.onString ? transform.onString(res) : res;
      };

      return this.transformers.reduce(cb, str);
    }
    /**
     * When a substitution is encountered, iterates through each transformer and applies the transformer's
     * `onSubstitution` method to the substitution.
     * @param  {*}      substitution - The current substitution
     * @param  {String} resultSoFar  - The result up to and excluding this substitution.
     * @return {*}                   - The final result of applying all substitution transformations.
     */

  }, {
    key: 'transformSubstitution',
    value: function transformSubstitution(substitution, resultSoFar) {
      var cb = function cb(res, transform) {
        return transform.onSubstitution ? transform.onSubstitution(res, resultSoFar) : res;
      };

      return this.transformers.reduce(cb, substitution);
    }
    /**
     * Iterates through each transformer, applying the transformer's `onEndResult` method to the
     * template literal after all substitutions have finished processing.
     * @param  {String} endResult - The processed template, just before it is returned from the tag
     * @return {String}           - The final results of processing each transformer
     */

  }, {
    key: 'transformEndResult',
    value: function transformEndResult(endResult) {
      var cb = function cb(res, transform) {
        return transform.onEndResult ? transform.onEndResult(res) : res;
      };

      return this.transformers.reduce(cb, endResult);
    }
  }]);

  return TemplateTag;
}();

/* harmony default export */ var TemplateTag_TemplateTag = (TemplateTag);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/TemplateTag/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/inlineArrayTransformer/inlineArrayTransformer.js
var defaults = {
  separator: '',
  conjunction: '',
  serial: false
};
/**
 * Converts an array substitution to a string containing a list
 * @param  {String} [opts.separator = ''] - the character that separates each item
 * @param  {String} [opts.conjunction = '']  - replace the last separator with this
 * @param  {Boolean} [opts.serial = false] - include the separator before the conjunction? (Oxford comma use-case)
 *
 * @return {Object}                     - a TemplateTag transformer
 */

var inlineArrayTransformer = function inlineArrayTransformer() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults;
  return {
    onSubstitution: function onSubstitution(substitution, resultSoFar) {
      // only operate on arrays
      if (Array.isArray(substitution)) {
        var arrayLength = substitution.length;
        var separator = opts.separator;
        var conjunction = opts.conjunction;
        var serial = opts.serial; // join each item in the array into a string where each item is separated by separator
        // be sure to maintain indentation

        var indent = resultSoFar.match(/(\n?[^\S\n]+)$/);

        if (indent) {
          substitution = substitution.join(separator + indent[1]);
        } else {
          substitution = substitution.join(separator + ' ');
        } // if conjunction is set, replace the last separator with conjunction, but only if there is more than one substitution


        if (conjunction && arrayLength > 1) {
          var separatorIndex = substitution.lastIndexOf(separator);
          substitution = substitution.slice(0, separatorIndex) + (serial ? separator : '') + ' ' + conjunction + substitution.slice(separatorIndex + 1);
        }
      }

      return substitution;
    }
  };
};

/* harmony default export */ var inlineArrayTransformer_inlineArrayTransformer = (inlineArrayTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/inlineArrayTransformer/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/stripIndentTransformer/stripIndentTransformer.js
function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return Array.from(arr);
  }
}
/**
 * strips indentation from a template literal
 * @param  {String} type = 'initial' - whether to remove all indentation or just leading indentation. can be 'all' or 'initial'
 * @return {Object}                  - a TemplateTag transformer
 */


var stripIndentTransformer = function stripIndentTransformer() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';
  return {
    onEndResult: function onEndResult(endResult) {
      if (type === 'initial') {
        // remove the shortest leading indentation from each line
        var match = endResult.match(/^[^\S\n]*(?=\S)/gm);
        var indent = match && Math.min.apply(Math, _toConsumableArray(match.map(function (el) {
          return el.length;
        })));

        if (indent) {
          var regexp = new RegExp('^.{' + indent + '}', 'gm');
          return endResult.replace(regexp, '');
        }

        return endResult;
      }

      if (type === 'all') {
        // remove all indentation from each line
        return endResult.replace(/^[^\S\n]+/gm, '');
      }

      throw new Error('Unknown type: ' + type);
    }
  };
};

/* harmony default export */ var stripIndentTransformer_stripIndentTransformer = (stripIndentTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/trimResultTransformer/trimResultTransformer.js
/**
 * TemplateTag transformer that trims whitespace on the end result of a tagged template
 * @param  {String} side = '' - The side of the string to trim. Can be 'start' or 'end' (alternatively 'left' or 'right')
 * @return {Object}           - a TemplateTag transformer
 */
var trimResultTransformer = function trimResultTransformer() {
  var side = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return {
    onEndResult: function onEndResult(endResult) {
      if (side === '') {
        return endResult.trim();
      }

      side = side.toLowerCase();

      if (side === 'start' || side === 'left') {
        return endResult.replace(/^\s*/, '');
      }

      if (side === 'end' || side === 'right') {
        return endResult.replace(/\s*$/, '');
      }

      throw new Error('Side not supported: ' + side);
    }
  };
};

/* harmony default export */ var trimResultTransformer_trimResultTransformer = (trimResultTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/commaLists/commaLists.js




var commaLists = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer({
  separator: ','
}), stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer);
/* harmony default export */ var commaLists_commaLists = ((/* unused pure expression or super */ null && (commaLists)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/commaLists/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/commaListsAnd/commaListsAnd.js




var commaListsAnd = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer({
  separator: ',',
  conjunction: 'and'
}), stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer);
/* harmony default export */ var commaListsAnd_commaListsAnd = ((/* unused pure expression or super */ null && (commaListsAnd)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/commaListsAnd/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/commaListsOr/commaListsOr.js




var commaListsOr = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer({
  separator: ',',
  conjunction: 'or'
}), stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer);
/* harmony default export */ var commaListsOr_commaListsOr = ((/* unused pure expression or super */ null && (commaListsOr)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/commaListsOr/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/splitStringTransformer/splitStringTransformer.js
var splitStringTransformer = function splitStringTransformer(splitBy) {
  return {
    onSubstitution: function onSubstitution(substitution, resultSoFar) {
      if (splitBy != null && typeof splitBy === 'string') {
        if (typeof substitution === 'string' && substitution.includes(splitBy)) {
          substitution = substitution.split(splitBy);
        }
      } else {
        throw new Error('You need to specify a string character to split by.');
      }

      return substitution;
    }
  };
};

/* harmony default export */ var splitStringTransformer_splitStringTransformer = (splitStringTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/removeNonPrintingValuesTransformer/removeNonPrintingValuesTransformer.js
var isValidValue = function isValidValue(x) {
  return x != null && !Number.isNaN(x) && typeof x !== 'boolean';
};

var removeNonPrintingValuesTransformer = function removeNonPrintingValuesTransformer() {
  return {
    onSubstitution: function onSubstitution(substitution) {
      if (Array.isArray(substitution)) {
        return substitution.filter(isValidValue);
      }

      if (isValidValue(substitution)) {
        return substitution;
      }

      return '';
    }
  };
};

/* harmony default export */ var removeNonPrintingValuesTransformer_removeNonPrintingValuesTransformer = (removeNonPrintingValuesTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/html/html.js






var html = new TemplateTag_TemplateTag(splitStringTransformer_splitStringTransformer('\n'), removeNonPrintingValuesTransformer_removeNonPrintingValuesTransformer, inlineArrayTransformer_inlineArrayTransformer, stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer);
/* harmony default export */ var html_html = ((/* unused pure expression or super */ null && (html)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/html/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/codeBlock/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/source/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/replaceSubstitutionTransformer/replaceSubstitutionTransformer.js
var replaceSubstitutionTransformer = function replaceSubstitutionTransformer(replaceWhat, replaceWith) {
  return {
    onSubstitution: function onSubstitution(substitution, resultSoFar) {
      if (replaceWhat == null || replaceWith == null) {
        throw new Error('replaceSubstitutionTransformer requires at least 2 arguments.');
      } // Do not touch if null or undefined


      if (substitution == null) {
        return substitution;
      } else {
        return substitution.toString().replace(replaceWhat, replaceWith);
      }
    }
  };
};

/* harmony default export */ var replaceSubstitutionTransformer_replaceSubstitutionTransformer = (replaceSubstitutionTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/safeHtml/safeHtml.js






var safeHtml = new TemplateTag_TemplateTag(splitStringTransformer_splitStringTransformer('\n'), inlineArrayTransformer_inlineArrayTransformer, stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer, replaceSubstitutionTransformer_replaceSubstitutionTransformer(/&/g, '&amp;'), replaceSubstitutionTransformer_replaceSubstitutionTransformer(/</g, '&lt;'), replaceSubstitutionTransformer_replaceSubstitutionTransformer(/>/g, '&gt;'), replaceSubstitutionTransformer_replaceSubstitutionTransformer(/"/g, '&quot;'), replaceSubstitutionTransformer_replaceSubstitutionTransformer(/'/g, '&#x27;'), replaceSubstitutionTransformer_replaceSubstitutionTransformer(/`/g, '&#x60;'));
/* harmony default export */ var safeHtml_safeHtml = ((/* unused pure expression or super */ null && (safeHtml)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/safeHtml/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/replaceResultTransformer/replaceResultTransformer.js
/**
 * Replaces tabs, newlines and spaces with the chosen value when they occur in sequences
 * @param  {(String|RegExp)} replaceWhat - the value or pattern that should be replaced
 * @param  {*}               replaceWith - the replacement value
 * @return {Object}                      - a TemplateTag transformer
 */
var replaceResultTransformer = function replaceResultTransformer(replaceWhat, replaceWith) {
  return {
    onEndResult: function onEndResult(endResult) {
      if (replaceWhat == null || replaceWith == null) {
        throw new Error('replaceResultTransformer requires at least 2 arguments.');
      }

      return endResult.replace(replaceWhat, replaceWith);
    }
  };
};

/* harmony default export */ var replaceResultTransformer_replaceResultTransformer = (replaceResultTransformer);
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLine/oneLine.js



var oneLine = new TemplateTag_TemplateTag(replaceResultTransformer_replaceResultTransformer(/(?:\n(?:\s*))+/g, ' '), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var oneLine_oneLine = ((/* unused pure expression or super */ null && (oneLine)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLine/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineTrim/oneLineTrim.js



var oneLineTrim = new TemplateTag_TemplateTag(replaceResultTransformer_replaceResultTransformer(/(?:\n\s*)/g, ''), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var oneLineTrim_oneLineTrim = ((/* unused pure expression or super */ null && (oneLineTrim)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineTrim/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineCommaLists/oneLineCommaLists.js




var oneLineCommaLists = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer({
  separator: ','
}), replaceResultTransformer_replaceResultTransformer(/(?:\s+)/g, ' '), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var oneLineCommaLists_oneLineCommaLists = ((/* unused pure expression or super */ null && (oneLineCommaLists)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineCommaLists/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineCommaListsOr/oneLineCommaListsOr.js




var oneLineCommaListsOr = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer({
  separator: ',',
  conjunction: 'or'
}), replaceResultTransformer_replaceResultTransformer(/(?:\s+)/g, ' '), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var oneLineCommaListsOr_oneLineCommaListsOr = ((/* unused pure expression or super */ null && (oneLineCommaListsOr)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineCommaListsOr/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineCommaListsAnd/oneLineCommaListsAnd.js




var oneLineCommaListsAnd = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer({
  separator: ',',
  conjunction: 'and'
}), replaceResultTransformer_replaceResultTransformer(/(?:\s+)/g, ' '), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var oneLineCommaListsAnd_oneLineCommaListsAnd = ((/* unused pure expression or super */ null && (oneLineCommaListsAnd)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineCommaListsAnd/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/inlineLists/inlineLists.js




var inlineLists = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer, stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer);
/* harmony default export */ var inlineLists_inlineLists = ((/* unused pure expression or super */ null && (inlineLists)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/inlineLists/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineInlineLists/oneLineInlineLists.js




var oneLineInlineLists = new TemplateTag_TemplateTag(inlineArrayTransformer_inlineArrayTransformer, replaceResultTransformer_replaceResultTransformer(/(?:\s+)/g, ' '), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var oneLineInlineLists_oneLineInlineLists = ((/* unused pure expression or super */ null && (oneLineInlineLists)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/oneLineInlineLists/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/stripIndent/stripIndent.js



var stripIndent = new TemplateTag_TemplateTag(stripIndentTransformer_stripIndentTransformer, trimResultTransformer_trimResultTransformer);
/* harmony default export */ var stripIndent_stripIndent = ((/* unused pure expression or super */ null && (stripIndent)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/stripIndent/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/stripIndents/stripIndents.js



var stripIndents = new TemplateTag_TemplateTag(stripIndentTransformer_stripIndentTransformer('all'), trimResultTransformer_trimResultTransformer);
/* harmony default export */ var stripIndents_stripIndents = ((/* unused pure expression or super */ null && (stripIndents)));
;// CONCATENATED MODULE: ./node_modules/common-tags/es/stripIndents/index.js


;// CONCATENATED MODULE: ./node_modules/common-tags/es/index.js
// core

 // transformers
















 // tags


































/***/ }),

/***/ 44564:
/***/ (function(module) {

"use strict";


var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }

  return str.replace(matchOperatorsRe, '\\$&');
};

/***/ }),

/***/ 46494:
/***/ (function(module) {

"use strict";


module.exports = Object.assign;

/***/ }),

/***/ 15706:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(9789);
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */


var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;

/***/ }),

/***/ 70841:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var b = "function" === typeof Symbol && Symbol.for,
    c = b ? Symbol.for("react.element") : 60103,
    d = b ? Symbol.for("react.portal") : 60106,
    e = b ? Symbol.for("react.fragment") : 60107,
    f = b ? Symbol.for("react.strict_mode") : 60108,
    g = b ? Symbol.for("react.profiler") : 60114,
    h = b ? Symbol.for("react.provider") : 60109,
    k = b ? Symbol.for("react.context") : 60110,
    l = b ? Symbol.for("react.async_mode") : 60111,
    m = b ? Symbol.for("react.concurrent_mode") : 60111,
    n = b ? Symbol.for("react.forward_ref") : 60112,
    p = b ? Symbol.for("react.suspense") : 60113,
    q = b ? Symbol.for("react.suspense_list") : 60120,
    r = b ? Symbol.for("react.memo") : 60115,
    t = b ? Symbol.for("react.lazy") : 60116,
    v = b ? Symbol.for("react.block") : 60121,
    w = b ? Symbol.for("react.fundamental") : 60117,
    x = b ? Symbol.for("react.responder") : 60118,
    y = b ? Symbol.for("react.scope") : 60119;

function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;

    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;

          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;

              default:
                return u;
            }

        }

      case d:
        return u;
    }
  }
}

function A(a) {
  return z(a) === m;
}

exports.AsyncMode = l;
exports.ConcurrentMode = m;
exports.ContextConsumer = k;
exports.ContextProvider = h;
exports.Element = c;
exports.ForwardRef = n;
exports.Fragment = e;
exports.Lazy = t;
exports.Memo = r;
exports.Portal = d;
exports.Profiler = g;
exports.StrictMode = f;
exports.Suspense = p;

exports.isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};

exports.isConcurrentMode = A;

exports.isContextConsumer = function (a) {
  return z(a) === k;
};

exports.isContextProvider = function (a) {
  return z(a) === h;
};

exports.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};

exports.isForwardRef = function (a) {
  return z(a) === n;
};

exports.isFragment = function (a) {
  return z(a) === e;
};

exports.isLazy = function (a) {
  return z(a) === t;
};

exports.isMemo = function (a) {
  return z(a) === r;
};

exports.isPortal = function (a) {
  return z(a) === d;
};

exports.isProfiler = function (a) {
  return z(a) === g;
};

exports.isStrictMode = function (a) {
  return z(a) === f;
};

exports.isSuspense = function (a) {
  return z(a) === p;
};

exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};

exports.typeOf = z;

/***/ }),

/***/ 9789:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(70841);
} else {}

/***/ }),

/***/ 30255:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "wT": function() { return /* binding */ SnackbarProvider; },
  "Ds": function() { return /* binding */ useSnackbar; }
});

// UNUSED EXPORTS: SnackbarContent, withSnackbar

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73935);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/material/Slide/Slide.js
var Slide = __webpack_require__(57635);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/Collapse/Collapse.js + 1 modules
var Collapse = __webpack_require__(96037);
// EXTERNAL MODULE: ./node_modules/@mui/material/SvgIcon/SvgIcon.js + 1 modules
var SvgIcon = __webpack_require__(67648);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useForkRef.js
var useForkRef = __webpack_require__(28127);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/useEventCallback.js
var useEventCallback = __webpack_require__(13634);
// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/ownerDocument.js
var ownerDocument = __webpack_require__(74694);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js

 // TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1



function mapEventPropToEvent(eventProp) {
  return eventProp.substring(2).toLowerCase();
}

function clickedRootScrollbar(event, doc) {
  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;
}
/**
 * Listen for click events that occur somewhere in the document, outside of the element itself.
 * For instance, if you need to hide a menu when people click anywhere else on your page.
 *
 * Demos:
 *
 * - [Click Away Listener](https://mui.com/components/click-away-listener/)
 * - [Menus](https://mui.com/components/menus/)
 *
 * API:
 *
 * - [ClickAwayListener API](https://mui.com/api/click-away-listener/)
 */


function ClickAwayListener(props) {
  var {
    children,
    disableReactTree = false,
    mouseEvent = 'onClick',
    onClickAway,
    touchEvent = 'onTouchEnd'
  } = props;
  var movedRef = react.useRef(false);
  var nodeRef = react.useRef(null);
  var activatedRef = react.useRef(false);
  var syntheticEventRef = react.useRef(false);
  react.useEffect(() => {
    // Ensure that this component is not "activated" synchronously.
    // https://github.com/facebook/react/issues/20074
    setTimeout(() => {
      activatedRef.current = true;
    }, 0);
    return () => {
      activatedRef.current = false;
    };
  }, []);
  var handleRef = (0,useForkRef/* default */.Z)( // @ts-expect-error TODO upstream fix
  children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:
  //
  // event.preventDefault() is meant to stop default behaviors like
  // clicking a checkbox to check it, hitting a button to submit a form,
  // and hitting left arrow to move the cursor in a text input etc.
  // Only special HTML elements have these default behaviors.

  var handleClickAway = (0,useEventCallback/* default */.Z)(event => {
    // Given developers can stop the propagation of the synthetic event,
    // we can only be confident with a positive value.
    var insideReactTree = syntheticEventRef.current;
    syntheticEventRef.current = false;
    var doc = (0,ownerDocument/* default */.Z)(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind
    // 2. The child might render null.
    // 3. Behave like a blur listener.

    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {
      return;
    } // Do not act if user performed touchmove


    if (movedRef.current) {
      movedRef.current = false;
      return;
    }

    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js

    if (event.composedPath) {
      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
    } else {
      insideDOM = !doc.documentElement.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node
      event.target) || nodeRef.current.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node
      event.target);
    }

    if (!insideDOM && (disableReactTree || !insideReactTree)) {
      onClickAway(event);
    }
  }); // Keep track of mouse/touch events that bubbled up through the portal.

  var createHandleSynthetic = handlerName => event => {
    syntheticEventRef.current = true;
    var childrenPropsHandler = children.props[handlerName];

    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };

  var childrenProps = {
    ref: handleRef
  };

  if (touchEvent !== false) {
    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
  }

  react.useEffect(() => {
    if (touchEvent !== false) {
      var mappedTouchEvent = mapEventPropToEvent(touchEvent);
      var doc = (0,ownerDocument/* default */.Z)(nodeRef.current);

      var handleTouchMove = () => {
        movedRef.current = true;
      };

      doc.addEventListener(mappedTouchEvent, handleClickAway);
      doc.addEventListener('touchmove', handleTouchMove);
      return () => {
        doc.removeEventListener(mappedTouchEvent, handleClickAway);
        doc.removeEventListener('touchmove', handleTouchMove);
      };
    }

    return undefined;
  }, [handleClickAway, touchEvent]);

  if (mouseEvent !== false) {
    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
  }

  react.useEffect(() => {
    if (mouseEvent !== false) {
      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);
      var doc = (0,ownerDocument/* default */.Z)(nodeRef.current);
      doc.addEventListener(mappedMouseEvent, handleClickAway);
      return () => {
        doc.removeEventListener(mappedMouseEvent, handleClickAway);
      };
    }

    return undefined;
  }, [handleClickAway, mouseEvent]);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(react.Fragment, {
    children: /*#__PURE__*/react.cloneElement(children, childrenProps)
  });
}

 false ? 0 : void 0;

if (false) {}

/* harmony default export */ var ClickAwayListener_ClickAwayListener = (ClickAwayListener);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(15706);
;// CONCATENATED MODULE: ./node_modules/notistack/dist/notistack.esm.js










function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

var SnackbarContext = /*#__PURE__*/react.createContext();
var allClasses = {
  mui: {
    root: {},
    anchorOriginTopCenter: {},
    anchorOriginBottomCenter: {},
    anchorOriginTopRight: {},
    anchorOriginBottomRight: {},
    anchorOriginTopLeft: {},
    anchorOriginBottomLeft: {}
  },
  container: {
    containerRoot: {},
    containerAnchorOriginTopCenter: {},
    containerAnchorOriginBottomCenter: {},
    containerAnchorOriginTopRight: {},
    containerAnchorOriginBottomRight: {},
    containerAnchorOriginTopLeft: {},
    containerAnchorOriginBottomLeft: {}
  }
};
var MESSAGES = {
  NO_PERSIST_ALL: 'WARNING - notistack: Reached maxSnack while all enqueued snackbars have \'persist\' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.'
};
var SNACKBAR_INDENTS = {
  view: {
    "default": 20,
    dense: 4
  },
  snackbar: {
    "default": 6,
    dense: 2
  }
};
var DEFAULTS = {
  maxSnack: 3,
  dense: false,
  hideIconVariant: false,
  variant: 'default',
  autoHideDuration: 5000,
  anchorOrigin: {
    vertical: 'bottom',
    horizontal: 'left'
  },
  TransitionComponent: Slide/* default */.Z,
  transitionDuration: {
    enter: 225,
    exit: 195
  }
};

var capitalise = function capitalise(text) {
  return text.charAt(0).toUpperCase() + text.slice(1);
};

var originKeyExtractor = function originKeyExtractor(anchor) {
  return "" + capitalise(anchor.vertical) + capitalise(anchor.horizontal);
};
/**
 * Omit SnackbarContainer class keys that are not needed for SnackbarItem
 */


var omitContainerKeys = function omitContainerKeys(classes) {
  return (// @ts-ignore
    Object.keys(classes).filter(function (key) {
      return !allClasses.container[key];
    }).reduce(function (obj, key) {
      var _extends2;

      return _extends({}, obj, (_extends2 = {}, _extends2[key] = classes[key], _extends2));
    }, {})
  );
};

var REASONS = {
  TIMEOUT: 'timeout',
  CLICKAWAY: 'clickaway',
  MAXSNACK: 'maxsnack',
  INSTRUCTED: 'instructed'
};
/** Tranforms classes name */

var transformer = {
  toContainerAnchorOrigin: function toContainerAnchorOrigin(origin) {
    return "containerAnchorOrigin" + origin;
  },
  toAnchorOrigin: function toAnchorOrigin(_ref) {
    var vertical = _ref.vertical,
        horizontal = _ref.horizontal;
    return "anchorOrigin" + capitalise(vertical) + capitalise(horizontal);
  },
  toVariant: function toVariant(variant) {
    return "variant" + capitalise(variant);
  }
};

var isDefined = function isDefined(value) {
  return !!value || value === 0;
};

var numberOrNull = function numberOrNull(numberish) {
  return typeof numberish === 'number' || numberish === null;
}; // @ts-ignore


var merge = function merge(options, props, defaults) {
  return function (name) {
    if (name === 'autoHideDuration') {
      if (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;
      if (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;
      return DEFAULTS.autoHideDuration;
    }

    return options[name] || props[name] || defaults[name];
  };
};

function objectMerge(options, props, defaults) {
  if (options === void 0) {
    options = {};
  }

  if (props === void 0) {
    props = {};
  }

  if (defaults === void 0) {
    defaults = {};
  }

  return _extends({}, defaults, {}, props, {}, options);
}

var componentName = 'SnackbarContent';
var classes = {
  root: componentName + "-root"
};
var Root = /*#__PURE__*/(0,styled/* default */.ZP)('div')(function (_ref) {
  var _ref2, _ref3;

  var theme = _ref.theme;
  return _ref3 = {}, _ref3["&." + classes.root] = (_ref2 = {
    display: 'flex',
    flexWrap: 'wrap',
    flexGrow: 1
  }, _ref2[theme.breakpoints.up('sm')] = {
    flexGrow: 'initial',
    minWidth: 288
  }, _ref2), _ref3;
});
var SnackbarContent = /*#__PURE__*/(0,react.forwardRef)(function (_ref4, ref) {
  var className = _ref4.className,
      props = _objectWithoutPropertiesLoose(_ref4, ["className"]);

  return react.createElement(Root, Object.assign({
    ref: ref,
    className: (0,clsx_m["default"])(classes.root, className)
  }, props));
});
var DIRECTION = {
  right: 'left',
  left: 'right',
  bottom: 'up',
  top: 'down'
};

var getTransitionDirection = function getTransitionDirection(anchorOrigin) {
  if (anchorOrigin.horizontal !== 'center') {
    return DIRECTION[anchorOrigin.horizontal];
  }

  return DIRECTION[anchorOrigin.vertical];
};

var CheckIcon = function CheckIcon(props) {
  return react.createElement(SvgIcon/* default */.Z, Object.assign({}, props), react.createElement("path", {
    d: "M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z"
  }));
};

var WarningIcon = function WarningIcon(props) {
  return react.createElement(SvgIcon/* default */.Z, Object.assign({}, props), react.createElement("path", {
    d: "M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"
  }));
};

var ErrorIcon = function ErrorIcon(props) {
  return react.createElement(SvgIcon/* default */.Z, Object.assign({}, props), react.createElement("path", {
    d: "M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z"
  }));
};

var InfoIcon = function InfoIcon(props) {
  return react.createElement(SvgIcon/* default */.Z, Object.assign({}, props), react.createElement("path", {
    d: "M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z"
  }));
};

var iconStyles = {
  fontSize: 20,
  marginInlineEnd: 8
};
var defaultIconVariants = {
  "default": undefined,
  success: /*#__PURE__*/react.createElement(CheckIcon, {
    style: iconStyles
  }),
  warning: /*#__PURE__*/react.createElement(WarningIcon, {
    style: iconStyles
  }),
  error: /*#__PURE__*/react.createElement(ErrorIcon, {
    style: iconStyles
  }),
  info: /*#__PURE__*/react.createElement(InfoIcon, {
    style: iconStyles
  })
};
/**
 * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js
 */

function createChainedFunction(funcs, extraArg) {
  return funcs.reduce(function (acc, func) {
    if (func == null) return acc;

    if (false) {}

    return function chainedFunction() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var argums = [].concat(args);

      if (extraArg && argums.indexOf(extraArg) === -1) {
        argums.push(extraArg);
      }

      acc.apply(this, argums);
      func.apply(this, argums);
    };
  }, function () {});
}
/**
 * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/useEventCallback.js
 */


var useEnhancedEffect = typeof window !== 'undefined' ? react.useLayoutEffect : react.useEffect;

function notistack_esm_useEventCallback(fn) {
  var ref = (0,react.useRef)(fn);
  useEnhancedEffect(function () {
    ref.current = fn;
  });
  return (0,react.useCallback)(function () {
    return ref.current.apply(void 0, arguments);
  }, []);
}

var Snackbar = /*#__PURE__*/(0,react.forwardRef)(function (props, ref) {
  var children = props.children,
      autoHideDuration = props.autoHideDuration,
      ClickAwayListenerProps = props.ClickAwayListenerProps,
      _props$disableWindowB = props.disableWindowBlurListener,
      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,
      onClose = props.onClose,
      onMouseEnter = props.onMouseEnter,
      onMouseLeave = props.onMouseLeave,
      open = props.open,
      resumeHideDuration = props.resumeHideDuration,
      other = _objectWithoutPropertiesLoose(props, ["children", "autoHideDuration", "ClickAwayListenerProps", "disableWindowBlurListener", "onClose", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration"]);

  var timerAutoHide = (0,react.useRef)();
  var handleClose = notistack_esm_useEventCallback(function () {
    if (onClose) {
      onClose.apply(void 0, arguments);
    }
  });
  var setAutoHideTimer = notistack_esm_useEventCallback(function (autoHideDurationParam) {
    if (!onClose || autoHideDurationParam == null) {
      return;
    }

    clearTimeout(timerAutoHide.current);
    timerAutoHide.current = setTimeout(function () {
      handleClose(null, REASONS.TIMEOUT);
    }, autoHideDurationParam);
  });
  (0,react.useEffect)(function () {
    if (open) {
      setAutoHideTimer(autoHideDuration);
    }

    return function () {
      clearTimeout(timerAutoHide.current);
    };
  }, [open, autoHideDuration, setAutoHideTimer]);
  /**
   * Pause the timer when the user is interacting with the Snackbar
   * or when the user hide the window.
   */

  var handlePause = function handlePause() {
    clearTimeout(timerAutoHide.current);
  };
  /**
   * Restart the timer when the user is no longer interacting with the Snackbar
   * or when the window is shown back.
   */


  var handleResume = (0,react.useCallback)(function () {
    if (autoHideDuration != null) {
      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
    }
  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);

  var handleMouseEnter = function handleMouseEnter(event) {
    if (onMouseEnter) {
      onMouseEnter(event);
    }

    handlePause();
  };

  var handleMouseLeave = function handleMouseLeave(event) {
    if (onMouseLeave) {
      onMouseLeave(event);
    }

    handleResume();
  };

  var handleClickAway = function handleClickAway(event) {
    if (onClose) {
      onClose(event, REASONS.CLICKAWAY);
    }
  };

  (0,react.useEffect)(function () {
    if (!disableWindowBlurListener && open) {
      window.addEventListener('focus', handleResume);
      window.addEventListener('blur', handlePause);
      return function () {
        window.removeEventListener('focus', handleResume);
        window.removeEventListener('blur', handlePause);
      };
    }

    return undefined;
  }, [disableWindowBlurListener, handleResume, open]);
  return (0,react.createElement)(ClickAwayListener_ClickAwayListener, _extends({
    onClickAway: handleClickAway
  }, ClickAwayListenerProps), (0,react.createElement)("div", _extends({
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    ref: ref
  }, other), children));
});
var componentName$1 = 'SnackbarItem';
var classes$1 = {
  contentRoot: componentName$1 + "-contentRoot",
  lessPadding: componentName$1 + "-lessPadding",
  variantSuccess: componentName$1 + "-variantSuccess",
  variantError: componentName$1 + "-variantError",
  variantInfo: componentName$1 + "-variantInfo",
  variantWarning: componentName$1 + "-variantWarning",
  message: componentName$1 + "-message",
  action: componentName$1 + "-action",
  wrappedRoot: componentName$1 + "-wrappedRoot"
};
var StyledSnackbar = /*#__PURE__*/(0,styled/* default */.ZP)(Snackbar)(function (_ref) {
  var _ref2;

  var theme = _ref.theme;
  var mode = theme.palette.mode || theme.palette.type;
  var backgroundColor = (0,colorManipulator/* emphasize */._4)(theme.palette.background["default"], mode === 'light' ? 0.8 : 0.98);
  return _ref2 = {}, _ref2["&." + classes$1.wrappedRoot] = {
    position: 'relative',
    transform: 'translateX(0)',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  }, _ref2["." + classes$1.contentRoot] = _extends({}, theme.typography.body2, {
    backgroundColor: backgroundColor,
    color: theme.palette.getContrastText(backgroundColor),
    alignItems: 'center',
    padding: '6px 16px',
    borderRadius: '4px',
    boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)'
  }), _ref2["." + classes$1.lessPadding] = {
    paddingLeft: 8 * 2.5
  }, _ref2["." + classes$1.variantSuccess] = {
    backgroundColor: '#43a047',
    color: '#fff'
  }, _ref2["." + classes$1.variantError] = {
    backgroundColor: '#d32f2f',
    color: '#fff'
  }, _ref2["." + classes$1.variantInfo] = {
    backgroundColor: '#2196f3',
    color: '#fff'
  }, _ref2["." + classes$1.variantWarning] = {
    backgroundColor: '#ff9800',
    color: '#fff'
  }, _ref2["." + classes$1.message] = {
    display: 'flex',
    alignItems: 'center',
    padding: '8px 0'
  }, _ref2["." + classes$1.action] = {
    display: 'flex',
    alignItems: 'center',
    marginLeft: 'auto',
    paddingLeft: 16,
    marginRight: -8
  }, _ref2;
});

var SnackbarItem = function SnackbarItem(_ref3) {
  var propClasses = _ref3.classes,
      props = _objectWithoutPropertiesLoose(_ref3, ["classes"]);

  var timeout = (0,react.useRef)();

  var _useState = (0,react.useState)(true),
      collapsed = _useState[0],
      setCollapsed = _useState[1];

  (0,react.useEffect)(function () {
    return function () {
      if (timeout.current) {
        clearTimeout(timeout.current);
      }
    };
  }, []);
  var handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);

  var handleEntered = function handleEntered() {
    if (props.snack.requestClose) {
      handleClose(null, REASONS.INSTRCUTED);
    }
  };

  var handleExitedScreen = function handleExitedScreen() {
    timeout.current = setTimeout(function () {
      setCollapsed(!collapsed);
    }, 125);
  };

  var style = props.style,
      otherAriaAttributes = props.ariaAttributes,
      otherClassName = props.className,
      hideIconVariant = props.hideIconVariant,
      iconVariant = props.iconVariant,
      snack = props.snack,
      otherAction = props.action,
      otherContent = props.content,
      otherTranComponent = props.TransitionComponent,
      otherTranProps = props.TransitionProps,
      otherTranDuration = props.transitionDuration,
      other = _objectWithoutPropertiesLoose(props, ["style", "dense", "ariaAttributes", "className", "hideIconVariant", "iconVariant", "snack", "action", "content", "TransitionComponent", "TransitionProps", "transitionDuration", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting"]);

  var key = snack.key,
      open = snack.open,
      singleClassName = snack.className,
      variant = snack.variant,
      singleContent = snack.content,
      singleAction = snack.action,
      singleAriaAttributes = snack.ariaAttributes,
      anchorOrigin = snack.anchorOrigin,
      snackMessage = snack.message,
      singleTranComponent = snack.TransitionComponent,
      singleTranProps = snack.TransitionProps,
      singleTranDuration = snack.transitionDuration,
      singleSnackProps = _objectWithoutPropertiesLoose(snack, ["persist", "key", "open", "entered", "requestClose", "className", "variant", "content", "action", "ariaAttributes", "anchorOrigin", "message", "TransitionComponent", "TransitionProps", "transitionDuration", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting"]);

  var icon = _extends({}, defaultIconVariants, {}, iconVariant)[variant];

  var ariaAttributes = _extends({
    'aria-describedby': 'notistack-snackbar'
  }, objectMerge(singleAriaAttributes, otherAriaAttributes));

  var TransitionComponent = singleTranComponent || otherTranComponent || DEFAULTS.TransitionComponent;
  var transitionDuration = objectMerge(singleTranDuration, otherTranDuration, DEFAULTS.transitionDuration);

  var transitionProps = _extends({
    direction: getTransitionDirection(anchorOrigin)
  }, objectMerge(singleTranProps, otherTranProps));

  var action = singleAction || otherAction;

  if (typeof action === 'function') {
    action = action(key);
  }

  var content = singleContent || otherContent;

  if (typeof content === 'function') {
    content = content(key, snack.message);
  } // eslint-disable-next-line operator-linebreak


  var callbacks = ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce(function (acc, cbName) {
    var _extends2;

    return _extends({}, acc, (_extends2 = {}, _extends2[cbName] = createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key), _extends2));
  }, {});
  return react.createElement(Collapse/* default */.Z, {
    unmountOnExit: true,
    timeout: 175,
    "in": collapsed,
    onExited: callbacks.onExited
  }, react.createElement(StyledSnackbar, Object.assign({}, other, singleSnackProps, {
    open: open,
    className: (0,clsx_m["default"])(propClasses.root, classes$1.wrappedRoot, propClasses[transformer.toAnchorOrigin(anchorOrigin)]),
    onClose: handleClose
  }), react.createElement(TransitionComponent, Object.assign({
    appear: true,
    "in": open,
    timeout: transitionDuration
  }, transitionProps, {
    onExit: callbacks.onExit,
    onExiting: callbacks.onExiting,
    onExited: handleExitedScreen,
    onEnter: callbacks.onEnter,
    onEntering: callbacks.onEntering,
    // order matters. first callbacks.onEntered to set entered: true,
    // then handleEntered to check if there's a request for closing
    onEntered: createChainedFunction([callbacks.onEntered, handleEntered])
  }), content || react.createElement(SnackbarContent, Object.assign({}, ariaAttributes, {
    role: "alert",
    style: style,
    className: (0,clsx_m["default"])(classes$1.contentRoot, classes$1[transformer.toVariant(variant)], propClasses[transformer.toVariant(variant)], otherClassName, singleClassName, !hideIconVariant && icon && classes$1.lessPadding)
  }), react.createElement("div", {
    id: ariaAttributes['aria-describedby'],
    className: classes$1.message
  }, !hideIconVariant ? icon : null, snackMessage), action && react.createElement("div", {
    className: classes$1.action
  }, action)))));
};

var collapse = {
  // Material-UI 4.12.x and above uses MuiCollapse-root; earlier versions use
  // Mui-Collapse-container.  https://github.com/mui-org/material-ui/pull/24084
  container: '& > .MuiCollapse-container, & > .MuiCollapse-root',
  wrapper: '& > .MuiCollapse-container > .MuiCollapse-wrapper, & > .MuiCollapse-root > .MuiCollapse-wrapper'
};
var xsWidthMargin = 16;
var componentName$2 = 'SnackbarContainer';
var classes$2 = {
  root: componentName$2 + "-root",
  rootDense: componentName$2 + "-rootDense",
  top: componentName$2 + "-top",
  bottom: componentName$2 + "-bottom",
  left: componentName$2 + "-left",
  right: componentName$2 + "-right",
  center: componentName$2 + "-center"
};
var Root$1 = /*#__PURE__*/(0,styled/* default */.ZP)('div')(function (_ref) {
  var _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;

  var theme = _ref.theme;
  return _ref7 = {}, _ref7["&." + classes$2.root] = (_ref2 = {
    boxSizing: 'border-box',
    display: 'flex',
    maxHeight: '100%',
    position: 'fixed',
    zIndex: theme.zIndex.snackbar,
    height: 'auto',
    width: 'auto',
    transition: 'top 300ms ease 0ms, right 300ms ease 0ms, bottom 300ms ease 0ms, left 300ms ease 0ms, margin 300ms ease 0ms, max-width 300ms ease 0ms',
    // container itself is invisible and should not block clicks, clicks should be passed to its children
    pointerEvents: 'none'
  }, _ref2[collapse.container] = {
    pointerEvents: 'all'
  }, _ref2[collapse.wrapper] = {
    padding: SNACKBAR_INDENTS.snackbar["default"] + "px 0px",
    transition: 'padding 300ms ease 0ms'
  }, _ref2.maxWidth = "calc(100% - " + SNACKBAR_INDENTS.view["default"] * 2 + "px)", _ref2[theme.breakpoints.down('sm')] = {
    width: '100%',
    maxWidth: "calc(100% - " + xsWidthMargin * 2 + "px)"
  }, _ref2), _ref7["&." + classes$2.rootDense] = (_ref3 = {}, _ref3[collapse.wrapper] = {
    padding: SNACKBAR_INDENTS.snackbar.dense + "px 0px"
  }, _ref3), _ref7["&." + classes$2.top] = {
    top: SNACKBAR_INDENTS.view["default"] - SNACKBAR_INDENTS.snackbar["default"],
    flexDirection: 'column'
  }, _ref7["&." + classes$2.bottom] = {
    bottom: SNACKBAR_INDENTS.view["default"] - SNACKBAR_INDENTS.snackbar["default"],
    flexDirection: 'column-reverse'
  }, _ref7["&." + classes$2.left] = (_ref4 = {
    left: SNACKBAR_INDENTS.view["default"]
  }, _ref4[theme.breakpoints.up('sm')] = {
    alignItems: 'flex-start'
  }, _ref4[theme.breakpoints.down('sm')] = {
    left: xsWidthMargin + "px"
  }, _ref4), _ref7["&." + classes$2.right] = (_ref5 = {
    right: SNACKBAR_INDENTS.view["default"]
  }, _ref5[theme.breakpoints.up('sm')] = {
    alignItems: 'flex-end'
  }, _ref5[theme.breakpoints.down('sm')] = {
    right: xsWidthMargin + "px"
  }, _ref5), _ref7["&." + classes$2.center] = (_ref6 = {
    left: '50%',
    transform: 'translateX(-50%)'
  }, _ref6[theme.breakpoints.up('sm')] = {
    alignItems: 'center'
  }, _ref6), _ref7;
});

var SnackbarContainer = function SnackbarContainer(props) {
  var className = props.className,
      anchorOrigin = props.anchorOrigin,
      dense = props.dense,
      other = _objectWithoutPropertiesLoose(props, ["className", "anchorOrigin", "dense"]);

  var combinedClassname = (0,clsx_m["default"])(classes$2[anchorOrigin.vertical], classes$2[anchorOrigin.horizontal], classes$2.root, // root should come after others to override maxWidth
  className, dense && classes$2.rootDense);
  return react.createElement(Root$1, Object.assign({
    className: combinedClassname
  }, other));
};

var SnackbarContainer$1 = /*#__PURE__*/react.memo(SnackbarContainer);
/* eslint-disable */

var __DEV__ = (/* unused pure expression or super */ null && ("production" !== 'production'));

var warning = function warning(message) {
  if (!__DEV__) return;

  if (typeof console !== 'undefined') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (x) {}
};

var SnackbarProvider = /*#__PURE__*/function (_Component) {
  _inheritsLoose(SnackbarProvider, _Component);

  function SnackbarProvider(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    /**
     * Adds a new snackbar to the queue to be presented.
     * Returns generated or user defined key referencing the new snackbar or null
     */

    _this.enqueueSnackbar = function (message, opts) {
      if (opts === void 0) {
        opts = {};
      }

      var _opts = opts,
          key = _opts.key,
          preventDuplicate = _opts.preventDuplicate,
          options = _objectWithoutPropertiesLoose(_opts, ["key", "preventDuplicate"]);

      var hasSpecifiedKey = isDefined(key);
      var id = hasSpecifiedKey ? key : new Date().getTime() + Math.random();
      var merger = merge(options, _this.props, DEFAULTS);

      var snack = _extends({
        key: id
      }, options, {
        message: message,
        open: true,
        entered: false,
        requestClose: false,
        variant: merger('variant'),
        anchorOrigin: merger('anchorOrigin'),
        autoHideDuration: merger('autoHideDuration')
      });

      if (options.persist) {
        snack.autoHideDuration = undefined;
      }

      _this.setState(function (state) {
        if (preventDuplicate === undefined && _this.props.preventDuplicate || preventDuplicate) {
          var compareFunction = function compareFunction(item) {
            return hasSpecifiedKey ? item.key === key : item.message === message;
          };

          var inQueue = state.queue.findIndex(compareFunction) > -1;
          var inView = state.snacks.findIndex(compareFunction) > -1;

          if (inQueue || inView) {
            return state;
          }
        }

        return _this.handleDisplaySnack(_extends({}, state, {
          queue: [].concat(state.queue, [snack])
        }));
      });

      return id;
    };
    /**
     * Reducer: Display snack if there's space for it. Otherwise, immediately
     * begin dismissing the oldest message to start showing the new one.
     */


    _this.handleDisplaySnack = function (state) {
      var snacks = state.snacks;

      if (snacks.length >= _this.maxSnack) {
        return _this.handleDismissOldest(state);
      }

      return _this.processQueue(state);
    };
    /**
     * Reducer: Display items (notifications) in the queue if there's space for them.
     */


    _this.processQueue = function (state) {
      var queue = state.queue,
          snacks = state.snacks;

      if (queue.length > 0) {
        return _extends({}, state, {
          snacks: [].concat(snacks, [queue[0]]),
          queue: queue.slice(1, queue.length)
        });
      }

      return state;
    };
    /**
     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.
     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).
     *
     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.
     * Note 2: If the oldest message has not yet entered the screen, only a request to close the
     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.
     */


    _this.handleDismissOldest = function (state) {
      if (state.snacks.some(function (item) {
        return !item.open || item.requestClose;
      })) {
        return state;
      }

      var popped = false;
      var ignore = false;
      var persistentCount = state.snacks.reduce(function (acc, current) {
        return acc + (current.open && current.persist ? 1 : 0);
      }, 0);

      if (persistentCount === _this.maxSnack) {
         false ? 0 : void 0;
        ignore = true;
      }

      var snacks = state.snacks.map(function (item) {
        if (!popped && (!item.persist || ignore)) {
          popped = true;

          if (!item.entered) {
            return _extends({}, item, {
              requestClose: true
            });
          }

          if (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);
          if (_this.props.onClose) _this.props.onClose(null, REASONS.MAXSNACK, item.key);
          return _extends({}, item, {
            open: false
          });
        }

        return _extends({}, item);
      });
      return _extends({}, state, {
        snacks: snacks
      });
    };
    /**
     * Set the entered state of the snackbar with the given key.
     */


    _this.handleEnteredSnack = function (node, isAppearing, key) {
      if (!isDefined(key)) {
        throw new Error('handleEnteredSnack Cannot be called with undefined key');
      }

      _this.setState(function (_ref) {
        var snacks = _ref.snacks;
        return {
          snacks: snacks.map(function (item) {
            return item.key === key ? _extends({}, item, {
              entered: true
            }) : _extends({}, item);
          })
        };
      });
    };
    /**
     * Hide a snackbar after its timeout.
     */


    _this.handleCloseSnack = function (event, reason, key) {
      // should not use createChainedFunction for onClose.
      // because this.closeSnackbar called this function
      if (_this.props.onClose) {
        _this.props.onClose(event, reason, key);
      }

      if (reason === REASONS.CLICKAWAY) return;
      var shouldCloseAll = key === undefined;

      _this.setState(function (_ref2) {
        var snacks = _ref2.snacks,
            queue = _ref2.queue;
        return {
          snacks: snacks.map(function (item) {
            if (!shouldCloseAll && item.key !== key) {
              return _extends({}, item);
            }

            return item.entered ? _extends({}, item, {
              open: false
            }) : _extends({}, item, {
              requestClose: true
            });
          }),
          queue: queue.filter(function (item) {
            return item.key !== key;
          })
        };
      });
    };
    /**
     * Close snackbar with the given key
     */


    _this.closeSnackbar = function (key) {
      // call individual snackbar onClose callback passed through options parameter
      var toBeClosed = _this.state.snacks.find(function (item) {
        return item.key === key;
      });

      if (isDefined(key) && toBeClosed && toBeClosed.onClose) {
        toBeClosed.onClose(null, REASONS.INSTRUCTED, key);
      }

      _this.handleCloseSnack(null, REASONS.INSTRUCTED, key);
    };
    /**
     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),
     * it leaves the screen and immediately after leaving animation is done, this method
     * gets called. We remove the hidden snackbar from state and then display notifications
     * waiting in the queue (if any). If after this process the queue is not empty, the
     * oldest message is dismissed.
     */
    // @ts-ignore


    _this.handleExitedSnack = function (event, key1, key2) {
      var key = key1 || key2;

      if (!isDefined(key)) {
        throw new Error('handleExitedSnack Cannot be called with undefined key');
      }

      _this.setState(function (state) {
        var newState = _this.processQueue(_extends({}, state, {
          snacks: state.snacks.filter(function (item) {
            return item.key !== key;
          })
        }));

        if (newState.queue.length === 0) {
          return newState;
        }

        return _this.handleDismissOldest(newState);
      });
    };

    _this.state = {
      snacks: [],
      queue: [],
      contextValue: {
        enqueueSnackbar: _this.enqueueSnackbar.bind(_assertThisInitialized(_this)),
        closeSnackbar: _this.closeSnackbar.bind(_assertThisInitialized(_this))
      }
    };
    return _this;
  }

  var _proto = SnackbarProvider.prototype;

  _proto.render = function render() {
    var _this2 = this;

    var contextValue = this.state.contextValue;

    var _this$props = this.props,
        iconVariant = _this$props.iconVariant,
        _this$props$dense = _this$props.dense,
        dense = _this$props$dense === void 0 ? DEFAULTS.dense : _this$props$dense,
        _this$props$hideIconV = _this$props.hideIconVariant,
        hideIconVariant = _this$props$hideIconV === void 0 ? DEFAULTS.hideIconVariant : _this$props$hideIconV,
        domRoot = _this$props.domRoot,
        children = _this$props.children,
        _this$props$classes = _this$props.classes,
        classes = _this$props$classes === void 0 ? {} : _this$props$classes,
        props = _objectWithoutPropertiesLoose(_this$props, ["maxSnack", "preventDuplicate", "variant", "anchorOrigin", "iconVariant", "dense", "hideIconVariant", "domRoot", "children", "classes"]);

    var categ = this.state.snacks.reduce(function (acc, current) {
      var _extends2;

      var category = originKeyExtractor(current.anchorOrigin);
      var existingOfCategory = acc[category] || [];
      return _extends({}, acc, (_extends2 = {}, _extends2[category] = [].concat(existingOfCategory, [current]), _extends2));
    }, {});
    var snackbars = Object.keys(categ).map(function (origin) {
      var snacks = categ[origin];
      return react.createElement(SnackbarContainer$1, {
        key: origin,
        dense: dense,
        anchorOrigin: snacks[0].anchorOrigin,
        className: (0,clsx_m["default"])(classes.containerRoot, classes[transformer.toContainerAnchorOrigin(origin)])
      }, snacks.map(function (snack) {
        return react.createElement(SnackbarItem, Object.assign({}, props, {
          key: snack.key,
          snack: snack,
          dense: dense,
          iconVariant: iconVariant,
          hideIconVariant: hideIconVariant,
          classes: omitContainerKeys(classes),
          onClose: _this2.handleCloseSnack,
          onExited: createChainedFunction([_this2.handleExitedSnack, _this2.props.onExited]),
          onEntered: createChainedFunction([_this2.handleEnteredSnack, _this2.props.onEntered])
        }));
      }));
    });
    return react.createElement(SnackbarContext.Provider, {
      value: contextValue
    }, children, domRoot ? (0,react_dom.createPortal)(snackbars, domRoot) : snackbars);
  };

  _createClass(SnackbarProvider, [{
    key: "maxSnack",
    get: function get() {
      return this.props.maxSnack || DEFAULTS.maxSnack;
    }
  }]);

  return SnackbarProvider;
}(react.Component); // https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3


var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;

var getFunctionName = function getFunctionName(fn) {
  var match = ("" + fn).match(fnNameMatchRegex);
  var name = match && match[1];
  return name || '';
};
/**
 * @param {function} Component
 * @param {string} fallback
 * @returns {string | undefined}
 */


var getFunctionComponentName = function getFunctionComponentName(Component, fallback) {
  if (fallback === void 0) {
    fallback = '';
  }

  return Component.displayName || Component.name || getFunctionName(Component) || fallback;
};

var getWrappedName = function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = getFunctionComponentName(innerType);
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
};
/** 
 * From react-is
 * @link https://github.com/facebook/react/blob/master/packages/shared/ReactSymbols.js
 */


var ForwardRef = function ForwardRef() {
  var symbolFor = typeof Symbol === 'function' && Symbol["for"];
  return symbolFor ? symbolFor('react.forward_ref') : 0xead0;
};
/**
 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
 *
 * @param {React.ReactType} Component
 * @returns {string | undefined}
 */


var getDisplayName = function getDisplayName(Component) {
  if (Component == null) {
    return undefined;
  }

  if (typeof Component === 'string') {
    return Component;
  }

  if (typeof Component === 'function') {
    return getFunctionComponentName(Component, 'Component');
  }

  if (typeof Component === 'object') {
    switch (Component.$$typeof) {
      case ForwardRef():
        return getWrappedName(Component, Component.render, 'ForwardRef');

      default:
        return undefined;
    }
  }

  return undefined;
};

var withSnackbar = function withSnackbar(Component) {
  var WrappedComponent = React__default.forwardRef(function (props, ref) {
    return React__default.createElement(SnackbarContext.Consumer, null, function (context) {
      return React__default.createElement(Component, _extends({}, props, {
        ref: ref,
        enqueueSnackbar: context.enqueueSnackbar,
        closeSnackbar: context.closeSnackbar
      }));
    });
  });

  if (false) {}

  hoistNonReactStatics(WrappedComponent, Component);
  return WrappedComponent;
};

var useSnackbar = function useSnackbar() {
  return (0,react.useContext)(SnackbarContext);
};



/***/ }),

/***/ 18328:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ dist; },
  "lG": function() { return /* binding */ defaultProps; }
});

// UNUSED EXPORTS: Prism

;// CONCATENATED MODULE: ./node_modules/prism-react-renderer/prism/index.js
/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 * MIT license http://www.opensource.org/licenses/mit-license.php/
 * @author Lea Verou http://lea.verou.me
 */

/**
 * prism-react-renderer:
 * This file has been modified to remove:
 * - globals and window dependency
 * - worker support
 * - highlightAll and other element dependent methods
 * - _.hooks helpers
 * - UMD/node-specific hacks
 * It has also been run through prettier
 */
var Prism = function () {
  var uniqueId = 0;
  var _ = {
    util: {
      encode: function encode(tokens) {
        if (tokens instanceof Token) {
          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
        } else if (_.util.type(tokens) === "Array") {
          return tokens.map(_.util.encode);
        } else {
          return tokens.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
        }
      },
      type: function type(o) {
        return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
      },
      objId: function objId(obj) {
        if (!obj["__id"]) {
          Object.defineProperty(obj, "__id", {
            value: ++uniqueId
          });
        }

        return obj["__id"];
      },
      // Deep clone a language definition (e.g. to extend it)
      clone: function clone(o, visited) {
        var type = _.util.type(o);

        visited = visited || {};

        switch (type) {
          case "Object":
            if (visited[_.util.objId(o)]) {
              return visited[_.util.objId(o)];
            }

            var clone = {};
            visited[_.util.objId(o)] = clone;

            for (var key in o) {
              if (o.hasOwnProperty(key)) {
                clone[key] = _.util.clone(o[key], visited);
              }
            }

            return clone;

          case "Array":
            if (visited[_.util.objId(o)]) {
              return visited[_.util.objId(o)];
            }

            var clone = [];
            visited[_.util.objId(o)] = clone;
            o.forEach(function (v, i) {
              clone[i] = _.util.clone(v, visited);
            });
            return clone;
        }

        return o;
      }
    },
    languages: {
      extend: function extend(id, redef) {
        var lang = _.util.clone(_.languages[id]);

        for (var key in redef) {
          lang[key] = redef[key];
        }

        return lang;
      },

      /**
       * Insert a token before another token in a language literal
       * As this needs to recreate the object (we cannot actually insert before keys in object literals),
       * we cannot just provide an object, we need anobject and a key.
       * @param inside The key (or language id) of the parent
       * @param before The key to insert before. If not provided, the function appends instead.
       * @param insert Object with the key/value pairs to insert
       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.
       */
      insertBefore: function insertBefore(inside, before, insert, root) {
        root = root || _.languages;
        var grammar = root[inside];

        if (arguments.length == 2) {
          insert = arguments[1];

          for (var newToken in insert) {
            if (insert.hasOwnProperty(newToken)) {
              grammar[newToken] = insert[newToken];
            }
          }

          return grammar;
        }

        var ret = {};

        for (var token in grammar) {
          if (grammar.hasOwnProperty(token)) {
            if (token == before) {
              for (var newToken in insert) {
                if (insert.hasOwnProperty(newToken)) {
                  ret[newToken] = insert[newToken];
                }
              }
            }

            ret[token] = grammar[token];
          }
        } // Update references in other language definitions


        _.languages.DFS(_.languages, function (key, value) {
          if (value === root[inside] && key != inside) {
            this[key] = ret;
          }
        });

        return root[inside] = ret;
      },
      // Traverse a language definition with Depth First Search
      DFS: function DFS(o, callback, type, visited) {
        visited = visited || {};

        for (var i in o) {
          if (o.hasOwnProperty(i)) {
            callback.call(o, i, o[i], type || i);

            if (_.util.type(o[i]) === "Object" && !visited[_.util.objId(o[i])]) {
              visited[_.util.objId(o[i])] = true;

              _.languages.DFS(o[i], callback, null, visited);
            } else if (_.util.type(o[i]) === "Array" && !visited[_.util.objId(o[i])]) {
              visited[_.util.objId(o[i])] = true;

              _.languages.DFS(o[i], callback, i, visited);
            }
          }
        }
      }
    },
    plugins: {},
    highlight: function highlight(text, grammar, language) {
      var env = {
        code: text,
        grammar: grammar,
        language: language
      };

      _.hooks.run("before-tokenize", env);

      env.tokens = _.tokenize(env.code, env.grammar);

      _.hooks.run("after-tokenize", env);

      return Token.stringify(_.util.encode(env.tokens), env.language);
    },
    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {
      var Token = _.Token;

      for (var token in grammar) {
        if (!grammar.hasOwnProperty(token) || !grammar[token]) {
          continue;
        }

        if (token == target) {
          return;
        }

        var patterns = grammar[token];
        patterns = _.util.type(patterns) === "Array" ? patterns : [patterns];

        for (var j = 0; j < patterns.length; ++j) {
          var pattern = patterns[j],
              inside = pattern.inside,
              lookbehind = !!pattern.lookbehind,
              greedy = !!pattern.greedy,
              lookbehindLength = 0,
              alias = pattern.alias;

          if (greedy && !pattern.pattern.global) {
            // Without the global flag, lastIndex won't work
            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];
            pattern.pattern = RegExp(pattern.pattern.source, flags + "g");
          }

          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop

          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {
            var str = strarr[i];

            if (strarr.length > text.length) {
              // Something went terribly wrong, ABORT, ABORT!
              return;
            }

            if (str instanceof Token) {
              continue;
            }

            if (greedy && i != strarr.length - 1) {
              pattern.lastIndex = pos;
              var match = pattern.exec(text);

              if (!match) {
                break;
              }

              var from = match.index + (lookbehind ? match[1].length : 0),
                  to = match.index + match[0].length,
                  k = i,
                  p = pos;

              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {
                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from

                if (from >= p) {
                  ++i;
                  pos = p;
                }
              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid


              if (strarr[i] instanceof Token) {
                continue;
              } // Number of tokens to delete and replace with the new match


              delNum = k - i;
              str = text.slice(pos, p);
              match.index -= pos;
            } else {
              pattern.lastIndex = 0;
              var match = pattern.exec(str),
                  delNum = 1;
            }

            if (!match) {
              if (oneshot) {
                break;
              }

              continue;
            }

            if (lookbehind) {
              lookbehindLength = match[1] ? match[1].length : 0;
            }

            var from = match.index + lookbehindLength,
                match = match[0].slice(lookbehindLength),
                to = from + match.length,
                before = str.slice(0, from),
                after = str.slice(to);
            var args = [i, delNum];

            if (before) {
              ++i;
              pos += before.length;
              args.push(before);
            }

            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);
            args.push(wrapped);

            if (after) {
              args.push(after);
            }

            Array.prototype.splice.apply(strarr, args);

            if (delNum != 1) {
              _.matchGrammar(text, strarr, grammar, i, pos, true, token);
            }

            if (oneshot) {
              break;
            }
          }
        }
      }
    },
    hooks: {
      add: function add() {},
      run: function run(name, env) {}
    },
    tokenize: function tokenize(text, grammar, language) {
      var strarr = [text];
      var rest = grammar.rest;

      if (rest) {
        for (var token in rest) {
          grammar[token] = rest[token];
        }

        delete grammar.rest;
      }

      _.matchGrammar(text, strarr, grammar, 0, 0, false);

      return strarr;
    }
  };

  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {
    this.type = type;
    this.content = content;
    this.alias = alias; // Copy of the full string this token was created from

    this.length = (matchedStr || "").length | 0;
    this.greedy = !!greedy;
  };

  Token.stringify = function (o, language, parent) {
    if (typeof o == "string") {
      return o;
    }

    if (_.util.type(o) === "Array") {
      return o.map(function (element) {
        return Token.stringify(element, language, o);
      }).join("");
    }

    var env = {
      type: o.type,
      content: Token.stringify(o.content, language, parent),
      tag: "span",
      classes: ["token", o.type],
      attributes: {},
      language: language,
      parent: parent
    };

    if (o.alias) {
      var aliases = _.util.type(o.alias) === "Array" ? o.alias : [o.alias];
      Array.prototype.push.apply(env.classes, aliases);
    }

    var attributes = Object.keys(env.attributes).map(function (name) {
      return name + '="' + (env.attributes[name] || "").replace(/"/g, "&quot;") + '"';
    }).join(" ");
    return "<" + env.tag + ' class="' + env.classes.join(" ") + '"' + (attributes ? " " + attributes : "") + ">" + env.content + "</" + env.tag + ">";
  };

  return _;
}();
/* This content is auto-generated to include some prismjs language components: */

/* "prismjs/components/prism-markup" */


Prism.languages.markup = {
  'comment': /<!--[\s\S]*?-->/,
  'prolog': /<\?[\s\S]+?\?>/,
  'doctype': {
    // https://www.w3.org/TR/xml/#NT-doctypedecl
    pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
    greedy: true,
    inside: {
      'internal-subset': {
        pattern: /(\[)[\s\S]+(?=\]>$)/,
        lookbehind: true,
        greedy: true,
        inside: null // see below

      },
      'string': {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: true
      },
      'punctuation': /^<!|>$|[[\]]/,
      'doctype-tag': /^DOCTYPE/,
      'name': /[^\s<>'"]+/
    }
  },
  'cdata': /<!\[CDATA\[[\s\S]*?]]>/i,
  'tag': {
    pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
    greedy: true,
    inside: {
      'tag': {
        pattern: /^<\/?[^\s>\/]+/,
        inside: {
          'punctuation': /^<\/?/,
          'namespace': /^[^\s>\/:]+:/
        }
      },
      'attr-value': {
        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
        inside: {
          'punctuation': [{
            pattern: /^=/,
            alias: 'attr-equals'
          }, /"|'/]
        }
      },
      'punctuation': /\/?>/,
      'attr-name': {
        pattern: /[^\s>\/]+/,
        inside: {
          'namespace': /^[^\s>\/:]+:/
        }
      }
    }
  },
  'entity': [{
    pattern: /&[\da-z]{1,8};/i,
    alias: 'named-entity'
  }, /&#x?[\da-f]{1,8};/i]
};
Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];
Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov

Prism.hooks.add('wrap', function (env) {
  if (env.type === 'entity') {
    env.attributes['title'] = env.content.replace(/&amp;/, '&');
  }
});
Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {
  /**
   * Adds an inlined language to markup.
   *
   * An example of an inlined language is CSS with `<style>` tags.
   *
   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as
   * case insensitive.
   * @param {string} lang The language key.
   * @example
   * addInlined('style', 'css');
   */
  value: function addInlined(tagName, lang) {
    var includedCdataInside = {};
    includedCdataInside['language-' + lang] = {
      pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
      lookbehind: true,
      inside: Prism.languages[lang]
    };
    includedCdataInside['cdata'] = /^<!\[CDATA\[|\]\]>$/i;
    var inside = {
      'included-cdata': {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        inside: includedCdataInside
      }
    };
    inside['language-' + lang] = {
      pattern: /[\s\S]+/,
      inside: Prism.languages[lang]
    };
    var def = {};
    def[tagName] = {
      pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function () {
        return tagName;
      }), 'i'),
      lookbehind: true,
      greedy: true,
      inside: inside
    };
    Prism.languages.insertBefore('markup', 'cdata', def);
  }
});
Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;
Prism.languages.xml = Prism.languages.extend('markup', {});
Prism.languages.ssml = Prism.languages.xml;
Prism.languages.atom = Prism.languages.xml;
Prism.languages.rss = Prism.languages.xml;
/* "prismjs/components/prism-bash" */

(function (Prism) {
  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\n' '|'
  // + LC_ALL, RANDOM, REPLY, SECONDS.
  // + make sure PS1..4 are here as they are not always set,
  // - some useless things.
  var envVars = '\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b';
  var commandAfterHeredoc = {
    pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
    lookbehind: true,
    alias: 'punctuation',
    // this looks reasonably well in all themes
    inside: null // see below

  };
  var insideString = {
    'bash': commandAfterHeredoc,
    'environment': {
      pattern: RegExp("\\$" + envVars),
      alias: 'constant'
    },
    'variable': [// [0]: Arithmetic Environment
    {
      pattern: /\$?\(\([\s\S]+?\)\)/,
      greedy: true,
      inside: {
        // If there is a $ sign at the beginning highlight $(( and )) as variable
        'variable': [{
          pattern: /(^\$\(\([\s\S]+)\)\)/,
          lookbehind: true
        }, /^\$\(\(/],
        'number': /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic
        'operator': /--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/,
        // If there is no $ sign at the beginning highlight (( and )) as punctuation
        'punctuation': /\(\(?|\)\)?|,|;/
      }
    }, // [1]: Command Substitution
    {
      pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
      greedy: true,
      inside: {
        'variable': /^\$\(|^`|\)$|`$/
      }
    }, // [2]: Brace expansion
    {
      pattern: /\$\{[^}]+\}/,
      greedy: true,
      inside: {
        'operator': /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
        'punctuation': /[\[\]]/,
        'environment': {
          pattern: RegExp("(\\{)" + envVars),
          lookbehind: true,
          alias: 'constant'
        }
      }
    }, /\$(?:\w+|[#?*!@$])/],
    // Escape sequences from echo and printf's manuals, and escaped quotes.
    'entity': /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/
  };
  Prism.languages.bash = {
    'shebang': {
      pattern: /^#!\s*\/.*/,
      alias: 'important'
    },
    'comment': {
      pattern: /(^|[^"{\\$])#.*/,
      lookbehind: true
    },
    'function-name': [// a) function foo {
    // b) foo() {
    // c) function foo() {
    // but not “foo {”
    {
      // a) and c)
      pattern: /(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/,
      lookbehind: true,
      alias: 'function'
    }, {
      // b)
      pattern: /\b\w+(?=\s*\(\s*\)\s*\{)/,
      alias: 'function'
    }],
    // Highlight variable names as variables in for and select beginnings.
    'for-or-select': {
      pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
      alias: 'variable',
      lookbehind: true
    },
    // Highlight variable names as variables in the left-hand part
    // of assignments (“=” and “+=”).
    'assign-left': {
      pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
      inside: {
        'environment': {
          pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + envVars),
          lookbehind: true,
          alias: 'constant'
        }
      },
      alias: 'variable',
      lookbehind: true
    },
    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document
    {
      pattern: /((?:^|[^<])<<-?\s*)(\w+?)\s[\s\S]*?(?:\r?\n|\r)\2/,
      lookbehind: true,
      greedy: true,
      inside: insideString
    }, // Here-document with quotes around the tag
    // → No expansion (so no “inside”).
    {
      pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
      lookbehind: true,
      greedy: true,
      inside: {
        'bash': commandAfterHeredoc
      }
    }, // “Normal” string
    {
      pattern: /(^|[^\\](?:\\\\)*)(["'])(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|(?!\2)[^\\`$])*\2/,
      lookbehind: true,
      greedy: true,
      inside: insideString
    }],
    'environment': {
      pattern: RegExp("\\$?" + envVars),
      alias: 'constant'
    },
    'variable': insideString.variable,
    'function': {
      pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    'keyword': {
      pattern: /(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
    'builtin': {
      pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,
      lookbehind: true,
      // Alias added to make those easier to distinguish from strings.
      alias: 'class-name'
    },
    'boolean': {
      pattern: /(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    'file-descriptor': {
      pattern: /\B&\d\b/,
      alias: 'important'
    },
    'operator': {
      // Lots of redirections here, but not just that.
      pattern: /\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/,
      inside: {
        'file-descriptor': {
          pattern: /^\d/,
          alias: 'important'
        }
      }
    },
    'punctuation': /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
    'number': {
      pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
      lookbehind: true
    }
  };
  commandAfterHeredoc.inside = Prism.languages.bash;
  /* Patterns in command substitution. */

  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];
  var inside = insideString.variable[1].inside;

  for (var i = 0; i < toBeCopied.length; i++) {
    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];
  }

  Prism.languages.shell = Prism.languages.bash;
})(Prism);
/* "prismjs/components/prism-clike" */


Prism.languages.clike = {
  'comment': [{
    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
    lookbehind: true,
    greedy: true
  }, {
    pattern: /(^|[^\\:])\/\/.*/,
    lookbehind: true,
    greedy: true
  }],
  'string': {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: true
  },
  'class-name': {
    pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,
    lookbehind: true,
    inside: {
      'punctuation': /[.\\]/
    }
  },
  'keyword': /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
  'boolean': /\b(?:true|false)\b/,
  'function': /\w+(?=\()/,
  'number': /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
  'operator': /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
  'punctuation': /[{}[\];(),.:]/
};
/* "prismjs/components/prism-c" */

Prism.languages.c = Prism.languages.extend('clike', {
  'comment': {
    pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
    greedy: true
  },
  'class-name': {
    pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
    lookbehind: true
  },
  'keyword': /\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,
  'function': /[a-z_]\w*(?=\s*\()/i,
  'number': /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
  'operator': />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
});
Prism.languages.insertBefore('c', 'string', {
  'macro': {
    // allow for multiline macro definitions
    // spaces after the # character compile fine with gcc
    pattern: /(^\s*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
    lookbehind: true,
    greedy: true,
    alias: 'property',
    inside: {
      'string': [{
        // highlight the path of the include statement as a string
        pattern: /^(#\s*include\s*)<[^>]+>/,
        lookbehind: true
      }, Prism.languages.c['string']],
      'comment': Prism.languages.c['comment'],
      'macro-name': [{
        pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
        lookbehind: true
      }, {
        pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
        lookbehind: true,
        alias: 'function'
      }],
      // highlight macro directives as keywords
      'directive': {
        pattern: /^(#\s*)[a-z]+/,
        lookbehind: true,
        alias: 'keyword'
      },
      'directive-hash': /^#/,
      'punctuation': /##|\\(?=[\r\n])/,
      'expression': {
        pattern: /\S[\s\S]*/,
        inside: Prism.languages.c
      }
    }
  },
  // highlight predefined macros as constants
  'constant': /\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/
});
delete Prism.languages.c['boolean'];
/* "prismjs/components/prism-cpp" */

(function (Prism) {
  var keyword = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/;
  Prism.languages.cpp = Prism.languages.extend('c', {
    'class-name': [{
      pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function () {
        return keyword.source;
      })),
      lookbehind: true
    }, // This is intended to capture the class name of method implementations like:
    //   void foo::bar() const {}
    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if
    // it starts with an uppercase letter. This approximation should give decent results.
    /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/, // This will capture the class name before destructors like:
    //   Foo::~Foo() {}
    /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i, // This also intends to capture the class name of method implementations but here the class has template
    // parameters, so it can't be a namespace (until C++ adds generic namespaces).
    /\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],
    'keyword': keyword,
    'number': {
      pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
      greedy: true
    },
    'operator': />>=?|<<=?|->|([-+&|:])\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
    'boolean': /\b(?:true|false)\b/
  });
  Prism.languages.insertBefore('cpp', 'string', {
    'raw-string': {
      pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
      alias: 'string',
      greedy: true
    }
  });
  Prism.languages.insertBefore('cpp', 'class-name', {
    // the base clause is an optional list of parent classes
    // https://en.cppreference.com/w/cpp/language/class
    'base-clause': {
      pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
      lookbehind: true,
      greedy: true,
      inside: Prism.languages.extend('cpp', {})
    }
  });
  Prism.languages.insertBefore('inside', 'operator', {
    // All untokenized words that are not namespaces should be class names
    'class-name': /\b[a-z_]\w*\b(?!\s*::)/i
  }, Prism.languages.cpp['base-clause']);
})(Prism);
/* "prismjs/components/prism-css" */


(function (Prism) {
  var string = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
  Prism.languages.css = {
    'comment': /\/\*[\s\S]*?\*\//,
    'atrule': {
      pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
      inside: {
        'rule': /^@[\w-]+/,
        'selector-function-argument': {
          pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
          lookbehind: true,
          alias: 'selector'
        },
        'keyword': {
          pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
          lookbehind: true
        } // See rest below

      }
    },
    'url': {
      // https://drafts.csswg.org/css-values-3/#urls
      pattern: RegExp('\\burl\\((?:' + string.source + '|' + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ')\\)', 'i'),
      greedy: true,
      inside: {
        'function': /^url/i,
        'punctuation': /^\(|\)$/,
        'string': {
          pattern: RegExp('^' + string.source + '$'),
          alias: 'url'
        }
      }
    },
    'selector': RegExp('[^{}\\s](?:[^{};"\'\\s]|\\s+(?![\\s{])|' + string.source + ')*(?=\\s*\\{)'),
    'string': {
      pattern: string,
      greedy: true
    },
    'property': /(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
    'important': /!important\b/i,
    'function': /[-a-z0-9]+(?=\()/i,
    'punctuation': /[(){};:,]/
  };
  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;
  var markup = Prism.languages.markup;

  if (markup) {
    markup.tag.addInlined('style', 'css');
    Prism.languages.insertBefore('inside', 'attr-value', {
      'style-attr': {
        pattern: /(^|["'\s])style\s*=\s*(?:"[^"]*"|'[^']*')/i,
        lookbehind: true,
        inside: {
          'attr-value': {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
            inside: {
              'style': {
                pattern: /(["'])[\s\S]+(?=["']$)/,
                lookbehind: true,
                alias: 'language-css',
                inside: Prism.languages.css
              },
              'punctuation': [{
                pattern: /^=/,
                alias: 'attr-equals'
              }, /"|'/]
            }
          },
          'attr-name': /^style/i
        }
      }
    }, markup.tag);
  }
})(Prism);
/* "prismjs/components/prism-css-extras" */


(function (Prism) {
  var string = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
  var selectorInside;
  Prism.languages.css.selector = {
    pattern: Prism.languages.css.selector,
    inside: selectorInside = {
      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
      'pseudo-class': /:[-\w]+/,
      'class': /\.[-\w]+/,
      'id': /#[-\w]+/,
      'attribute': {
        pattern: RegExp('\\[(?:[^[\\]"\']|' + string.source + ')*\\]'),
        greedy: true,
        inside: {
          'punctuation': /^\[|\]$/,
          'case-sensitivity': {
            pattern: /(\s)[si]$/i,
            lookbehind: true,
            alias: 'keyword'
          },
          'namespace': {
            pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
            lookbehind: true,
            inside: {
              'punctuation': /\|$/
            }
          },
          'attr-name': {
            pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
            lookbehind: true
          },
          'attr-value': [string, {
            pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
            lookbehind: true
          }],
          'operator': /[|~*^$]?=/
        }
      },
      'n-th': [{
        pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
        lookbehind: true,
        inside: {
          'number': /[\dn]+/,
          'operator': /[+-]/
        }
      }, {
        pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
        lookbehind: true
      }],
      'combinator': />|\+|~|\|\|/,
      // the `tag` token has been existed and removed.
      // because we can't find a perfect tokenize to match it.
      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.
      'punctuation': /[(),]/
    }
  };
  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;
  Prism.languages.insertBefore('css', 'property', {
    'variable': {
      pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
      lookbehind: true
    }
  });
  var unit = {
    pattern: /(\b\d+)(?:%|[a-z]+\b)/,
    lookbehind: true
  }; // 123 -123 .123 -.123 12.3 -12.3

  var number = {
    pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
    lookbehind: true
  };
  Prism.languages.insertBefore('css', 'function', {
    'operator': {
      pattern: /(\s)[+\-*\/](?=\s)/,
      lookbehind: true
    },
    // CAREFUL!
    // Previewers and Inline color use hexcode and color.
    'hexcode': {
      pattern: /\B#(?:[\da-f]{1,2}){3,4}\b/i,
      alias: 'color'
    },
    'color': [/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i, {
      pattern: /\b(?:rgb|hsl)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:rgb|hsl)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
      inside: {
        'unit': unit,
        'number': number,
        'function': /[\w-]+(?=\()/,
        'punctuation': /[(),]/
      }
    }],
    // it's important that there is no boundary assertion after the hex digits
    'entity': /\\[\da-f]{1,8}/i,
    'unit': unit,
    'number': number
  });
})(Prism);
/* "prismjs/components/prism-javascript" */


Prism.languages.javascript = Prism.languages.extend('clike', {
  'class-name': [Prism.languages.clike['class-name'], {
    pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/,
    lookbehind: true
  }],
  'keyword': [{
    pattern: /((?:^|})\s*)(?:catch|finally)\b/,
    lookbehind: true
  }, {
    pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\s*[\[$\w\xA0-\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
    lookbehind: true
  }],
  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
  'function': /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
  'number': /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
  'operator': /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
});
Prism.languages.javascript['class-name'][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/;
Prism.languages.insertBefore('javascript', 'keyword', {
  'regex': {
    pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
    lookbehind: true,
    greedy: true,
    inside: {
      'regex-source': {
        pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
        lookbehind: true,
        alias: 'language-regex',
        inside: Prism.languages.regex
      },
      'regex-flags': /[a-z]+$/,
      'regex-delimiter': /^\/|\/$/
    }
  },
  // This must be declared before keyword because we use "function" inside the look-forward
  'function-variable': {
    pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
    alias: 'function'
  },
  'parameter': [{
    pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
    lookbehind: true,
    inside: Prism.languages.javascript
  }, {
    pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
    inside: Prism.languages.javascript
  }, {
    pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
    lookbehind: true,
    inside: Prism.languages.javascript
  }, {
    pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
    lookbehind: true,
    inside: Prism.languages.javascript
  }],
  'constant': /\b[A-Z](?:[A-Z_]|\dx?)*\b/
});
Prism.languages.insertBefore('javascript', 'string', {
  'template-string': {
    pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
    greedy: true,
    inside: {
      'template-punctuation': {
        pattern: /^`|`$/,
        alias: 'string'
      },
      'interpolation': {
        pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
        lookbehind: true,
        inside: {
          'interpolation-punctuation': {
            pattern: /^\${|}$/,
            alias: 'punctuation'
          },
          rest: Prism.languages.javascript
        }
      },
      'string': /[\s\S]+/
    }
  }
});

if (Prism.languages.markup) {
  Prism.languages.markup.tag.addInlined('script', 'javascript');
}

Prism.languages.js = Prism.languages.javascript;
/* "prismjs/components/prism-jsx" */

(function (Prism) {
  var javascript = Prism.util.clone(Prism.languages.javascript);
  Prism.languages.jsx = Prism.languages.extend('markup', javascript);
  Prism.languages.jsx.tag.pattern = /<\/?(?:[\w.:-]+(?:\s+(?:[\w.:$-]+(?:=(?:"(?:\\[^]|[^\\"])*"|'(?:\\[^]|[^\\'])*'|[^\s{'">=]+|\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}))?|\{\s*\.{3}\s*[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\s*\}))*\s*\/?)?>/i;
  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\/?[^\s>\/]*/i;
  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\{)(?:"(?:\\[^]|[^\\"])*"|'(?:\\[^]|[^\\'])*'|[^\s'">]+)/i;
  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
  Prism.languages.insertBefore('inside', 'attr-name', {
    'spread': {
      pattern: /\{\s*\.{3}\s*[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\s*\}/,
      inside: {
        'punctuation': /\.{3}|[{}.]/,
        'attr-value': /\w+/
      }
    }
  }, Prism.languages.jsx.tag);
  Prism.languages.insertBefore('inside', 'attr-value', {
    'script': {
      // Allow for two levels of nesting
      pattern: /=(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\})/i,
      inside: {
        'script-punctuation': {
          pattern: /^=(?={)/,
          alias: 'punctuation'
        },
        rest: Prism.languages.jsx
      },
      'alias': 'language-javascript'
    }
  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags

  var stringifyToken = function stringifyToken(token) {
    if (!token) {
      return '';
    }

    if (typeof token === 'string') {
      return token;
    }

    if (typeof token.content === 'string') {
      return token.content;
    }

    return token.content.map(stringifyToken).join('');
  };

  var walkTokens = function walkTokens(tokens) {
    var openedTags = [];

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];
      var notTagNorBrace = false;

      if (typeof token !== 'string') {
        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {
          // We found a tag, now find its kind
          if (token.content[0].content[0].content === '</') {
            // Closing tag
            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {
              // Pop matching opening tag
              openedTags.pop();
            }
          } else {
            if (token.content[token.content.length - 1].content === '/>') ;else {
              // Opening tag
              openedTags.push({
                tagName: stringifyToken(token.content[0].content[1]),
                openedBraces: 0
              });
            }
          }
        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {
          // Here we might have entered a JSX context inside a tag
          openedTags[openedTags.length - 1].openedBraces++;
        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {
          // Here we might have left a JSX context inside a tag
          openedTags[openedTags.length - 1].openedBraces--;
        } else {
          notTagNorBrace = true;
        }
      }

      if (notTagNorBrace || typeof token === 'string') {
        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
          // Here we are inside a tag, and not inside a JSX context.
          // That's plain text: drop any tokens matched.
          var plainText = stringifyToken(token); // And merge text with adjacent text

          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {
            plainText += stringifyToken(tokens[i + 1]);
            tokens.splice(i + 1, 1);
          }

          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {
            plainText = stringifyToken(tokens[i - 1]) + plainText;
            tokens.splice(i - 1, 1);
            i--;
          }

          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);
        }
      }

      if (token.content && typeof token.content !== 'string') {
        walkTokens(token.content);
      }
    }
  };

  Prism.hooks.add('after-tokenize', function (env) {
    if (env.language !== 'jsx' && env.language !== 'tsx') {
      return;
    }

    walkTokens(env.tokens);
  });
})(Prism);
/* "prismjs/components/prism-js-extras" */


(function (Prism) {
  Prism.languages.insertBefore('javascript', 'function-variable', {
    'method-variable': {
      pattern: RegExp('(\\.\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),
      lookbehind: true,
      alias: ['function-variable', 'method', 'function', 'property-access']
    }
  });
  Prism.languages.insertBefore('javascript', 'function', {
    'method': {
      pattern: RegExp('(\\.\\s*)' + Prism.languages.javascript['function'].source),
      lookbehind: true,
      alias: ['function', 'property-access']
    }
  });
  Prism.languages.insertBefore('javascript', 'constant', {
    'known-class-name': [{
      // standard built-ins
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
      pattern: /\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\b/,
      alias: 'class-name'
    }, {
      // errors
      pattern: /\b(?:[A-Z]\w*)Error\b/,
      alias: 'class-name'
    }]
  });
  /**
   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.
   *
   * @param {string} source
   * @param {string} [flags]
   * @returns {RegExp}
   */

  function withId(source, flags) {
    return RegExp(source.replace(/<ID>/g, function () {
      return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
    }), flags);
  }

  Prism.languages.insertBefore('javascript', 'keyword', {
    'imports': {
      // https://tc39.es/ecma262/#sec-imports
      pattern: withId(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),
      lookbehind: true,
      inside: Prism.languages.javascript
    },
    'exports': {
      // https://tc39.es/ecma262/#sec-exports
      pattern: withId(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),
      lookbehind: true,
      inside: Prism.languages.javascript
    }
  });
  Prism.languages.javascript['keyword'].unshift({
    pattern: /\b(?:as|default|export|from|import)\b/,
    alias: 'module'
  }, {
    pattern: /\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\b/,
    alias: 'control-flow'
  }, {
    pattern: /\bnull\b/,
    alias: ['null', 'nil']
  }, {
    pattern: /\bundefined\b/,
    alias: 'nil'
  });
  Prism.languages.insertBefore('javascript', 'operator', {
    'spread': {
      pattern: /\.{3}/,
      alias: 'operator'
    },
    'arrow': {
      pattern: /=>/,
      alias: 'operator'
    }
  });
  Prism.languages.insertBefore('javascript', 'punctuation', {
    'property-access': {
      pattern: withId(/(\.\s*)#?<ID>/.source),
      lookbehind: true
    },
    'maybe-class-name': {
      pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
      lookbehind: true
    },
    'dom': {
      // this contains only a few commonly used DOM variables
      pattern: /\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\b/,
      alias: 'variable'
    },
    'console': {
      pattern: /\bconsole(?=\s*\.)/,
      alias: 'class-name'
    }
  }); // add 'maybe-class-name' to tokens which might be a class name

  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];

  for (var i = 0; i < maybeClassNameTokens.length; i++) {
    var token = maybeClassNameTokens[i];
    var value = Prism.languages.javascript[token]; // convert regex to object

    if (Prism.util.type(value) === 'RegExp') {
      value = Prism.languages.javascript[token] = {
        pattern: value
      };
    } // keep in mind that we don't support arrays


    var inside = value.inside || {};
    value.inside = inside;
    inside['maybe-class-name'] = /^[A-Z][\s\S]*/;
  }
})(Prism);
/* "prismjs/components/prism-coffeescript" */


(function (Prism) {
  // Ignore comments starting with { to privilege string interpolation highlighting
  var comment = /#(?!\{).+/,
      interpolation = {
    pattern: /#\{[^}]+\}/,
    alias: 'variable'
  };
  Prism.languages.coffeescript = Prism.languages.extend('javascript', {
    'comment': comment,
    'string': [// Strings are multiline
    {
      pattern: /'(?:\\[\s\S]|[^\\'])*'/,
      greedy: true
    }, {
      // Strings are multiline
      pattern: /"(?:\\[\s\S]|[^\\"])*"/,
      greedy: true,
      inside: {
        'interpolation': interpolation
      }
    }],
    'keyword': /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
    'class-member': {
      pattern: /@(?!\d)\w+/,
      alias: 'variable'
    }
  });
  Prism.languages.insertBefore('coffeescript', 'comment', {
    'multiline-comment': {
      pattern: /###[\s\S]+?###/,
      alias: 'comment'
    },
    // Block regexp can contain comments and interpolation
    'block-regex': {
      pattern: /\/{3}[\s\S]*?\/{3}/,
      alias: 'regex',
      inside: {
        'comment': comment,
        'interpolation': interpolation
      }
    }
  });
  Prism.languages.insertBefore('coffeescript', 'string', {
    'inline-javascript': {
      pattern: /`(?:\\[\s\S]|[^\\`])*`/,
      inside: {
        'delimiter': {
          pattern: /^`|`$/,
          alias: 'punctuation'
        },
        'script': {
          pattern: /[\s\S]+/,
          alias: 'language-javascript',
          inside: Prism.languages.javascript
        }
      }
    },
    // Block strings
    'multiline-string': [{
      pattern: /'''[\s\S]*?'''/,
      greedy: true,
      alias: 'string'
    }, {
      pattern: /"""[\s\S]*?"""/,
      greedy: true,
      alias: 'string',
      inside: {
        interpolation: interpolation
      }
    }]
  });
  Prism.languages.insertBefore('coffeescript', 'keyword', {
    // Object property
    'property': /(?!\d)\w+(?=\s*:(?!:))/
  });
  delete Prism.languages.coffeescript['template-string'];
  Prism.languages.coffee = Prism.languages.coffeescript;
})(Prism);
/* "prismjs/components/prism-diff" */


(function (Prism) {
  Prism.languages.diff = {
    'coord': [// Match all kinds of coord lines (prefixed by "+++", "---" or "***").
    /^(?:\*{3}|-{3}|\+{3}).*$/m, // Match "@@ ... @@" coord lines in unified diff.
    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).
    /^\d.*$/m] // deleted, inserted, unchanged, diff

  };
  /**
   * A map from the name of a block to its line prefix.
   *
   * @type {Object<string, string>}
   */

  var PREFIXES = {
    'deleted-sign': '-',
    'deleted-arrow': '<',
    'inserted-sign': '+',
    'inserted-arrow': '>',
    'unchanged': ' ',
    'diff': '!'
  }; // add a token for each prefix

  Object.keys(PREFIXES).forEach(function (name) {
    var prefix = PREFIXES[name];
    var alias = [];

    if (!/^\w+$/.test(name)) {
      // "deleted-sign" -> "deleted"
      alias.push(/\w+/.exec(name)[0]);
    }

    if (name === "diff") {
      alias.push("bold");
    }

    Prism.languages.diff[name] = {
      pattern: RegExp('^(?:[' + prefix + '].*(?:\r\n?|\n|(?![\\s\\S])))+', 'm'),
      alias: alias,
      inside: {
        'line': {
          pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/,
          lookbehind: true
        },
        'prefix': {
          pattern: /[\s\S]/,
          alias: /\w+/.exec(name)[0]
        }
      }
    };
  }); // make prefixes available to Diff plugin

  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {
    value: PREFIXES
  });
})(Prism);
/* "prismjs/components/prism-git" */


Prism.languages.git = {
  /*
   * A simple one line comment like in a git status command
   * For instance:
   * $ git status
   * # On branch infinite-scroll
   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,
   * # and have 1 and 2 different commits each, respectively.
   * nothing to commit (working directory clean)
   */
  'comment': /^#.*/m,

  /*
   * Regexp to match the changed lines in a git diff output. Check the example below.
   */
  'deleted': /^[-–].*/m,
  'inserted': /^\+.*/m,

  /*
   * a string (double and simple quote)
   */
  'string': /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m,

  /*
   * a git command. It starts with a random prompt finishing by a $, then "git" then some other parameters
   * For instance:
   * $ git add file.txt
   */
  'command': {
    pattern: /^.*\$ git .*$/m,
    inside: {
      /*
       * A git command can contain a parameter starting by a single or a double dash followed by a string
       * For instance:
       * $ git diff --cached
       * $ git log -p
       */
      'parameter': /\s--?\w+/m
    }
  },

  /*
   * Coordinates displayed in a git diff command
   * For instance:
   * $ git diff
   * diff --git file.txt file.txt
   * index 6214953..1d54a52 100644
   * --- file.txt
   * +++ file.txt
   * @@ -1 +1,2 @@
   * -Here's my tetx file
   * +Here's my text file
   * +And this is the second line
   */
  'coord': /^@@.*@@$/m,

  /*
   * Match a "commit [SHA1]" line in a git log output.
   * For instance:
   * $ git log
   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09
   * Author: lgiraudel
   * Date:   Mon Feb 17 11:18:34 2014 +0100
   *
   *     Add of a new line
   */
  'commit-sha1': /^commit \w{40}$/m
};
/* "prismjs/components/prism-go" */

Prism.languages.go = Prism.languages.extend('clike', {
  'string': {
    pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
    greedy: true
  },
  'keyword': /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
  'boolean': /\b(?:_|iota|nil|true|false)\b/,
  'number': /(?:\b0x[a-f\d]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[-+]?\d+)?)i?/i,
  'operator': /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
  'builtin': /\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/
});
delete Prism.languages.go['class-name'];
/* "prismjs/components/prism-graphql" */

Prism.languages.graphql = {
  'comment': /#.*/,
  'description': {
    pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
    greedy: true,
    alias: 'string',
    inside: {
      'language-markdown': {
        pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
        lookbehind: true,
        inside: Prism.languages.markdown
      }
    }
  },
  'string': {
    pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
    greedy: true
  },
  'number': /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  'boolean': /\b(?:true|false)\b/,
  'variable': /\$[a-z_]\w*/i,
  'directive': {
    pattern: /@[a-z_]\w*/i,
    alias: 'function'
  },
  'attr-name': {
    pattern: /[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
    greedy: true
  },
  'class-name': {
    pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*)[a-zA-Z_]\w*/,
    lookbehind: true
  },
  'fragment': {
    pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
    lookbehind: true,
    alias: 'function'
  },
  'keyword': /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
  'operator': /[!=|&]|\.{3}/,
  'punctuation': /[!(){}\[\]:=,]/,
  'constant': /\b(?!ID\b)[A-Z][A-Z_\d]*\b/
};
/* "prismjs/components/prism-markup-templating" */

(function (Prism) {
  /**
   * Returns the placeholder for the given language id and index.
   *
   * @param {string} language
   * @param {string|number} index
   * @returns {string}
   */
  function getPlaceholder(language, index) {
    return '___' + language.toUpperCase() + index + '___';
  }

  Object.defineProperties(Prism.languages['markup-templating'] = {}, {
    buildPlaceholders: {
      /**
       * Tokenize all inline templating expressions matching `placeholderPattern`.
       *
       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns
       * `true` will be replaced.
       *
       * @param {object} env The environment of the `before-tokenize` hook.
       * @param {string} language The language id.
       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.
       * @param {(match: string) => boolean} [replaceFilter]
       */
      value: function value(env, language, placeholderPattern, replaceFilter) {
        if (env.language !== language) {
          return;
        }

        var tokenStack = env.tokenStack = [];
        env.code = env.code.replace(placeholderPattern, function (match) {
          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {
            return match;
          }

          var i = tokenStack.length;
          var placeholder; // Check for existing strings

          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {
            ++i;
          } // Create a sparse array


          tokenStack[i] = match;
          return placeholder;
        }); // Switch the grammar to markup

        env.grammar = Prism.languages.markup;
      }
    },
    tokenizePlaceholders: {
      /**
       * Replace placeholders with proper tokens after tokenizing.
       *
       * @param {object} env The environment of the `after-tokenize` hook.
       * @param {string} language The language id.
       */
      value: function value(env, language) {
        if (env.language !== language || !env.tokenStack) {
          return;
        } // Switch the grammar back


        env.grammar = Prism.languages[language];
        var j = 0;
        var keys = Object.keys(env.tokenStack);

        function walkTokens(tokens) {
          for (var i = 0; i < tokens.length; i++) {
            // all placeholders are replaced already
            if (j >= keys.length) {
              break;
            }

            var token = tokens[i];

            if (typeof token === 'string' || token.content && typeof token.content === 'string') {
              var k = keys[j];
              var t = env.tokenStack[k];
              var s = typeof token === 'string' ? token : token.content;
              var placeholder = getPlaceholder(language, k);
              var index = s.indexOf(placeholder);

              if (index > -1) {
                ++j;
                var before = s.substring(0, index);
                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);
                var after = s.substring(index + placeholder.length);
                var replacement = [];

                if (before) {
                  replacement.push.apply(replacement, walkTokens([before]));
                }

                replacement.push(middle);

                if (after) {
                  replacement.push.apply(replacement, walkTokens([after]));
                }

                if (typeof token === 'string') {
                  tokens.splice.apply(tokens, [i, 1].concat(replacement));
                } else {
                  token.content = replacement;
                }
              }
            } else if (token.content
            /* && typeof token.content !== 'string' */
            ) {
              walkTokens(token.content);
            }
          }

          return tokens;
        }

        walkTokens(env.tokens);
      }
    }
  });
})(Prism);
/* "prismjs/components/prism-handlebars" */


(function (Prism) {
  Prism.languages.handlebars = {
    'comment': /\{\{![\s\S]*?\}\}/,
    'delimiter': {
      pattern: /^\{\{\{?|\}\}\}?$/i,
      alias: 'punctuation'
    },
    'string': /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
    'number': /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
    'boolean': /\b(?:true|false)\b/,
    'block': {
      pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/i,
      lookbehind: true,
      alias: 'keyword'
    },
    'brackets': {
      pattern: /\[[^\]]+\]/,
      inside: {
        punctuation: /\[|\]/,
        variable: /[\s\S]+/
      }
    },
    'punctuation': /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
    'variable': /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/
  };
  Prism.hooks.add('before-tokenize', function (env) {
    var handlebarsPattern = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);
  });
  Prism.hooks.add('after-tokenize', function (env) {
    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');
  });
})(Prism);
/* "prismjs/components/prism-json" */
// https://www.json.org/json-en.html


Prism.languages.json = {
  'property': {
    pattern: /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
    greedy: true
  },
  'string': {
    pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
    greedy: true
  },
  'comment': {
    pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
    greedy: true
  },
  'number': /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  'punctuation': /[{}[\],]/,
  'operator': /:/,
  'boolean': /\b(?:true|false)\b/,
  'null': {
    pattern: /\bnull\b/,
    alias: 'keyword'
  }
};
Prism.languages.webmanifest = Prism.languages.json;
/* "prismjs/components/prism-less" */

/* FIXME :
 :extend() is not handled specifically : its highlighting is buggy.
 Mixin usage must be inside a ruleset to be highlighted.
 At-rules (e.g. import) containing interpolations are buggy.
 Detached rulesets are highlighted as at-rules.
 A comment before a mixin usage prevents the latter to be properly highlighted.
 */

Prism.languages.less = Prism.languages.extend('css', {
  'comment': [/\/\*[\s\S]*?\*\//, {
    pattern: /(^|[^\\])\/\/.*/,
    lookbehind: true
  }],
  'atrule': {
    pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
    inside: {
      'punctuation': /[:()]/
    }
  },
  // selectors and mixins are considered the same
  'selector': {
    pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
    inside: {
      // mixin parameters
      'variable': /@+[\w-]+/
    }
  },
  'property': /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i,
  'operator': /[+\-*\/]/
});
Prism.languages.insertBefore('less', 'property', {
  'variable': [// Variable declaration (the colon must be consumed!)
  {
    pattern: /@[\w-]+\s*:/,
    inside: {
      "punctuation": /:/
    }
  }, // Variable usage
  /@@?[\w-]+/],
  'mixin-usage': {
    pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
    lookbehind: true,
    alias: 'function'
  }
});
/* "prismjs/components/prism-makefile" */

Prism.languages.makefile = {
  'comment': {
    pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
    lookbehind: true
  },
  'string': {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: true
  },
  // Built-in target names
  'builtin': /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
  // Targets
  'symbol': {
    pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
    inside: {
      'variable': /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
    }
  },
  'variable': /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
  'keyword': [// Directives
  /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/, // Functions
  {
    pattern: /(\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \t])/,
    lookbehind: true
  }],
  'operator': /(?:::|[?:+!])?=|[|@]/,
  'punctuation': /[:;(){}]/
};
/* "prismjs/components/prism-markdown" */

(function (Prism) {
  // Allow only one line break
  var inner = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?!\n|\r\n?))/.source;
  /**
   * This function is intended for the creation of the bold or italic pattern.
   *
   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.
   *
   * _Note:_ Keep in mind that this adds a capturing group.
   *
   * @param {string} pattern
   * @returns {RegExp}
   */

  function createInline(pattern) {
    pattern = pattern.replace(/<inner>/g, function () {
      return inner;
    });
    return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + '(?:' + pattern + ')');
  }

  var tableCell = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
  var tableRow = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function () {
    return tableCell;
  });
  var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
  Prism.languages.markdown = Prism.languages.extend('markup', {});
  Prism.languages.insertBefore('markdown', 'prolog', {
    'front-matter-block': {
      pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
      lookbehind: true,
      greedy: true,
      inside: {
        'punctuation': /^---|---$/,
        'font-matter': {
          pattern: /\S+(?:\s+\S+)*/,
          alias: ['yaml', 'language-yaml'],
          inside: Prism.languages.yaml
        }
      }
    },
    'blockquote': {
      // > ...
      pattern: /^>(?:[\t ]*>)*/m,
      alias: 'punctuation'
    },
    'table': {
      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),
      inside: {
        'table-data-rows': {
          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),
          lookbehind: true,
          inside: {
            'table-data': {
              pattern: RegExp(tableCell),
              inside: Prism.languages.markdown
            },
            'punctuation': /\|/
          }
        },
        'table-line': {
          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),
          lookbehind: true,
          inside: {
            'punctuation': /\||:?-{3,}:?/
          }
        },
        'table-header-row': {
          pattern: RegExp('^' + tableRow + '$'),
          inside: {
            'table-header': {
              pattern: RegExp(tableCell),
              alias: 'important',
              inside: Prism.languages.markdown
            },
            'punctuation': /\|/
          }
        }
      }
    },
    'code': [{
      // Prefixed by 4 spaces or 1 tab and preceded by an empty line
      pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
      lookbehind: true,
      alias: 'keyword'
    }, {
      // `code`
      // ``code``
      pattern: /``.+?``|`[^`\r\n]+`/,
      alias: 'keyword'
    }, {
      // ```optional language
      // code block
      // ```
      pattern: /^```[\s\S]*?^```$/m,
      greedy: true,
      inside: {
        'code-block': {
          pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
          lookbehind: true
        },
        'code-language': {
          pattern: /^(```).+/,
          lookbehind: true
        },
        'punctuation': /```/
      }
    }],
    'title': [{
      // title 1
      // =======
      // title 2
      // -------
      pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
      alias: 'important',
      inside: {
        punctuation: /==+$|--+$/
      }
    }, {
      // # title 1
      // ###### title 6
      pattern: /(^\s*)#.+/m,
      lookbehind: true,
      alias: 'important',
      inside: {
        punctuation: /^#+|#+$/
      }
    }],
    'hr': {
      // ***
      // ---
      // * * *
      // -----------
      pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
      lookbehind: true,
      alias: 'punctuation'
    },
    'list': {
      // * item
      // + item
      // - item
      // 1. item
      pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
      lookbehind: true,
      alias: 'punctuation'
    },
    'url-reference': {
      // [id]: http://example.com "Optional title"
      // [id]: http://example.com 'Optional title'
      // [id]: http://example.com (Optional title)
      // [id]: <http://example.com> "Optional title"
      pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
      inside: {
        'variable': {
          pattern: /^(!?\[)[^\]]+/,
          lookbehind: true
        },
        'string': /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
        'punctuation': /^[\[\]!:]|[<>]/
      },
      alias: 'url'
    },
    'bold': {
      // **strong**
      // __strong__
      // allow one nested instance of italic text using the same delimiter
      pattern: createInline(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'content': {
          pattern: /(^..)[\s\S]+(?=..$)/,
          lookbehind: true,
          inside: {} // see below

        },
        'punctuation': /\*\*|__/
      }
    },
    'italic': {
      // *em*
      // _em_
      // allow one nested instance of bold text using the same delimiter
      pattern: createInline(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'content': {
          pattern: /(^.)[\s\S]+(?=.$)/,
          lookbehind: true,
          inside: {} // see below

        },
        'punctuation': /[*_]/
      }
    },
    'strike': {
      // ~~strike through~~
      // ~strike~
      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\2/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'content': {
          pattern: /(^~~?)[\s\S]+(?=\1$)/,
          lookbehind: true,
          inside: {} // see below

        },
        'punctuation': /~~?/
      }
    },
    'url': {
      // [example](http://example.com "Optional title")
      // [example][id]
      // [example] [id]
      pattern: createInline(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'operator': /^!/,
        'content': {
          pattern: /(^\[)[^\]]+(?=\])/,
          lookbehind: true,
          inside: {} // see below

        },
        'variable': {
          pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
          lookbehind: true
        },
        'url': {
          pattern: /(^\]\()[^\s)]+/,
          lookbehind: true
        },
        'string': {
          pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
          lookbehind: true
        }
      }
    }
  });
  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {
    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {
      if (token !== inside) {
        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];
      }
    });
  });
  Prism.hooks.add('after-tokenize', function (env) {
    if (env.language !== 'markdown' && env.language !== 'md') {
      return;
    }

    function walkTokens(tokens) {
      if (!tokens || typeof tokens === 'string') {
        return;
      }

      for (var i = 0, l = tokens.length; i < l; i++) {
        var token = tokens[i];

        if (token.type !== 'code') {
          walkTokens(token.content);
          continue;
        }
        /*
         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token
         * is optional. But the grammar is defined so that there is only one case we have to handle:
         *
         * token.content = [
         *     <span class="punctuation">```</span>,
         *     <span class="code-language">xxxx</span>,
         *     '\n', // exactly one new lines (\r or \n or \r\n)
         *     <span class="code-block">...</span>,
         *     '\n', // exactly one new lines again
         *     <span class="punctuation">```</span>
         * ];
         */


        var codeLang = token.content[1];
        var codeBlock = token.content[3];

        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {
          // this might be a language that Prism does not support
          // do some replacements to support C++, C#, and F#
          var lang = codeLang.content.replace(/\b#/g, 'sharp').replace(/\b\+\+/g, 'pp'); // only use the first word

          lang = (/[a-z][\w-]*/i.exec(lang) || [''])[0].toLowerCase();
          var alias = 'language-' + lang; // add alias

          if (!codeBlock.alias) {
            codeBlock.alias = [alias];
          } else if (typeof codeBlock.alias === 'string') {
            codeBlock.alias = [codeBlock.alias, alias];
          } else {
            codeBlock.alias.push(alias);
          }
        }
      }
    }

    walkTokens(env.tokens);
  });
  Prism.hooks.add('wrap', function (env) {
    if (env.type !== 'code-block') {
      return;
    }

    var codeLang = '';

    for (var i = 0, l = env.classes.length; i < l; i++) {
      var cls = env.classes[i];
      var match = /language-(.+)/.exec(cls);

      if (match) {
        codeLang = match[1];
        break;
      }
    }

    var grammar = Prism.languages[codeLang];

    if (!grammar) {
      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {
        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);
        env.attributes['id'] = id;
        Prism.plugins.autoloader.loadLanguages(codeLang, function () {
          var ele = document.getElementById(id);

          if (ele) {
            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);
          }
        });
      }
    } else {
      // reverse Prism.util.encode
      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');
      env.content = Prism.highlight(code, grammar, codeLang);
    }
  });
  Prism.languages.md = Prism.languages.markdown;
})(Prism);
/* "prismjs/components/prism-objectivec" */


Prism.languages.objectivec = Prism.languages.extend('c', {
  'string': /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|@"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
  'keyword': /\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
  'operator': /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
});
delete Prism.languages.objectivec['class-name'];
Prism.languages.objc = Prism.languages.objectivec;
/* "prismjs/components/prism-ocaml" */

Prism.languages.ocaml = {
  'comment': /\(\*[\s\S]*?\*\)/,
  'string': [{
    pattern: /"(?:\\.|[^\\\r\n"])*"/,
    greedy: true
  }, {
    pattern: /(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,
    greedy: true
  }],
  'number': /\b(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?[\d_]+)?)/i,
  'directive': {
    pattern: /\B#\w+/,
    alias: 'important'
  },
  'label': {
    pattern: /\B~\w+/,
    alias: 'function'
  },
  'type-variable': {
    pattern: /\B'\w+/,
    alias: 'function'
  },
  'variant': {
    pattern: /`\w+/,
    alias: 'variable'
  },
  'module': {
    pattern: /\b[A-Z]\w+/,
    alias: 'variable'
  },
  // For the list of keywords and operators,
  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84
  'keyword': /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
  'boolean': /\b(?:false|true)\b/,
  // Custom operators are allowed
  'operator': /:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
  'punctuation': /[(){}\[\]|.,:;]|\b_\b/
};
/* "prismjs/components/prism-python" */

Prism.languages.python = {
  'comment': {
    pattern: /(^|[^\\])#.*/,
    lookbehind: true
  },
  'string-interpolation': {
    pattern: /(?:f|rf|fr)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
    greedy: true,
    inside: {
      'interpolation': {
        // "{" <expression> <optional "!s", "!r", or "!a"> <optional ":" format specifier> "}"
        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,
        lookbehind: true,
        inside: {
          'format-spec': {
            pattern: /(:)[^:(){}]+(?=}$)/,
            lookbehind: true
          },
          'conversion-option': {
            pattern: /![sra](?=[:}]$)/,
            alias: 'punctuation'
          },
          rest: null
        }
      },
      'string': /[\s\S]+/
    }
  },
  'triple-quoted-string': {
    pattern: /(?:[rub]|rb|br)?("""|''')[\s\S]*?\1/i,
    greedy: true,
    alias: 'string'
  },
  'string': {
    pattern: /(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
    greedy: true
  },
  'function': {
    pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
    lookbehind: true
  },
  'class-name': {
    pattern: /(\bclass\s+)\w+/i,
    lookbehind: true
  },
  'decorator': {
    pattern: /(^\s*)@\w+(?:\.\w+)*/im,
    lookbehind: true,
    alias: ['annotation', 'punctuation'],
    inside: {
      'punctuation': /\./
    }
  },
  'keyword': /\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
  'builtin': /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
  'boolean': /\b(?:True|False|None)\b/,
  'number': /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,
  'operator': /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
  'punctuation': /[{}[\];(),.:]/
};
Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;
Prism.languages.py = Prism.languages.python;
/* "prismjs/components/prism-reason" */

Prism.languages.reason = Prism.languages.extend('clike', {
  'string': {
    pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
    greedy: true
  },
  // 'class-name' must be matched *after* 'constructor' defined below
  'class-name': /\b[A-Z]\w*/,
  'keyword': /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
  'operator': /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:mod|land|lor|lxor|lsl|lsr|asr)\b/
});
Prism.languages.insertBefore('reason', 'class-name', {
  'character': {
    pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
    alias: 'string'
  },
  'constructor': {
    // Negative look-ahead prevents from matching things like String.capitalize
    pattern: /\b[A-Z]\w*\b(?!\s*\.)/,
    alias: 'variable'
  },
  'label': {
    pattern: /\b[a-z]\w*(?=::)/,
    alias: 'symbol'
  }
}); // We can't match functions property, so let's not even try.

delete Prism.languages.reason.function;
/* "prismjs/components/prism-sass" */

(function (Prism) {
  Prism.languages.sass = Prism.languages.extend('css', {
    // Sass comments don't need to be closed, only indented
    'comment': {
      pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
      lookbehind: true
    }
  });
  Prism.languages.insertBefore('sass', 'atrule', {
    // We want to consume the whole line
    'atrule-line': {
      // Includes support for = and + shortcuts
      pattern: /^(?:[ \t]*)[@+=].+/m,
      inside: {
        'atrule': /(?:@[\w-]+|[+=])/m
      }
    }
  });
  delete Prism.languages.sass.atrule;
  var variable = /\$[-\w]+|#\{\$[-\w]+\}/;
  var operator = [/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/, {
    pattern: /(\s+)-(?=\s)/,
    lookbehind: true
  }];
  Prism.languages.insertBefore('sass', 'property', {
    // We want to consume the whole line
    'variable-line': {
      pattern: /^[ \t]*\$.+/m,
      inside: {
        'punctuation': /:/,
        'variable': variable,
        'operator': operator
      }
    },
    // We want to consume the whole line
    'property-line': {
      pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
      inside: {
        'property': [/[^:\s]+(?=\s*:)/, {
          pattern: /(:)[^:\s]+/,
          lookbehind: true
        }],
        'punctuation': /:/,
        'variable': variable,
        'operator': operator,
        'important': Prism.languages.sass.important
      }
    }
  });
  delete Prism.languages.sass.property;
  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,
  // what's left should be selectors

  Prism.languages.insertBefore('sass', 'punctuation', {
    'selector': {
      pattern: /([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/,
      lookbehind: true
    }
  });
})(Prism);
/* "prismjs/components/prism-scss" */


Prism.languages.scss = Prism.languages.extend('css', {
  'comment': {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
    lookbehind: true
  },
  'atrule': {
    pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
    inside: {
      'rule': /@[\w-]+/ // See rest below

    }
  },
  // url, compassified
  'url': /(?:[-a-z]+-)?url(?=\()/i,
  // CSS selector regex is not appropriate for Sass
  // since there can be lot more things (var, @ directive, nesting..)
  // a selector must start at the end of a property or after a brace (end of other rules or nesting)
  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable
  // the end of a selector is found when there is no rules in it ( {} or {\s}) or if there is a property (because an interpolated var
  // can "pass" as a selector- e.g: proper#{$erty})
  // this one was hard to do, so please be careful if you edit this one :)
  'selector': {
    // Initial look-ahead is used to prevent matching of blank selectors
    pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]+))/m,
    inside: {
      'parent': {
        pattern: /&/,
        alias: 'important'
      },
      'placeholder': /%[-\w]+/,
      'variable': /\$[-\w]+|#\{\$[-\w]+\}/
    }
  },
  'property': {
    pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
    inside: {
      'variable': /\$[-\w]+|#\{\$[-\w]+\}/
    }
  }
});
Prism.languages.insertBefore('scss', 'atrule', {
  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\b/i, {
    pattern: /( +)(?:from|through)(?= )/,
    lookbehind: true
  }]
});
Prism.languages.insertBefore('scss', 'important', {
  // var and interpolated vars
  'variable': /\$[-\w]+|#\{\$[-\w]+\}/
});
Prism.languages.insertBefore('scss', 'function', {
  'module-modifier': {
    pattern: /\b(?:as|with|show|hide)\b/i,
    alias: 'keyword'
  },
  'placeholder': {
    pattern: /%[-\w]+/,
    alias: 'selector'
  },
  'statement': {
    pattern: /\B!(?:default|optional)\b/i,
    alias: 'keyword'
  },
  'boolean': /\b(?:true|false)\b/,
  'null': {
    pattern: /\bnull\b/,
    alias: 'keyword'
  },
  'operator': {
    pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,
    lookbehind: true
  }
});
Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss;
/* "prismjs/components/prism-sql" */

Prism.languages.sql = {
  'comment': {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
    lookbehind: true
  },
  'variable': [{
    pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
    greedy: true
  }, /@[\w.$]+/],
  'string': {
    pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
    greedy: true,
    lookbehind: true
  },
  'function': /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
  // Should we highlight user defined functions too?
  'keyword': /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
  'boolean': /\b(?:TRUE|FALSE|NULL)\b/i,
  'number': /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
  'operator': /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
  'punctuation': /[;[\]()`,.]/
};
/* "prismjs/components/prism-stylus" */

(function (Prism) {
  var unit = {
    pattern: /(\b\d+)(?:%|[a-z]+)/,
    lookbehind: true
  }; // 123 -123 .123 -.123 12.3 -12.3

  var number = {
    pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
    lookbehind: true
  };
  var inside = {
    'comment': {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true
    },
    'url': {
      pattern: /url\((["']?).*?\1\)/i,
      greedy: true
    },
    'string': {
      pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
      greedy: true
    },
    'interpolation': null,
    // See below
    'func': null,
    // See below
    'important': /\B!(?:important|optional)\b/i,
    'keyword': {
      pattern: /(^|\s+)(?:(?:if|else|for|return|unless)(?=\s+|$)|@[\w-]+)/,
      lookbehind: true
    },
    'hexcode': /#[\da-f]{3,6}/i,
    'color': [/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i, {
      pattern: /\b(?:rgb|hsl)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:rgb|hsl)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
      inside: {
        'unit': unit,
        'number': number,
        'function': /[\w-]+(?=\()/,
        'punctuation': /[(),]/
      }
    }],
    'entity': /\\[\da-f]{1,8}/i,
    'unit': unit,
    'boolean': /\b(?:true|false)\b/,
    'operator': [// We want non-word chars around "-" because it is
    // accepted in property names.
    /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],
    'number': number,
    'punctuation': /[{}()\[\];:,]/
  };
  inside['interpolation'] = {
    pattern: /\{[^\r\n}:]+\}/,
    alias: 'variable',
    inside: {
      'delimiter': {
        pattern: /^{|}$/,
        alias: 'punctuation'
      },
      rest: inside
    }
  };
  inside['func'] = {
    pattern: /[\w-]+\([^)]*\).*/,
    inside: {
      'function': /^[^(]+/,
      rest: inside
    }
  };
  Prism.languages.stylus = {
    'atrule-declaration': {
      pattern: /(^\s*)@.+/m,
      lookbehind: true,
      inside: {
        'atrule': /^@[\w-]+/,
        rest: inside
      }
    },
    'variable-declaration': {
      pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
      lookbehind: true,
      inside: {
        'variable': /^\S+/,
        rest: inside
      }
    },
    'statement': {
      pattern: /(^[ \t]*)(?:if|else|for|return|unless)[ \t].+/m,
      lookbehind: true,
      inside: {
        'keyword': /^\S+/,
        rest: inside
      }
    },
    // A property/value pair cannot end with a comma or a brace
    // It cannot have indented content unless it ended with a semicolon
    'property-declaration': {
      pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,](?=$)(?!(?:\r?\n|\r)(?:\{|\2[ \t]+)))/m,
      lookbehind: true,
      inside: {
        'property': {
          pattern: /^[^\s:]+/,
          inside: {
            'interpolation': inside.interpolation
          }
        },
        rest: inside
      }
    },
    // A selector can contain parentheses only as part of a pseudo-element
    // It can span multiple lines.
    // It must end with a comma or an accolade or have indented content.
    'selector': {
      pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t]+)))/m,
      lookbehind: true,
      inside: {
        'interpolation': inside.interpolation,
        'comment': inside.comment,
        'punctuation': /[{},]/
      }
    },
    'func': inside.func,
    'string': inside.string,
    'comment': {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true,
      greedy: true
    },
    'interpolation': inside.interpolation,
    'punctuation': /[{}()\[\];:.]/
  };
})(Prism);
/* "prismjs/components/prism-typescript" */


(function (Prism) {
  Prism.languages.typescript = Prism.languages.extend('javascript', {
    'class-name': {
      pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
      lookbehind: true,
      greedy: true,
      inside: null // see below

    },
    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words
    'keyword': /\b(?:abstract|as|asserts|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\b/,
    'builtin': /\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/
  }); // doesn't work with TS because TS is too complex

  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types

  var typeInside = Prism.languages.extend('typescript', {});
  delete typeInside['class-name'];
  Prism.languages.typescript['class-name'].inside = typeInside;
  Prism.languages.insertBefore('typescript', 'function', {
    'generic-function': {
      // e.g. foo<T extends "bar" | "baz">( ...
      pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
      greedy: true,
      inside: {
        'function': /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
        'generic': {
          pattern: /<[\s\S]+/,
          // everything after the first <
          alias: 'class-name',
          inside: typeInside
        }
      }
    }
  });
  Prism.languages.ts = Prism.languages.typescript;
})(Prism);
/* "prismjs/components/prism-tsx" */


(function (Prism) {
  var typescript = Prism.util.clone(Prism.languages.typescript);
  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.
  // Idea by https://github.com/karlhorky
  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928

  var tag = Prism.languages.tsx.tag;
  tag.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);
  tag.lookbehind = true;
})(Prism);
/* "prismjs/components/prism-wasm" */


Prism.languages.wasm = {
  'comment': [/\(;[\s\S]*?;\)/, {
    pattern: /;;.*/,
    greedy: true
  }],
  'string': {
    pattern: /"(?:\\[\s\S]|[^"\\])*"/,
    greedy: true
  },
  'keyword': [{
    pattern: /\b(?:align|offset)=/,
    inside: {
      'operator': /=/
    }
  }, {
    pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
    inside: {
      'punctuation': /\./
    }
  }, /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],
  'variable': /\$[\w!#$%&'*+\-./:<=>?@\\^_`|~]+/i,
  'number': /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
  'punctuation': /[()]/
};
/* "prismjs/components/prism-yaml" */

(function (Prism) {
  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property
  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node
  var anchorOrAlias = /[*&][^\s[\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property

  var tag = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)

  var properties = '(?:' + tag.source + '(?:[ \t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)
  // This is a simplified version that doesn't support "#" and multiline keys
  // All these long scarry character classes are simplified versions of YAML's characters

  var plainKey = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {
    return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
  });
  var string = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
  /**
   *
   * @param {string} value
   * @param {string} [flags]
   * @returns {RegExp}
   */

  function createValuePattern(value, flags) {
    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag

    var pattern = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|]|}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function () {
      return properties;
    }).replace(/<<value>>/g, function () {
      return value;
    });
    return RegExp(pattern, flags);
  }

  Prism.languages.yaml = {
    'scalar': {
      pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function () {
        return properties;
      })),
      lookbehind: true,
      alias: 'string'
    },
    'comment': /#.*/,
    'key': {
      pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function () {
        return properties;
      }).replace(/<<key>>/g, function () {
        return '(?:' + plainKey + '|' + string + ')';
      })),
      lookbehind: true,
      greedy: true,
      alias: 'atrule'
    },
    'directive': {
      pattern: /(^[ \t]*)%.+/m,
      lookbehind: true,
      alias: 'important'
    },
    'datetime': {
      pattern: createValuePattern(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
      lookbehind: true,
      alias: 'number'
    },
    'boolean': {
      pattern: createValuePattern(/true|false/.source, 'i'),
      lookbehind: true,
      alias: 'important'
    },
    'null': {
      pattern: createValuePattern(/null|~/.source, 'i'),
      lookbehind: true,
      alias: 'important'
    },
    'string': {
      pattern: createValuePattern(string),
      lookbehind: true,
      greedy: true
    },
    'number': {
      pattern: createValuePattern(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, 'i'),
      lookbehind: true
    },
    'tag': tag,
    'important': anchorOrAlias,
    'punctuation': /---|[:[\]{}\-,|>?]|\.\.\./
  };
  Prism.languages.yml = Prism.languages.yaml;
})(Prism);

/* harmony default export */ var prism = (Prism);
;// CONCATENATED MODULE: ./node_modules/prism-react-renderer/themes/duotoneDark/index.js
// Duotone Dark
// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)
// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)
// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)
var theme = {
  plain: {
    backgroundColor: "#2a2734",
    color: "#9a86fd"
  },
  styles: [{
    types: ["comment", "prolog", "doctype", "cdata", "punctuation"],
    style: {
      color: "#6c6783"
    }
  }, {
    types: ["namespace"],
    style: {
      opacity: 0.7
    }
  }, {
    types: ["tag", "operator", "number"],
    style: {
      color: "#e09142"
    }
  }, {
    types: ["property", "function"],
    style: {
      color: "#9a86fd"
    }
  }, {
    types: ["tag-id", "selector", "atrule-id"],
    style: {
      color: "#eeebff"
    }
  }, {
    types: ["attr-name"],
    style: {
      color: "#c4b9fe"
    }
  }, {
    types: ["boolean", "string", "entity", "url", "attr-value", "keyword", "control", "directive", "unit", "statement", "regex", "at-rule", "placeholder", "variable"],
    style: {
      color: "#ffcc99"
    }
  }, {
    types: ["deleted"],
    style: {
      textDecorationLine: "line-through"
    }
  }, {
    types: ["inserted"],
    style: {
      textDecorationLine: "underline"
    }
  }, {
    types: ["italic"],
    style: {
      fontStyle: "italic"
    }
  }, {
    types: ["important", "bold"],
    style: {
      fontWeight: "bold"
    }
  }, {
    types: ["important"],
    style: {
      color: "#c4b9fe"
    }
  }]
};
/* harmony default export */ var duotoneDark = (theme);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
;// CONCATENATED MODULE: ./node_modules/prism-react-renderer/dist/index.js




var defaultProps = {
  // $FlowFixMe
  Prism: prism,
  theme: duotoneDark
};

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var newlineRe = /\r\n|\r|\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }

var normalizeEmptyLines = function normalizeEmptyLines(line) {
  if (line.length === 0) {
    line.push({
      types: ["plain"],
      content: "\n",
      empty: true
    });
  } else if (line.length === 1 && line[0].content === "") {
    line[0].content = "\n";
    line[0].empty = true;
  }
};

var appendTypes = function appendTypes(types, add) {
  var typesSize = types.length;

  if (typesSize > 0 && types[typesSize - 1] === add) {
    return types;
  }

  return types.concat(add);
}; // Takes an array of Prism's tokens and groups them by line, turning plain
// strings into tokens as well. Tokens can become recursive in some cases,
// which means that their types are concatenated. Plain-string tokens however
// are always of type "plain".
// This is not recursive to avoid exceeding the call-stack limit, since it's unclear
// how nested Prism's tokens can become


var normalizeTokens = function normalizeTokens(tokens) {
  var typeArrStack = [[]];
  var tokenArrStack = [tokens];
  var tokenArrIndexStack = [0];
  var tokenArrSizeStack = [tokens.length];
  var i = 0;
  var stackIndex = 0;
  var currentLine = [];
  var acc = [currentLine];

  while (stackIndex > -1) {
    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {
      var content = void 0;
      var types = typeArrStack[stackIndex];
      var tokenArr = tokenArrStack[stackIndex];
      var token = tokenArr[i]; // Determine content and append type to types if necessary

      if (typeof token === "string") {
        types = stackIndex > 0 ? types : ["plain"];
        content = token;
      } else {
        types = appendTypes(types, token.type);

        if (token.alias) {
          types = appendTypes(types, token.alias);
        }

        content = token.content;
      } // If token.content is an array, increase the stack depth and repeat this while-loop


      if (typeof content !== "string") {
        stackIndex++;
        typeArrStack.push(types);
        tokenArrStack.push(content);
        tokenArrIndexStack.push(0);
        tokenArrSizeStack.push(content.length);
        continue;
      } // Split by newlines


      var splitByNewlines = content.split(newlineRe);
      var newlineCount = splitByNewlines.length;
      currentLine.push({
        types: types,
        content: splitByNewlines[0]
      }); // Create a new line for each string on a new line

      for (var i$1 = 1; i$1 < newlineCount; i$1++) {
        normalizeEmptyLines(currentLine);
        acc.push(currentLine = []);
        currentLine.push({
          types: types,
          content: splitByNewlines[i$1]
        });
      }
    } // Decreate the stack depth


    stackIndex--;
    typeArrStack.pop();
    tokenArrStack.pop();
    tokenArrIndexStack.pop();
    tokenArrSizeStack.pop();
  }

  normalizeEmptyLines(currentLine);
  return acc;
};

var themeToDict = function themeToDict(theme, language) {
  var plain = theme.plain; // $FlowFixMe

  var base = Object.create(null);
  var themeDict = theme.styles.reduce(function (acc, themeEntry) {
    var languages = themeEntry.languages;
    var style = themeEntry.style;

    if (languages && !languages.includes(language)) {
      return acc;
    }

    themeEntry.types.forEach(function (type) {
      // $FlowFixMe
      var accStyle = _extends({}, acc[type], style);

      acc[type] = accStyle;
    });
    return acc;
  }, base); // $FlowFixMe

  themeDict.root = plain; // $FlowFixMe

  themeDict.plain = _extends({}, plain, {
    backgroundColor: null
  });
  return themeDict;
};

function objectWithoutProperties(obj, exclude) {
  var target = {};

  for (var k in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];
  }

  return target;
}

var Highlight = /*@__PURE__*/function (Component) {
  function Highlight() {
    var this$1 = this;
    var args = [],
        len = arguments.length;

    while (len--) {
      args[len] = arguments[len];
    }

    Component.apply(this, args);

    _defineProperty(this, "getThemeDict", function (props) {
      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {
        return this$1.themeDict;
      }

      this$1.prevTheme = props.theme;
      this$1.prevLanguage = props.language;
      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;
      return this$1.themeDict = themeDict;
    });

    _defineProperty(this, "getLineProps", function (ref) {
      var key = ref.key;
      var className = ref.className;
      var style = ref.style;
      var rest$1 = objectWithoutProperties(ref, ["key", "className", "style", "line"]);
      var rest = rest$1;

      var output = _extends({}, rest, {
        className: "token-line",
        style: undefined,
        key: undefined
      });

      var themeDict = this$1.getThemeDict(this$1.props);

      if (themeDict !== undefined) {
        output.style = themeDict.plain;
      }

      if (style !== undefined) {
        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;
      }

      if (key !== undefined) {
        output.key = key;
      }

      if (className) {
        output.className += " " + className;
      }

      return output;
    });

    _defineProperty(this, "getStyleForToken", function (ref) {
      var types = ref.types;
      var empty = ref.empty;
      var typesSize = types.length;
      var themeDict = this$1.getThemeDict(this$1.props);

      if (themeDict === undefined) {
        return undefined;
      } else if (typesSize === 1 && types[0] === "plain") {
        return empty ? {
          display: "inline-block"
        } : undefined;
      } else if (typesSize === 1 && !empty) {
        return themeDict[types[0]];
      }

      var baseStyle = empty ? {
        display: "inline-block"
      } : {}; // $FlowFixMe

      var typeStyles = types.map(function (type) {
        return themeDict[type];
      });
      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));
    });

    _defineProperty(this, "getTokenProps", function (ref) {
      var key = ref.key;
      var className = ref.className;
      var style = ref.style;
      var token = ref.token;
      var rest$1 = objectWithoutProperties(ref, ["key", "className", "style", "token"]);
      var rest = rest$1;

      var output = _extends({}, rest, {
        className: "token " + token.types.join(" "),
        children: token.content,
        style: this$1.getStyleForToken(token),
        key: undefined
      });

      if (style !== undefined) {
        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;
      }

      if (key !== undefined) {
        output.key = key;
      }

      if (className) {
        output.className += " " + className;
      }

      return output;
    });

    _defineProperty(this, "tokenize", function (Prism, code, grammar, language) {
      var env = {
        code: code,
        grammar: grammar,
        language: language,
        tokens: []
      };
      Prism.hooks.run("before-tokenize", env);
      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);
      Prism.hooks.run("after-tokenize", env);
      return tokens;
    });
  }

  if (Component) Highlight.__proto__ = Component;
  Highlight.prototype = Object.create(Component && Component.prototype);
  Highlight.prototype.constructor = Highlight;

  Highlight.prototype.render = function render() {
    var ref = this.props;
    var Prism = ref.Prism;
    var language = ref.language;
    var code = ref.code;
    var children = ref.children;
    var themeDict = this.getThemeDict(this.props);
    var grammar = Prism.languages[language];
    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];
    var tokens = normalizeTokens(mixedTokens);
    return children({
      tokens: tokens,
      className: "prism-code language-" + language,
      style: themeDict !== undefined ? themeDict.root : {},
      getLineProps: this.getLineProps,
      getTokenProps: this.getTokenProps
    });
  };

  return Highlight;
}(react.Component);

/* harmony default export */ var dist = (Highlight);


/***/ }),

/***/ 13019:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css
var theme = {
  plain: {
    color: "#393A34",
    backgroundColor: "#f6f8fa"
  },
  styles: [{
    types: ["comment", "prolog", "doctype", "cdata"],
    style: {
      color: "#999988",
      fontStyle: "italic"
    }
  }, {
    types: ["namespace"],
    style: {
      opacity: 0.7
    }
  }, {
    types: ["string", "attr-value"],
    style: {
      color: "#e3116c"
    }
  }, {
    types: ["punctuation", "operator"],
    style: {
      color: "#393A34"
    }
  }, {
    types: ["entity", "url", "symbol", "number", "boolean", "variable", "constant", "property", "regex", "inserted"],
    style: {
      color: "#36acaa"
    }
  }, {
    types: ["atrule", "keyword", "attr-name", "selector"],
    style: {
      color: "#00a4db"
    }
  }, {
    types: ["function", "deleted", "tag"],
    style: {
      color: "#d73a49"
    }
  }, {
    types: ["function-variable"],
    style: {
      color: "#6f42c1"
    }
  }, {
    types: ["tag", "selector", "keyword"],
    style: {
      color: "#00009f"
    }
  }]
};
/* harmony default export */ __webpack_exports__["Z"] = (theme);

/***/ }),

/***/ 41194:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
// Converted automatically using ./tools/themeFromVsCode
var theme = {
  plain: {
    color: "#9CDCFE",
    backgroundColor: "#1E1E1E"
  },
  styles: [{
    types: ["prolog"],
    style: {
      color: "rgb(0, 0, 128)"
    }
  }, {
    types: ["comment"],
    style: {
      color: "rgb(106, 153, 85)"
    }
  }, {
    types: ["builtin", "changed", "keyword", "interpolation-punctuation"],
    style: {
      color: "rgb(86, 156, 214)"
    }
  }, {
    types: ["number", "inserted"],
    style: {
      color: "rgb(181, 206, 168)"
    }
  }, {
    types: ["constant"],
    style: {
      color: "rgb(100, 102, 149)"
    }
  }, {
    types: ["attr-name", "variable"],
    style: {
      color: "rgb(156, 220, 254)"
    }
  }, {
    types: ["deleted", "string", "attr-value", "template-punctuation"],
    style: {
      color: "rgb(206, 145, 120)"
    }
  }, {
    types: ["selector"],
    style: {
      color: "rgb(215, 186, 125)"
    }
  }, {
    // Fix tag color
    types: ["tag"],
    style: {
      color: "rgb(78, 201, 176)"
    }
  }, {
    // Fix tag color for HTML
    types: ["tag"],
    languages: ["markup"],
    style: {
      color: "rgb(86, 156, 214)"
    }
  }, {
    types: ["punctuation", "operator"],
    style: {
      color: "rgb(212, 212, 212)"
    }
  }, {
    // Fix punctuation color for HTML
    types: ["punctuation"],
    languages: ["markup"],
    style: {
      color: "#808080"
    }
  }, {
    types: ["function"],
    style: {
      color: "rgb(220, 220, 170)"
    }
  }, {
    types: ["class-name"],
    style: {
      color: "rgb(78, 201, 176)"
    }
  }, {
    types: ["char"],
    style: {
      color: "rgb(209, 105, 105)"
    }
  }]
};
/* harmony default export */ __webpack_exports__["Z"] = (theme);

/***/ }),

/***/ 49647:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Kd": function() { return /* reexport */ modules_LiveAnnouncer; },
  "xb": function() { return /* reexport */ modules_LiveMessage; }
});

// UNUSED EXPORTS: LiveMessenger

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/MessageBlock.js

var offScreenStyle = {
  border: 0,
  clip: 'rect(0 0 0 0)',
  height: '1px',
  margin: '-1px',
  overflow: 'hidden',
  whiteSpace: 'nowrap',
  padding: 0,
  width: '1px',
  position: 'absolute'
};

var MessageBlock = function MessageBlock(_ref) {
  var message = _ref.message,
      ariaLive = _ref['aria-live'];
  return react.createElement('div', {
    style: offScreenStyle,
    role: 'log',
    'aria-live': ariaLive
  }, message ? message : '');
};

/* harmony default export */ var modules_MessageBlock = (MessageBlock);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/Announcer.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}




var Announcer = function (_Component) {
  _inherits(Announcer, _Component);

  function Announcer() {
    var _temp, _this, _ret;

    _classCallCheck(this, Announcer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
      assertiveMessage1: '',
      assertiveMessage2: '',
      politeMessage1: '',
      politeMessage2: '',
      oldPolitemessage: '',
      oldPoliteMessageId: '',
      oldAssertiveMessage: '',
      oldAssertiveMessageId: '',
      setAlternatePolite: false,
      setAlternateAssertive: false
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Announcer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, state) {
    var oldPolitemessage = state.oldPolitemessage,
        oldPoliteMessageId = state.oldPoliteMessageId,
        oldAssertiveMessage = state.oldAssertiveMessage,
        oldAssertiveMessageId = state.oldAssertiveMessageId;
    var politeMessage = nextProps.politeMessage,
        politeMessageId = nextProps.politeMessageId,
        assertiveMessage = nextProps.assertiveMessage,
        assertiveMessageId = nextProps.assertiveMessageId;

    if (oldPolitemessage !== politeMessage || oldPoliteMessageId !== politeMessageId) {
      return {
        politeMessage1: state.setAlternatePolite ? '' : politeMessage,
        politeMessage2: state.setAlternatePolite ? politeMessage : '',
        oldPolitemessage: politeMessage,
        oldPoliteMessageId: politeMessageId,
        setAlternatePolite: !state.setAlternatePolite
      };
    }

    if (oldAssertiveMessage !== assertiveMessage || oldAssertiveMessageId !== assertiveMessageId) {
      return {
        assertiveMessage1: state.setAlternateAssertive ? '' : assertiveMessage,
        assertiveMessage2: state.setAlternateAssertive ? assertiveMessage : '',
        oldAssertiveMessage: assertiveMessage,
        oldAssertiveMessageId: assertiveMessageId,
        setAlternateAssertive: !state.setAlternateAssertive
      };
    }

    return null;
  };

  Announcer.prototype.render = function render() {
    var _state = this.state,
        assertiveMessage1 = _state.assertiveMessage1,
        assertiveMessage2 = _state.assertiveMessage2,
        politeMessage1 = _state.politeMessage1,
        politeMessage2 = _state.politeMessage2;
    return react.createElement('div', null, react.createElement(modules_MessageBlock, {
      'aria-live': 'assertive',
      message: assertiveMessage1
    }), react.createElement(modules_MessageBlock, {
      'aria-live': 'assertive',
      message: assertiveMessage2
    }), react.createElement(modules_MessageBlock, {
      'aria-live': 'polite',
      message: politeMessage1
    }), react.createElement(modules_MessageBlock, {
      'aria-live': 'polite',
      message: politeMessage2
    }));
  };

  return Announcer;
}(react.Component);

/* harmony default export */ var modules_Announcer = (Announcer);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/AnnouncerContext.js

var AnnouncerContext_AnnouncerContext = react.createContext({
  announceAssertive: logContextWarning,
  announcePolite: logContextWarning
});

function logContextWarning() {
  console.warn('Announcement failed, LiveAnnouncer context is missing');
}

/* harmony default export */ var modules_AnnouncerContext = (AnnouncerContext_AnnouncerContext);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/LiveAnnouncer.js
function LiveAnnouncer_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function LiveAnnouncer_possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function LiveAnnouncer_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}





var LiveAnnouncer = function (_Component) {
  LiveAnnouncer_inherits(LiveAnnouncer, _Component);

  function LiveAnnouncer(props) {
    LiveAnnouncer_classCallCheck(this, LiveAnnouncer);

    var _this = LiveAnnouncer_possibleConstructorReturn(this, _Component.call(this, props));

    _this.announcePolite = function (message, id) {
      _this.setState({
        announcePoliteMessage: message,
        politeMessageId: id ? id : ''
      });
    };

    _this.announceAssertive = function (message, id) {
      _this.setState({
        announceAssertiveMessage: message,
        assertiveMessageId: id ? id : ''
      });
    };

    _this.state = {
      announcePoliteMessage: '',
      politeMessageId: '',
      announceAssertiveMessage: '',
      assertiveMessageId: '',
      updateFunctions: {
        announcePolite: _this.announcePolite,
        announceAssertive: _this.announceAssertive
      }
    };
    return _this;
  }

  LiveAnnouncer.prototype.render = function render() {
    var _state = this.state,
        announcePoliteMessage = _state.announcePoliteMessage,
        politeMessageId = _state.politeMessageId,
        announceAssertiveMessage = _state.announceAssertiveMessage,
        assertiveMessageId = _state.assertiveMessageId,
        updateFunctions = _state.updateFunctions;
    return react.createElement(modules_AnnouncerContext.Provider, {
      value: updateFunctions
    }, this.props.children, react.createElement(modules_Announcer, {
      assertiveMessage: announceAssertiveMessage,
      assertiveMessageId: assertiveMessageId,
      politeMessage: announcePoliteMessage,
      politeMessageId: politeMessageId
    }));
  };

  return LiveAnnouncer;
}(react.Component);

/* harmony default export */ var modules_LiveAnnouncer = (LiveAnnouncer);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/uuid/v4.js
var v4 = __webpack_require__(19056);
var v4_default = /*#__PURE__*/__webpack_require__.n(v4);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/AnnouncerMessage.js
function AnnouncerMessage_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function AnnouncerMessage_possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function AnnouncerMessage_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}





var AnnouncerMessage = function (_Component) {
  AnnouncerMessage_inherits(AnnouncerMessage, _Component);

  function AnnouncerMessage() {
    var _temp, _this, _ret;

    AnnouncerMessage_classCallCheck(this, AnnouncerMessage);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = AnnouncerMessage_possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.announce = function () {
      var _this$props = _this.props,
          message = _this$props.message,
          ariaLive = _this$props['aria-live'],
          announceAssertive = _this$props.announceAssertive,
          announcePolite = _this$props.announcePolite;

      if (ariaLive === 'assertive') {
        announceAssertive(message || '', v4_default()());
      }

      if (ariaLive === 'polite') {
        announcePolite(message || '', v4_default()());
      }
    }, _temp), AnnouncerMessage_possibleConstructorReturn(_this, _ret);
  }

  AnnouncerMessage.prototype.componentDidMount = function componentDidMount() {
    this.announce();
  };

  AnnouncerMessage.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var message = this.props.message;

    if (message !== prevProps.message) {
      this.announce();
    }
  };

  AnnouncerMessage.prototype.componentWillUnmount = function componentWillUnmount() {
    var _props = this.props,
        clearOnUnmount = _props.clearOnUnmount,
        announceAssertive = _props.announceAssertive,
        announcePolite = _props.announcePolite;

    if (clearOnUnmount === true || clearOnUnmount === 'true') {
      announceAssertive('');
      announcePolite('');
    }
  };

  AnnouncerMessage.prototype.render = function render() {
    return null;
  };

  return AnnouncerMessage;
}(react.Component);

AnnouncerMessage.propTypes =  false ? 0 : {};
/* harmony default export */ var modules_AnnouncerMessage = (AnnouncerMessage);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/LiveMessage.js
var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};





var LiveMessage = function LiveMessage(props) {
  return react.createElement(modules_AnnouncerContext.Consumer, null, function (contextProps) {
    return react.createElement(modules_AnnouncerMessage, _extends({}, contextProps, props));
  });
};

/* harmony default export */ var modules_LiveMessage = (LiveMessage);
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/modules/LiveMessenger.js



var LiveMessenger = function LiveMessenger(_ref) {
  var children = _ref.children;
  return React.createElement(AnnouncerContext.Consumer, null, function (contextProps) {
    return children(contextProps);
  });
};

/* harmony default export */ var modules_LiveMessenger = ((/* unused pure expression or super */ null && (LiveMessenger)));
;// CONCATENATED MODULE: ./node_modules/react-aria-live/es/index.js







/***/ }),

/***/ 32993:
/***/ (function(module) {

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */
var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView; // Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;
    var length, i, keys;

    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;

      for (i = length; i-- !== 0;) {
        if (!equal(a[i], b[i])) return false;
      }

      return true;
    } // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.


    var it;

    if (hasMap && a instanceof Map && b instanceof Map) {
      if (a.size !== b.size) return false;
      it = a.entries();

      while (!(i = it.next()).done) {
        if (!b.has(i.value[0])) return false;
      }

      it = a.entries();

      while (!(i = it.next()).done) {
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      }

      return true;
    }

    if (hasSet && a instanceof Set && b instanceof Set) {
      if (a.size !== b.size) return false;
      it = a.entries();

      while (!(i = it.next()).done) {
        if (!b.has(i.value[0])) return false;
      }

      return true;
    } // END: Modifications


    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;

      for (i = length; i-- !== 0;) {
        if (a[i] !== b[i]) return false;
      }

      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;) {
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    } // END: fast-deep-equal
    // START: react-fast-compare
    // custom handling for DOM elements


    if (hasElementType && a instanceof Element) return false; // custom handling for React/Preact

    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements
        continue;
      } // all other properties should be traversed as usual


      if (!equal(a[keys[i]], b[keys[i]])) return false;
    } // END: react-fast-compare
    // START: fast-deep-equal


    return true;
  }

  return a !== a && b !== b;
} // end fast-deep-equal


module.exports = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if ((error.message || '').match(/stack|recursion/i)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    } // some other error. we should definitely know about these


    throw error;
  }
};

/***/ }),

/***/ 35414:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "q": function() { return /* binding */ HelmetExport; }
/* harmony export */ });
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_side_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24839);
/* harmony import */ var react_side_effect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_side_effect__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(32993);
/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_fast_compare__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67294);
/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46494);
/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(object_assign__WEBPACK_IMPORTED_MODULE_4__);





var ATTRIBUTE_NAMES = {
  BODY: "bodyAttributes",
  HTML: "htmlAttributes",
  TITLE: "titleAttributes"
};
var TAG_NAMES = {
  BASE: "base",
  BODY: "body",
  HEAD: "head",
  HTML: "html",
  LINK: "link",
  META: "meta",
  NOSCRIPT: "noscript",
  SCRIPT: "script",
  STYLE: "style",
  TITLE: "title"
};
var VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {
  return TAG_NAMES[name];
});
var TAG_PROPERTIES = {
  CHARSET: "charset",
  CSS_TEXT: "cssText",
  HREF: "href",
  HTTPEQUIV: "http-equiv",
  INNER_HTML: "innerHTML",
  ITEM_PROP: "itemprop",
  NAME: "name",
  PROPERTY: "property",
  REL: "rel",
  SRC: "src",
  TARGET: "target"
};
var REACT_TAG_MAP = {
  accesskey: "accessKey",
  charset: "charSet",
  class: "className",
  contenteditable: "contentEditable",
  contextmenu: "contextMenu",
  "http-equiv": "httpEquiv",
  itemprop: "itemProp",
  tabindex: "tabIndex"
};
var HELMET_PROPS = {
  DEFAULT_TITLE: "defaultTitle",
  DEFER: "defer",
  ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
  ON_CHANGE_CLIENT_STATE: "onChangeClientState",
  TITLE_TEMPLATE: "titleTemplate"
};
var HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {
  obj[REACT_TAG_MAP[key]] = key;
  return obj;
}, {});
var SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];
var HELMET_ATTRIBUTE = "data-react-helmet";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var objectWithoutProperties = function objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
  var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (encode === false) {
    return String(str);
  }

  return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
};

var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
  var innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);
  var innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);

  if (innermostTemplate && innermostTitle) {
    // use function arg to avoid need to escape $ characters
    return innermostTemplate.replace(/%s/g, function () {
      return Array.isArray(innermostTitle) ? innermostTitle.join("") : innermostTitle;
    });
  }

  var innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);
  return innermostTitle || innermostDefaultTitle || undefined;
};

var getOnChangeClientState = function getOnChangeClientState(propsList) {
  return getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};
};

var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
  return propsList.filter(function (props) {
    return typeof props[tagType] !== "undefined";
  }).map(function (props) {
    return props[tagType];
  }).reduce(function (tagAttrs, current) {
    return _extends({}, tagAttrs, current);
  }, {});
};

var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
  return propsList.filter(function (props) {
    return typeof props[TAG_NAMES.BASE] !== "undefined";
  }).map(function (props) {
    return props[TAG_NAMES.BASE];
  }).reverse().reduce(function (innermostBaseTag, tag) {
    if (!innermostBaseTag.length) {
      var keys = Object.keys(tag);

      for (var i = 0; i < keys.length; i++) {
        var attributeKey = keys[i];
        var lowerCaseAttributeKey = attributeKey.toLowerCase();

        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
          return innermostBaseTag.concat(tag);
        }
      }
    }

    return innermostBaseTag;
  }, []);
};

var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
  // Calculate list of tags, giving priority innermost component (end of the propslist)
  var approvedSeenTags = {};
  return propsList.filter(function (props) {
    if (Array.isArray(props[tagName])) {
      return true;
    }

    if (typeof props[tagName] !== "undefined") {
      warn("Helmet: " + tagName + " should be of type \"Array\". Instead found type \"" + _typeof(props[tagName]) + "\"");
    }

    return false;
  }).map(function (props) {
    return props[tagName];
  }).reverse().reduce(function (approvedTags, instanceTags) {
    var instanceSeenTags = {};
    instanceTags.filter(function (tag) {
      var primaryAttributeKey = void 0;
      var keys = Object.keys(tag);

      for (var i = 0; i < keys.length; i++) {
        var attributeKey = keys[i];
        var lowerCaseAttributeKey = attributeKey.toLowerCase(); // Special rule with link tags, since rel and href are both primary tags, rel takes priority

        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
          primaryAttributeKey = lowerCaseAttributeKey;
        } // Special case for innerHTML which doesn't work lowercased


        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === TAG_PROPERTIES.INNER_HTML || attributeKey === TAG_PROPERTIES.CSS_TEXT || attributeKey === TAG_PROPERTIES.ITEM_PROP)) {
          primaryAttributeKey = attributeKey;
        }
      }

      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
        return false;
      }

      var value = tag[primaryAttributeKey].toLowerCase();

      if (!approvedSeenTags[primaryAttributeKey]) {
        approvedSeenTags[primaryAttributeKey] = {};
      }

      if (!instanceSeenTags[primaryAttributeKey]) {
        instanceSeenTags[primaryAttributeKey] = {};
      }

      if (!approvedSeenTags[primaryAttributeKey][value]) {
        instanceSeenTags[primaryAttributeKey][value] = true;
        return true;
      }

      return false;
    }).reverse().forEach(function (tag) {
      return approvedTags.push(tag);
    }); // Update seen tags with tags from this instance

    var keys = Object.keys(instanceSeenTags);

    for (var i = 0; i < keys.length; i++) {
      var attributeKey = keys[i];
      var tagUnion = object_assign__WEBPACK_IMPORTED_MODULE_4___default()({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);
      approvedSeenTags[attributeKey] = tagUnion;
    }

    return approvedTags;
  }, []).reverse();
};

var getInnermostProperty = function getInnermostProperty(propsList, property) {
  for (var i = propsList.length - 1; i >= 0; i--) {
    var props = propsList[i];

    if (props.hasOwnProperty(property)) {
      return props[property];
    }
  }

  return null;
};

var reducePropsToState = function reducePropsToState(propsList) {
  return {
    baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF, TAG_PROPERTIES.TARGET], propsList),
    bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),
    defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),
    encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
    htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),
    linkTags: getTagsFromPropsList(TAG_NAMES.LINK, [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF], propsList),
    metaTags: getTagsFromPropsList(TAG_NAMES.META, [TAG_PROPERTIES.NAME, TAG_PROPERTIES.CHARSET, TAG_PROPERTIES.HTTPEQUIV, TAG_PROPERTIES.PROPERTY, TAG_PROPERTIES.ITEM_PROP], propsList),
    noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),
    onChangeClientState: getOnChangeClientState(propsList),
    scriptTags: getTagsFromPropsList(TAG_NAMES.SCRIPT, [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML], propsList),
    styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),
    title: getTitleFromPropsList(propsList),
    titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList)
  };
};

var rafPolyfill = function () {
  var clock = Date.now();
  return function (callback) {
    var currentTime = Date.now();

    if (currentTime - clock > 16) {
      clock = currentTime;
      callback(currentTime);
    } else {
      setTimeout(function () {
        rafPolyfill(callback);
      }, 0);
    }
  };
}();

var cafPolyfill = function cafPolyfill(id) {
  return clearTimeout(id);
};

var requestAnimationFrame = typeof window !== "undefined" ? window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : __webpack_require__.g.requestAnimationFrame || rafPolyfill;
var cancelAnimationFrame = typeof window !== "undefined" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : __webpack_require__.g.cancelAnimationFrame || cafPolyfill;

var warn = function warn(msg) {
  return console && typeof console.warn === "function" && console.warn(msg);
};

var _helmetCallback = null;

var handleClientStateChange = function handleClientStateChange(newState) {
  if (_helmetCallback) {
    cancelAnimationFrame(_helmetCallback);
  }

  if (newState.defer) {
    _helmetCallback = requestAnimationFrame(function () {
      commitTagChanges(newState, function () {
        _helmetCallback = null;
      });
    });
  } else {
    commitTagChanges(newState);
    _helmetCallback = null;
  }
};

var commitTagChanges = function commitTagChanges(newState, cb) {
  var baseTag = newState.baseTag,
      bodyAttributes = newState.bodyAttributes,
      htmlAttributes = newState.htmlAttributes,
      linkTags = newState.linkTags,
      metaTags = newState.metaTags,
      noscriptTags = newState.noscriptTags,
      onChangeClientState = newState.onChangeClientState,
      scriptTags = newState.scriptTags,
      styleTags = newState.styleTags,
      title = newState.title,
      titleAttributes = newState.titleAttributes;
  updateAttributes(TAG_NAMES.BODY, bodyAttributes);
  updateAttributes(TAG_NAMES.HTML, htmlAttributes);
  updateTitle(title, titleAttributes);
  var tagUpdates = {
    baseTag: updateTags(TAG_NAMES.BASE, baseTag),
    linkTags: updateTags(TAG_NAMES.LINK, linkTags),
    metaTags: updateTags(TAG_NAMES.META, metaTags),
    noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),
    scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),
    styleTags: updateTags(TAG_NAMES.STYLE, styleTags)
  };
  var addedTags = {};
  var removedTags = {};
  Object.keys(tagUpdates).forEach(function (tagType) {
    var _tagUpdates$tagType = tagUpdates[tagType],
        newTags = _tagUpdates$tagType.newTags,
        oldTags = _tagUpdates$tagType.oldTags;

    if (newTags.length) {
      addedTags[tagType] = newTags;
    }

    if (oldTags.length) {
      removedTags[tagType] = tagUpdates[tagType].oldTags;
    }
  });
  cb && cb();
  onChangeClientState(newState, addedTags, removedTags);
};

var flattenArray = function flattenArray(possibleArray) {
  return Array.isArray(possibleArray) ? possibleArray.join("") : possibleArray;
};

var updateTitle = function updateTitle(title, attributes) {
  if (typeof title !== "undefined" && document.title !== title) {
    document.title = flattenArray(title);
  }

  updateAttributes(TAG_NAMES.TITLE, attributes);
};

var updateAttributes = function updateAttributes(tagName, attributes) {
  var elementTag = document.getElementsByTagName(tagName)[0];

  if (!elementTag) {
    return;
  }

  var helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);
  var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
  var attributesToRemove = [].concat(helmetAttributes);
  var attributeKeys = Object.keys(attributes);

  for (var i = 0; i < attributeKeys.length; i++) {
    var attribute = attributeKeys[i];
    var value = attributes[attribute] || "";

    if (elementTag.getAttribute(attribute) !== value) {
      elementTag.setAttribute(attribute, value);
    }

    if (helmetAttributes.indexOf(attribute) === -1) {
      helmetAttributes.push(attribute);
    }

    var indexToSave = attributesToRemove.indexOf(attribute);

    if (indexToSave !== -1) {
      attributesToRemove.splice(indexToSave, 1);
    }
  }

  for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
    elementTag.removeAttribute(attributesToRemove[_i]);
  }

  if (helmetAttributes.length === attributesToRemove.length) {
    elementTag.removeAttribute(HELMET_ATTRIBUTE);
  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {
    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(","));
  }
};

var updateTags = function updateTags(type, tags) {
  var headElement = document.head || document.querySelector(TAG_NAMES.HEAD);
  var tagNodes = headElement.querySelectorAll(type + "[" + HELMET_ATTRIBUTE + "]");
  var oldTags = Array.prototype.slice.call(tagNodes);
  var newTags = [];
  var indexToDelete = void 0;

  if (tags && tags.length) {
    tags.forEach(function (tag) {
      var newElement = document.createElement(type);

      for (var attribute in tag) {
        if (tag.hasOwnProperty(attribute)) {
          if (attribute === TAG_PROPERTIES.INNER_HTML) {
            newElement.innerHTML = tag.innerHTML;
          } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {
            if (newElement.styleSheet) {
              newElement.styleSheet.cssText = tag.cssText;
            } else {
              newElement.appendChild(document.createTextNode(tag.cssText));
            }
          } else {
            var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
            newElement.setAttribute(attribute, value);
          }
        }
      }

      newElement.setAttribute(HELMET_ATTRIBUTE, "true"); // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.

      if (oldTags.some(function (existingTag, index) {
        indexToDelete = index;
        return newElement.isEqualNode(existingTag);
      })) {
        oldTags.splice(indexToDelete, 1);
      } else {
        newTags.push(newElement);
      }
    });
  }

  oldTags.forEach(function (tag) {
    return tag.parentNode.removeChild(tag);
  });
  newTags.forEach(function (tag) {
    return headElement.appendChild(tag);
  });
  return {
    oldTags: oldTags,
    newTags: newTags
  };
};

var generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {
  return Object.keys(attributes).reduce(function (str, key) {
    var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
    return str ? str + " " + attr : attr;
  }, "");
};

var generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {
  var attributeString = generateElementAttributesAsString(attributes);
  var flattenedTitle = flattenArray(title);
  return attributeString ? "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">" : "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">";
};

var generateTagsAsString = function generateTagsAsString(type, tags, encode) {
  return tags.reduce(function (str, tag) {
    var attributeHtml = Object.keys(tag).filter(function (attribute) {
      return !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT);
    }).reduce(function (string, attribute) {
      var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute], encode) + "\"";
      return string ? string + " " + attr : attr;
    }, "");
    var tagContent = tag.innerHTML || tag.cssText || "";
    var isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;
    return str + "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
  }, "");
};

var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {
  var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.keys(attributes).reduce(function (obj, key) {
    obj[REACT_TAG_MAP[key] || key] = attributes[key];
    return obj;
  }, initProps);
};

var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {
  var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.keys(props).reduce(function (obj, key) {
    obj[HTML_TAG_MAP[key] || key] = props[key];
    return obj;
  }, initAttributes);
};

var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
  var _initProps; // assigning into an array to define toString function on it


  var initProps = (_initProps = {
    key: title
  }, _initProps[HELMET_ATTRIBUTE] = true, _initProps);
  var props = convertElementAttributestoReactProps(attributes, initProps);
  return [react__WEBPACK_IMPORTED_MODULE_3__.createElement(TAG_NAMES.TITLE, props, title)];
};

var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
  return tags.map(function (tag, i) {
    var _mappedTag;

    var mappedTag = (_mappedTag = {
      key: i
    }, _mappedTag[HELMET_ATTRIBUTE] = true, _mappedTag);
    Object.keys(tag).forEach(function (attribute) {
      var mappedAttribute = REACT_TAG_MAP[attribute] || attribute;

      if (mappedAttribute === TAG_PROPERTIES.INNER_HTML || mappedAttribute === TAG_PROPERTIES.CSS_TEXT) {
        var content = tag.innerHTML || tag.cssText;
        mappedTag.dangerouslySetInnerHTML = {
          __html: content
        };
      } else {
        mappedTag[mappedAttribute] = tag[attribute];
      }
    });
    return react__WEBPACK_IMPORTED_MODULE_3__.createElement(type, mappedTag);
  });
};

var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
  switch (type) {
    case TAG_NAMES.TITLE:
      return {
        toComponent: function toComponent() {
          return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);
        },
        toString: function toString() {
          return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);
        }
      };

    case ATTRIBUTE_NAMES.BODY:
    case ATTRIBUTE_NAMES.HTML:
      return {
        toComponent: function toComponent() {
          return convertElementAttributestoReactProps(tags);
        },
        toString: function toString() {
          return generateElementAttributesAsString(tags);
        }
      };

    default:
      return {
        toComponent: function toComponent() {
          return generateTagsAsReactComponent(type, tags);
        },
        toString: function toString() {
          return generateTagsAsString(type, tags, encode);
        }
      };
  }
};

var mapStateOnServer = function mapStateOnServer(_ref) {
  var baseTag = _ref.baseTag,
      bodyAttributes = _ref.bodyAttributes,
      encode = _ref.encode,
      htmlAttributes = _ref.htmlAttributes,
      linkTags = _ref.linkTags,
      metaTags = _ref.metaTags,
      noscriptTags = _ref.noscriptTags,
      scriptTags = _ref.scriptTags,
      styleTags = _ref.styleTags,
      _ref$title = _ref.title,
      title = _ref$title === undefined ? "" : _ref$title,
      titleAttributes = _ref.titleAttributes;
  return {
    base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),
    bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),
    htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),
    link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),
    meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),
    noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),
    script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),
    style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),
    title: getMethodsForTag(TAG_NAMES.TITLE, {
      title: title,
      titleAttributes: titleAttributes
    }, encode)
  };
};

var Helmet = function Helmet(Component) {
  var _class, _temp;

  return _temp = _class = function (_React$Component) {
    inherits(HelmetWrapper, _React$Component);

    function HelmetWrapper() {
      classCallCheck(this, HelmetWrapper);
      return possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
      return !react_fast_compare__WEBPACK_IMPORTED_MODULE_2___default()(this.props, nextProps);
    };

    HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {
      if (!nestedChildren) {
        return null;
      }

      switch (child.type) {
        case TAG_NAMES.SCRIPT:
        case TAG_NAMES.NOSCRIPT:
          return {
            innerHTML: nestedChildren
          };

        case TAG_NAMES.STYLE:
          return {
            cssText: nestedChildren
          };
      }

      throw new Error("<" + child.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
    };

    HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {
      var _babelHelpers$extends;

      var child = _ref.child,
          arrayTypeChildren = _ref.arrayTypeChildren,
          newChildProps = _ref.newChildProps,
          nestedChildren = _ref.nestedChildren;
      return _extends({}, arrayTypeChildren, (_babelHelpers$extends = {}, _babelHelpers$extends[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _babelHelpers$extends));
    };

    HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {
      var _babelHelpers$extends2, _babelHelpers$extends3;

      var child = _ref2.child,
          newProps = _ref2.newProps,
          newChildProps = _ref2.newChildProps,
          nestedChildren = _ref2.nestedChildren;

      switch (child.type) {
        case TAG_NAMES.TITLE:
          return _extends({}, newProps, (_babelHelpers$extends2 = {}, _babelHelpers$extends2[child.type] = nestedChildren, _babelHelpers$extends2.titleAttributes = _extends({}, newChildProps), _babelHelpers$extends2));

        case TAG_NAMES.BODY:
          return _extends({}, newProps, {
            bodyAttributes: _extends({}, newChildProps)
          });

        case TAG_NAMES.HTML:
          return _extends({}, newProps, {
            htmlAttributes: _extends({}, newChildProps)
          });
      }

      return _extends({}, newProps, (_babelHelpers$extends3 = {}, _babelHelpers$extends3[child.type] = _extends({}, newChildProps), _babelHelpers$extends3));
    };

    HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {
      var newFlattenedProps = _extends({}, newProps);

      Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {
        var _babelHelpers$extends4;

        newFlattenedProps = _extends({}, newFlattenedProps, (_babelHelpers$extends4 = {}, _babelHelpers$extends4[arrayChildName] = arrayTypeChildren[arrayChildName], _babelHelpers$extends4));
      });
      return newFlattenedProps;
    };

    HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {
      if (false) {}

      return true;
    };

    HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {
      var _this2 = this;

      var arrayTypeChildren = {};
      react__WEBPACK_IMPORTED_MODULE_3__.Children.forEach(children, function (child) {
        if (!child || !child.props) {
          return;
        }

        var _child$props = child.props,
            nestedChildren = _child$props.children,
            childProps = objectWithoutProperties(_child$props, ["children"]);
        var newChildProps = convertReactPropstoHtmlAttributes(childProps);

        _this2.warnOnInvalidChildren(child, nestedChildren);

        switch (child.type) {
          case TAG_NAMES.LINK:
          case TAG_NAMES.META:
          case TAG_NAMES.NOSCRIPT:
          case TAG_NAMES.SCRIPT:
          case TAG_NAMES.STYLE:
            arrayTypeChildren = _this2.flattenArrayTypeChildren({
              child: child,
              arrayTypeChildren: arrayTypeChildren,
              newChildProps: newChildProps,
              nestedChildren: nestedChildren
            });
            break;

          default:
            newProps = _this2.mapObjectTypeChildren({
              child: child,
              newProps: newProps,
              newChildProps: newChildProps,
              nestedChildren: nestedChildren
            });
            break;
        }
      });
      newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);
      return newProps;
    };

    HelmetWrapper.prototype.render = function render() {
      var _props = this.props,
          children = _props.children,
          props = objectWithoutProperties(_props, ["children"]);

      var newProps = _extends({}, props);

      if (children) {
        newProps = this.mapChildrenToProps(children, newProps);
      }

      return react__WEBPACK_IMPORTED_MODULE_3__.createElement(Component, newProps);
    };

    createClass(HelmetWrapper, null, [{
      key: "canUseDOM",
      // Component.peek comes from react-side-effect:
      // For testing, you may use a static peek() method available on the returned component.
      // It lets you get the current state without resetting the mounted instance stack.
      // Don’t use it for anything other than testing.

      /**
       * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
       * @param {Object} bodyAttributes: {"className": "root"}
       * @param {String} defaultTitle: "Default Title"
       * @param {Boolean} defer: true
       * @param {Boolean} encodeSpecialCharacters: true
       * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
       * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
       * @param {Array} meta: [{"name": "description", "content": "Test description"}]
       * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
       * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
       * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
       * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
       * @param {String} title: "Title"
       * @param {Object} titleAttributes: {"itemprop": "name"}
       * @param {String} titleTemplate: "MySite.com - %s"
       */
      set: function set$$1(canUseDOM) {
        Component.canUseDOM = canUseDOM;
      }
    }]);
    return HelmetWrapper;
  }(react__WEBPACK_IMPORTED_MODULE_3__.Component), _class.propTypes = {
    base: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object),
    bodyAttributes: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object),
    children: prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().node)), (prop_types__WEBPACK_IMPORTED_MODULE_0___default().node)]),
    defaultTitle: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),
    defer: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().bool),
    encodeSpecialCharacters: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().bool),
    htmlAttributes: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object),
    link: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().object)),
    meta: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().object)),
    noscript: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().object)),
    onChangeClientState: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().func),
    script: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().object)),
    style: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().object)),
    title: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),
    titleAttributes: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object),
    titleTemplate: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string)
  }, _class.defaultProps = {
    defer: true,
    encodeSpecialCharacters: true
  }, _class.peek = Component.peek, _class.rewind = function () {
    var mappedState = Component.rewind();

    if (!mappedState) {
      // provide fallback if mappedState is undefined
      mappedState = mapStateOnServer({
        baseTag: [],
        bodyAttributes: {},
        encodeSpecialCharacters: true,
        htmlAttributes: {},
        linkTags: [],
        metaTags: [],
        noscriptTags: [],
        scriptTags: [],
        styleTags: [],
        title: "",
        titleAttributes: {}
      });
    }

    return mappedState;
  }, _temp;
};

var NullComponent = function NullComponent() {
  return null;
};

var HelmetSideEffects = react_side_effect__WEBPACK_IMPORTED_MODULE_1___default()(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);
var HelmetExport = Helmet(HelmetSideEffects);
HelmetExport.renderStatic = HelmetExport.rewind;
/* harmony default export */ __webpack_exports__["Z"] = (HelmetExport);


/***/ }),

/***/ 10165:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var b = 60103,
    c = 60106,
    d = 60107,
    e = 60108,
    f = 60114,
    g = 60109,
    h = 60110,
    k = 60112,
    l = 60113,
    m = 60120,
    n = 60115,
    p = 60116,
    q = 60121,
    r = 60122,
    u = 60117,
    v = 60129,
    w = 60131;

if ("function" === typeof Symbol && Symbol.for) {
  var x = Symbol.for;
  b = x("react.element");
  c = x("react.portal");
  d = x("react.fragment");
  e = x("react.strict_mode");
  f = x("react.profiler");
  g = x("react.provider");
  h = x("react.context");
  k = x("react.forward_ref");
  l = x("react.suspense");
  m = x("react.suspense_list");
  n = x("react.memo");
  p = x("react.lazy");
  q = x("react.block");
  r = x("react.server.block");
  u = x("react.fundamental");
  v = x("react.debug_trace_mode");
  w = x("react.legacy_hidden");
}

function y(a) {
  if ("object" === typeof a && null !== a) {
    var t = a.$$typeof;

    switch (t) {
      case b:
        switch (a = a.type, a) {
          case d:
          case f:
          case e:
          case l:
          case m:
            return a;

          default:
            switch (a = a && a.$$typeof, a) {
              case h:
              case k:
              case p:
              case n:
              case g:
                return a;

              default:
                return t;
            }

        }

      case c:
        return t;
    }
  }
}

var z = g,
    A = b,
    B = k,
    C = d,
    D = p,
    E = n,
    F = c,
    G = f,
    H = e,
    I = l;
exports.ContextConsumer = h;
exports.ContextProvider = z;
exports.Element = A;
exports.ForwardRef = B;
exports.Fragment = C;
exports.Lazy = D;
exports.Memo = E;
exports.Portal = F;
exports.Profiler = G;
exports.StrictMode = H;
exports.Suspense = I;

exports.isAsyncMode = function () {
  return !1;
};

exports.isConcurrentMode = function () {
  return !1;
};

exports.isContextConsumer = function (a) {
  return y(a) === h;
};

exports.isContextProvider = function (a) {
  return y(a) === g;
};

exports.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === b;
};

exports.isForwardRef = function (a) {
  return y(a) === k;
};

exports.isFragment = function (a) {
  return y(a) === d;
};

exports.isLazy = function (a) {
  return y(a) === p;
};

exports.isMemo = function (a) {
  return y(a) === n;
};

exports.isPortal = function (a) {
  return y(a) === c;
};

exports.isProfiler = function (a) {
  return y(a) === f;
};

exports.isStrictMode = function (a) {
  return y(a) === e;
};

exports.isSuspense = function (a) {
  return y(a) === l;
};

exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === d || a === f || a === v || a === e || a === l || a === m || a === w || "object" === typeof a && null !== a && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q || a[0] === r) ? !0 : !1;
};

exports.typeOf = y;

/***/ }),

/***/ 8812:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(10165);
} else {}

/***/ }),

/***/ 24839:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var React = __webpack_require__(67294);

var React__default = _interopDefault(React);

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
  if (typeof reducePropsToState !== 'function') {
    throw new Error('Expected reducePropsToState to be a function.');
  }

  if (typeof handleStateChangeOnClient !== 'function') {
    throw new Error('Expected handleStateChangeOnClient to be a function.');
  }

  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
  }

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (typeof WrappedComponent !== 'function') {
      throw new Error('Expected WrappedComponent to be a React component.');
    }

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));

      if (SideEffect.canUseDOM) {
        handleStateChangeOnClient(state);
      } else if (mapStateOnServer) {
        state = mapStateOnServer(state);
      }
    }

    var SideEffect = /*#__PURE__*/function (_PureComponent) {
      _inheritsLoose(SideEffect, _PureComponent);

      function SideEffect() {
        return _PureComponent.apply(this, arguments) || this;
      } // Try to use displayName of wrapped component
      // Expose canUseDOM so tests can monkeypatch it


      SideEffect.peek = function peek() {
        return state;
      };

      SideEffect.rewind = function rewind() {
        if (SideEffect.canUseDOM) {
          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
        }

        var recordedState = state;
        state = undefined;
        mountedInstances = [];
        return recordedState;
      };

      var _proto = SideEffect.prototype;

      _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return /*#__PURE__*/React__default.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(React.PureComponent);

    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    _defineProperty(SideEffect, "canUseDOM", canUseDOM);

    return SideEffect;
  };
}

module.exports = withSideEffect;

/***/ }),

/***/ 81423:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ esm_Transition; }
});

// UNUSED EXPORTS: ENTERED, ENTERING, EXITED, EXITING, UNMOUNTED

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73935);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js
/* harmony default export */ var config = ({
  disabled: false
});
// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js
var TransitionGroupContext = __webpack_require__(1278);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js







var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : react_dom.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        _in = _this$props.in,
        _mountOnEnter = _this$props.mountOnEnter,
        _unmountOnExit = _this$props.unmountOnExit,
        _appear = _this$props.appear,
        _enter = _this$props.enter,
        _exit = _this$props.exit,
        _timeout = _this$props.timeout,
        _addEndListener = _this$props.addEndListener,
        _onEnter = _this$props.onEnter,
        _onEntering = _this$props.onEntering,
        _onEntered = _this$props.onEntered,
        _onExit = _this$props.onExit,
        _onExiting = _this$props.onExiting,
        _onExited = _this$props.onExited,
        _nodeRef = _this$props.nodeRef,
        childProps = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      react.createElement(TransitionGroupContext/* default.Provider */.Z.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps))
    );
  };

  return Transition;
}(react.Component);

Transition.contextType = TransitionGroupContext/* default */.Z;

// Name the function so it is clearer in the documentation
function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
/* harmony default export */ var esm_Transition = (Transition);

/***/ }),

/***/ 1278:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

/* harmony default export */ __webpack_exports__["Z"] = (react__WEBPACK_IMPORTED_MODULE_0__.createContext(null));

/***/ }),

/***/ 19640:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "vc": function() { return /* binding */ IdProvider; },
/* harmony export */   "Me": function() { return /* binding */ useId; }
/* harmony export */ });
/* unused harmony export useGetId */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var Id = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(function () {
  throw new TypeError('Please wrap your application with IdProvider');
});

var useIdGetter = function useIdGetter(prefix) {
  if (prefix === void 0) {
    prefix = 'id';
  }

  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();

  if (!ref.current) {
    var me = {
      id: 0,
      get: function get() {
        return prefix + "-" + me.id++;
      }
    };
    ref.current = me;
  }

  return ref.current.get;
};

var IdProvider = function IdProvider(_ref) {
  var children = _ref.children;
  var get = useIdGetter();
  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Id.Provider, {
    value: get
  }, children);
};

var useId = function useId() {
  var getter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Id);
  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  if (!ref.current) ref.current = getter();
  return ref.current;
};

var useGetId = function useGetId() {
  var getter = useContext(Id);
  var base = useRef();
  if (!base.current) base.current = getter();
  return useIdGetter(base.current);
};



/***/ }),

/***/ 33598:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MS": function() { return /* binding */ MS; },
/* harmony export */   "uj": function() { return /* binding */ MOZ; },
/* harmony export */   "G$": function() { return /* binding */ WEBKIT; },
/* harmony export */   "Ab": function() { return /* binding */ COMMENT; },
/* harmony export */   "Fr": function() { return /* binding */ RULESET; },
/* harmony export */   "h5": function() { return /* binding */ DECLARATION; },
/* harmony export */   "K$": function() { return /* binding */ IMPORT; },
/* harmony export */   "lK": function() { return /* binding */ KEYFRAMES; }
/* harmony export */ });
/* unused harmony exports PAGE, MEDIA, CHARSET, VIEWPORT, SUPPORTS, DOCUMENT, NAMESPACE, FONT_FACE, COUNTER_STYLE, FONT_FEATURE_VALUES */
var MS = '-ms-';
var MOZ = '-moz-';
var WEBKIT = '-webkit-';
var COMMENT = 'comm';
var RULESET = 'rule';
var DECLARATION = 'decl';
var PAGE = '@page';
var MEDIA = '@media';
var IMPORT = '@import';
var CHARSET = '@charset';
var VIEWPORT = '@viewport';
var SUPPORTS = '@supports';
var DOCUMENT = '@document';
var NAMESPACE = '@namespace';
var KEYFRAMES = '@keyframes';
var FONT_FACE = '@font-face';
var COUNTER_STYLE = '@counter-style';
var FONT_FEATURE_VALUES = '@font-feature-values';

/***/ }),

/***/ 22443:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "qR": function() { return /* binding */ middleware; },
  "Ji": function() { return /* binding */ prefixer; },
  "cD": function() { return /* binding */ rulesheet; }
});

// UNUSED EXPORTS: namespace

// EXTERNAL MODULE: ./node_modules/stylis/src/Enum.js
var Enum = __webpack_require__(33598);
// EXTERNAL MODULE: ./node_modules/stylis/src/Utility.js
var Utility = __webpack_require__(97801);
// EXTERNAL MODULE: ./node_modules/stylis/src/Tokenizer.js
var Tokenizer = __webpack_require__(31062);
// EXTERNAL MODULE: ./node_modules/stylis/src/Serializer.js
var Serializer = __webpack_require__(97750);
;// CONCATENATED MODULE: ./node_modules/stylis/src/Prefixer.js


/**
 * @param {string} value
 * @param {number} length
 * @return {string}
 */

function prefix(value, length) {
  switch ((0,Utility/* hash */.vp)(value, length)) {
    // color-adjust
    case 5103:
      return Enum/* WEBKIT */.G$ + 'print-' + value + value;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)

    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break

    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,

    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)

    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Enum/* WEBKIT */.G$ + value + value;
    // appearance, user-select, transform, hyphens, text-size-adjust

    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Enum/* WEBKIT */.G$ + value + Enum/* MOZ */.uj + value + Enum.MS + value + value;
    // flex, flex-direction

    case 6828:
    case 4268:
      return Enum/* WEBKIT */.G$ + value + Enum.MS + value + value;
    // order

    case 6165:
      return Enum/* WEBKIT */.G$ + value + Enum.MS + 'flex-' + value + value;
    // align-items

    case 5187:
      return Enum/* WEBKIT */.G$ + value + (0,Utility/* replace */.gx)(value, /(\w+).+(:[^]+)/, Enum/* WEBKIT */.G$ + 'box-$1$2' + Enum.MS + 'flex-$1$2') + value;
    // align-self

    case 5443:
      return Enum/* WEBKIT */.G$ + value + Enum.MS + 'flex-item-' + (0,Utility/* replace */.gx)(value, /flex-|-self/, '') + value;
    // align-content

    case 4675:
      return Enum/* WEBKIT */.G$ + value + Enum.MS + 'flex-line-pack' + (0,Utility/* replace */.gx)(value, /align-content|flex-|-self/, '') + value;
    // flex-shrink

    case 5548:
      return Enum/* WEBKIT */.G$ + value + Enum.MS + (0,Utility/* replace */.gx)(value, 'shrink', 'negative') + value;
    // flex-basis

    case 5292:
      return Enum/* WEBKIT */.G$ + value + Enum.MS + (0,Utility/* replace */.gx)(value, 'basis', 'preferred-size') + value;
    // flex-grow

    case 6060:
      return Enum/* WEBKIT */.G$ + 'box-' + (0,Utility/* replace */.gx)(value, '-grow', '') + Enum/* WEBKIT */.G$ + value + Enum.MS + (0,Utility/* replace */.gx)(value, 'grow', 'positive') + value;
    // transition

    case 4554:
      return Enum/* WEBKIT */.G$ + (0,Utility/* replace */.gx)(value, /([^-])(transform)/g, '$1' + Enum/* WEBKIT */.G$ + '$2') + value;
    // cursor

    case 6187:
      return (0,Utility/* replace */.gx)((0,Utility/* replace */.gx)((0,Utility/* replace */.gx)(value, /(zoom-|grab)/, Enum/* WEBKIT */.G$ + '$1'), /(image-set)/, Enum/* WEBKIT */.G$ + '$1'), value, '') + value;
    // background, background-image

    case 5495:
    case 3959:
      return (0,Utility/* replace */.gx)(value, /(image-set\([^]*)/, Enum/* WEBKIT */.G$ + '$1' + '$`$1');
    // justify-content

    case 4968:
      return (0,Utility/* replace */.gx)((0,Utility/* replace */.gx)(value, /(.+:)(flex-)?(.*)/, Enum/* WEBKIT */.G$ + 'box-pack:$3' + Enum.MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + Enum/* WEBKIT */.G$ + value + value;
    // (margin|padding)-inline-(start|end)

    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return (0,Utility/* replace */.gx)(value, /(.+)-inline(.+)/, Enum/* WEBKIT */.G$ + '$1$2') + value;
    // (min|max)?(width|height|inline-size|block-size)

    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      // stretch, max-content, min-content, fill-available
      if ((0,Utility/* strlen */.to)(value) - 1 - length > 6) switch ((0,Utility/* charat */.uO)(value, length + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          // -
          if ((0,Utility/* charat */.uO)(value, length + 4) !== 45) break;
        // (f)ill-available, (f)it-content

        case 102:
          return (0,Utility/* replace */.gx)(value, /(.+:)(.+)-([^]+)/, '$1' + Enum/* WEBKIT */.G$ + '$2-$3' + '$1' + Enum/* MOZ */.uj + ((0,Utility/* charat */.uO)(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
        // (s)tretch

        case 115:
          return ~(0,Utility/* indexof */.Cw)(value, 'stretch') ? prefix((0,Utility/* replace */.gx)(value, 'stretch', 'fill-available'), length) + value : value;
      }
      break;
    // position: sticky

    case 4949:
      // (s)ticky?
      if ((0,Utility/* charat */.uO)(value, length + 1) !== 115) break;
    // display: (flex|inline-flex)

    case 6444:
      switch ((0,Utility/* charat */.uO)(value, (0,Utility/* strlen */.to)(value) - 3 - (~(0,Utility/* indexof */.Cw)(value, '!important') && 10))) {
        // stic(k)y
        case 107:
          return (0,Utility/* replace */.gx)(value, ':', ':' + Enum/* WEBKIT */.G$) + value;
        // (inline-)?fl(e)x

        case 101:
          return (0,Utility/* replace */.gx)(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + Enum/* WEBKIT */.G$ + ((0,Utility/* charat */.uO)(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + Enum/* WEBKIT */.G$ + '$2$3' + '$1' + Enum.MS + '$2box$3') + value;
      }

      break;
    // writing-mode

    case 5936:
      switch ((0,Utility/* charat */.uO)(value, length + 11)) {
        // vertical-l(r)
        case 114:
          return Enum/* WEBKIT */.G$ + value + Enum.MS + (0,Utility/* replace */.gx)(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
        // vertical-r(l)

        case 108:
          return Enum/* WEBKIT */.G$ + value + Enum.MS + (0,Utility/* replace */.gx)(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
        // horizontal(-)tb

        case 45:
          return Enum/* WEBKIT */.G$ + value + Enum.MS + (0,Utility/* replace */.gx)(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
      }

      return Enum/* WEBKIT */.G$ + value + Enum.MS + value + value;
  }

  return value;
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Middleware.js





/**
 * @param {function[]} collection
 * @return {function}
 */

function middleware(collection) {
  var length = (0,Utility/* sizeof */.Ei)(collection);
  return function (element, index, children, callback) {
    var output = '';

    for (var i = 0; i < length; i++) {
      output += collection[i](element, index, children, callback) || '';
    }

    return output;
  };
}
/**
 * @param {function} callback
 * @return {function}
 */

function rulesheet(callback) {
  return function (element) {
    if (!element.root) if (element = element.return) callback(element);
  };
}
/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 */

function prefixer(element, index, children, callback) {
  if (!element.return) switch (element.type) {
    case Enum/* DECLARATION */.h5:
      element.return = prefix(element.value, element.length);
      break;

    case Enum/* KEYFRAMES */.lK:
      return (0,Serializer/* serialize */.q)([(0,Tokenizer/* copy */.JG)((0,Utility/* replace */.gx)(element.value, '@', '@' + Enum/* WEBKIT */.G$), element, '')], callback);

    case Enum/* RULESET */.Fr:
      if (element.length) return (0,Utility/* combine */.$e)(element.props, function (value) {
        switch ((0,Utility/* match */.EQ)(value, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ':read-only':
          case ':read-write':
            return (0,Serializer/* serialize */.q)([(0,Tokenizer/* copy */.JG)((0,Utility/* replace */.gx)(value, /:(read-\w+)/, ':' + Enum/* MOZ */.uj + '$1'), element, '')], callback);
          // :placeholder

          case '::placeholder':
            return (0,Serializer/* serialize */.q)([(0,Tokenizer/* copy */.JG)((0,Utility/* replace */.gx)(value, /:(plac\w+)/, ':' + Enum/* WEBKIT */.G$ + 'input-$1'), element, ''), (0,Tokenizer/* copy */.JG)((0,Utility/* replace */.gx)(value, /:(plac\w+)/, ':' + Enum/* MOZ */.uj + '$1'), element, ''), (0,Tokenizer/* copy */.JG)((0,Utility/* replace */.gx)(value, /:(plac\w+)/, Enum.MS + 'input-$1'), element, '')], callback);
        }

        return '';
      });
  }
}
/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 */

function namespace(element) {
  switch (element.type) {
    case RULESET:
      element.props = element.props.map(function (value) {
        return combine(tokenize(value), function (value, index, children) {
          switch (charat(value, 0)) {
            // \f
            case 12:
              return substr(value, 1, strlen(value));
            // \0 ( + > ~

            case 0:
            case 40:
            case 43:
            case 62:
            case 126:
              return value;
            // :

            case 58:
              if (children[++index] === 'global') children[index] = '', children[++index] = '\f' + substr(children[index], index = 1, -1);
            // \s

            case 32:
              return index === 1 ? '' : value;

            default:
              switch (index) {
                case 0:
                  element = value;
                  return sizeof(children) > 1 ? '' : value;

                case index = sizeof(children) - 1:
                case 2:
                  return index === 2 ? value + element + element : value + element;

                default:
                  return value;
              }

          }
        });
      });
  }
}

/***/ }),

/***/ 80071:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MY": function() { return /* binding */ compile; }
/* harmony export */ });
/* unused harmony exports parse, ruleset, comment, declaration */
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33598);
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97801);
/* harmony import */ var _Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31062);



/**
 * @param {string} value
 * @return {object[]}
 */

function compile(value) {
  return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .dealloc */ .cE)(parse('', null, null, null, [''], value = (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .alloc */ .un)(value), 0, [0], value));
}
/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string[]} rule
 * @param {string[]} rules
 * @param {string[]} rulesets
 * @param {number[]} pseudo
 * @param {number[]} points
 * @param {string[]} declarations
 * @return {object}
 */

function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character = 0;
  var type = '';
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters = type;

  while (scanning) {
    switch (previous = character, character = (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .next */ .lp)()) {
      // " ' [ (
      case 34:
      case 39:
      case 91:
      case 40:
        characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .delimit */ .iF)(character);
        break;
      // \t \n \r \s

      case 9:
      case 10:
      case 13:
      case 32:
        characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .whitespace */ .Qb)(previous);
        break;
      // \

      case 92:
        characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .escaping */ .kq)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .caret */ .Ud)() - 1, 7);
        continue;
      // /

      case 47:
        switch ((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .peek */ .fj)()) {
          case 42:
          case 47:
            (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .append */ .R3)(comment((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .commenter */ .q6)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .next */ .lp)(), (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .caret */ .Ud)()), root, parent), declarations);
            break;

          default:
            characters += '/';
        }

        break;
      // {

      case 123 * variable:
        points[index++] = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .strlen */ .to)(characters) * ampersand;
      // } ; \0

      case 125 * variable:
      case 59:
      case 0:
        switch (character) {
          // \0 }
          case 0:
          case 125:
            scanning = 0;
          // ;

          case 59 + offset:
            if (property > 0 && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .strlen */ .to)(characters) - length) (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .append */ .R3)(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration((0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .replace */ .gx)(characters, ' ', '') + ';', rule, parent, length - 2), declarations);
            break;
          // @ ;

          case 59:
            characters += ';';
          // { rule/at-rule

          default:
            (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .append */ .R3)(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets);
            if (character === 123) if (offset === 0) parse(characters, root, reference, reference, props, rulesets, length, points, children);else switch (atrule) {
              // d m s
              case 100:
              case 109:
              case 115:
                parse(value, reference, reference, rule && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .append */ .R3)(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children);
                break;

              default:
                parse(characters, reference, reference, reference, [''], children, length, points, children);
            }
        }

        index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo;
        break;
      // :

      case 58:
        length = 1 + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .strlen */ .to)(characters), property = previous;

      default:
        if (variable < 1) if (character == 123) --variable;else if (character == 125 && variable++ == 0 && (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .prev */ .mp)() == 125) continue;

        switch (characters += (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .from */ .Dp)(character), character * variable) {
          // &
          case 38:
            ampersand = offset > 0 ? 1 : (characters += '\f', -1);
            break;
          // ,

          case 44:
            points[index++] = ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .strlen */ .to)(characters) - 1) * ampersand, ampersand = 1;
            break;
          // @

          case 64:
            // -
            if ((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .peek */ .fj)() === 45) characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .delimit */ .iF)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .next */ .lp)());
            atrule = (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .peek */ .fj)(), offset = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .strlen */ .to)(type = characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .identifier */ .QU)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .caret */ .Ud)())), character++;
            break;
          // -

          case 45:
            if (previous === 45 && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .strlen */ .to)(characters) == 2) variable = 0;
        }

    }
  }

  return rulesets;
}
/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} index
 * @param {number} offset
 * @param {string[]} rules
 * @param {number[]} points
 * @param {string} type
 * @param {string[]} props
 * @param {string[]} children
 * @param {number} length
 * @return {object}
 */

function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [''];
  var size = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .sizeof */ .Ei)(rule);

  for (var i = 0, j = 0, k = 0; i < index; ++i) {
    for (var x = 0, y = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .substr */ .tb)(value, post + 1, post = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .abs */ .Wn)(j = points[i])), z = value; x < size; ++x) {
      if (z = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .trim */ .fy)(j > 0 ? rule[x] + ' ' + y : (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .replace */ .gx)(y, /&\f/g, rule[x]))) props[k++] = z;
    }
  }

  return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .node */ .dH)(value, root, parent, offset === 0 ? _Enum_js__WEBPACK_IMPORTED_MODULE_2__/* .RULESET */ .Fr : type, props, children, length);
}
/**
 * @param {number} value
 * @param {object} root
 * @param {object?} parent
 * @return {object}
 */

function comment(value, root, parent) {
  return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .node */ .dH)(value, root, parent, _Enum_js__WEBPACK_IMPORTED_MODULE_2__/* .COMMENT */ .Ab, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .from */ .Dp)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .char */ .Tb)()), (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .substr */ .tb)(value, 2, -2), 0);
}
/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} length
 * @return {object}
 */

function declaration(value, root, parent, length) {
  return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__/* .node */ .dH)(value, root, parent, _Enum_js__WEBPACK_IMPORTED_MODULE_2__/* .DECLARATION */ .h5, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .substr */ .tb)(value, 0, length), (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__/* .substr */ .tb)(value, length + 1, -1), length);
}

/***/ }),

/***/ 97750:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "q": function() { return /* binding */ serialize; },
/* harmony export */   "P": function() { return /* binding */ stringify; }
/* harmony export */ });
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33598);
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97801);


/**
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */

function serialize(children, callback) {
  var output = '';
  var length = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .sizeof */ .Ei)(children);

  for (var i = 0; i < length; i++) {
    output += callback(children[i], i, children, callback) || '';
  }

  return output;
}
/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */

function stringify(element, index, children, callback) {
  switch (element.type) {
    case _Enum_js__WEBPACK_IMPORTED_MODULE_1__/* .IMPORT */ .K$:
    case _Enum_js__WEBPACK_IMPORTED_MODULE_1__/* .DECLARATION */ .h5:
      return element.return = element.return || element.value;

    case _Enum_js__WEBPACK_IMPORTED_MODULE_1__/* .COMMENT */ .Ab:
      return '';

    case _Enum_js__WEBPACK_IMPORTED_MODULE_1__/* .RULESET */ .Fr:
      element.value = element.props.join(',');
  }

  return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .strlen */ .to)(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : '';
}

/***/ }),

/***/ 31062:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FK": function() { return /* binding */ position; },
/* harmony export */   "dH": function() { return /* binding */ node; },
/* harmony export */   "JG": function() { return /* binding */ copy; },
/* harmony export */   "Tb": function() { return /* binding */ char; },
/* harmony export */   "mp": function() { return /* binding */ prev; },
/* harmony export */   "lp": function() { return /* binding */ next; },
/* harmony export */   "fj": function() { return /* binding */ peek; },
/* harmony export */   "Ud": function() { return /* binding */ caret; },
/* harmony export */   "tP": function() { return /* binding */ slice; },
/* harmony export */   "r": function() { return /* binding */ token; },
/* harmony export */   "un": function() { return /* binding */ alloc; },
/* harmony export */   "cE": function() { return /* binding */ dealloc; },
/* harmony export */   "iF": function() { return /* binding */ delimit; },
/* harmony export */   "Qb": function() { return /* binding */ whitespace; },
/* harmony export */   "kq": function() { return /* binding */ escaping; },
/* harmony export */   "q6": function() { return /* binding */ commenter; },
/* harmony export */   "QU": function() { return /* binding */ identifier; }
/* harmony export */ });
/* unused harmony exports line, column, length, character, characters, tokenize, tokenizer, delimiter */
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97801);

var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = '';
/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string} type
 * @param {string[]} props
 * @param {object[]} children
 * @param {number} length
 */

function node(value, root, parent, type, props, children, length) {
  return {
    value: value,
    root: root,
    parent: parent,
    type: type,
    props: props,
    children: children,
    line: line,
    column: column,
    length: length,
    return: ''
  };
}
/**
 * @param {string} value
 * @param {object} root
 * @param {string} type
 */

function copy(value, root, type) {
  return node(value, root.root, root.parent, type, root.props, root.children, 0);
}
/**
 * @return {number}
 */

function char() {
  return character;
}
/**
 * @return {number}
 */

function prev() {
  character = position > 0 ? (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .charat */ .uO)(characters, --position) : 0;
  if (column--, character === 10) column = 1, line--;
  return character;
}
/**
 * @return {number}
 */

function next() {
  character = position < length ? (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .charat */ .uO)(characters, position++) : 0;
  if (column++, character === 10) column = 1, line++;
  return character;
}
/**
 * @return {number}
 */

function peek() {
  return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .charat */ .uO)(characters, position);
}
/**
 * @return {number}
 */

function caret() {
  return position;
}
/**
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */

function slice(begin, end) {
  return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .substr */ .tb)(characters, begin, end);
}
/**
 * @param {number} type
 * @return {number}
 */

function token(type) {
  switch (type) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token

    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126: // ; { } breakpoint token

    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token

    case 58:
      return 3;
    // " ' ( [ opening delimit token

    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token

    case 41:
    case 93:
      return 1;
  }

  return 0;
}
/**
 * @param {string} value
 * @return {any[]}
 */

function alloc(value) {
  return line = column = 1, length = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .strlen */ .to)(characters = value), position = 0, [];
}
/**
 * @param {any} value
 * @return {any}
 */

function dealloc(value) {
  return characters = '', value;
}
/**
 * @param {number} type
 * @return {string}
 */

function delimit(type) {
  return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .trim */ .fy)(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
/**
 * @param {string} value
 * @return {string[]}
 */

function tokenize(value) {
  return dealloc(tokenizer(alloc(value)));
}
/**
 * @param {number} type
 * @return {string}
 */

function whitespace(type) {
  while (character = peek()) {
    if (character < 33) next();else break;
  }

  return token(type) > 2 || token(character) > 3 ? '' : ' ';
}
/**
 * @param {string[]} children
 * @return {string[]}
 */

function tokenizer(children) {
  while (next()) {
    switch (token(character)) {
      case 0:
        append(identifier(position - 1), children);
        break;

      case 2:
        append(delimit(character), children);
        break;

      default:
        append(from(character), children);
    }
  }

  return children;
}
/**
 * @param {number} index
 * @param {number} count
 * @return {string}
 */

function escaping(index, count) {
  while (--count && next()) {
    // not 0-9 A-F a-f
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97) break;
  }

  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}
/**
 * @param {number} type
 * @return {number}
 */

function delimiter(type) {
  while (next()) {
    switch (character) {
      // ] ) " '
      case type:
        return position;
      // " '

      case 34:
      case 39:
        return delimiter(type === 34 || type === 39 ? type : character);
      // (

      case 40:
        if (type === 41) delimiter(type);
        break;
      // \

      case 92:
        next();
        break;
    }
  }

  return position;
}
/**
 * @param {number} type
 * @param {number} index
 * @return {number}
 */

function commenter(type, index) {
  while (next()) {
    // //
    if (type + character === 47 + 10) break; // /*
    else if (type + character === 42 + 42 && peek() === 47) break;
  }

  return '/*' + slice(index, position - 1) + '*' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__/* .from */ .Dp)(type === 47 ? type : next());
}
/**
 * @param {number} index
 * @return {string}
 */

function identifier(index) {
  while (!token(peek())) {
    next();
  }

  return slice(index, position);
}

/***/ }),

/***/ 97801:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Wn": function() { return /* binding */ abs; },
/* harmony export */   "Dp": function() { return /* binding */ from; },
/* harmony export */   "vp": function() { return /* binding */ hash; },
/* harmony export */   "fy": function() { return /* binding */ trim; },
/* harmony export */   "EQ": function() { return /* binding */ match; },
/* harmony export */   "gx": function() { return /* binding */ replace; },
/* harmony export */   "Cw": function() { return /* binding */ indexof; },
/* harmony export */   "uO": function() { return /* binding */ charat; },
/* harmony export */   "tb": function() { return /* binding */ substr; },
/* harmony export */   "to": function() { return /* binding */ strlen; },
/* harmony export */   "Ei": function() { return /* binding */ sizeof; },
/* harmony export */   "R3": function() { return /* binding */ append; },
/* harmony export */   "$e": function() { return /* binding */ combine; }
/* harmony export */ });
/**
 * @param {number}
 * @return {number}
 */
var abs = Math.abs;
/**
 * @param {number}
 * @return {string}
 */

var from = String.fromCharCode;
/**
 * @param {string} value
 * @param {number} length
 * @return {number}
 */

function hash(value, length) {
  return (((length << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3);
}
/**
 * @param {string} value
 * @return {string}
 */

function trim(value) {
  return value.trim();
}
/**
 * @param {string} value
 * @param {RegExp} pattern
 * @return {string?}
 */

function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
/**
 * @param {string} value
 * @param {(string|RegExp)} pattern
 * @param {string} replacement
 * @return {string}
 */

function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
/**
 * @param {string} value
 * @param {string} value
 * @return {number}
 */

function indexof(value, search) {
  return value.indexOf(search);
}
/**
 * @param {string} value
 * @param {number} index
 * @return {number}
 */

function charat(value, index) {
  return value.charCodeAt(index) | 0;
}
/**
 * @param {string} value
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */

function substr(value, begin, end) {
  return value.slice(begin, end);
}
/**
 * @param {string} value
 * @return {number}
 */

function strlen(value) {
  return value.length;
}
/**
 * @param {any[]} value
 * @return {number}
 */

function sizeof(value) {
  return value.length;
}
/**
 * @param {any} value
 * @param {any[]} array
 * @return {any}
 */

function append(value, array) {
  return array.push(value), value;
}
/**
 * @param {string[]} array
 * @param {function} callback
 * @return {string}
 */

function combine(array, callback) {
  return array.map(callback).join('');
}

/***/ }),

/***/ 52353:
/***/ (function(module) {

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
}

module.exports = bytesToUuid;

/***/ }),

/***/ 30237:
/***/ (function(module) {

// Unique ID creation requires a high quality random # generator.  In the
// browser this is a little complicated due to unknown quality of Math.random()
// and inconsistent support for the `crypto` API.  We do the best we can via
// feature-detection
// getRandomValues needs to be invoked in a context where "this" is a Crypto
// implementation. Also, find the complete implementation of crypto on IE11.
var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);

if (getRandomValues) {
  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

  module.exports = function whatwgRNG() {
    getRandomValues(rnds8);
    return rnds8;
  };
} else {
  // Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().  It's fast, but is of unspecified
  // quality.
  var rnds = new Array(16);

  module.exports = function mathRNG() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
  };
}

/***/ }),

/***/ 19056:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var rng = __webpack_require__(30237);

var bytesToUuid = __webpack_require__(52353);

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }

  options = options || {};
  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;

/***/ }),

/***/ 13099:
/***/ (function(module) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ 13366:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(17854);

module.exports = global.Promise;


/***/ }),

/***/ 78523:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(13099);

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ 69478:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(19670);
var isObject = __webpack_require__(70111);
var newPromiseCapability = __webpack_require__(78523);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ 36707:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(19670);
var aFunction = __webpack_require__(13099);
var wellKnownSymbol = __webpack_require__(5112);

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ 76091:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(47293);
var whitespaces = __webpack_require__(81361);

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ 53111:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(84488);
var toString = __webpack_require__(41340);
var whitespaces = __webpack_require__(81361);

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ 41340:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isSymbol = __webpack_require__(52190);

module.exports = function (argument) {
  if (isSymbol(argument)) throw TypeError('Cannot convert a Symbol value to a string');
  return String(argument);
};


/***/ }),

/***/ 81361:
/***/ (function(module) {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ 17727:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(82109);
var IS_PURE = __webpack_require__(31913);
var NativePromise = __webpack_require__(13366);
var fails = __webpack_require__(47293);
var getBuiltIn = __webpack_require__(35005);
var speciesConstructor = __webpack_require__(36707);
var promiseResolve = __webpack_require__(69478);
var redefine = __webpack_require__(31320);

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!NativePromise && fails(function () {
  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`
if (!IS_PURE && typeof NativePromise == 'function') {
  var method = getBuiltIn('Promise').prototype['finally'];
  if (NativePromise.prototype['finally'] !== method) {
    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });
  }
}


/***/ }),

/***/ 48702:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(82109);
var $trimEnd = (__webpack_require__(53111).end);
var forcedStringTrimMethod = __webpack_require__(76091);

var FORCED = forcedStringTrimMethod('trimEnd');

var trimEnd = FORCED ? function trimEnd() {
  return $trimEnd(this);
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimEnd;

// `String.prototype.{ trimEnd, trimRight }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// https://tc39.es/ecma262/#String.prototype.trimright
$({ target: 'String', proto: true, forced: FORCED }, {
  trimEnd: trimEnd,
  trimRight: trimEnd
});


/***/ }),

/***/ 38037:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


var _interopRequireDefault = __webpack_require__(95318);

__webpack_unused_export__ = true;
exports.dq = withPrefix;
exports.mc = withAssetPrefix;
exports.c4 = exports.ZP = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(37316));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(81506));

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(85354));

var _extends2 = _interopRequireDefault(__webpack_require__(67154));

var _propTypes = _interopRequireDefault(__webpack_require__(45697));

var _react = _interopRequireDefault(__webpack_require__(67294));

var _reachRouter = __webpack_require__(29499);

var _utils = __webpack_require__(92098);

var _parsePath = __webpack_require__(61752);

exports.cP = _parsePath.parsePath;
var _excluded = ["to", "getProps", "onClick", "onMouseEnter", "activeClassName", "activeStyle", "innerRef", "partiallyActive", "state", "replace", "_location"];

var isAbsolutePath = function isAbsolutePath(path) {
  return path === null || path === void 0 ? void 0 : path.startsWith("/");
};

function withPrefix(path, prefix) {
  var _ref, _prefix;

  if (prefix === void 0) {
    prefix = getGlobalBasePrefix();
  }

  if (!isLocalLink(path)) {
    return path;
  }

  if (path.startsWith("./") || path.startsWith("../")) {
    return path;
  }

  var base = (_ref = (_prefix = prefix) !== null && _prefix !== void 0 ? _prefix : getGlobalPathPrefix()) !== null && _ref !== void 0 ? _ref : "/";
  return "" + (base !== null && base !== void 0 && base.endsWith("/") ? base.slice(0, -1) : base) + (path.startsWith("/") ? path : "/" + path);
} // These global values are wrapped in typeof clauses to ensure the values exist.
// This is especially problematic in unit testing of this component.


var getGlobalPathPrefix = function getGlobalPathPrefix() {
  return  false ? 0 : "/jacdac-docs";
};

var getGlobalBasePrefix = function getGlobalBasePrefix() {
  return  false ? 0 : "/jacdac-docs";
};

var isLocalLink = function isLocalLink(path) {
  return path && !path.startsWith("http://") && !path.startsWith("https://") && !path.startsWith("//");
};

function withAssetPrefix(path) {
  return withPrefix(path, getGlobalPathPrefix());
}

function absolutify(path, current) {
  // If it's already absolute, return as-is
  if (isAbsolutePath(path)) {
    return path;
  }

  return (0, _utils.resolve)(path, current);
}

var rewriteLinkPath = function rewriteLinkPath(path, relativeTo) {
  if (typeof path === "number") {
    return path;
  }

  if (!isLocalLink(path)) {
    return path;
  }

  return isAbsolutePath(path) ? withPrefix(path) : absolutify(path, relativeTo);
};

var NavLinkPropTypes = {
  activeClassName: _propTypes.default.string,
  activeStyle: _propTypes.default.object,
  partiallyActive: _propTypes.default.bool
}; // Set up IntersectionObserver

var createIntersectionObserver = function createIntersectionObserver(el, cb) {
  var io = new window.IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (el === entry.target) {
        // Check if element is within viewport, remove listener, destroy observer, and run link callback.
        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0
        cb(entry.isIntersecting || entry.intersectionRatio > 0);
      }
    });
  }); // Add element to the observer

  io.observe(el);
  return {
    instance: io,
    el: el
  };
};

function GatsbyLinkLocationWrapper(props) {
  return /*#__PURE__*/_react.default.createElement(_reachRouter.Location, null, function (_ref2) {
    var location = _ref2.location;
    return /*#__PURE__*/_react.default.createElement(GatsbyLink, (0, _extends2.default)({}, props, {
      _location: location
    }));
  });
}

var GatsbyLink = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);

  function GatsbyLink(props) {
    var _this;

    _this = _React$Component.call(this, props) || this; // Default to no support for IntersectionObserver

    _this.defaultGetProps = function (_ref3) {
      var isPartiallyCurrent = _ref3.isPartiallyCurrent,
          isCurrent = _ref3.isCurrent;

      if (_this.props.partiallyActive ? isPartiallyCurrent : isCurrent) {
        return {
          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(" "),
          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)
        };
      }

      return null;
    };

    var IOSupported = false;

    if (typeof window !== "undefined" && window.IntersectionObserver) {
      IOSupported = true;
    }

    _this.state = {
      IOSupported: IOSupported
    };
    _this.abortPrefetch = null;
    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = GatsbyLink.prototype;

  _proto._prefetch = function _prefetch() {
    var currentPath = window.location.pathname + window.location.search; // reach router should have the correct state

    if (this.props._location && this.props._location.pathname) {
      currentPath = this.props._location.pathname + this.props._location.search;
    }

    var rewrittenPath = rewriteLinkPath(this.props.to, currentPath);
    var parsed = (0, _parsePath.parsePath)(rewrittenPath);
    var newPathName = parsed.pathname + parsed.search; // Prefetch is used to speed up next navigations. When you use it on the current navigation,
    // there could be a race-condition where Chrome uses the stale data instead of waiting for the network to complete

    if (currentPath !== newPathName) {
      return ___loader.enqueue(newPathName);
    }

    return undefined;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (!this.io) {
      return;
    }

    var _this$io = this.io,
        instance = _this$io.instance,
        el = _this$io.el;

    if (this.abortPrefetch) {
      this.abortPrefetch.abort();
    }

    instance.unobserve(el);
    instance.disconnect();
  };

  _proto.handleRef = function handleRef(ref) {
    var _this2 = this;

    if (this.props.innerRef && Object.prototype.hasOwnProperty.call(this.props.innerRef, "current")) {
      this.props.innerRef.current = ref;
    } else if (this.props.innerRef) {
      this.props.innerRef(ref);
    }

    if (this.state.IOSupported && ref) {
      // If IO supported and element reference found, setup Observer functionality
      this.io = createIntersectionObserver(ref, function (inViewPort) {
        if (inViewPort) {
          _this2.abortPrefetch = _this2._prefetch();
        } else {
          if (_this2.abortPrefetch) {
            _this2.abortPrefetch.abort();
          }
        }
      });
    }
  };

  _proto.render = function render() {
    var _this3 = this;

    var _this$props = this.props,
        to = _this$props.to,
        _this$props$getProps = _this$props.getProps,
        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,
        _onClick = _this$props.onClick,
        _onMouseEnter = _this$props.onMouseEnter,
        $activeClassName = _this$props.activeClassName,
        $activeStyle = _this$props.activeStyle,
        $innerRef = _this$props.innerRef,
        partiallyActive = _this$props.partiallyActive,
        state = _this$props.state,
        replace = _this$props.replace,
        _location = _this$props._location,
        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, _excluded);

    if (false) {}

    var prefixedTo = rewriteLinkPath(to, _location.pathname);

    if (!isLocalLink(prefixedTo)) {
      return /*#__PURE__*/_react.default.createElement("a", (0, _extends2.default)({
        href: prefixedTo
      }, rest));
    }

    return /*#__PURE__*/_react.default.createElement(_reachRouter.Link, (0, _extends2.default)({
      to: prefixedTo,
      state: state,
      getProps: getProps,
      innerRef: this.handleRef,
      onMouseEnter: function onMouseEnter(e) {
        if (_onMouseEnter) {
          _onMouseEnter(e);
        }

        var parsed = (0, _parsePath.parsePath)(prefixedTo);

        ___loader.hovering(parsed.pathname + parsed.search);
      },
      onClick: function onClick(e) {
        if (_onClick) {
          _onClick(e);
        }

        if (e.button === 0 && // ignore right clicks
        !_this3.props.target && // let browser handle "target=_blank"
        !e.defaultPrevented && // onClick prevented default
        !e.metaKey && // ignore clicks with modifier keys...
        !e.altKey && !e.ctrlKey && !e.shiftKey) {
          e.preventDefault();
          var shouldReplace = replace;

          var isCurrent = encodeURI(prefixedTo) === _location.pathname;

          if (typeof replace !== "boolean" && isCurrent) {
            shouldReplace = true;
          } // Make sure the necessary scripts and data are
          // loaded before continuing.


          window.___navigate(prefixedTo, {
            state: state,
            replace: shouldReplace
          });
        }

        return true;
      }
    }, rest));
  };

  return GatsbyLink;
}(_react.default.Component);

GatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {
  onClick: _propTypes.default.func,
  to: _propTypes.default.string.isRequired,
  replace: _propTypes.default.bool,
  state: _propTypes.default.object
});

var _default = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  return /*#__PURE__*/_react.default.createElement(GatsbyLinkLocationWrapper, (0, _extends2.default)({
    innerRef: ref
  }, props));
});

exports.ZP = _default;

var navigate = function navigate(to, options) {
  window.___navigate(rewriteLinkPath(to, window.location.pathname), options);
};

exports.c4 = navigate;

/***/ }),

/***/ 61752:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


exports.__esModule = true;
exports.parsePath = parsePath;

function parsePath(path) {
  var pathname = path || "/";
  var search = "";
  var hash = "";
  var hashIndex = pathname.indexOf("#");

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf("?");

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === "?" ? "" : search,
    hash: hash === "#" ? "" : hash
  };
}

/***/ }),

/***/ 19679:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = true;
exports.p2 = exports.$C = void 0;

var _scrollHandler = __webpack_require__(61432);

exports.$C = _scrollHandler.ScrollHandler;

var _useScrollRestoration = __webpack_require__(54855);

exports.p2 = _useScrollRestoration.useScrollRestoration;

/***/ }),

/***/ 61432:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(95318);

exports.__esModule = true;
exports.ScrollHandler = exports.ScrollContext = void 0;

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(81506));

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(85354));

var React = _interopRequireWildcard(__webpack_require__(67294));

var _propTypes = _interopRequireDefault(__webpack_require__(45697));

var _sessionStorage = __webpack_require__(21142);

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ScrollContext = /*#__PURE__*/React.createContext(new _sessionStorage.SessionStorage());
exports.ScrollContext = ScrollContext;
ScrollContext.displayName = "GatsbyScrollContext";

var ScrollHandler = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(ScrollHandler, _React$Component);

  function ScrollHandler() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this._stateStorage = new _sessionStorage.SessionStorage();
    _this._isTicking = false;
    _this._latestKnownScrollY = 0;

    _this.scrollListener = function () {
      _this._latestKnownScrollY = window.scrollY;

      if (!_this._isTicking) {
        _this._isTicking = true;
        requestAnimationFrame(_this._saveScroll.bind((0, _assertThisInitialized2.default)(_this)));
      }
    };

    _this.windowScroll = function (position, prevProps) {
      if (_this.shouldUpdateScroll(prevProps, _this.props)) {
        window.scrollTo(0, position);
      }
    };

    _this.scrollToHash = function (hash, prevProps) {
      var node = document.getElementById(hash.substring(1));

      if (node && _this.shouldUpdateScroll(prevProps, _this.props)) {
        node.scrollIntoView();
      }
    };

    _this.shouldUpdateScroll = function (prevRouterProps, routerProps) {
      var shouldUpdateScroll = _this.props.shouldUpdateScroll;

      if (!shouldUpdateScroll) {
        return true;
      } // Hack to allow accessing this._stateStorage.


      return shouldUpdateScroll.call((0, _assertThisInitialized2.default)(_this), prevRouterProps, routerProps);
    };

    return _this;
  }

  var _proto = ScrollHandler.prototype;

  _proto._saveScroll = function _saveScroll() {
    var key = this.props.location.key || null;

    if (key) {
      this._stateStorage.save(this.props.location, key, this._latestKnownScrollY);
    }

    this._isTicking = false;
  };

  _proto.componentDidMount = function componentDidMount() {
    window.addEventListener("scroll", this.scrollListener);
    var scrollPosition;
    var _this$props$location = this.props.location,
        key = _this$props$location.key,
        hash = _this$props$location.hash;

    if (key) {
      scrollPosition = this._stateStorage.read(this.props.location, key);
    }

    if (scrollPosition) {
      this.windowScroll(scrollPosition, undefined);
    } else if (hash) {
      this.scrollToHash(decodeURI(hash), undefined);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    window.removeEventListener("scroll", this.scrollListener);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this$props$location2 = this.props.location,
        hash = _this$props$location2.hash,
        key = _this$props$location2.key;
    var scrollPosition;

    if (key) {
      scrollPosition = this._stateStorage.read(this.props.location, key);
    }
    /**  There are two pieces of state: the browser url and
     * history state which keeps track of scroll position
     * Native behaviour prescribes that we ought to restore scroll position
     * when a user navigates back in their browser (this is the `POP` action)
     * Currently, reach router has a bug that prevents this at https://github.com/reach/router/issues/228
     * So we _always_ stick to the url as a source of truth — if the url
     * contains a hash, we scroll to it
     */


    if (hash) {
      this.scrollToHash(decodeURI(hash), prevProps);
    } else {
      this.windowScroll(scrollPosition, prevProps);
    }
  };

  _proto.render = function render() {
    return /*#__PURE__*/React.createElement(ScrollContext.Provider, {
      value: this._stateStorage
    }, this.props.children);
  };

  return ScrollHandler;
}(React.Component);

exports.ScrollHandler = ScrollHandler;
ScrollHandler.propTypes = {
  shouldUpdateScroll: _propTypes.default.func,
  children: _propTypes.default.element.isRequired,
  location: _propTypes.default.object.isRequired
};

/***/ }),

/***/ 21142:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


exports.__esModule = true;
exports.SessionStorage = void 0;
var STATE_KEY_PREFIX = "@@scroll|";
var GATSBY_ROUTER_SCROLL_STATE = "___GATSBY_REACT_ROUTER_SCROLL";

var SessionStorage = /*#__PURE__*/function () {
  function SessionStorage() {}

  var _proto = SessionStorage.prototype;

  _proto.read = function read(location, key) {
    var stateKey = this.getStateKey(location, key);

    try {
      var value = window.sessionStorage.getItem(stateKey);
      return value ? JSON.parse(value) : 0;
    } catch (e) {
      if (false) {}

      if (window && window[GATSBY_ROUTER_SCROLL_STATE] && window[GATSBY_ROUTER_SCROLL_STATE][stateKey]) {
        return window[GATSBY_ROUTER_SCROLL_STATE][stateKey];
      }

      return 0;
    }
  };

  _proto.save = function save(location, key, value) {
    var stateKey = this.getStateKey(location, key);
    var storedValue = JSON.stringify(value);

    try {
      window.sessionStorage.setItem(stateKey, storedValue);
    } catch (e) {
      if (window && window[GATSBY_ROUTER_SCROLL_STATE]) {
        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);
      } else {
        window[GATSBY_ROUTER_SCROLL_STATE] = {};
        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);
      }

      if (false) {}
    }
  };

  _proto.getStateKey = function getStateKey(location, key) {
    var stateKeyBase = "" + STATE_KEY_PREFIX + location.pathname;
    return key === null || typeof key === "undefined" ? stateKeyBase : stateKeyBase + "|" + key;
  };

  return SessionStorage;
}();

exports.SessionStorage = SessionStorage;

/***/ }),

/***/ 54855:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.useScrollRestoration = useScrollRestoration;

var _scrollHandler = __webpack_require__(61432);

var _react = __webpack_require__(67294);

var _reachRouter = __webpack_require__(29499);

function useScrollRestoration(identifier) {
  var location = (0, _reachRouter.useLocation)();
  var state = (0, _react.useContext)(_scrollHandler.ScrollContext);
  var ref = (0, _react.useRef)(null);
  (0, _react.useLayoutEffect)(function () {
    if (ref.current) {
      var position = state.read(location, identifier);
      ref.current.scrollTo(0, position || 0);
    }
  }, [location.key]);
  return {
    ref: ref,
    onScroll: function onScroll() {
      if (ref.current) {
        state.save(location, identifier, ref.current.scrollTop);
      }
    }
  };
}

/***/ }),

/***/ 73512:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GKF": function() { return /* binding */ SystemReadingThreshold; },
/* harmony export */   "_kj": function() { return /* binding */ SystemStatusCodes; },
/* harmony export */   "xSq": function() { return /* binding */ SystemCmd; },
/* harmony export */   "ZJq": function() { return /* binding */ SystemReg; },
/* harmony export */   "nSK": function() { return /* binding */ SystemEvent; },
/* harmony export */   "vCn": function() { return /* binding */ BaseReg; },
/* harmony export */   "DVg": function() { return /* binding */ BaseEvent; },
/* harmony export */   "q9t": function() { return /* binding */ SensorReg; },
/* harmony export */   "QF7": function() { return /* binding */ SRV_ACCELEROMETER; },
/* harmony export */   "bdf": function() { return /* binding */ AccelerometerReg; },
/* harmony export */   "tOR": function() { return /* binding */ SRV_AZURE_IOT_HUB_HEALTH; },
/* harmony export */   "gaB": function() { return /* binding */ AzureIotHubHealthConnectionStatus; },
/* harmony export */   "q7s": function() { return /* binding */ AzureIotHubHealthReg; },
/* harmony export */   "FhJ": function() { return /* binding */ AzureIotHubHealthCmd; },
/* harmony export */   "qqS": function() { return /* binding */ AzureIotHubHealthEvent; },
/* harmony export */   "bDe": function() { return /* binding */ SRV_BAROMETER; },
/* harmony export */   "BYF": function() { return /* binding */ SRV_BIT_RADIO; },
/* harmony export */   "qdU": function() { return /* binding */ BitRadioReg; },
/* harmony export */   "GZs": function() { return /* binding */ BitRadioCmd; },
/* harmony export */   "PWm": function() { return /* binding */ SRV_BOOTLOADER; },
/* harmony export */   "_HP": function() { return /* binding */ BootloaderError; },
/* harmony export */   "e96": function() { return /* binding */ BootloaderCmd; },
/* harmony export */   "IvW": function() { return /* binding */ SRV_BRAILLE_DISPLAY; },
/* harmony export */   "Dvj": function() { return /* binding */ BrailleDisplayReg; },
/* harmony export */   "XJR": function() { return /* binding */ SRV_BUTTON; },
/* harmony export */   "CP7": function() { return /* binding */ ButtonReg; },
/* harmony export */   "XKP": function() { return /* binding */ ButtonEvent; },
/* harmony export */   "J1$": function() { return /* binding */ SRV_BUZZER; },
/* harmony export */   "CGK": function() { return /* binding */ BuzzerReg; },
/* harmony export */   "Rv2": function() { return /* binding */ BuzzerCmd; },
/* harmony export */   "bKD": function() { return /* binding */ SRV_CAPACITIVE_BUTTON; },
/* harmony export */   "mVd": function() { return /* binding */ CapacitiveButtonReg; },
/* harmony export */   "IB4": function() { return /* binding */ SRV_CHARACTER_SCREEN; },
/* harmony export */   "GLh": function() { return /* binding */ CharacterScreenVariant; },
/* harmony export */   "mbk": function() { return /* binding */ CharacterScreenTextDirection; },
/* harmony export */   "OEJ": function() { return /* binding */ CharacterScreenReg; },
/* harmony export */   "nWR": function() { return /* binding */ CharacterScreenCmd; },
/* harmony export */   "$6j": function() { return /* binding */ SRV_CODAL_MESSAGE_BUS; },
/* harmony export */   "QxS": function() { return /* binding */ CodalMessageBusCmd; },
/* harmony export */   "Coy": function() { return /* binding */ SRV_COLOR; },
/* harmony export */   "GOL": function() { return /* binding */ ColorReg; },
/* harmony export */   "JTB": function() { return /* binding */ SRV_COMPASS; },
/* harmony export */   "kQD": function() { return /* binding */ CompassReg; },
/* harmony export */   "gm9": function() { return /* binding */ SRV_CONTROL; },
/* harmony export */   "P99": function() { return /* binding */ ControlAnnounceFlags; },
/* harmony export */   "VSW": function() { return /* binding */ ControlCmd; },
/* harmony export */   "toU": function() { return /* binding */ ControlReg; },
/* harmony export */   "UPj": function() { return /* binding */ SRV_DASHBOARD; },
/* harmony export */   "YzE": function() { return /* binding */ SRV_DIMMER; },
/* harmony export */   "V1A": function() { return /* binding */ DimmerVariant; },
/* harmony export */   "pwy": function() { return /* binding */ DimmerReg; },
/* harmony export */   "Sfn": function() { return /* binding */ SRV_DISTANCE; },
/* harmony export */   "NA1": function() { return /* binding */ DistanceVariant; },
/* harmony export */   "$GJ": function() { return /* binding */ SRV_DMX; },
/* harmony export */   "tXW": function() { return /* binding */ DmxCmd; },
/* harmony export */   "GDq": function() { return /* binding */ SRV_DOT_MATRIX; },
/* harmony export */   "ozp": function() { return /* binding */ DotMatrixVariant; },
/* harmony export */   "v$D": function() { return /* binding */ DotMatrixReg; },
/* harmony export */   "bpX": function() { return /* binding */ SRV_E_CO2; },
/* harmony export */   "Jlc": function() { return /* binding */ ECO2Variant; },
/* harmony export */   "YYl": function() { return /* binding */ SRV_FLEX; },
/* harmony export */   "MhZ": function() { return /* binding */ FlexVariant; },
/* harmony export */   "R0$": function() { return /* binding */ SRV_GYROSCOPE; },
/* harmony export */   "Eju": function() { return /* binding */ GyroscopeReg; },
/* harmony export */   "t9W": function() { return /* binding */ SRV_HEART_RATE; },
/* harmony export */   "PBH": function() { return /* binding */ HeartRateVariant; },
/* harmony export */   "Hg9": function() { return /* binding */ SRV_HID_KEYBOARD; },
/* harmony export */   "Q2Q": function() { return /* binding */ HidKeyboardModifiers; },
/* harmony export */   "gBd": function() { return /* binding */ HidKeyboardAction; },
/* harmony export */   "Fnq": function() { return /* binding */ HidKeyboardCmd; },
/* harmony export */   "Eef": function() { return /* binding */ SRV_HID_MOUSE; },
/* harmony export */   "chA": function() { return /* binding */ HidMouseButton; },
/* harmony export */   "A9D": function() { return /* binding */ HidMouseButtonEvent; },
/* harmony export */   "pvv": function() { return /* binding */ HidMouseCmd; },
/* harmony export */   "JbI": function() { return /* binding */ SRV_HUMIDITY; },
/* harmony export */   "Mvm": function() { return /* binding */ SRV_ILLUMINANCE; },
/* harmony export */   "QWn": function() { return /* binding */ SRV_INFRASTRUCTURE; },
/* harmony export */   "vRO": function() { return /* binding */ SRV_JOYSTICK; },
/* harmony export */   "xC": function() { return /* binding */ JoystickButtons; },
/* harmony export */   "BUi": function() { return /* binding */ JoystickVariant; },
/* harmony export */   "ztd": function() { return /* binding */ JoystickReg; },
/* harmony export */   "$42": function() { return /* binding */ JoystickEvent; },
/* harmony export */   "i04": function() { return /* binding */ SRV_LED; },
/* harmony export */   "FRS": function() { return /* binding */ LedVariant; },
/* harmony export */   "tVE": function() { return /* binding */ LedCmd; },
/* harmony export */   "Abo": function() { return /* binding */ LedReg; },
/* harmony export */   "zEX": function() { return /* binding */ SRV_LED_PIXEL; },
/* harmony export */   "lFE": function() { return /* binding */ LedPixelLightType; },
/* harmony export */   "dQg": function() { return /* binding */ LedPixelVariant; },
/* harmony export */   "k9u": function() { return /* binding */ LedPixelReg; },
/* harmony export */   "yB$": function() { return /* binding */ LedPixelCmd; },
/* harmony export */   "yWt": function() { return /* binding */ SRV_LIGHT_BULB; },
/* harmony export */   "DPc": function() { return /* binding */ LightBulbReg; },
/* harmony export */   "pPH": function() { return /* binding */ SRV_LIGHT_LEVEL; },
/* harmony export */   "A9j": function() { return /* binding */ LightLevelVariant; },
/* harmony export */   "w9j": function() { return /* binding */ SRV_LOGGER; },
/* harmony export */   "qit": function() { return /* binding */ LoggerPriority; },
/* harmony export */   "hXV": function() { return /* binding */ LoggerReg; },
/* harmony export */   "eQc": function() { return /* binding */ LoggerCmd; },
/* harmony export */   "UB9": function() { return /* binding */ SRV_MATRIX_KEYPAD; },
/* harmony export */   "f6T": function() { return /* binding */ MatrixKeypadReg; },
/* harmony export */   "kVm": function() { return /* binding */ SRV_MODEL_RUNNER; },
/* harmony export */   "cdg": function() { return /* binding */ ModelRunnerCmd; },
/* harmony export */   "FEd": function() { return /* binding */ ModelRunnerReg; },
/* harmony export */   "yRl": function() { return /* binding */ SRV_MOTION; },
/* harmony export */   "xW$": function() { return /* binding */ MotionReg; },
/* harmony export */   "YZU": function() { return /* binding */ SRV_MOTOR; },
/* harmony export */   "Xjv": function() { return /* binding */ MotorReg; },
/* harmony export */   "GQv": function() { return /* binding */ SRV_POTENTIOMETER; },
/* harmony export */   "cmA": function() { return /* binding */ PotentiometerVariant; },
/* harmony export */   "mQG": function() { return /* binding */ SRV_POWER; },
/* harmony export */   "p6N": function() { return /* binding */ PowerPowerStatus; },
/* harmony export */   "$xp": function() { return /* binding */ PowerReg; },
/* harmony export */   "$Bn": function() { return /* binding */ SRV_PROTO_TEST; },
/* harmony export */   "M7y": function() { return /* binding */ ProtoTestReg; },
/* harmony export */   "ZRA": function() { return /* binding */ ProtoTestEvent; },
/* harmony export */   "PZz": function() { return /* binding */ ProtoTestCmd; },
/* harmony export */   "Ahc": function() { return /* binding */ SRV_PROXY; },
/* harmony export */   "c2H": function() { return /* binding */ SRV_PULSE_OXIMETER; },
/* harmony export */   "NnQ": function() { return /* binding */ SRV_RAIN_GAUGE; },
/* harmony export */   "HUu": function() { return /* binding */ RainGaugeReg; },
/* harmony export */   "XXX": function() { return /* binding */ SRV_REAL_TIME_CLOCK; },
/* harmony export */   "rSD": function() { return /* binding */ RealTimeClockVariant; },
/* harmony export */   "AEe": function() { return /* binding */ RealTimeClockReg; },
/* harmony export */   "BL8": function() { return /* binding */ RealTimeClockCmd; },
/* harmony export */   "tky": function() { return /* binding */ SRV_REFLECTED_LIGHT; },
/* harmony export */   "cRH": function() { return /* binding */ ReflectedLightVariant; },
/* harmony export */   "XXp": function() { return /* binding */ ReflectedLightReg; },
/* harmony export */   "E4D": function() { return /* binding */ SRV_RELAY; },
/* harmony export */   "fuX": function() { return /* binding */ RelayVariant; },
/* harmony export */   "D_x": function() { return /* binding */ RelayReg; },
/* harmony export */   "NMZ": function() { return /* binding */ SRV_RNG; },
/* harmony export */   "OzQ": function() { return /* binding */ RngVariant; },
/* harmony export */   "gz5": function() { return /* binding */ RngReg; },
/* harmony export */   "igi": function() { return /* binding */ SRV_ROLE_MANAGER; },
/* harmony export */   "ydC": function() { return /* binding */ RoleManagerReg; },
/* harmony export */   "zGD": function() { return /* binding */ RoleManagerCmd; },
/* harmony export */   "lNp": function() { return /* binding */ SRV_ROTARY_ENCODER; },
/* harmony export */   "$v5": function() { return /* binding */ RotaryEncoderReg; },
/* harmony export */   "x12": function() { return /* binding */ SRV_SENSOR_AGGREGATOR; },
/* harmony export */   "HEd": function() { return /* binding */ SensorAggregatorSampleType; },
/* harmony export */   "HUt": function() { return /* binding */ SensorAggregatorReg; },
/* harmony export */   "$X_": function() { return /* binding */ SRV_SERVO; },
/* harmony export */   "pmu": function() { return /* binding */ ServoReg; },
/* harmony export */   "B9b": function() { return /* binding */ SRV_SETTINGS; },
/* harmony export */   "vnb": function() { return /* binding */ SettingsCmd; },
/* harmony export */   "NAh": function() { return /* binding */ SettingsEvent; },
/* harmony export */   "hvg": function() { return /* binding */ SRV_SEVEN_SEGMENT_DISPLAY; },
/* harmony export */   "p2w": function() { return /* binding */ SevenSegmentDisplayReg; },
/* harmony export */   "Bj3": function() { return /* binding */ SRV_SOIL_MOISTURE; },
/* harmony export */   "Qrk": function() { return /* binding */ SoilMoistureReg; },
/* harmony export */   "b68": function() { return /* binding */ SRV_SOLENOID; },
/* harmony export */   "o$M": function() { return /* binding */ SolenoidReg; },
/* harmony export */   "GvX": function() { return /* binding */ SRV_SOUND_LEVEL; },
/* harmony export */   "lSs": function() { return /* binding */ SoundLevelReg; },
/* harmony export */   "OrM": function() { return /* binding */ SRV_SOUND_PLAYER; },
/* harmony export */   "Ic7": function() { return /* binding */ SoundPlayerReg; },
/* harmony export */   "TFx": function() { return /* binding */ SoundPlayerCmd; },
/* harmony export */   "vsp": function() { return /* binding */ SRV_SOUND_SPECTRUM; },
/* harmony export */   "w4N": function() { return /* binding */ SoundSpectrumReg; },
/* harmony export */   "ydR": function() { return /* binding */ SRV_SPEECH_SYNTHESIS; },
/* harmony export */   "b3j": function() { return /* binding */ SpeechSynthesisReg; },
/* harmony export */   "AWi": function() { return /* binding */ SpeechSynthesisCmd; },
/* harmony export */   "Crg": function() { return /* binding */ SRV_SWITCH; },
/* harmony export */   "fhu": function() { return /* binding */ SwitchVariant; },
/* harmony export */   "FNv": function() { return /* binding */ SwitchReg; },
/* harmony export */   "MfB": function() { return /* binding */ SwitchEvent; },
/* harmony export */   "ZZs": function() { return /* binding */ SRV_THERMOCOUPLE; },
/* harmony export */   "Jvc": function() { return /* binding */ ThermocoupleVariant; },
/* harmony export */   "O$i": function() { return /* binding */ SRV_THERMOMETER; },
/* harmony export */   "_bR": function() { return /* binding */ ThermometerVariant; },
/* harmony export */   "jHN": function() { return /* binding */ SRV_TRAFFIC_LIGHT; },
/* harmony export */   "r6v": function() { return /* binding */ TrafficLightReg; },
/* harmony export */   "Jz1": function() { return /* binding */ SRV_TVOC; },
/* harmony export */   "U9t": function() { return /* binding */ SRV_UNIQUE_BRAIN; },
/* harmony export */   "R2S": function() { return /* binding */ SRV_UV_INDEX; },
/* harmony export */   "X8d": function() { return /* binding */ SRV_VIBRATION_MOTOR; },
/* harmony export */   "tDt": function() { return /* binding */ VibrationMotorReg; },
/* harmony export */   "EmZ": function() { return /* binding */ VibrationMotorCmd; },
/* harmony export */   "Szz": function() { return /* binding */ SRV_WATER_LEVEL; },
/* harmony export */   "sdM": function() { return /* binding */ WaterLevelReg; },
/* harmony export */   "Mf9": function() { return /* binding */ SRV_WEIGHT_SCALE; },
/* harmony export */   "eBe": function() { return /* binding */ WeightScaleVariant; },
/* harmony export */   "zti": function() { return /* binding */ SRV_WIFI; },
/* harmony export */   "GHo": function() { return /* binding */ WifiAPFlags; },
/* harmony export */   "kBD": function() { return /* binding */ WifiCmd; },
/* harmony export */   "eFM": function() { return /* binding */ WifiReg; },
/* harmony export */   "Xoc": function() { return /* binding */ WifiEvent; },
/* harmony export */   "M$m": function() { return /* binding */ SRV_WIND_DIRECTION; },
/* harmony export */   "wrj": function() { return /* binding */ WindDirectionReg; },
/* harmony export */   "qvJ": function() { return /* binding */ SRV_WIND_SPEED; },
/* harmony export */   "EPs": function() { return /* binding */ WindSpeedReg; }
/* harmony export */ });
/* unused harmony exports ANNOUNCE_INTERVAL, BaseCmd, AccelerometerEvent, SRV_ARCADE_GAMEPAD, ArcadeGamepadButton, ArcadeGamepadReg, ArcadeGamepadEvent, SRV_ARCADE_SOUND, ArcadeSoundCmd, ArcadeSoundReg, SRV_BARCODE_READER, BarcodeReaderFormat, BarcodeReaderReg, BarcodeReaderEvent, BarometerReg, CapacitiveButtonCmd, CodalMessageBusEvent, CompassCmd, DistanceReg, DmxReg, ECO2Reg, FlexReg, HeartRateReg, SRV_HID_ADAPTER, HidAdapterReg, HidAdapterCmd, HidAdapterEvent, HumidityReg, IlluminanceReg, SRV_INDEXED_SCREEN, IndexedScreenCmd, IndexedScreenReg, LightBulbEvent, LightLevelReg, SRV_MAGNETOMETER, MagnetometerReg, MagnetometerCmd, MatrixKeypadVariant, MatrixKeypadEvent, SRV_MICROPHONE, MicrophoneCmd, MicrophoneReg, SRV_MIDI_OUTPUT, MidiOutputReg, MidiOutputCmd, ModelRunnerModelFormat, MotionVariant, MotionEvent, SRV_MULTITOUCH, MultitouchReg, MultitouchEvent, PotentiometerReg, PowerCmd, PowerEvent, SRV_PRESSURE_BUTTON, PressureButtonReg, PulseOximeterReg, ReflectedLightEvent, RelayEvent, RoleManagerEvent, SRV_ROVER, RoverReg, SevenSegmentDisplayCmd, SoilMoistureVariant, SolenoidVariant, SoundLevelEvent, SRV_TCP, TcpTcpError, TcpCmd, TcpPipeCmd, ThermocoupleReg, ThermometerReg, TvocReg, UvIndexVariant, UvIndexReg, SRV_VERIFIED_TELEMETRY, VerifiedTelemetryStatus, VerifiedTelemetryFingerprintType, VerifiedTelemetryReg, VerifiedTelemetryCmd, VerifiedTelemetryEvent, WaterLevelVariant, WeightScaleReg, WeightScaleCmd */
// Service: Common registers and commands
var ANNOUNCE_INTERVAL = 0x1f4;
var SystemReadingThreshold;

(function (SystemReadingThreshold) {
  SystemReadingThreshold[SystemReadingThreshold["Neutral"] = 1] = "Neutral";
  SystemReadingThreshold[SystemReadingThreshold["Inactive"] = 2] = "Inactive";
  SystemReadingThreshold[SystemReadingThreshold["Active"] = 3] = "Active";
})(SystemReadingThreshold || (SystemReadingThreshold = {}));

var SystemStatusCodes;

(function (SystemStatusCodes) {
  SystemStatusCodes[SystemStatusCodes["Ready"] = 0] = "Ready";
  SystemStatusCodes[SystemStatusCodes["Initializing"] = 1] = "Initializing";
  SystemStatusCodes[SystemStatusCodes["Calibrating"] = 2] = "Calibrating";
  SystemStatusCodes[SystemStatusCodes["Sleeping"] = 3] = "Sleeping";
  SystemStatusCodes[SystemStatusCodes["WaitingForInput"] = 4] = "WaitingForInput";
  SystemStatusCodes[SystemStatusCodes["CalibrationNeeded"] = 100] = "CalibrationNeeded";
})(SystemStatusCodes || (SystemStatusCodes = {}));

var SystemCmd;

(function (SystemCmd) {
  SystemCmd[SystemCmd["Announce"] = 0] = "Announce";
  SystemCmd[SystemCmd["GetRegister"] = 4096] = "GetRegister";
  SystemCmd[SystemCmd["SetRegister"] = 8192] = "SetRegister";
  SystemCmd[SystemCmd["Event"] = 1] = "Event";
  SystemCmd[SystemCmd["Calibrate"] = 2] = "Calibrate";
  SystemCmd[SystemCmd["CommandNotImplemented"] = 3] = "CommandNotImplemented";
})(SystemCmd || (SystemCmd = {}));

var SystemReg;

(function (SystemReg) {
  SystemReg[SystemReg["Intensity"] = 1] = "Intensity";
  SystemReg[SystemReg["Value"] = 2] = "Value";
  SystemReg[SystemReg["MinValue"] = 272] = "MinValue";
  SystemReg[SystemReg["MaxValue"] = 273] = "MaxValue";
  SystemReg[SystemReg["MaxPower"] = 7] = "MaxPower";
  SystemReg[SystemReg["StreamingSamples"] = 3] = "StreamingSamples";
  SystemReg[SystemReg["StreamingInterval"] = 4] = "StreamingInterval";
  SystemReg[SystemReg["Reading"] = 257] = "Reading";
  SystemReg[SystemReg["ReadingRange"] = 8] = "ReadingRange";
  SystemReg[SystemReg["SupportedRanges"] = 266] = "SupportedRanges";
  SystemReg[SystemReg["MinReading"] = 260] = "MinReading";
  SystemReg[SystemReg["MaxReading"] = 261] = "MaxReading";
  SystemReg[SystemReg["ReadingError"] = 262] = "ReadingError";
  SystemReg[SystemReg["ReadingResolution"] = 264] = "ReadingResolution";
  SystemReg[SystemReg["InactiveThreshold"] = 5] = "InactiveThreshold";
  SystemReg[SystemReg["ActiveThreshold"] = 6] = "ActiveThreshold";
  SystemReg[SystemReg["StreamingPreferredInterval"] = 258] = "StreamingPreferredInterval";
  SystemReg[SystemReg["Variant"] = 263] = "Variant";
  SystemReg[SystemReg["StatusCode"] = 259] = "StatusCode";
  SystemReg[SystemReg["InstanceName"] = 265] = "InstanceName";
})(SystemReg || (SystemReg = {}));

var SystemEvent; // Service: Base service

(function (SystemEvent) {
  SystemEvent[SystemEvent["Active"] = 1] = "Active";
  SystemEvent[SystemEvent["Inactive"] = 2] = "Inactive";
  SystemEvent[SystemEvent["Change"] = 3] = "Change";
  SystemEvent[SystemEvent["StatusCodeChanged"] = 4] = "StatusCodeChanged";
  SystemEvent[SystemEvent["Neutral"] = 7] = "Neutral";
})(SystemEvent || (SystemEvent = {}));

var BaseCmd;

(function (BaseCmd) {
  BaseCmd[BaseCmd["CommandNotImplemented"] = 3] = "CommandNotImplemented";
})(BaseCmd || (BaseCmd = {}));

var BaseReg;

(function (BaseReg) {
  BaseReg[BaseReg["InstanceName"] = 265] = "InstanceName";
  BaseReg[BaseReg["StatusCode"] = 259] = "StatusCode";
})(BaseReg || (BaseReg = {}));

var BaseEvent; // Service: Sensor

(function (BaseEvent) {
  BaseEvent[BaseEvent["StatusCodeChanged"] = 4] = "StatusCodeChanged";
})(BaseEvent || (BaseEvent = {}));

var SensorReg; // Service: Accelerometer

(function (SensorReg) {
  SensorReg[SensorReg["StreamingSamples"] = 3] = "StreamingSamples";
  SensorReg[SensorReg["StreamingInterval"] = 4] = "StreamingInterval";
  SensorReg[SensorReg["StreamingPreferredInterval"] = 258] = "StreamingPreferredInterval";
})(SensorReg || (SensorReg = {}));

var SRV_ACCELEROMETER = 0x1f140409;
var AccelerometerReg;

(function (AccelerometerReg) {
  AccelerometerReg[AccelerometerReg["Forces"] = 257] = "Forces";
  AccelerometerReg[AccelerometerReg["ForcesError"] = 262] = "ForcesError";
  AccelerometerReg[AccelerometerReg["MaxForce"] = 8] = "MaxForce";
  AccelerometerReg[AccelerometerReg["MaxForcesSupported"] = 266] = "MaxForcesSupported";
})(AccelerometerReg || (AccelerometerReg = {}));

var AccelerometerEvent; // Service: Arcade Gamepad

(function (AccelerometerEvent) {
  AccelerometerEvent[AccelerometerEvent["TiltUp"] = 129] = "TiltUp";
  AccelerometerEvent[AccelerometerEvent["TiltDown"] = 130] = "TiltDown";
  AccelerometerEvent[AccelerometerEvent["TiltLeft"] = 131] = "TiltLeft";
  AccelerometerEvent[AccelerometerEvent["TiltRight"] = 132] = "TiltRight";
  AccelerometerEvent[AccelerometerEvent["FaceUp"] = 133] = "FaceUp";
  AccelerometerEvent[AccelerometerEvent["FaceDown"] = 134] = "FaceDown";
  AccelerometerEvent[AccelerometerEvent["Freefall"] = 135] = "Freefall";
  AccelerometerEvent[AccelerometerEvent["Shake"] = 139] = "Shake";
  AccelerometerEvent[AccelerometerEvent["Force2g"] = 140] = "Force2g";
  AccelerometerEvent[AccelerometerEvent["Force3g"] = 136] = "Force3g";
  AccelerometerEvent[AccelerometerEvent["Force6g"] = 137] = "Force6g";
  AccelerometerEvent[AccelerometerEvent["Force8g"] = 138] = "Force8g";
})(AccelerometerEvent || (AccelerometerEvent = {}));

var SRV_ARCADE_GAMEPAD = 0x1deaa06e;
var ArcadeGamepadButton;

(function (ArcadeGamepadButton) {
  ArcadeGamepadButton[ArcadeGamepadButton["Left"] = 1] = "Left";
  ArcadeGamepadButton[ArcadeGamepadButton["Up"] = 2] = "Up";
  ArcadeGamepadButton[ArcadeGamepadButton["Right"] = 3] = "Right";
  ArcadeGamepadButton[ArcadeGamepadButton["Down"] = 4] = "Down";
  ArcadeGamepadButton[ArcadeGamepadButton["A"] = 5] = "A";
  ArcadeGamepadButton[ArcadeGamepadButton["B"] = 6] = "B";
  ArcadeGamepadButton[ArcadeGamepadButton["Menu"] = 7] = "Menu";
  ArcadeGamepadButton[ArcadeGamepadButton["Select"] = 8] = "Select";
  ArcadeGamepadButton[ArcadeGamepadButton["Reset"] = 9] = "Reset";
  ArcadeGamepadButton[ArcadeGamepadButton["Exit"] = 10] = "Exit";
})(ArcadeGamepadButton || (ArcadeGamepadButton = {}));

var ArcadeGamepadReg;

(function (ArcadeGamepadReg) {
  ArcadeGamepadReg[ArcadeGamepadReg["Buttons"] = 257] = "Buttons";
  ArcadeGamepadReg[ArcadeGamepadReg["AvailableButtons"] = 384] = "AvailableButtons";
})(ArcadeGamepadReg || (ArcadeGamepadReg = {}));

var ArcadeGamepadEvent; // Service: Arcade Sound

(function (ArcadeGamepadEvent) {
  ArcadeGamepadEvent[ArcadeGamepadEvent["Down"] = 1] = "Down";
  ArcadeGamepadEvent[ArcadeGamepadEvent["Up"] = 2] = "Up";
})(ArcadeGamepadEvent || (ArcadeGamepadEvent = {}));

var SRV_ARCADE_SOUND = 0x1fc63606;
var ArcadeSoundCmd;

(function (ArcadeSoundCmd) {
  ArcadeSoundCmd[ArcadeSoundCmd["Play"] = 128] = "Play";
})(ArcadeSoundCmd || (ArcadeSoundCmd = {}));

var ArcadeSoundReg; // Service: Azure IoT Hub Health

(function (ArcadeSoundReg) {
  ArcadeSoundReg[ArcadeSoundReg["SampleRate"] = 128] = "SampleRate";
  ArcadeSoundReg[ArcadeSoundReg["BufferSize"] = 384] = "BufferSize";
  ArcadeSoundReg[ArcadeSoundReg["BufferPending"] = 385] = "BufferPending";
})(ArcadeSoundReg || (ArcadeSoundReg = {}));

var SRV_AZURE_IOT_HUB_HEALTH = 0x1462eefc;
var AzureIotHubHealthConnectionStatus;

(function (AzureIotHubHealthConnectionStatus) {
  AzureIotHubHealthConnectionStatus[AzureIotHubHealthConnectionStatus["Connected"] = 1] = "Connected";
  AzureIotHubHealthConnectionStatus[AzureIotHubHealthConnectionStatus["Disconnected"] = 2] = "Disconnected";
  AzureIotHubHealthConnectionStatus[AzureIotHubHealthConnectionStatus["Connecting"] = 3] = "Connecting";
  AzureIotHubHealthConnectionStatus[AzureIotHubHealthConnectionStatus["Disconnecting"] = 4] = "Disconnecting";
})(AzureIotHubHealthConnectionStatus || (AzureIotHubHealthConnectionStatus = {}));

var AzureIotHubHealthReg;

(function (AzureIotHubHealthReg) {
  AzureIotHubHealthReg[AzureIotHubHealthReg["HubName"] = 384] = "HubName";
  AzureIotHubHealthReg[AzureIotHubHealthReg["HubDeviceId"] = 385] = "HubDeviceId";
  AzureIotHubHealthReg[AzureIotHubHealthReg["ConnectionStatus"] = 386] = "ConnectionStatus";
})(AzureIotHubHealthReg || (AzureIotHubHealthReg = {}));

var AzureIotHubHealthCmd;

(function (AzureIotHubHealthCmd) {
  AzureIotHubHealthCmd[AzureIotHubHealthCmd["Connect"] = 129] = "Connect";
  AzureIotHubHealthCmd[AzureIotHubHealthCmd["Disconnect"] = 130] = "Disconnect";
  AzureIotHubHealthCmd[AzureIotHubHealthCmd["SetConnectionString"] = 134] = "SetConnectionString";
})(AzureIotHubHealthCmd || (AzureIotHubHealthCmd = {}));

var AzureIotHubHealthEvent; // Service: Barcode reader

(function (AzureIotHubHealthEvent) {
  AzureIotHubHealthEvent[AzureIotHubHealthEvent["ConnectionStatusChange"] = 3] = "ConnectionStatusChange";
  AzureIotHubHealthEvent[AzureIotHubHealthEvent["MessageSent"] = 128] = "MessageSent";
})(AzureIotHubHealthEvent || (AzureIotHubHealthEvent = {}));

var SRV_BARCODE_READER = 0x1c739e6c;
var BarcodeReaderFormat;

(function (BarcodeReaderFormat) {
  BarcodeReaderFormat[BarcodeReaderFormat["Aztec"] = 1] = "Aztec";
  BarcodeReaderFormat[BarcodeReaderFormat["Code128"] = 2] = "Code128";
  BarcodeReaderFormat[BarcodeReaderFormat["Code39"] = 3] = "Code39";
  BarcodeReaderFormat[BarcodeReaderFormat["Code93"] = 4] = "Code93";
  BarcodeReaderFormat[BarcodeReaderFormat["Codabar"] = 5] = "Codabar";
  BarcodeReaderFormat[BarcodeReaderFormat["DataMatrix"] = 6] = "DataMatrix";
  BarcodeReaderFormat[BarcodeReaderFormat["Ean13"] = 8] = "Ean13";
  BarcodeReaderFormat[BarcodeReaderFormat["Ean8"] = 9] = "Ean8";
  BarcodeReaderFormat[BarcodeReaderFormat["ITF"] = 10] = "ITF";
  BarcodeReaderFormat[BarcodeReaderFormat["Pdf417"] = 11] = "Pdf417";
  BarcodeReaderFormat[BarcodeReaderFormat["QrCode"] = 12] = "QrCode";
  BarcodeReaderFormat[BarcodeReaderFormat["UpcA"] = 13] = "UpcA";
  BarcodeReaderFormat[BarcodeReaderFormat["UpcE"] = 14] = "UpcE";
})(BarcodeReaderFormat || (BarcodeReaderFormat = {}));

var BarcodeReaderReg;

(function (BarcodeReaderReg) {
  BarcodeReaderReg[BarcodeReaderReg["Enabled"] = 1] = "Enabled";
  BarcodeReaderReg[BarcodeReaderReg["Formats"] = 384] = "Formats";
})(BarcodeReaderReg || (BarcodeReaderReg = {}));

var BarcodeReaderEvent; // Service: Barometer

(function (BarcodeReaderEvent) {
  BarcodeReaderEvent[BarcodeReaderEvent["Detect"] = 1] = "Detect";
})(BarcodeReaderEvent || (BarcodeReaderEvent = {}));

var SRV_BAROMETER = 0x1e117cea;
var BarometerReg; // Service: bit:radio

(function (BarometerReg) {
  BarometerReg[BarometerReg["Pressure"] = 257] = "Pressure";
  BarometerReg[BarometerReg["PressureError"] = 262] = "PressureError";
})(BarometerReg || (BarometerReg = {}));

var SRV_BIT_RADIO = 0x1ac986cf;
var BitRadioReg;

(function (BitRadioReg) {
  BitRadioReg[BitRadioReg["Enabled"] = 1] = "Enabled";
  BitRadioReg[BitRadioReg["Group"] = 128] = "Group";
  BitRadioReg[BitRadioReg["TransmissionPower"] = 129] = "TransmissionPower";
  BitRadioReg[BitRadioReg["FrequencyBand"] = 130] = "FrequencyBand";
})(BitRadioReg || (BitRadioReg = {}));

var BitRadioCmd; // Service: Bootloader

(function (BitRadioCmd) {
  BitRadioCmd[BitRadioCmd["SendString"] = 128] = "SendString";
  BitRadioCmd[BitRadioCmd["SendNumber"] = 129] = "SendNumber";
  BitRadioCmd[BitRadioCmd["SendValue"] = 130] = "SendValue";
  BitRadioCmd[BitRadioCmd["SendBuffer"] = 131] = "SendBuffer";
  BitRadioCmd[BitRadioCmd["StringReceived"] = 144] = "StringReceived";
  BitRadioCmd[BitRadioCmd["NumberReceived"] = 145] = "NumberReceived";
  BitRadioCmd[BitRadioCmd["BufferReceived"] = 146] = "BufferReceived";
})(BitRadioCmd || (BitRadioCmd = {}));

var SRV_BOOTLOADER = 0x1ffa9948;
var BootloaderError;

(function (BootloaderError) {
  BootloaderError[BootloaderError["NoError"] = 0] = "NoError";
  BootloaderError[BootloaderError["PacketTooSmall"] = 1] = "PacketTooSmall";
  BootloaderError[BootloaderError["OutOfFlashableRange"] = 2] = "OutOfFlashableRange";
  BootloaderError[BootloaderError["InvalidPageOffset"] = 3] = "InvalidPageOffset";
  BootloaderError[BootloaderError["NotPageAligned"] = 4] = "NotPageAligned";
})(BootloaderError || (BootloaderError = {}));

var BootloaderCmd; // Service: Braille display

(function (BootloaderCmd) {
  BootloaderCmd[BootloaderCmd["Info"] = 0] = "Info";
  BootloaderCmd[BootloaderCmd["SetSession"] = 129] = "SetSession";
  BootloaderCmd[BootloaderCmd["PageData"] = 128] = "PageData";
})(BootloaderCmd || (BootloaderCmd = {}));

var SRV_BRAILLE_DISPLAY = 0x13bfb7cc;
var BrailleDisplayReg; // Service: Button

(function (BrailleDisplayReg) {
  BrailleDisplayReg[BrailleDisplayReg["Enabled"] = 1] = "Enabled";
  BrailleDisplayReg[BrailleDisplayReg["Patterns"] = 2] = "Patterns";
  BrailleDisplayReg[BrailleDisplayReg["Length"] = 385] = "Length";
})(BrailleDisplayReg || (BrailleDisplayReg = {}));

var SRV_BUTTON = 0x1473a263;
var ButtonReg;

(function (ButtonReg) {
  ButtonReg[ButtonReg["Pressure"] = 257] = "Pressure";
  ButtonReg[ButtonReg["Analog"] = 384] = "Analog";
  ButtonReg[ButtonReg["Pressed"] = 385] = "Pressed";
})(ButtonReg || (ButtonReg = {}));

var ButtonEvent; // Service: Buzzer

(function (ButtonEvent) {
  ButtonEvent[ButtonEvent["Down"] = 1] = "Down";
  ButtonEvent[ButtonEvent["Up"] = 2] = "Up";
  ButtonEvent[ButtonEvent["Hold"] = 129] = "Hold";
})(ButtonEvent || (ButtonEvent = {}));

var SRV_BUZZER = 0x1b57b1d7;
var BuzzerReg;

(function (BuzzerReg) {
  BuzzerReg[BuzzerReg["Volume"] = 1] = "Volume";
})(BuzzerReg || (BuzzerReg = {}));

var BuzzerCmd; // Service: Capacitive Button

(function (BuzzerCmd) {
  BuzzerCmd[BuzzerCmd["PlayTone"] = 128] = "PlayTone";
  BuzzerCmd[BuzzerCmd["PlayNote"] = 129] = "PlayNote";
})(BuzzerCmd || (BuzzerCmd = {}));

var SRV_CAPACITIVE_BUTTON = 0x2865adc9;
var CapacitiveButtonReg;

(function (CapacitiveButtonReg) {
  CapacitiveButtonReg[CapacitiveButtonReg["Threshold"] = 6] = "Threshold";
})(CapacitiveButtonReg || (CapacitiveButtonReg = {}));

var CapacitiveButtonCmd; // Service: Character Screen

(function (CapacitiveButtonCmd) {
  CapacitiveButtonCmd[CapacitiveButtonCmd["Calibrate"] = 2] = "Calibrate";
})(CapacitiveButtonCmd || (CapacitiveButtonCmd = {}));

var SRV_CHARACTER_SCREEN = 0x1f37c56a;
var CharacterScreenVariant;

(function (CharacterScreenVariant) {
  CharacterScreenVariant[CharacterScreenVariant["LCD"] = 1] = "LCD";
  CharacterScreenVariant[CharacterScreenVariant["OLED"] = 2] = "OLED";
  CharacterScreenVariant[CharacterScreenVariant["Braille"] = 3] = "Braille";
})(CharacterScreenVariant || (CharacterScreenVariant = {}));

var CharacterScreenTextDirection;

(function (CharacterScreenTextDirection) {
  CharacterScreenTextDirection[CharacterScreenTextDirection["LeftToRight"] = 1] = "LeftToRight";
  CharacterScreenTextDirection[CharacterScreenTextDirection["RightToLeft"] = 2] = "RightToLeft";
})(CharacterScreenTextDirection || (CharacterScreenTextDirection = {}));

var CharacterScreenReg;

(function (CharacterScreenReg) {
  CharacterScreenReg[CharacterScreenReg["Message"] = 2] = "Message";
  CharacterScreenReg[CharacterScreenReg["Brightness"] = 1] = "Brightness";
  CharacterScreenReg[CharacterScreenReg["Variant"] = 263] = "Variant";
  CharacterScreenReg[CharacterScreenReg["TextDirection"] = 130] = "TextDirection";
  CharacterScreenReg[CharacterScreenReg["Rows"] = 384] = "Rows";
  CharacterScreenReg[CharacterScreenReg["Columns"] = 385] = "Columns";
})(CharacterScreenReg || (CharacterScreenReg = {}));

var CharacterScreenCmd; // Service: CODAL Message Bus

(function (CharacterScreenCmd) {
  CharacterScreenCmd[CharacterScreenCmd["SetLine"] = 128] = "SetLine";
  CharacterScreenCmd[CharacterScreenCmd["Clear"] = 129] = "Clear";
})(CharacterScreenCmd || (CharacterScreenCmd = {}));

var SRV_CODAL_MESSAGE_BUS = 0x121ff81d;
var CodalMessageBusCmd;

(function (CodalMessageBusCmd) {
  CodalMessageBusCmd[CodalMessageBusCmd["Send"] = 128] = "Send";
})(CodalMessageBusCmd || (CodalMessageBusCmd = {}));

var CodalMessageBusEvent; // Service: Color

(function (CodalMessageBusEvent) {
  CodalMessageBusEvent[CodalMessageBusEvent["Message"] = 128] = "Message";
})(CodalMessageBusEvent || (CodalMessageBusEvent = {}));

var SRV_COLOR = 0x1630d567;
var ColorReg; // Service: Compass

(function (ColorReg) {
  ColorReg[ColorReg["Color"] = 257] = "Color";
})(ColorReg || (ColorReg = {}));

var SRV_COMPASS = 0x15b7b9bf;
var CompassReg;

(function (CompassReg) {
  CompassReg[CompassReg["Heading"] = 257] = "Heading";
  CompassReg[CompassReg["Enabled"] = 1] = "Enabled";
  CompassReg[CompassReg["HeadingError"] = 262] = "HeadingError";
})(CompassReg || (CompassReg = {}));

var CompassCmd; // Service: Control

(function (CompassCmd) {
  CompassCmd[CompassCmd["Calibrate"] = 2] = "Calibrate";
})(CompassCmd || (CompassCmd = {}));

var SRV_CONTROL = 0x0;
var ControlAnnounceFlags;

(function (ControlAnnounceFlags) {
  ControlAnnounceFlags[ControlAnnounceFlags["RestartCounterSteady"] = 15] = "RestartCounterSteady";
  ControlAnnounceFlags[ControlAnnounceFlags["RestartCounter1"] = 1] = "RestartCounter1";
  ControlAnnounceFlags[ControlAnnounceFlags["RestartCounter2"] = 2] = "RestartCounter2";
  ControlAnnounceFlags[ControlAnnounceFlags["RestartCounter4"] = 4] = "RestartCounter4";
  ControlAnnounceFlags[ControlAnnounceFlags["RestartCounter8"] = 8] = "RestartCounter8";
  ControlAnnounceFlags[ControlAnnounceFlags["StatusLightNone"] = 0] = "StatusLightNone";
  ControlAnnounceFlags[ControlAnnounceFlags["StatusLightMono"] = 16] = "StatusLightMono";
  ControlAnnounceFlags[ControlAnnounceFlags["StatusLightRgbNoFade"] = 32] = "StatusLightRgbNoFade";
  ControlAnnounceFlags[ControlAnnounceFlags["StatusLightRgbFade"] = 48] = "StatusLightRgbFade";
  ControlAnnounceFlags[ControlAnnounceFlags["SupportsACK"] = 256] = "SupportsACK";
  ControlAnnounceFlags[ControlAnnounceFlags["SupportsBroadcast"] = 512] = "SupportsBroadcast";
  ControlAnnounceFlags[ControlAnnounceFlags["SupportsFrames"] = 1024] = "SupportsFrames";
  ControlAnnounceFlags[ControlAnnounceFlags["IsClient"] = 2048] = "IsClient";
  ControlAnnounceFlags[ControlAnnounceFlags["SupportsReliableCommands"] = 4096] = "SupportsReliableCommands";
})(ControlAnnounceFlags || (ControlAnnounceFlags = {}));

var ControlCmd;
/**
 * pipe_command WrappedCommand
 * ```
 * const [serviceSize, serviceIndex, serviceCommand, payload] = jdunpack<[number, number, number, Uint8Array]>(buf, "u8 u8 u16 b")
 * ```
 */

(function (ControlCmd) {
  ControlCmd[ControlCmd["Services"] = 0] = "Services";
  ControlCmd[ControlCmd["Noop"] = 128] = "Noop";
  ControlCmd[ControlCmd["Identify"] = 129] = "Identify";
  ControlCmd[ControlCmd["Reset"] = 130] = "Reset";
  ControlCmd[ControlCmd["FloodPing"] = 131] = "FloodPing";
  ControlCmd[ControlCmd["SetStatusLight"] = 132] = "SetStatusLight";
  ControlCmd[ControlCmd["Proxy"] = 133] = "Proxy";
  ControlCmd[ControlCmd["ReliableCommands"] = 134] = "ReliableCommands";
})(ControlCmd || (ControlCmd = {}));

var ControlReg; // Service: Dashboard

(function (ControlReg) {
  ControlReg[ControlReg["ResetIn"] = 128] = "ResetIn";
  ControlReg[ControlReg["DeviceDescription"] = 384] = "DeviceDescription";
  ControlReg[ControlReg["ProductIdentifier"] = 385] = "ProductIdentifier";
  ControlReg[ControlReg["BootloaderProductIdentifier"] = 388] = "BootloaderProductIdentifier";
  ControlReg[ControlReg["FirmwareVersion"] = 389] = "FirmwareVersion";
  ControlReg[ControlReg["McuTemperature"] = 386] = "McuTemperature";
  ControlReg[ControlReg["Uptime"] = 390] = "Uptime";
})(ControlReg || (ControlReg = {}));

var SRV_DASHBOARD = 0x1be59107; // Service: Dimmer

var SRV_DIMMER = 0x1fb02645;
var DimmerVariant;

(function (DimmerVariant) {
  DimmerVariant[DimmerVariant["Light"] = 1] = "Light";
  DimmerVariant[DimmerVariant["Fan"] = 2] = "Fan";
  DimmerVariant[DimmerVariant["Pump"] = 3] = "Pump";
})(DimmerVariant || (DimmerVariant = {}));

var DimmerReg; // Service: Distance

(function (DimmerReg) {
  DimmerReg[DimmerReg["Intensity"] = 1] = "Intensity";
  DimmerReg[DimmerReg["Variant"] = 263] = "Variant";
})(DimmerReg || (DimmerReg = {}));

var SRV_DISTANCE = 0x141a6b8a;
var DistanceVariant;

(function (DistanceVariant) {
  DistanceVariant[DistanceVariant["Ultrasonic"] = 1] = "Ultrasonic";
  DistanceVariant[DistanceVariant["Infrared"] = 2] = "Infrared";
  DistanceVariant[DistanceVariant["LiDAR"] = 3] = "LiDAR";
  DistanceVariant[DistanceVariant["Laser"] = 4] = "Laser";
})(DistanceVariant || (DistanceVariant = {}));

var DistanceReg; // Service: DMX

(function (DistanceReg) {
  DistanceReg[DistanceReg["Distance"] = 257] = "Distance";
  DistanceReg[DistanceReg["MinRange"] = 260] = "MinRange";
  DistanceReg[DistanceReg["MaxRange"] = 261] = "MaxRange";
  DistanceReg[DistanceReg["Variant"] = 263] = "Variant";
})(DistanceReg || (DistanceReg = {}));

var SRV_DMX = 0x11cf8c05;
var DmxReg;

(function (DmxReg) {
  DmxReg[DmxReg["Enabled"] = 1] = "Enabled";
})(DmxReg || (DmxReg = {}));

var DmxCmd; // Service: Dot Matrix

(function (DmxCmd) {
  DmxCmd[DmxCmd["Send"] = 128] = "Send";
})(DmxCmd || (DmxCmd = {}));

var SRV_DOT_MATRIX = 0x110d154b;
var DotMatrixVariant;

(function (DotMatrixVariant) {
  DotMatrixVariant[DotMatrixVariant["LED"] = 1] = "LED";
  DotMatrixVariant[DotMatrixVariant["Braille"] = 2] = "Braille";
})(DotMatrixVariant || (DotMatrixVariant = {}));

var DotMatrixReg; // Service: Equivalent CO₂

(function (DotMatrixReg) {
  DotMatrixReg[DotMatrixReg["Dots"] = 2] = "Dots";
  DotMatrixReg[DotMatrixReg["Brightness"] = 1] = "Brightness";
  DotMatrixReg[DotMatrixReg["Rows"] = 385] = "Rows";
  DotMatrixReg[DotMatrixReg["Columns"] = 386] = "Columns";
  DotMatrixReg[DotMatrixReg["Variant"] = 263] = "Variant";
})(DotMatrixReg || (DotMatrixReg = {}));

var SRV_E_CO2 = 0x169c9dc6;
var ECO2Variant;

(function (ECO2Variant) {
  ECO2Variant[ECO2Variant["VOC"] = 1] = "VOC";
  ECO2Variant[ECO2Variant["NDIR"] = 2] = "NDIR";
})(ECO2Variant || (ECO2Variant = {}));

var ECO2Reg; // Service: Flex

(function (ECO2Reg) {
  ECO2Reg[ECO2Reg["ECO2"] = 257] = "ECO2";
  ECO2Reg[ECO2Reg["ECO2Error"] = 262] = "ECO2Error";
  ECO2Reg[ECO2Reg["MinECO2"] = 260] = "MinECO2";
  ECO2Reg[ECO2Reg["MaxECO2"] = 261] = "MaxECO2";
  ECO2Reg[ECO2Reg["ConditioningPeriod"] = 384] = "ConditioningPeriod";
  ECO2Reg[ECO2Reg["Variant"] = 263] = "Variant";
})(ECO2Reg || (ECO2Reg = {}));

var SRV_FLEX = 0x1f47c6c6;
var FlexVariant;

(function (FlexVariant) {
  FlexVariant[FlexVariant["Linear22Inch"] = 1] = "Linear22Inch";
  FlexVariant[FlexVariant["Linear45Inch"] = 2] = "Linear45Inch";
})(FlexVariant || (FlexVariant = {}));

var FlexReg; // Service: Gyroscope

(function (FlexReg) {
  FlexReg[FlexReg["Bending"] = 257] = "Bending";
  FlexReg[FlexReg["Variant"] = 263] = "Variant";
})(FlexReg || (FlexReg = {}));

var SRV_GYROSCOPE = 0x1e1b06f2;
var GyroscopeReg; // Service: Heart Rate

(function (GyroscopeReg) {
  GyroscopeReg[GyroscopeReg["RotationRates"] = 257] = "RotationRates";
  GyroscopeReg[GyroscopeReg["RotationRatesError"] = 262] = "RotationRatesError";
  GyroscopeReg[GyroscopeReg["MaxRate"] = 8] = "MaxRate";
  GyroscopeReg[GyroscopeReg["MaxRatesSupported"] = 266] = "MaxRatesSupported";
})(GyroscopeReg || (GyroscopeReg = {}));

var SRV_HEART_RATE = 0x166c6dc4;
var HeartRateVariant;

(function (HeartRateVariant) {
  HeartRateVariant[HeartRateVariant["Finger"] = 1] = "Finger";
  HeartRateVariant[HeartRateVariant["Chest"] = 2] = "Chest";
  HeartRateVariant[HeartRateVariant["Wrist"] = 3] = "Wrist";
  HeartRateVariant[HeartRateVariant["Pump"] = 4] = "Pump";
  HeartRateVariant[HeartRateVariant["WebCam"] = 5] = "WebCam";
})(HeartRateVariant || (HeartRateVariant = {}));

var HeartRateReg; // Service: HID Adapter

(function (HeartRateReg) {
  HeartRateReg[HeartRateReg["HeartRate"] = 257] = "HeartRate";
  HeartRateReg[HeartRateReg["HeartRateError"] = 262] = "HeartRateError";
  HeartRateReg[HeartRateReg["Variant"] = 263] = "Variant";
})(HeartRateReg || (HeartRateReg = {}));

var SRV_HID_ADAPTER = 0x1e5758b5;
var HidAdapterReg;

(function (HidAdapterReg) {
  HidAdapterReg[HidAdapterReg["NumConfigurations"] = 128] = "NumConfigurations";
  HidAdapterReg[HidAdapterReg["CurrentConfiguration"] = 129] = "CurrentConfiguration";
})(HidAdapterReg || (HidAdapterReg = {}));

var HidAdapterCmd;
/**
 * pipe_report Configuration
 * ```
 * const [configurationNumber, bindingIndex, deviceId, serviceClass, triggerValue, triggerContext, serviceIndex, selector, modifiers] = jdunpack<[number, number, number, number, number, number, number, number, number]>(buf, "u8 u8 x[2] u64 u32 u32 u8 u8 u16 u16")
 * ```
 */

(function (HidAdapterCmd) {
  HidAdapterCmd[HidAdapterCmd["GetConfiguration"] = 128] = "GetConfiguration";
  HidAdapterCmd[HidAdapterCmd["SetBinding"] = 130] = "SetBinding";
  HidAdapterCmd[HidAdapterCmd["ClearBinding"] = 131] = "ClearBinding";
  HidAdapterCmd[HidAdapterCmd["ClearConfiguration"] = 132] = "ClearConfiguration";
  HidAdapterCmd[HidAdapterCmd["Clear"] = 133] = "Clear";
})(HidAdapterCmd || (HidAdapterCmd = {}));

var HidAdapterEvent; // Service: HID Keyboard

(function (HidAdapterEvent) {
  HidAdapterEvent[HidAdapterEvent["Changed"] = 3] = "Changed";
})(HidAdapterEvent || (HidAdapterEvent = {}));

var SRV_HID_KEYBOARD = 0x18b05b6a;
var HidKeyboardModifiers;

(function (HidKeyboardModifiers) {
  HidKeyboardModifiers[HidKeyboardModifiers["None"] = 0] = "None";
  HidKeyboardModifiers[HidKeyboardModifiers["LeftControl"] = 1] = "LeftControl";
  HidKeyboardModifiers[HidKeyboardModifiers["LeftShift"] = 2] = "LeftShift";
  HidKeyboardModifiers[HidKeyboardModifiers["LeftAlt"] = 4] = "LeftAlt";
  HidKeyboardModifiers[HidKeyboardModifiers["LeftGUI"] = 8] = "LeftGUI";
  HidKeyboardModifiers[HidKeyboardModifiers["RightControl"] = 16] = "RightControl";
  HidKeyboardModifiers[HidKeyboardModifiers["RightShift"] = 32] = "RightShift";
  HidKeyboardModifiers[HidKeyboardModifiers["RightAlt"] = 64] = "RightAlt";
  HidKeyboardModifiers[HidKeyboardModifiers["RightGUI"] = 128] = "RightGUI";
})(HidKeyboardModifiers || (HidKeyboardModifiers = {}));

var HidKeyboardAction;

(function (HidKeyboardAction) {
  HidKeyboardAction[HidKeyboardAction["Press"] = 0] = "Press";
  HidKeyboardAction[HidKeyboardAction["Up"] = 1] = "Up";
  HidKeyboardAction[HidKeyboardAction["Down"] = 2] = "Down";
})(HidKeyboardAction || (HidKeyboardAction = {}));

var HidKeyboardCmd; // Service: HID Mouse

(function (HidKeyboardCmd) {
  HidKeyboardCmd[HidKeyboardCmd["Key"] = 128] = "Key";
  HidKeyboardCmd[HidKeyboardCmd["Clear"] = 129] = "Clear";
})(HidKeyboardCmd || (HidKeyboardCmd = {}));

var SRV_HID_MOUSE = 0x1885dc1c;
var HidMouseButton;

(function (HidMouseButton) {
  HidMouseButton[HidMouseButton["Left"] = 1] = "Left";
  HidMouseButton[HidMouseButton["Right"] = 2] = "Right";
  HidMouseButton[HidMouseButton["Middle"] = 4] = "Middle";
})(HidMouseButton || (HidMouseButton = {}));

var HidMouseButtonEvent;

(function (HidMouseButtonEvent) {
  HidMouseButtonEvent[HidMouseButtonEvent["Up"] = 1] = "Up";
  HidMouseButtonEvent[HidMouseButtonEvent["Down"] = 2] = "Down";
  HidMouseButtonEvent[HidMouseButtonEvent["Click"] = 3] = "Click";
  HidMouseButtonEvent[HidMouseButtonEvent["DoubleClick"] = 4] = "DoubleClick";
})(HidMouseButtonEvent || (HidMouseButtonEvent = {}));

var HidMouseCmd; // Service: Humidity

(function (HidMouseCmd) {
  HidMouseCmd[HidMouseCmd["SetButton"] = 128] = "SetButton";
  HidMouseCmd[HidMouseCmd["Move"] = 129] = "Move";
  HidMouseCmd[HidMouseCmd["Wheel"] = 130] = "Wheel";
})(HidMouseCmd || (HidMouseCmd = {}));

var SRV_HUMIDITY = 0x16c810b8;
var HumidityReg; // Service: Illuminance

(function (HumidityReg) {
  HumidityReg[HumidityReg["Humidity"] = 257] = "Humidity";
  HumidityReg[HumidityReg["HumidityError"] = 262] = "HumidityError";
  HumidityReg[HumidityReg["MinHumidity"] = 260] = "MinHumidity";
  HumidityReg[HumidityReg["MaxHumidity"] = 261] = "MaxHumidity";
})(HumidityReg || (HumidityReg = {}));

var SRV_ILLUMINANCE = 0x1e6ecaf2;
var IlluminanceReg; // Service: Indexed screen

(function (IlluminanceReg) {
  IlluminanceReg[IlluminanceReg["Light"] = 257] = "Light";
  IlluminanceReg[IlluminanceReg["LightError"] = 262] = "LightError";
})(IlluminanceReg || (IlluminanceReg = {}));

var SRV_INDEXED_SCREEN = 0x16fa36e5;
var IndexedScreenCmd;

(function (IndexedScreenCmd) {
  IndexedScreenCmd[IndexedScreenCmd["StartUpdate"] = 129] = "StartUpdate";
  IndexedScreenCmd[IndexedScreenCmd["SetPixels"] = 131] = "SetPixels";
})(IndexedScreenCmd || (IndexedScreenCmd = {}));

var IndexedScreenReg; // Service: Infrastructure

(function (IndexedScreenReg) {
  IndexedScreenReg[IndexedScreenReg["Brightness"] = 1] = "Brightness";
  IndexedScreenReg[IndexedScreenReg["Palette"] = 128] = "Palette";
  IndexedScreenReg[IndexedScreenReg["BitsPerPixel"] = 384] = "BitsPerPixel";
  IndexedScreenReg[IndexedScreenReg["Width"] = 385] = "Width";
  IndexedScreenReg[IndexedScreenReg["Height"] = 386] = "Height";
  IndexedScreenReg[IndexedScreenReg["WidthMajor"] = 129] = "WidthMajor";
  IndexedScreenReg[IndexedScreenReg["UpSampling"] = 130] = "UpSampling";
  IndexedScreenReg[IndexedScreenReg["Rotation"] = 131] = "Rotation";
})(IndexedScreenReg || (IndexedScreenReg = {}));

var SRV_INFRASTRUCTURE = 0x1e1589eb; // Service: Joystick

var SRV_JOYSTICK = 0x108f7456;
var JoystickButtons;

(function (JoystickButtons) {
  JoystickButtons[JoystickButtons["Left"] = 1] = "Left";
  JoystickButtons[JoystickButtons["Up"] = 2] = "Up";
  JoystickButtons[JoystickButtons["Right"] = 4] = "Right";
  JoystickButtons[JoystickButtons["Down"] = 8] = "Down";
  JoystickButtons[JoystickButtons["A"] = 16] = "A";
  JoystickButtons[JoystickButtons["B"] = 32] = "B";
  JoystickButtons[JoystickButtons["Menu"] = 64] = "Menu";
  JoystickButtons[JoystickButtons["Select"] = 128] = "Select";
  JoystickButtons[JoystickButtons["Reset"] = 256] = "Reset";
  JoystickButtons[JoystickButtons["Exit"] = 512] = "Exit";
  JoystickButtons[JoystickButtons["X"] = 1024] = "X";
  JoystickButtons[JoystickButtons["Y"] = 2048] = "Y";
})(JoystickButtons || (JoystickButtons = {}));

var JoystickVariant;

(function (JoystickVariant) {
  JoystickVariant[JoystickVariant["Thumb"] = 1] = "Thumb";
  JoystickVariant[JoystickVariant["ArcadeBall"] = 2] = "ArcadeBall";
  JoystickVariant[JoystickVariant["ArcadeStick"] = 3] = "ArcadeStick";
  JoystickVariant[JoystickVariant["Gamepad"] = 4] = "Gamepad";
})(JoystickVariant || (JoystickVariant = {}));

var JoystickReg;

(function (JoystickReg) {
  JoystickReg[JoystickReg["Direction"] = 257] = "Direction";
  JoystickReg[JoystickReg["Variant"] = 263] = "Variant";
  JoystickReg[JoystickReg["ButtonsAvailable"] = 384] = "ButtonsAvailable";
})(JoystickReg || (JoystickReg = {}));

var JoystickEvent; // Service: LED

(function (JoystickEvent) {
  JoystickEvent[JoystickEvent["ButtonsChanged"] = 3] = "ButtonsChanged";
})(JoystickEvent || (JoystickEvent = {}));

var SRV_LED = 0x1e3048f8;
var LedVariant;

(function (LedVariant) {
  LedVariant[LedVariant["ThroughHole"] = 1] = "ThroughHole";
  LedVariant[LedVariant["SMD"] = 2] = "SMD";
  LedVariant[LedVariant["Power"] = 3] = "Power";
  LedVariant[LedVariant["Bead"] = 4] = "Bead";
})(LedVariant || (LedVariant = {}));

var LedCmd;

(function (LedCmd) {
  LedCmd[LedCmd["Animate"] = 128] = "Animate";
})(LedCmd || (LedCmd = {}));

var LedReg; // Service: LED Pixel

(function (LedReg) {
  LedReg[LedReg["Color"] = 384] = "Color";
  LedReg[LedReg["MaxPower"] = 7] = "MaxPower";
  LedReg[LedReg["LedCount"] = 387] = "LedCount";
  LedReg[LedReg["WaveLength"] = 385] = "WaveLength";
  LedReg[LedReg["LuminousIntensity"] = 386] = "LuminousIntensity";
  LedReg[LedReg["Variant"] = 263] = "Variant";
})(LedReg || (LedReg = {}));

var SRV_LED_PIXEL = 0x126f00e0;
var LedPixelLightType;

(function (LedPixelLightType) {
  LedPixelLightType[LedPixelLightType["WS2812B_GRB"] = 0] = "WS2812B_GRB";
  LedPixelLightType[LedPixelLightType["APA102"] = 16] = "APA102";
  LedPixelLightType[LedPixelLightType["SK9822"] = 17] = "SK9822";
})(LedPixelLightType || (LedPixelLightType = {}));

var LedPixelVariant;

(function (LedPixelVariant) {
  LedPixelVariant[LedPixelVariant["Strip"] = 1] = "Strip";
  LedPixelVariant[LedPixelVariant["Ring"] = 2] = "Ring";
  LedPixelVariant[LedPixelVariant["Stick"] = 3] = "Stick";
  LedPixelVariant[LedPixelVariant["Jewel"] = 4] = "Jewel";
  LedPixelVariant[LedPixelVariant["Matrix"] = 5] = "Matrix";
})(LedPixelVariant || (LedPixelVariant = {}));

var LedPixelReg;

(function (LedPixelReg) {
  LedPixelReg[LedPixelReg["Brightness"] = 1] = "Brightness";
  LedPixelReg[LedPixelReg["ActualBrightness"] = 384] = "ActualBrightness";
  LedPixelReg[LedPixelReg["LightType"] = 128] = "LightType";
  LedPixelReg[LedPixelReg["NumPixels"] = 129] = "NumPixels";
  LedPixelReg[LedPixelReg["NumColumns"] = 131] = "NumColumns";
  LedPixelReg[LedPixelReg["MaxPower"] = 7] = "MaxPower";
  LedPixelReg[LedPixelReg["MaxPixels"] = 385] = "MaxPixels";
  LedPixelReg[LedPixelReg["NumRepeats"] = 130] = "NumRepeats";
  LedPixelReg[LedPixelReg["Variant"] = 263] = "Variant";
})(LedPixelReg || (LedPixelReg = {}));

var LedPixelCmd; // Service: Light bulb

(function (LedPixelCmd) {
  LedPixelCmd[LedPixelCmd["Run"] = 129] = "Run";
})(LedPixelCmd || (LedPixelCmd = {}));

var SRV_LIGHT_BULB = 0x1cab054c;
var LightBulbReg;

(function (LightBulbReg) {
  LightBulbReg[LightBulbReg["Brightness"] = 1] = "Brightness";
  LightBulbReg[LightBulbReg["Dimmeable"] = 384] = "Dimmeable";
})(LightBulbReg || (LightBulbReg = {}));

var LightBulbEvent; // Service: Light level

(function (LightBulbEvent) {
  LightBulbEvent[LightBulbEvent["On"] = 1] = "On";
  LightBulbEvent[LightBulbEvent["Off"] = 2] = "Off";
})(LightBulbEvent || (LightBulbEvent = {}));

var SRV_LIGHT_LEVEL = 0x17dc9a1c;
var LightLevelVariant;

(function (LightLevelVariant) {
  LightLevelVariant[LightLevelVariant["PhotoResistor"] = 1] = "PhotoResistor";
  LightLevelVariant[LightLevelVariant["LEDMatrix"] = 2] = "LEDMatrix";
  LightLevelVariant[LightLevelVariant["Ambient"] = 3] = "Ambient";
})(LightLevelVariant || (LightLevelVariant = {}));

var LightLevelReg; // Service: Logger

(function (LightLevelReg) {
  LightLevelReg[LightLevelReg["LightLevel"] = 257] = "LightLevel";
  LightLevelReg[LightLevelReg["Variant"] = 263] = "Variant";
})(LightLevelReg || (LightLevelReg = {}));

var SRV_LOGGER = 0x12dc1fca;
var LoggerPriority;

(function (LoggerPriority) {
  LoggerPriority[LoggerPriority["Debug"] = 0] = "Debug";
  LoggerPriority[LoggerPriority["Log"] = 1] = "Log";
  LoggerPriority[LoggerPriority["Warning"] = 2] = "Warning";
  LoggerPriority[LoggerPriority["Error"] = 3] = "Error";
  LoggerPriority[LoggerPriority["Silent"] = 4] = "Silent";
})(LoggerPriority || (LoggerPriority = {}));

var LoggerReg;

(function (LoggerReg) {
  LoggerReg[LoggerReg["MinPriority"] = 128] = "MinPriority";
})(LoggerReg || (LoggerReg = {}));

var LoggerCmd; // Service: Magnetometer

(function (LoggerCmd) {
  LoggerCmd[LoggerCmd["Debug"] = 128] = "Debug";
  LoggerCmd[LoggerCmd["Log"] = 129] = "Log";
  LoggerCmd[LoggerCmd["Warn"] = 130] = "Warn";
  LoggerCmd[LoggerCmd["Error"] = 131] = "Error";
})(LoggerCmd || (LoggerCmd = {}));

var SRV_MAGNETOMETER = 0x13029088;
var MagnetometerReg;

(function (MagnetometerReg) {
  MagnetometerReg[MagnetometerReg["Forces"] = 257] = "Forces";
  MagnetometerReg[MagnetometerReg["ForcesError"] = 262] = "ForcesError";
})(MagnetometerReg || (MagnetometerReg = {}));

var MagnetometerCmd; // Service: Matrix Keypad

(function (MagnetometerCmd) {
  MagnetometerCmd[MagnetometerCmd["Calibrate"] = 2] = "Calibrate";
})(MagnetometerCmd || (MagnetometerCmd = {}));

var SRV_MATRIX_KEYPAD = 0x13062dc8;
var MatrixKeypadVariant;

(function (MatrixKeypadVariant) {
  MatrixKeypadVariant[MatrixKeypadVariant["Membrane"] = 1] = "Membrane";
  MatrixKeypadVariant[MatrixKeypadVariant["Keyboard"] = 2] = "Keyboard";
  MatrixKeypadVariant[MatrixKeypadVariant["Elastomer"] = 3] = "Elastomer";
  MatrixKeypadVariant[MatrixKeypadVariant["ElastomerLEDPixel"] = 4] = "ElastomerLEDPixel";
})(MatrixKeypadVariant || (MatrixKeypadVariant = {}));

var MatrixKeypadReg;

(function (MatrixKeypadReg) {
  MatrixKeypadReg[MatrixKeypadReg["Pressed"] = 257] = "Pressed";
  MatrixKeypadReg[MatrixKeypadReg["Rows"] = 384] = "Rows";
  MatrixKeypadReg[MatrixKeypadReg["Columns"] = 385] = "Columns";
  MatrixKeypadReg[MatrixKeypadReg["Labels"] = 386] = "Labels";
  MatrixKeypadReg[MatrixKeypadReg["Variant"] = 263] = "Variant";
})(MatrixKeypadReg || (MatrixKeypadReg = {}));

var MatrixKeypadEvent; // Service: Microphone

(function (MatrixKeypadEvent) {
  MatrixKeypadEvent[MatrixKeypadEvent["Down"] = 1] = "Down";
  MatrixKeypadEvent[MatrixKeypadEvent["Up"] = 2] = "Up";
  MatrixKeypadEvent[MatrixKeypadEvent["Click"] = 128] = "Click";
  MatrixKeypadEvent[MatrixKeypadEvent["LongClick"] = 129] = "LongClick";
})(MatrixKeypadEvent || (MatrixKeypadEvent = {}));

var SRV_MICROPHONE = 0x113dac86;
var MicrophoneCmd;

(function (MicrophoneCmd) {
  MicrophoneCmd[MicrophoneCmd["Sample"] = 129] = "Sample";
})(MicrophoneCmd || (MicrophoneCmd = {}));

var MicrophoneReg; // Service: MIDI output

(function (MicrophoneReg) {
  MicrophoneReg[MicrophoneReg["SamplingPeriod"] = 128] = "SamplingPeriod";
})(MicrophoneReg || (MicrophoneReg = {}));

var SRV_MIDI_OUTPUT = 0x1a848cd7;
var MidiOutputReg;

(function (MidiOutputReg) {
  MidiOutputReg[MidiOutputReg["Enabled"] = 1] = "Enabled";
})(MidiOutputReg || (MidiOutputReg = {}));

var MidiOutputCmd; // Service: Model Runner

(function (MidiOutputCmd) {
  MidiOutputCmd[MidiOutputCmd["Clear"] = 128] = "Clear";
  MidiOutputCmd[MidiOutputCmd["Send"] = 129] = "Send";
})(MidiOutputCmd || (MidiOutputCmd = {}));

var SRV_MODEL_RUNNER = 0x140f9a78;
var ModelRunnerModelFormat;

(function (ModelRunnerModelFormat) {
  ModelRunnerModelFormat[ModelRunnerModelFormat["TFLite"] = 860636756] = "TFLite";
  ModelRunnerModelFormat[ModelRunnerModelFormat["ML4F"] = 809963362] = "ML4F";
  ModelRunnerModelFormat[ModelRunnerModelFormat["EdgeImpulseCompiled"] = 810961221] = "EdgeImpulseCompiled";
})(ModelRunnerModelFormat || (ModelRunnerModelFormat = {}));

var ModelRunnerCmd;

(function (ModelRunnerCmd) {
  ModelRunnerCmd[ModelRunnerCmd["SetModel"] = 128] = "SetModel";
  ModelRunnerCmd[ModelRunnerCmd["Predict"] = 129] = "Predict";
})(ModelRunnerCmd || (ModelRunnerCmd = {}));

var ModelRunnerReg; // Service: Motion

(function (ModelRunnerReg) {
  ModelRunnerReg[ModelRunnerReg["AutoInvokeEvery"] = 128] = "AutoInvokeEvery";
  ModelRunnerReg[ModelRunnerReg["Outputs"] = 257] = "Outputs";
  ModelRunnerReg[ModelRunnerReg["InputShape"] = 384] = "InputShape";
  ModelRunnerReg[ModelRunnerReg["OutputShape"] = 385] = "OutputShape";
  ModelRunnerReg[ModelRunnerReg["LastRunTime"] = 386] = "LastRunTime";
  ModelRunnerReg[ModelRunnerReg["AllocatedArenaSize"] = 387] = "AllocatedArenaSize";
  ModelRunnerReg[ModelRunnerReg["ModelSize"] = 388] = "ModelSize";
  ModelRunnerReg[ModelRunnerReg["LastError"] = 389] = "LastError";
  ModelRunnerReg[ModelRunnerReg["Format"] = 390] = "Format";
  ModelRunnerReg[ModelRunnerReg["FormatVersion"] = 391] = "FormatVersion";
  ModelRunnerReg[ModelRunnerReg["Parallel"] = 392] = "Parallel";
})(ModelRunnerReg || (ModelRunnerReg = {}));

var SRV_MOTION = 0x1179a749;
var MotionVariant;

(function (MotionVariant) {
  MotionVariant[MotionVariant["PIR"] = 1] = "PIR";
})(MotionVariant || (MotionVariant = {}));

var MotionReg;

(function (MotionReg) {
  MotionReg[MotionReg["Moving"] = 257] = "Moving";
  MotionReg[MotionReg["MaxDistance"] = 384] = "MaxDistance";
  MotionReg[MotionReg["Angle"] = 385] = "Angle";
  MotionReg[MotionReg["Variant"] = 263] = "Variant";
})(MotionReg || (MotionReg = {}));

var MotionEvent; // Service: Motor

(function (MotionEvent) {
  MotionEvent[MotionEvent["Movement"] = 1] = "Movement";
})(MotionEvent || (MotionEvent = {}));

var SRV_MOTOR = 0x17004cd8;
var MotorReg; // Service: Multitouch

(function (MotorReg) {
  MotorReg[MotorReg["Duty"] = 2] = "Duty";
  MotorReg[MotorReg["Enabled"] = 1] = "Enabled";
  MotorReg[MotorReg["LoadTorque"] = 384] = "LoadTorque";
  MotorReg[MotorReg["LoadSpeed"] = 385] = "LoadSpeed";
})(MotorReg || (MotorReg = {}));

var SRV_MULTITOUCH = 0x18d55e2b;
var MultitouchReg;

(function (MultitouchReg) {
  MultitouchReg[MultitouchReg["Capacity"] = 257] = "Capacity";
})(MultitouchReg || (MultitouchReg = {}));

var MultitouchEvent; // Service: Potentiometer

(function (MultitouchEvent) {
  MultitouchEvent[MultitouchEvent["Touch"] = 1] = "Touch";
  MultitouchEvent[MultitouchEvent["Release"] = 2] = "Release";
  MultitouchEvent[MultitouchEvent["Tap"] = 128] = "Tap";
  MultitouchEvent[MultitouchEvent["LongPress"] = 129] = "LongPress";
  MultitouchEvent[MultitouchEvent["SwipePos"] = 144] = "SwipePos";
  MultitouchEvent[MultitouchEvent["SwipeNeg"] = 145] = "SwipeNeg";
})(MultitouchEvent || (MultitouchEvent = {}));

var SRV_POTENTIOMETER = 0x1f274746;
var PotentiometerVariant;

(function (PotentiometerVariant) {
  PotentiometerVariant[PotentiometerVariant["Slider"] = 1] = "Slider";
  PotentiometerVariant[PotentiometerVariant["Rotary"] = 2] = "Rotary";
})(PotentiometerVariant || (PotentiometerVariant = {}));

var PotentiometerReg; // Service: Power

(function (PotentiometerReg) {
  PotentiometerReg[PotentiometerReg["Position"] = 257] = "Position";
  PotentiometerReg[PotentiometerReg["Variant"] = 263] = "Variant";
})(PotentiometerReg || (PotentiometerReg = {}));

var SRV_POWER = 0x1fa4c95a;
var PowerPowerStatus;

(function (PowerPowerStatus) {
  PowerPowerStatus[PowerPowerStatus["Disallowed"] = 0] = "Disallowed";
  PowerPowerStatus[PowerPowerStatus["Powering"] = 1] = "Powering";
  PowerPowerStatus[PowerPowerStatus["Overload"] = 2] = "Overload";
  PowerPowerStatus[PowerPowerStatus["Overprovision"] = 3] = "Overprovision";
})(PowerPowerStatus || (PowerPowerStatus = {}));

var PowerReg;

(function (PowerReg) {
  PowerReg[PowerReg["Allowed"] = 1] = "Allowed";
  PowerReg[PowerReg["MaxPower"] = 7] = "MaxPower";
  PowerReg[PowerReg["PowerStatus"] = 385] = "PowerStatus";
  PowerReg[PowerReg["CurrentDraw"] = 257] = "CurrentDraw";
  PowerReg[PowerReg["BatteryVoltage"] = 384] = "BatteryVoltage";
  PowerReg[PowerReg["BatteryCharge"] = 386] = "BatteryCharge";
  PowerReg[PowerReg["BatteryCapacity"] = 387] = "BatteryCapacity";
  PowerReg[PowerReg["KeepOnPulseDuration"] = 128] = "KeepOnPulseDuration";
  PowerReg[PowerReg["KeepOnPulsePeriod"] = 129] = "KeepOnPulsePeriod";
})(PowerReg || (PowerReg = {}));

var PowerCmd;

(function (PowerCmd) {
  PowerCmd[PowerCmd["Shutdown"] = 128] = "Shutdown";
})(PowerCmd || (PowerCmd = {}));

var PowerEvent; // Service: Pressure Button

(function (PowerEvent) {
  PowerEvent[PowerEvent["PowerStatusChanged"] = 3] = "PowerStatusChanged";
})(PowerEvent || (PowerEvent = {}));

var SRV_PRESSURE_BUTTON = 0x281740c3;
var PressureButtonReg; // Service: Protocol Test

(function (PressureButtonReg) {
  PressureButtonReg[PressureButtonReg["Threshold"] = 6] = "Threshold";
})(PressureButtonReg || (PressureButtonReg = {}));

var SRV_PROTO_TEST = 0x16c7466a;
var ProtoTestReg;

(function (ProtoTestReg) {
  ProtoTestReg[ProtoTestReg["RwBool"] = 129] = "RwBool";
  ProtoTestReg[ProtoTestReg["RoBool"] = 385] = "RoBool";
  ProtoTestReg[ProtoTestReg["RwU32"] = 130] = "RwU32";
  ProtoTestReg[ProtoTestReg["RoU32"] = 386] = "RoU32";
  ProtoTestReg[ProtoTestReg["RwI32"] = 131] = "RwI32";
  ProtoTestReg[ProtoTestReg["RoI32"] = 387] = "RoI32";
  ProtoTestReg[ProtoTestReg["RwString"] = 132] = "RwString";
  ProtoTestReg[ProtoTestReg["RoString"] = 388] = "RoString";
  ProtoTestReg[ProtoTestReg["RwBytes"] = 133] = "RwBytes";
  ProtoTestReg[ProtoTestReg["RoBytes"] = 389] = "RoBytes";
  ProtoTestReg[ProtoTestReg["RwI8U8U16I32"] = 134] = "RwI8U8U16I32";
  ProtoTestReg[ProtoTestReg["RoI8U8U16I32"] = 390] = "RoI8U8U16I32";
  ProtoTestReg[ProtoTestReg["RwU8String"] = 135] = "RwU8String";
  ProtoTestReg[ProtoTestReg["RoU8String"] = 391] = "RoU8String";
})(ProtoTestReg || (ProtoTestReg = {}));

var ProtoTestEvent;

(function (ProtoTestEvent) {
  ProtoTestEvent[ProtoTestEvent["EBool"] = 129] = "EBool";
  ProtoTestEvent[ProtoTestEvent["EU32"] = 130] = "EU32";
  ProtoTestEvent[ProtoTestEvent["EI32"] = 131] = "EI32";
  ProtoTestEvent[ProtoTestEvent["EString"] = 132] = "EString";
  ProtoTestEvent[ProtoTestEvent["EBytes"] = 133] = "EBytes";
  ProtoTestEvent[ProtoTestEvent["EI8U8U16I32"] = 134] = "EI8U8U16I32";
  ProtoTestEvent[ProtoTestEvent["EU8String"] = 135] = "EU8String";
})(ProtoTestEvent || (ProtoTestEvent = {}));

var ProtoTestCmd;
/**
 * pipe_report PBytes
 * ```
 * const [byte] = jdunpack<[number]>(buf, "u8")
 * ```
 */
// Service: Proxy

(function (ProtoTestCmd) {
  ProtoTestCmd[ProtoTestCmd["CBool"] = 129] = "CBool";
  ProtoTestCmd[ProtoTestCmd["CU32"] = 130] = "CU32";
  ProtoTestCmd[ProtoTestCmd["CI32"] = 131] = "CI32";
  ProtoTestCmd[ProtoTestCmd["CString"] = 132] = "CString";
  ProtoTestCmd[ProtoTestCmd["CBytes"] = 133] = "CBytes";
  ProtoTestCmd[ProtoTestCmd["CI8U8U16I32"] = 134] = "CI8U8U16I32";
  ProtoTestCmd[ProtoTestCmd["CU8String"] = 135] = "CU8String";
  ProtoTestCmd[ProtoTestCmd["CReportPipe"] = 144] = "CReportPipe";
})(ProtoTestCmd || (ProtoTestCmd = {}));

var SRV_PROXY = 0x16f19949; // Service: Pulse Oximeter

var SRV_PULSE_OXIMETER = 0x10bb4eb6;
var PulseOximeterReg; // Service: Rain gauge

(function (PulseOximeterReg) {
  PulseOximeterReg[PulseOximeterReg["Oxygen"] = 257] = "Oxygen";
  PulseOximeterReg[PulseOximeterReg["OxygenError"] = 262] = "OxygenError";
})(PulseOximeterReg || (PulseOximeterReg = {}));

var SRV_RAIN_GAUGE = 0x13734c95;
var RainGaugeReg; // Service: Real time clock

(function (RainGaugeReg) {
  RainGaugeReg[RainGaugeReg["Precipitation"] = 257] = "Precipitation";
  RainGaugeReg[RainGaugeReg["PrecipitationPrecision"] = 264] = "PrecipitationPrecision";
})(RainGaugeReg || (RainGaugeReg = {}));

var SRV_REAL_TIME_CLOCK = 0x1a8b1a28;
var RealTimeClockVariant;

(function (RealTimeClockVariant) {
  RealTimeClockVariant[RealTimeClockVariant["Computer"] = 1] = "Computer";
  RealTimeClockVariant[RealTimeClockVariant["Crystal"] = 2] = "Crystal";
  RealTimeClockVariant[RealTimeClockVariant["Cuckoo"] = 3] = "Cuckoo";
})(RealTimeClockVariant || (RealTimeClockVariant = {}));

var RealTimeClockReg;

(function (RealTimeClockReg) {
  RealTimeClockReg[RealTimeClockReg["LocalTime"] = 257] = "LocalTime";
  RealTimeClockReg[RealTimeClockReg["Drift"] = 384] = "Drift";
  RealTimeClockReg[RealTimeClockReg["Precision"] = 385] = "Precision";
  RealTimeClockReg[RealTimeClockReg["Variant"] = 263] = "Variant";
})(RealTimeClockReg || (RealTimeClockReg = {}));

var RealTimeClockCmd; // Service: Reflected light

(function (RealTimeClockCmd) {
  RealTimeClockCmd[RealTimeClockCmd["SetTime"] = 128] = "SetTime";
})(RealTimeClockCmd || (RealTimeClockCmd = {}));

var SRV_REFLECTED_LIGHT = 0x126c4cb2;
var ReflectedLightVariant;

(function (ReflectedLightVariant) {
  ReflectedLightVariant[ReflectedLightVariant["InfraredDigital"] = 1] = "InfraredDigital";
  ReflectedLightVariant[ReflectedLightVariant["InfraredAnalog"] = 2] = "InfraredAnalog";
})(ReflectedLightVariant || (ReflectedLightVariant = {}));

var ReflectedLightReg;

(function (ReflectedLightReg) {
  ReflectedLightReg[ReflectedLightReg["Brightness"] = 257] = "Brightness";
  ReflectedLightReg[ReflectedLightReg["Variant"] = 263] = "Variant";
})(ReflectedLightReg || (ReflectedLightReg = {}));

var ReflectedLightEvent; // Service: Relay

(function (ReflectedLightEvent) {
  ReflectedLightEvent[ReflectedLightEvent["Dark"] = 2] = "Dark";
  ReflectedLightEvent[ReflectedLightEvent["Light"] = 1] = "Light";
})(ReflectedLightEvent || (ReflectedLightEvent = {}));

var SRV_RELAY = 0x183fe656;
var RelayVariant;

(function (RelayVariant) {
  RelayVariant[RelayVariant["Electromechanical"] = 1] = "Electromechanical";
  RelayVariant[RelayVariant["SolidState"] = 2] = "SolidState";
  RelayVariant[RelayVariant["Reed"] = 3] = "Reed";
})(RelayVariant || (RelayVariant = {}));

var RelayReg;

(function (RelayReg) {
  RelayReg[RelayReg["Closed"] = 1] = "Closed";
  RelayReg[RelayReg["Variant"] = 263] = "Variant";
  RelayReg[RelayReg["MaxSwitchingCurrent"] = 384] = "MaxSwitchingCurrent";
})(RelayReg || (RelayReg = {}));

var RelayEvent; // Service: Random Number Generator

(function (RelayEvent) {
  RelayEvent[RelayEvent["Active"] = 1] = "Active";
  RelayEvent[RelayEvent["Inactive"] = 2] = "Inactive";
})(RelayEvent || (RelayEvent = {}));

var SRV_RNG = 0x1789f0a2;
var RngVariant;

(function (RngVariant) {
  RngVariant[RngVariant["Quantum"] = 1] = "Quantum";
  RngVariant[RngVariant["ADCNoise"] = 2] = "ADCNoise";
  RngVariant[RngVariant["WebCrypto"] = 3] = "WebCrypto";
})(RngVariant || (RngVariant = {}));

var RngReg; // Service: Role Manager

(function (RngReg) {
  RngReg[RngReg["Random"] = 384] = "Random";
  RngReg[RngReg["Variant"] = 263] = "Variant";
})(RngReg || (RngReg = {}));

var SRV_ROLE_MANAGER = 0x1e4b7e66;
var RoleManagerReg;

(function (RoleManagerReg) {
  RoleManagerReg[RoleManagerReg["AutoBind"] = 128] = "AutoBind";
  RoleManagerReg[RoleManagerReg["AllRolesAllocated"] = 385] = "AllRolesAllocated";
})(RoleManagerReg || (RoleManagerReg = {}));

var RoleManagerCmd;
/**
 * pipe_report StoredRoles
 * ```
 * const [deviceId, serviceIdx, role] = jdunpack<[Uint8Array, number, string]>(buf, "b[8] u8 s")
 * ```
 */

/**
 * pipe_report RequiredRoles
 * ```
 * const [deviceId, serviceClass, serviceIdx, role] = jdunpack<[Uint8Array, number, number, string]>(buf, "b[8] u32 u8 s")
 * ```
 */

(function (RoleManagerCmd) {
  RoleManagerCmd[RoleManagerCmd["GetRole"] = 128] = "GetRole";
  RoleManagerCmd[RoleManagerCmd["SetRole"] = 129] = "SetRole";
  RoleManagerCmd[RoleManagerCmd["ClearAllRoles"] = 132] = "ClearAllRoles";
  RoleManagerCmd[RoleManagerCmd["ListStoredRoles"] = 130] = "ListStoredRoles";
  RoleManagerCmd[RoleManagerCmd["ListRequiredRoles"] = 131] = "ListRequiredRoles";
})(RoleManagerCmd || (RoleManagerCmd = {}));

var RoleManagerEvent; // Service: Rotary encoder

(function (RoleManagerEvent) {
  RoleManagerEvent[RoleManagerEvent["Change"] = 3] = "Change";
})(RoleManagerEvent || (RoleManagerEvent = {}));

var SRV_ROTARY_ENCODER = 0x10fa29c9;
var RotaryEncoderReg; // Service: Rover

(function (RotaryEncoderReg) {
  RotaryEncoderReg[RotaryEncoderReg["Position"] = 257] = "Position";
  RotaryEncoderReg[RotaryEncoderReg["ClicksPerTurn"] = 384] = "ClicksPerTurn";
})(RotaryEncoderReg || (RotaryEncoderReg = {}));

var SRV_ROVER = 0x19f4d06b;
var RoverReg; // Service: Sensor Aggregator

(function (RoverReg) {
  RoverReg[RoverReg["Kinematics"] = 257] = "Kinematics";
})(RoverReg || (RoverReg = {}));

var SRV_SENSOR_AGGREGATOR = 0x1d90e1c5;
var SensorAggregatorSampleType;

(function (SensorAggregatorSampleType) {
  SensorAggregatorSampleType[SensorAggregatorSampleType["U8"] = 8] = "U8";
  SensorAggregatorSampleType[SensorAggregatorSampleType["I8"] = 136] = "I8";
  SensorAggregatorSampleType[SensorAggregatorSampleType["U16"] = 16] = "U16";
  SensorAggregatorSampleType[SensorAggregatorSampleType["I16"] = 144] = "I16";
  SensorAggregatorSampleType[SensorAggregatorSampleType["U32"] = 32] = "U32";
  SensorAggregatorSampleType[SensorAggregatorSampleType["I32"] = 160] = "I32";
})(SensorAggregatorSampleType || (SensorAggregatorSampleType = {}));

var SensorAggregatorReg; // Service: Servo

(function (SensorAggregatorReg) {
  SensorAggregatorReg[SensorAggregatorReg["Inputs"] = 128] = "Inputs";
  SensorAggregatorReg[SensorAggregatorReg["NumSamples"] = 384] = "NumSamples";
  SensorAggregatorReg[SensorAggregatorReg["SampleSize"] = 385] = "SampleSize";
  SensorAggregatorReg[SensorAggregatorReg["StreamingSamples"] = 129] = "StreamingSamples";
  SensorAggregatorReg[SensorAggregatorReg["CurrentSample"] = 257] = "CurrentSample";
})(SensorAggregatorReg || (SensorAggregatorReg = {}));

var SRV_SERVO = 0x12fc9103;
var ServoReg; // Service: Settings

(function (ServoReg) {
  ServoReg[ServoReg["Angle"] = 2] = "Angle";
  ServoReg[ServoReg["Enabled"] = 1] = "Enabled";
  ServoReg[ServoReg["Offset"] = 129] = "Offset";
  ServoReg[ServoReg["MinAngle"] = 272] = "MinAngle";
  ServoReg[ServoReg["MinPulse"] = 131] = "MinPulse";
  ServoReg[ServoReg["MaxAngle"] = 273] = "MaxAngle";
  ServoReg[ServoReg["MaxPulse"] = 133] = "MaxPulse";
  ServoReg[ServoReg["StallTorque"] = 384] = "StallTorque";
  ServoReg[ServoReg["ResponseSpeed"] = 385] = "ResponseSpeed";
  ServoReg[ServoReg["CurrentAngle"] = 257] = "CurrentAngle";
})(ServoReg || (ServoReg = {}));

var SRV_SETTINGS = 0x1107dc4a;
var SettingsCmd;
/**
 * pipe_report ListedKey
 * ```
 * const [key] = jdunpack<[string]>(buf, "s")
 * ```
 */

/**
 * pipe_report ListedEntry
 * ```
 * const [key, value] = jdunpack<[string, Uint8Array]>(buf, "z b")
 * ```
 */

(function (SettingsCmd) {
  SettingsCmd[SettingsCmd["Get"] = 128] = "Get";
  SettingsCmd[SettingsCmd["Set"] = 129] = "Set";
  SettingsCmd[SettingsCmd["Delete"] = 132] = "Delete";
  SettingsCmd[SettingsCmd["ListKeys"] = 130] = "ListKeys";
  SettingsCmd[SettingsCmd["List"] = 131] = "List";
  SettingsCmd[SettingsCmd["Clear"] = 133] = "Clear";
})(SettingsCmd || (SettingsCmd = {}));

var SettingsEvent; // Service: 7-segment display

(function (SettingsEvent) {
  SettingsEvent[SettingsEvent["Change"] = 3] = "Change";
})(SettingsEvent || (SettingsEvent = {}));

var SRV_SEVEN_SEGMENT_DISPLAY = 0x196158f7;
var SevenSegmentDisplayReg;

(function (SevenSegmentDisplayReg) {
  SevenSegmentDisplayReg[SevenSegmentDisplayReg["Digits"] = 2] = "Digits";
  SevenSegmentDisplayReg[SevenSegmentDisplayReg["Brightness"] = 1] = "Brightness";
  SevenSegmentDisplayReg[SevenSegmentDisplayReg["DoubleDots"] = 128] = "DoubleDots";
  SevenSegmentDisplayReg[SevenSegmentDisplayReg["DigitCount"] = 384] = "DigitCount";
  SevenSegmentDisplayReg[SevenSegmentDisplayReg["DecimalPoint"] = 385] = "DecimalPoint";
})(SevenSegmentDisplayReg || (SevenSegmentDisplayReg = {}));

var SevenSegmentDisplayCmd; // Service: Soil moisture

(function (SevenSegmentDisplayCmd) {
  SevenSegmentDisplayCmd[SevenSegmentDisplayCmd["SetNumber"] = 128] = "SetNumber";
  SevenSegmentDisplayCmd[SevenSegmentDisplayCmd["SetText"] = 129] = "SetText";
})(SevenSegmentDisplayCmd || (SevenSegmentDisplayCmd = {}));

var SRV_SOIL_MOISTURE = 0x1d4aa3b3;
var SoilMoistureVariant;

(function (SoilMoistureVariant) {
  SoilMoistureVariant[SoilMoistureVariant["Resistive"] = 1] = "Resistive";
  SoilMoistureVariant[SoilMoistureVariant["Capacitive"] = 2] = "Capacitive";
})(SoilMoistureVariant || (SoilMoistureVariant = {}));

var SoilMoistureReg; // Service: Solenoid

(function (SoilMoistureReg) {
  SoilMoistureReg[SoilMoistureReg["Moisture"] = 257] = "Moisture";
  SoilMoistureReg[SoilMoistureReg["MoistureError"] = 262] = "MoistureError";
  SoilMoistureReg[SoilMoistureReg["Variant"] = 263] = "Variant";
})(SoilMoistureReg || (SoilMoistureReg = {}));

var SRV_SOLENOID = 0x171723ca;
var SolenoidVariant;

(function (SolenoidVariant) {
  SolenoidVariant[SolenoidVariant["PushPull"] = 1] = "PushPull";
  SolenoidVariant[SolenoidVariant["Valve"] = 2] = "Valve";
  SolenoidVariant[SolenoidVariant["Latch"] = 3] = "Latch";
})(SolenoidVariant || (SolenoidVariant = {}));

var SolenoidReg; // Service: Sound level

(function (SolenoidReg) {
  SolenoidReg[SolenoidReg["Pulled"] = 1] = "Pulled";
  SolenoidReg[SolenoidReg["Variant"] = 263] = "Variant";
})(SolenoidReg || (SolenoidReg = {}));

var SRV_SOUND_LEVEL = 0x14ad1a5d;
var SoundLevelReg;

(function (SoundLevelReg) {
  SoundLevelReg[SoundLevelReg["SoundLevel"] = 257] = "SoundLevel";
  SoundLevelReg[SoundLevelReg["Enabled"] = 1] = "Enabled";
  SoundLevelReg[SoundLevelReg["MinDecibels"] = 129] = "MinDecibels";
  SoundLevelReg[SoundLevelReg["MaxDecibels"] = 130] = "MaxDecibels";
  SoundLevelReg[SoundLevelReg["LoudThreshold"] = 6] = "LoudThreshold";
  SoundLevelReg[SoundLevelReg["QuietThreshold"] = 5] = "QuietThreshold";
})(SoundLevelReg || (SoundLevelReg = {}));

var SoundLevelEvent; // Service: Sound player

(function (SoundLevelEvent) {
  SoundLevelEvent[SoundLevelEvent["Loud"] = 1] = "Loud";
  SoundLevelEvent[SoundLevelEvent["Quiet"] = 2] = "Quiet";
})(SoundLevelEvent || (SoundLevelEvent = {}));

var SRV_SOUND_PLAYER = 0x1403d338;
var SoundPlayerReg;

(function (SoundPlayerReg) {
  SoundPlayerReg[SoundPlayerReg["Volume"] = 1] = "Volume";
})(SoundPlayerReg || (SoundPlayerReg = {}));

var SoundPlayerCmd;
/**
 * pipe_report ListSoundsPipe
 * ```
 * const [duration, name] = jdunpack<[number, string]>(buf, "u32 s")
 * ```
 */
// Service: Sound Spectrum

(function (SoundPlayerCmd) {
  SoundPlayerCmd[SoundPlayerCmd["Play"] = 128] = "Play";
  SoundPlayerCmd[SoundPlayerCmd["ListSounds"] = 129] = "ListSounds";
})(SoundPlayerCmd || (SoundPlayerCmd = {}));

var SRV_SOUND_SPECTRUM = 0x157abc1e;
var SoundSpectrumReg; // Service: Speech synthesis

(function (SoundSpectrumReg) {
  SoundSpectrumReg[SoundSpectrumReg["FrequencyBins"] = 257] = "FrequencyBins";
  SoundSpectrumReg[SoundSpectrumReg["Enabled"] = 1] = "Enabled";
  SoundSpectrumReg[SoundSpectrumReg["FftPow2Size"] = 128] = "FftPow2Size";
  SoundSpectrumReg[SoundSpectrumReg["MinDecibels"] = 129] = "MinDecibels";
  SoundSpectrumReg[SoundSpectrumReg["MaxDecibels"] = 130] = "MaxDecibels";
  SoundSpectrumReg[SoundSpectrumReg["SmoothingTimeConstant"] = 131] = "SmoothingTimeConstant";
})(SoundSpectrumReg || (SoundSpectrumReg = {}));

var SRV_SPEECH_SYNTHESIS = 0x1204d995;
var SpeechSynthesisReg;

(function (SpeechSynthesisReg) {
  SpeechSynthesisReg[SpeechSynthesisReg["Enabled"] = 1] = "Enabled";
  SpeechSynthesisReg[SpeechSynthesisReg["Lang"] = 128] = "Lang";
  SpeechSynthesisReg[SpeechSynthesisReg["Volume"] = 129] = "Volume";
  SpeechSynthesisReg[SpeechSynthesisReg["Pitch"] = 130] = "Pitch";
  SpeechSynthesisReg[SpeechSynthesisReg["Rate"] = 131] = "Rate";
})(SpeechSynthesisReg || (SpeechSynthesisReg = {}));

var SpeechSynthesisCmd; // Service: Switch

(function (SpeechSynthesisCmd) {
  SpeechSynthesisCmd[SpeechSynthesisCmd["Speak"] = 128] = "Speak";
  SpeechSynthesisCmd[SpeechSynthesisCmd["Cancel"] = 129] = "Cancel";
})(SpeechSynthesisCmd || (SpeechSynthesisCmd = {}));

var SRV_SWITCH = 0x1ad29402;
var SwitchVariant;

(function (SwitchVariant) {
  SwitchVariant[SwitchVariant["Slide"] = 1] = "Slide";
  SwitchVariant[SwitchVariant["Tilt"] = 2] = "Tilt";
  SwitchVariant[SwitchVariant["PushButton"] = 3] = "PushButton";
  SwitchVariant[SwitchVariant["Tactile"] = 4] = "Tactile";
  SwitchVariant[SwitchVariant["Toggle"] = 5] = "Toggle";
  SwitchVariant[SwitchVariant["Proximity"] = 6] = "Proximity";
  SwitchVariant[SwitchVariant["Magnetic"] = 7] = "Magnetic";
  SwitchVariant[SwitchVariant["FootPedal"] = 8] = "FootPedal";
})(SwitchVariant || (SwitchVariant = {}));

var SwitchReg;

(function (SwitchReg) {
  SwitchReg[SwitchReg["Active"] = 257] = "Active";
  SwitchReg[SwitchReg["Variant"] = 263] = "Variant";
  SwitchReg[SwitchReg["AutoOffDelay"] = 384] = "AutoOffDelay";
})(SwitchReg || (SwitchReg = {}));

var SwitchEvent; // Service: TCP

(function (SwitchEvent) {
  SwitchEvent[SwitchEvent["On"] = 1] = "On";
  SwitchEvent[SwitchEvent["Off"] = 2] = "Off";
})(SwitchEvent || (SwitchEvent = {}));

var SRV_TCP = 0x1b43b70b;
var TcpTcpError;

(function (TcpTcpError) {
  TcpTcpError[TcpTcpError["InvalidCommand"] = 1] = "InvalidCommand";
  TcpTcpError[TcpTcpError["InvalidCommandPayload"] = 2] = "InvalidCommandPayload";
})(TcpTcpError || (TcpTcpError = {}));

var TcpCmd;

(function (TcpCmd) {
  TcpCmd[TcpCmd["Open"] = 128] = "Open";
})(TcpCmd || (TcpCmd = {}));

var TcpPipeCmd;
/**
 * pipe_command Outdata
 * ```
 * const [data] = jdunpack<[Uint8Array]>(buf, "b")
 * ```
 */

/**
 * pipe_report Indata
 * ```
 * const [data] = jdunpack<[Uint8Array]>(buf, "b")
 * ```
 */
// Service: Thermocouple

(function (TcpPipeCmd) {
  TcpPipeCmd[TcpPipeCmd["OpenSsl"] = 1] = "OpenSsl";
  TcpPipeCmd[TcpPipeCmd["Error"] = 0] = "Error";
})(TcpPipeCmd || (TcpPipeCmd = {}));

var SRV_THERMOCOUPLE = 0x143ac061;
var ThermocoupleVariant;

(function (ThermocoupleVariant) {
  ThermocoupleVariant[ThermocoupleVariant["TypeK"] = 1] = "TypeK";
  ThermocoupleVariant[ThermocoupleVariant["TypeJ"] = 2] = "TypeJ";
  ThermocoupleVariant[ThermocoupleVariant["TypeT"] = 3] = "TypeT";
  ThermocoupleVariant[ThermocoupleVariant["TypeE"] = 4] = "TypeE";
  ThermocoupleVariant[ThermocoupleVariant["TypeN"] = 5] = "TypeN";
  ThermocoupleVariant[ThermocoupleVariant["TypeS"] = 6] = "TypeS";
  ThermocoupleVariant[ThermocoupleVariant["TypeR"] = 7] = "TypeR";
  ThermocoupleVariant[ThermocoupleVariant["TypeB"] = 8] = "TypeB";
})(ThermocoupleVariant || (ThermocoupleVariant = {}));

var ThermocoupleReg; // Service: Thermometer

(function (ThermocoupleReg) {
  ThermocoupleReg[ThermocoupleReg["Temperature"] = 257] = "Temperature";
  ThermocoupleReg[ThermocoupleReg["MinTemperature"] = 260] = "MinTemperature";
  ThermocoupleReg[ThermocoupleReg["MaxTemperature"] = 261] = "MaxTemperature";
  ThermocoupleReg[ThermocoupleReg["TemperatureError"] = 262] = "TemperatureError";
  ThermocoupleReg[ThermocoupleReg["Variant"] = 263] = "Variant";
})(ThermocoupleReg || (ThermocoupleReg = {}));

var SRV_THERMOMETER = 0x1421bac7;
var ThermometerVariant;

(function (ThermometerVariant) {
  ThermometerVariant[ThermometerVariant["Outdoor"] = 1] = "Outdoor";
  ThermometerVariant[ThermometerVariant["Indoor"] = 2] = "Indoor";
  ThermometerVariant[ThermometerVariant["Body"] = 3] = "Body";
})(ThermometerVariant || (ThermometerVariant = {}));

var ThermometerReg; // Service: Traffic Light

(function (ThermometerReg) {
  ThermometerReg[ThermometerReg["Temperature"] = 257] = "Temperature";
  ThermometerReg[ThermometerReg["MinTemperature"] = 260] = "MinTemperature";
  ThermometerReg[ThermometerReg["MaxTemperature"] = 261] = "MaxTemperature";
  ThermometerReg[ThermometerReg["TemperatureError"] = 262] = "TemperatureError";
  ThermometerReg[ThermometerReg["Variant"] = 263] = "Variant";
})(ThermometerReg || (ThermometerReg = {}));

var SRV_TRAFFIC_LIGHT = 0x15c38d9b;
var TrafficLightReg; // Service: Total Volatile organic compound

(function (TrafficLightReg) {
  TrafficLightReg[TrafficLightReg["Red"] = 128] = "Red";
  TrafficLightReg[TrafficLightReg["Orange"] = 129] = "Orange";
  TrafficLightReg[TrafficLightReg["Green"] = 130] = "Green";
})(TrafficLightReg || (TrafficLightReg = {}));

var SRV_TVOC = 0x12a5b597;
var TvocReg; // Service: Unique Brain

(function (TvocReg) {
  TvocReg[TvocReg["TVOC"] = 257] = "TVOC";
  TvocReg[TvocReg["TVOCError"] = 262] = "TVOCError";
  TvocReg[TvocReg["MinTVOC"] = 260] = "MinTVOC";
  TvocReg[TvocReg["MaxTVOC"] = 261] = "MaxTVOC";
  TvocReg[TvocReg["ConditioningPeriod"] = 384] = "ConditioningPeriod";
})(TvocReg || (TvocReg = {}));

var SRV_UNIQUE_BRAIN = 0x103c4ee5; // Service: UV index

var SRV_UV_INDEX = 0x1f6e0d90;
var UvIndexVariant;

(function (UvIndexVariant) {
  UvIndexVariant[UvIndexVariant["UVA_UVB"] = 1] = "UVA_UVB";
  UvIndexVariant[UvIndexVariant["Visible_IR"] = 2] = "Visible_IR";
})(UvIndexVariant || (UvIndexVariant = {}));

var UvIndexReg; // Service: Verified Telemetry

(function (UvIndexReg) {
  UvIndexReg[UvIndexReg["UvIndex"] = 257] = "UvIndex";
  UvIndexReg[UvIndexReg["UvIndexError"] = 262] = "UvIndexError";
  UvIndexReg[UvIndexReg["Variant"] = 263] = "Variant";
})(UvIndexReg || (UvIndexReg = {}));

var SRV_VERIFIED_TELEMETRY = 0x2194841f;
var VerifiedTelemetryStatus;

(function (VerifiedTelemetryStatus) {
  VerifiedTelemetryStatus[VerifiedTelemetryStatus["Unknown"] = 0] = "Unknown";
  VerifiedTelemetryStatus[VerifiedTelemetryStatus["Working"] = 1] = "Working";
  VerifiedTelemetryStatus[VerifiedTelemetryStatus["Faulty"] = 2] = "Faulty";
})(VerifiedTelemetryStatus || (VerifiedTelemetryStatus = {}));

var VerifiedTelemetryFingerprintType;

(function (VerifiedTelemetryFingerprintType) {
  VerifiedTelemetryFingerprintType[VerifiedTelemetryFingerprintType["FallCurve"] = 1] = "FallCurve";
  VerifiedTelemetryFingerprintType[VerifiedTelemetryFingerprintType["CurrentSense"] = 2] = "CurrentSense";
  VerifiedTelemetryFingerprintType[VerifiedTelemetryFingerprintType["Custom"] = 3] = "Custom";
})(VerifiedTelemetryFingerprintType || (VerifiedTelemetryFingerprintType = {}));

var VerifiedTelemetryReg;

(function (VerifiedTelemetryReg) {
  VerifiedTelemetryReg[VerifiedTelemetryReg["TelemetryStatus"] = 384] = "TelemetryStatus";
  VerifiedTelemetryReg[VerifiedTelemetryReg["TelemetryStatusInterval"] = 128] = "TelemetryStatusInterval";
  VerifiedTelemetryReg[VerifiedTelemetryReg["FingerprintType"] = 385] = "FingerprintType";
  VerifiedTelemetryReg[VerifiedTelemetryReg["FingerprintTemplate"] = 386] = "FingerprintTemplate";
})(VerifiedTelemetryReg || (VerifiedTelemetryReg = {}));

var VerifiedTelemetryCmd;

(function (VerifiedTelemetryCmd) {
  VerifiedTelemetryCmd[VerifiedTelemetryCmd["ResetFingerprintTemplate"] = 128] = "ResetFingerprintTemplate";
  VerifiedTelemetryCmd[VerifiedTelemetryCmd["RetrainFingerprintTemplate"] = 129] = "RetrainFingerprintTemplate";
})(VerifiedTelemetryCmd || (VerifiedTelemetryCmd = {}));

var VerifiedTelemetryEvent; // Service: Vibration motor

(function (VerifiedTelemetryEvent) {
  VerifiedTelemetryEvent[VerifiedTelemetryEvent["TelemetryStatusChange"] = 3] = "TelemetryStatusChange";
  VerifiedTelemetryEvent[VerifiedTelemetryEvent["FingerprintTemplateChange"] = 128] = "FingerprintTemplateChange";
})(VerifiedTelemetryEvent || (VerifiedTelemetryEvent = {}));

var SRV_VIBRATION_MOTOR = 0x183fc4a2;
var VibrationMotorReg;

(function (VibrationMotorReg) {
  VibrationMotorReg[VibrationMotorReg["Enabled"] = 1] = "Enabled";
})(VibrationMotorReg || (VibrationMotorReg = {}));

var VibrationMotorCmd; // Service: Water level

(function (VibrationMotorCmd) {
  VibrationMotorCmd[VibrationMotorCmd["Vibrate"] = 128] = "Vibrate";
})(VibrationMotorCmd || (VibrationMotorCmd = {}));

var SRV_WATER_LEVEL = 0x147b62ed;
var WaterLevelVariant;

(function (WaterLevelVariant) {
  WaterLevelVariant[WaterLevelVariant["Resistive"] = 1] = "Resistive";
  WaterLevelVariant[WaterLevelVariant["ContactPhotoElectric"] = 2] = "ContactPhotoElectric";
  WaterLevelVariant[WaterLevelVariant["NonContactPhotoElectric"] = 3] = "NonContactPhotoElectric";
})(WaterLevelVariant || (WaterLevelVariant = {}));

var WaterLevelReg; // Service: Weight Scale

(function (WaterLevelReg) {
  WaterLevelReg[WaterLevelReg["Level"] = 257] = "Level";
  WaterLevelReg[WaterLevelReg["Variant"] = 263] = "Variant";
})(WaterLevelReg || (WaterLevelReg = {}));

var SRV_WEIGHT_SCALE = 0x1f4d5040;
var WeightScaleVariant;

(function (WeightScaleVariant) {
  WeightScaleVariant[WeightScaleVariant["Body"] = 1] = "Body";
  WeightScaleVariant[WeightScaleVariant["Food"] = 2] = "Food";
  WeightScaleVariant[WeightScaleVariant["Jewelry"] = 3] = "Jewelry";
})(WeightScaleVariant || (WeightScaleVariant = {}));

var WeightScaleReg;

(function (WeightScaleReg) {
  WeightScaleReg[WeightScaleReg["Weight"] = 257] = "Weight";
  WeightScaleReg[WeightScaleReg["WeightError"] = 262] = "WeightError";
  WeightScaleReg[WeightScaleReg["ZeroOffset"] = 128] = "ZeroOffset";
  WeightScaleReg[WeightScaleReg["Gain"] = 129] = "Gain";
  WeightScaleReg[WeightScaleReg["MaxWeight"] = 261] = "MaxWeight";
  WeightScaleReg[WeightScaleReg["MinWeight"] = 260] = "MinWeight";
  WeightScaleReg[WeightScaleReg["WeightResolution"] = 264] = "WeightResolution";
  WeightScaleReg[WeightScaleReg["Variant"] = 263] = "Variant";
})(WeightScaleReg || (WeightScaleReg = {}));

var WeightScaleCmd; // Service: WIFI

(function (WeightScaleCmd) {
  WeightScaleCmd[WeightScaleCmd["CalibrateZeroOffset"] = 128] = "CalibrateZeroOffset";
  WeightScaleCmd[WeightScaleCmd["CalibrateGain"] = 129] = "CalibrateGain";
})(WeightScaleCmd || (WeightScaleCmd = {}));

var SRV_WIFI = 0x18aae1fa;
var WifiAPFlags;

(function (WifiAPFlags) {
  WifiAPFlags[WifiAPFlags["HasPassword"] = 1] = "HasPassword";
  WifiAPFlags[WifiAPFlags["WPS"] = 2] = "WPS";
  WifiAPFlags[WifiAPFlags["HasSecondaryChannelAbove"] = 4] = "HasSecondaryChannelAbove";
  WifiAPFlags[WifiAPFlags["HasSecondaryChannelBelow"] = 8] = "HasSecondaryChannelBelow";
  WifiAPFlags[WifiAPFlags["IEEE_802_11B"] = 256] = "IEEE_802_11B";
  WifiAPFlags[WifiAPFlags["IEEE_802_11A"] = 512] = "IEEE_802_11A";
  WifiAPFlags[WifiAPFlags["IEEE_802_11G"] = 1024] = "IEEE_802_11G";
  WifiAPFlags[WifiAPFlags["IEEE_802_11N"] = 2048] = "IEEE_802_11N";
  WifiAPFlags[WifiAPFlags["IEEE_802_11AC"] = 4096] = "IEEE_802_11AC";
  WifiAPFlags[WifiAPFlags["IEEE_802_11AX"] = 8192] = "IEEE_802_11AX";
  WifiAPFlags[WifiAPFlags["IEEE_802_LongRange"] = 32768] = "IEEE_802_LongRange";
})(WifiAPFlags || (WifiAPFlags = {}));

var WifiCmd;
/**
 * pipe_report Results
 * ```
 * const [flags, rssi, channel, bssid, ssid] = jdunpack<[WifiAPFlags, number, number, Uint8Array, string]>(buf, "u32 x[4] i8 u8 b[6] s[33]")
 * ```
 */

/**
 * pipe_report NetworkResults
 * ```
 * const [priority, flags, ssid] = jdunpack<[number, number, string]>(buf, "i16 i16 s")
 * ```
 */

(function (WifiCmd) {
  WifiCmd[WifiCmd["LastScanResults"] = 128] = "LastScanResults";
  WifiCmd[WifiCmd["AddNetwork"] = 129] = "AddNetwork";
  WifiCmd[WifiCmd["Reconnect"] = 130] = "Reconnect";
  WifiCmd[WifiCmd["ForgetNetwork"] = 131] = "ForgetNetwork";
  WifiCmd[WifiCmd["ForgetAllNetworks"] = 132] = "ForgetAllNetworks";
  WifiCmd[WifiCmd["SetNetworkPriority"] = 133] = "SetNetworkPriority";
  WifiCmd[WifiCmd["Scan"] = 134] = "Scan";
  WifiCmd[WifiCmd["ListKnownNetworks"] = 135] = "ListKnownNetworks";
})(WifiCmd || (WifiCmd = {}));

var WifiReg;

(function (WifiReg) {
  WifiReg[WifiReg["Enabled"] = 1] = "Enabled";
  WifiReg[WifiReg["IpAddress"] = 385] = "IpAddress";
  WifiReg[WifiReg["Eui48"] = 386] = "Eui48";
  WifiReg[WifiReg["Ssid"] = 387] = "Ssid";
  WifiReg[WifiReg["Rssi"] = 388] = "Rssi";
})(WifiReg || (WifiReg = {}));

var WifiEvent; // Service: Wind direction

(function (WifiEvent) {
  WifiEvent[WifiEvent["GotIp"] = 1] = "GotIp";
  WifiEvent[WifiEvent["LostIp"] = 2] = "LostIp";
  WifiEvent[WifiEvent["ScanComplete"] = 128] = "ScanComplete";
  WifiEvent[WifiEvent["NetworksChanged"] = 129] = "NetworksChanged";
  WifiEvent[WifiEvent["ConnectionFailed"] = 130] = "ConnectionFailed";
})(WifiEvent || (WifiEvent = {}));

var SRV_WIND_DIRECTION = 0x186be92b;
var WindDirectionReg; // Service: Wind speed

(function (WindDirectionReg) {
  WindDirectionReg[WindDirectionReg["WindDirection"] = 257] = "WindDirection";
  WindDirectionReg[WindDirectionReg["WindDirectionError"] = 262] = "WindDirectionError";
})(WindDirectionReg || (WindDirectionReg = {}));

var SRV_WIND_SPEED = 0x1b591bbf;
var WindSpeedReg;

(function (WindSpeedReg) {
  WindSpeedReg[WindSpeedReg["WindSpeed"] = 257] = "WindSpeed";
  WindSpeedReg[WindSpeedReg["WindSpeedError"] = 262] = "WindSpeedError";
  WindSpeedReg[WindSpeedReg["MaxWindSpeed"] = 261] = "MaxWindSpeed";
})(WindSpeedReg || (WindSpeedReg = {}));

/***/ }),

/***/ 13996:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AE": function() { return /* binding */ DEVICE_IMAGE_WIDTH; },
/* harmony export */   "CO": function() { return /* binding */ DEVICE_IMAGE_HEIGHT; },
/* harmony export */   "bM": function() { return /* binding */ resolveUnit; },
/* harmony export */   "Dl": function() { return /* binding */ units; },
/* harmony export */   "ml": function() { return /* binding */ parseServiceSpecificationMarkdownToJSON; },
/* harmony export */   "_A": function() { return /* binding */ camelize; },
/* harmony export */   "P1": function() { return /* binding */ dashify; },
/* harmony export */   "lW": function() { return /* binding */ humanify; },
/* harmony export */   "p6": function() { return /* binding */ packInfo; },
/* harmony export */   "vc": function() { return /* binding */ generateDeviceSpecificationId; },
/* harmony export */   "dj": function() { return /* binding */ normalizeDeviceSpecification; },
/* harmony export */   "o9": function() { return /* binding */ escapeDeviceIdentifier; },
/* harmony export */   "R1": function() { return /* binding */ converters; },
/* harmony export */   "FV": function() { return /* binding */ isNumericType; }
/* harmony export */ });
/* unused harmony exports unitDescription, secondaryUnitConverters, encodings, capitalize, snakify, TYPESCRIPT_STATIC_NAMESPACE, packFormat, escapeDeviceNameIdentifier */
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15785);
/* harmony import */ var _jdutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30055);


/* eslint-disable @typescript-eslint/no-explicit-any */
// eslint-disable-next-line @typescript-eslint/triple-slash-reference
/// <reference path="jdspec.d.ts" />

var DEVICE_IMAGE_WIDTH = 1024;
var DEVICE_IMAGE_HEIGHT = 768; // modified subset of SenML

var unitDescription = {
  "°": "angle",
  "°/s": "rotation rate",
  "°/s2": "rotation acceleration",
  m: "meter",
  kg: "kilogram",
  s: "second",
  A: "ampere",
  K: "kelvin",
  cd: "candela",
  mol: "mole",
  Hz: "hertz",
  rad: "radian",
  sr: "steradian",
  N: "newton",
  Pa: "pascal",
  J: "joule",
  W: "watt",
  C: "coulomb",
  V: "volt",
  F: "farad",
  Ohm: "ohm",
  S: "siemens",
  Wb: "weber",
  T: "tesla",
  H: "henry",
  "°C": "degrees Celsius",
  lm: "lumen",
  lx: "lux",
  Bq: "becquerel",
  Gy: "gray",
  Sv: "sievert",
  kat: "katal",
  m2: "square meter (area)",
  m3: "cubic meter (volume)",
  "m/s": "meter per second (velocity)",
  "m/s2": "meter per square second (acceleration)",
  "m3/s": "cubic meter per second (flow rate)",
  "W/m2": "watt per square meter (irradiance)",
  "cd/m2": "candela per square meter (luminance)",
  bit: "bit (information content)",
  "bit/s": "bit per second (data rate)",
  lat: "degrees latitude",
  lon: "degrees longitude",
  pH: "pH value (acidity; logarithmic quantity)",
  dB: "decibel (logarithmic quantity)",
  dBW: "decibel relative to 1 W (power level)",
  count: "1 (counter value)",
  "/": "1 (ratio e.g., value of a switch)",
  "%RH": "Percentage (Relative Humidity)",
  "%EL": "Percentage (remaining battery energy level)",
  EL: "seconds (remaining battery energy level)",
  "1/s": "1 per second (event rate)",
  "S/m": "Siemens per meter (conductivity)",
  B: "Byte (information content)",
  VA: "volt-ampere (Apparent Power)",
  VAs: "volt-ampere second (Apparent Energy)",
  var: "volt-ampere reactive (Reactive Power)",
  vars: "volt-ampere-reactive second (Reactive Energy)",
  "J/m": "joule per meter (Energy per distance)",
  "kg/m3": "kilogram per cubic meter (mass density, mass concentration)",
  "s/60°": "servo speed (time to travel 60°)",
  "kg/cm": "torque",
  hsv: "bit HSV color",
  rgb: "RGB color",
  rpm: "revolutions per minute",
  uv: "UV index",
  lux: "illuminance",
  bpm: "beats per minute",
  mcd: "micro candella",
  px: "pixel"
};
var secondaryUnitConverters = {
  ms: {
    name: "millisecond",
    unit: "s",
    scale: 1 / 1000,
    offset: 0
  },
  min: {
    name: "minute",
    unit: "s",
    scale: 60,
    offset: 0
  },
  h: {
    name: "hour",
    unit: "s",
    scale: 3600,
    offset: 0
  },
  MHz: {
    name: "megahertz",
    unit: "Hz",
    scale: 1000000,
    offset: 0
  },
  kW: {
    name: "kilowatt",
    unit: "W",
    scale: 1000,
    offset: 0
  },
  kVA: {
    name: "kilovolt-ampere",
    unit: "VA",
    scale: 1000,
    offset: 0
  },
  kvar: {
    name: "kilovar",
    unit: "var",
    scale: 1000,
    offset: 0
  },
  Ah: {
    name: "ampere-hour",
    unit: "C",
    scale: 3600,
    offset: 0
  },
  Wh: {
    name: "watt-hour",
    unit: "J",
    scale: 3600,
    offset: 0
  },
  kWh: {
    name: "kilowatt-hour",
    unit: "J",
    scale: 3600000,
    offset: 0
  },
  varh: {
    name: "var-hour",
    unit: "vars",
    scale: 3600,
    offset: 0
  },
  kvarh: {
    name: "kilovar-hour",
    unit: "vars",
    scale: 3600000,
    offset: 0
  },
  kVAh: {
    name: "kilovolt-ampere-hour",
    unit: "VAs",
    scale: 3600000,
    offset: 0
  },
  "Wh/km": {
    name: "watt-hour per kilometer",
    unit: "J/m",
    scale: 3.6,
    offset: 0
  },
  KiB: {
    name: "kibibyte",
    unit: "B",
    scale: 1024,
    offset: 0
  },
  GB: {
    name: "gigabyte",
    unit: "B",
    scale: 1.0e9,
    offset: 0
  },
  "Mbit/s": {
    name: "megabit per second",
    unit: "bit/s",
    scale: 1000000,
    offset: 0
  },
  "B/s": {
    name: "byte per second",
    unit: "bit/s",
    scale: 8,
    offset: 0
  },
  "MB/s": {
    name: "megabyte per second",
    unit: "bit/s",
    scale: 8000000,
    offset: 0
  },
  mV: {
    name: "millivolt",
    unit: "V",
    scale: 1 / 1000,
    offset: 0
  },
  mA: {
    name: "milliampere",
    unit: "A",
    scale: 1 / 1000,
    offset: 0
  },
  dBm: {
    name: "decibel (milliwatt)",
    unit: "dBW",
    scale: 1,
    offset: -30
  },
  "ug/m3": {
    name: "microgram per cubic meter",
    unit: "kg/m3",
    scale: 1.0e-9,
    offset: 0
  },
  "mm/h": {
    name: "millimeter per hour",
    unit: "m/s",
    scale: 1 / 3600000,
    offset: 0
  },
  "m/h": {
    name: "meter per hour",
    unit: "m/s",
    scale: 1 / 3600,
    offset: 0
  },
  "cm/s": {
    name: "centimeter per seconds",
    unit: "m/s",
    scale: 1 / 100,
    offset: 0
  },
  ppm: {
    name: "parts per million",
    unit: "/",
    scale: 1.0e-6,
    offset: 0
  },
  ppb: {
    name: "parts per billion",
    unit: "/",
    scale: 1.0e-9,
    offset: 0
  },
  "/100": {
    name: "percent",
    unit: "/",
    scale: 1 / 100,
    offset: 0
  },
  "%": {
    name: "percent",
    unit: "/",
    scale: 1 / 100,
    offset: 0
  },
  "/1000": {
    name: "permille",
    unit: "/",
    scale: 1 / 1000,
    offset: 0
  },
  hPa: {
    name: "hectopascal",
    unit: "Pa",
    scale: 100,
    offset: 0
  },
  mm: {
    name: "millimeter",
    unit: "m",
    scale: 1 / 1000,
    offset: 0
  },
  cm: {
    name: "centimeter",
    unit: "m",
    scale: 1 / 100,
    offset: 0
  },
  km: {
    name: "kilometer",
    unit: "m",
    scale: 1000,
    offset: 0
  },
  "km/h": {
    name: "kilometer per hour",
    unit: "m/s",
    scale: 1 / 3.6,
    offset: 0
  },
  "8ms": {
    name: "8 milliseconds",
    unit: "s",
    scale: 8 / 1000,
    offset: 0
  },
  nm: {
    name: "nanometer",
    unit: "m",
    scale: 1e-9,
    offset: 0
  },
  nT: {
    name: "nano Tesla",
    unit: "T",
    scale: 1e9,
    offset: 0
  },
  // compat with previous Jacdac versions
  frac: {
    name: "ratio",
    unit: "/",
    scale: 1,
    offset: 0
  },
  us: {
    name: "micro seconds",
    unit: "s",
    scale: 1e-6,
    offset: 0
  },
  mWh: {
    name: "micro watt-hour",
    unit: "J",
    scale: 3.6e-3,
    offset: 0
  },
  g: {
    name: "earth gravity",
    unit: "m/s2",
    scale: 9.80665,
    offset: 0
  },
  "#": {
    name: "count",
    unit: "#",
    scale: 1,
    offset: 0
  }
};
var encodings = {
  json: "JSON",
  bitset: "bitset"
};
function resolveUnit(unit) {
  if (!unit) return {
    name: "",
    scale: 1,
    offset: 1
  }; // indentifier
  // seconary unit?

  var su = secondaryUnitConverters[unit];
  if (su) return su;
  var name = unitDescription[unit];
  if (name) return {
    name,
    unit,
    scale: 1,
    offset: 0
  };
  return undefined;
}
function units() {
  var r = [];
  Object.keys(unitDescription).forEach(k => {
    r.push({
      name: k,
      description: unitDescription[k]
    });
    Object.keys(secondaryUnitConverters).filter(scd => secondaryUnitConverters[scd].unit === k).forEach(scd => r.push({
      name: scd,
      description: secondaryUnitConverters[scd].name
    }));
  });
  r.sort((l, r) => l.name.localeCompare(r.name));
  return r;
}
/* check ranges, see system.md
Registers `0x001-0x07f` - r/w common to all services
Registers `0x080-0x0ff` - r/w defined per-service
Registers `0x100-0x17f` - r/o common to all services
Registers `0x180-0x1ff` - r/o defined per-service
Registers `0x200-0xeff` - custom, defined per-service
Registers `0xf00-0xfff` - reserved for implementation, should not be seen on the wire
*/

var identifierRanges = {
  rw: [[0x001, 0x07f], [0x080, 0x0ff], [0x200, 0xeff], // custom
  [0xf00, 0xfff] // impl
  ],
  ro: [[0x100, 0x17f], [0x180, 0x1ff], [0x200, 0xeff], // custom
  [0xf00, 0xfff] // impl
  ],
  const: [[0x100, 0x17f], [0x180, 0x1ff], [0x200, 0xeff], // custom
  [0xf00, 0xfff] // impl
  ],
  command: [[0x000, 0x07f], [0x080, 0xeff], [0xf00, 0xfff]],
  report: [[0x000, 0x07f], [0x080, 0xeff], [0xf00, 0xfff]],
  event: [[0x00, 0x7f], // system
  [0x80, 0xff]]
};
function parseServiceSpecificationMarkdownToJSON(filecontent, includes, filename) {
  if (filename === void 0) {
    filename = "";
  }

  filecontent = (filecontent || "").replace(/\r/g, "");
  var info = {
    name: "",
    status: "experimental",
    shortId: filename.replace(/\.md$/, "").replace(/.*\//, ""),
    camelName: "",
    shortName: "",
    extends: [],
    notes: {},
    classIdentifier: 0,
    enums: {},
    constants: {},
    packets: [],
    tags: []
  };
  var backticksType = "";
  var enumInfo = null;
  var packetInfo = null;
  var pipePacket = null;
  var errors = [];
  var lineNo = 0;
  var noteId = "short";
  var lastCmd;
  var packetsToDescribe;
  var nextModifier = "";
  var systemInfo = includes === null || includes === void 0 ? void 0 : includes["_system"];
  var usedIds = {};

  for (var prev of values(includes || {})) {
    if (prev.classIdentifier) usedIds[prev.classIdentifier + ""] = prev.name;
  }

  try {
    if (includes["_system"] && includes["_base"]) processInclude("_base");

    for (var line of filecontent.split(/\n/)) {
      lineNo++;
      processLine(line);
    }
  } catch (e) {
    error("exception: " + e.message);
  }

  if (errors.length) info.errors = errors;

  for (var k of Object.keys(info.notes)) {
    info.notes[k] = normalizeMD(info.notes[k]);
  }

  for (var v of info.packets) {
    v.description = normalizeMD(v.description);
  }

  if (!info.camelName) info.camelName = camelize(info.name.replace(/\s+/g, " ").replace(/[ -](.)/g, (f, l) => l.toUpperCase()).replace(/[^\w]+/g, "_"));
  if (!info.shortName) info.shortName = info.camelName;
  if (info.camelName == "system") info.classIdentifier = 0x1ffffff1;else if (info.camelName == "base") info.classIdentifier = 0x1ffffff3;else if (info.camelName == "sensor") info.classIdentifier = 0x1ffffff2;
  if (info.shortName != "control" && !info.classIdentifier) error("identifier: not specified");
  info.packets.forEach(pkt => pkt.packFormat = packFormat(info, pkt));
  return info;

  function processLine(line) {
    if (backticksType) {
      if (line.trim() == "```") {
        backticksType = null;
        if (backticksType == "default") return;
      }
    } else {
      var m = /^```(.*)/.exec(line);

      if (m) {
        backticksType = m[1] || "default";
        if (backticksType == "default") return;
      }
    }

    var interpret = backticksType == "default" || line.slice(0, 4) == "    ";

    if (!interpret) {
      var _m = /^(#+)\s*(.*)/.exec(line);

      if (_m) {
        var [, hd, cont] = _m;
        packetsToDescribe = null;
        var newNoteId = cont.trim().toLowerCase();

        if (hd == "#" && !info.name) {
          info.name = cont.trim();
          line = "";
        } else if (newNoteId == "registers" || newNoteId == "commands" || newNoteId == "events" || newNoteId == "examples") {
          noteId = newNoteId;
          line = "";
        } else {
          if (noteId == "short") noteId = "long"; // keep line
        }
      }

      if (packetsToDescribe) {
        for (var iface of packetsToDescribe) {
          iface.description += line + "\n";
        }
      } else {
        if (line || info.notes[noteId]) {
          if (!info.notes[noteId]) info.notes[noteId] = "";
          info.notes[noteId] += line + "\n";
        }
      }
    } else {
      if (packetsToDescribe && packetsToDescribe[0].description) packetsToDescribe = null;
      var expanded = line.replace(/\/\/.*/, "").replace(/[?@:=,{};]/g, s => " " + s + " ").trim();
      if (!expanded) return;
      var words = expanded.split(/\s+/);
      if (/^[;,]/.test(words[words.length - 1])) words.pop();
      var cmd = words[0]; // allow for `command = Foo.Bar` etc (ie. command is not a keyword there)

      if (words[1] == ":" || words[1] == "=") cmd = ":";

      switch (cmd) {
        case "enum":
        case "flags":
          startEnum(words);
          break;

        case "define":
          constant(words);
          break;

        case "meta":
        case "pipe":
        case "report":
        case "command":
        case "const":
        case "ro":
        case "rw":
        case "event":
        case "client":
        case "volatile":
        case "lowlevel":
        case "unique":
        case "restricted":
          startPacket(words);
          break;

        case "}":
          if (packetInfo) {
            finishPacket();
          } else if (enumInfo) {
            enumInfo = null;
          } else {
            error("nothing to end here");
          }

          break;

        default:
          if (packetInfo) packetField(words);else if (enumInfo) enumMember(words);else metadataMember(words);
      }
    }
  }

  function finishPacket() {
    var paderr = paddingError(packetInfo);

    if (paderr) {
      packetInfo.packed = true;
      error(paderr + " in " + packetInfo.kind + " " + packetInfo.name);
    }

    var repeats = false;
    var hadzero = false;

    for (var p of packetInfo.fields) {
      if (hadzero) {
        error("field " + p.name + " in " + packetInfo.kind + " " + packetInfo.name + " follows a variable-sized field");
        break;
      }

      if (p.startRepeats) {
        if (repeats) error("repeats: can only be specified once; in " + packetInfo.kind + " " + packetInfo.name);
        repeats = true;
      }

      if (p.storage == 0 && p.type != "string0") {
        if (repeats) {
          error("variable-sized field " + p.name + " in " + packetInfo.kind + " " + packetInfo.name + " cannot repeat");
          break;
        }

        hadzero = true;
      }
    }

    var pid = packetInfo.identifier;
    var ranges = identifierRanges[packetInfo.kind];
    if (packetInfo.name != "set_register" && packetInfo.name != "get_register" && ranges && !ranges.some(range => range[0] <= pid && pid <= range[1])) error(packetInfo.name + " identifier 0x" + pid.toString(16) + " out of range, expected in " + ranges.map(range => "[" + range.map(r => "0x" + r.toString(16)).join(", ") + "]").join(", ")); // additional checks for specific packets

    if (["reading_error", "min_reading", "max_reading", "reading_resolution"].indexOf(packetInfo.identifierName) > -1) {
      var regid = packetInfo.identifierName;
      if (packetInfo.fields.length > 1) error(regid + " must be a number");
      var reading = info.packets.find(pkt => pkt.kind === "ro" && pkt.identifierName === "reading");
      if (!reading) error(regid + " register without a reading register");else if (packetInfo.fields[0].unit !== reading.fields[0].unit) error(regid + " unit (" + packetInfo.fields[0].unit + ") and reading unit (" + reading.fields[0].unit + ") must match");
    }

    packetInfo = null;
  }

  function normalizeMD(md) {
    return md.replace(/^\s+/, "").replace(/\s+$/, "");
  }

  function checkBraces(words) {
    if (enumInfo || packetInfo) error("already in braces");

    if (words) {
      if (words[2] != "{") error("expecting: " + words[0] + " NAME {");
    }

    enumInfo = null;
    packetInfo = null;
  }

  function forceSection(sectionId) {
    if (noteId != sectionId) {
      error("this is only allowed in ## " + sectionId + " not in ## " + noteId);
    }
  }

  function generalKind(k) {
    switch (k) {
      case "const":
      case "ro":
      case "rw":
        return "rw";

      default:
        return k;
    }
  }

  function startPacket(words) {
    checkBraces(null);
    var client = undefined;
    var lowLevel = undefined;
    var restricted = undefined;
    var unique = undefined;
    var internal = undefined;
    var volatile = undefined;

    function processAttributes() {
      while (true) {
        if (words[0] === "restricted") {
          restricted = true;
        } else if (words[0] === "client") {
          client = true;
        } else if (words[0] === "lowlevel") {
          lowLevel = true;
        } else if (words[0] === "unique") {
          unique = true;
        } else if (words[0] === "internal") {
          internal = true;
        } else if (words[0] === "volatile") {
          volatile = true;
        } else {
          break;
        }

        words.shift();
      }
    }

    processAttributes();
    var kindSt = words.shift();
    var kind = "command";

    if (kindSt == "meta") {
      forceSection("commands");
      var w2 = words.shift();
      if (w2 == "pipe") w2 = words.shift();
      if (w2 == "report" || w2 == "command") kind = "meta_pipe_" + w2;else error("invalid token after meta");
    } else if (kindSt == "pipe") {
      forceSection("commands");

      var _w = words.shift();

      if (_w == "report" || _w == "command") kind = "pipe_" + _w;else error("invalid token after pipe");
    } else {
      kind = kindSt;
    }

    processAttributes();
    if (restricted && kind !== "command") error("restricted only applies to commands");
    if (unique && kind !== "command") error("unique only applies to commands");
    if (volatile && kind != "ro" && kind != "rw") error("volatile can only modify ro or rw");
    var name = words.shift();
    var isReport = kind == "report";

    if (isReport && lastCmd && !/^\w+$/.test(name)) {
      words.unshift(name);
      name = lastCmd.name;
    }

    packetInfo = {
      kind,
      name: normalizeName(name),
      identifier: undefined,
      description: "",
      fields: [],
      internal,
      client,
      lowLevel,
      unique,
      volatile,
      restricted
    };

    if (isReport && lastCmd && name == lastCmd.name) {
      packetInfo.secondary = true;
      lastCmd.hasReport = true;
    }

    if (!packetsToDescribe) packetsToDescribe = [];
    packetsToDescribe.push(packetInfo);

    if (words[0] == "?") {
      words.shift();
      packetInfo.optional = true;
    }

    var prev = info.packets.filter(p => p.name == packetInfo.name);

    if (prev.length == 0) {// OK
    } else if (prev.length == 1 && prev[0].kind == "command" && packetInfo.kind == "report") {// OK
    } else {
      error("packet redefinition " + prev.map(p => p.name).join(", ") + " ");
    }

    if (/pipe/.test(kind)) {
      if (!pipePacket) error("pipe definitions can only occur after the pipe-open packet");else packetInfo.pipeType = pipePacket.pipeType;
    }

    var atat = words.indexOf("@");

    if (kind == "pipe_command" || kind == "pipe_report") {
      // no identifier
      packetInfo.identifier = 0;
    } else if (atat >= 0) {
      var w = words[atat + 1];

      var _v = parseInt(w);

      var isSet = true;

      if (isNaN(_v)) {
        _v = 0;
        isSet = false;

        if (systemInfo) {
          var systemPacket = systemInfo.packets.find(p => p.name == w);

          if (systemPacket) {
            _v = systemPacket.identifier;
            packetInfo.identifierName = w;
            if (systemPacket.kind != kind) error("kind mismatch on " + w + ": " + systemPacket.kind + " vs " + kind);else isSet = true;
          } else error(w + " not found in _system");
        } else {
          error(w + " cannot be resolved, since _system is missing");
        }
      } // if we are accessing the reading or reading_error register, mark it volatile


      if (kind === "ro" && (_v === 0x101 || _v === 0x106)) packetInfo.volatile = true;
      var isUser = false;
      var isSystem = false;
      var isHigh = 0x200 <= _v && _v <= 0xeff;

      switch (kind) {
        case "const":
        case "ro":
          forceSection("registers");
          isSystem = 0x100 <= _v && _v <= 0x17f;
          isUser = 0x180 <= _v && _v <= 0x1ff;
          break;

        case "rw":
          forceSection("registers");
          isSystem = 0x00 <= _v && _v <= 0x7f;
          isUser = 0x80 <= _v && _v <= 0xff;
          break;

        case "report":
        case "command":
          forceSection("commands");
          isSystem = 0x00 <= _v && _v <= 0x7f;
          isUser = 0x80 <= _v && _v <= 0xff;
          isHigh = 0x100 <= _v && _v <= 0xeff;
          break;

        case "event":
          forceSection("events");
          isSystem = 0x00 <= _v && _v <= 0x7f;
          isUser = 0x80 <= _v && _v <= 0xff;
          break;
      }

      if (isUser) {// ok
      } else if (isSystem) {
        if (!packetInfo.identifierName) warn(kind + " @ " + toHex(_v) + " should be expressed with a name from _system.md");
      } else if (isHigh) {
        if (!info.highCommands) warn(kind + " @ " + toHex(_v) + " is from the extended range but 'high: 1' missing");
      }

      packetInfo.identifier = _v;
      words.splice(atat, 2);
    } else {
      if (isReport && lastCmd) packetInfo.identifier = lastCmd.identifier;else error("@ not found at " + packetInfo.name);
    }

    if (info.packets.some(p => generalKind(p.kind) == generalKind(packetInfo.kind) && (!/pipe/.test(p.kind) || p.pipeType == packetInfo.pipeType) && p.identifier == packetInfo.identifier)) {
      error("packet identifier already used");
    }

    info.packets.push(packetInfo);
    if (kind == "command") lastCmd = packetInfo;else lastCmd = null;

    if (words[0] == "=" || words[0] == ":") {
      words.unshift("_");
      packetField(words);
      finishPacket();
    } else {
      var last = words.shift();

      if (last == "{") {
        if (words[0] == "...") words.shift();

        if (words[0] == "}") {
          words.shift();
          finishPacket();
        }

        if (words.length) error("excessive tokens: " + words[0] + "...");
      } else {
        if (last === undefined && kind == "event") {
          finishPacket();
        } else {
          error("expecting '{'");
        }
      }
    }
  }

  function rangeCheck(tp, v) {
    var [storage, type, typeShift] = normalizeStorageType(tp);
    if (isNaN(v)) return v; // error already reported

    if (storage == 0) {
      error("numeric values like " + v + " not allowed for " + tp);
      return v;
    }

    if (v < 0 && storage > 0) {
      error("negative values like " + v + " not allowed for " + tp);
      return v;
    }

    if (Math.floor(v) != v && typeShift == 0) {
      error("only integer values allowed for " + tp + "; got " + v);
      return v;
    }

    var bits = storage < 0 ? -storage * 8 - 1 : storage * 8;
    bits -= typeShift || 0; // don't use bitshift to allow for more than 32 bits

    var max = 1;

    while (bits--) {
      max *= 2;
    }

    if (-v == max) {// OK - min_int
    } else if (max == 1 && v == 1) {// we make an exception for u0.8 being set to 1
    } else {
      if (Math.abs(v) >= max) {
        error("value " + v + " is out of range for " + tp);
        return v;
      }
    }

    return v;
  }

  function parseVal(words) {
    var eq = words.shift();
    if (eq != "=" && eq != ":") error("expecting '='");
    var val = words.shift();
    return parseIntCheck(val, true);
  }

  function constant(words) {
    if (words.length != 3) {
      error("define syntax is \"define name value\" (" + words.join(" ") + "}");
      return;
    }

    var name = words[1];
    var svalue = words[2];
    var hex = /^0x/.test(svalue);
    var value = hex ? parseInt(svalue, 16) : parseInt(svalue);

    if (isNaN(value)) {
      error("invalid numeric value for constant");
      return;
    }

    info.constants[name] = {
      value,
      hex
    };
  }

  function packetField(words) {
    var _packetInfo$fields;

    if (words.length == 2 && (words[0] == "repeats" || words[0] == "segmented" || words[0] == "multi-segmented")) {
      nextModifier = words[0];
      return;
    }

    var name = normalizeName(words.shift());
    var defaultValue = undefined;
    var isOptional = undefined;
    var op = words.shift();

    if (op == "?") {
      isOptional = true;
      op = words.shift();
    }

    if (op == "=") {
      defaultValue = parseIntCheck(words.shift(), true);
      op = words.shift();
    }

    if (op != ":") error("expecting ':'");
    var tp = words.shift();
    var [storage, type, typeShift] = normalizeStorageType(tp);
    var isFloat = typeShift === null || undefined;
    var tok = words.shift();
    var unit;
    var encoding;

    if (tok != "{") {
      if (type === "string" || type === "bytes") encoding = normalizeEncoding(tok);else unit = normalizeUnit(tok);
      tok = words.shift();
    }

    if (defaultValue !== undefined) rangeCheck(tp, defaultValue);
    var shift = typeShift || undefined;

    if (unit == "/") {
      // / units should be used with ui0. data
      if (!/^(u0|i1)\.\d+$/.test(tp)) error("fraction unit must be used with u0.yyy or i1.yyy data types (got " + tp + ")");
      shift = Math.abs(storage) * 8;
      if (storage < 0) shift -= 1;
    }

    var field = {
      name,
      unit,
      encoding,
      shift,
      isFloat,
      type,
      storage,
      isSimpleType: canonicalType(storage) == type || undefined,
      defaultValue,
      isOptional,
      multiSegmented: nextModifier == "multi-segmented" || undefined,
      segmented: nextModifier == "segmented" || nextModifier == "multi-segmented" || undefined,
      startRepeats: nextModifier == "repeats" || undefined
    };
    if (!unit) delete field.unit;
    if (!encoding) delete field.encoding;

    if (tok == "{") {
      while (words.length) {
        tok = words.shift();
        if (tok == "}") break;
        tok = camelize(tok);

        switch (tok) {
          case "maxBytes":
            {
              // eslint-disable-next-line @typescript-eslint/no-extra-semi,@typescript-eslint/no-explicit-any
              ;
              field[tok] = rangeCheck("u8", parseVal(words));
              break;
            }

          case "typicalMin":
          case "typicalMax":
          case "absoluteMin":
          case "absoluteMax":
            {
              // eslint-disable-next-line @typescript-eslint/no-extra-semi,@typescript-eslint/no-explicit-any
              ;
              field[tok] = rangeCheck(tp, parseVal(words));
              break;
            }

          case "preferredInterval":
            {
              // eslint-disable-next-line @typescript-eslint/no-explicit-any
              if (packetInfo[tok] !== undefined) error("field " + tok + " already set") // eslint-disable-next-line @typescript-eslint/no-explicit-any
              ;
              packetInfo[tok] = rangeCheck("u32", parseVal(words));
              break;
            }

          default:
            error("unknown constraint: " + tok);
            break;
        }

        if (words[0] == ",") words.shift();
      }

      if (tok == "}") tok = null;
    }

    if (tok) error("excessive tokens at the end of member: " + tok + "...");
    if (field.typicalMin === undefined && field.typicalMax !== undefined && storage > 0) field.typicalMin = 0;
    if (field.absoluteMin === undefined && field.absoluteMax !== undefined && storage > 0) field.absoluteMin = 0;
    if (!field.storage && field.maxBytes) field.storage = field.maxBytes;

    if (/pipe/.test(type)) {
      packetInfo.pipeType = packetInfo.name;

      if (pipePacket && pipePacket.name == packetInfo.name && packetInfo.kind == "report") {// keep old pipePacket
      } else {
        pipePacket = packetInfo;
      }
    }

    if (!field.isOptional && (_packetInfo$fields = packetInfo.fields[packetInfo.fields.length - 1]) !== null && _packetInfo$fields !== void 0 && _packetInfo$fields.isOptional) {
      error("all fields after an optional field have to optional");
    }

    packetInfo.fields.push(field);
    nextModifier = undefined;
  }

  function startEnum(words) {
    checkBraces(null);
    if (words[2] != ":" || words[4] != "{") error("expecting: enum NAME : TYPE {");
    enumInfo = {
      name: normalizeName(words[1]),
      storage: normalizeStorageType(words[3])[0],
      isFlags: words[0] == "flags" || undefined,
      members: {}
    };
    if (info.enums[enumInfo.name]) error("enum redefinition");
    info.enums[enumInfo.name] = enumInfo;
  }

  function enumMember(words) {
    if (words[1] != "=" || words.length != 3) error("expecting: FIELD_NAME = INTEGER");
    enumInfo.members[normalizeName(words[0])] = rangeCheck(canonicalType(enumInfo.storage), parseIntCheck(words[2]));
  }

  function parseIntCheck(w, allowFloat) {
    if (allowFloat === void 0) {
      allowFloat = false;
    }

    try {
      return (0,_jdutils__WEBPACK_IMPORTED_MODULE_0__/* .parseIntFloat */ .Qv)(info, w, allowFloat);
    } catch (e) {
      error(e.message);
      return 0;
    }
  }

  function looksRandom(n) {
    var s = n.toString(16);
    var h = "0123456789abcdef";

    for (var i = 0; i < h.length; ++i) {
      var hh = h[i];
      if (s.indexOf(hh + hh + hh) >= 0) return false;
    }

    if (/f00d|dead|deaf|beef/.test(s)) return false;
    return true;
  }

  function genRandom() {
    for (;;) {
      var m = Math.random() * 0xfffffff | 0x10000000;
      if (looksRandom(m)) return m;
    }
  }

  function metadataMember(words) {
    if (!((words[1] == "=" || words[1] == ":") && (words[0] == "tags" || words.length == 3))) error("expecting: FIELD_NAME = VALUE or FIELD_NAME : VALUE");

    switch (words[0]) {
      case "extends":
        processInclude(words[2]);
        break;

      case "class":
      case "identifier":
        {
          info.classIdentifier = parseIntCheck(words[2]);
          if (info.name != "Control" && info.classIdentifier == 0) info.classIdentifier = 1;
          var gen = "how about " + toHex(genRandom());
          if (!(info.classIdentifier == 0 || 0x10000001 <= info.classIdentifier && info.classIdentifier <= 0x1fffff00 || 0x20000001 <= info.classIdentifier && info.classIdentifier <= 0x2ffffff00)) error("class identifier out of range; " + gen);
          if (!looksRandom(info.classIdentifier)) error("class identifier doesn't look random; " + gen);
          if (usedIds[info.classIdentifier + ""]) error("class identifier " + toHex(info.classIdentifier) + " already used in " + usedIds[info.classIdentifier + ""] + "; " + gen);
          break;
        }

      case "camel":
        info.camelName = words[2];
        break;

      case "short":
        info.shortName = words[2];
        break;

      case "high":
        info.highCommands = !!parseIntCheck(words[2]);
        break;

      case "status":
        if (["stable", "experimental", "deprecated"].indexOf(words[2]) > -1) info.status = words[2];else error("unknown status");
        break;

      case "group":
        info.group = capitalize(words.slice(2).join(" "));
        break;

      case "tags":
        {
          var tags = words.slice(2).filter(w => w != "," && w != ";");
          info.tags = info.tags.concat(tags);
          break;
        }

      default:
        error("unknown metadata field: " + words[0]);
        break;
    }
  }

  function processInclude(name) {
    if (name == "_system") return;
    var inner = includes[name];
    if (!inner) return error("include file not found: " + name);
    if (info.packets.some(pkt => !pkt.derived) || values(info.enums).some(e => !e.derived)) error("extends: only allowed on top of the .md file");
    if (inner.errors) errors = errors.concat(inner.errors);
    var innerEnums = clone(inner.enums);
    Object.keys(innerEnums).filter(k => !info.enums[k]).forEach(k => {
      var ie = innerEnums[k];
      ie.derived = name;
      info.enums[k] = ie;
    });
    var innerPackets = clone(inner.packets.filter(pkt => !info.packets.find(ipkt => ipkt.kind === pkt.kind && ipkt.identifier === pkt.identifier)));
    innerPackets.forEach(pkt => pkt.derived = name);
    info.packets = [].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(info.packets), (0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(innerPackets));
    if (inner.highCommands) info.highCommands = true;
    info.extends = inner.extends.concat([name]);
  }

  function clone(v) {
    return JSON.parse(JSON.stringify(v));
  }

  function error(msg) {
    if (!msg) msg = "syntax error";
    if (errors.some(e => e.line == lineNo && e.message == msg)) return;
    errors.push({
      file: filename,
      line: lineNo,
      message: msg
    });
  }

  function warn(msg) {
    if (info.camelName == "system") return; // no warnings in _system

    if (errors.some(e => e.line == lineNo && e.message == msg)) return;
    errors.push({
      file: filename,
      line: lineNo,
      message: msg
    });
  }

  function normalizeName(n) {
    if (!/^\w+$/.test(n)) error("expecting name here");
    if (n.length > 31) error("name '" + n + "' too long");
    return n;
  }

  function normalizeStorageType(tp) {
    if (info.enums[tp]) return [info.enums[tp].storage, tp, 0];
    if (!tp) error("expecting type here");
    var tp2 = tp.replace(/_t$/, "").toLowerCase();
    var m = /^([ui])(\d+)\.(\d+)$/.exec(tp2);

    if (m) {
      var a = parseIntCheck(m[2]);
      var b = parseIntCheck(m[3]);
      var len = a + b;
      if (!(len == 8 || len == 16 || len == 32 || len == 64)) error("fixed point " + tp + " can't be " + len + " bits");
      if (a == 0 && m[1] == "i") error("fixed point " + tp + " can't be i0.X; has to be at least i1.X");
      return [(m[1] == "i" ? -1 : 1) * (len >> 3), tp2, b];
    }

    switch (tp2) {
      case "bool":
        return [1, tp2, 0];

      case "i8":
      case "u8":
      case "i16":
      case "u16":
      case "i32":
      case "u32":
      case "i64":
      case "u64":
        {
          var sz = parseIntCheck(tp2.replace(/^./, "")) >> 3;
          if (tp2[0] == "i") sz = -sz;
          return [sz, tp2, 0];
        }

      case "f16":
        return [2, tp2, null];

      case "f32":
        return [4, tp2, null];

      case "f64":
        return [8, tp2, null];

      case "pipe":
        return [12, tp2, 0];

      case "pipe_port":
        return [2, tp2, 0];

      case "devid":
        return [8, tp2, 0];

      case "bytes":
      case "string":
      case "string0":
        return [0, tp2, 0];

      default:
        {
          var _m2 = /^u8\[(\d+)\]$/.exec(tp2);

          if (_m2) return [parseIntCheck(_m2[1]), tp2, 0];
          error("unknown type: " + tp + " " + tp2);
          return [4, tp2, 0];
        }
    }
  }

  function normalizeEncoding(unit) {
    return unit && encodings[unit.toLowerCase()] || undefined;
  }

  function normalizeUnit(unit) {
    if (unit === undefined || unit === null) return undefined;
    if (unitDescription[unit] || secondaryUnitConverters[unit]) return unit;
    error("expecting unit, got '" + unit + "'");
    return undefined;
  }

  function paddingError(iface) {
    var byteOffset = 0;

    for (var m of iface.fields) {
      var sz = memberSize(m);
      if (sz == 0) continue;
      var pad = sz > 4 ? 4 : sz;
      if (!/^u8\[/.test(m.type) && byteOffset % pad != 0) return "need padding of " + (pad - byteOffset % pad) + " byte(s) before " + m.name;
      byteOffset += sz;
    }

    return null;
  }
}

function values(o) {
  var r = [];

  for (var k of Object.keys(o)) {
    r.push(o[k]);
  }

  return r;
}

function fail(msg) {
  throw new Error(msg);
}

function toUpper(name) {
  return name === null || name === void 0 ? void 0 : name.replace(/([a-z])([A-Z])/g, (x, a, b) => a + "_" + b).toUpperCase();
}

function toLower(name) {
  return name === null || name === void 0 ? void 0 : name.replace(/([a-z])([A-Z])/g, (x, a, b) => a + "_" + b).toLowerCase();
}

function packed(iface) {
  if (!iface.packed) return "";else return " __attribute__((packed))";
}

function cStorage(tp) {
  if (tp == 0 || [1, 2, 4, 8].indexOf(Math.abs(tp)) < 0) return "bytes";
  if (tp < 0) return "int" + -tp * 8 + "_t";else return "uint" + tp * 8 + "_t";
}

function cSharpStorage(tp) {
  if (tp == 0 || [1, 2, 4, 8].indexOf(Math.abs(tp)) < 0) return "bytes";

  switch (tp) {
    case -1:
      return "sbyte";

    case 1:
      return "byte";

    case -2:
      return "short";

    case 2:
      return "ushort";

    case -4:
      return "int";

    case 4:
      return "uint";
  }

  return "unknown({" + tp + ")";
}

function canonicalType(tp) {
  if (tp == 0) return "bytes";
  if (tp < 0) return "i" + -tp * 8;else return "u" + tp * 8;
}

function isRegister(k) {
  return k == "ro" || k == "rw" || k == "const";
}

function toHex(n) {
  if (n === undefined) return "";
  if (n < 0) return "-" + toHex(n);
  return "0x" + n.toString(16);
}

function unitPref(f) {
  if (!f.unit) return "";else return prettyUnit(f.unit) + " ";
}

function prettyUnit(u) {
  switch (u) {
    case "us":
      return "μs";

    case "C":
      return "°C";

    case "/":
      return "ratio";

    default:
      return u;
  }
}

function toPython(info, language) {
  var r = ["# Autogenerated constants for " + info.name + " service"];
  if (Object.keys(info.enums).length) r.push("from enum import IntEnum");
  var docsLength = r.length;
  var desktop = language === "py";
  var packFormats = {};
  if (desktop) r.push("from jacdac.constants import *");
  var pref = "JD_" + toUpper(info.shortName) + "_";
  if (info.shortId[0] == "_") pref = "JD_";
  if (info.shortId[0] != "_") r.push("JD_SERVICE_CLASS_" + toUpper(info.shortName) + " = const(" + toHex(info.classIdentifier) + ")");

  for (var cst in info.constants) {
    var {
      value,
      hex
    } = info.constants[cst];
    r.push("JD_" + toUpper(cst) + " = const(" + (hex ? value.toString() : toHex(value)) + ")\n");
  }

  if (Object.keys(info.enums).length) {
    for (var en of values(info.enums).filter(en => !en.derived)) {
      r.push("");
      r.push("");
      r.push("class " + upperCamel(info.shortName) + upperCamel(en.name) + "(IntEnum):");

      for (var k of Object.keys(en.members)) {
        r.push("    " + toUpper(k) + " = const(" + toHex(en.members[k]) + ")");
      }
    }

    r.push("");
    r.push("");
  }

  var useIdentifiers = false;

  for (var pkt of info.packets) {
    if (pkt.derived) continue;

    if (!pkt.secondary && pkt.kind != "pipe_command" && pkt.kind != "pipe_report") {
      var inner = "CMD";
      if (isRegister(pkt.kind)) inner = "REG";else if (pkt.kind == "event") inner = "EV";else if (pkt.kind == "meta_pipe_command" || pkt.kind == "meta_pipe_report") inner = "PIPE";
      var val = toHex(pkt.identifier);

      if (pkt.identifierName) {
        // TODO find identifier and inline it
        val = "JD_" + inner + "_" + toUpper(pkt.identifierName);
        useIdentifiers = true;
      }

      var name = pref + inner + "_" + toUpper(pkt.name);

      if (name != val) {
        r.push(name + " = const(" + val + ")");
        if (pkt.packFormat) packFormats[name] = pkt.packFormat;
      }
    }
  }

  if (desktop && useIdentifiers) r.splice(docsLength + 1, 0, "from jacdac.system.constants import *");
  r.push(pref + "PACK_FORMATS = {");
  r.push(Object.keys(packFormats).map(k => "    " + k + ": \"" + packFormats[k] + "\"").join(",\n"));
  r.push("}");
  r.push("");
  return r.join("\n");
}

function toH(info) {
  var r = "// Autogenerated C header file for " + info.name + "\n";
  var hdDef = "_JACDAC_SPEC_" + toUpper(info.camelName) + "_H";
  r += "#ifndef " + hdDef + "\n";
  r += "#define " + hdDef + " 1\n";
  var pref = "JD_" + toUpper(info.shortName) + "_";
  if (info.shortId[0] == "_") pref = "JD_";
  if (info.shortId[0] != "_") r += "\n#define JD_SERVICE_CLASS_" + toUpper(info.shortName) + "  " + toHex(info.classIdentifier) + "\n";

  for (var cst in info.constants) {
    var {
      value,
      hex
    } = info.constants[cst];
    r += "#define " + pref + toUpper(cst) + " " + (hex ? toHex(value) : value.toString()) + "\n";
  }

  for (var en of values(info.enums).filter(en => !en.derived)) {
    var enPref = pref + toUpper(en.name);
    r += "\n// enum " + en.name + " (" + cStorage(en.storage) + ")\n";

    for (var k of Object.keys(en.members)) {
      r += "#define " + enPref + "_" + toUpper(k) + " " + toHex(en.members[k]) + "\n";
    }
  }

  for (var pkt of info.packets) {
    if (pkt.derived) continue;
    var cmt = addComment(pkt);
    r += wrapComment(cmt.comment);

    if (!pkt.secondary && pkt.kind != "pipe_command" && pkt.kind != "pipe_report") {
      var inner = "CMD";
      if (isRegister(pkt.kind)) inner = "REG";else if (pkt.kind == "event") inner = "EV";else if (pkt.kind == "meta_pipe_command" || pkt.kind == "meta_pipe_report") inner = "PIPE";
      var val = toHex(pkt.identifier);
      if (pkt.identifierName) val = "JD_" + inner + "_" + toUpper(pkt.identifierName);
      var name = pref + inner + "_" + toUpper(pkt.name);
      if (name != val) r += "#define " + name + " " + val + "\n";
    }

    var isMetaPipe = pkt.kind == "meta_pipe_report" || pkt.kind == "meta_pipe_command";

    if (cmt.needsStruct || isMetaPipe) {
      var tname = "jd_" + toLower(info.camelName) + "_" + toLower(pkt.name);
      if (pkt.kind == "report") tname += "_report";
      r += "typedef struct " + tname + " {\n";

      if (isMetaPipe) {
        r += "    uint32_t identifier; // " + toHex(pkt.identifier) + "\n";
      }

      var unaligned = "";

      for (var i = 0; i < pkt.fields.length; ++i) {
        var f = pkt.fields[i];
        var def = "";

        var _cst = cStorage(f.storage);

        var sz = memberSize(f);
        if (f.type == "string" || f.type == "string0") def = "char " + f.name + "[" + sz + "]";else if (_cst == "bytes") def = "uint8_t " + f.name + "[" + sz + "]";else def = _cst + " " + f.name; // if it's the last field and it start repeats, treat it as an array

        if (f.startRepeats && i == pkt.fields.length - 1) def += "[0]";
        def += ";";
        if (!f.isSimpleType && f.type != "devid") def += "  // " + unitPref(f) + f.type;else if (f.unit) def += " // " + prettyUnit(f.unit);
        r += "    " + unaligned + def + "\n";
        if (f.type == "string0") unaligned = "// ";
      }

      r += "}" + packed(pkt) + " " + tname + "_t;\n\n";
    }
  }

  r += "\n#endif\n";
  return r;
}

function camelize(name) {
  if (!name) return name;
  return name[0].toLowerCase() + name.slice(1).replace(/\s+/g, "_").replace(/_([a-z0-9])/gi, (_, l) => l.toUpperCase());
}
function capitalize(name) {
  if (!name) return name;
  return name[0].toUpperCase() + name.slice(1);
}

function upperCamel(name) {
  var _name;

  name = camelize(name);
  if (!((_name = name) !== null && _name !== void 0 && _name.length)) return name;
  return name[0].toUpperCase() + name.slice(1);
}

function snakify(name) {
  return name === null || name === void 0 ? void 0 : name.replace(/([a-z])([A-Z])/g, (_, a, b) => a + "_" + b);
}
function dashify(name) {
  if (!name) return name;
  return snakify(name.replace(/^_+/, "")).replace(/(_|\s)+/g, "-").toLowerCase();
}
function humanify(name) {
  return name === null || name === void 0 ? void 0 : name.replace(/([a-z])([A-Z])/g, (_, a, b) => a + " " + b).replace(/(-|_)/g, " ");
}

function addComment(pkt) {
  var comment = "";
  var typeInfo = "";
  var needsStruct = false;

  if (pkt.fields.length == 0) {
    if (pkt.kind != "event") typeInfo = "No args";
  } else if (pkt.fields.length == 1 && !pkt.fields[0].startRepeats) {
    var f0 = pkt.fields[0];
    typeInfo = cStorage(f0.storage);
    if (!f0.isSimpleType) typeInfo = f0.type + " (" + typeInfo + ")";
    typeInfo = unitPref(f0) + typeInfo;
    if (f0.name != "_") typeInfo = f0.name + " " + typeInfo;
  } else {
    needsStruct = true;
  }

  if (pkt.fields.length == 1) {
    if (isRegister(pkt.kind)) {
      var info = "";
      if (pkt.kind == "ro") info = "Read-only";else if (pkt.kind == "const") info = "Constant";else info = "Read-write";
      if (typeInfo) typeInfo = info + " " + typeInfo;else typeInfo = info;
    } else if (typeInfo) {
      typeInfo = "Argument: " + typeInfo;
    }
  }

  if (pkt.kind == "report" && pkt.secondary) {
    comment += "Report: " + typeInfo + "\n";
  } else {
    if (pkt.description) {
      var desc = pkt.description.replace(/\n\n[^]*/, "");
      if (typeInfo) desc = typeInfo + ". " + desc;
      comment = desc + "\n" + comment;
    }
  }

  return {
    comment,
    needsStruct
  };
}

function wrapComment(comment) {
  return "\n/**\n * " + comment.replace(/\n+$/, "").replace(/\n/g, "\n * ") + "\n */\n";
}

function wrapSnippet(code) {
  if (!code) return code;
  return "\n```\n" + code.replace(/^\n+/, "").replace(/\n+$/, "") + "\n```\n";
}

var TYPESCRIPT_STATIC_NAMESPACE = "jacdac";

function packFormatForField(info, fld, isStatic, useBooleans) {
  var sz = memberSize(fld);
  var szSuff = sz ? "[" + sz + "]" : "";
  var tsType = "number";
  var pyType = "float";
  var fmt = "";

  if (/^[fiu]\d+(\.\d+)?$/.test(fld.type) && 1 <= sz && sz <= 8) {
    fmt = fld.type;
    if (/^[iu]\d+$/.test(fld.type)) pyType = "int";
  } else if (/^u8\[\d*\]$/.exec(fld.type)) {
    fmt = "b" + szSuff;
  } else if (info.enums[fld.type]) {
    fmt = canonicalType(info.enums[fld.type].storage);
    pyType = tsType = upperCamel(info.camelName) + upperCamel(fld.type);
    if (isStatic) tsType = TYPESCRIPT_STATIC_NAMESPACE + "." + tsType;
  } else {
    switch (fld.type) {
      case "string":
        fmt = "s" + szSuff;
        tsType = "string";
        pyType = "str";
        break;

      case "bytes":
        fmt = "b" + szSuff;
        break;

      case "string0":
        fmt = "z";
        tsType = "string";
        pyType = "str";
        break;

      case "devid":
        fmt = "b[8]";
        break;

      case "pipe_port":
        fmt = "u16";
        break;

      case "pipe":
        fmt = "b[12]";
        break;

      case "bool":
        // TODO native bool support
        fmt = "u8";

        if (useBooleans) {
          tsType = "boolean";
          pyType = "bool";
        }

        break;

      default:
        return null;
    }
  }

  if (tsType == "number" && fmt && fmt[0] == "b") {
    tsType = "Buffer";
    pyType = "bytes";
  }

  return {
    fmt,
    tsType,
    pyType
  };
}
/**
 * Generates the format to pack/unpack a data payload for this packet
 * @param pkt
 * TODO fix this
 */


function packFormat(sinfo, pkt, useBooleans) {
  var _pkt$fields;

  if (pkt.packed || !((_pkt$fields = pkt.fields) !== null && _pkt$fields !== void 0 && _pkt$fields.length)) return undefined;
  var fmt = [];

  for (var fld of pkt.fields) {
    if (fld.startRepeats) fmt.push("r:");
    var ff = packFormatForField(sinfo, fld, false, useBooleans);
    if (!ff) return undefined;
    fmt.push(ff.fmt);
  }

  return fmt.join(" ");
}
function packInfo(info, pkt, options) {
  var {
    isStatic = false,
    useBooleans = false,
    useJDOM = false
  } = options || {};
  var {
    kind
  } = pkt;
  var vars = [];
  var vartp = [];
  var vartppy = [];
  var fmt = "";
  var repeats;
  var reptp;

  for (var i = 0; i < pkt.fields.length; ++i) {
    var fld = pkt.fields[i];
    var isArray = "";

    if (fld.startRepeats) {
      if (i == pkt.fields.length - 1) {
        isArray = "[]";
      } else {
        fmt += "r: ";
        repeats = [];
        reptp = [];
        vars.push("rest");
      }
    }

    var varname = camelize(fld.name == "_" ? pkt.name : fld.name);
    var f0 = packFormatForField(info, fld, isStatic, useBooleans);

    if (!f0 || /(reserved|padding)/.test(fld.name)) {
      if (!f0) console.log(pkt.name + "/" + fld.name + " - can't get format for '" + fld.type + "'");
      fmt += "x[" + memberSize(fld) + "] ";
    } else {
      fmt += f0.fmt + isArray + " ";
      var tp = f0.tsType;
      var tpy = f0.pyType;

      if (tp == "Buffer" && !isStatic) {
        tp = "Uint8Array";
        tpy = "bytes";
      }

      tp += isArray;
      if (isArray) tpy = "[" + tpy + "]";

      if (repeats) {
        repeats.push(varname);
        reptp.push(tp);
      } else {
        vars.push(varname);
        vartp.push(tp);
        vartppy.push(tpy);
      }
    }
  }

  fmt = fmt.replace(/ *$/, "");
  if (reptp) vartp.push("([" + reptp.join(", ") + "])[]");
  var pktName = camelize(pkt.name);
  var buffers = "";

  if (useJDOM) {
    if (kind === "command") {
      for (var _i = 0; _i < vars.length; ++_i) {
        buffers += "const " + vars[_i] + ": " + vartp[_i] + " = ...\n";
      }

      buffers += "await service.sendCmdPackedAsync(" + capitalize(info.camelName) + "Reg." + capitalize(pktName) + ", [" + vars.join(", ") + "])\n";
    } else if (isRegister(kind)) {
      buffers += "// get (register to REPORT_UPDATE event to enable background refresh)\n";
      buffers += "const " + pktName + "Reg = service.register(" + capitalize(info.camelName) + "Reg." + capitalize(pktName) + ")\n";
      buffers += "const [" + vars.join(", ") + "] : [" + vartp.join(", ") + "] = " + pktName + "Reg.unpackedValue\n";

      if (kind === "rw") {
        buffers += "// set\n";
        buffers += "await " + pktName + "Reg.sendSetPackedAsync([" + vars.join(", ") + "])\n";
      }
    }
  } else {
    buffers += "const [" + vars.join(", ") + "] = jdunpack<[" + vartp.join(", ") + "]>(buf, \"" + fmt + "\")\n";
  }

  if (repeats) buffers += "const [" + repeats.join(", ") + "] = rest[0]\n";
  buffers = buffers.replace(/\n*$/, "");
  return {
    buffers,
    names: vars,
    types: vartp,
    pyTypes: vartppy
  };
}

function memberSize(fld) {
  return Math.abs(fld.storage);
}

function toTypescript(info, language) {
  var sts = language === "sts";
  var csharp = language === "c#";
  var useNamespace = sts || csharp;
  var indent = useNamespace ? "    " : "";
  var indent2 = indent + "    ";
  var numberkw = csharp ? "uint " : "";
  var hexkw = csharp ? "byte[]" : "";
  var enumkw = csharp ? indent + "public enum" : sts ? indent + "export const enum" : "export enum";
  var exportkw = csharp ? "public" : "export";
  var cskw = csharp ? ";" : "";
  var r = useNamespace ? "namespace " + (csharp ? capitalize(TYPESCRIPT_STATIC_NAMESPACE) : TYPESCRIPT_STATIC_NAMESPACE) + " {\n" : "";
  r += indent + "// Service: " + info.name + "\n";

  if (csharp) {
    r += indent + "public static class " + capitalize(info.camelName) + "Constants\n" + indent + "{\n";
  }

  if (info.shortId[0] != "_") {
    var name = csharp ? "ServiceClass" : "SRV_" + snakify(info.camelName).toLocaleUpperCase();
    r += indent + (csharp ? indent : "") + (exportkw + " const " + numberkw + name + " = " + toHex(info.classIdentifier) + cskw + "\n");
  }

  var pref = upperCamel(info.camelName);

  for (var cst in info.constants) {
    var {
      value,
      hex
    } = info.constants[cst];
    r += indent + (csharp ? indent : "") + (exportkw + " const " + (hex ? hexkw : numberkw) + (csharp ? capitalize(camelize(cst)) : toUpper(cst)) + " = " + (hex ? value.toString() : toHex(value)) + cskw + "\n");
  }

  if (csharp) {
    r += indent + "}\n";
  }

  for (var en of values(info.enums)) {
    var enPref = pref + upperCamel(en.name);
    r += "\n" + enumkw + " " + enPref + (csharp ? ": " + cSharpStorage(en.storage) : "") + " { // " + cStorage(en.storage) + "\n";

    for (var k of Object.keys(en.members)) {
      if (sts) r += indent2 + ("//% block=\"" + humanify(k).toLowerCase() + "\"\n");
      r += indent2 + k + " = " + toHex(en.members[k]) + ",\n";
    }

    r += indent + "}\n\n";
  }

  var tsEnums = {};

  for (var pkt of info.packets) {
    if (pkt.derived) continue;
    var cmt = addComment(pkt);
    var pack = pkt.fields.length ? packInfo(info, pkt, {
      isStatic: sts,
      useBooleans: false
    }).buffers : "";
    var inner = "Cmd";
    if (isRegister(pkt.kind)) inner = "Reg";else if (pkt.kind == "event") inner = "Event";else if (pkt.kind == "meta_pipe_command" || pkt.kind == "meta_pipe_report") inner = "PipeCmd";else if (pkt.kind == "pipe_command" || pkt.kind == "pipe_report") inner = "info";
    var text = "";
    var meta = "";

    if (pkt.secondary || inner == "info") {
      if (pack) text = wrapComment(pkt.kind + " " + upperCamel(pkt.name) + (pkt.client ? "" : wrapSnippet(pack)));
    } else {
      var val = toHex(pkt.identifier);

      if (sts && pkt.kind === "event") {
        meta = "//% block=\"" + snakify(pkt.name).replace(/_/g, " ") + "\"\n";
      }

      text = "" + (wrapComment(cmt.comment + (pkt.client ? "" : wrapSnippet(pack))) + meta) + upperCamel(pkt.name) + " = " + val + ",\n";
    }

    if (text) tsEnums[inner] = (tsEnums[inner] || "") + text; // don't line const strings in makecode,
    // they don't get dropped efficiently
  }

  for (var _k of Object.keys(tsEnums)) {
    if (_k == "info") r += tsEnums[_k].replace(/^/gm, indent) + "\n\n";else {
      var _inner = tsEnums[_k].replace(/^\n+/, "").replace(/\n$/, "").replace(/\n/g, "\n    " + indent);

      r += enumkw + " " + pref + _k + " {\n    " + indent + _inner + "\n" + indent + "}\n\n";
    }
  }

  if (useNamespace) r += "}\n";
  return r.replace(/ *$/gm, "");
}

function generateDeviceSpecificationId(dev) {
  return escapeDeviceIdentifier(dev.company) + "-" + escapeDeviceNameIdentifier(dev.name) + (dev.designIdentifier || "") + (dev.version ? "v" + dev.version.toLowerCase().replace(/^v/, "").replace(/\./g, "") : "").toLowerCase();
}
function normalizeDeviceSpecification(dev) {
  var _dev$firmwares;

  var productIdentifiers = Array.from(new Set([].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(dev.productIdentifiers || []), (0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(((_dev$firmwares = dev.firmwares) === null || _dev$firmwares === void 0 ? void 0 : _dev$firmwares.map(fw => fw.productIdentifier).filter(pi => !!pi)) || []))).values()); // reorder fields

  var clone = {
    id: generateDeviceSpecificationId(dev),
    name: dev.name,
    company: dev.company,
    description: dev.description,
    repo: dev.repo,
    link: dev.link,
    services: dev.services,
    productIdentifiers: productIdentifiers,
    transport: dev.transport,
    tags: dev.tags,
    firmwares: dev.firmwares,
    version: dev.version ? dev.version.replace(/^v/, "") : undefined,
    designIdentifier: dev.designIdentifier,
    bootloader: dev.bootloader,
    status: dev.status
  }; // delete empty files

  var anyClone = clone;

  for (var key of Object.keys(anyClone)) {
    if (anyClone[key] === undefined) delete anyClone[key];
  }

  return clone;
}
function escapeDeviceIdentifier(text) {
  if (!text) text = "";
  var escaped = text.trim().toLowerCase().replace(/([^a-z0-9_-])+/gi, "-").replace(/\./g, "") // routing does not like dots
  .replace(/^-+/, "").replace(/-+$/, "");
  var id = snakify(escaped);
  return id;
}
function escapeDeviceNameIdentifier(text) {
  return escapeDeviceIdentifier(text).replace(/-/g, "");
}
function converters() {
  return {
    json: j => JSON.stringify(j, null, 2),
    c: toH,
    ts: j => toTypescript(j, "ts"),
    sts: j => toTypescript(j, "sts"),
    cs: j => toTypescript(j, "c#"),
    py: j => toPython(j, "py")
    /*
    "cpp": toHPP,
    */

  };
}
function isNumericType(field) {
  var tp = field.type;
  return !field.startRepeats && /^[uif]\d+(\.\d+)?$/.test(tp) && tp != "pipe_port" && tp != "bool";
}

/***/ }),

/***/ 30055:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fh": function() { return /* binding */ isMixinService; },
/* harmony export */   "Qv": function() { return /* binding */ parseIntFloat; }
/* harmony export */ });
/* unused harmony export packetsToRegisters */
function isMixinService(serviceClass) {
  return (serviceClass & 0x20000000) === 0x20000000;
}

function isRegister(pkt) {
  return pkt && (pkt.kind === "const" || pkt.kind === "ro" || pkt.kind === "rw");
}

function packetsToRegisters(packets) {
  return packets.filter(pkt => !pkt.derived && isRegister(pkt));
}
function parseIntFloat(spec, w, allowFloat) {
  if (allowFloat === void 0) {
    allowFloat = false;
  }

  if (/^-?0x[a-f\d_]+$/i.test(w) || /^-?[\d_]+$/.test(w)) {
    var v = parseInt(w.replace(/_/g, "")); // allow for 0x3fff_ffff syntax

    if (isNaN(v)) throw new Error("can't parse int: " + w);
    return v;
  }

  if (allowFloat && /^-?\d*(\.\d*)?(e(-?)\d+)?$/.test(w)) {
    var _v = parseFloat(w);

    if (isNaN(_v)) throw new Error("can't parse float: " + w);
    return _v;
  }

  var ww = w.split(/\./);

  if (ww.length != 2) {
    throw new Error("expecting int or enum member here");
  }

  var en = spec.enums[ww[0]];

  if (!en) {
    throw new Error(ww[0] + " is not an enum type");
  } // eslint-disable-next-line no-prototype-builtins


  if (!en.members.hasOwnProperty(ww[1])) throw new Error(ww[1] + " is not a member of " + ww[0]);
  return en.members[ww[1]] || 0;
}

/***/ }),

/***/ 3482:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "y4": function() { return /* binding */ NumberFormat; },
/* harmony export */   "hb": function() { return /* binding */ sizeOfNumberFormat; },
/* harmony export */   "Dx": function() { return /* binding */ getNumber; },
/* harmony export */   "Gy": function() { return /* binding */ setNumber; },
/* harmony export */   "zq": function() { return /* binding */ uintOfBuffer; },
/* harmony export */   "wr": function() { return /* binding */ intOfBuffer; },
/* harmony export */   "_W": function() { return /* binding */ bufferToArray; }
/* harmony export */ });
/* unused harmony export concatBufferArray */
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81794);

/** @internal */

var NumberFormat;

(function (NumberFormat) {
  NumberFormat[NumberFormat["Int8LE"] = 1] = "Int8LE";
  NumberFormat[NumberFormat["UInt8LE"] = 2] = "UInt8LE";
  NumberFormat[NumberFormat["Int16LE"] = 3] = "Int16LE";
  NumberFormat[NumberFormat["UInt16LE"] = 4] = "UInt16LE";
  NumberFormat[NumberFormat["Int32LE"] = 5] = "Int32LE";
  NumberFormat[NumberFormat["Int8BE"] = 6] = "Int8BE";
  NumberFormat[NumberFormat["UInt8BE"] = 7] = "UInt8BE";
  NumberFormat[NumberFormat["Int16BE"] = 8] = "Int16BE";
  NumberFormat[NumberFormat["UInt16BE"] = 9] = "UInt16BE";
  NumberFormat[NumberFormat["Int32BE"] = 10] = "Int32BE";
  NumberFormat[NumberFormat["UInt32LE"] = 11] = "UInt32LE";
  NumberFormat[NumberFormat["UInt32BE"] = 12] = "UInt32BE";
  NumberFormat[NumberFormat["Float32LE"] = 13] = "Float32LE";
  NumberFormat[NumberFormat["Float64LE"] = 14] = "Float64LE";
  NumberFormat[NumberFormat["Float32BE"] = 15] = "Float32BE";
  NumberFormat[NumberFormat["Float64BE"] = 16] = "Float64BE";
  NumberFormat[NumberFormat["UInt64LE"] = 17] = "UInt64LE";
  NumberFormat[NumberFormat["UInt64BE"] = 18] = "UInt64BE";
  NumberFormat[NumberFormat["Int64LE"] = 19] = "Int64LE";
  NumberFormat[NumberFormat["Int64BE"] = 20] = "Int64BE";
})(NumberFormat || (NumberFormat = {}));

function fmtInfoCore(fmt) {
  switch (fmt) {
    case NumberFormat.Int8LE:
      return -1;

    case NumberFormat.UInt8LE:
      return 1;

    case NumberFormat.Int16LE:
      return -2;

    case NumberFormat.UInt16LE:
      return 2;

    case NumberFormat.Int32LE:
      return -4;

    case NumberFormat.UInt32LE:
      return 4;

    case NumberFormat.Int64LE:
      return -8;

    case NumberFormat.UInt64LE:
      return 8;

    case NumberFormat.Int8BE:
      return -10;

    case NumberFormat.UInt8BE:
      return 10;

    case NumberFormat.Int16BE:
      return -20;

    case NumberFormat.UInt16BE:
      return 20;

    case NumberFormat.Int32BE:
      return -40;

    case NumberFormat.UInt32BE:
      return 40;

    case NumberFormat.Int64BE:
      return -80;

    case NumberFormat.UInt64BE:
      return 80;

    case NumberFormat.Float32LE:
      return 4;

    case NumberFormat.Float32BE:
      return 40;

    case NumberFormat.Float64LE:
      return 8;

    case NumberFormat.Float64BE:
      return 80;

    default:
      throw new Error("unknown format");
  }
}

function fmtInfo(fmt) {
  var size = fmtInfoCore(fmt);
  var signed = false;

  if (size < 0) {
    signed = true;
    size = -size;
  }

  var swap = false;

  if (size >= 10) {
    swap = true;
    size /= 10;
  }

  var isFloat = false;

  switch (fmt) {
    case NumberFormat.Float32LE:
    case NumberFormat.Float32BE:
    case NumberFormat.Float64LE:
    case NumberFormat.Float64BE:
      isFloat = true;
      break;
  }

  return {
    size,
    signed,
    swap,
    isFloat
  };
}
/**
 * Get the size in bytes of specified number format.
 */


function sizeOfNumberFormat(format) {
  switch (format) {
    case NumberFormat.Int8LE:
    case NumberFormat.UInt8LE:
    case NumberFormat.Int8BE:
    case NumberFormat.UInt8BE:
      return 1;

    case NumberFormat.Int16LE:
    case NumberFormat.UInt16LE:
    case NumberFormat.Int16BE:
    case NumberFormat.UInt16BE:
      return 2;

    case NumberFormat.Int32LE:
    case NumberFormat.Int32BE:
    case NumberFormat.UInt32BE:
    case NumberFormat.UInt32LE:
    case NumberFormat.Float32BE:
    case NumberFormat.Float32LE:
      return 4;

    case NumberFormat.UInt64BE:
    case NumberFormat.Int64BE:
    case NumberFormat.UInt64LE:
    case NumberFormat.Int64LE:
    case NumberFormat.Float64BE:
    case NumberFormat.Float64LE:
      return 8;
  }

  return 0;
}
function getNumber(buf, fmt, offset) {
  switch (fmt) {
    case NumberFormat.UInt8BE:
    case NumberFormat.UInt8LE:
      return buf[offset];

    case NumberFormat.Int8BE:
    case NumberFormat.Int8LE:
      return buf[offset] << 24 >> 24;

    case NumberFormat.UInt16LE:
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(buf, offset);

    case NumberFormat.Int16LE:
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(buf, offset) << 16 >> 16;

    case NumberFormat.UInt32LE:
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, offset);

    case NumberFormat.Int32LE:
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, offset) >> 0;

    case NumberFormat.UInt64LE:
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, offset) + (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, offset + 4) * 0x100000000;

    case NumberFormat.Int64LE:
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, offset) + ((0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, offset + 4) >> 0) * 0x100000000;

    default:
      {
        var inf = fmtInfo(fmt);

        if (inf.isFloat) {
          var arr = new Uint8Array(inf.size);

          for (var i = 0; i < inf.size; ++i) {
            arr[i] = buf[offset + i];
          }

          if (inf.swap) arr.reverse();
          if (inf.size == 4) return new Float32Array(arr.buffer)[0];else return new Float64Array(arr.buffer)[0];
        }

        throw new Error("unsupported fmt:" + fmt);
      }
  }
}
function setNumber(buf, fmt, offset, r) {
  var inf = fmtInfo(fmt);

  if (inf.isFloat) {
    var arr = new Uint8Array(inf.size);
    if (inf.size == 4) new Float32Array(arr.buffer)[0] = r;else new Float64Array(arr.buffer)[0] = r;
    if (inf.swap) arr.reverse();

    for (var i = 0; i < inf.size; ++i) {
      buf[offset + i] = arr[i];
    }

    return;
  }

  for (var _i = 0; _i < inf.size; ++_i) {
    var off = !inf.swap ? offset + _i : offset + inf.size - _i - 1;
    buf[off] = r & 0xff;
    r >>= 8;
  }
}
function uintOfBuffer(data) {
  var fmt;

  switch (data.length) {
    case 0:
    case 1:
      fmt = NumberFormat.UInt8LE;
      break;

    case 2:
    case 3:
      fmt = NumberFormat.UInt16LE;
      break;

    default:
      fmt = NumberFormat.UInt32LE;
      break;
  }

  return getNumber(data, fmt, 0);
}
function intOfBuffer(data) {
  var fmt;

  switch (data.length) {
    case 0:
    case 1:
      fmt = NumberFormat.Int8LE;
      break;

    case 2:
    case 3:
      fmt = NumberFormat.Int16LE;
      break;

    default:
      fmt = NumberFormat.Int32LE;
      break;
  }

  return getNumber(data, fmt, 0);
}
function bufferToArray(data, fmt) {
  var res = [];
  var sz = sizeOfNumberFormat(fmt);

  for (var off = 0; off <= data.length - sz; off += sz) {
    res.push(getNumber(data, fmt, off));
  }

  return res;
}
function concatBufferArray(chunks) {
  var sz = 0;

  for (var ch of chunks) {
    sz += ch.length;
  }

  var r = new Uint8Array(sz);
  sz = 0;

  for (var _ch of chunks) {
    r.set(_ch, sz);
    sz += _ch.length;
  }

  return r;
}

/***/ }),

/***/ 24739:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "p": function() { return /* binding */ DeviceCatalog; },
  "U": function() { return /* binding */ deviceCatalog; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
;// CONCATENATED MODULE: ./jacdac-ts/jacdac-spec/dist/devices.json
var devices_namespaceObject = JSON.parse('[{"id":"microsoft-research-jacdaccableextender38v10","name":"JacdacCableExtender ","company":"Microsoft Research","repo":"","services":[],"productIdentifiers":[928595161],"version":"1.0","designIdentifier":"38","status":"experimental"},{"id":"microsoft-research-jacdacjoystick440344v03","name":"JacdacJoystick 44-0.3","company":"Microsoft Research","link":"https://github.com/microsoft/jacdac-padauk","services":[277836886],"productIdentifiers":[832285283],"version":"0.3","designIdentifier":"44","status":"experimental"},{"id":"microsoft-research-jacdacmicrobitshieldlp29v03","name":"JacDacMicroBitShieldLP","company":"Microsoft Research","repo":"","services":[],"productIdentifiers":[1009620586],"version":"0.3","designIdentifier":"29","status":"experimental"},{"id":"microsoft-research-jacdacmotiondetection54v01","name":"JacdacMotionDetection ","company":"Microsoft Research","link":"https://github.com/microsoft/jacdac-padauk","services":[293185353],"productIdentifiers":[1030407429],"version":"0.1","designIdentifier":"54","status":"experimental"},{"id":"microsoft-research-jacdacpinheaders45v02","name":"JacdacPinHeaders ","company":"Microsoft Research","repo":"","services":[],"productIdentifiers":[970939382],"version":"0.2","designIdentifier":"45","status":"experimental"},{"id":"microsoft-research-jacdactouchtest35v10","name":"JacdacTouchTest","company":"Microsoft Research","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[677752265],"productIdentifiers":[933677864],"version":"1.0","designIdentifier":"35","status":"experimental"},{"id":"microsoft-research-jacdactouchtestelectrode36v10","name":"JacdacTouchTestElectrode","company":"Microsoft Research","repo":"","services":[677752265],"productIdentifiers":[1026187559],"version":"1.0","designIdentifier":"36","status":"experimental"},{"id":"microsoft-research-jmaccelerometer30v02","name":"JM Accelerometer","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[521405449],"productIdentifiers":[872001670],"version":"0.2","designIdentifier":"30","status":"deprecated"},{"id":"microsoft-research-jmaccelerometer30v10","name":"JM Accelerometer","company":"Microsoft Research","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[521405449],"productIdentifiers":[952491663],"tags":["kit"],"version":"1.0","designIdentifier":"30"},{"id":"microsoft-research-jmaccelerometerv20","name":"JM Accelerometer v2.0","company":"Microsoft Research","description":"A 3-axis accelerometer. 16G range.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[521405449],"productIdentifiers":[1020174761],"status":"deprecated"},{"id":"microsoft-research-jmaccessswitchinput34v13","name":"JM Access Switch Input","company":"Microsoft Research","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[343122531,522667846,277836886],"productIdentifiers":[964964313],"tags":["kit"],"version":"1.3","designIdentifier":"34"},{"id":"microsoft-research-jmaccessswitchoutputv11","name":"JM Access Switch Output","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[406840918],"productIdentifiers":[942325999],"tags":["kit"],"version":"1.1"},{"id":"microsoft-research-jmambientlight55v01","name":"JM Ambient Light","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[400333340],"productIdentifiers":[896864987],"tags":["kit"],"version":"0.1","designIdentifier":"55"},{"id":"microsoft-research-jmanalogjoystick44v02","name":"JM Analog Joystick","company":"Microsoft Research","description":"","link":"https://github.com/microsoft/jacdac-padauk","services":[277836886],"productIdentifiers":[976429228],"tags":["kit"],"version":"0.2","designIdentifier":"44"},{"id":"microsoft-research-jmarcadebtnv20","name":"JM ArcadeBtn v2.0","company":"Microsoft Research","description":"Lets you connect a single arcade button with an LED.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[343122531],"productIdentifiers":[886919574],"status":"deprecated"},{"id":"microsoft-research-jmarcadecontrolsv20","name":"JM Arcade Controls v2.0","company":"Microsoft Research","description":"Lets you connect arcade buttons and joystick to a Jacdac network.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[501915758],"productIdentifiers":[954450524],"status":"deprecated"},{"id":"microsoft-research-jmbrainesp3248v02","name":"JM Brain ESP32","company":"Microsoft Research","services":[342028028],"productIdentifiers":[1067560617],"transport":{"type":"serial","vendorId":12346},"firmwares":[{"name":"IoT Uploader","url":"https://github.com/microsoft/pxt-jacdac/releases/latest/download/uploader-esp32s2.uf2","productIdentifier":1067560617}],"version":"0.2","designIdentifier":"48","status":"deprecated"},{"id":"microsoft-research-jmbrainesp3248v03","name":"JM Brain ESP32","company":"Microsoft Research","services":[342028028],"productIdentifiers":[917230668,983264687,1067560617],"transport":{"type":"serial","vendorId":12346},"firmwares":[{"name":"IoT Uploader","url":"https://github.com/microsoft/pxt-jacdac/releases/latest/download/uploader-esp32s2.uf2","productIdentifier":1067560617}],"version":"0.3","designIdentifier":"48","bootloader":{"sequence":"reset-boot","driveName":"IOT-BOOT","firmwareFormat":"uf2","ledAnimation":"blue-glow"}},{"id":"microsoft-research-jmbrainf441v02","name":"JM Brain F4","company":"Microsoft Research","description":"","link":"https://github.com/microsoft/pxt-jacdac","services":[414210922,411425820],"productIdentifiers":[1003209864,970267564,819577746],"transport":{"type":"usb"},"tags":["kit"],"firmwares":[{"name":"HID Keyboard + Mouse","url":"https://github.com/microsoft/pxt-jacdac/releases/latest/download/hid-servers-f4.uf2","productIdentifier":819577746}],"version":"0.2","designIdentifier":"41","bootloader":{"sequence":"reset","driveName":"JACDACF4","firmwareFormat":"uf2","ledAnimation":"blue-glow"}},{"id":"microsoft-research-jmbrainrp204059v01","name":"JM Brain RP2040","company":"Microsoft Research","description":"","link":"https://github.com/microsoft/pxt-jacdac","services":[414210922,411425820],"productIdentifiers":[884301483,999933064,883764657],"transport":{"type":"usb"},"tags":["kit"],"firmwares":[{"name":"HID Keyboard + Mouse","url":"https://github.com/microsoft/pxt-jacdac/releases/latest/download/hid-servers-rp2040.uf2","productIdentifier":883764657}],"version":"0.1","designIdentifier":"59","bootloader":{"sequence":"reset-boot","driveName":"RPI-RP2","firmwareFormat":"uf2"}},{"id":"microsoft-research-jmbutton10v13","name":"JM Button","company":"Microsoft Research","description":"","link":"https://github.com/microsoft/jacdac-padauk","services":[343122531],"productIdentifiers":[896566497],"tags":["kit"],"version":"1.3","designIdentifier":"10"},{"id":"microsoft-research-jmbutton40v02","name":"JM Button","company":"Microsoft Research","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[343122531],"productIdentifiers":[946173966],"tags":["kit"],"version":"0.2","designIdentifier":"40"},{"id":"microsoft-research-jmbuttonterminal62v01","name":"JM Button Terminal","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[343122531],"productIdentifiers":[1047530059],"tags":["kit"],"version":"0.1","designIdentifier":"62"},{"id":"microsoft-research-jmbuzzerv20","name":"JM Buzzer v2.0","company":"Microsoft Research","description":"A simple buzzer.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[458731991],"productIdentifiers":[854957595],"status":"deprecated"},{"id":"microsoft-research-jmcapacitivesoilmoisturev33","name":"JM Capacitive Soil Moisture","company":"Microsoft Research","description":"JM Capacitive Soil Moisture v3.3","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[491430835],"productIdentifiers":[959462330],"version":"3.3"},{"id":"microsoft-research-jmclickairquality4v32","name":"JM-Click Airquality4","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[379362758,312849815],"productIdentifiers":[878106432],"tags":["kit"],"version":"3.2"},{"id":"microsoft-research-jmclickcolorv32","name":"JM-Click Color","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[372299111],"productIdentifiers":[1020991645],"tags":["kit"],"version":"3.2"},{"id":"microsoft-research-jmcrankbuttonv20","name":"JM Crank + Button","company":"Microsoft Research","description":"A rotary encoder with a push button.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[284830153,343122531],"productIdentifiers":[813927310],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-jmcrankv20","name":"JM Crank","company":"Microsoft Research","description":"A rotary encoder without a push button.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[284830153],"productIdentifiers":[866678795],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-jmflexv10","name":"JM Flex","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[524797638],"productIdentifiers":[840841542],"tags":["kit"],"version":"1.0"},{"id":"microsoft-research-jmgamepadv20","name":"JM GamePad","company":"Microsoft Research","description":"Lets you convert a plastic d-pad controller, so that it can be connected to a Jacdac network.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[501915758],"productIdentifiers":[919754666],"version":"2.0"},{"id":"microsoft-research-jmhapticmach101v10","name":"JM Haptic MACH-1.0","company":"Microsoft Research","description":"JM Haptic MACH-1.0","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[406832290],"productIdentifiers":[1022649261],"version":"1.0","designIdentifier":"1"},{"id":"microsoft-research-jmhub39v03","name":"JM Hub","company":"Microsoft Research","repo":"","services":[],"productIdentifiers":[917230668],"version":"0.3","designIdentifier":"39","status":"experimental"},{"id":"microsoft-research-jmkeyboardkey46v10","name":"JM Keyboard Key","company":"Microsoft Research","description":"","link":"https://github.com/microsoft/jacdac-padauk","services":[343122531],"productIdentifiers":[1067229774],"tags":["kit"],"version":"1.0","designIdentifier":"46","status":"deprecated"},{"id":"microsoft-research-jmkeyboardkey46v11","name":"JM Keyboard Key","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[343122531],"productIdentifiers":[911541523],"tags":["kit"],"version":"1.1","designIdentifier":"46","status":"deprecated"},{"id":"microsoft-research-jmkeyboardkey46v12","name":"JM Keyboard Key","company":"Microsoft Research","link":"https://github.com/microsoft/jacdac-padauk","services":[343122531],"productIdentifiers":[876567534],"tags":[],"version":"1.2","designIdentifier":"46"},{"id":"microsoft-research-jmmachinelearning","name":"JM Machine Learning","company":"Microsoft Research","description":"Lets you run machine learning models on data coming from Jacdac network.","repo":"https://github.com/microsoft/pxt-tensorflow","link":"https://github.com/microsoft/jacdac-msr-modules","services":[336566904,496034245],"productIdentifiers":[],"status":"deprecated"},{"id":"microsoft-research-jmmicrobitshieldlp29v05","name":"JM MicroBit Shield LP","company":"Microsoft Research","repo":"","services":[],"productIdentifiers":[974031363],"version":"0.5","designIdentifier":"29","status":"experimental"},{"id":"microsoft-research-jmmotorv21","name":"JM Motor","company":"Microsoft Research","description":"Lets you control a single DC motor (up to 5V; yellow plastic ones work well).","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[385895640],"productIdentifiers":[809626198],"version":"2.1","status":"deprecated"},{"id":"microsoft-research-jmpinheader45v01","name":"JM Pin Header","company":"Microsoft Research","description":"A unregulated passive adapter from Jacdac to pin headers.","link":"https://github.com/microsoft/jacdac-msr-modules","services":[],"productIdentifiers":[939230090],"version":"0.1","designIdentifier":"45","status":"deprecated"},{"id":"microsoft-research-jmpinheader45v02","name":"JM Pin Header","company":"Microsoft Research","description":"A regulated passive adapter from Jacdac to pin headers.","link":"https://github.com/microsoft/jacdac-msr-modules","services":[],"productIdentifiers":[994328823],"version":"0.2","designIdentifier":"45"},{"id":"microsoft-research-jmpower","name":"JM Power","company":"Microsoft Research","description":"Lets you supply power to Jacdac network from a MicroUSB connection (eg. a USB battery pack).","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[530893146],"productIdentifiers":[815885628],"status":"deprecated"},{"id":"microsoft-research-jmprotov20","name":"JM Proto","company":"Microsoft Research","description":"A prototype multi-function board.\\n* ``0x3f9bc26a`` JM Touch-Proto v2.0","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[],"productIdentifiers":[1052138004],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-jmpwmnpxv20","name":"JM PWM (npx)","company":"Microsoft Research","description":"A light-strip controller. Supports WS2812B, APA102, and SK9822.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[309264608],"productIdentifiers":[895762065],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-jmpwmnpxv21","name":"JM PWM (npx)","company":"Microsoft Research","description":"A light-strip controller with MicroUSB connector for power. Supports WS2812B, APA102, and SK9822.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[309264608],"productIdentifiers":[1013705700],"version":"2.1","status":"deprecated"},{"id":"microsoft-research-jmpwmservov20","name":"JM PWM (Servo)","company":"Microsoft Research","description":"A controller for a 5V servo.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[318542083],"productIdentifiers":[816890446],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-jmpwmservov21","name":"JM PWM (Servo)","company":"Microsoft Research","description":"A controller for a 5V servo, with MicroUSB connector for power.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[318542083],"productIdentifiers":[986140247],"version":"2.1","status":"deprecated"},{"id":"microsoft-research-jmrelaymach01v10","name":"JM Relay MACH-0.1","company":"Microsoft Research","description":"JM Relay MACH-0.1","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[406840918],"productIdentifiers":[900132124],"version":"1.0"},{"id":"microsoft-research-jmrgbledbar58v01","name":"JM RGB LED Bar","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[309264608],"productIdentifiers":[1046525691],"tags":["kit"],"version":"0.1","designIdentifier":"58"},{"id":"microsoft-research-jmrgbledgeneric60v01","name":"JM RGB LED Generic","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[309264608],"productIdentifiers":[967723905],"tags":["kit"],"version":"0.1","designIdentifier":"60"},{"id":"microsoft-research-jmrgbledring37v20","name":"JM RGB LED Ring","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[309264608],"productIdentifiers":[892295887],"tags":["kit"],"version":"2.0","designIdentifier":"37","status":"deprecated"},{"id":"microsoft-research-jmrgbledring37v21","name":"JM RGB LED Ring","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[309264608],"productIdentifiers":[807926135],"tags":["kit"],"version":"2.1","designIdentifier":"37"},{"id":"microsoft-research-jmrotarycontrolbuttonv10","name":"JM Rotary Control + Button","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[284830153,343122531],"productIdentifiers":[1060754715],"tags":["kit"],"version":"1.0","status":"deprecated"},{"id":"microsoft-research-jmrotarycontrolbuttonv11","name":"JM Rotary Control + Button","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[284830153,343122531],"productIdentifiers":[829647613],"tags":["kit"],"version":"1.1"},{"id":"microsoft-research-jmsinglergbled42v01","name":"JM Single RGB LED","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[506480888],"productIdentifiers":[917828732],"tags":["kit"],"version":"0.1","designIdentifier":"42"},{"id":"microsoft-research-jmslider49v10","name":"JM Slider","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[522667846],"productIdentifiers":[981005156],"version":"1.0","designIdentifier":"49","status":"deprecated"},{"id":"microsoft-research-jmslider49v11","name":"JM Slider","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[522667846],"productIdentifiers":[966423091],"tags":["kit"],"version":"1.1","designIdentifier":"49"},{"id":"microsoft-research-jmsliderv20","name":"JM Slider","company":"Microsoft Research","description":"A linear potentiometer (slider).","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[522667846],"productIdentifiers":[1043615261],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-jmsoiltemperatureds18b20v33","name":"JM Soil Temperature DS18B20","company":"Microsoft Research","description":"JM Soil Temperature DS18B20 v3.3","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[337754823],"productIdentifiers":[1039295899],"version":"3.3"},{"id":"microsoft-research-jmspeechsynthesis61v33","name":"JM Speech Synthesis","company":"Microsoft Research","repo":"https://github.com/microsoft/jacdac-msr-modules","services":[302307733],"productIdentifiers":[934541191],"version":"3.3","designIdentifier":"61"},{"id":"microsoft-research-jmtemperaturehumidity18v10a","name":"JM Temperature + Humidity","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[337754823,382210232],"productIdentifiers":[899442616],"version":"1.0A","designIdentifier":"18","status":"deprecated"},{"id":"microsoft-research-jmtemperaturehumidity18v11","name":"JM Temperature + Humidity","company":"Microsoft Research","description":"","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[337754823,382210232],"productIdentifiers":[827772887],"tags":["kit"],"version":"1.1","designIdentifier":"18"},{"id":"microsoft-research-jmtouchprotov20","name":"JM Touch-Proto","company":"Microsoft Research","description":"A multi-touch sensor based on proto board.","repo":"https://github.com/microsoft/jacdac-msr-modules","link":"https://github.com/microsoft/jacdac-msr-modules","services":[416636459],"productIdentifiers":[1067172458],"version":"2.0","status":"deprecated"},{"id":"microsoft-research-mikrobuscarrierboard53v01","name":"MikrobusCarrierBoard","company":"Microsoft Research","repo":"","services":[],"productIdentifiers":[961789360],"version":"0.1","designIdentifier":"53","status":"experimental"},{"id":"microbit-foundation-microbitv2","name":"micro:bit V2","company":"microbit foundation","description":"The new micro:bit V2 has a built-in microphone and speaker to allow sound-sensing and sound-making without the need to attach another device. It also introduces capacitive touch sensing, a power-saving mode and more computing power for the classroom.","link":"https://microsoft.github.io/jacdac-docs/hardware/kit/oob/","services":[],"productIdentifiers":[854992189,888455511,508816440],"transport":{"type":"usb"},"tags":["kit"],"firmwares":[{"name":"Out-Of-the-Box Experience","url":"https://github.com/microsoft/pxt-jacdac/releases/latest/download/microbit-oob.hex","productIdentifier":888455511},{"name":"Farm Beats Data Collector","url":"https://github.com/microsoft/pxt-jacdac/releases/latest/download/farm-beats.hex","productIdentifier":508816440}],"bootloader":{"driveName":"MICROBIT","firmwareFormat":"hex"}}]');
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/eventsource.ts
var eventsource = __webpack_require__(45484);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/random.ts
var random = __webpack_require__(80303);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var spec = __webpack_require__(26799);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/catalog.ts








function looksRandom(n) {
  var s = n.toString(16);
  var h = "0123456789abcdef";

  for (var i = 0; i < h.length; ++i) {
    var hh = h[i];
    if (s.indexOf(hh + hh + hh) >= 0) return false;
  }

  if (/f00d|dead|deaf|beef/.test(s)) return false;
  return true;
}

/**
 * The device catalog. May emit a CHANGE event if updated
 */
var DeviceCatalog = /*#__PURE__*/function (_JDEventSource) {
  (0,inheritsLoose/* default */.Z)(DeviceCatalog, _JDEventSource);

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  function DeviceCatalog() {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this._specifications = devices_namespaceObject;
    return _this;
  }
  /**
   * Update specifications list and emit `change` event.
   * @param specifications
   */


  var _proto = DeviceCatalog.prototype;

  _proto.update = function update(specifications) {
    if (JSON.stringify(this._specifications) !== JSON.stringify(specifications)) {
      this._specifications = specifications.slice(0);
      this.emit(constants/* CHANGE */.Ver);
    }
  }
  /**
   * Query device specifications
   * @param options
   * @returns
   */
  ;

  _proto.specifications = function specifications(options) {
    var {
      includeDeprecated,
      includeExperimental
    } = options || {};

    var r = this._specifications.slice(0);

    if (!includeDeprecated) r = r.filter(d => d.status !== "deprecated");
    if (!includeExperimental) r = r.filter(d => d.status !== "experimental");
    return r;
  }
  /**
   * Query device specification from a product identifier
   * @param productIdentifier
   * @returns
   */
  ;

  _proto.specificationFromProductIdentifier = function specificationFromProductIdentifier(productIdentifier) {
    if (isNaN(productIdentifier)) return undefined;

    var spec = this._specifications.find(spec => {
      var _spec$productIdentifi;

      return ((_spec$productIdentifi = spec.productIdentifiers) === null || _spec$productIdentifi === void 0 ? void 0 : _spec$productIdentifi.indexOf(productIdentifier)) > -1;
    });

    return spec;
  };

  _proto.specificationFromIdentifier = function specificationFromIdentifier(id) {
    if (id === undefined) return undefined;

    var spec = this._specifications.find(spec => spec.id === id);

    return spec;
  }
  /**
   * Gets the list of devices that use this service class
   * @param serviceClass
   * @category Specification
   */
  ;

  _proto.specificationsForService = function specificationsForService(serviceClass) {
    if (isNaN(serviceClass)) return undefined;
    return this._specifications.filter(spec => {
      var _spec$services;

      return ((_spec$services = spec.services) === null || _spec$services === void 0 ? void 0 : _spec$services.indexOf(serviceClass)) > -1;
    });
  }
  /**
   * Gets the list of vendor ids for a given transport
   * @param type
   * @returns
   */
  ;

  _proto.vendorIds = function vendorIds(type) {
    return this._specifications.filter(spec => {
      var _spec$transport;

      return ((_spec$transport = spec.transport) === null || _spec$transport === void 0 ? void 0 : _spec$transport.type) === type;
    }).map(spec => spec.transport.vendorId).filter(v => !!v);
  }
  /**
   * Checks if a vendor id match the transport
   * @param type
   * @param id
   * @returns
   */
  ;

  _proto.matchVendorId = function matchVendorId(type, id) {
    if (isNaN(id)) return false;
    var ids = this.vendorIds(type);
    return ids.indexOf(id) > -1;
  }
  /**
   * Generates a unique firmware identifier
   * @returns
   */
  ;

  _proto.uniqueFirmwareId = function uniqueFirmwareId() {
    var genFirmwareId = () => {
      var n = (0,random/* cryptoRandomUint32 */.dG)(1);
      if (n === undefined) return undefined;
      return n[0] & 0xfffffff | 0x30000000;
    };

    var id = genFirmwareId();

    while (id !== undefined && (!looksRandom(id) || deviceCatalog.specificationFromProductIdentifier(id))) {
      id = genFirmwareId();
    }

    return id !== undefined && (0,utils/* toFullHex */.$3)([id]);
  }
  /**
   * Generate a unique service identifier
   * @returns
   */
  ;

  _proto.uniqueServiceId = function uniqueServiceId() {
    var genServId = () => {
      var n = (0,random/* cryptoRandomUint32 */.dG)(1);
      if (n === undefined) return undefined;
      return n[0] & 0xfffffff | 0x10000000;
    };

    var id = genServId();

    while (id !== undefined && (!looksRandom(id) || (0,spec/* serviceSpecificationFromClassIdentifier */.d5)(id))) {
      id = genServId();
    }

    return id !== undefined && (0,utils/* toFullHex */.$3)([id]);
  }
  /**
   * Generate a unique device identifier
   * @returns
   */
  ;

  _proto.uniqueDeviceId = function uniqueDeviceId() {
    var n = (0,random/* cryptoRandomUint32 */.dG)(2);
    return n !== undefined && (0,utils/* toFullHex */.$3)([n[0], n[1]]);
  };

  return DeviceCatalog;
}(eventsource/* default */.ZP);
/**
 * The device catalog
 */

var deviceCatalog = new DeviceCatalog();

/***/ }),

/***/ 47235:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "z": function() { return /* binding */ JDClient; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94578);
/* harmony import */ var _eventsource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45484);


/**
 * Base class for clients
 * @category Clients
 */

var JDClient = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(JDClient, _JDEventSource);

  function JDClient() {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.unsubscribers = [];
    _this.unmounted = false;
    return _this;
  } // eslint-disable-next-line @typescript-eslint/no-explicit-any


  var _proto = JDClient.prototype;

  _proto.log = function log(msg) {
    console.log(msg);
  };

  _proto.mount = function mount(unsubscribe) {
    this.unmounted = false;
    if (unsubscribe && this.unsubscribers.indexOf(unsubscribe) < 0) this.unsubscribers.push(unsubscribe);
    return unsubscribe;
  };

  _proto.unmount = function unmount() {
    var us = this.unsubscribers;
    this.unsubscribers = [];
    us.forEach(u => u());
    this.unmounted = true;
  };

  return JDClient;
}(_eventsource__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP);
/* harmony default export */ __webpack_exports__["Z"] = (JDClient);

/***/ }),

/***/ 71815:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "V4G": function() { return /* binding */ CMD_GET_REG; },
/* harmony export */   "YUL": function() { return /* binding */ CMD_SET_REG; },
/* harmony export */   "eMy": function() { return /* binding */ CMD_EVENT_MASK; },
/* harmony export */   "aSR": function() { return /* binding */ CMD_EVENT_CODE_MASK; },
/* harmony export */   "T6O": function() { return /* binding */ CMD_EVENT_COUNTER_POS; },
/* harmony export */   "EME": function() { return /* binding */ CMD_EVENT_COUNTER_MASK; },
/* harmony export */   "f6P": function() { return /* binding */ CMD_TOP_MASK; },
/* harmony export */   "Pbb": function() { return /* binding */ CMD_REG_MASK; },
/* harmony export */   "V7w": function() { return /* binding */ ACK_MIN_DELAY; },
/* harmony export */   "Iwd": function() { return /* binding */ ACK_MAX_DELAY; },
/* harmony export */   "zf$": function() { return /* binding */ CMD_ADVERTISEMENT_DATA; },
/* harmony export */   "N63": function() { return /* binding */ PIPE_PORT_SHIFT; },
/* harmony export */   "Gsd": function() { return /* binding */ PIPE_COUNTER_MASK; },
/* harmony export */   "ANF": function() { return /* binding */ PIPE_CLOSE_MASK; },
/* harmony export */   "Lqh": function() { return /* binding */ PIPE_METADATA_MASK; },
/* harmony export */   "Ok7": function() { return /* binding */ JD_SERIAL_HEADER_SIZE; },
/* harmony export */   "MdP": function() { return /* binding */ JD_SERIAL_MAX_PAYLOAD_SIZE; },
/* harmony export */   "UzQ": function() { return /* binding */ JD_SERVICE_INDEX_MASK; },
/* harmony export */   "P7v": function() { return /* binding */ JD_SERVICE_INDEX_INV_MASK; },
/* harmony export */   "$rs": function() { return /* binding */ JD_SERVICE_INDEX_CRC_ACK; },
/* harmony export */   "e5Z": function() { return /* binding */ JD_SERVICE_INDEX_PIPE; },
/* harmony export */   "Ms8": function() { return /* binding */ JD_SERVICE_INDEX_MAX_NORMAL; },
/* harmony export */   "fey": function() { return /* binding */ JD_SERVICE_INDEX_CTRL; },
/* harmony export */   "e4B": function() { return /* binding */ JD_FRAME_FLAG_COMMAND; },
/* harmony export */   "amS": function() { return /* binding */ JD_FRAME_FLAG_ACK_REQUESTED; },
/* harmony export */   "Amr": function() { return /* binding */ JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS; },
/* harmony export */   "GJf": function() { return /* binding */ JD_ADVERTISEMENT_0_COUNTER_MASK; },
/* harmony export */   "byt": function() { return /* binding */ JD_DEVICE_LOST_DELAY; },
/* harmony export */   "SkZ": function() { return /* binding */ JD_DEVICE_DISCONNECTED_DELAY; },
/* harmony export */   "_$y": function() { return /* binding */ RESET_IN_TIME_US; },
/* harmony export */   "vgB": function() { return /* binding */ MAX_SERVICES_LENGTH; },
/* harmony export */   "nxl": function() { return /* binding */ NEW_LISTENER; },
/* harmony export */   "MnB": function() { return /* binding */ REMOVE_LISTENER; },
/* harmony export */   "pzj": function() { return /* binding */ CONNECTION_STATE; },
/* harmony export */   "JD8": function() { return /* binding */ CONNECT; },
/* harmony export */   "XWw": function() { return /* binding */ LOST; },
/* harmony export */   "a6y": function() { return /* binding */ FOUND; },
/* harmony export */   "BS3": function() { return /* binding */ CONNECTING; },
/* harmony export */   "PYu": function() { return /* binding */ DISCONNECT; },
/* harmony export */   "fv$": function() { return /* binding */ DISCONNECTING; },
/* harmony export */   "oNX": function() { return /* binding */ ANNOUNCE; },
/* harmony export */   "tj6": function() { return /* binding */ START; },
/* harmony export */   "d0K": function() { return /* binding */ RESTART; },
/* harmony export */   "N70": function() { return /* binding */ STOP; },
/* harmony export */   "Ver": function() { return /* binding */ CHANGE; },
/* harmony export */   "Ks0": function() { return /* binding */ EVENT; },
/* harmony export */   "kq7": function() { return /* binding */ RENDER; },
/* harmony export */   "RGM": function() { return /* binding */ REFRESH; },
/* harmony export */   "$Bi": function() { return /* binding */ MESSAGE; },
/* harmony export */   "Kvv": function() { return /* binding */ FIRMWARE_BLOBS_CHANGE; },
/* harmony export */   "h2Z": function() { return /* binding */ LATE; },
/* harmony export */   "tDM": function() { return /* binding */ GET_ATTEMPT; },
/* harmony export */   "n5V": function() { return /* binding */ SERVICE_CLIENT_ADDED; },
/* harmony export */   "w1z": function() { return /* binding */ SERVICE_CLIENT_REMOVED; },
/* harmony export */   "UJt": function() { return /* binding */ READING_SENT; },
/* harmony export */   "X5h": function() { return /* binding */ ROLE_CHANGE; },
/* harmony export */   "kqR": function() { return /* binding */ ROLE_MANAGER_CHANGE; },
/* harmony export */   "D4B": function() { return /* binding */ SERVICE_PROVIDER_ADDED; },
/* harmony export */   "$dk": function() { return /* binding */ SERVICE_PROVIDER_REMOVED; },
/* harmony export */   "GOy": function() { return /* binding */ IDENTIFY; },
/* harmony export */   "r2I": function() { return /* binding */ IDENTIFY_DURATION; },
/* harmony export */   "tdh": function() { return /* binding */ RESET; },
/* harmony export */   "D_W": function() { return /* binding */ DATA; },
/* harmony export */   "F$Q": function() { return /* binding */ CLOSE; },
/* harmony export */   "s1P": function() { return /* binding */ DEVICE_CONNECT; },
/* harmony export */   "vk6": function() { return /* binding */ DEVICE_LOST; },
/* harmony export */   "Bun": function() { return /* binding */ DEVICE_FOUND; },
/* harmony export */   "O55": function() { return /* binding */ DEVICE_DISCONNECT; },
/* harmony export */   "Hob": function() { return /* binding */ DEVICE_ANNOUNCE; },
/* harmony export */   "Jgq": function() { return /* binding */ DEVICE_PACKET_ANNOUNCE; },
/* harmony export */   "eLF": function() { return /* binding */ DEVICE_RESTART; },
/* harmony export */   "RoP": function() { return /* binding */ DEVICE_CHANGE; },
/* harmony export */   "EGX": function() { return /* binding */ DEVICE_FIRMWARE_INFO; },
/* harmony export */   "vl4": function() { return /* binding */ DEVICE_CLEAN; },
/* harmony export */   "Pbc": function() { return /* binding */ SELF_ANNOUNCE; },
/* harmony export */   "RaS": function() { return /* binding */ PACKET_SEND; },
/* harmony export */   "FrK": function() { return /* binding */ PACKET_SEND_DISCONNECT; },
/* harmony export */   "bHQ": function() { return /* binding */ PACKET_PRE_PROCESS; },
/* harmony export */   "wY8": function() { return /* binding */ PACKET_PROCESS; },
/* harmony export */   "u_S": function() { return /* binding */ PACKET_RECEIVE; },
/* harmony export */   "l4O": function() { return /* binding */ PACKET_RECEIVE_ANNOUNCE; },
/* harmony export */   "F5$": function() { return /* binding */ PACKET_EVENT; },
/* harmony export */   "deN": function() { return /* binding */ PACKET_REPORT; },
/* harmony export */   "T9O": function() { return /* binding */ PACKET_ANNOUNCE; },
/* harmony export */   "bBc": function() { return /* binding */ PACKET_INVALID_DATA; },
/* harmony export */   "fjv": function() { return /* binding */ PACKET_DATA_NORMALIZE; },
/* harmony export */   "Gb8": function() { return /* binding */ REPORT_RECEIVE; },
/* harmony export */   "rGZ": function() { return /* binding */ REPORT_UPDATE; },
/* harmony export */   "R76": function() { return /* binding */ COMMAND_RECEIVE; },
/* harmony export */   "pnR": function() { return /* binding */ ERROR; },
/* harmony export */   "jes": function() { return /* binding */ TRACE; },
/* harmony export */   "LXI": function() { return /* binding */ TIMEOUT; },
/* harmony export */   "Xxe": function() { return /* binding */ TIMEOUT_DISCONNECT; },
/* harmony export */   "ad7": function() { return /* binding */ PROGRESS; },
/* harmony export */   "beQ": function() { return /* binding */ PACKET_KIND_RW; },
/* harmony export */   "XMp": function() { return /* binding */ PACKET_KIND_RO; },
/* harmony export */   "Fv9": function() { return /* binding */ PACKET_KIND_ANNOUNCE; },
/* harmony export */   "nJc": function() { return /* binding */ REGISTER_NODE_NAME; },
/* harmony export */   "_iZ": function() { return /* binding */ REPORT_NODE_NAME; },
/* harmony export */   "b7m": function() { return /* binding */ CONST_NODE_NAME; },
/* harmony export */   "Yuh": function() { return /* binding */ EVENT_NODE_NAME; },
/* harmony export */   "M_U": function() { return /* binding */ SERVICE_NODE_NAME; },
/* harmony export */   "mLn": function() { return /* binding */ SERVICE_MIXIN_NODE_NAME; },
/* harmony export */   "tY6": function() { return /* binding */ DEVICE_NODE_NAME; },
/* harmony export */   "UX7": function() { return /* binding */ VIRTUAL_DEVICE_NODE_NAME; },
/* harmony export */   "oPG": function() { return /* binding */ BUS_NODE_NAME; },
/* harmony export */   "P58": function() { return /* binding */ COMMAND_NODE_NAME; },
/* harmony export */   "ygq": function() { return /* binding */ FIELD_NODE_NAME; },
/* harmony export */   "C1C": function() { return /* binding */ PIPE_NODE_NAME; },
/* harmony export */   "C3l": function() { return /* binding */ PIPE_REPORT_NODE_NAME; },
/* harmony export */   "REx": function() { return /* binding */ CRC_ACK_NODE_NAME; },
/* harmony export */   "BCz": function() { return /* binding */ SERVICE_TEST_NODE_NAME; },
/* harmony export */   "bh2": function() { return /* binding */ REGISTER_REFRESH_TIMEOUT; },
/* harmony export */   "ZDL": function() { return /* binding */ REGISTER_REFRESH_RETRY_0; },
/* harmony export */   "K$p": function() { return /* binding */ REGISTER_REFRESH_RETRY_1; },
/* harmony export */   "Ymh": function() { return /* binding */ REGISTER_POLL_STREAMING_INTERVAL; },
/* harmony export */   "BKx": function() { return /* binding */ REGISTER_POLL_FIRST_REPORT_INTERVAL; },
/* harmony export */   "T5P": function() { return /* binding */ REGISTER_POLL_REPORT_INTERVAL; },
/* harmony export */   "nm3": function() { return /* binding */ REGISTER_POLL_REPORT_MAX_INTERVAL; },
/* harmony export */   "oCD": function() { return /* binding */ REGISTER_POLL_REPORT_VOLATILE_INTERVAL; },
/* harmony export */   "MCW": function() { return /* binding */ REGISTER_POLL_REPORT_VOLATILE_MAX_INTERVAL; },
/* harmony export */   "Go2": function() { return /* binding */ REGISTER_OPTIONAL_POLL_COUNT; },
/* harmony export */   "cXd": function() { return /* binding */ STREAMING_DEFAULT_INTERVAL; },
/* harmony export */   "XpI": function() { return /* binding */ FLASH_MAX_DEVICES; },
/* harmony export */   "Cot": function() { return /* binding */ PING_LOGGERS_POLL; },
/* harmony export */   "k0Y": function() { return /* binding */ ROLE_MANAGER_POLL; },
/* harmony export */   "vnD": function() { return /* binding */ REFRESH_REGISTER_POLL; },
/* harmony export */   "W3h": function() { return /* binding */ USB_TRANSPORT; },
/* harmony export */   "HZx": function() { return /* binding */ BLUETOOTH_TRANSPORT; },
/* harmony export */   "NbT": function() { return /* binding */ SERIAL_TRANSPORT; },
/* harmony export */   "GII": function() { return /* binding */ PACKETIO_TRANSPORT; },
/* harmony export */   "uJd": function() { return /* binding */ WEBSOCKET_TRANSPORT; },
/* harmony export */   "jsd": function() { return /* binding */ HF2_TIMEOUT; },
/* harmony export */   "K3O": function() { return /* binding */ META_ACK; },
/* harmony export */   "GiR": function() { return /* binding */ META_ACK_FAILED; },
/* harmony export */   "YHR": function() { return /* binding */ META_PIPE; },
/* harmony export */   "cWR": function() { return /* binding */ META_GET; },
/* harmony export */   "EEP": function() { return /* binding */ META_TRACE; },
/* harmony export */   "EZK": function() { return /* binding */ META_NOT_IMPLEMENTED; },
/* harmony export */   "q5h": function() { return /* binding */ REGISTER_PRE_GET; },
/* harmony export */   "DnH": function() { return /* binding */ TRACE_FILTER_HORIZON; },
/* harmony export */   "rFG": function() { return /* binding */ EMBED_MIN_ASPECT_RATIO; },
/* harmony export */   "A0q": function() { return /* binding */ BLUETOOTH_JACDAC_SERVICE; },
/* harmony export */   "uLq": function() { return /* binding */ BLUETOOTH_JACDAC_RX_CHARACTERISTIC; },
/* harmony export */   "c5n": function() { return /* binding */ BLUETOOTH_JACDAC_TX_CHARACTERISTIC; },
/* harmony export */   "Wdl": function() { return /* binding */ TRANSPORT_CONNECT_RETRY_DELAY; },
/* harmony export */   "U5y": function() { return /* binding */ TRANSPORT_PULSE_TIMEOUT; },
/* harmony export */   "IsD": function() { return /* binding */ ERROR_MICROBIT_V1; },
/* harmony export */   "CM_": function() { return /* binding */ ERROR_MICROBIT_UNKNOWN; },
/* harmony export */   "kbU": function() { return /* binding */ ERROR_MICROBIT_JACDAC_MISSING; },
/* harmony export */   "mZW": function() { return /* binding */ ERROR_MICROBIT_INVALID_MEMORY; },
/* harmony export */   "jaw": function() { return /* binding */ ERROR_TRANSPORT_DEVICE_LOCKED; },
/* harmony export */   "l9m": function() { return /* binding */ ROLE_BOUND; },
/* harmony export */   "CCp": function() { return /* binding */ ROLE_UNBOUND; },
/* harmony export */   "E5I": function() { return /* binding */ BOUND; },
/* harmony export */   "BKI": function() { return /* binding */ UNBOUND; },
/* harmony export */   "T9W": function() { return /* binding */ JACDAC_ERROR; },
/* harmony export */   "yA$": function() { return /* binding */ TIMEOUT_ERROR_CODE; },
/* harmony export */   "KCF": function() { return /* binding */ TRANSPORT_CLOSED_ERROR_CODE; },
/* harmony export */   "bdf": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.bdf; },
/* harmony export */   "FhJ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.FhJ; },
/* harmony export */   "gaB": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.gaB; },
/* harmony export */   "qqS": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.qqS; },
/* harmony export */   "q7s": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.q7s; },
/* harmony export */   "GZs": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GZs; },
/* harmony export */   "qdU": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.qdU; },
/* harmony export */   "e96": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.e96; },
/* harmony export */   "_HP": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__._HP; },
/* harmony export */   "Dvj": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Dvj; },
/* harmony export */   "XKP": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.XKP; },
/* harmony export */   "CP7": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.CP7; },
/* harmony export */   "Rv2": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Rv2; },
/* harmony export */   "CGK": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.CGK; },
/* harmony export */   "mVd": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.mVd; },
/* harmony export */   "nWR": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.nWR; },
/* harmony export */   "OEJ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.OEJ; },
/* harmony export */   "mbk": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.mbk; },
/* harmony export */   "GLh": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GLh; },
/* harmony export */   "GOL": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GOL; },
/* harmony export */   "kQD": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.kQD; },
/* harmony export */   "P99": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.P99; },
/* harmony export */   "VSW": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.VSW; },
/* harmony export */   "toU": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.toU; },
/* harmony export */   "pwy": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.pwy; },
/* harmony export */   "V1A": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.V1A; },
/* harmony export */   "NA1": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.NA1; },
/* harmony export */   "tXW": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.tXW; },
/* harmony export */   "v$D": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.v$D; },
/* harmony export */   "ozp": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ozp; },
/* harmony export */   "Jlc": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Jlc; },
/* harmony export */   "MhZ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.MhZ; },
/* harmony export */   "Eju": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Eju; },
/* harmony export */   "PBH": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.PBH; },
/* harmony export */   "Fnq": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Fnq; },
/* harmony export */   "Q2Q": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Q2Q; },
/* harmony export */   "chA": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.chA; },
/* harmony export */   "A9D": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.A9D; },
/* harmony export */   "pvv": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.pvv; },
/* harmony export */   "xC": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.xC; },
/* harmony export */   "$42": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$42; },
/* harmony export */   "ztd": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ztd; },
/* harmony export */   "BUi": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.BUi; },
/* harmony export */   "tVE": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.tVE; },
/* harmony export */   "yB$": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.yB$; },
/* harmony export */   "lFE": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.lFE; },
/* harmony export */   "k9u": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.k9u; },
/* harmony export */   "dQg": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.dQg; },
/* harmony export */   "Abo": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Abo; },
/* harmony export */   "FRS": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.FRS; },
/* harmony export */   "DPc": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.DPc; },
/* harmony export */   "A9j": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.A9j; },
/* harmony export */   "eQc": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.eQc; },
/* harmony export */   "qit": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.qit; },
/* harmony export */   "hXV": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.hXV; },
/* harmony export */   "f6T": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.f6T; },
/* harmony export */   "cdg": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.cdg; },
/* harmony export */   "FEd": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.FEd; },
/* harmony export */   "xW$": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.xW$; },
/* harmony export */   "Xjv": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Xjv; },
/* harmony export */   "cmA": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.cmA; },
/* harmony export */   "p6N": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.p6N; },
/* harmony export */   "$xp": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$xp; },
/* harmony export */   "PZz": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.PZz; },
/* harmony export */   "ZRA": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ZRA; },
/* harmony export */   "M7y": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.M7y; },
/* harmony export */   "HUu": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.HUu; },
/* harmony export */   "BL8": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.BL8; },
/* harmony export */   "AEe": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.AEe; },
/* harmony export */   "rSD": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.rSD; },
/* harmony export */   "XXp": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.XXp; },
/* harmony export */   "cRH": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.cRH; },
/* harmony export */   "D_x": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.D_x; },
/* harmony export */   "fuX": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.fuX; },
/* harmony export */   "gz5": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.gz5; },
/* harmony export */   "OzQ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.OzQ; },
/* harmony export */   "zGD": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.zGD; },
/* harmony export */   "ydC": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ydC; },
/* harmony export */   "$v5": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$v5; },
/* harmony export */   "QF7": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.QF7; },
/* harmony export */   "tOR": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.tOR; },
/* harmony export */   "bDe": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.bDe; },
/* harmony export */   "BYF": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.BYF; },
/* harmony export */   "PWm": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.PWm; },
/* harmony export */   "IvW": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.IvW; },
/* harmony export */   "XJR": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.XJR; },
/* harmony export */   "J1$": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.J1$; },
/* harmony export */   "bKD": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.bKD; },
/* harmony export */   "IB4": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.IB4; },
/* harmony export */   "$6j": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$6j; },
/* harmony export */   "Coy": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Coy; },
/* harmony export */   "JTB": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.JTB; },
/* harmony export */   "gm9": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.gm9; },
/* harmony export */   "UPj": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.UPj; },
/* harmony export */   "YzE": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.YzE; },
/* harmony export */   "Sfn": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Sfn; },
/* harmony export */   "$GJ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$GJ; },
/* harmony export */   "GDq": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GDq; },
/* harmony export */   "bpX": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.bpX; },
/* harmony export */   "YYl": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.YYl; },
/* harmony export */   "R0$": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.R0$; },
/* harmony export */   "t9W": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.t9W; },
/* harmony export */   "Hg9": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Hg9; },
/* harmony export */   "Eef": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Eef; },
/* harmony export */   "JbI": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.JbI; },
/* harmony export */   "Mvm": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Mvm; },
/* harmony export */   "QWn": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.QWn; },
/* harmony export */   "vRO": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.vRO; },
/* harmony export */   "i04": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.i04; },
/* harmony export */   "zEX": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.zEX; },
/* harmony export */   "yWt": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.yWt; },
/* harmony export */   "pPH": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.pPH; },
/* harmony export */   "w9j": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.w9j; },
/* harmony export */   "UB9": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.UB9; },
/* harmony export */   "kVm": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.kVm; },
/* harmony export */   "yRl": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.yRl; },
/* harmony export */   "YZU": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.YZU; },
/* harmony export */   "GQv": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GQv; },
/* harmony export */   "mQG": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.mQG; },
/* harmony export */   "$Bn": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$Bn; },
/* harmony export */   "Ahc": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Ahc; },
/* harmony export */   "c2H": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.c2H; },
/* harmony export */   "NnQ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.NnQ; },
/* harmony export */   "XXX": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.XXX; },
/* harmony export */   "tky": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.tky; },
/* harmony export */   "E4D": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.E4D; },
/* harmony export */   "NMZ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.NMZ; },
/* harmony export */   "igi": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.igi; },
/* harmony export */   "lNp": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.lNp; },
/* harmony export */   "x12": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.x12; },
/* harmony export */   "$X_": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.$X_; },
/* harmony export */   "B9b": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.B9b; },
/* harmony export */   "hvg": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.hvg; },
/* harmony export */   "Bj3": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Bj3; },
/* harmony export */   "b68": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.b68; },
/* harmony export */   "GvX": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GvX; },
/* harmony export */   "OrM": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.OrM; },
/* harmony export */   "vsp": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.vsp; },
/* harmony export */   "ydR": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ydR; },
/* harmony export */   "Crg": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Crg; },
/* harmony export */   "ZZs": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ZZs; },
/* harmony export */   "O$i": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.O$i; },
/* harmony export */   "jHN": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.jHN; },
/* harmony export */   "Jz1": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Jz1; },
/* harmony export */   "U9t": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.U9t; },
/* harmony export */   "R2S": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.R2S; },
/* harmony export */   "X8d": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.X8d; },
/* harmony export */   "Szz": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Szz; },
/* harmony export */   "Mf9": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Mf9; },
/* harmony export */   "zti": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.zti; },
/* harmony export */   "M$m": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.M$m; },
/* harmony export */   "qvJ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.qvJ; },
/* harmony export */   "q9t": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.q9t; },
/* harmony export */   "pmu": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.pmu; },
/* harmony export */   "vnb": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.vnb; },
/* harmony export */   "NAh": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.NAh; },
/* harmony export */   "p2w": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.p2w; },
/* harmony export */   "Qrk": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Qrk; },
/* harmony export */   "o$M": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.o$M; },
/* harmony export */   "lSs": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.lSs; },
/* harmony export */   "TFx": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.TFx; },
/* harmony export */   "Ic7": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Ic7; },
/* harmony export */   "w4N": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.w4N; },
/* harmony export */   "AWi": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.AWi; },
/* harmony export */   "b3j": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.b3j; },
/* harmony export */   "MfB": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.MfB; },
/* harmony export */   "FNv": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.FNv; },
/* harmony export */   "fhu": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.fhu; },
/* harmony export */   "xSq": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.xSq; },
/* harmony export */   "nSK": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.nSK; },
/* harmony export */   "GKF": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GKF; },
/* harmony export */   "ZJq": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.ZJq; },
/* harmony export */   "_kj": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__._kj; },
/* harmony export */   "Jvc": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Jvc; },
/* harmony export */   "_bR": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__._bR; },
/* harmony export */   "r6v": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.r6v; },
/* harmony export */   "EmZ": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.EmZ; },
/* harmony export */   "tDt": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.tDt; },
/* harmony export */   "sdM": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.sdM; },
/* harmony export */   "eBe": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.eBe; },
/* harmony export */   "GHo": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.GHo; },
/* harmony export */   "kBD": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.kBD; },
/* harmony export */   "Xoc": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.Xoc; },
/* harmony export */   "eFM": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.eFM; },
/* harmony export */   "wrj": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.wrj; },
/* harmony export */   "EPs": function() { return /* reexport safe */ _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__.EPs; }
/* harmony export */ });
/* unused harmony exports JD_ADVERTISEMENT_0_ACK_SUPPORTED, PACKET_INVALID_CRC, PACKET_KIND_EVENT, BLUETOOTH_JACDAC_DIAG_CHARACTERISTIC, ROLE_HAS_NO_SERVICE, DOCS_ROOT */
/* harmony import */ var _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73512);
// Registers 0x001-0x07f - r/w common to all services
// Registers 0x080-0x0ff - r/w defined per-service
// Registers 0x100-0x17f - r/o common to all services
// Registers 0x180-0x1ff - r/o defined per-service
// Registers 0x200-0xeff - custom, defined per-service
// Registers 0xf00-0xfff - reserved for implementation, should not be on the wire
var CMD_GET_REG = 0x1000;
var CMD_SET_REG = 0x2000;
var CMD_EVENT_MASK = 0x8000;
var CMD_EVENT_CODE_MASK = 0x00ff;
var CMD_EVENT_COUNTER_POS = 8;
var CMD_EVENT_COUNTER_MASK = 0x7f;
var CMD_TOP_MASK = 0xf000;
var CMD_REG_MASK = 0x0fff;
var ACK_MIN_DELAY = 90;
var ACK_MAX_DELAY = 120; // Commands 0x000-0x07f - common to all services
// Commands 0x080-0xeff - defined per-service
// Commands 0xf00-0xfff - reserved for implementation
// enumeration data for CTRL, ad-data for other services

var CMD_ADVERTISEMENT_DATA = 0x00;
var PIPE_PORT_SHIFT = 7;
var PIPE_COUNTER_MASK = 0x001f;
var PIPE_CLOSE_MASK = 0x0020;
var PIPE_METADATA_MASK = 0x0040;
var JD_SERIAL_HEADER_SIZE = 16;
var JD_SERIAL_MAX_PAYLOAD_SIZE = 236;
var JD_SERVICE_INDEX_MASK = 0x3f;
var JD_SERVICE_INDEX_INV_MASK = 0xc0;
var JD_SERVICE_INDEX_CRC_ACK = 0x3f;
var JD_SERVICE_INDEX_PIPE = 0x3e;
var JD_SERVICE_INDEX_MAX_NORMAL = 0x30;
var JD_SERVICE_INDEX_CTRL = 0x00; // the COMMAND flag signifies that the device_identifier is the recipent
// (i.e., it's a command for the peripheral); the bit clear means device_identifier is the source
// (i.e., it's a report from peripheral or a broadcast message)

var JD_FRAME_FLAG_COMMAND = 0x01; // an ACK should be issued with CRC of this package upon reception

var JD_FRAME_FLAG_ACK_REQUESTED = 0x02; // the device_identifier contains target service class number

var JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS = 0x04;
var JD_ADVERTISEMENT_0_COUNTER_MASK = 0x0000000f;
var JD_ADVERTISEMENT_0_ACK_SUPPORTED = 0x00000100; // time withouth seeing a package to be considered "lost", 2x announce interval

var JD_DEVICE_LOST_DELAY = 1500; // time without seeing a packet to be considered "disconnected"

var JD_DEVICE_DISCONNECTED_DELAY = 5000;
var RESET_IN_TIME_US = 2000000;
var MAX_SERVICES_LENGTH = 59;
var NEW_LISTENER = "newListener";
var REMOVE_LISTENER = "removeListener";
var CONNECTION_STATE = "connectionState";
var CONNECT = "connect";
var LOST = "lost";
var FOUND = "found";
var CONNECTING = "connecting";
var DISCONNECT = "disconnect";
var DISCONNECTING = "disconnecting";
var ANNOUNCE = "announce";
var START = "start";
var RESTART = "restart";
var STOP = "stop";
var CHANGE = "change";
var EVENT = "event";
var RENDER = "render";
var REFRESH = "refresh";
var MESSAGE = "message";
var FIRMWARE_BLOBS_CHANGE = "firmwareBlobsChange";
var LATE = "late";
var GET_ATTEMPT = "getAttempt";
var SERVICE_CLIENT_ADDED = "serviceClientAdded";
var SERVICE_CLIENT_REMOVED = "serviceClientRemoved";
var READING_SENT = "readingSent";
var ROLE_CHANGE = "roleChange";
var ROLE_MANAGER_CHANGE = "roleManagerChange";
var SERVICE_PROVIDER_ADDED = "serviceProviderAdded";
var SERVICE_PROVIDER_REMOVED = "serviceProviderRemoved";
var IDENTIFY = "identify";
var IDENTIFY_DURATION = 2000;
var RESET = "reset";
var DATA = "data";
var CLOSE = "close";
var DEVICE_CONNECT = "deviceConnect";
var DEVICE_LOST = "deviceLost";
var DEVICE_FOUND = "deviceFound";
var DEVICE_DISCONNECT = "deviceDisconnect";
var DEVICE_ANNOUNCE = "deviceAnnounce";
var DEVICE_PACKET_ANNOUNCE = "devicePacketAnnounce";
var DEVICE_RESTART = "deviceRestart";
var DEVICE_CHANGE = "deviceChange";
var DEVICE_FIRMWARE_INFO = "firmwareInfo";
var DEVICE_CLEAN = "deviceClean";
var SELF_ANNOUNCE = "selfAnnounce";
var PACKET_SEND = "packetSend";
var PACKET_SEND_DISCONNECT = "packetSendDisconnect";
var PACKET_PRE_PROCESS = "packetPreProcess";
var PACKET_PROCESS = "packetProcess";
var PACKET_RECEIVE = "packetReceive";
var PACKET_RECEIVE_ANNOUNCE = "packetReceiveAnnounce";
var PACKET_EVENT = "packetEvent";
var PACKET_REPORT = "packetReport";
var PACKET_ANNOUNCE = "packetAnnounce";
var PACKET_INVALID_CRC = "packetInvalidCrc";
var PACKET_INVALID_DATA = "packetInvalidData";
var PACKET_DATA_NORMALIZE = "packetDataNormalize";
var REPORT_RECEIVE = "reportReceive";
var REPORT_UPDATE = "reportUpdate";
var COMMAND_RECEIVE = "commandReceive";
var ERROR = "error";
var TRACE = "trace";
var TIMEOUT = "timeout";
var TIMEOUT_DISCONNECT = "timeoutDisconnect";
var PROGRESS = "progress";
var PACKET_KIND_RW = "rw";
var PACKET_KIND_RO = "ro";
var PACKET_KIND_EVENT = "event";
var PACKET_KIND_ANNOUNCE = "announce";
var REGISTER_NODE_NAME = "register";
var REPORT_NODE_NAME = "report";
var CONST_NODE_NAME = "const";
var EVENT_NODE_NAME = "event";
var SERVICE_NODE_NAME = "service";
var SERVICE_MIXIN_NODE_NAME = "serviceMixin";
var DEVICE_NODE_NAME = "device";
var VIRTUAL_DEVICE_NODE_NAME = "virtualdevice";
var BUS_NODE_NAME = "bus";
var COMMAND_NODE_NAME = "command";
var FIELD_NODE_NAME = "field";
var PIPE_NODE_NAME = "pipe";
var PIPE_REPORT_NODE_NAME = "pipe_report";
var CRC_ACK_NODE_NAME = "crcAck";
var SERVICE_TEST_NODE_NAME = "serviceTest";
var REGISTER_REFRESH_TIMEOUT = 150;
var REGISTER_REFRESH_RETRY_0 = 30;
var REGISTER_REFRESH_RETRY_1 = 80;
var REGISTER_POLL_STREAMING_INTERVAL = 5000;
var REGISTER_POLL_FIRST_REPORT_INTERVAL = 400;
var REGISTER_POLL_REPORT_INTERVAL = 5001;
var REGISTER_POLL_REPORT_MAX_INTERVAL = 60000;
var REGISTER_POLL_REPORT_VOLATILE_INTERVAL = 1000;
var REGISTER_POLL_REPORT_VOLATILE_MAX_INTERVAL = 5000;
var REGISTER_OPTIONAL_POLL_COUNT = 3;
var STREAMING_DEFAULT_INTERVAL = 50;
var FLASH_MAX_DEVICES = 6;
var PING_LOGGERS_POLL = 2400;
var ROLE_MANAGER_POLL = 1500;
var REFRESH_REGISTER_POLL = 50;
var USB_TRANSPORT = "usb";
var BLUETOOTH_TRANSPORT = "bluetooth";
var SERIAL_TRANSPORT = "serial";
var PACKETIO_TRANSPORT = "packetio";
var WEBSOCKET_TRANSPORT = "web";
var HF2_TIMEOUT = 1000;
var META_ACK = "ACK";
var META_ACK_FAILED = "ACK_FAILED";
var META_PIPE = "PIPE";
var META_GET = "GET";
var META_TRACE = "TRACE";
var META_NOT_IMPLEMENTED = "NOT_IMPLEMENTED";
var REGISTER_PRE_GET = "registerPreGet";
var TRACE_FILTER_HORIZON = 100;
var EMBED_MIN_ASPECT_RATIO = 1.22;
var BLUETOOTH_JACDAC_SERVICE = "f8530001-a97f-49f5-a554-3e373fbea2d5";
var BLUETOOTH_JACDAC_RX_CHARACTERISTIC = "f8530002-a97f-49f5-a554-3e373fbea2d5";
var BLUETOOTH_JACDAC_TX_CHARACTERISTIC = "f8530003-a97f-49f5-a554-3e373fbea2d5";
var BLUETOOTH_JACDAC_DIAG_CHARACTERISTIC = "f8530004-a97f-49f5-a554-3e373fbea2d5";
var TRANSPORT_CONNECT_RETRY_DELAY = 500;
var TRANSPORT_PULSE_TIMEOUT = 60000; // don't interfere with manual flashing of devices

var ERROR_MICROBIT_V1 = "microbit/v1-not-supported";
var ERROR_MICROBIT_UNKNOWN = "microbit/unknown-hardware-revision";
var ERROR_MICROBIT_JACDAC_MISSING = "microbit/jacdac-missing";
var ERROR_MICROBIT_INVALID_MEMORY = "microbit/invalid-memory";
var ERROR_TRANSPORT_DEVICE_LOCKED = "transport/device-locked";
var ROLE_BOUND = "roleBound";
var ROLE_UNBOUND = "roleUnbound";
var ROLE_HAS_NO_SERVICE = "roleHasNoService";
var BOUND = "bound";
var UNBOUND = "unbound";
var JACDAC_ERROR = "JacdacError";
var TIMEOUT_ERROR_CODE = "Timeout";
var TRANSPORT_CLOSED_ERROR_CODE = "TransportClosed"; // eslint-disable-next-line prefer-const

var DOCS_ROOT = "https://microsoft.github.io/jacdac-docs/";


/***/ }),

/***/ 52800:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "uY": function() { return /* binding */ errorCode; }
/* harmony export */ });
/* unused harmony export JDError */
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94578);
/* harmony import */ var _babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52146);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);



/**
 * Common Jacdac error type
 * @category Runtime
 */

var JDError = /*#__PURE__*/function (_Error) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(JDError, _Error);

  function JDError(message, jacdacName) {
    var _this;

    _this = _Error.call(this, message) || this;
    _this.jacdacName = jacdacName;
    _this.name = _constants__WEBPACK_IMPORTED_MODULE_0__/* .JACDAC_ERROR */ .T9W;
    return _this;
  }

  return JDError;
}( /*#__PURE__*/(0,_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(Error));
/* harmony default export */ __webpack_exports__["ZP"] = (JDError);
/**
 * Extract the Jacdac error code if any
 * @param e
 * @returns
 * @category Runtime
 */

function errorCode(e) {
  var jacdacCode = e.name === _constants__WEBPACK_IMPORTED_MODULE_0__/* .JACDAC_ERROR */ .T9W ? e === null || e === void 0 ? void 0 : e.jacdacName : undefined;
  if (jacdacCode) return jacdacCode;
  var deviceLocked = e.name == "NetworkError" && /unable to claim interface/i.test(e.message);
  if (deviceLocked) return _constants__WEBPACK_IMPORTED_MODULE_0__/* .ERROR_TRANSPORT_DEVICE_LOCKED */ .jaw;
  return undefined;
}

/***/ }),

/***/ 45484:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BX": function() { return /* binding */ dependencyId; },
/* harmony export */   "aE": function() { return /* binding */ JDEventSource; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(43144);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21258);
/* harmony import */ var _trace_trace__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(61649);




/**
 * @category JDOM
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any

function normalizeEventNames(eventNames) {
  if (!eventNames) eventNames = [];
  if (typeof eventNames === "string") eventNames = [eventNames];
  return eventNames;
}
/**
 * Base interface for evented nodes in Jacdac
 * @category JDOM
 */


/**
 * Given a node or set of nodes, generate a stable string that can be used to track dependencies in frameworks like React.
 * @param nodes
 * @returns
 * @category JDOM
 */
function dependencyId(nodes) {
  if (Array.isArray(nodes)) return (nodes === null || nodes === void 0 ? void 0 : nodes.map(node => (node === null || node === void 0 ? void 0 : node.nodeId) || "?").join(",")) || "";else return (nodes === null || nodes === void 0 ? void 0 : nodes.nodeId) || "";
}
var nextNodeId = 0;
/**
 * Base class for evented nodes in Jacdac
 * @category JDOM
 */

var JDEventSource = /*#__PURE__*/function () {
  /**
   * Gets an internal unique node identifier, mostly used for debugging.
   * @category JDOM
   */

  /**
   * Gets a counter of event emit calls.
   * @category JDOM
   */

  /**
   * Gets a counter map from events to new listener counts
   * @category JDOM
   */

  /**
   * @internal
   */
  function JDEventSource() {
    this.nodeId = nextNodeId++;
    this.listeners = {};
    this.eventStats = {};
    this.newListenerStats = undefined;
  }
  /**
   * Registers a handler for one or more events
   * @param eventName name or names of the events to subscribe
   * @param handler handler to register
   * @returns current object instance
   * @category JDOM
   */


  var _proto = JDEventSource.prototype;

  _proto.on = function on(eventName, handler) {
    if (!handler) return this;
    normalizeEventNames(eventName).forEach(eventName => this.addListenerInternal(eventName, handler, false));
    return this;
  }
  /**
   * Unregisters a handler for one or more events
   * @param eventName name or names of the events to subscribe
   * @param handler handler to unregister
   * @returns current object instance
   * @category JDOM
   */
  ;

  _proto.off = function off(eventName, handler) {
    normalizeEventNames(eventName).forEach(eventName => this.removeListenerInternal(eventName, handler));
    return this;
  }
  /**
   * Registers a handler for one or more events to run only once.
   * @param eventName name or names of the events to subscribe
   * @param handler handler to execute
   * @returns current object instance
   * @category JDOM
   */
  ;

  _proto.once = function once(eventName, handler) {
    normalizeEventNames(eventName).forEach(eventName => this.addListenerInternal(eventName, handler, true));
    return this;
  };

  _proto.addListenerInternal = function addListenerInternal(eventName, handler, once) {
    if (!eventName || !handler) {
      return;
    }

    var eventListeners = this.listeners[eventName] || (this.listeners[eventName] = []);
    var listener = eventListeners.find(listener => listener.handler === handler);

    if (listener) {
      listener.once = !!once;
      return;
    }

    eventListeners.push({
      handler,
      once: !!once,
      // debug only collection of trace for leak detection
      stackTrace: _flags__WEBPACK_IMPORTED_MODULE_1__/* ["default"].diagnostics */ .Z.diagnostics && (0,_trace_trace__WEBPACK_IMPORTED_MODULE_2__/* .stack */ .kn)()
    });
    this.emit(_constants__WEBPACK_IMPORTED_MODULE_0__/* .NEW_LISTENER */ .nxl, eventName, handler); // diagnostics

    if (_flags__WEBPACK_IMPORTED_MODULE_1__/* ["default"].diagnostics */ .Z.diagnostics) {
      if (!this.newListenerStats) this.newListenerStats = {};
      this.newListenerStats[eventName] = (this.newListenerStats[eventName] || 0) + 1;
    }
  };

  _proto.removeListenerInternal = function removeListenerInternal(eventName, handler) {
    if (!eventName || !handler) return;
    var eventListeners = this.listeners[eventName];

    if (eventListeners) {
      for (var i = 0; i < eventListeners.length; ++i) {
        var listener = eventListeners[i];

        if (handler === listener.handler) {
          eventListeners.splice(i, 1);
          this.emit(_constants__WEBPACK_IMPORTED_MODULE_0__/* .REMOVE_LISTENER */ .MnB, eventName, handler);
          return;
        }
      }
    }
  }
  /**
   * Synchronously calls each of the listeners registered for the event named eventName,
   * in the order they were registered, passing the supplied arguments to each.
   * @param eventName
   * @param args
   * @category JDOM
   */
  ;

  _proto.emit = function emit(eventName) {
    if (!eventName) return false; // track event stats

    this.eventStats[eventName] = (this.eventStats[eventName] || 0) + 1;
    var eventListeners = this.listeners[eventName];

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (!eventListeners || eventListeners.length == 0) {
      // report unhandled errors
      if (eventName == _constants__WEBPACK_IMPORTED_MODULE_0__/* .ERROR */ .pnR) console.error(args[0]);
      return false;
    }

    for (var i = 0; i < eventListeners.length; ++i) {
      var listener = eventListeners[i];
      var handler = listener.handler;

      if (listener.once) {
        eventListeners.splice(i, 1);
        --i;
      }

      try {
        // eslint-disable-next-line prefer-spread
        handler.apply(null, args);
      } catch (e) {
        // avoid recursive errors in error handler
        if (eventName !== _constants__WEBPACK_IMPORTED_MODULE_0__/* .ERROR */ .pnR) this.emit(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ERROR */ .pnR, e);
      }
    }

    return true;
  }
  /**
   * Gets the number of listeners for a given event
   * @param eventName name of the event
   * @returns number of registered handlers
   * @category JDOM
   */
  ;

  _proto.listenerCount = function listenerCount(eventName) {
    if (!eventName) return 0;
    var listeners = this.listeners[eventName];
    return (listeners === null || listeners === void 0 ? void 0 : listeners.length) || 0;
  }
  /**
   * Gets the list stack trace where an event was registered. Only enabled if ``Flags.debug`` is true.
   * @param eventName name of the event
   * @returns stack traces where a listener was added
   * @category JDOM
   */
  ;

  _proto.listenerStackTraces = function listenerStackTraces(eventName) {
    var listeners = this.listeners[eventName];
    return listeners === null || listeners === void 0 ? void 0 : listeners.map(listener => listener.stackTrace);
  }
  /**
   * Returns an array listing the events for which the emitter has registered listeners.
   * @category JDOM
   */
  ;

  _proto.eventNames = function eventNames() {
    return Object.keys(this.listeners);
  }
  /**
   * Creates an observable from the given event
   * @param eventName
   * @category JDOM
   */
  ;

  _proto.observe = function observe(eventName) {
    return new EventObservable(this, normalizeEventNames(eventName));
  }
  /**
   * Subscribes to an event and returns the unsubscription handler
   * @param eventName
   * @param next
   * @category JDOM
   */
  ;

  _proto.subscribe = function subscribe(eventName, next) {
    var observer = this.observe(eventName);
    return observer.subscribe({
      next
    }).unsubscribe;
  }
  /**
   * Gets a counter for the ``CHANGE`` event.
   * @category JDOM
   */
  ;

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(JDEventSource, [{
    key: "changeId",
    get: function get() {
      return this.eventStats[_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver] || 0;
    }
  }]);

  return JDEventSource;
}();

var EventObservable = /*#__PURE__*/function () {
  function EventObservable(eventEmitter, eventNames) {//console.log(`obs`, this.eventNames)

    this.eventEmitter = eventEmitter;
    this.eventNames = eventNames;
  }

  var _proto2 = EventObservable.prototype;

  _proto2.subscribe = function subscribe(observer) {
    //console.log(`on`, this.eventNames, observer)
    if (observer.next) this.eventEmitter.on(this.eventNames, observer.next);
    if (observer.error) this.eventEmitter.on(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ERROR */ .pnR, observer.error); // never completes

    return {
      unsubscribe: () => {
        //console.log(`off`, this.eventNames, observer)
        if (observer.next) this.eventEmitter.off(this.eventNames, observer.next);
        if (observer.error) this.eventEmitter.off(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ERROR */ .pnR, observer.error);
      }
    };
  };

  return EventObservable;
}();

/* harmony default export */ __webpack_exports__["ZP"] = (JDEventSource);

/***/ }),

/***/ 21258:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Flags */
/**
 * Various flags to control the runtime environment
 * @category Runtime
 */
var Flags = function Flags() {};
Flags.diagnostics = false;
Flags.trace = false;
Flags.webUSB = true;
Flags.webSerial = true;
Flags.webBluetooth = false;
/* harmony default export */ __webpack_exports__["Z"] = (Flags);

/***/ }),

/***/ 91758:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ub": function() { return /* binding */ parseFirmwareFile; },
/* harmony export */   "Kl": function() { return /* binding */ updateApplicable; },
/* harmony export */   "oN": function() { return /* binding */ flashFirmwareBlob; },
/* harmony export */   "is": function() { return /* binding */ sendStayInBootloaderCommand; }
/* harmony export */ });
/* unused harmony export parseUF2Firmware */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15861);
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3482);
/* harmony import */ var _packet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57683);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71815);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81794);
/* harmony import */ var _pack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(91635);
/* harmony import */ var _pretty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10913);
/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21258);









var BL_SUBPAGE_SIZE = 208;
var BL_RETRIES = 15;
var BL_SESSION_DELAY = 5;
var BL_PAGE_DELAY = 5;
var _startTime = 0;
var uf2ExtTags = {
  version: -0x9fc7bc,
  name: -0x650d9d,
  pageSize: 0x0be9f7,
  productIdentifier: 0xc8a729
};
/**
 * UF2 page data structure
 * @category Firmware
 * @internal
 */

function timestamp() {
  if (!_startTime) _startTime = Date.now();
  return Date.now() - _startTime;
}

function log(msg) {
  if (_flags__WEBPACK_IMPORTED_MODULE_6__/* ["default"].diagnostics */ .Z.diagnostics) console.debug("BL [" + timestamp() + "ms]: " + msg);
}

var FlashClient = /*#__PURE__*/function () {
  function FlashClient(bus, adpkt) {
    this.bus = bus;
    var d = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .bufferToArray */ ._W)(adpkt.data, _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE);
    this.pageSize = d[1];
    this.flashSize = d[2];
    this.dev_class = d[3];
    this.device = adpkt.device;
    this.handlePacket = this.handlePacket.bind(this);
  }

  var _proto = FlashClient.prototype;

  _proto.handlePacket = function handlePacket(pkt) {
    if (pkt.serviceCommand == _constants__WEBPACK_IMPORTED_MODULE_2__/* .BootloaderCmd.PageData */ .e96.PageData) this.lastStatus = pkt;
  };

  _proto.start = function start() {
    this.device.on(_constants__WEBPACK_IMPORTED_MODULE_2__/* .PACKET_REPORT */ .deN, this.handlePacket);
  };

  _proto.stop = function stop() {
    this.device.off(_constants__WEBPACK_IMPORTED_MODULE_2__/* .PACKET_REPORT */ .deN, this.handlePacket);
  };

  _proto.sendCommandAsync = /*#__PURE__*/function () {
    var _sendCommandAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (p) {
      p.serviceIndex = 1;
      yield p.sendCmdAsync(this.device);
    });

    function sendCommandAsync(_x) {
      return _sendCommandAsync.apply(this, arguments);
    }

    return sendCommandAsync;
  }();

  _proto.startFlashAsync = /*#__PURE__*/function () {
    var _startFlashAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
      this.sessionId = Math.random() * 0x10000000 | 0;

      for (var d of this.classClients) {
        d.start();
        log("flashing " + d.device.shortId + "; available flash=" + d.flashSize / 1024 + "kb; page=" + d.pageSize + "b");
      }

      var setsession = _packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].jdpacked */ .Z.jdpacked(_constants__WEBPACK_IMPORTED_MODULE_2__/* .BootloaderCmd.SetSession */ .e96.SetSession, "u32", [this.sessionId]);
      this.allPending();

      for (var i = 0; i < BL_RETRIES; ++i) {
        for (var _d of this.classClients) {
          if (_d.pending) {
            if (_d.lastStatus && _d.lastStatus.getNumber(_buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE, 0) == this.sessionId) {
              _d.pending = false;
            } else {
              _d.lastStatus = null;
              log("set session " + this.sessionId + " on " + _d.device);
              yield _d.sendCommandAsync(setsession);
            }

            yield this.bus.delay(BL_SESSION_DELAY);
          }
        }

        if (this.numPending() == 0) break;
        yield this.waitForStatusAsync();
      }

      if (this.numPending()) throw new Error("Can't set session id");
    });

    function startFlashAsync() {
      return _startFlashAsync.apply(this, arguments);
    }

    return startFlashAsync;
  }();

  _proto.endFlashAsync = /*#__PURE__*/function () {
    var _endFlashAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
      for (var f of this.classClients) {
        yield this.bus.delay(10);
        yield f.device.sendCtrlCommand(_constants__WEBPACK_IMPORTED_MODULE_2__/* .ControlCmd.Reset */ .VSW.Reset);
      }
    });

    function endFlashAsync() {
      return _endFlashAsync.apply(this, arguments);
    }

    return endFlashAsync;
  }();

  _proto.allPending = function allPending() {
    for (var c of this.classClients) {
      c.pending = true;
      c.lastStatus = null;
    }
  };

  _proto.numPending = function numPending() {
    var num = 0;

    for (var c of this.classClients) {
      if (c.pending) num++;
    }

    return num;
  };

  _proto.waitForStatusAsync = /*#__PURE__*/function () {
    var _waitForStatusAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
      for (var i = 0; i < 100; ++i) {
        if (this.classClients.every(c => c.lastStatus != null)) break;
        yield this.bus.delay(5);
      }
    });

    function waitForStatusAsync() {
      return _waitForStatusAsync.apply(this, arguments);
    }

    return waitForStatusAsync;
  }();

  _proto.flashPage = /*#__PURE__*/function () {
    var _flashPage = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (page) {
      var pageAddr = page.targetAddress;
      var pageSize = this.pageSize;
      var numSubpage = (pageSize + BL_SUBPAGE_SIZE - 1) / BL_SUBPAGE_SIZE | 0;
      log("flash " + (0,_pretty__WEBPACK_IMPORTED_MODULE_5__/* .prettySize */ .or)(this.pageSize) + " at " + (pageAddr & 0xffffff).toString(16));
      if (page.data.length != this.pageSize) throw new Error("invalid page size");

      for (var f of this.classClients) {
        f.lastStatus = null;
      }

      this.allPending();

      for (var i = 0; i < BL_RETRIES; ++i) {
        log("  attempt " + i);
        var currSubpage = 0;

        for (var suboff = 0; suboff < pageSize; suboff += BL_SUBPAGE_SIZE) {
          var sz = BL_SUBPAGE_SIZE;
          if (suboff + sz > pageSize) sz = pageSize - suboff;
          log("send sub page " + currSubpage + "/" + (numSubpage - 1) + " at " + suboff.toString(16) + "[" + sz + "]");
          var hd = (0,_pack__WEBPACK_IMPORTED_MODULE_4__/* .jdpack */ .AV)("u32 u16 u8 u8 u32 u32 u32 u32 u32", [pageAddr, suboff, currSubpage++, numSubpage - 1, this.sessionId, 0, 0, 0, 0]);
          (0,_utils__WEBPACK_IMPORTED_MODULE_3__/* .assert */ .hu)(hd.length == 4 * 7);
          var p = _packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].from */ .Z.from(_constants__WEBPACK_IMPORTED_MODULE_2__/* .BootloaderCmd.PageData */ .e96.PageData, (0,_utils__WEBPACK_IMPORTED_MODULE_3__/* .bufferConcat */ .gX)(hd, page.data.slice(suboff, suboff + sz))); // in first round, just broadcast everything
          // in other rounds, broadcast everything except for last packet

          if (i == 0 || currSubpage < numSubpage) yield p.sendAsMultiCommandAsync(this.bus, _constants__WEBPACK_IMPORTED_MODULE_2__/* .SRV_BOOTLOADER */ .PWm);else {
            for (var _f of this.classClients) {
              if (_f.pending) {
                _f.lastStatus = null;
                yield _f.sendCommandAsync(p);
              }
            }
          }
          yield this.bus.delay(BL_PAGE_DELAY);
        }

        yield this.waitForStatusAsync();

        for (var _f2 of this.classClients) {
          if (_f2.pending) {
            var err = "";

            if (_f2.lastStatus) {
              var [session_id, page_error, pageAddrR] = (0,_pack__WEBPACK_IMPORTED_MODULE_4__/* .jdunpack */ .TE)(_f2.lastStatus.data, "u32 u32 u32");
              if (session_id != this.sessionId) err = "invalid session_id";else if (pageAddrR != pageAddr) err = "invalid page address";else if (page_error) err = "err: " + (_constants__WEBPACK_IMPORTED_MODULE_2__/* .BootloaderError */ ._HP[page_error] || page_error);
            } else {
              err = "timeout";
            }

            if (err) {
              _f2.lastStatus = null;
              log("retry " + _f2.device + ": " + err);
            } else {
              _f2.pending = false;
            }
          }
        }

        if (this.numPending() == 0) {
          log("page " + (pageAddr & 0xffffff) + " done, " + i + "/" + BL_RETRIES + " retries");
          return;
        }
      }

      throw new Error("too many retries");
    });

    function flashPage(_x2) {
      return _flashPage.apply(this, arguments);
    }

    return flashPage;
  }();

  _proto.flashFirmwareBlob = /*#__PURE__*/function () {
    var _flashFirmwareBlob = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (fw, progress) {
      var waitCycles = 15;
      var total = fw.pages.length + waitCycles + 3;
      var idx = 0;

      var prog = () => {
        if (progress) progress(100 * idx / total);
        idx++;
      };

      try {
        prog();
        yield this.startFlashAsync();
        prog();

        for (var page of fw.pages) {
          yield this.flashPage(page);
          prog();
        }
      } finally {
        try {
          // even if something failed, try to reset everyone
          yield this.endFlashAsync();
          prog(); // wait until we're out of bootloader mode; otherwise the subsequent scan will keep devices in BL mode

          for (var i = 0; i < waitCycles; ++i) {
            yield this.bus.delay(150);
            prog();
          }
        } finally {
          // even if resetting failed, unregister event listeners
          for (var d of this.classClients) {
            d.stop();
          }
        }
      }
    });

    function flashFirmwareBlob(_x3, _x4) {
      return _flashFirmwareBlob.apply(this, arguments);
    }

    return flashFirmwareBlob;
  }();

  return FlashClient;
}();

var UF2_MAGIC_START0 = 0x0a324655;
var UF2_MAGIC_START1 = 0x9e5d5157;
var UF2_MAGIC_END = 0x0ab16f30;
/**
 * Parses a UF2 firmware binary into firmware blobs
 * @param uf2
 * @param store
 * @returns
 * @category Firmware
 */

function parseUF2Firmware(uf2, store) {
  var blobs = [];
  var currBlob;

  for (var off = 0; off < uf2.length; off += 512) {
    var header = uf2.slice(off, off + 32);
    var [magic0, magic1, flags, trgaddr, payloadSize, blkNo, numBlocks, familyID] = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .bufferToArray */ ._W)(header, _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE);
    if (magic0 != UF2_MAGIC_START0 || magic1 != UF2_MAGIC_START1 || (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .getNumber */ .Dx)(uf2, _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE, off + 512 - 4) != UF2_MAGIC_END) throw new Error("invalid UF2");

    if (blkNo == 0) {
      flush();
      currBlob = {
        pages: [],
        productIdentifier: familyID,
        version: "",
        pageSize: 1024,
        name: "FW " + familyID.toString(16),
        store
      };
    }

    if (flags & 0x8000) parseExtTags(uf2.slice(off + 32 + payloadSize, off + 512));
    var pageSize = currBlob.pageSize || 1024;
    var currPage = currBlob.pages[currBlob.pages.length - 1];

    if (!currPage || !(currPage.targetAddress <= trgaddr && trgaddr < currPage.targetAddress + pageSize)) {
      currPage = {
        targetAddress: trgaddr & ~(pageSize - 1),
        data: new Uint8Array(pageSize)
      };
      currPage.data.fill(0xff);
      currBlob.pages.push(currPage);
    }

    currPage.data.set(uf2.slice(off + 32, off + 32 + payloadSize), trgaddr - currPage.targetAddress);
  }

  flush();
  return blobs;

  function flush() {
    if (currBlob) blobs.push(currBlob);
  }

  function parseExtTags(buf) {
    var sz = 0;

    for (var i = 0; i < buf.length; i += sz) {
      sz = buf[i];
      if (sz == 0) break;
      var desig = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .getNumber */ .Dx)(buf, _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE, i) >>> 8;

      for (var key of Object.keys(uf2ExtTags)) {
        var tg = uf2ExtTags[key];

        if (desig == Math.abs(tg)) {
          var v = void 0;

          if (tg < 0) {
            v = (0,_utils__WEBPACK_IMPORTED_MODULE_3__/* .bufferToString */ .zT)(buf.slice(i + 4, i + sz));
          } else {
            v = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .getNumber */ .Dx)(buf, _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE, i + 4);
          }

          var cbany = currBlob;
          cbany[key] = v;
          break;
        }
      }

      sz = sz + 3 & ~3;
    }
  }
}
/**
 * Firmware information
 * @internal
 */

/**
 * Parse a UF2 firmware file and extracts firmware blobs
 * @param blob
 * @param store
 * @returns
 * @category Firmware
 */
function parseFirmwareFile(_x5, _x6) {
  return _parseFirmwareFile.apply(this, arguments);
}

function _parseFirmwareFile() {
  _parseFirmwareFile = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (blob, store) {
    var data = yield (0,_utils__WEBPACK_IMPORTED_MODULE_3__/* .readBlobToUint8Array */ .Lg)(blob);
    var buf = new Uint8Array(data);
    var uf2Blobs = parseUF2Firmware(buf, store);
    return uf2Blobs;
  });
  return _parseFirmwareFile.apply(this, arguments);
}

function createFlashers(_x7) {
  return _createFlashers.apply(this, arguments);
}
/**
 * Indicates if a firmware blob is applicated to the device information
 * @param dev
 * @param blob
 * @returns
 * @category Firmware
 */


function _createFlashers() {
  _createFlashers = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (bus) {
    var flashers = [];
    var numTries = 10;
    var tryDelay = 10;

    var handlePkt = p => {
      // note that we may get this even if recovery==false due to someone else asking
      // (eg when the user set the recovery mode toggle)
      if (p.serviceIndex == 1 && p.serviceCommand == _constants__WEBPACK_IMPORTED_MODULE_2__/* .CMD_ADVERTISEMENT_DATA */ .zf$ && p.getNumber(_buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE, 0) == _constants__WEBPACK_IMPORTED_MODULE_2__/* .SRV_BOOTLOADER */ .PWm) {
        if (!flashers.find(f => f.device.deviceId == p.deviceIdentifier)) {
          log("new flasher");
          flashers.push(new FlashClient(bus, p));
        }
      }
    };

    try {
      bus.on(_constants__WEBPACK_IMPORTED_MODULE_2__/* .PACKET_REPORT */ .deN, handlePkt);

      for (var i = 0; i < numTries; ++i) {
        // also ask BL services if any
        var bl_announce = _packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].onlyHeader */ .Z.onlyHeader(_constants__WEBPACK_IMPORTED_MODULE_2__/* .CMD_ADVERTISEMENT_DATA */ .zf$);
        yield bl_announce.sendAsMultiCommandAsync(bus, _constants__WEBPACK_IMPORTED_MODULE_2__/* .SRV_BOOTLOADER */ .PWm);
        yield bus.delay(tryDelay);
      }
    } finally {
      bus.off(_constants__WEBPACK_IMPORTED_MODULE_2__/* .PACKET_REPORT */ .deN, handlePkt);
    }

    return flashers;
  });
  return _createFlashers.apply(this, arguments);
}

function updateApplicable(dev, blob) {
  return dev && blob && dev.bootloaderProductIdentifier == blob.productIdentifier && dev.version !== blob.version;
}
/**
 * Flash firmware blob onto device
 * @param bus
 * @param blob
 * @param updateCandidates
 * @param ignoreFirmwareCheck
 * @param progress
 * @returns
 * @category Firmware
 */

function flashFirmwareBlob(_x8, _x9, _x10, _x11, _x12) {
  return _flashFirmwareBlob2.apply(this, arguments);
}
/**
 * This command can be sent every 50ms to keep devices in bootloader mode
 * @param bus
 * @category Firmware
 */

function _flashFirmwareBlob2() {
  _flashFirmwareBlob2 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (bus, blob, updateCandidates, ignoreFirmwareCheck, progress) {
    if (!(updateCandidates !== null && updateCandidates !== void 0 && updateCandidates.length)) return;
    _startTime = Date.now();
    log("resetting " + updateCandidates.length + " device(s)");

    for (var d of updateCandidates) {
      var device = bus.device(d.deviceId);
      log("resetting " + device);
      yield device.sendCtrlCommand(_constants__WEBPACK_IMPORTED_MODULE_2__/* .ControlCmd.Reset */ .VSW.Reset);
    }

    var allFlashers = yield createFlashers(bus);
    var flashers = allFlashers.filter(f => !!ignoreFirmwareCheck || f.dev_class == blob.productIdentifier);

    if (!flashers.length) {
      log("no devices to flash");
      return;
    }

    if (flashers.length != updateCandidates.length) console.error("expected " + updateCandidates.length + " flashers, got " + flashers.length);
    flashers[0].classClients = flashers;
    log("flashing " + blob.name);
    yield flashers[0].flashFirmwareBlob(blob, progress);
  });
  return _flashFirmwareBlob2.apply(this, arguments);
}

function sendStayInBootloaderCommand(_x13) {
  return _sendStayInBootloaderCommand.apply(this, arguments);
}

function _sendStayInBootloaderCommand() {
  _sendStayInBootloaderCommand = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (bus) {
    var bl_announce = _packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].onlyHeader */ .Z.onlyHeader(_constants__WEBPACK_IMPORTED_MODULE_2__/* .BootloaderCmd.Info */ .e96.Info);
    yield bl_announce.sendAsMultiCommandAsync(bus, _constants__WEBPACK_IMPORTED_MODULE_2__/* .SRV_BOOTLOADER */ .PWm);
  });
  return _sendStayInBootloaderCommand.apply(this, arguments);
}

/***/ }),

/***/ 9809:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "H": function() { return /* binding */ inIFrame; }
/* harmony export */ });
/**
 * @internal
 */
function inIFrame() {
  try {
    return typeof window !== "undefined" && window.self !== window.top;
  } catch (e) {
    return typeof window !== "undefined";
  }
}

/***/ }),

/***/ 23795:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ve": function() { return /* binding */ LIGHT_PROG_SET_ALL; },
/* harmony export */   "r$": function() { return /* binding */ LIGHT_PROG_FADE; },
/* harmony export */   "zy": function() { return /* binding */ LIGHT_PROG_FADE_HSV; },
/* harmony export */   "ln": function() { return /* binding */ LIGHT_PROG_ROTATE_FWD; },
/* harmony export */   "fq": function() { return /* binding */ LIGHT_PROG_ROTATE_BACK; },
/* harmony export */   "Xo": function() { return /* binding */ LIGHT_PROG_SHOW; },
/* harmony export */   "ht": function() { return /* binding */ LIGHT_PROG_RANGE; },
/* harmony export */   "T": function() { return /* binding */ LIGHT_PROG_MODE; },
/* harmony export */   "Aw": function() { return /* binding */ LIGHT_PROG_MODE1; },
/* harmony export */   "_I": function() { return /* binding */ LIGHT_MODE_REPLACE; },
/* harmony export */   "xI": function() { return /* binding */ LIGHT_MODE_ADD_RGB; },
/* harmony export */   "uZ": function() { return /* binding */ LIGHT_MODE_SUBTRACT_RGB; },
/* harmony export */   "Qj": function() { return /* binding */ LIGHT_MODE_MULTIPLY_RGB; },
/* harmony export */   "wW": function() { return /* binding */ LIGHT_MODE_LAST; },
/* harmony export */   "Lp": function() { return /* binding */ LIGHT_PROG_COLN; },
/* harmony export */   "oO": function() { return /* binding */ LIGHT_PROG_COL1; },
/* harmony export */   "W9": function() { return /* binding */ LIGHT_PROG_COL2; },
/* harmony export */   "Z3": function() { return /* binding */ LIGHT_PROG_COL3; },
/* harmony export */   "gd": function() { return /* binding */ LIGHT_PROG_COL1_SET; }
/* harmony export */ });
/*
 * `0xD0: set_all(C+)` - set all pixels in current range to given color pattern
 * `0xD1: fade(C+)` - set `N` pixels to color between colors in sequence
 * `0xD2: fade_hsv(C+)` - similar to `fade()`, but colors are specified and faded in HSV
 * `0xD3: rotate_fwd(K)` - rotate (shift) pixels by `K` positions away from the connector
 * `0xD4: rotate_back(K)` - same, but towards the connector
 * `0xD5: show(M=50)` - send buffer to strip and wait `M` milliseconds
 * `0xD6: range(P=0, N=length)` - range from pixel `P`, `N` pixels long
 * `0xD7: mode(K=0)` - set update mode
 * `0xD8: mode1(K=0)` - set update mode for next command only
 */
var LIGHT_PROG_SET_ALL = 0xd0;
var LIGHT_PROG_FADE = 0xd1;
var LIGHT_PROG_FADE_HSV = 0xd2;
var LIGHT_PROG_ROTATE_FWD = 0xd3;
var LIGHT_PROG_ROTATE_BACK = 0xd4;
var LIGHT_PROG_SHOW = 0xd5;
var LIGHT_PROG_RANGE = 0xd6;
var LIGHT_PROG_MODE = 0xd7;
var LIGHT_PROG_MODE1 = 0xd8;
var LIGHT_MODE_REPLACE = 0x00;
var LIGHT_MODE_ADD_RGB = 0x01;
var LIGHT_MODE_SUBTRACT_RGB = 0x02;
var LIGHT_MODE_MULTIPLY_RGB = 0x03;
var LIGHT_MODE_LAST = 0x03;
var LIGHT_PROG_COLN = 0xc0;
var LIGHT_PROG_COL1 = 0xc1;
var LIGHT_PROG_COL2 = 0xc2;
var LIGHT_PROG_COL3 = 0xc3;
var LIGHT_PROG_COL1_SET = 0xcf;

/***/ }),

/***/ 60154:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export JDNode */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94578);
/* harmony import */ var _eventsource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45484);



/* eslint-disable @typescript-eslint/no-explicit-any */

/**
 * Base class for JDOM Node classes.
 * @category JDOM
 */

var JDNode = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(JDNode, _JDEventSource);

  function JDNode() {
    return _JDEventSource.call(this) || this;
  }
  /**
   * Globally unique identifier in the tree
   * @category JDOM
   */


  var _proto = JDNode.prototype;

  /**
   * Emit event in current node and parent nodes
   * @param event event to emit
   * @param arg event arguments
   * @category JDOM
   */
  _proto.emitPropagated = function emitPropagated(event, arg) {
    var current = this;

    while (current) {
      current.emit(event, arg || this);
      current = current.parent;
    }
  }
  /**
   * @hidden
   */
  ;

  _proto.toString = function toString() {
    return this.friendlyName;
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(JDNode, [{
    key: "friendlyName",
    get:
    /**
     * A human friendly name
     * @category JDOM
     */
    function get() {
      return this.name;
    }
    /**
     * Gets the name including parents
     * @category JDOM
     */

  }, {
    key: "nodeData",
    get:
    /**
     * Gets a databag to store custom information
     * @category JDOM
     */
    function get() {
      if (!this._nodeData) this._nodeData = {};
      return this._nodeData;
    }
  }]);

  return JDNode;
}(_eventsource__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP);
/* harmony default export */ __webpack_exports__["Z"] = (JDNode);

/***/ }),

/***/ 91635:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TE": function() { return /* binding */ jdunpack; },
/* harmony export */   "AV": function() { return /* binding */ jdpack; },
/* harmony export */   "dW": function() { return /* binding */ jdpackEqual; }
/* harmony export */ });
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3482);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26799);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);



/**
 * @category Data Packing
 */

// ASCII codes of characters
var ch_b = 98;
var ch_i = 105;
var ch_r = 114;
var ch_s = 115;
var ch_u = 117;
var ch_x = 120;
var ch_z = 122; //const ch_0 = 48
//const ch_9 = 57

var ch_colon = 58;
var ch_sq_open = 91;
var ch_sq_close = 93;

function numberFormatOfType(tp) {
  switch (tp) {
    case "u8":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt8LE */ .y4.UInt8LE;

    case "u16":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt16LE */ .y4.UInt16LE;

    case "u32":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt32LE */ .y4.UInt32LE;

    case "i8":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Int8LE */ .y4.Int8LE;

    case "i16":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Int16LE */ .y4.Int16LE;

    case "i32":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Int32LE */ .y4.Int32LE;

    case "f32":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Float32LE */ .y4.Float32LE;

    case "f64":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Float64LE */ .y4.Float64LE;

    case "i64":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Int64LE */ .y4.Int64LE;

    case "u64":
      return _buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt64LE */ .y4.UInt64LE;

    default:
      return null;
  }
}

function bufferSlice(buf, start, end) {
  return buf.slice(start, end);
}

var TokenParser = /*#__PURE__*/function () {
  function TokenParser(fmt) {
    this.fp = 0;
    this.fmt = fmt;
  }

  var _proto = TokenParser.prototype;

  _proto.parse = function parse() {
    this.div = 1;
    this.isArray = false;
    var fmt = this.fmt;

    while (this.fp < fmt.length) {
      var endp = this.fp;

      while (endp < fmt.length && fmt.charCodeAt(endp) != 32) {
        endp++;
      }

      var word = fmt.slice(this.fp, endp);
      this.fp = endp + 1;
      if (!word) continue;
      var dotIdx = word.indexOf(".");
      var c0 = word.charCodeAt(0); // "u10.6" -> "u16", div = 1 << 6

      if ((c0 == ch_i || c0 == ch_u) && dotIdx >= 0) {
        var sz0 = parseInt(word.slice(1, dotIdx));
        var sz1 = parseInt(word.slice(dotIdx + 1));
        word = word[0] + (sz0 + sz1);
        this.div = 1 << sz1;
      }

      var c1 = word.charCodeAt(1);

      if (c1 == ch_sq_open) {
        this.size = parseInt(word.slice(2));
      } else {
        this.size = -1;
      }

      if (word.charCodeAt(word.length - 1) == ch_sq_close && word.charCodeAt(word.length - 2) == ch_sq_open) {
        word = word.slice(0, -2);
        this.isArray = true;
      }

      this.nfmt = numberFormatOfType(word);
      this.word = word;

      if (this.nfmt == null) {
        if (c0 == ch_r) {
          if (c1 != ch_colon) c0 = 0;
        } else if (c0 == ch_s || c0 == ch_b || c0 == ch_x) {
          if (word.length != 1 && this.size == -1) c0 = 0;
        } else if (c0 == ch_z) {
          if (word.length != 1) c0 = 0;
        } else {
          c0 = 0;
        }

        if (c0 == 0) throw new Error("invalid format: " + word);
        this.c0 = c0;
      } else {
        this.size = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .sizeOfNumberFormat */ .hb)(this.nfmt);
        this.c0 = -1;
      }

      return true;
    }

    return false;
  };

  return TokenParser;
}();

function jdunpackCore(buf, fmt, repeat) {
  var repeatRes = repeat ? [] : null;
  var res = [];
  var off = 0;
  var fp0 = 0;
  var parser = new TokenParser(fmt);
  if (repeat && buf.length == 0) return [];

  while (parser.parse()) {
    if (parser.isArray && !repeat) {
      res.push(jdunpackCore(bufferSlice(buf, off, buf.length), fmt.slice(fp0), 1));
      return res;
    }

    fp0 = parser.fp;
    var sz = parser.size;
    var c0 = parser.c0;

    if (c0 == ch_z) {
      var endoff = off;

      while (endoff < buf.length && buf[endoff] != 0) {
        endoff++;
      }

      sz = endoff - off;
    } else if (sz < 0) {
      sz = buf.length - off;
    }

    if (parser.nfmt !== null) {
      var v = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .getNumber */ .Dx)(buf, parser.nfmt, off);
      if (parser.div != 1) v /= parser.div;
      res.push(v);
      off += parser.size;
    } else {
      var subbuf = bufferSlice(buf, off, off + sz);

      if (c0 == ch_z || c0 == ch_s) {
        var zerop = 0;

        while (zerop < subbuf.length && subbuf[zerop] != 0) {
          zerop++;
        }

        res.push((0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .bufferToString */ .zT)(bufferSlice(subbuf, 0, zerop)));
      } else if (c0 == ch_b) {
        res.push(subbuf);
      } else if (c0 == ch_x) {// skip padding
      } else if (c0 == ch_r) {
        res.push(jdunpackCore(subbuf, fmt.slice(fp0), 2));
        break;
      } else {
        throw new Error("whoops");
      }

      off += subbuf.length;
      if (c0 == ch_z) off++;
    }

    if (repeat && parser.fp >= fmt.length) {
      parser.fp = 0;

      if (repeat == 2) {
        repeatRes.push(res);
        res = [];
      }

      if (off >= buf.length) break;
    }
  }

  if (repeat == 2) {
    if (res.length) repeatRes.push(res);
    return repeatRes;
  } else {
    return res;
  }
}
/**
 Unpacks a byte buffer into structured data as specified in the format string.
 See jdpack for format string reference.
 @category Data Packing
*/


function jdunpack(buf, fmt) {
  if (!buf || !fmt) return undefined; // hot path for buffers

  if (fmt === "b") return [buf.slice(0)]; // hot path

  var nf = numberFormatOfType(fmt);

  if (nf !== null) {
    var sz = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .sizeOfNumberFormat */ .hb)(nf);
    if (buf.length < sz) throw new Error("size mistmatch, expected " + fmt + " (" + sz + " bytes), got " + buf.length);
    return [(0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .getNumber */ .Dx)(buf, nf, 0)];
  } // slow path


  return jdunpackCore(buf, fmt, 0);
}

function jdpackCore(trg, fmt, data, off) {
  //console.log({ fmt, data })
  var idx = 0;
  var parser = new TokenParser(fmt);

  while (parser.parse()) {
    var c0 = parser.c0;

    if (c0 == ch_x) {
      // skip padding
      off += parser.size;
      continue;
    }

    var dataItem = data[idx++];

    if (c0 == ch_r && dataItem) {
      var fmt0 = fmt.slice(parser.fp);

      for (var velt of dataItem) {
        off = jdpackCore(trg, fmt0, velt, off);
      }

      break;
    } // use temporary variable to avoid a Gatsby build bug


    var arr = void 0;
    if (parser.isArray) arr = dataItem;else arr = [dataItem];

    for (var v of arr) {
      if (parser.nfmt !== null) {
        if (typeof v != "number") throw new Error("expecting number, got " + typeof v);

        if (trg) {
          var st = (0,_spec__WEBPACK_IMPORTED_MODULE_1__/* .numberFormatToStorageType */ .W1)(parser.nfmt);
          (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .setNumber */ .Gy)(trg, parser.nfmt, off, (0,_spec__WEBPACK_IMPORTED_MODULE_1__/* .clampToStorage */ .jr)(Math.round(v * parser.div), st));
        }

        off += parser.size;
      } else {
        var buf = void 0;

        if (typeof v === "string") {
          if (c0 == ch_z) buf = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .stringToBuffer */ .k8)(v + "\u0000");else if (c0 == ch_s) buf = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .stringToBuffer */ .k8)(v);else throw new Error("unexpected string");
        } else if (v && typeof v === "object" && v.length != null) {
          // assume buffer
          if (c0 == ch_b) buf = v;else throw new Error("unexpected buffer");
        } else {
          throw new Error("expecting string or buffer");
        }

        var sz = parser.size;

        if (sz >= 0) {
          if (buf.length > sz) buf = bufferSlice(buf, 0, sz);
        } else {
          sz = buf.length;
        }

        if (trg) trg.set(buf, off);
        off += sz;
      }
    }
  }

  if (data.length > idx) throw new Error("format '" + fmt + "' too short");
  return off;
}
/**

* Format strings are space-separated sequences of type descriptions.
* All numbers are understood to be little endian.
* The following type descriptions are supported:
* 
* - `u8`, `u16`, `u32` - unsigned, 1, 2, and 4 bytes long respectively
* - `i8`, `i16`, `i32` - similar, but signed
* - `b` - buffer until the end of input (has to be last)
* - `s` - similar, but utf-8 encoded string
* - `z` - NUL-terminated utf-8 string
* - `b[10]` - 10 byte buffer (10 is just an example, here and below)
* - `s[10]` - 10 byte utf-8 string; trailing NUL bytes (if any) are removed
* - `x[10]` - 10 bytes of padding
* 
* There is one more token, `r:`. The type descriptions following it are repeated in order
* until the input buffer is exhausted.
* When unpacking, fields after `r:` are repeated as an array of tuples.
* 
* In case there's only a single field repeating,
* it's also possible to append `[]` to its type, to get an array of values.
* 
* @category Data Packing
*/


function jdpack(fmt, data) {
  var _data$;

  if (!fmt || !data) return undefined; // hot path for buffers

  if (fmt === "b") return (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.slice(0); // hot path

  var nf = numberFormatOfType(fmt);

  if (nf !== null) {
    var buf = new Uint8Array((0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .sizeOfNumberFormat */ .hb)(nf));
    (0,_buffer__WEBPACK_IMPORTED_MODULE_0__/* .setNumber */ .Gy)(buf, nf, 0, data[0]);
    return buf;
  } // slow path


  var len = jdpackCore(null, fmt, data, 0);
  var res = new Uint8Array(len);
  jdpackCore(res, fmt, data, 0);
  return res;
}
/**
 * Checks if two packed values serialize to the same buffer
 * @param fmt packing format string
 * @param left left data
 * @param right right data
 * @returns true if both data serialize to the same buffer
 * @category Data Packing
 */

function jdpackEqual(fmt, left, right) {
  if (!left !== !right) return false;
  if (!left) return true;
  var leftBuffer = jdpack(fmt, left);
  var rightBuffer = jdpack(fmt, right);
  return (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .bufferEq */ .zo)(leftBuffer, rightBuffer);
}

/***/ }),

/***/ 57683:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Packet */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43144);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81794);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3482);
/* harmony import */ var _pretty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10913);
/* harmony import */ var _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73512);
/* harmony import */ var _pack__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91635);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(26799);








var {
  warn
} = console;
/**
 * A Jacdac packet
 * @category JDOM
 */

var Packet = /*#__PURE__*/function () {
  function Packet() {
    this._meta = undefined;
    this.key = Packet._nextKey++;
  }

  Packet.fromBinary = function fromBinary(data, timestamp) {
    if (!data || data.length > 252) return undefined;
    var p = new Packet();
    p._header = data.slice(0, _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERIAL_HEADER_SIZE */ .Ok7);
    p._data = data.slice(_constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERIAL_HEADER_SIZE */ .Ok7, _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERIAL_HEADER_SIZE */ .Ok7 + p.size);
    if (timestamp !== undefined) p.timestamp = timestamp;
    return p;
  };

  Packet.from = function from(service_command, data) {
    var p = new Packet();
    p._header = new Uint8Array(_constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERIAL_HEADER_SIZE */ .Ok7);
    p.data = data;
    p.serviceCommand = service_command;
    return p;
  };

  Packet.onlyHeader = function onlyHeader(service_command) {
    return Packet.from(service_command, new Uint8Array(0));
  };

  var _proto = Packet.prototype;

  _proto.toBuffer = function toBuffer() {
    // compute correct framing and CRC
    var res = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .bufferConcat */ .gX)(this._header, this._data);
    res[2] = this._data.length + 4;
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write16 */ .SZ)(res, 0, (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .crc */ .Br)(res.slice(2)));
    return res;
  };

  _proto.jdunpack = function jdunpack(fmt) {
    return this._data && fmt && (0,_pack__WEBPACK_IMPORTED_MODULE_5__/* .jdunpack */ .TE)(this._data, fmt) || [];
  };

  _proto.clone = function clone() {
    var pkt = new Packet();
    pkt._header = this._header.slice();
    pkt._data = this._data.slice();
    pkt.timestamp = this.timestamp;
    return pkt;
  };

  _proto.cloneForDevice = function cloneForDevice(deviceId, serviceIndex) {
    var idb = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .fromHex */ .H_)(deviceId);
    if (idb.length != 8) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("Invalid id");
    if (!this.isMultiCommand) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("Must be multi command");
    var pkt = Packet.fromBinary(this.toBuffer(), this.timestamp);
    pkt.frameFlags &= ~_constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS */ .Amr;

    pkt._header.set(idb, 4);

    pkt._decoded = undefined;
    pkt.serviceIndex = serviceIndex;
    return pkt;
  };

  _proto.compress = function compress(stripped) {
    if (stripped.length == 0) return;
    var sz = -4;

    for (var s of stripped) {
      sz += s.length;
    }

    var data = new Uint8Array(sz);

    this._header.set(stripped[0], 12);

    data.set(stripped[0].slice(4), 0);
    sz = stripped[0].length - 4;

    for (var _s of stripped.slice(1)) {
      data.set(_s, sz);
      sz += _s.length;
    }

    this._data = data;
    this._decoded = undefined;
  };

  _proto.withFrameStripped = function withFrameStripped() {
    return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .bufferConcat */ .gX)(this._header.slice(12, 12 + 4), this._data);
  };

  _proto.getNumber = function getNumber(fmt, offset) {
    return (0,_buffer__WEBPACK_IMPORTED_MODULE_2__/* .getNumber */ .Dx)(this._data, fmt, offset);
  };

  _proto.toString = function toString() {
    var msg = (0,_pretty__WEBPACK_IMPORTED_MODULE_3__/* .shortDeviceId */ .xV)(this.deviceIdentifier) + "/" + this.serviceIndex + "[" + this.frameFlags + "]: " + this.serviceCommand + " sz=" + this.size;
    if (this.size < 20) msg += ": " + (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .toHex */ .NC)(this.data);else msg += ": " + (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .toHex */ .NC)(this.data.slice(0, 20)) + "...";
    return msg;
  };

  _proto.sendCoreAsync = function sendCoreAsync(bus) {
    var buf = this.toBuffer(); // Here we're sending this packet as the only one in a frame, therefore we need to compute CRC (which toBuffer() does)
    // There's no crc computation function on Packet, since it should be typically only applied to full frames.
    // The crc field reads the CRC from the frame (which is useful eg for acks).

    this._header[0] = buf[0];
    this._header[1] = buf[1];
    this._header[2] = buf[2];
    return bus.sendPacketAsync(this);
  };

  _proto.sendReportAsync = function sendReportAsync(dev) {
    if (!dev) return Promise.resolve();
    this.deviceIdentifier = dev.deviceId;
    return this.sendCoreAsync(dev.bus);
  };

  _proto.sendCmdAsync = function sendCmdAsync(dev) {
    if (!dev) return Promise.resolve();
    this.deviceIdentifier = dev.deviceId;
    this.isCommand = true;
    return this.sendCoreAsync(dev.bus);
  };

  _proto.sendAsMultiCommandAsync = function sendAsMultiCommandAsync(bus, service_class) {
    this._header[3] |= _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS */ .Amr | _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_COMMAND */ .e4B;
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write32 */ .Pg)(this._header, 4, service_class);
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write32 */ .Pg)(this._header, 8, 0);
    return this.sendCoreAsync(bus);
  };

  Packet.fromFrame = function fromFrame(frame, timestamp) {
    return frameToPackets(frame, timestamp);
  };

  Packet.jdpacked = function jdpacked(service_command, fmt, nums) {
    return Packet.from(service_command, (0,_pack__WEBPACK_IMPORTED_MODULE_5__/* .jdpack */ .AV)(fmt, nums));
  } // helpers
  ;

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(Packet, [{
    key: "header",
    get: function get() {
      return this._header.slice(0);
    }
  }, {
    key: "deviceIdentifier",
    get: function get() {
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .toHex */ .NC)(this._header.slice(4, 4 + 8));
    },
    set: function set(id) {
      var idb = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .fromHex */ .H_)(id);
      if (idb.length != 8) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("Invalid id");
      if (this.isMultiCommand) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("Invalid multicast");

      this._header.set(idb, 4);

      this._decoded = undefined;
    }
  }, {
    key: "frameFlags",
    get: function get() {
      return this._header[3];
    },
    set: function set(v) {
      this._header[3] = v;
    }
  }, {
    key: "isMultiCommand",
    get: function get() {
      return !!(this.frameFlags & _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS */ .Amr);
    }
  }, {
    key: "size",
    get: function get() {
      return this._header[12];
    }
  }, {
    key: "requiresAck",
    get: function get() {
      return this.frameFlags & _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_ACK_REQUESTED */ .amS ? true : false;
    },
    set: function set(ack) {
      if (ack != this.requiresAck) this._header[3] ^= _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_ACK_REQUESTED */ .amS;
      this._decoded = undefined;
    }
  }, {
    key: "serviceIndex",
    get: function get() {
      return this._header[13] & _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_MASK */ .UzQ;
    },
    set: function set(value) {
      if (value == null) throw new Error("service_index not set");
      this._header[13] = this._header[13] & _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_INV_MASK */ .P7v | value;
      this._decoded = undefined;
    }
  }, {
    key: "serviceClass",
    get: function get() {
      var _this$device;

      if (this.isMultiCommand) return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(this._header, 4);
      return (_this$device = this.device) === null || _this$device === void 0 ? void 0 : _this$device.serviceClassAt(this.serviceIndex);
    }
  }, {
    key: "crc",
    get: function get() {
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(this._header, 0);
    }
  }, {
    key: "serviceCommand",
    get: function get() {
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(this._header, 14);
    },
    set: function set(cmd) {
      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write16 */ .SZ)(this._header, 14, cmd);
      this._decoded = undefined;
    }
  }, {
    key: "isRegisterSet",
    get: function get() {
      return this.serviceIndex <= _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_MAX_NORMAL */ .Ms8 && this.serviceCommand >> 12 == _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_SET_REG */ .YUL >> 12;
    }
  }, {
    key: "isRegisterGet",
    get: function get() {
      return this.serviceIndex <= _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_MAX_NORMAL */ .Ms8 && this.serviceCommand >> 12 == _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_GET_REG */ .V4G >> 12;
    } // TODO rename to registerCode

  }, {
    key: "registerIdentifier",
    get: function get() {
      if (!this.isRegisterGet && !this.isRegisterSet) return undefined;
      return this.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_REG_MASK */ .Pbb;
    }
  }, {
    key: "isEvent",
    get: function get() {
      return this.serviceIndex <= _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_MAX_NORMAL */ .Ms8 && (this.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_EVENT_MASK */ .eMy) !== 0;
    }
  }, {
    key: "eventCode",
    get: function get() {
      return this.isEvent ? this.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_EVENT_CODE_MASK */ .aSR : undefined;
    }
  }, {
    key: "eventCounter",
    get: function get() {
      return this.isEvent ? this.serviceCommand >> _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_EVENT_COUNTER_POS */ .T6O & _constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_EVENT_COUNTER_MASK */ .EME : undefined;
    }
  }, {
    key: "isCRCAck",
    get: function get() {
      return this.serviceIndex === _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_CRC_ACK */ .$rs;
    }
  }, {
    key: "isPipe",
    get: function get() {
      return this.serviceIndex === _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_PIPE */ .e5Z;
    }
  }, {
    key: "pipePort",
    get: function get() {
      return this.isPipe && this.serviceCommand >> _constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_PORT_SHIFT */ .N63;
    }
  }, {
    key: "pipeCount",
    get: function get() {
      return this.isPipe && this.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_COUNTER_MASK */ .Gsd;
    }
  }, {
    key: "data",
    get: function get() {
      return this._data;
    },
    set: function set(buf) {
      if (buf.length > _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERIAL_MAX_PAYLOAD_SIZE */ .MdP) throw Error("jacdac packet length too large, " + buf.length + " > " + _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERIAL_MAX_PAYLOAD_SIZE */ .MdP + " bytes");
      this._header[12] = buf.length;
      this._data = buf;
      this._decoded = undefined;
    }
  }, {
    key: "uintData",
    get: function get() {
      var buf = this._data;
      if (buf.length == 0) return undefined;
      if (buf.length < 4) buf = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .bufferConcat */ .gX)(buf, new Uint8Array(4));
      if (buf.length == 8) return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, 0) + (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, 4) * 0x100000000;
      return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, 0);
    }
  }, {
    key: "stringData",
    get: function get() {
      return this._data && (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .bufferToString */ .zT)(this._data);
    }
  }, {
    key: "intData",
    get: function get() {
      var fmt;

      switch (this._data.length) {
        case 0:
          return undefined;

        case 1:
          fmt = _buffer__WEBPACK_IMPORTED_MODULE_2__/* .NumberFormat.Int8LE */ .y4.Int8LE;
          break;

        case 2:
        case 3:
          fmt = _buffer__WEBPACK_IMPORTED_MODULE_2__/* .NumberFormat.Int16LE */ .y4.Int16LE;
          break;

        default:
          fmt = _buffer__WEBPACK_IMPORTED_MODULE_2__/* .NumberFormat.Int32LE */ .y4.Int32LE;
          break;
      }

      return this.getNumber(fmt, 0);
    }
  }, {
    key: "isAnnounce",
    get: function get() {
      return this.serviceIndex == _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_SERVICE_INDEX_CTRL */ .fey && this.isReport && this.serviceCommand == _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__/* .SystemCmd.Announce */ .xSq.Announce;
    }
  }, {
    key: "isRepeatedAnnounce",
    get: function get() {
      var _this$device2;

      return this.isAnnounce && ((_this$device2 = this.device) === null || _this$device2 === void 0 ? void 0 : _this$device2.lastServiceUpdate) < this.timestamp;
    }
  }, {
    key: "decoded",
    get: function get() {
      if (!this._decoded) this._decoded = (0,_pretty__WEBPACK_IMPORTED_MODULE_3__/* .decodePacketData */ .b8)(this);
      return this._decoded;
    }
  }, {
    key: "meta",
    get: function get() {
      if (!this._meta) this._meta = {};
      return this._meta;
    }
  }, {
    key: "isCommand",
    get: function get() {
      return !!(this.frameFlags & _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_COMMAND */ .e4B);
    },
    set: function set(value) {
      if (value) this._header[3] |= _constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_COMMAND */ .e4B;else this._header[3] &= ~_constants__WEBPACK_IMPORTED_MODULE_1__/* .JD_FRAME_FLAG_COMMAND */ .e4B;
      this._decoded = undefined;
    }
  }, {
    key: "isReport",
    get: function get() {
      return !this.isCommand;
    }
  }, {
    key: "friendlyDeviceName",
    get: function get() {
      var _this$device3;

      if (this.isMultiCommand) return "*";
      return ((_this$device3 = this.device) === null || _this$device3 === void 0 ? void 0 : _this$device3.friendlyName) || this.deviceIdentifier;
    }
  }, {
    key: "friendlyServiceName",
    get: function get() {
      var service_name;

      if (this.isCRCAck) {
        service_name = "CRC-ACK";
      } else if (this.isPipe) {
        service_name = "PIPE";
      } else {
        var serv_id = (0,_pretty__WEBPACK_IMPORTED_MODULE_3__/* .serviceName */ .HV)(this.serviceClass);
        service_name = (serv_id === "?" ? (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .hexNum */ .Rj)(this.serviceClass) : serv_id) + " (" + this.serviceIndex + ")";
      }

      return service_name;
    }
  }, {
    key: "friendlyCommandName",
    get: function get() {
      var cmd = this.serviceCommand;
      var cmdname;

      if (this.isCRCAck) {
        cmdname = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .hexNum */ .Rj)(cmd);
      } else if (this.isPipe) {
        cmdname = "port:" + (cmd >> _constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_PORT_SHIFT */ .N63) + " cnt:" + (cmd & _constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_COUNTER_MASK */ .Gsd);
        if (cmd & _constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_METADATA_MASK */ .Lqh) cmdname += " meta";
        if (cmd & _constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_CLOSE_MASK */ .ANF) cmdname += " close";
      } else if (this.isEvent) {
        var spec = (0,_spec__WEBPACK_IMPORTED_MODULE_6__/* .serviceSpecificationFromClassIdentifier */ .d5)(this.serviceClass);
        var code = this.eventCode;
        var pkt = spec === null || spec === void 0 ? void 0 : spec.packets.find(pkt => pkt.kind === "event" && pkt.identifier === code);
        cmdname = pkt === null || pkt === void 0 ? void 0 : pkt.name;
      } else if (this.isReport) {
        var _spec = (0,_spec__WEBPACK_IMPORTED_MODULE_6__/* .serviceSpecificationFromClassIdentifier */ .d5)(this.serviceClass);

        var _code = this.serviceCommand & ~_constants__WEBPACK_IMPORTED_MODULE_1__/* .CMD_GET_REG */ .V4G;

        var _pkt = _spec === null || _spec === void 0 ? void 0 : _spec.packets.find(pkt => pkt.kind === "report" && pkt.identifier === _code);

        cmdname = _pkt === null || _pkt === void 0 ? void 0 : _pkt.name;
      } else {
        cmdname = (0,_pretty__WEBPACK_IMPORTED_MODULE_3__/* .commandName */ .gw)(cmd, this.serviceClass);
      }

      return cmdname;
    }
  }]);

  return Packet;
}();
Packet._nextKey = 1;

function frameToPackets(frame, timestamp) {
  var size = frame[2] || 0;

  if (frame.length < size + 12) {
    warn((timestamp | 0) + "ms: got only " + frame.length + " bytes; expecting " + (size + 12));
  } else if (size < 4) {
    warn((timestamp | 0) + "ms: empty packet");
  } else {
    var computed = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .crc */ .Br)(frame.slice(2, size + 12));
    var actual = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(frame, 0);
    if (actual != computed) console.error("crc mismatch; sz=" + size + " got:" + actual + ", exp:" + computed);
    var res = [];
    if (frame.length != 12 + frame[2]) warn((timestamp | 0) + "ms: unexpected packet len: " + frame.length);

    for (var ptr = 12; ptr < 12 + frame[2];) {
      var psz = frame[ptr] + 4;
      var sz = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .ALIGN */ .Hp)(psz);
      var pkt = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .bufferConcat */ .gX)(frame.slice(0, 12), frame.slice(ptr, ptr + psz));
      if (ptr + psz > 12 + frame[2]) warn((timestamp | 0) + "ms: invalid frame compression, res len=" + res.length);
      var p = Packet.fromBinary(pkt);
      p.timestamp = timestamp;
      res.push(p); // only set req_ack flag on first packet - otherwise we would sent multiple acks

      if (res.length > 1) p.requiresAck = false;
      ptr += sz;
    }

    return res;
  }

  return [];
}

/* harmony default export */ __webpack_exports__["Z"] = (Packet);

/***/ }),

/***/ 53616:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "f": function() { return /* binding */ unpackedToObject; }
/* harmony export */ });
/* unused harmony export objectToUnpacked */
/**
 * Unpacked data mapped as an object
 * @category Data Packing
 */

/**
 * Unrolls an array of packed values into a friendly object structure
 * @param data
 * @param fields
 * @returns
 * @category Data Packing
 */
function unpackedToObject(data, fields, defaultName) {
  if (!data || !fields) return undefined;
  var r = {};

  for (var i = 0; i < data.length; ++i) {
    var field = fields[i];
    var value = data[i];
    var {
      name,
      startRepeats
    } = field;
    var prettyName = name === "_" && defaultName ? defaultName : name;

    if (startRepeats) {
      var _ret = function () {
        var repeatFields = fields.slice(i);
        console.log({
          value,
          repeatFields,
          data
        });
        r["repeat"] = value.map(rdata => {
          var r = {};

          for (var _i = 0; _i < repeatFields.length; ++_i) {
            var _field = fields[_i];
            var _value = rdata[_i];
            var {
              name: _name
            } = _field;

            var _prettyName = _name === "_" && defaultName ? defaultName : _name;

            r[_prettyName] = _value;
          }

          return r;
        });
        return "break";
      }();

      if (_ret === "break") break;
    } else r[prettyName] = value;
  }

  return r;
}
/**
 * Converts an object structure into a flat packed data array
 * @param pkt
 * @param msg
 * @returns
 * @category Data Packing
 */

function objectToUnpacked(pkt, // eslint-disable-next-line @typescript-eslint/no-explicit-any
msg) {
  if (!msg) return [];
  if (typeof msg === "number" || typeof msg === "string") return [msg];else if (typeof msg === "boolean") return [msg ? 1 : 0];else if (Array.isArray(msg)) {
    // assume a packaged layout
    return msg;
  } else {
    var {
      fields
    } = pkt;
    var r = [];

    for (var i = 0; i < fields.length; ++i) {
      var field = fields[i];
      var name = field.name === "_" ? pkt.name : field.name;
      var value = msg[name];

      if (field.startRepeats) {
        var _ret2 = function () {
          var repeatFields = fields.slice(i);
          r.push( // eslint-disable-next-line @typescript-eslint/no-explicit-any
          value.map(vrow => {
            var arow = [];

            for (var j = 0; j < repeatFields.length; ++j) {
              var rfield = repeatFields[j];
              var rname = rfield.name;
              arow.push(vrow[rname]);
            }

            return arow;
          }));
          return "break";
        }();

        if (_ret2 === "break") break;
      } else {
        r.push(value);
      }
    }

    return r;
  }
}

/***/ }),

/***/ 93642:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ah": function() { return /* binding */ OutPipe; },
/* harmony export */   "oI": function() { return /* binding */ InPipeReader; }
/* harmony export */ });
/* unused harmony export InPipe */
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(94578);
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43144);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _packet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57683);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47235);
/* harmony import */ var _pack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(91635);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80303);










var {
  warn
} = console;
var OutPipe = /*#__PURE__*/function () {
  function OutPipe(device, port, hosted) {
    this._count = 0;
    this.device = device;
    this.port = port;
    this.hosted = hosted;
  }

  OutPipe.from = function from(bus, pkt, hosted) {
    var [idbuf, port] = pkt.jdunpack("b[8] u16");
    var id = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .toHex */ .NC)(idbuf);
    var dev = bus.device(id, false, pkt);
    return new OutPipe(dev, port, hosted);
  };

  var _proto = OutPipe.prototype;

  _proto.send = function send(buf) {
    return this.sendData(buf, 0);
  };

  _proto.sendMeta = function sendMeta(buf) {
    return this.sendData(buf, _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_METADATA_MASK */ .Lqh);
  };

  _proto.respondForEach = /*#__PURE__*/function () {
    var _respondForEach = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* (items, converter) {
      try {
        var n = items.length;

        for (var i = 0; i < n; ++i) {
          var _item = items[i];
          var data = converter(_item);
          yield this.send(data);
        }
      } finally {
        yield this.close();
      }
    });

    function respondForEach(_x, _x2) {
      return _respondForEach.apply(this, arguments);
    }

    return respondForEach;
  }();

  _proto.sendData = /*#__PURE__*/function () {
    var _sendData = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* (buf, flags) {
      if (!this.device) {
        warn("sending data over closed pipe");
        return;
      }

      var cmd = this.port << _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_PORT_SHIFT */ .N63 | flags | this._count & _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_COUNTER_MASK */ .Gsd;
      var pkt = _packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].from */ .Z.from(cmd, buf);
      pkt.serviceIndex = _constants__WEBPACK_IMPORTED_MODULE_0__/* .JD_SERVICE_INDEX_PIPE */ .e5Z;
      this.device.sendPktWithAck(pkt).then(() => {}, err => {
        console.log(err);
        this.free();
      });
      if (this.hosted) this.device.bus.processPacket(pkt);
      this._count++;
    });

    function sendData(_x3, _x4) {
      return _sendData.apply(this, arguments);
    }

    return sendData;
  }();

  _proto.free = function free() {
    this.device = null;
    this.port = null;
  };

  _proto.close = /*#__PURE__*/function () {
    var _close = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* () {
      yield this.sendData(new Uint8Array(0), _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_CLOSE_MASK */ .ANF);
      this.free();
    });

    function close() {
      return _close.apply(this, arguments);
    }

    return close;
  }();

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(OutPipe, [{
    key: "count",
    get: function get() {
      return this._count;
    }
  }, {
    key: "isOpen",
    get: function get() {
      return this.device != null;
    }
  }]);

  return OutPipe;
}();
var InPipe = /*#__PURE__*/function (_JDClient) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(InPipe, _JDClient);

  function InPipe(bus) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this._count = 0;
    _this.bus = bus;
    _this._handlePacket = _this._handlePacket.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(_this));

    _this.allocPort();

    _this.mount(_this.bus.selfDevice.subscribe(_constants__WEBPACK_IMPORTED_MODULE_0__/* .PACKET_RECEIVE */ .u_S, _this._handlePacket));

    return _this;
  }

  var _proto2 = InPipe.prototype;

  _proto2.allocPort = function allocPort() {
    // eslint-disable-next-line no-constant-condition
    while (true) {
      this._port = 1 + (0,_random__WEBPACK_IMPORTED_MODULE_5__/* .randomUInt */ .sG)(511);
      var info = this.bus.selfDevice.port(this._port);

      if (!info.localPipe && !info.pipeType) {
        info.localPipe = this;
        break;
      }
    }
  };

  _proto2.openCommand = function openCommand(cmd) {
    if (!this.isOpen) (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .throwError */ ._y)("trying to access a closed pipe");
    var b = (0,_pack__WEBPACK_IMPORTED_MODULE_4__/* .jdpack */ .AV)("b[8] u16 u16", [(0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .fromHex */ .H_)(this.bus.selfDeviceId), this._port, 0]);
    return _packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].from */ .Z.from(cmd, b);
  };

  _proto2._handlePacket = function _handlePacket(pkt) {
    if (!pkt.isPipe) return;
    if (pkt.pipePort !== this._port) return;

    if ((pkt.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_COUNTER_MASK */ .Gsd) == (this._count & _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_COUNTER_MASK */ .Gsd)) {
      this._count++;
      this.emit(_constants__WEBPACK_IMPORTED_MODULE_0__/* .DATA */ .D_W, pkt);

      if (pkt.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_CLOSE_MASK */ .ANF) {
        this.close();
      }
    }
  };

  _proto2.close = function close() {
    if (this._port == null) return;
    this.emit(_constants__WEBPACK_IMPORTED_MODULE_0__/* .CLOSE */ .F$Q);
    this._port = null;
    this.bus.selfDevice.port(this._port).localPipe = undefined;
    this.unmount();
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(InPipe, [{
    key: "port",
    get: function get() {
      return this._port;
    }
  }, {
    key: "count",
    get: function get() {
      return this._count;
    }
  }, {
    key: "isOpen",
    get: function get() {
      return this._port != null;
    }
  }]);

  return InPipe;
}(_client__WEBPACK_IMPORTED_MODULE_3__/* .JDClient */ .z);
var InPipeReader = /*#__PURE__*/function (_InPipe) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(InPipeReader, _InPipe);

  function InPipeReader(bus) {
    var _this2;

    _this2 = _InPipe.call(this, bus) || this;
    _this2.done = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .signal */ .td)();
    _this2.meta = [];
    _this2.output = [];

    _this2.mount(_this2.subscribe(_constants__WEBPACK_IMPORTED_MODULE_0__/* .DATA */ .D_W, pkt => {
      if (pkt.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_0__/* .PIPE_METADATA_MASK */ .Lqh) _this2.meta.push(pkt);else _this2.output.push(pkt);
    }));

    _this2.mount(_this2.subscribe(_constants__WEBPACK_IMPORTED_MODULE_0__/* .CLOSE */ .F$Q, _this2.done.signal));

    return _this2;
  }

  var _proto3 = InPipeReader.prototype;

  _proto3.readData = /*#__PURE__*/function () {
    var _readData = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* (timeout) {
      if (timeout === void 0) {
        timeout = 500;
      }

      var r = yield this.readAll(timeout);
      return r.output.map(p => p.data).filter(b => !!(b !== null && b !== void 0 && b.length));
    });

    function readData(_x5) {
      return _readData.apply(this, arguments);
    }

    return readData;
  }();

  _proto3.readAll = /*#__PURE__*/function () {
    var _readAll = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* (timeout) {
      if (timeout === void 0) {
        timeout = 500;
      }

      var res = yield this.bus.withTimeout(timeout, this.done.signalled);
      if (!res) throw new Error("Timeout reading pipe: " + timeout + "ms");
      return {
        meta: this.meta,
        output: this.output
      };
    });

    function readAll(_x6) {
      return _readAll.apply(this, arguments);
    }

    return readAll;
  }();

  return InPipeReader;
}(InPipe);

/***/ }),

/***/ 10913:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QP": function() { return /* binding */ prettyUnit; },
/* harmony export */   "Zn": function() { return /* binding */ prettyMemberUnit; },
/* harmony export */   "or": function() { return /* binding */ prettySize; },
/* harmony export */   "Xh": function() { return /* binding */ prettyDuration; },
/* harmony export */   "xV": function() { return /* binding */ shortDeviceId; },
/* harmony export */   "Cg": function() { return /* binding */ valueToFlags; },
/* harmony export */   "zi": function() { return /* binding */ flagsToValue; },
/* harmony export */   "b8": function() { return /* binding */ decodePacketData; },
/* harmony export */   "Sm": function() { return /* binding */ serviceClass; },
/* harmony export */   "HV": function() { return /* binding */ serviceName; },
/* harmony export */   "gw": function() { return /* binding */ commandName; },
/* harmony export */   "$_": function() { return /* binding */ printPacket; }
/* harmony export */ });
/* unused harmony exports RegisterType, prettyMicroDuration, decodeMember, decodeMembers, wrapDecodedMembers, serviceShortIdOrClass, deviceServiceName, toAscii, hexDump */
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3482);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81794);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26799);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73512);
/* harmony import */ var _pack__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91635);






/** @internal */

var RegisterType;
/**
 * @internal
 */

(function (RegisterType) {
  RegisterType[RegisterType["UInt"] = 0] = "UInt";
  RegisterType[RegisterType["UIntHex"] = 1] = "UIntHex";
  RegisterType[RegisterType["Int"] = 2] = "Int";
  RegisterType[RegisterType["IntArray"] = 3] = "IntArray";
  RegisterType[RegisterType["String"] = 4] = "String";
})(RegisterType || (RegisterType = {}));

function prettyUnit(u) {
  switch (u) {
    case "us":
      return "μs";

    case "C":
    case "Cel":
      return "°C";

    case "K":
      return "°K";

    case "/":
    case "#":
      return "";

    default:
      return u;
  }
}
function prettyMemberUnit(specification, showDataType) {
  var parts = [prettyUnit(specification.unit), (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .isSet */ .DM)(specification.typicalMin) && "[" + specification.typicalMin + ", " + specification.typicalMax + "]", (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .isSet */ .DM)(specification.absoluteMin) && "absolute [" + specification.absoluteMin + ", " + specification.absoluteMax + "]"].filter(f => (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .isSet */ .DM)(f) && f);
  if (showDataType) parts.unshift(specification.type);
  var helperText = parts.join(", ");
  return helperText;
}
function prettySize(b) {
  b = b | 0;
  if (b < 1000) return b + "b";else if (b < 1000000) return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(b / 1e3, 1) + "kb";else return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(b / 1e6, 1) + "mb";
}
function prettyDuration(ms) {
  var s = ms / 1000;
  if (s < 1) return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(s, 2) + "s";
  if (s < 10) return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(s, 1) + "s";
  if (s < 60) return Math.floor(s) + "s";
  var r = "";
  var d = Math.floor(s / (24 * 3600));

  if (d > 0) {
    r += d + ":";
    s -= d * (24 * 3600);
  }

  var h = Math.floor(s / 3600);

  if (h > 0) {
    r += h + ":";
    s -= h * 3600;
  }

  var m = Math.floor(s / 60);

  if (d > 0 || h > 0 || m > 0) {
    r += m + ":";
    s -= m * 60;
  }

  r += Math.floor(s);
  return r;
}
function prettyMicroDuration(us) {
  if (us < 1000) return "" + us + prettyUnit("us");else return prettyDuration(us / 1000);
} // 2 letter + 2 digit ID; 1.8%/0.3%/0.07%/0.015% collision probability among 50/20/10/5 devices

function shortDeviceId(devid) {
  var h = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hash */ .vp)((0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .fromHex */ .H_)(devid), 30);
  return String.fromCharCode(0x41 + h % 26) + String.fromCharCode(0x41 + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .idiv */ .cP)(h, 26) % 26) + String.fromCharCode(0x30 + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .idiv */ .cP)(h, 26 * 26) % 10) + String.fromCharCode(0x30 + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .idiv */ .cP)(h, 26 * 26 * 10) % 10);
}
function decodeMember(service, pktInfo, member, pkt, offset) {
  if (!member) return null;
  if (pkt.data.length <= offset) return null;
  var numValue = undefined;
  var scaledValue = undefined;
  var value = undefined;
  var humanValue = undefined;
  var size = Math.abs(member.storage);
  var enumInfo = service === null || service === void 0 ? void 0 : service.enums[member.type];
  var isInt = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .isIntegerType */ .YF)(member.type) || !!enumInfo;

  if (member.isFloat && (size == 4 || size == 8)) {
    if (size == 4) numValue = pkt.getNumber(_buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Float32LE */ .y4.Float32LE, offset);else numValue = pkt.getNumber(_buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.Float64LE */ .y4.Float64LE, offset);
    value = scaledValue = numValue;
    if (Math.abs(value) < 10) humanValue = value.toFixed(5);else if (Math.abs(value) < 1000) humanValue = value.toFixed(3);else if (Math.abs(value) < 100000) humanValue = value.toFixed(2);else humanValue = "" + value;
    if (member.unit) humanValue += prettyUnit(member.unit);
  } else if (!isInt) {
    var buf = size ? pkt.data.slice(offset, offset + size) : pkt.data.slice(offset);

    if (member.type == "string") {
      try {
        value = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .fromUTF8 */ .W_)((0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .uint8ArrayToString */ .DA)(buf));
      } catch (_unused) {
        // invalid UTF8
        value = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .uint8ArrayToString */ .DA)(buf);
      }

      humanValue = JSON.stringify(value).replace(/\\u0000/g, "\\0");
    } else if (member.type == "pipe") {
      var _pkt$device;

      value = buf;
      var devid = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(buf.slice(0, 8));
      var port = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .read16 */ .gI)(buf, 8);
      humanValue = "pipe to " + shortDeviceId(devid) + " port:" + port; // + " [" + toHex(buf.slice(10)) + "]"

      if (pkt !== null && pkt !== void 0 && (_pkt$device = pkt.device) !== null && _pkt$device !== void 0 && _pkt$device.bus) {
        var trg = pkt.device.bus.device(devid, true);
        if (trg) trg.port(port).pipeType = (service === null || service === void 0 ? void 0 : service.shortId) + "." + pktInfo.pipeType + ".report";
      }
    } else {
      value = buf;
      humanValue = hexDump(buf);
    }

    size = buf.length;
  } else {
    var fmt = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .numberFormatFromStorageType */ .m9)(member.storage);
    numValue = pkt.getNumber(fmt, offset);
    value = scaledValue = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .scaleIntToFloat */ .xy)(numValue, member);
    if (pkt.device && member.type == "pipe_port") pkt.device.port(value).pipeType = (service === null || service === void 0 ? void 0 : service.shortId) + "." + pktInfo.pipeType + ".command";

    if (enumInfo) {
      if (enumInfo.isFlags) {
        humanValue = "";
        var curr = numValue;

        for (var key of Object.keys(enumInfo.members)) {
          var val = enumInfo.members[key];

          if ((curr & val) == val) {
            if (humanValue) humanValue += " | ";
            humanValue += key;
            curr &= ~val;
          }
        }

        if (curr) {
          if (humanValue) humanValue += " | ";
          humanValue += (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(curr);
        }
      } else {
        humanValue = reverseLookup(enumInfo.members, numValue);
      }
    } else if (member.type == "bool") {
      value = !!numValue;
      humanValue = value ? "true" : "false";
    } else if (member.unit === "ms") humanValue = prettyDuration(value);else if (member.unit === "us") humanValue = prettyMicroDuration(value);else if (member.unit || scaledValue != numValue) {
      // don't show so much digits
      var v = scaledValue;
      if (member.unit) v = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(v, 3);
      humanValue = "" + v;
      if (member.unit) humanValue += prettyUnit(member.unit);
    } else {
      humanValue = scaledValue + "";

      if ((scaledValue | 0) == scaledValue && (!member.unit || scaledValue >= 15)) {
        if (!member.unit) humanValue = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(scaledValue);else humanValue += " (" + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(scaledValue) + ")";
      } else if (scaledValue && member.storage == 8) {
        var did = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(pkt.data.slice(offset, offset + 8));
        humanValue += " (" + did + " / " + shortDeviceId(did) + ")";
      }
    }
  }

  return {
    value,
    numValue,
    scaledValue,
    humanValue,
    description: member.name + ":" + (!humanValue ? "?" : humanValue.indexOf("\n") >= 0 ? "\n" + humanValue.replace(/^/gm, "      ") : " " + humanValue),
    info: member,
    size
  };
}
function valueToFlags(enumInfo, value) {
  var r = [];
  var curr = value;

  for (var key of Object.keys(enumInfo.members)) {
    var val = enumInfo.members[key];

    if (curr & val) {
      r.push(val);
    }
  }

  return r;
}
function flagsToValue(values) {
  return values.reduce((prev, cur) => prev | cur, 0);
}
function decodeMembers(service, pktInfo, pkt, off) {
  if (off === void 0) {
    off = 0;
  }

  var fields = pktInfo.fields.slice(0);
  var idx = fields.findIndex(f => f.startRepeats);

  if (idx >= 0) {
    if (fields.some(f => !f.storage)) throw new Error("zero-sized field in repeats:");
    var sz = 0;

    for (var f of fields) {
      sz += Math.abs(f.storage);
    } // make sure we have enough fields to decode all data


    while (sz <= pkt.data.length) {
      var _f = fields[idx++];
      sz += Math.abs(_f.storage);
      fields.push(_f);
    }
  }

  return fields.map(mem => {
    var decoded = decodeMember(service, pktInfo, mem, pkt, off);
    if (decoded) off += decoded.size;
    return decoded;
  }).filter(info => !!info);
}
function wrapDecodedMembers(decoded) {
  if (decoded.length == 0) return " {}";else if (decoded.length == 1 && decoded[0].description.length < 60) return " { " + decoded[0].description + " }";else return " {\n" + decoded.map(d => "    " + d.description).join("\n") + "\n}";
}

function syntheticPktInfo(kind, addr) {
  return {
    kind,
    identifier: addr,
    name: (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(addr),
    description: "",
    fields: [{
      name: "_",
      type: "bytes",
      storage: 0
    }]
  };
}

function decodeRegister(service, pkt) {
  var isSet = pkt.isRegisterSet;
  var isGet = pkt.isRegisterGet;
  if (!isSet && !isGet) return null;
  var error = "";
  var addr = pkt.serviceCommand & _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_REG_MASK */ .Pbb;
  var regInfo = service === null || service === void 0 ? void 0 : service.packets.find(p => (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .isRegister */ .x5)(p) && p.identifier == addr);

  if (!regInfo) {
    regInfo = syntheticPktInfo("rw", addr);
    error = "unable to decode register";
  }

  var decoded = decodeMembers(service, regInfo, pkt);

  if (regInfo.packFormat && pkt.data.length) {
    try {
      var recoded = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)((0,_pack__WEBPACK_IMPORTED_MODULE_5__/* .jdpack */ .AV)(regInfo.packFormat, (0,_pack__WEBPACK_IMPORTED_MODULE_5__/* .jdunpack */ .TE)(pkt.data, regInfo.packFormat)));

      if (recoded !== undefined && recoded !== (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(pkt.data)) {
        error = "invalid data packing, " + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(pkt.data) + " recoded to " + recoded;
      }
    } catch (e) {
      error = "invalid data packing, " + e.message;
    }
  }

  var description = "";
  if (decoded.length == 0) description = regInfo.name;else if (decoded.length == 1) description = regInfo.name + ": " + decoded[0].humanValue;else description = wrapDecodedMembers(decoded);
  if (isGet) description = "GET " + description;else description = "SET " + description;
  return {
    service,
    info: regInfo,
    decoded,
    description,
    error
  };
}

function decodeEvent(service, pkt) {
  if (pkt.isCommand || !pkt.isEvent) return null;
  var evCode = pkt.eventCode;
  var evInfo = (service === null || service === void 0 ? void 0 : service.packets.find(p => p.kind == "event" && p.identifier == evCode)) || syntheticPktInfo("event", evCode);
  var decoded = decodeMembers(service, evInfo, pkt);
  var description = "EVENT[" + pkt.eventCounter + "] " + evInfo.name + wrapDecodedMembers(decoded);
  return {
    service,
    info: evInfo,
    decoded,
    description
  };
}

function decodeCommand(service, pkt) {
  var kind = pkt.isCommand ? "command" : "report";
  var cmdInfo = (service === null || service === void 0 ? void 0 : service.packets.find(p => p.kind == kind && p.identifier == pkt.serviceCommand)) || syntheticPktInfo(kind, pkt.serviceCommand);
  var decoded = decodeMembers(service, cmdInfo, pkt);
  var description = (pkt.isCommand ? "CMD " : "REPORT ") + cmdInfo.name + wrapDecodedMembers(decoded);
  return {
    service,
    info: cmdInfo,
    decoded,
    description
  };
}

function decodeCRCack(service, pkt) {
  if (!pkt.isReport || !pkt.isCRCAck) return null;
  return {
    service,
    info: syntheticPktInfo("report", pkt.serviceCommand),
    decoded: [],
    description: "CRC-ACK " + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(pkt.serviceCommand)
  };
}

function decodePacket(service, pkt) {
  var decoded = decodeCRCack(service, pkt) || decodeRegister(service, pkt) || decodeEvent(service, pkt) || decodeCommand(service, pkt);
  return decoded;
}

function decodePipe(pkt) {
  var cmd = pkt.serviceCommand;
  var pinfo = pkt.device.port(cmd >> _constants__WEBPACK_IMPORTED_MODULE_3__/* .PIPE_PORT_SHIFT */ .N63);
  if (!pinfo.pipeType) return null;
  var [servId, pipeType, dir] = pinfo.pipeType.split(/\./);
  var service = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .serviceSpecificationFromName */ .kB)(servId);
  if (!service) return null;
  var meta = !!(cmd & _constants__WEBPACK_IMPORTED_MODULE_3__/* .PIPE_METADATA_MASK */ .Lqh);
  var candidates = service.packets.filter(p => p.pipeType == pipeType && /pipe/.test(p.kind) && /meta/.test(p.kind) == meta && /command/.test(p.kind) == (dir == "command")).filter(p => !meta || pkt.getNumber(_buffer__WEBPACK_IMPORTED_MODULE_0__/* .NumberFormat.UInt16LE */ .y4.UInt16LE, 0) == p.identifier);
  var cmdInfo = candidates[0];

  if (cmdInfo) {
    var decoded = decodeMembers(service, cmdInfo, pkt, meta ? 4 : 0);
    var description = cmdInfo.kind.toUpperCase() + " " + cmdInfo.name + wrapDecodedMembers(decoded);
    return {
      service,
      info: cmdInfo,
      decoded,
      description
    };
  }

  return null;
}

function decodePacketData(pkt) {
  try {
    if (pkt.device && pkt.isPipe) {
      var info = decodePipe(pkt);
      if (info) return info;
    }

    var _serviceClass = pkt.serviceClass;
    var service = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .serviceSpecificationFromClassIdentifier */ .d5)(_serviceClass);
    return decodePacket(service, pkt);
  } catch (error) {
    console.error(error, {
      error,
      pkt,
      data: (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(pkt.data)
    });
    throw error;
  }
}

function reverseLookup(map, n) {
  for (var k of Object.keys(map)) {
    if (map[k] == n) return k;
  }

  return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(n);
}

function serviceClass(name) {
  var serv = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .serviceSpecificationFromName */ .kB)(name);
  return serv ? serv.classIdentifier : -1;
}
function serviceName(serviceClass) {
  if (!(0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .isSet */ .DM)(serviceClass)) return "?";
  var serv = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .serviceSpecificationFromClassIdentifier */ .d5)(serviceClass);
  return serv ? serv.name.toUpperCase() : "?";
}
function serviceShortIdOrClass(serviceClass) {
  if (!isSet(serviceClass)) return "?";
  var serv = serviceSpecificationFromClassIdentifier(serviceClass);
  return (serv === null || serv === void 0 ? void 0 : serv.shortId) || "0x" + serviceClass.toString(16);
}
function deviceServiceName(pkt) {
  var _pkt$device2, _pkt$device3;

  var srv_class = pkt === null || pkt === void 0 ? void 0 : (_pkt$device2 = pkt.device) === null || _pkt$device2 === void 0 ? void 0 : _pkt$device2.serviceClassAt(pkt.serviceIndex);
  var serv_id = serviceName(srv_class);
  return ((pkt === null || pkt === void 0 ? void 0 : (_pkt$device3 = pkt.device) === null || _pkt$device3 === void 0 ? void 0 : _pkt$device3.shortId) || "?") + "/" + serv_id + ":" + pkt.serviceIndex;
}
function commandName(n, serviceClass) {
  var _SystemCmd$n;

  var pref = "";
  if ((n & _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_TOP_MASK */ .f6P) == _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_SET_REG */ .YUL) pref = "SET[";else if ((n & _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_TOP_MASK */ .f6P) == _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_GET_REG */ .V4G) pref = "GET[";

  if (pref) {
    var _SystemReg$reg;

    var reg = n & _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_REG_MASK */ .Pbb;
    var regName = (_SystemReg$reg = _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__/* .SystemReg */ .ZJq[reg]) === null || _SystemReg$reg === void 0 ? void 0 : _SystemReg$reg.toLowerCase(); // try reserved registers first, fast path

    if (regName === undefined) {
      var _serviceSpec$packets$;

      var serviceSpec = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .serviceSpecificationFromClassIdentifier */ .d5)(serviceClass);
      regName = serviceSpec === null || serviceSpec === void 0 ? void 0 : (_serviceSpec$packets$ = serviceSpec.packets.find(pkt => (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .isRegister */ .x5)(pkt) && pkt.identifier === reg)) === null || _serviceSpec$packets$ === void 0 ? void 0 : _serviceSpec$packets$.name;
    }

    return pref + (regName !== undefined ? regName : "x" + reg.toString(16)) + "]";
  }

  var r = (_SystemCmd$n = _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__/* .SystemCmd */ .xSq[n]) === null || _SystemCmd$n === void 0 ? void 0 : _SystemCmd$n.toLowerCase();

  if (r === undefined) {
    var _serviceSpec$packets$2;

    var _serviceSpec = (0,_spec__WEBPACK_IMPORTED_MODULE_2__/* .serviceSpecificationFromClassIdentifier */ .d5)(serviceClass);

    r = _serviceSpec === null || _serviceSpec === void 0 ? void 0 : (_serviceSpec$packets$2 = _serviceSpec.packets.find(pkt => pkt.kind === "command" && pkt.identifier === n)) === null || _serviceSpec$packets$2 === void 0 ? void 0 : _serviceSpec$packets$2.name;
  }

  return r;
}

function num2str(n) {
  return n + " (0x" + n.toString(16) + ")";
}

function toAscii(d) {
  var r = "";

  for (var i = 0; i < d.length; ++i) {
    var c = d[i];
    if (c < 32 || c >= 128) r += ".";else r += String.fromCharCode(c);
  }

  return r;
}
function hexDump(d) {
  var chunk = 32;
  if (d.length <= chunk) return (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(d) + "\u00A0|\u00A0" + toAscii(d);
  var a = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toArray */ .qo)(d);
  var r = "";

  for (var i = 0; i < d.length; i += chunk) {
    if (i + chunk >= d.length) {
      var s = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .toHex */ .NC)(a.slice(i));

      while (s.length < chunk * 2) {
        s += "  ";
      }

      r += s + "\u00A0|\u00A0" + toAscii(a.slice(i));
    } else {
      r += hexDump(a.slice(i, i + chunk)) + "\n";
    }
  }

  return r;
}
function printPacket(pkt, opts) {
  var _opts;

  if (opts === void 0) {
    opts = {};
  }

  var frame_flags = pkt.frameFlags;
  var devname = pkt.friendlyDeviceName;
  var service_name = pkt.friendlyServiceName;
  var cmdname = pkt.friendlyCommandName || (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(pkt.serviceCommand);
  var sender = pkt.sender;
  if (opts.skipResetIn && pkt.serviceIndex === _constants__WEBPACK_IMPORTED_MODULE_3__/* .JD_SERVICE_INDEX_CTRL */ .fey && pkt.serviceCommand === (_constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_SET_REG */ .YUL | _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__/* .ControlReg.ResetIn */ .toU.ResetIn)) return "";
  var pdesc = devname + "/" + service_name + ": " + cmdname + "; sz=" + pkt.size;
  if (frame_flags & _constants__WEBPACK_IMPORTED_MODULE_3__/* .JD_FRAME_FLAG_COMMAND */ .e4B) pdesc = "to " + pdesc;else pdesc = "from " + pdesc;
  if (frame_flags & _constants__WEBPACK_IMPORTED_MODULE_3__/* .JD_FRAME_FLAG_ACK_REQUESTED */ .amS) pdesc = "[ack:" + (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .hexNum */ .Rj)(pkt.crc) + "] " + pdesc;
  var d = pkt.data;

  if (pkt.device && pkt.serviceIndex == _constants__WEBPACK_IMPORTED_MODULE_3__/* .JD_SERVICE_INDEX_CTRL */ .fey && pkt.serviceCommand == _constants__WEBPACK_IMPORTED_MODULE_3__/* .CMD_ADVERTISEMENT_DATA */ .zf$) {
    if (pkt.device.lastServiceUpdate < pkt.timestamp) {
      if (opts.skipRepeatedAnnounce) return "";else pdesc = " ====== " + pdesc;
    } else {
      pdesc += "; Announce services: " + pkt.device.serviceClasses.map(serviceName).join(", ");
    }
  } else {
    var decoded = pkt.decoded;

    if (decoded) {
      pdesc += "; " + decoded.description;
    } else if (0 < d.length && d.length <= 4) {
      var v0 = pkt.uintData,
          v1 = pkt.intData;
      pdesc += "; " + num2str(v0);
      if (v0 != v1) pdesc += "; signed: " + num2str(v1);
    } else if (d.length) {
      pdesc += "; " + hexDump(d);
    }
  }

  if (sender) pdesc += " (" + sender + ")";
  return (!isNaN(pkt.timestamp) && (_opts = opts) !== null && _opts !== void 0 && _opts.showTime ? Math.round(pkt.timestamp) + "ms: " : "") + pdesc;
}

/***/ }),

/***/ 80303:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dG": function() { return /* binding */ cryptoRandomUint32; },
/* harmony export */   "RO": function() { return /* binding */ anyRandomUint32; },
/* harmony export */   "sG": function() { return /* binding */ randomUInt; },
/* harmony export */   "O6": function() { return /* binding */ randomBytes; },
/* harmony export */   "b_": function() { return /* binding */ randomDeviceId; }
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81794);

function cryptoRandomUint32(length) {
  if (typeof window === "undefined") return undefined; // not supported

  var vals = new Uint32Array(length);
  window.crypto.getRandomValues(vals);
  return vals;
}
function anyRandomUint32(length) {
  var r = cryptoRandomUint32(length);

  if (!r) {
    r = new Uint32Array(length);

    for (var i = 0; i < r.length; ++i) {
      r[i] = Math.random() * 0x100000000 >>> 0;
    }
  }

  return r;
}
function randomUInt(max) {
  var arr = anyRandomUint32(1);
  return arr[0] % max;
}
function randomBytes(n) {
  var buf = anyRandomUint32(n);
  var r = new Uint8Array(buf.length);

  for (var i = 0; i < n; ++i) {
    r[i] = buf[i] & 0xff;
  }

  return r;
}
function randomDeviceId() {
  var devId = anyRandomUint32(8);

  for (var i = 0; i < 8; ++i) {
    devId[i] &= 0xff;
  }

  return (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .toHex */ .NC)(devId);
}

/***/ }),

/***/ 8695:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ProtocolTestServer */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94578);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91635);
/* harmony import */ var _pipes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93642);
/* harmony import */ var _serviceserver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5800);







var ProtocolTestServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(ProtocolTestServer, _JDServiceServer);

  function ProtocolTestServer() {
    var _this;

    _this = _JDServiceServer.call(this, _constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_PROTO_TEST */ .$Bn) || this;

    _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwBool */ .M7y.RwBool, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoBool */ .M7y.RoBool, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CBool */ .PZz.CBool, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EBool */ .ZRA.EBool, false);

    _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwI32 */ .M7y.RwI32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoI32 */ .M7y.RoI32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CI32 */ .PZz.CI32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EI32 */ .ZRA.EI32, 0);

    _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwU32 */ .M7y.RwU32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoU32 */ .M7y.RoU32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CU32 */ .PZz.CU32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EU32 */ .ZRA.EU32, 0);

    _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwString */ .M7y.RwString, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoString */ .M7y.RoString, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CString */ .PZz.CString, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EString */ .ZRA.EString, "");

    _this.rwBytes = _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwBytes */ .M7y.RwBytes, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoBytes */ .M7y.RoBytes, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CBytes */ .PZz.CBytes, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EBytes */ .ZRA.EBytes, new Uint8Array(0));

    _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwI8U8U16I32 */ .M7y.RwI8U8U16I32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoI8U8U16I32 */ .M7y.RoI8U8U16I32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CI8U8U16I32 */ .PZz.CI8U8U16I32, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EI8U8U16I32 */ .ZRA.EI8U8U16I32, 0, 0, 0, 0);

    _this.init(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RwU8String */ .M7y.RwU8String, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestReg.RoU8String */ .M7y.RoU8String, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CU8String */ .PZz.CU8String, _constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestEvent.EU8String */ .ZRA.EU8String, 0, "");

    _this.addCommand(_constants__WEBPACK_IMPORTED_MODULE_0__/* .ProtoTestCmd.CReportPipe */ .PZz.CReportPipe, _this.handleReportPipe.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  var _proto = ProtocolTestServer.prototype;

  _proto.init = function init(rwi, roi, ci, ei) {
    for (var _len = arguments.length, values = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      values[_key - 4] = arguments[_key];
    }

    var rw = this.addRegister(rwi, values);
    var ro = this.addRegister(roi, rw.values());
    rw.on(_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver, () => {
      ro.setValues(rw.values());
      this.sendEvent(ei, rw.data);
    });
    this.addCommand(ci, pkt => rw.setValues((0,_pack__WEBPACK_IMPORTED_MODULE_1__/* .jdunpack */ .TE)(pkt.data, rw.specification.packFormat)));
    return rw;
  };

  _proto.handleReportPipe = /*#__PURE__*/function () {
    var _handleReportPipe = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* (pkt) {
      var pipe = _pipes__WEBPACK_IMPORTED_MODULE_2__/* .OutPipe.from */ .Ah.from(this.device.bus, pkt, true);
      yield pipe.respondForEach(this.rwBytes.data, b => {
        var buf = new Uint8Array(1);
        buf[0] = b;
        return (0,_pack__WEBPACK_IMPORTED_MODULE_1__/* .jdpack */ .AV)("b", [buf]);
      });
    });

    function handleReportPipe(_x) {
      return _handleReportPipe.apply(this, arguments);
    }

    return handleReportPipe;
  }();

  return ProtocolTestServer;
}(_serviceserver__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z);
/* harmony default export */ __webpack_exports__["Z"] = (ProtocolTestServer);

/***/ }),

/***/ 88538:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export JDRegisterServer */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94578);
/* harmony import */ var _pack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91635);
/* harmony import */ var _packet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57683);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);
/* harmony import */ var _eventsource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45484);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(71815);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(26799);










function defaultFieldPayload(specification) {
  var r = undefined;

  switch (specification.type) {
    case "bool":
      r = 0;
      break;

    case "i8":
    case "i16":
    case "i32":
    case "u8":
    case "u16":
    case "u32":
      {
        var min = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .pick */ .ei)(specification.typicalMin, specification.absoluteMin, undefined);
        var max = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .pick */ .ei)(specification.typicalMax, specification.absoluteMax, undefined);
        if (max !== undefined && min !== undefined) r = (max + min) / 2;else r = 0;
        break;
      }

    case "bytes":
      {
        r = new Uint8Array(0);
        break;
      }

    case "string":
    case "string0":
      {
        r = "";
        break;
      }
  }

  if (/^(u0|i1)\.\d+$/.test(specification.type)) r = 0;
  return r;
}

function defaultPayload(specification) {
  var {
    fields
  } = specification;
  var rs = fields.map(defaultFieldPayload);
  return rs;
}
/**
 * A register "server" instance, used to assembly service servers.
 * @category Servers
 */


var JDRegisterServer = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(JDRegisterServer, _JDEventSource);

  function JDRegisterServer(service, identifier, defaultValue) {
    var _this$data, _this$specification;

    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.skipBoundaryCheck = false;
    _this.skipErrorInjection = false;
    _this.service = service;
    _this.identifier = identifier;
    var serviceSpecification = _this.service.specification;
    _this.specification = serviceSpecification.packets.find(pkt => (0,_spec__WEBPACK_IMPORTED_MODULE_5__/* .isRegister */ .x5)(pkt) && pkt.identifier === _this.identifier);
    var v = defaultValue;
    if (!v && !_this.specification.optional) v = defaultPayload(_this.specification);

    if (v !== undefined && !v.some(vi => vi === undefined)) {
      _this.data = (0,_pack__WEBPACK_IMPORTED_MODULE_0__/* .jdpack */ .AV)(_this.packFormat, v);
    } // keep a copy to handle reset


    _this.resetData = (_this$data = _this.data) === null || _this$data === void 0 ? void 0 : _this$data.slice(0); // don't check boundaries if there are none

    _this.skipBoundaryCheck = !((_this$specification = _this.specification) !== null && _this$specification !== void 0 && _this$specification.fields.some(field => (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .isSet */ .DM)(field.absoluteMin) || (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .isSet */ .DM)(field.absoluteMax)));
    return _this;
  }

  var _proto = JDRegisterServer.prototype;

  _proto.values = function values() {
    return (0,_pack__WEBPACK_IMPORTED_MODULE_0__/* .jdunpack */ .TE)(this.data, this.packFormat);
  };

  _proto.normalize = function normalize(values) {
    // enforce boundaries from spec
    if (!this.skipBoundaryCheck) {
      var _this$specification2;

      (_this$specification2 = this.specification) === null || _this$specification2 === void 0 ? void 0 : _this$specification2.fields.forEach((field, fieldi) => {
        if (field.isSimpleType) {
          var value = values[fieldi]; // clamp within bounds

          var min = field.absoluteMin;
          if (min !== undefined) value = Math.max(min, value);
          var max = field.absoluteMax;
          if (max !== undefined) value = Math.min(max, value); // update

          values[fieldi] = value;
        }
      });
    } // enforce other boundaries


    this.emit(_constants__WEBPACK_IMPORTED_MODULE_4__/* .PACKET_DATA_NORMALIZE */ .fjv, values);
  };

  _proto.shouldNormalize = function shouldNormalize() {
    return !this.skipBoundaryCheck || this.listenerCount(_constants__WEBPACK_IMPORTED_MODULE_4__/* .PACKET_DATA_NORMALIZE */ .fjv);
  };

  _proto.setValues = function setValues(values, skipChangeEvent) {
    if (this.readOnly) return;
    if (this.shouldNormalize()) this.normalize(values);
    if (this.valueProcessor) values = this.valueProcessor(values);
    var d = (0,_pack__WEBPACK_IMPORTED_MODULE_0__/* .jdpack */ .AV)(this.packFormat, values);

    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .bufferEq */ .zo)(this.data, d)) {
      this.data = d;
      if (!skipChangeEvent) this.emit(_constants__WEBPACK_IMPORTED_MODULE_4__/* .CHANGE */ .Ver);
    }
  };

  _proto.reset = function reset() {
    var _this$resetData;

    this.data = (_this$resetData = this.resetData) === null || _this$resetData === void 0 ? void 0 : _this$resetData.slice(0);
  };

  _proto.sendGetAsync = /*#__PURE__*/function () {
    var _sendGetAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
      var _this$errorRegister;

      this.emit(_constants__WEBPACK_IMPORTED_MODULE_4__/* .REGISTER_PRE_GET */ .q5h);
      var d = this.data;
      if (!d) return;
      var error = !this.skipErrorInjection && ((_this$errorRegister = this.errorRegister) === null || _this$errorRegister === void 0 ? void 0 : _this$errorRegister.values()[0]);

      if (error && !isNaN(error)) {
        // apply error artifically
        var vs = this.values();

        for (var i = 0; i < vs.length; ++i) {
          vs[i] += Math.random() * error;
        }

        d = (0,_pack__WEBPACK_IMPORTED_MODULE_0__/* .jdpack */ .AV)(this.packFormat, vs);
      }

      yield this.service.sendPacketAsync(_packet__WEBPACK_IMPORTED_MODULE_1__/* ["default"].from */ .Z.from(this.identifier | _constants__WEBPACK_IMPORTED_MODULE_4__/* .CMD_GET_REG */ .V4G, d));
    });

    function sendGetAsync() {
      return _sendGetAsync.apply(this, arguments);
    }

    return sendGetAsync;
  }();

  _proto.handlePacket = function handlePacket(pkt) {
    if (this.identifier !== pkt.registerIdentifier) return false;

    if (pkt.isRegisterGet) {
      this.sendGetAsync();
    } else if (this.identifier >> 8 !== 0x1) {
      // set, non-const
      var changed = false;
      var d = pkt.data; // unpack and check boundaries

      if (this.shouldNormalize() || this.valueProcessor) {
        try {
          // unpack, apply boundaries, repack
          var _values = (0,_pack__WEBPACK_IMPORTED_MODULE_0__/* .jdunpack */ .TE)(d, this.packFormat);

          if (this.shouldNormalize()) this.normalize(_values);
          if (this.valueProcessor) _values = this.valueProcessor(_values);
          d = (0,_pack__WEBPACK_IMPORTED_MODULE_0__/* .jdpack */ .AV)(this.packFormat, _values);
        } catch (e) {
          // invalid format, refuse
          this.emit(_constants__WEBPACK_IMPORTED_MODULE_4__/* .PACKET_INVALID_DATA */ .bBc, pkt);
        }
      } // test if anything changed


      if (!(0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .bufferEq */ .zo)(this.data, d)) {
        this.data = d;
        changed = true;
      }

      this.lastSetTime = this.service.timestamp;
      this.emit(_constants__WEBPACK_IMPORTED_MODULE_4__/* .REPORT_RECEIVE */ .Gb8);
      if (changed) this.emit(_constants__WEBPACK_IMPORTED_MODULE_4__/* .CHANGE */ .Ver);
    }

    return true;
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(JDRegisterServer, [{
    key: "packFormat",
    get: function get() {
      return this.specification.packFormat;
    }
  }]);

  return JDRegisterServer;
}(_eventsource__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP);
/* harmony default export */ __webpack_exports__["Z"] = (JDRegisterServer);

/***/ }),

/***/ 55739:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ serverserviceprovider; }
});

// UNUSED EXPORTS: JDServerServiceProvider

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules
var toConsumableArray = __webpack_require__(15785);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(43144);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/packet.ts
var packet = __webpack_require__(57683);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pack.ts
var pack = __webpack_require__(91635);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/servers/serviceserver.ts
var serviceserver = __webpack_require__(5800);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/servers/controlserver.ts







/**
 * A control service server
 * @category Servers
 */

var ControlServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(ControlServer, _JDServiceServer);

  function ControlServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_CONTROL */.gm9) || this;
    _this.statusLightColor = undefined;
    var {
      resetIn
    } = options || {};
    _this.startTime = Date.now();
    _this.deviceDescription = _this.addRegister(constants/* ControlReg.DeviceDescription */.toU.DeviceDescription);
    _this.mcuTemperature = _this.addRegister(constants/* ControlReg.McuTemperature */.toU.McuTemperature, [25]);
    _this.uptime = _this.addRegister(constants/* ControlReg.Uptime */.toU.Uptime);
    if (resetIn) _this.resetIn = _this.addRegister(constants/* ControlReg.ResetIn */.toU.ResetIn, [0]);

    _this.addCommand(constants/* ControlCmd.Services */.VSW.Services, _this.announce.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* ControlCmd.Identify */.VSW.Identify, _this.identify.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* ControlCmd.Reset */.VSW.Reset, _this.handleReset.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* ControlCmd.Noop */.VSW.Noop, null);

    _this.addCommand(constants/* ControlCmd.SetStatusLight */.VSW.SetStatusLight, _this.handleSetStatusLight.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = ControlServer.prototype;

  _proto.announce = /*#__PURE__*/function () {
    var _announce = (0,asyncToGenerator/* default */.Z)(function* () {
      // restartCounter, flags, packetCount, serviceClass
      var pkt = packet/* default.jdpacked */.Z.jdpacked(constants/* ControlCmd.Services */.VSW.Services, "u16 u8 x[1] u32[]", [this.device.restartCounter | constants/* ControlAnnounceFlags.StatusLightRgbNoFade */.P99.StatusLightRgbNoFade | constants/* ControlAnnounceFlags.SupportsACK */.P99.SupportsACK, this.device.packetCount + 1, this.device.services().slice(1).map(srv => srv.serviceClass)]);
      yield this.sendPacketAsync(pkt); // micros

      this.uptime.setValues([(Date.now() - this.startTime) * 100], true); // check if we need to reset

      if (this.resetIn) {
        var [resetIn] = this.resetIn.values();

        if (resetIn) {
          var resetTimestamp = resetIn / 1000 + this.resetIn.lastSetTime;

          if (resetTimestamp < this.device.bus.timestamp) {
            // reset in expired
            console.debug(this + " reset in expired", {
              resetIn,
              lastSet: this.resetIn.lastSetTime,
              resetTimestamp
            });
            this.device.reset();
          }
        }
      }
    });

    function announce() {
      return _announce.apply(this, arguments);
    }

    return announce;
  }();

  _proto.identify = /*#__PURE__*/function () {
    var _identify = (0,asyncToGenerator/* default */.Z)(function* () {
      this.emit(constants/* IDENTIFY */.GOy);
    });

    function identify() {
      return _identify.apply(this, arguments);
    }

    return identify;
  }();

  _proto.handleReset = function handleReset() {
    this.startTime = Date.now();
    this.device.reset();
  };

  _proto.handleSetStatusLight = function handleSetStatusLight(pkt) {
    var [toRed, toGreen, toBlue] = (0,pack/* jdunpack */.TE)(pkt.data, "u8 u8 u8 u8");
    this.statusLightColor = toRed << 16 | toGreen << 8 | toBlue;
    this.emit(constants/* CHANGE */.Ver);
  };

  return ControlServer;
}(serviceserver/* default */.Z);
/* harmony default export */ var controlserver = (ControlServer);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/eventsource.ts
var eventsource = __webpack_require__(45484);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pretty.ts
var pretty = __webpack_require__(10913);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/random.ts
var random = __webpack_require__(80303);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/servers/serviceprovider.ts








/**
 * Implements a device with service servers.
 * @category Servers
 */
var JDServiceProvider = /*#__PURE__*/function (_JDEventSource) {
  (0,inheritsLoose/* default */.Z)(JDServiceProvider, _JDEventSource);

  function JDServiceProvider(template, deviceId) {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.template = template;
    _this.deviceId = deviceId;
    if (!_this.deviceId) _this.deviceId = (0,random/* randomDeviceId */.b_)();
    _this.shortId = (0,pretty/* shortDeviceId */.xV)(_this.deviceId);
    _this.handleSelfAnnounce = _this.handleSelfAnnounce.bind((0,assertThisInitialized/* default */.Z)(_this));
    _this.handlePacket = _this.handlePacket.bind((0,assertThisInitialized/* default */.Z)(_this));
    return _this;
  }

  var _proto = JDServiceProvider.prototype;

  _proto.start = function start() {
    if (this._bus) {
      this._bus.on(constants/* SELF_ANNOUNCE */.Pbc, this.handleSelfAnnounce);

      this._bus.on([constants/* PACKET_PROCESS */.wY8, constants/* PACKET_SEND */.RaS], this.handlePacket);
    }
  };

  _proto.stop = function stop() {
    if (this._bus) {
      this._bus.off(constants/* SELF_ANNOUNCE */.Pbc, this.handleSelfAnnounce);

      this._bus.off([constants/* PACKET_PROCESS */.wY8, constants/* PACKET_SEND */.RaS], this.handlePacket);

      this._bus = undefined;
    }
  };

  _proto.handleSelfAnnounce = function handleSelfAnnounce() {};

  (0,createClass/* default */.Z)(JDServiceProvider, [{
    key: "bus",
    get: function get() {
      return this._bus;
    },
    set: function set(value) {
      if (value !== this._bus) {
        this.stop();
        this._bus = value;
        if (this._bus) this.start();
      }
    }
  }]);

  return JDServiceProvider;
}(eventsource/* default */.ZP);
/* harmony default export */ var serviceprovider = (JDServiceProvider);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/servers/serverserviceprovider.ts










/**
 * Implements a device with service servers.
 * @category Servers
 */

var JDServerServiceProvider = /*#__PURE__*/function (_JDServiceProvider) {
  (0,inheritsLoose/* default */.Z)(JDServerServiceProvider, _JDServiceProvider);

  function JDServerServiceProvider(template, services, options) {
    var _this;

    _this = _JDServiceProvider.call(this, template, options === null || options === void 0 ? void 0 : options.deviceId) || this;
    _this._restartCounter = 0;
    _this._packetCount = 0;
    _this._eventCounter = undefined;
    _this.controlService = new controlserver(options);
    _this._services = [];

    _this.updateServices(services);

    _this.on(constants/* REFRESH */.RGM, _this.refreshRegisters.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = JDServerServiceProvider.prototype;

  _proto.updateServices = function updateServices(services) {
    var _this$_services;

    // clear previous services
    (_this$_services = this._services) === null || _this$_services === void 0 ? void 0 : _this$_services.slice(1).forEach(srv => srv.device = undefined); // store new services

    this._services = [this.controlService].concat((0,toConsumableArray/* default */.Z)(services));

    if (this._services.length >= constants/* MAX_SERVICES_LENGTH */.vgB) {
      this.emit(constants/* ERROR */.pnR, "too many services (" + this._services.length + ") > " + constants/* MAX_SERVICES_LENGTH */.vgB);
      console.warn("jacdac: dropping services to " + constants/* MAX_SERVICES_LENGTH */.vgB);
      this._services = this._services.slice(0, constants/* MAX_SERVICES_LENGTH */.vgB);
    }

    this._services.forEach((srv, i) => {
      srv.device = this;
      srv.serviceIndex = i;
    });

    this.emit(constants/* CHANGE */.Ver);
  };

  _proto.removeService = function removeService(service) {
    if ((service === null || service === void 0 ? void 0 : service.device) !== this) return; // not in this device;

    var newServices = this._services.slice(1);

    var index = newServices.indexOf(service);

    if (index > -1) {
      newServices.splice(index, 1);
      this.updateServices(newServices);
    }
  };

  _proto.start = function start() {
    _JDServiceProvider.prototype.start.call(this);

    this._packetCount = 0;
  };

  _proto.stop = function stop() {
    this._delayedPackets = undefined;

    _JDServiceProvider.prototype.stop.call(this);
  };

  _proto.handleSelfAnnounce = function handleSelfAnnounce() {
    _JDServiceProvider.prototype.handleSelfAnnounce.call(this);

    if (this._restartCounter < 0xf) this._restartCounter++; // async

    this.controlService.announce(); // also send status codes, for non-zero codes

    var activeServices = this.services().filter(srv => !(0,utils/* isBufferEmpty */.pL)(srv.statusCode.data));
    activeServices.forEach(srv => srv.statusCode.sendGetAsync()); // reset counter

    this._packetCount = 0;
  };

  _proto.services = function services() {
    return this._services.slice(0);
  };

  _proto.service = function service(serviceIndex) {
    return serviceIndex !== undefined && this._services[serviceIndex];
  };

  _proto.toString = function toString() {
    return "host " + this.shortId;
  };

  _proto.createEventCmd = function createEventCmd(evCode) {
    if (!this._eventCounter) this._eventCounter = 0;
    this._eventCounter = this._eventCounter + 1 & constants/* CMD_EVENT_COUNTER_MASK */.EME;
    if (evCode >> 8) throw new Error("invalid event code");
    return constants/* CMD_EVENT_MASK */.eMy | this._eventCounter << constants/* CMD_EVENT_COUNTER_POS */.T6O | evCode;
  };

  _proto.sendPacketAsync = /*#__PURE__*/function () {
    var _sendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      if (!this.bus) return Promise.resolve(); // qos counter

      this._packetCount++;
      pkt.deviceIdentifier = this.deviceId; // compute crc and send

      var p = pkt.sendCoreAsync(this.bus); // send to current bus

      this.bus.processPacket(pkt); // return priomise

      return p;
    });

    function sendPacketAsync(_x) {
      return _sendPacketAsync.apply(this, arguments);
    }

    return sendPacketAsync;
  }();

  _proto.delayedSend = function delayedSend(pkt, timestamp) {
    if (!this._delayedPackets) {
      this._delayedPackets = []; // start processing loop

      setTimeout(this.processDelayedPackets.bind(this), 10);
    }

    var dp = {
      timestamp,
      pkt
    };

    this._delayedPackets.push(dp);

    this._delayedPackets.sort((l, r) => -l.timestamp + r.timestamp);
  };

  _proto.processDelayedPackets = function processDelayedPackets() {
    var _this$_delayedPackets2;

    // consume packets that are ready
    while ((_this$_delayedPackets = this._delayedPackets) !== null && _this$_delayedPackets !== void 0 && _this$_delayedPackets.length) {
      var _this$_delayedPackets;

      var {
        timestamp,
        pkt
      } = this._delayedPackets[0];
      if (timestamp > this.bus.timestamp) break;

      this._delayedPackets.shift(); // do we wait?


      try {
        this.sendPacketAsync(pkt);
      } catch (e) {
        // something went wrong, clear queue
        this._delayedPackets = undefined;
        throw e;
      }
    } // keep waiting or stop


    if (!((_this$_delayedPackets2 = this._delayedPackets) !== null && _this$_delayedPackets2 !== void 0 && _this$_delayedPackets2.length)) this._delayedPackets = undefined; // we're done
    else setTimeout(this.processDelayedPackets.bind(this), 10);
  };

  _proto.handlePacket = function handlePacket(pkt) {
    var devIdMatch = pkt.deviceIdentifier == this.deviceId;

    if (pkt.requiresAck && devIdMatch) {
      pkt.requiresAck = false; // make sure we only do it once

      var crc = pkt.crc;
      var ack = packet/* default.onlyHeader */.Z.onlyHeader(crc);
      ack.serviceIndex = constants/* JD_SERVICE_INDEX_CRC_ACK */.$rs;
      this.sendPacketAsync(ack);
    }

    if (pkt.isMultiCommand) {
      if (!pkt.isCommand) return; // only commands supported

      var multiCommandClass = pkt.serviceClass;

      for (var h of this._services) {
        if (h.serviceClass == multiCommandClass) {
          // pretend it's directly addressed to us
          var npkt = pkt.cloneForDevice(this.deviceId, h.serviceIndex);
          h.handlePacket(npkt);
        }
      }
    } else if (devIdMatch) {
      if (!pkt.isCommand) return; // huh? someone's pretending to be us?

      var _h = this._services[pkt.serviceIndex];

      if (_h) {
        // log(`handle pkt at ${h.name} cmd=${pkt.service_command}`)
        _h.handlePacket(pkt);
      }
    } else {
      if (pkt.isCommand) return; // it's a command, and it's not for us
      // reception of ACKs is handled by JDDevice class
    }
  };

  _proto.refreshRegisters = function refreshRegisters() {
    this._services.forEach(srv => srv.emit(constants/* REFRESH */.RGM));
  };

  _proto.reset = function reset() {
    var _this$_services2;

    this._restartCounter = 0;
    this._packetCount = 0;
    (_this$_services2 = this._services) === null || _this$_services2 === void 0 ? void 0 : _this$_services2.forEach(srv => srv.reset());
    this.emit(constants/* RESET */.tdh);
  };

  (0,createClass/* default */.Z)(JDServerServiceProvider, [{
    key: "restartCounter",
    get: function get() {
      return this._restartCounter;
    }
  }, {
    key: "packetCount",
    get: function get() {
      return this._packetCount;
    }
  }, {
    key: "eventCounter",
    get: function get() {
      return this._eventCounter;
    }
  }]);

  return JDServerServiceProvider;
}(serviceprovider);
/* harmony default export */ var serverserviceprovider = (JDServerServiceProvider);

/***/ }),

/***/ 5800:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export JDServiceServer */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94578);
/* harmony import */ var _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73512);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _eventsource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45484);
/* harmony import */ var _packet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57683);
/* harmony import */ var _registerserver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88538);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(26799);










var CALIBRATION_DELAY = 5000;
/**
 * Server instiation options
 * @category Servers
 */

/**
 * Base class for service server implementations
 * @category Servers
 */
var JDServiceServer = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(JDServiceServer, _JDEventSource);

  function JDServiceServer(serviceClass, options) {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.serviceIndex = -1;
    _this._registers = [];
    _this.commands = {};
    _this._locked = false;
    _this.serviceClass = serviceClass;
    var {
      instanceName,
      variant,
      valueValues,
      intensityValues,
      intensityProcessor,
      registerValues,
      isActive
    } = options || {};
    _this.specification = (0,_spec__WEBPACK_IMPORTED_MODULE_5__/* .serviceSpecificationFromClassIdentifier */ .d5)(_this.serviceClass);
    _this.statusCode = _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.StatusCode */ .ZJq.StatusCode, [_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemStatusCodes.Ready */ ._kj.Ready, 0]);
    if (valueValues) _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.Value */ .ZJq.Value, valueValues);

    if (intensityValues) {
      var _intensity = _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.Intensity */ .ZJq.Intensity, intensityValues);

      if (intensityProcessor) _intensity.valueProcessor = intensityProcessor;
      if (isActive) _intensity.on(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver, () => {
        var ev = isActive(_intensity.values());
        if (ev !== undefined) _this.sendEvent(isActive(_intensity.values()) ? _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemEvent.Active */ .nSK.Active : _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemEvent.Inactive */ .nSK.Inactive);
      });
    }

    if (variant) _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.Variant */ .ZJq.Variant, [variant]);
    _this.instanceName = _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.InstanceName */ .ZJq.InstanceName, [instanceName || ""]); // any extra

    registerValues === null || registerValues === void 0 ? void 0 : registerValues.forEach(_ref => {
      var {
        code,
        values
      } = _ref;
      return _this.addRegister(code, values);
    }); // emit event when status code changes

    _this.statusCode.on(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver, () => _this.sendEvent(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .BaseEvent.StatusCodeChanged */ .DVg.StatusCodeChanged, _this.statusCode.data)); // if the device has a calibrate command, regiser handler
    // and put device in calibrationneeded state


    if (_this.specification.packets.find(pkt => pkt.kind === "command" && pkt.identifier === _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemCmd.Calibrate */ .xSq.Calibrate)) {
      _this.addCommand(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemCmd.Calibrate */ .xSq.Calibrate, _this.handleCalibrate.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_this)));

      _this.statusCode.setValues([_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemStatusCodes.CalibrationNeeded */ ._kj.CalibrationNeeded, 0], true);
    }

    _this.handleTwinPacket = _this.handleTwinPacket.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_this));
    return _this;
  }

  var _proto = JDServiceServer.prototype;

  _proto.handleTwinPacket = function handleTwinPacket(pkt) {
    this.handlePacket(pkt);
  };

  _proto.register = function register(code) {
    return this._registers.find(reg => reg.identifier === code);
  };

  _proto.addExistingRegister = function addExistingRegister(reg) {
    this._registers.push(reg);

    return reg;
  };

  _proto.addRegister = function addRegister(identifier, defaultValue) {
    var reg = this._registers.find(r => r.identifier === identifier);

    if (!reg && !this._locked) {
      // make sure this register is supported
      if (!this.specification.packets.find(pkt => (0,_spec__WEBPACK_IMPORTED_MODULE_5__/* .isRegister */ .x5)(pkt) && pkt.identifier === identifier)) return undefined;
      reg = new _registerserver__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(this, identifier, defaultValue);

      this._registers.push(reg);
    }

    return reg;
  };

  _proto.reset = function reset() {
    this.registers.forEach(reg => reg.reset());
  }
  /**
   * Locks the current set of registers
   */
  ;

  _proto.lock = function lock() {
    this._locked = true;
  };

  _proto.addCommand = function addCommand(identifier, handler) {
    if (this._locked) console.error("adding command to locked service");
    this.commands[identifier] = handler;
  };

  _proto.handlePacket = /*#__PURE__*/function () {
    var _handlePacket = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* (pkt) {
      if (pkt.isRegisterGet || pkt.isRegisterSet) {
        var _reg;

        // find register to handle
        var rid = pkt.registerIdentifier;

        var reg = this._registers.find(r => r.identifier === rid);

        if (!reg) {
          // try adding
          reg = this.addRegister(rid);
        }

        (_reg = reg) === null || _reg === void 0 ? void 0 : _reg.handlePacket(pkt);
      } else if (pkt.isCommand) {
        var cmd = this.commands[pkt.serviceCommand];
        if (cmd) cmd(pkt);else if (cmd === undefined) console.debug("ignored command", {
          pkt
        });
      } // ignored?

    });

    function handlePacket(_x) {
      return _handlePacket.apply(this, arguments);
    }

    return handlePacket;
  }();

  _proto.sendPacketAsync = /*#__PURE__*/function () {
    var _sendPacketAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* (pkt) {
      if (this.twin) return;
      pkt.serviceIndex = this.serviceIndex;
      yield this.device.sendPacketAsync(pkt);
    });

    function sendPacketAsync(_x2) {
      return _sendPacketAsync.apply(this, arguments);
    }

    return sendPacketAsync;
  }();

  _proto.sendEvent = /*#__PURE__*/function () {
    var _sendEvent = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* (eventCode, data) {
      if (this.twin) return;
      var {
        device
      } = this;
      var {
        bus
      } = device;
      if (!bus) return;
      var now = bus.timestamp;
      var cmd = device.createEventCmd(eventCode);
      var pkt = _packet__WEBPACK_IMPORTED_MODULE_3__/* ["default"].from */ .Z.from(cmd, data || new Uint8Array(0));
      yield this.sendPacketAsync(pkt);
      device.delayedSend(pkt, now + 20);
      device.delayedSend(pkt, now + 100);
    });

    function sendEvent(_x3, _x4) {
      return _sendEvent.apply(this, arguments);
    }

    return sendEvent;
  }();

  _proto.handleCalibrate = /*#__PURE__*/function () {
    var _handleCalibrate = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* () {
      var [status] = this.statusCode.values();
      if (status !== _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemStatusCodes.Ready */ ._kj.Ready) return;
      this.calibrate();
    });

    function handleCalibrate() {
      return _handleCalibrate.apply(this, arguments);
    }

    return handleCalibrate;
  }();

  _proto.calibrate = /*#__PURE__*/function () {
    var _calibrate = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* () {
      // notify that calibration started
      this.statusCode.setValues([_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemStatusCodes.Calibrating */ ._kj.Calibrating, 0]); // wait 5 seconds

      yield this.device.bus.delay(CALIBRATION_DELAY); // finish calibraion

      this.statusCode.setValues([_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemStatusCodes.Ready */ ._kj.Ready, 0]);
    });

    function calibrate() {
      return _calibrate.apply(this, arguments);
    }

    return calibrate;
  }();

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(JDServiceServer, [{
    key: "device",
    get: function get() {
      return this._device;
    },
    set: function set(value) {
      if (this._device !== value) {
        this._device = value;
        this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .DEVICE_CHANGE */ .RoP);
        this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
      }
    }
  }, {
    key: "twin",
    get: function get() {
      return this._twin;
    },
    set: function set(service) {
      if (service === this._twin) return;

      if (this._twin) {
        this._twin.off(_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_RECEIVE */ .u_S, this.handleTwinPacket);

        this._twin.off(_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_SEND */ .RaS, this.handleTwinPacket);

        this._twinCleanup.forEach(tw => tw()); // unsubscribe

      }

      this._twin = service;
      this._twinCleanup = service ? [] : undefined;

      if (this._twin) {
        this._twin.on(_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_RECEIVE */ .u_S, this.handleTwinPacket);

        this._twin.on(_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_SEND */ .RaS, this.handleTwinPacket);

        this._twin.registers().forEach(twinReg => {
          var reg = this.register(twinReg.code);

          if (reg) {
            reg === null || reg === void 0 ? void 0 : reg.setValues(twinReg.unpackedValue);

            this._twinCleanup.push(twinReg.subscribe(_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_UPDATE */ .rGZ, () => reg.setValues(twinReg.unpackedValue)));
          }
        });
      }

      this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
    }
  }, {
    key: "registers",
    get: function get() {
      return this._registers.slice(0);
    }
  }, {
    key: "timestamp",
    get: function get() {
      var _this$device, _this$_twin, _this$_twin$device;

      var bus = ((_this$device = this.device) === null || _this$device === void 0 ? void 0 : _this$device.bus) || ((_this$_twin = this._twin) === null || _this$_twin === void 0 ? void 0 : (_this$_twin$device = _this$_twin.device) === null || _this$_twin$device === void 0 ? void 0 : _this$_twin$device.bus);
      return bus === null || bus === void 0 ? void 0 : bus.timestamp;
    }
  }]);

  return JDServiceServer;
}(_eventsource__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP);
/* harmony default export */ __webpack_exports__["Z"] = (JDServiceServer);

/***/ }),

/***/ 56763:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": function() { return /* binding */ JDServiceClient; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94578);
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47235);



/**
 * Base class for service clients
 * @category Clients
 */

var JDServiceClient = /*#__PURE__*/function (_JDClient) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(JDServiceClient, _JDClient);

  function JDServiceClient(service) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this.service = service;
    return _this;
  }

  var _proto = JDServiceClient.prototype;

  _proto.toString = function toString() {
    return "client of " + this.service;
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(JDServiceClient, [{
    key: "device",
    get: function get() {
      return this.service.device;
    }
  }, {
    key: "bus",
    get: function get() {
      return this.device.bus;
    }
  }]);

  return JDServiceClient;
}(_client__WEBPACK_IMPORTED_MODULE_0__/* .JDClient */ .z);

/***/ }),

/***/ 26799:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "jr": function() { return /* binding */ clampToStorage; },
  "uM": function() { return /* binding */ identifierToUrlPath; },
  "ao": function() { return /* binding */ isCommand; },
  "n6": function() { return /* binding */ isConstRegister; },
  "cO": function() { return /* binding */ isEvent; },
  "jl": function() { return /* binding */ isHighLevelEvent; },
  "vr": function() { return /* binding */ isHighLevelRegister; },
  "lz": function() { return /* binding */ isInfrastructure; },
  "V9": function() { return /* binding */ isInstanceOf; },
  "YF": function() { return /* binding */ isIntegerType; },
  "tC": function() { return /* binding */ isIntensity; },
  "cb": function() { return /* binding */ isOptionalReadingRegisterCode; },
  "_5": function() { return /* binding */ isPipeReport; },
  "yr": function() { return /* binding */ isPipeReportOf; },
  "vz": function() { return /* binding */ isReading; },
  "x5": function() { return /* binding */ isRegister; },
  "Dm": function() { return /* binding */ isReportOf; },
  "rq": function() { return /* binding */ isSensor; },
  "wh": function() { return /* binding */ isValue; },
  "sX": function() { return /* binding */ isValueOrIntensity; },
  "Mn": function() { return /* binding */ memberValueToString; },
  "m9": function() { return /* binding */ numberFormatFromStorageType; },
  "W1": function() { return /* binding */ numberFormatToStorageType; },
  "we": function() { return /* binding */ scaleFloatToInt; },
  "xy": function() { return /* binding */ scaleIntToFloat; },
  "nT": function() { return /* binding */ serviceMap; },
  "d5": function() { return /* binding */ serviceSpecificationFromClassIdentifier; },
  "kB": function() { return /* binding */ serviceSpecificationFromName; },
  "Le": function() { return /* binding */ serviceSpecifications; },
  "Xg": function() { return /* binding */ tryParseMemberValue; }
});

// UNUSED EXPORTS: addCustomServiceSpecification, clearCustomServiceSpecifications, isActuator, loadServiceSpecifications, parseDeviceId, storageTypeRange

// EXTERNAL MODULE: ./jacdac-ts/src/jdom/buffer.ts
var buffer = __webpack_require__(3482);
;// CONCATENATED MODULE: ./jacdac-ts/jacdac-spec/dist/services.json
var services_namespaceObject = JSON.parse('[{"name":"Common registers and commands","status":"experimental","shortId":"_system","camelName":"system","shortName":"system","extends":[],"notes":{"short":"This file describes common register and command codes.\\n\\nThese are defined in ranges separate from the per-service ones.\\nNo service actually derives from this file, but services can include packets\\ndefined here.\\nTheir code is listed as say `@ intensity` and not `@ 0x01` (the spectool enforces that).","commands":"Command codes are subdivided as follows:\\n* Commands `0x000-0x07f` - common to all services\\n* Commands `0x080-0xeff` - defined per-service\\n* Commands `0xf00-0xfff` - reserved for implementation\\n\\nCommands follow.","registers":"Register codes are subdivided as follows:\\n* Registers `0x001-0x07f` - r/w common to all services\\n* Registers `0x080-0x0ff` - r/w defined per-service\\n* Registers `0x100-0x17f` - r/o common to all services\\n* Registers `0x180-0x1ff` - r/o defined per-service\\n* Registers `0x200-0xeff` - custom, defined per-service\\n* Registers `0xf00-0xfff` - reserved for implementation, should not be seen on the wire\\n\\nThe types listed are typical. Check spec for particular service for exact type,\\nand a service-specific name for a register (eg. `value` could be `pulse_length`).\\nAll registers default to `0` unless otherwise indicated.","events":"Events codes are 8-bit and are subdivided as follows:\\n* Events `0x00-0x7f` - common to all services\\n* Events `0x80-0xff` - defined per-service"},"classIdentifier":536870897,"enums":{"ReadingThreshold":{"name":"ReadingThreshold","storage":1,"members":{"Neutral":1,"Inactive":2,"Active":3}},"StatusCodes":{"name":"StatusCodes","storage":2,"members":{"Ready":0,"Initializing":1,"Calibrating":2,"Sleeping":3,"WaitingForInput":4,"CalibrationNeeded":100}}},"constants":{"announce_interval":{"value":500,"hex":false}},"packets":[{"kind":"command","name":"announce","identifier":0,"description":"Enumeration data for control service; service-specific advertisement data otherwise.\\nControl broadcasts it automatically every ``announce_interval``ms, but other service have to be queried to provide it.","fields":[],"hasReport":true},{"kind":"report","name":"announce","identifier":0,"description":"Enumeration data for control service; service-specific advertisement data otherwise.\\nControl broadcasts it automatically every ``announce_interval``ms, but other service have to be queried to provide it.","fields":[],"secondary":true},{"kind":"command","name":"get_register","identifier":4096,"description":"Registers number `N` is fetched by issuing command `0x1000 | N`.\\nThe report format is the same as the format of the register.","fields":[],"hasReport":true},{"kind":"report","name":"get_register","identifier":4096,"description":"Registers number `N` is fetched by issuing command `0x1000 | N`.\\nThe report format is the same as the format of the register.","fields":[],"secondary":true},{"kind":"command","name":"set_register","identifier":8192,"description":"Registers number `N` is set by issuing command `0x2000 | N`, with the format\\nthe same as the format of the register.","fields":[]},{"kind":"report","name":"event","identifier":1,"description":"Event from sensor or a broadcast service.","fields":[{"name":"event_id","type":"u32","storage":4,"isSimpleType":true},{"name":"event_argument","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32 u32"},{"kind":"command","name":"calibrate","identifier":2,"description":"Request to calibrate a sensor. The report indicates the calibration is done.","fields":[],"hasReport":true},{"kind":"report","name":"calibrate","identifier":2,"description":"Request to calibrate a sensor. The report indicates the calibration is done.","fields":[],"secondary":true},{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16 u16"},{"kind":"rw","name":"intensity","identifier":1,"description":"This is either binary on/off (0 or non-zero), or can be gradual (eg. brightness of an RGB LED strip).","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"rw","name":"value","identifier":2,"description":"The primary value of actuator (eg. servo pulse length, or motor duty cycle).","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"const","name":"min_value","identifier":272,"description":"The lowest value that can be reported for the value register.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"const","name":"max_value","identifier":273,"description":"The highest value that can be reported for the value register.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"rw","name":"max_power","identifier":7,"description":"Limit the power drawn by the service, in mA.","fields":[{"name":"_","unit":"mA","type":"u16","storage":2,"isSimpleType":true,"defaultValue":500,"typicalMax":500,"typicalMin":0}],"packFormat":"u16"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100}],"packFormat":"u32"},{"kind":"ro","name":"reading","identifier":257,"description":"Read-only value of the sensor, also reported in streaming.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"volatile":true,"packFormat":"i32"},{"kind":"rw","name":"reading_range","identifier":8,"description":"For sensors that support it, sets the range (sometimes also described `min`/`max_reading`).\\nTypically only a small set of values is supported.\\nSetting it to `X` will select the smallest possible range that is at least `X`,\\nor if it doesn\'t exist, the largest supported range.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"const","name":"supported_ranges","identifier":266,"description":"Lists the values supported as `reading_range`.","fields":[{"name":"range","type":"u32","storage":4,"isSimpleType":true,"startRepeats":true}],"packFormat":"r: u32"},{"kind":"const","name":"min_reading","identifier":260,"description":"The lowest value that can be reported by the sensor.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"const","name":"max_reading","identifier":261,"description":"The highest value that can be reported by the sensor.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"ro","name":"reading_error","identifier":262,"description":"The real value of whatever is measured is between `reading - reading_error` and `reading + reading_error`. It should be computed from the internal state of the sensor. This register is often, but not always `const`. If the register value is modified,\\nsend a report in the same frame of the ``reading`` report.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"volatile":true,"packFormat":"u32"},{"kind":"const","name":"reading_resolution","identifier":264,"description":"Smallest, yet distinguishable change in reading.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"rw","name":"inactive_threshold","identifier":5,"description":"Threshold when reading data gets inactive and triggers a ``inactive``.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"rw","name":"active_threshold","identifier":6,"description":"Thresholds when reading data gets active and triggers a ``active`` event.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"const","name":"variant","identifier":263,"description":"The hardware variant of the service.\\nFor services which support this, there\'s an enum defining the meaning.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet.","fields":[{"name":"code","type":"StatusCodes","storage":2},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"packFormat":"u16 u16"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"packFormat":"s"},{"kind":"event","name":"active","identifier":1,"description":"Notifies that the service has been activated (eg. button pressed, network connected, etc.)","fields":[]},{"kind":"event","name":"inactive","identifier":2,"description":"Notifies that the service has been dis-activated.","fields":[]},{"kind":"event","name":"change","identifier":3,"description":"Notifies that the some state of the service changed.","fields":[]},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"StatusCodes","storage":2},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16 u16"},{"kind":"event","name":"neutral","identifier":7,"description":"Notifies that the threshold is back between ``low`` and ``high``.","fields":[]}],"tags":[]},{"name":"Base service","status":"experimental","shortId":"_base","camelName":"base","shortName":"base","extends":[],"notes":{"short":"Base class for all services."},"classIdentifier":536870899,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16"}],"tags":[]},{"name":"Sensor","status":"experimental","shortId":"_sensor","camelName":"sensor","shortName":"sensor","extends":["_base"],"notes":{"short":"Base class for sensors."},"classIdentifier":536870898,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32"}],"tags":[]},{"name":"Accelerometer","status":"experimental","shortId":"accelerometer","camelName":"accelerometer","shortName":"accelerometer","extends":["_base","_sensor"],"notes":{"short":"A 3-axis accelerometer.","long":"## Orientation\\n\\nAn accelerometer module should translate acceleration values as follows:\\n\\n| Orientation           \\t| X value (g) \\t| Y value (g) \\t| Z value (g) \\t|\\n|-----------------------\\t|-------------\\t|-------------\\t|-------------\\t|\\n| Module lying flat     \\t| 0           \\t| 0           \\t| -1          \\t|\\n| Module on left edge   \\t| -1          \\t| 0           \\t| 0           \\t|\\n| Module on bottom edge \\t| 0           \\t| 1           \\t| 0           \\t|\\n\\nWe recommend an orientation marking on the PCB so that users can mount modules without having to experiment with the device. Left/bottom can be determined by assuming text on silk runs left-to-right.","events":"All events are debounced."},"classIdentifier":521405449,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"forces","identifier":257,"description":"Indicates the current forces acting on accelerometer.","fields":[{"name":"x","unit":"g","shift":20,"type":"i12.20","storage":-4},{"name":"y","unit":"g","shift":20,"type":"i12.20","storage":-4},{"name":"z","unit":"g","shift":20,"type":"i12.20","storage":-4}],"volatile":true,"identifierName":"reading","packFormat":"i12.20 i12.20 i12.20"},{"kind":"ro","name":"forces_error","identifier":262,"description":"Error on the reading value.","fields":[{"name":"_","unit":"g","shift":20,"type":"u12.20","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u12.20"},{"kind":"rw","name":"max_force","identifier":8,"description":"Configures the range forces detected.\\nThe value will be \\"rounded up\\" to one of `max_forces_supported`.","fields":[{"name":"_","unit":"g","shift":20,"type":"u12.20","storage":4}],"optional":true,"identifierName":"reading_range","packFormat":"u12.20"},{"kind":"const","name":"max_forces_supported","identifier":266,"description":"Lists values supported for writing `max_force`.","fields":[{"name":"max_force","unit":"g","shift":20,"type":"u12.20","storage":4,"startRepeats":true}],"optional":true,"identifierName":"supported_ranges","packFormat":"r: u12.20"},{"kind":"event","name":"tilt_up","identifier":129,"description":"Emitted when accelerometer is tilted in the given direction.","fields":[]},{"kind":"event","name":"tilt_down","identifier":130,"description":"Emitted when accelerometer is tilted in the given direction.","fields":[]},{"kind":"event","name":"tilt_left","identifier":131,"description":"Emitted when accelerometer is tilted in the given direction.","fields":[]},{"kind":"event","name":"tilt_right","identifier":132,"description":"Emitted when accelerometer is tilted in the given direction.","fields":[]},{"kind":"event","name":"face_up","identifier":133,"description":"Emitted when accelerometer is laying flat in the given direction.","fields":[]},{"kind":"event","name":"face_down","identifier":134,"description":"Emitted when accelerometer is laying flat in the given direction.","fields":[]},{"kind":"event","name":"freefall","identifier":135,"description":"Emitted when total force acting on accelerometer is much less than 1g.","fields":[]},{"kind":"event","name":"shake","identifier":139,"description":"Emitted when forces change violently a few times.","fields":[]},{"kind":"event","name":"force_2g","identifier":140,"description":"Emitted when force in any direction exceeds given threshold.","fields":[]},{"kind":"event","name":"force_3g","identifier":136,"description":"Emitted when force in any direction exceeds given threshold.","fields":[]},{"kind":"event","name":"force_6g","identifier":137,"description":"Emitted when force in any direction exceeds given threshold.","fields":[]},{"kind":"event","name":"force_8g","identifier":138,"description":"Emitted when force in any direction exceeds given threshold.","fields":[]}],"tags":["C"],"group":"Movement"},{"name":"Arcade Gamepad","status":"deprecated","shortId":"arcadegamepad","camelName":"arcadeGamepad","shortName":"arcadeGamepad","extends":["_base","_sensor"],"notes":{"short":"This service is deprecated in favor or `joystick`; it is currently used by the micro:bit Arcade smart shield though.\\nA gamepad with direction and action buttons for one player.\\nIf a device has multiple controllers, it should have multiple gamepad services, using consecutive service identifiers."},"classIdentifier":501915758,"enums":{"Button":{"name":"Button","storage":1,"members":{"Left":1,"Up":2,"Right":3,"Down":4,"A":5,"B":6,"Menu":7,"Select":8,"Reset":9,"Exit":10}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"buttons","identifier":257,"description":"Indicates which buttons are currently active (pressed).\\n`pressure` should be `0xff` for digital buttons, and proportional for analog ones.","fields":[{"name":"button","type":"Button","storage":1,"startRepeats":true},{"name":"pressure","unit":"/","shift":8,"type":"u0.8","storage":1}],"volatile":true,"identifierName":"reading","packFormat":"r: u8 u0.8"},{"kind":"const","name":"available_buttons","identifier":384,"description":"Indicates number of players supported and which buttons are present on the controller.","fields":[{"name":"button","type":"Button","storage":1,"startRepeats":true}],"packFormat":"r: u8"},{"kind":"event","name":"down","identifier":1,"description":"Emitted when button goes from inactive to active.","fields":[{"name":"button","type":"Button","storage":1}],"identifierName":"active","packFormat":"u8"},{"kind":"event","name":"up","identifier":2,"description":"Emitted when button goes from active to inactive.","fields":[{"name":"button","type":"Button","storage":1}],"identifierName":"inactive","packFormat":"u8"}],"tags":[],"group":"Button"},{"name":"Arcade Sound","status":"experimental","shortId":"arcadesound","camelName":"arcadeSound","shortName":"arcadeSound","extends":["_base"],"notes":{"short":"A sound playing device.\\n\\nThis is typically run over an SPI connection, not regular single-wire JACDAC."},"classIdentifier":533083654,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"play","identifier":128,"description":"Play samples, which are single channel, signed 16-bit little endian values.","fields":[{"name":"samples","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"b"},{"kind":"rw","name":"sample_rate","identifier":128,"description":"Get or set playback sample rate (in samples per second).\\nIf you set it, read it back, as the value may be rounded up or down.","fields":[{"name":"_","unit":"Hz","shift":10,"type":"u22.10","storage":4,"defaultValue":44100}],"packFormat":"u22.10"},{"kind":"const","name":"buffer_size","identifier":384,"description":"The size of the internal audio buffer.","fields":[{"name":"_","unit":"B","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"buffer_pending","identifier":385,"description":"How much data is still left in the buffer to play.\\nClients should not send more data than `buffer_size - buffer_pending`,\\nbut can keep the `buffer_pending` as low as they want to ensure low latency\\nof audio playback.","fields":[{"name":"_","unit":"B","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"}],"tags":[]},{"name":"Azure IoT Hub Health","status":"experimental","shortId":"azureiothubhealth","camelName":"azureIotHubHealth","shortName":"azureIotHubHealth","extends":["_base"],"notes":{"short":"Health and diagnostics information about the Azure Iot Hub connection."},"classIdentifier":342028028,"enums":{"ConnectionStatus":{"name":"ConnectionStatus","storage":2,"members":{"Connected":1,"Disconnected":2,"Connecting":3,"Disconnecting":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"ro","name":"hub_name","identifier":384,"description":"Something like `my-iot-hub.azure-devices.net` if available.","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"packFormat":"s"},{"kind":"ro","name":"hub_device_id","identifier":385,"description":"Device identifier in Azure Iot Hub if available.","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"packFormat":"s"},{"kind":"ro","name":"connection_status","identifier":386,"description":"Indicates the status of connection. A message beyond the [0..3] range represents an HTTP error code.","fields":[{"name":"_","type":"ConnectionStatus","storage":2}],"packFormat":"u16"},{"kind":"command","name":"connect","identifier":129,"description":"Starts a connection to the IoT hub service","fields":[]},{"kind":"command","name":"disconnect","identifier":130,"description":"Starts disconnecting from the IoT hub service","fields":[]},{"kind":"command","name":"set_connection_string","identifier":134,"description":"Restricted command to override the existing connection string to the Azure IoT Hub.","fields":[{"name":"connection_string","type":"string","storage":0}],"restricted":true,"packFormat":"s"},{"kind":"event","name":"connection_status_change","identifier":3,"description":"Raised when the connection status changes","fields":[{"name":"connection_status","type":"ConnectionStatus","storage":2}],"identifierName":"change","packFormat":"u16"},{"kind":"event","name":"message_sent","identifier":128,"description":"Raised when a message has been sent to the hub.","fields":[]}],"tags":[],"group":"Iot"},{"name":"Barcode reader","status":"experimental","shortId":"barcodereader","camelName":"barcodeReader","shortName":"barcodeReader","extends":["_base"],"notes":{"short":"A device that reads various barcodes, like QR codes. For the web, see [BarcodeDetector](https://developer.mozilla.org/en-US/docs/Web/API/BarcodeDetector)."},"classIdentifier":477339244,"enums":{"Format":{"name":"Format","storage":1,"members":{"Aztec":1,"Code128":2,"Code39":3,"Code93":4,"Codabar":5,"DataMatrix":6,"Ean13":8,"Ean8":9,"ITF":10,"Pdf417":11,"QrCode":12,"UpcA":13,"UpcE":14}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turns on or off the detection of barcodes.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"const","name":"formats","identifier":384,"description":"Reports the list of supported barcode formats, as documented in https://developer.mozilla.org/en-US/docs/Web/API/Barcode_Detection_API.","fields":[{"name":"format","type":"Format","storage":1,"startRepeats":true}],"optional":true,"packFormat":"r: u8"},{"kind":"event","name":"detect","identifier":1,"description":"Raised when a bar code is detected and decoded. If the reader detects multiple codes, it will issue multiple events.\\nIn case of numeric barcodes, the `data` field should contain the ASCII (which is the same as UTF8 in that case) representation of the number.","fields":[{"name":"format","type":"Format","storage":1},{"name":"data","type":"string","storage":0}],"identifierName":"active","packFormat":"u8 s"}],"tags":[]},{"name":"Barometer","status":"experimental","shortId":"barometer","camelName":"barometer","shortName":"barometer","extends":["_base","_sensor"],"notes":{"short":"A sensor measuring air pressure of outside environment.","registers":"Default streaming interval is 1s."},"classIdentifier":504462570,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"pressure","identifier":257,"description":"The air pressure.","fields":[{"name":"_","unit":"hPa","shift":10,"type":"u22.10","storage":4,"absoluteMin":300,"absoluteMax":1100,"typicalMin":940,"typicalMax":1040}],"volatile":true,"identifierName":"reading","preferredInterval":60000,"packFormat":"u22.10"},{"kind":"ro","name":"pressure_error","identifier":262,"description":"The real pressure is between `pressure - pressure_error` and `pressure + pressure_error`.","fields":[{"name":"_","unit":"hPa","shift":10,"type":"u22.10","storage":4}],"volatile":true,"identifierName":"reading_error","packFormat":"u22.10"}],"tags":["8bit"],"group":"Environment"},{"name":"bit:radio","status":"experimental","shortId":"bitradio","camelName":"bitRadio","shortName":"bitRadio","extends":["_base"],"notes":{"short":"Support for sending and receiving packets using the [Bit Radio protocol](https://github.com/microsoft/pxt-common-packages/blob/master/libs/radio/docs/reference/radio.md), typically used between micro:bit devices."},"classIdentifier":449414863,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turns on/off the radio antenna.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"group","identifier":128,"description":"Group used to filter packets","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"rw","name":"transmission_power","identifier":129,"description":"Antenna power to increase or decrease range.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true,"defaultValue":6,"absoluteMin":1,"absoluteMax":7}],"packFormat":"u8"},{"kind":"rw","name":"frequency_band","identifier":130,"description":"Change the transmission and reception band of the radio to the given channel.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true,"defaultValue":7,"absoluteMax":83,"absoluteMin":0}],"packFormat":"u8"},{"kind":"command","name":"send_string","identifier":128,"description":"Sends a string payload as a radio message, maximum 18 characters.","fields":[{"name":"message","type":"string","storage":0}],"unique":true,"packFormat":"s"},{"kind":"command","name":"send_number","identifier":129,"description":"Sends a double precision number payload as a radio message","fields":[{"name":"value","isFloat":true,"type":"f64","storage":8}],"unique":true,"packFormat":"f64"},{"kind":"command","name":"send_value","identifier":130,"description":"Sends a double precision number and a name payload as a radio message","fields":[{"name":"value","isFloat":true,"type":"f64","storage":8},{"name":"name","type":"string","storage":0}],"unique":true,"packFormat":"f64 s"},{"kind":"command","name":"send_buffer","identifier":131,"description":"Sends a payload of bytes as a radio message","fields":[{"name":"data","type":"bytes","storage":0,"isSimpleType":true}],"unique":true,"packFormat":"b"},{"kind":"report","name":"string_received","identifier":144,"description":"Raised when a string packet is received","fields":[{"name":"time","unit":"ms","type":"u32","storage":4,"isSimpleType":true},{"name":"device_serial_number","type":"u32","storage":4,"isSimpleType":true},{"name":"rssi","unit":"dB","type":"i8","storage":-1,"isSimpleType":true},{"name":"padding","type":"u8[1]","storage":1},{"name":"message","type":"string","storage":0}],"packFormat":"u32 u32 i8 b[1] s"},{"kind":"report","name":"number_received","identifier":145,"description":"Raised when a number packet is received","fields":[{"name":"time","unit":"ms","type":"u32","storage":4,"isSimpleType":true},{"name":"device_serial_number","type":"u32","storage":4,"isSimpleType":true},{"name":"rssi","unit":"dB","type":"i8","storage":-1,"isSimpleType":true},{"name":"padding","type":"u8[3]","storage":3},{"name":"value","isFloat":true,"type":"f64","storage":8},{"name":"name","type":"string","storage":0}],"packFormat":"u32 u32 i8 b[3] f64 s"},{"kind":"report","name":"buffer_received","identifier":146,"description":"Raised when a buffer packet is received","fields":[{"name":"time","unit":"ms","type":"u32","storage":4,"isSimpleType":true},{"name":"device_serial_number","type":"u32","storage":4,"isSimpleType":true},{"name":"rssi","unit":"dB","type":"i8","storage":-1,"isSimpleType":true},{"name":"padding","type":"u8[1]","storage":1},{"name":"data","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"u32 u32 i8 b[1] b"}],"tags":[]},{"name":"Bootloader","status":"experimental","shortId":"bootloader","camelName":"bootloader","shortName":"bootloader","extends":["_base"],"notes":{"short":"Allows flashing (reprogramming) devices over Jacdac."},"classIdentifier":536516936,"enums":{"Error":{"name":"Error","storage":4,"members":{"NoError":0,"PacketTooSmall":1,"OutOfFlashableRange":2,"InvalidPageOffset":3,"NotPageAligned":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"info","identifier":0,"description":"The `service_class` is always `0x1ffa9948`. The `product_identifer` identifies the kind of firmware\\nthat \\"fits\\" this device.","fields":[],"identifierName":"announce","hasReport":true},{"kind":"report","name":"info","identifier":0,"description":"The `service_class` is always `0x1ffa9948`. The `product_identifer` identifies the kind of firmware\\nthat \\"fits\\" this device.","fields":[{"name":"service_class","type":"u32","storage":4,"isSimpleType":true},{"name":"page_size","unit":"B","type":"u32","storage":4,"isSimpleType":true},{"name":"flashable_size","unit":"B","type":"u32","storage":4,"isSimpleType":true},{"name":"product_identifer","type":"u32","storage":4,"isSimpleType":true}],"secondary":true,"packFormat":"u32 u32 u32 u32"},{"kind":"command","name":"set_session","identifier":129,"description":"The flashing server should generate a random id, and use this command to set it.","fields":[{"name":"session_id","type":"u32","storage":4,"isSimpleType":true}],"hasReport":true,"packFormat":"u32"},{"kind":"report","name":"set_session","identifier":129,"description":"The flashing server should generate a random id, and use this command to set it.","fields":[{"name":"session_id","type":"u32","storage":4,"isSimpleType":true}],"secondary":true,"packFormat":"u32"},{"kind":"command","name":"page_data","identifier":128,"description":"Use to send flashing data. A physical page is split into `chunk_max + 1` chunks, where `chunk_no = 0 ... chunk_max`.\\nEach chunk is stored at `page_address + page_offset`. `page_address` has to be equal in all chunks,\\nand is included in response.\\nOnly the last chunk causes writing to flash and elicits response.\\n\\nErrors not listed are also possible. Errors larger than `0xffff` indicate de-synchronization on chunk numbers.\\n\\nWhile this command is technically `unique`, the bootloader client will retry failed pages.\\nBootloaders typically will not support reliable commands delivered over pipes.","fields":[{"name":"page_address","type":"u32","storage":4,"isSimpleType":true},{"name":"page_offset","type":"u16","storage":2,"isSimpleType":true},{"name":"chunk_no","type":"u8","storage":1,"isSimpleType":true},{"name":"chunk_max","type":"u8","storage":1,"isSimpleType":true},{"name":"session_id","type":"u32","storage":4,"isSimpleType":true},{"name":"reserved0","type":"u32","storage":4,"isSimpleType":true},{"name":"reserved1","type":"u32","storage":4,"isSimpleType":true},{"name":"reserved2","type":"u32","storage":4,"isSimpleType":true},{"name":"reserved3","type":"u32","storage":4,"isSimpleType":true},{"name":"page_data","type":"bytes","storage":208,"isSimpleType":true,"maxBytes":208}],"unique":true,"hasReport":true,"packFormat":"u32 u16 u8 u8 u32 u32 u32 u32 u32 b[208]"},{"kind":"report","name":"page_data","identifier":128,"description":"Use to send flashing data. A physical page is split into `chunk_max + 1` chunks, where `chunk_no = 0 ... chunk_max`.\\nEach chunk is stored at `page_address + page_offset`. `page_address` has to be equal in all chunks,\\nand is included in response.\\nOnly the last chunk causes writing to flash and elicits response.\\n\\nErrors not listed are also possible. Errors larger than `0xffff` indicate de-synchronization on chunk numbers.\\n\\nWhile this command is technically `unique`, the bootloader client will retry failed pages.\\nBootloaders typically will not support reliable commands delivered over pipes.","fields":[{"name":"session_id","type":"u32","storage":4,"isSimpleType":true},{"name":"page_error","type":"Error","storage":4},{"name":"page_address","type":"u32","storage":4,"isSimpleType":true}],"secondary":true,"packFormat":"u32 u32 u32"}],"tags":["C"]},{"name":"Braille display","status":"experimental","shortId":"brailledisplay","camelName":"brailleDisplay","shortName":"brailleDisplay","extends":["_base"],"notes":{"short":"A Braille pattern display module. This module display [unicode braille patterns](https://www.unicode.org/charts/PDF/U2800.pdf), country specific encoding have to be implemented by the clients."},"classIdentifier":331331532,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Determins if the braille display is active.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"patterns","identifier":2,"description":"Braille patterns to show. Must be unicode characters between `0x2800` and `0x28ff`.","fields":[{"name":"_","type":"string","storage":0}],"lowLevel":true,"identifierName":"value","packFormat":"s"},{"kind":"const","name":"length","identifier":385,"description":"Gets the number of patterns that can be displayed.","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"}],"tags":[],"group":"Display"},{"name":"Button","status":"experimental","shortId":"button","camelName":"button","shortName":"button","extends":["_base","_sensor"],"notes":{"short":"A push-button, which returns to inactive position when not operated anymore."},"classIdentifier":343122531,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"pressure","identifier":257,"description":"Indicates the pressure state of the button, where ``0`` is open.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"lowLevel":true,"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"const","name":"analog","identifier":384,"description":"Indicates if the button provides analog ``pressure`` readings.","fields":[{"name":"_","type":"bool","storage":1}],"optional":true,"packFormat":"u8"},{"kind":"ro","name":"pressed","identifier":385,"description":"Determines if the button is pressed currently.\\n\\nIf the event ``down`` is observed, ``pressed`` is true; if ``up`` or ``hold`` are observed, ``pressed`` is false.\\nTo initialize, wait for any event or timeout to ``pressed`` is true after 750ms (1.5x hold time).","fields":[{"name":"_","type":"bool","storage":1}],"client":true,"packFormat":"u8"},{"kind":"event","name":"down","identifier":1,"description":"Emitted when button goes from inactive to active.","fields":[],"identifierName":"active"},{"kind":"event","name":"up","identifier":2,"description":"Emitted when button goes from active to inactive. The \'time\' parameter \\nrecords the amount of time between the down and up events.","fields":[{"name":"time","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"identifierName":"inactive","packFormat":"u32"},{"kind":"event","name":"hold","identifier":129,"description":"Emitted when the press time is greater than 500ms, and then at least every 500ms \\nas long as the button remains pressed. The \'time\' parameter records the the amount of time\\nthat the button has been held (since the down event).","fields":[{"name":"time","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"}],"tags":["C","8bit","padauk"],"group":"Button"},{"name":"Buzzer","status":"experimental","shortId":"buzzer","camelName":"buzzer","shortName":"buzzer","extends":["_base"],"notes":{"short":"A simple buzzer."},"classIdentifier":458731991,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"volume","identifier":1,"description":"The volume (duty cycle) of the buzzer.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1,"defaultValue":1}],"identifierName":"intensity","packFormat":"u0.8"},{"kind":"command","name":"play_tone","identifier":128,"description":"Play a PWM tone with given period and duty for given duration.\\nThe duty is scaled down with `volume` register.\\nTo play tone at frequency `F` Hz and volume `V` (in `0..1`) you will want\\nto send `P = 1000000 / F` and `D = P * V / 2`.","fields":[{"name":"period","unit":"us","type":"u16","storage":2,"isSimpleType":true},{"name":"duty","unit":"us","type":"u16","storage":2,"isSimpleType":true},{"name":"duration","unit":"ms","type":"u16","storage":2,"isSimpleType":true}],"lowLevel":true,"packFormat":"u16 u16 u16"},{"kind":"command","name":"play_note","identifier":129,"description":"Play a note at the given frequency and volume.","fields":[{"name":"frequency","unit":"Hz","type":"u16","storage":2,"isSimpleType":true},{"name":"volume","unit":"/","shift":16,"type":"u0.16","storage":2},{"name":"duration","unit":"ms","type":"u16","storage":2,"isSimpleType":true}],"client":true,"packFormat":"u16 u0.16 u16"}],"tags":["C","8bit"],"group":"Sound"},{"name":"Capacitive Button","status":"experimental","shortId":"capacitivebutton","camelName":"capacitiveButton","shortName":"capacitiveButton","extends":["_base"],"notes":{"short":"A configuration service for a capacitive push-button."},"classIdentifier":677752265,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"threshold","identifier":6,"description":"Indicates the threshold for ``up`` events.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"active_threshold","packFormat":"u0.16"},{"kind":"command","name":"calibrate","identifier":2,"description":"Request to calibrate the capactive. When calibration is requested, the device expects that no object is touching the button. \\nThe report indicates the calibration is done.","fields":[],"identifierName":"calibrate","hasReport":true},{"kind":"report","name":"calibrate","identifier":2,"description":"Request to calibrate the capactive. When calibration is requested, the device expects that no object is touching the button. \\nThe report indicates the calibration is done.","fields":[],"secondary":true}],"tags":["8bit"],"group":"Button"},{"name":"Character Screen","status":"experimental","shortId":"characterscreen","camelName":"characterScreen","shortName":"characterScreen","extends":["_base"],"notes":{"short":"A screen that displays characters."},"classIdentifier":523748714,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"LCD":1,"OLED":2,"Braille":3}},"TextDirection":{"name":"TextDirection","storage":1,"members":{"LeftToRight":1,"RightToLeft":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"message","identifier":2,"description":"Text to show. Use `\\\\n` to break lines.","fields":[{"name":"_","type":"string","storage":0}],"lowLevel":true,"identifierName":"value","packFormat":"s"},{"kind":"rw","name":"brightness","identifier":1,"description":"Brightness of the screen. `0` means off.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1}],"optional":true,"identifierName":"intensity","packFormat":"u0.8"},{"kind":"const","name":"variant","identifier":263,"description":"Describes the type of character LED screen.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"rw","name":"text_direction","identifier":130,"description":"Specifies the RTL or LTR direction of the text.","fields":[{"name":"_","type":"TextDirection","storage":1}],"optional":true,"packFormat":"u8"},{"kind":"const","name":"rows","identifier":384,"description":"Gets the number of rows.","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"const","name":"columns","identifier":385,"description":"Gets the number of columns.","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"command","name":"set_line","identifier":128,"description":"Overrides the content of a single line at a 0-based index.","fields":[{"name":"index","type":"u16","storage":2,"isSimpleType":true},{"name":"message","type":"string","storage":0}],"packFormat":"u16 s"},{"kind":"command","name":"clear","identifier":129,"description":"Clears all text from the display.","fields":[]}],"tags":[],"group":"Display"},{"name":"CODAL Message Bus","status":"experimental","shortId":"codalmessagebus","camelName":"codalMessageBus","shortName":"codalMessageBus","extends":["_base"],"notes":{"short":"A service that uses the [CODAL message bus](https://lancaster-university.github.io/microbit-docs/ubit/messageBus/) to send and receive small messages.\\n\\nYou can find known values for `source` in [CODAL repository](https://github.com/lancaster-university/codal-core/blob/master/inc/core/CodalComponent.h)\\nIn MakeCode, you can listen for custom `source`, `value` values using [control.onEvent](https://makecode.microbit.org/reference/control/on-event]."},"classIdentifier":304085021,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"send","identifier":128,"description":"Send a message on the CODAL bus. If `source` is `0`, it is treated as wildcard.","fields":[{"name":"source","type":"u16","storage":2,"isSimpleType":true},{"name":"value","type":"u16","storage":2,"isSimpleType":true}],"unique":true,"packFormat":"u16 u16"},{"kind":"event","name":"message","identifier":128,"description":"Raised by the server is triggered by the server. The filtering logic of which event to send over JACDAC is up to the server implementation.","fields":[{"name":"source","type":"u16","storage":2,"isSimpleType":true},{"name":"value","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16 u16"}],"tags":[]},{"name":"Color","status":"experimental","shortId":"color","camelName":"color","shortName":"color","extends":["_base","_sensor"],"notes":{"short":"Senses RGB colors"},"classIdentifier":372299111,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"color","identifier":257,"description":"Detected color in the RGB color space.","fields":[{"name":"red","unit":"/","shift":16,"type":"u0.16","storage":2},{"name":"green","unit":"/","shift":16,"type":"u0.16","storage":2},{"name":"blue","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16 u0.16 u0.16"}],"tags":["8bit"],"group":"Environment"},{"name":"Compass","status":"experimental","shortId":"compass","camelName":"compass","shortName":"compass","extends":["_base","_sensor"],"notes":{"short":"A sensor that measures the heading."},"classIdentifier":364362175,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"heading","identifier":257,"description":"The heading with respect to the magnetic north.","fields":[{"name":"_","unit":"°","shift":16,"type":"u16.16","storage":4,"absoluteMin":0,"absoluteMax":359}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u16.16"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turn on or off the sensor. Turning on the sensor may start a calibration sequence.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"ro","name":"heading_error","identifier":262,"description":"Error on the heading reading","fields":[{"name":"_","unit":"°","shift":16,"type":"u16.16","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u16.16"},{"kind":"command","name":"calibrate","identifier":2,"description":"Starts a calibration sequence for the compass.","fields":[],"identifierName":"calibrate"}],"tags":[]},{"name":"Control","status":"experimental","shortId":"control","camelName":"control","shortName":"control","extends":["_base"],"notes":{"short":"Control service is always service index `0`.\\nIt handles actions common to all services on a device.\\n\\nNote: some of the optional features (including `flood_ping`, `mcu_temperature`, and all string registers)\\nare not implemented in `8bit` version."},"classIdentifier":0,"enums":{"AnnounceFlags":{"name":"AnnounceFlags","storage":2,"isFlags":true,"members":{"RestartCounterSteady":15,"RestartCounter1":1,"RestartCounter2":2,"RestartCounter4":4,"RestartCounter8":8,"StatusLightNone":0,"StatusLightMono":16,"StatusLightRgbNoFade":32,"StatusLightRgbFade":48,"SupportsACK":256,"SupportsBroadcast":512,"SupportsFrames":1024,"IsClient":2048,"SupportsReliableCommands":4096}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"services","identifier":0,"description":"The `restart_counter` is computed from the `flags & RestartCounterSteady`, starts at `0x1` and increments by one until it reaches `0xf`, then it stays at `0xf`.\\nIf this number ever goes down, it indicates that the device restarted.\\n`service_class` indicates class identifier for each service index (service index `0` is always control, so it\'s\\nskipped in this enumeration).\\n`packet_count` indicates the number of packets sent by the current device since last announce,\\nincluding the current announce packet (it is always 0 if this feature is not supported).\\nThe command form can be used to induce report, which is otherwise broadcast every 500ms.","fields":[],"identifierName":"announce","hasReport":true},{"kind":"report","name":"services","identifier":0,"description":"The `restart_counter` is computed from the `flags & RestartCounterSteady`, starts at `0x1` and increments by one until it reaches `0xf`, then it stays at `0xf`.\\nIf this number ever goes down, it indicates that the device restarted.\\n`service_class` indicates class identifier for each service index (service index `0` is always control, so it\'s\\nskipped in this enumeration).\\n`packet_count` indicates the number of packets sent by the current device since last announce,\\nincluding the current announce packet (it is always 0 if this feature is not supported).\\nThe command form can be used to induce report, which is otherwise broadcast every 500ms.","fields":[{"name":"flags","type":"AnnounceFlags","storage":2},{"name":"packet_count","type":"u8","storage":1,"isSimpleType":true},{"name":"reserved","type":"u8","storage":1,"isSimpleType":true},{"name":"service_class","type":"u32","storage":4,"isSimpleType":true,"startRepeats":true}],"secondary":true,"packFormat":"u16 u8 u8 r: u32"},{"kind":"command","name":"noop","identifier":128,"description":"Do nothing. Always ignored. Can be used to test ACKs.","fields":[]},{"kind":"command","name":"identify","identifier":129,"description":"Blink the status LED (262ms on, 262ms off, four times, with the blue LED) or otherwise draw user\'s attention to device with no status light. \\nFor devices with status light (this can be discovered in the announce flags), the client should\\nsend the sequence of status light command to generate the identify animation.","fields":[],"optional":true},{"kind":"command","name":"reset","identifier":130,"description":"Reset device. ACK may or may not be sent.","fields":[],"optional":true},{"kind":"command","name":"flood_ping","identifier":131,"description":"The device will respond `num_responses` times, as fast as it can, setting the `counter` field in the report\\nto `start_counter`, then `start_counter + 1`, ..., and finally `start_counter + num_responses - 1`.\\nThe `dummy_payload` is `size` bytes long and contains bytes `0, 1, 2, ...`.","fields":[{"name":"num_responses","type":"u32","storage":4,"isSimpleType":true},{"name":"start_counter","type":"u32","storage":4,"isSimpleType":true},{"name":"size","unit":"B","type":"u8","storage":1,"isSimpleType":true}],"unique":true,"optional":true,"hasReport":true,"packFormat":"u32 u32 u8"},{"kind":"report","name":"flood_ping","identifier":131,"description":"The device will respond `num_responses` times, as fast as it can, setting the `counter` field in the report\\nto `start_counter`, then `start_counter + 1`, ..., and finally `start_counter + num_responses - 1`.\\nThe `dummy_payload` is `size` bytes long and contains bytes `0, 1, 2, ...`.","fields":[{"name":"counter","type":"u32","storage":4,"isSimpleType":true},{"name":"dummy_payload","type":"bytes","storage":0,"isSimpleType":true}],"secondary":true,"packFormat":"u32 b"},{"kind":"command","name":"set_status_light","identifier":132,"description":"Initiates a color transition of the status light from its current color to the one specified.\\nThe transition will complete in about `512 / speed` frames\\n(each frame is currently 100ms, so speed of `51` is about 1 second and `26` 0.5 second).\\nAs a special case, if speed is `0` the transition is immediate.\\nIf MCU is not capable of executing transitions, it can consider `speed` to be always `0`.\\nIf a monochrome LEDs is fitted, the average value of ``red``, ``green``, ``blue`` is used.\\nIf intensity of a monochrome LED cannot be controlled, any value larger than `0` should be considered\\non, and `0` (for all three channels) should be considered off.","fields":[{"name":"to_red","type":"u8","storage":1,"isSimpleType":true},{"name":"to_green","type":"u8","storage":1,"isSimpleType":true},{"name":"to_blue","type":"u8","storage":1,"isSimpleType":true},{"name":"speed","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8 u8 u8 u8"},{"kind":"command","name":"proxy","identifier":133,"description":"Force client device into proxy mode.","fields":[],"optional":true},{"kind":"command","name":"reliable_commands","identifier":134,"description":"This opens a pipe to the device to provide an alternative, reliable transport of actions\\n(and possibly other commands).\\nThe commands are wrapped as pipe data packets.\\nMultiple invocations of this command with the same `seed` are dropped\\n(and thus the command is not `unique`); otherwise `seed` carries no meaning\\nand should be set to a random value by the client.\\nNote that while the commands sends this way are delivered exactly once, the\\nresponses might get lost.","fields":[{"name":"seed","type":"u32","storage":4,"isSimpleType":true}],"optional":true,"hasReport":true,"packFormat":"u32"},{"kind":"report","name":"reliable_commands","identifier":134,"description":"This opens a pipe to the device to provide an alternative, reliable transport of actions\\n(and possibly other commands).\\nThe commands are wrapped as pipe data packets.\\nMultiple invocations of this command with the same `seed` are dropped\\n(and thus the command is not `unique`); otherwise `seed` carries no meaning\\nand should be set to a random value by the client.\\nNote that while the commands sends this way are delivered exactly once, the\\nresponses might get lost.","fields":[{"name":"commands","type":"pipe","storage":12}],"secondary":true,"pipeType":"reliable_commands","packFormat":"b[12]"},{"kind":"pipe_command","name":"wrapped_command","identifier":0,"description":"This opens a pipe to the device to provide an alternative, reliable transport of actions\\n(and possibly other commands).\\nThe commands are wrapped as pipe data packets.\\nMultiple invocations of this command with the same `seed` are dropped\\n(and thus the command is not `unique`); otherwise `seed` carries no meaning\\nand should be set to a random value by the client.\\nNote that while the commands sends this way are delivered exactly once, the\\nresponses might get lost.","fields":[{"name":"service_size","type":"u8","storage":1,"isSimpleType":true},{"name":"service_index","type":"u8","storage":1,"isSimpleType":true},{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"payload","type":"bytes","storage":0,"isSimpleType":true}],"pipeType":"reliable_commands","packFormat":"u8 u8 u16 b"},{"kind":"rw","name":"reset_in","identifier":128,"description":"When set to value other than `0`, it asks the device to reset after specified number of microseconds.\\nThis is typically used to implement watchdog functionality, where a brain device sets `reset_in` to\\nsay 1.6s every 0.5s.","fields":[{"name":"_","unit":"us","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"packFormat":"u32"},{"kind":"const","name":"device_description","identifier":384,"description":"Identifies the type of hardware (eg., ACME Corp. Servo X-42 Rev C)","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"packFormat":"s"},{"kind":"const","name":"product_identifier","identifier":385,"description":"A numeric code for the string above; used to identify firmware images and devices.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true,"absoluteMin":805306368,"absoluteMax":1073741823}],"optional":true,"packFormat":"u32"},{"kind":"const","name":"bootloader_product_identifier","identifier":388,"description":"Typically the same as `product_identifier` unless device was flashed by hand; the bootloader will respond to that code.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true,"absoluteMin":805306368,"absoluteMax":1073741823}],"optional":true,"packFormat":"u32"},{"kind":"const","name":"firmware_version","identifier":389,"description":"A string describing firmware version; typically semver.","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"packFormat":"s"},{"kind":"ro","name":"mcu_temperature","identifier":386,"description":"MCU temperature in degrees Celsius (approximate).","fields":[{"name":"_","unit":"°C","type":"i16","storage":-2,"isSimpleType":true,"typicalMin":-10,"typicalMax":150}],"volatile":true,"optional":true,"preferredInterval":60000,"packFormat":"i16"},{"kind":"ro","name":"uptime","identifier":390,"description":"Number of microseconds since boot.","fields":[{"name":"_","unit":"us","type":"u64","storage":8,"isSimpleType":true}],"volatile":true,"optional":true,"preferredInterval":60000,"packFormat":"u64"}],"tags":["C","8bit"]},{"name":"Dashboard","status":"experimental","shortId":"dashboard","camelName":"dashboard","shortName":"dashboard","extends":["_base"],"notes":{"short":"Device that interacts, configure or inspects with the services on the bus. While a dashboard is on the bus, heuristics like device reset should be disabled."},"classIdentifier":468029703,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"}],"tags":["infrastructure"]},{"name":"Dimmer","status":"experimental","shortId":"dimmer","camelName":"dimmer","shortName":"dimmer","extends":["_base"],"notes":{"short":"A light or fan controller that dims the current on a line."},"classIdentifier":531637829,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Light":1,"Fan":2,"Pump":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"intensity","identifier":1,"description":"The intensity of the current. Set to ``0`` to turn off completely the current.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"intensity","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical device","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":[]},{"name":"Distance","status":"experimental","shortId":"distance","camelName":"distance","shortName":"distance","extends":["_base","_sensor"],"notes":{"short":"A sensor that determines the distance of an object without any physical contact involved."},"classIdentifier":337275786,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Ultrasonic":1,"Infrared":2,"LiDAR":3,"Laser":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"distance","identifier":257,"description":"Current distance from the object","fields":[{"name":"_","unit":"m","shift":16,"type":"u16.16","storage":4,"typicalMin":0.02,"typicalMax":4}],"volatile":true,"identifierName":"reading","packFormat":"u16.16"},{"kind":"const","name":"min_range","identifier":260,"description":"Minimum measurable distance","fields":[{"name":"_","unit":"m","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"min_reading","packFormat":"u16.16"},{"kind":"const","name":"max_range","identifier":261,"description":"Maximum measurable distance","fields":[{"name":"_","unit":"m","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"max_reading","packFormat":"u16.16"},{"kind":"const","name":"variant","identifier":263,"description":"Determines the type of sensor used.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"]},{"name":"DMX","status":"experimental","shortId":"dmx","camelName":"dmx","shortName":"dmx","extends":["_base"],"notes":{"short":"A service that can send DMX512-A packets with limited size. This service is designed to allow tinkering with a few DMX devices, but only allows 235 channels. More about DMX at https://en.wikipedia.org/wiki/DMX512."},"classIdentifier":298814469,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Determines if the DMX bridge is active","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"command","name":"send","identifier":128,"description":"Send a DMX packet, up to 236bytes long, including the start code.","fields":[{"name":"channels","type":"bytes","storage":0,"isSimpleType":true}],"unique":true,"packFormat":"b"}],"tags":[]},{"name":"Dot Matrix","status":"experimental","shortId":"dotmatrix","camelName":"dotMatrix","shortName":"dotMatrix","extends":["_base"],"notes":{"short":"A rectangular dot matrix display, made of monochrome LEDs or Braille pins."},"classIdentifier":286070091,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"LED":1,"Braille":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"dots","identifier":2,"description":"The state of the screen where dot on/off state is\\nstored as a bit, column by column. The column should be byte aligned.","fields":[{"name":"_","type":"bytes","storage":0,"isSimpleType":true}],"identifierName":"value","packFormat":"b"},{"kind":"rw","name":"brightness","identifier":1,"description":"Reads the general brightness of the display, brightness for LEDs. `0` when the screen is off.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1}],"optional":true,"identifierName":"intensity","packFormat":"u0.8"},{"kind":"const","name":"rows","identifier":385,"description":"Number of rows on the screen","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"},{"kind":"const","name":"columns","identifier":386,"description":"Number of columns on the screen","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"},{"kind":"const","name":"variant","identifier":263,"description":"Describes the type of matrix used.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":[],"group":"Display"},{"name":"Equivalent CO₂","status":"experimental","shortId":"eco2","camelName":"eCO2","shortName":"eCO2","extends":["_base","_sensor"],"notes":{"short":"Measures equivalent CO₂ levels."},"classIdentifier":379362758,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"VOC":1,"NDIR":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"e_CO2","identifier":257,"description":"Equivalent CO₂ (eCO₂) readings.","fields":[{"name":"_","unit":"ppm","shift":10,"type":"u22.10","storage":4,"typicalMin":400,"typicalMax":8192}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u22.10"},{"kind":"ro","name":"e_CO2_error","identifier":262,"description":"Error on the reading value.","fields":[{"name":"_","unit":"ppm","shift":10,"type":"u22.10","storage":4}],"volatile":true,"identifierName":"reading_error","packFormat":"u22.10"},{"kind":"const","name":"min_e_CO2","identifier":260,"description":"Minimum measurable value","fields":[{"name":"_","unit":"ppm","shift":10,"type":"u22.10","storage":4}],"optional":true,"identifierName":"min_reading","packFormat":"u22.10"},{"kind":"const","name":"max_e_CO2","identifier":261,"description":"Minimum measurable value","fields":[{"name":"_","unit":"ppm","shift":10,"type":"u22.10","storage":4}],"optional":true,"identifierName":"max_reading","packFormat":"u22.10"},{"kind":"const","name":"conditioning_period","identifier":384,"description":"Time required to achieve good sensor stability before measuring after long idle period.","fields":[{"name":"_","unit":"s","type":"u32","storage":4,"isSimpleType":true}],"optional":true,"packFormat":"u32"},{"kind":"const","name":"variant","identifier":263,"description":"Type of physical sensor and capabilities.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"],"group":"Environment"},{"name":"Flex","status":"experimental","shortId":"flex","camelName":"flex","shortName":"flex","extends":["_base","_sensor"],"notes":{"short":"A bending or deflection sensor."},"classIdentifier":524797638,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Linear22Inch":1,"Linear45Inch":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"bending","identifier":257,"description":"The relative position of the slider.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"Specifies the physical layout of the flex sensor.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["C","8bit"],"group":"Slider"},{"name":"Gyroscope","status":"experimental","shortId":"gyroscope","camelName":"gyroscope","shortName":"gyroscope","extends":["_base","_sensor"],"notes":{"short":"A 3-axis gyroscope."},"classIdentifier":505087730,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"rotation_rates","identifier":257,"description":"Indicates the current rates acting on gyroscope.","fields":[{"name":"x","unit":"°/s","shift":20,"type":"i12.20","storage":-4},{"name":"y","unit":"°/s","shift":20,"type":"i12.20","storage":-4},{"name":"z","unit":"°/s","shift":20,"type":"i12.20","storage":-4}],"volatile":true,"identifierName":"reading","packFormat":"i12.20 i12.20 i12.20"},{"kind":"ro","name":"rotation_rates_error","identifier":262,"description":"Error on the reading value.","fields":[{"name":"_","unit":"°/s","shift":20,"type":"u12.20","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u12.20"},{"kind":"rw","name":"max_rate","identifier":8,"description":"Configures the range of rotation rates.\\nThe value will be \\"rounded up\\" to one of `max_rates_supported`.","fields":[{"name":"_","unit":"°/s","shift":20,"type":"u12.20","storage":4}],"optional":true,"identifierName":"reading_range","packFormat":"u12.20"},{"kind":"const","name":"max_rates_supported","identifier":266,"description":"Lists values supported for writing `max_rate`.","fields":[{"name":"max_rate","unit":"°/s","shift":20,"type":"u12.20","storage":4,"startRepeats":true}],"optional":true,"identifierName":"supported_ranges","packFormat":"r: u12.20"}],"tags":[],"group":"Movement"},{"name":"Heart Rate","status":"experimental","shortId":"heartrate","camelName":"heartRate","shortName":"heartRate","extends":["_base","_sensor"],"notes":{"short":"A sensor approximating the heart rate. \\n\\n\\n**Jacdac is NOT suitable for medical devices and should NOT be used in any kind of device to diagnose or treat any medical conditions.**"},"classIdentifier":376204740,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Finger":1,"Chest":2,"Wrist":3,"Pump":4,"WebCam":5}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"heart_rate","identifier":257,"description":"The estimated heart rate.","fields":[{"name":"_","unit":"bpm","shift":16,"type":"u16.16","storage":4,"typicalMin":30,"typicalMax":200}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u16.16"},{"kind":"ro","name":"heart_rate_error","identifier":262,"description":"The estimated error on the reported sensor data.","fields":[{"name":"_","unit":"bpm","shift":16,"type":"u16.16","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u16.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical sensor","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"],"group":"Biometric"},{"name":"HID Adapter","status":"experimental","shortId":"hidadapter","camelName":"hidAdapter","shortName":"hidAdapter","extends":["_base"],"notes":{"short":"A service for configuring how Jacdac device map to HID input events. Users can have multiple configurations and swap between them by writing to `current_configuration`."},"classIdentifier":509040821,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"num_configurations","identifier":128,"description":"The number of configurations stored on the server.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"rw","name":"current_configuration","identifier":129,"description":"The current configuration the server is using.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"command","name":"get_configuration","identifier":128,"description":"Retrieves a configuration stored on the server. If the configuration does not exist, an empty report will be returned","fields":[{"name":"results","type":"pipe","storage":12},{"name":"configuration_number","type":"u8","storage":1,"isSimpleType":true}],"pipeType":"get_configuration","packFormat":"b[12] u8"},{"kind":"pipe_report","name":"configuration","identifier":0,"description":"Retrieves a configuration stored on the server. If the configuration does not exist, an empty report will be returned","fields":[{"name":"configuration_number","type":"u8","storage":1,"isSimpleType":true},{"name":"binding_index","type":"u8","storage":1,"isSimpleType":true},{"name":"padding","type":"u8[2]","storage":2},{"name":"device_id","type":"u64","storage":8,"isSimpleType":true},{"name":"service_class","type":"u32","storage":4,"isSimpleType":true},{"name":"trigger_value","type":"u32","storage":4,"isSimpleType":true},{"name":"trigger_context","type":"u8","storage":1,"isSimpleType":true},{"name":"service_index","type":"u8","storage":1,"isSimpleType":true},{"name":"selector","type":"u16","storage":2,"isSimpleType":true},{"name":"modifiers","type":"u16","storage":2,"isSimpleType":true}],"pipeType":"get_configuration","packFormat":"u8 u8 b[2] u64 u32 u32 u8 u8 u16 u16"},{"kind":"command","name":"set_binding","identifier":130,"description":"Stores the given binding on the server. If a binding exists at this index, the new binding will replace it.","fields":[{"name":"configuration_number","type":"u8","storage":1,"isSimpleType":true},{"name":"binding_index","type":"u8","storage":1,"isSimpleType":true},{"name":"padding","type":"u8[2]","storage":2},{"name":"device_id","type":"u64","storage":8,"isSimpleType":true},{"name":"service_class","type":"u32","storage":4,"isSimpleType":true},{"name":"trigger_value","type":"u32","storage":4,"isSimpleType":true},{"name":"trigger_context","type":"u8","storage":1,"isSimpleType":true},{"name":"service_index","type":"u8","storage":1,"isSimpleType":true},{"name":"selector","type":"u16","storage":2,"isSimpleType":true},{"name":"modifiers","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u8 u8 b[2] u64 u32 u32 u8 u8 u16 u16"},{"kind":"command","name":"clear_binding","identifier":131,"description":"Clears a specific binding stored on the device.","fields":[{"name":"configuration_number","type":"u8","storage":1,"isSimpleType":true},{"name":"binding_index","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8 u8"},{"kind":"command","name":"clear_configuration","identifier":132,"description":"Clears a specific configuration stored on the device.","fields":[{"name":"configuration_number","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"command","name":"clear","identifier":133,"description":"Clears all configurations and bindings stored on the device.","fields":[]},{"kind":"event","name":"changed","identifier":3,"description":"Event that notifies clients that the server has swapped to a new configuration or changed key bindings.","fields":[],"identifierName":"change"}],"tags":[]},{"name":"HID Keyboard","status":"experimental","shortId":"hidkeyboard","camelName":"hidKeyboard","shortName":"hidKeyboard","extends":["_base"],"notes":{"short":"Control a HID keyboard. \\n\\nThe codes for the key (selectors) is defined in the [HID Keyboard\\nspecification](https://usb.org/sites/default/files/hut1_21.pdf), chapter 10 Keyboard/Keypad Page, page 81.\\nModifiers are in page 87.\\n\\nThe device keeps tracks of the key state and is able to clear it all with the clear command."},"classIdentifier":414210922,"enums":{"Modifiers":{"name":"Modifiers","storage":1,"isFlags":true,"members":{"None":0,"LeftControl":1,"LeftShift":2,"LeftAlt":4,"LeftGUI":8,"RightControl":16,"RightShift":32,"RightAlt":64,"RightGUI":128}},"Action":{"name":"Action","storage":1,"members":{"Press":0,"Up":1,"Down":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"key","identifier":128,"description":"Presses a key or a sequence of keys down.","fields":[{"name":"selector","type":"u16","storage":2,"isSimpleType":true,"startRepeats":true},{"name":"modifiers","type":"Modifiers","storage":1},{"name":"action","type":"Action","storage":1}],"lowLevel":true,"unique":true,"packFormat":"r: u16 u8 u8"},{"kind":"command","name":"clear","identifier":129,"description":"Clears all pressed keys.","fields":[]}],"tags":["8bit"]},{"name":"HID Mouse","status":"experimental","shortId":"hidmouse","camelName":"hidMouse","shortName":"hidMouse","extends":["_base"],"notes":{"short":"Controls a HID mouse."},"classIdentifier":411425820,"enums":{"Button":{"name":"Button","storage":2,"isFlags":true,"members":{"Left":1,"Right":2,"Middle":4}},"ButtonEvent":{"name":"ButtonEvent","storage":1,"members":{"Up":1,"Down":2,"Click":3,"DoubleClick":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"set_button","identifier":128,"description":"Sets the up/down state of one or more buttons.\\nA ``Click`` is the same as ``Down`` followed by ``Up`` after 100ms.\\nA ``DoubleClick`` is two clicks with ``150ms`` gap between them (that is, ``100ms`` first click, ``150ms`` gap, ``100ms`` second click).","fields":[{"name":"buttons","type":"Button","storage":2},{"name":"event","type":"ButtonEvent","storage":1}],"unique":true,"packFormat":"u16 u8"},{"kind":"command","name":"move","identifier":129,"description":"Moves the mouse by the distance specified.\\nIf the time is positive, it specifies how long to make the move.","fields":[{"name":"dx","unit":"#","type":"i16","storage":-2,"isSimpleType":true},{"name":"dy","unit":"#","type":"i16","storage":-2,"isSimpleType":true},{"name":"time","unit":"ms","type":"u16","storage":2,"isSimpleType":true}],"unique":true,"packFormat":"i16 i16 u16"},{"kind":"command","name":"wheel","identifier":130,"description":"Turns the wheel up or down. Positive if scrolling up.\\nIf the time is positive, it specifies how long to make the move.","fields":[{"name":"dy","unit":"#","type":"i16","storage":-2,"isSimpleType":true},{"name":"time","unit":"ms","type":"u16","storage":2,"isSimpleType":true}],"unique":true,"packFormat":"i16 u16"}],"tags":["8bit"]},{"name":"Humidity","status":"experimental","shortId":"humidity","camelName":"humidity","shortName":"humidity","extends":["_base","_sensor"],"notes":{"short":"A sensor measuring humidity of outside environment.","registers":"Default streaming interval is 1s."},"classIdentifier":382210232,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"humidity","identifier":257,"description":"The relative humidity in percentage of full water saturation.","fields":[{"name":"_","unit":"%RH","shift":10,"type":"u22.10","storage":4,"typicalMax":100,"typicalMin":0}],"volatile":true,"identifierName":"reading","preferredInterval":5000,"packFormat":"u22.10"},{"kind":"ro","name":"humidity_error","identifier":262,"description":"The real humidity is between `humidity - humidity_error` and `humidity + humidity_error`.","fields":[{"name":"_","unit":"%RH","shift":10,"type":"u22.10","storage":4}],"volatile":true,"identifierName":"reading_error","packFormat":"u22.10"},{"kind":"const","name":"min_humidity","identifier":260,"description":"Lowest humidity that can be reported.","fields":[{"name":"_","unit":"%RH","shift":10,"type":"u22.10","storage":4,"defaultValue":0}],"identifierName":"min_reading","packFormat":"u22.10"},{"kind":"const","name":"max_humidity","identifier":261,"description":"Highest humidity that can be reported.","fields":[{"name":"_","unit":"%RH","shift":10,"type":"u22.10","storage":4,"defaultValue":100}],"identifierName":"max_reading","packFormat":"u22.10"}],"tags":["C","8bit"],"group":"Environment"},{"name":"Illuminance","status":"experimental","shortId":"illuminance","camelName":"illuminance","shortName":"illuminance","extends":["_base","_sensor"],"notes":{"short":"Detects the amount of light falling onto a given surface area.\\n\\nNote that this is different from *luminance*, the amount of light that passes through, emits from, or reflects off an object."},"classIdentifier":510577394,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"light","identifier":257,"description":"The amount of illuminance, as lumens per square metre.","fields":[{"name":"_","unit":"lux","shift":10,"type":"u22.10","storage":4,"typicalMax":100000,"typicalMin":0}],"volatile":true,"identifierName":"reading","packFormat":"u22.10"},{"kind":"ro","name":"light_error","identifier":262,"description":"Error on the reported sensor value.","fields":[{"name":"_","unit":"lux","shift":10,"type":"u22.10","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u22.10"}],"tags":["8bit","padauk"],"group":"Environment"},{"name":"Indexed screen","status":"experimental","shortId":"indexedscreen","camelName":"indexedScreen","shortName":"indexedScreen","extends":["_base"],"notes":{"short":"A screen with indexed colors.\\n\\nThis is often run over an SPI connection, not regular single-wire JACDAC."},"classIdentifier":385496805,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"start_update","identifier":129,"description":"Sets the update window for subsequent `set_pixels` commands.","fields":[{"name":"x","unit":"px","type":"u16","storage":2,"isSimpleType":true},{"name":"y","unit":"px","type":"u16","storage":2,"isSimpleType":true},{"name":"width","unit":"px","type":"u16","storage":2,"isSimpleType":true},{"name":"height","unit":"px","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16 u16 u16 u16"},{"kind":"command","name":"set_pixels","identifier":131,"description":"Set pixels in current window, according to current palette.\\nEach \\"line\\" of data is aligned to a byte.","fields":[{"name":"pixels","type":"bytes","storage":0,"isSimpleType":true}],"unique":true,"packFormat":"b"},{"kind":"rw","name":"brightness","identifier":1,"description":"Set backlight brightness.\\nIf set to `0` the display may go to sleep.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1}],"identifierName":"intensity","packFormat":"u0.8"},{"kind":"rw","name":"palette","identifier":128,"description":"The current palette.\\nThe color entry repeats `1 << bits_per_pixel` times.\\nThis register may be write-only.","fields":[{"name":"blue","type":"u8","storage":1,"isSimpleType":true,"startRepeats":true},{"name":"green","type":"u8","storage":1,"isSimpleType":true},{"name":"red","type":"u8","storage":1,"isSimpleType":true},{"name":"padding","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"r: u8 u8 u8 u8"},{"kind":"const","name":"bits_per_pixel","identifier":384,"description":"Determines the number of palette entries.\\nTypical values are 1, 2, 4, or 8.","fields":[{"name":"_","unit":"bit","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"const","name":"width","identifier":385,"description":"Screen width in \\"natural\\" orientation.","fields":[{"name":"_","unit":"px","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"},{"kind":"const","name":"height","identifier":386,"description":"Screen height in \\"natural\\" orientation.","fields":[{"name":"_","unit":"px","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"},{"kind":"rw","name":"width_major","identifier":129,"description":"If true, consecutive pixels in the \\"width\\" direction are sent next to each other (this is typical for graphics cards).\\nIf false, consecutive pixels in the \\"height\\" direction are sent next to each other.\\nFor embedded screen controllers, this is typically true iff `width < height`\\n(in other words, it\'s only true for portrait orientation screens).\\nSome controllers may allow the user to change this (though the refresh order may not be optimal then).\\nThis is independent of the `rotation` register.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"rw","name":"up_sampling","identifier":130,"description":"Every pixel sent over wire is represented by `up_sampling x up_sampling` square of physical pixels.\\nSome displays may allow changing this (which will also result in changes to `width` and `height`).\\nTypical values are 1 and 2.","fields":[{"name":"_","unit":"px","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"rw","name":"rotation","identifier":131,"description":"Possible values are 0, 90, 180 and 270 only.\\nWrite to this register do not affect `width` and `height` registers,\\nand may be ignored by some screens.","fields":[{"name":"_","unit":"°","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"}],"tags":[]},{"name":"Infrastructure","status":"experimental","shortId":"infrastructure","camelName":"infrastructure","shortName":"infrastructure","extends":["_base"],"notes":{"short":"A service that tags a device as purely infrastructure device.\\n\\n\\nA Jacdac user interface can hide any device that hosts this service."},"classIdentifier":504728043,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"}],"tags":["infrastructure"]},{"name":"Joystick","status":"experimental","shortId":"joystick","camelName":"joystick","shortName":"joystick","extends":["_base","_sensor"],"notes":{"short":"A two axis directional joystick"},"classIdentifier":277836886,"enums":{"Buttons":{"name":"Buttons","storage":4,"isFlags":true,"members":{"Left":1,"Up":2,"Right":4,"Down":8,"A":16,"B":32,"Menu":64,"Select":128,"Reset":256,"Exit":512,"X":1024,"Y":2048}},"Variant":{"name":"Variant","storage":1,"members":{"Thumb":1,"ArcadeBall":2,"ArcadeStick":3,"Gamepad":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"direction","identifier":257,"description":"If the joystick is analog, the directional buttons should be \\"simulated\\", based on joystick position\\n(`Left` is `{ x = -1, y = 0 }`, `Up` is `{ x = 0, y = -1}`).\\nIf the joystick is digital, then each direction will read as either `-1`, `0`, or `1` (in fixed representation).\\nThe primary button on the joystick is `A`.","fields":[{"name":"buttons","type":"Buttons","storage":4},{"name":"x","unit":"/","shift":15,"type":"i1.15","storage":-2},{"name":"y","unit":"/","shift":15,"type":"i1.15","storage":-2}],"volatile":true,"identifierName":"reading","packFormat":"u32 i1.15 i1.15"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical joystick.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"const","name":"buttons_available","identifier":384,"description":"Indicates a bitmask of the buttons that are mounted on the joystick.\\nIf the `Left`/`Up`/`Right`/`Down` buttons are marked as available here, the joystick is digital.\\nEven when marked as not available, they will still be simulated based on the analog joystick.","fields":[{"name":"_","type":"Buttons","storage":4}],"packFormat":"u32"},{"kind":"event","name":"buttons_changed","identifier":3,"description":"Emitted whenever the state of buttons changes.","fields":[{"name":"buttons","type":"Buttons","storage":4}],"identifierName":"change","packFormat":"u32"}],"tags":["8bit","padauk"],"group":"Button"},{"name":"LED","status":"experimental","shortId":"led","camelName":"led","shortName":"led","extends":["_base"],"notes":{"short":"A controller for 1 or more monochrome or RGB LEDs connected in parallel."},"classIdentifier":506480888,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"ThroughHole":1,"SMD":2,"Power":3,"Bead":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"animate","identifier":128,"description":"This has the same semantics as `set_status_light` in the control service.","fields":[{"name":"to_red","type":"u8","storage":1,"isSimpleType":true},{"name":"to_green","type":"u8","storage":1,"isSimpleType":true},{"name":"to_blue","type":"u8","storage":1,"isSimpleType":true},{"name":"speed","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8 u8 u8 u8"},{"kind":"ro","name":"color","identifier":384,"description":"The current color of the LED.","fields":[{"name":"red","type":"u8","storage":1,"isSimpleType":true},{"name":"green","type":"u8","storage":1,"isSimpleType":true},{"name":"blue","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8 u8 u8"},{"kind":"rw","name":"max_power","identifier":7,"description":"Limit the power drawn by the light-strip (and controller).","fields":[{"name":"_","unit":"mA","type":"u16","storage":2,"isSimpleType":true,"defaultValue":100}],"optional":true,"identifierName":"max_power","packFormat":"u16"},{"kind":"const","name":"led_count","identifier":387,"description":"If known, specifies the number of LEDs in parallel on this device.","fields":[{"name":"_","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"packFormat":"u16"},{"kind":"const","name":"wave_length","identifier":385,"description":"If monochrome LED, specifies the wave length of the LED.","fields":[{"name":"_","unit":"nm","type":"u16","storage":2,"isSimpleType":true,"typicalMin":365,"typicalMax":885}],"optional":true,"packFormat":"u16"},{"kind":"const","name":"luminous_intensity","identifier":386,"description":"The luminous intensity of the LED, at full value, in micro candella.","fields":[{"name":"_","unit":"mcd","type":"u16","storage":2,"isSimpleType":true,"typicalMin":10,"typicalMax":5000}],"optional":true,"packFormat":"u16"},{"kind":"const","name":"variant","identifier":263,"description":"The physical type of LED.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit","padauk"],"group":"Light"},{"name":"LED Pixel","status":"experimental","shortId":"ledpixel","camelName":"ledPixel","shortName":"ledPixel","extends":["_base"],"notes":{"short":"A controller for strips of individually controlled RGB LEDs.","long":"## Light programs\\n\\nRealistically, with 1 mbit Jacdac, we can transmit under 2k of data per animation frame (at 20fps).\\nIf transmitting raw data that would be around 500 pixels, which is not enough for many\\ninstallations and it would completely clog the network.\\n\\nThus, light service defines a domain-specific language for describing light animations\\nand efficiently transmitting them over wire.\\n\\nLight commands are not Jacdac commands.\\nLight commands are efficiently encoded as sequences of bytes and typically sent as payload\\nof `run` command.\\n\\nDefinitions:\\n* `P` - position in the strip\\n* `R` - number of repetitions of the command\\n* `N` - number of pixels affected by the command\\n* `C` - single color designation\\n* `C+` - sequence of color designations\\n\\nUpdate modes:\\n* `0` - replace\\n* `1` - add RGB\\n* `2` - subtract RGB\\n* `3` - multiply RGB (by c/128); each pixel value will change by at least 1\\n\\nProgram commands:\\n* `0xD0: setall C+` - set all pixels in current range to given color pattern\\n* `0xD1: fade C+` - set pixels in current range to colors between colors in sequence\\n* `0xD2: fadehsv C+` - similar to `fade()`, but colors are specified and faded in HSV\\n* `0xD3: rotfwd K` - rotate (shift) pixels by `K` positions away from the connector\\n* `0xD4: rotback K` - same, but towards the connector\\n* `0xD5: show M=50` - send buffer to strip and wait `M` milliseconds\\n* `0xD6: range P=0 N=length W=1 S=0` - range from pixel `P`, `N` pixels long\\n  (currently unsupported: every `W` pixels skip `S` pixels)\\n* `0xD7: mode K=0` - set update mode\\n* `0xD8: tmpmode K=0` - set update mode for next command only\\n* `0xCF: setone P C` - set one pixel at `P` (in current range) to given color\\n* `mult V` - macro to multiply current range by given value (float)\\n\\nA number `k` is encoded as follows:\\n* `0 <= k < 128` -> `k`\\n* `128 <= k < 16383` -> `0x80 | (k >> 8), k & 0xff`\\n* bigger and negative numbers are not supported\\n\\nThus, bytes `0xC0-0xFF` are free to use for commands.\\n\\nFormats:\\n* `0xC1, R, G, B` - single color parameter\\n* `0xC2, R0, G0, B0, R1, G1, B1` - two color parameter\\n* `0xC3, R0, G0, B0, R1, G1, B1, R2, G2, B2` - three color parameter\\n* `0xC0, N, R0, G0, B0, ..., R(N-1), G(N-1), B(N-1)` - `N` color parameter\\n* `0xCF, <number>, R, G, B` - `set1` special format\\n\\nCommands are encoded as command byte, followed by parameters in the order\\nfrom the command definition.\\n\\nThe `setone()` command has irregular encoding to save space - it is byte `0xCF` followed by encoded\\nnumber, and followed by 3 bytes of color."},"classIdentifier":309264608,"enums":{"LightType":{"name":"LightType","storage":1,"members":{"WS2812B_GRB":0,"APA102":16,"SK9822":17}},"Variant":{"name":"Variant","storage":1,"members":{"Strip":1,"Ring":2,"Stick":3,"Jewel":4,"Matrix":5}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"brightness","identifier":1,"description":"Set the luminosity of the strip.\\nAt `0` the power to the strip is completely shut down.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1,"defaultValue":0.05}],"identifierName":"intensity","packFormat":"u0.8"},{"kind":"ro","name":"actual_brightness","identifier":384,"description":"This is the luminosity actually applied to the strip.\\nMay be lower than `brightness` if power-limited by the `max_power` register.\\nIt will rise slowly (few seconds) back to `brightness` is limits are no longer required.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1}],"packFormat":"u0.8"},{"kind":"rw","name":"light_type","identifier":128,"description":"Specifies the type of light strip connected to controller.\\nControllers which are sold with lights should default to the correct type\\nand could not allow change.","fields":[{"name":"_","type":"LightType","storage":1}],"packFormat":"u8"},{"kind":"rw","name":"num_pixels","identifier":129,"description":"Specifies the number of pixels in the strip.\\nControllers which are sold with lights should default to the correct length\\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true,"defaultValue":15}],"packFormat":"u16"},{"kind":"rw","name":"num_columns","identifier":131,"description":"If the LED pixel strip is a matrix, specifies the number of columns. Otherwise, a square shape is assumed. Controllers which are sold with lights should default to the correct length\\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"packFormat":"u16"},{"kind":"rw","name":"max_power","identifier":7,"description":"Limit the power drawn by the light-strip (and controller).","fields":[{"name":"_","unit":"mA","type":"u16","storage":2,"isSimpleType":true,"defaultValue":200}],"identifierName":"max_power","packFormat":"u16"},{"kind":"const","name":"max_pixels","identifier":385,"description":"The maximum supported number of pixels.\\nAll writes to `num_pixels` are clamped to `max_pixels`.","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"},{"kind":"rw","name":"num_repeats","identifier":130,"description":"How many times to repeat the program passed in `run` command.\\nShould be set before the `run` command.\\nSetting to `0` means to repeat forever.","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true,"defaultValue":1}],"packFormat":"u16"},{"kind":"const","name":"variant","identifier":263,"description":"Specifies the shape of the light strip.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"command","name":"run","identifier":129,"description":"Run the given light \\"program\\". See service description for details.","fields":[{"name":"program","type":"bytes","storage":0,"isSimpleType":true}],"unique":true,"packFormat":"b"}],"tags":["C"],"group":"Light"},{"name":"Light bulb","status":"experimental","shortId":"lightbulb","camelName":"lightBulb","shortName":"lightBulb","extends":["_base"],"notes":{"short":"A light bulb controller."},"classIdentifier":480970060,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"brightness","identifier":1,"description":"Indicates the brightness of the light bulb. Zero means completely off and 0xffff means completely on.\\nFor non-dimmeable lights, the value should be clamp to 0xffff for any non-zero value.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"intensity","packFormat":"u0.16"},{"kind":"const","name":"dimmeable","identifier":384,"description":"Indicates if the light supports dimming.","fields":[{"name":"_","type":"bool","storage":1}],"optional":true,"packFormat":"u8"},{"kind":"event","name":"on","identifier":1,"description":"Emitted when the light brightness is greater than 0.","fields":[],"identifierName":"active"},{"kind":"event","name":"off","identifier":2,"description":"Emitted when the light is completely off with brightness to 0.","fields":[],"identifierName":"inactive"}],"tags":[],"group":"Light"},{"name":"Light level","status":"experimental","shortId":"lightlevel","camelName":"lightLevel","shortName":"lightLevel","extends":["_base","_sensor"],"notes":{"short":"A sensor that measures luminosity level."},"classIdentifier":400333340,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"PhotoResistor":1,"LEDMatrix":2,"Ambient":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"light_level","identifier":257,"description":"Detect light level","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical sensor.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit","padauk"],"group":"Environment"},{"name":"Logger","status":"experimental","shortId":"logger","camelName":"logger","shortName":"logger","extends":["_base"],"notes":{"short":"A service which can report messages to the bus."},"classIdentifier":316415946,"enums":{"Priority":{"name":"Priority","storage":1,"members":{"Debug":0,"Log":1,"Warning":2,"Error":3,"Silent":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"min_priority","identifier":128,"description":"Messages with level lower than this won\'t be emitted. The default setting may vary.\\nLoggers should revert this to their default setting if the register has not been\\nupdated in 3000ms, and also keep the lowest setting they have seen in the last 1500ms.\\nThus, clients should write this register every 1000ms and ignore messages which are\\ntoo verbose for them.","fields":[{"name":"_","type":"Priority","storage":1,"defaultValue":1}],"packFormat":"u8"},{"kind":"report","name":"debug","identifier":128,"description":"Report a message.","fields":[{"name":"message","type":"string","storage":0}],"packFormat":"s"},{"kind":"report","name":"log","identifier":129,"description":"Report a message.","fields":[{"name":"message","type":"string","storage":0}],"packFormat":"s"},{"kind":"report","name":"warn","identifier":130,"description":"Report a message.","fields":[{"name":"message","type":"string","storage":0}],"packFormat":"s"},{"kind":"report","name":"error","identifier":131,"description":"Report a message.","fields":[{"name":"message","type":"string","storage":0}],"packFormat":"s"}],"tags":["C"]},{"name":"Magnetometer","status":"experimental","shortId":"magnetomer","camelName":"magnetometer","shortName":"magnetometer","extends":["_base","_sensor"],"notes":{"short":"A 3-axis magnetometer."},"classIdentifier":318935176,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"forces","identifier":257,"description":"Indicates the current magnetic field on magnetometer.\\nFor reference: `1 mgauss` is `100 nT` (and `1 gauss` is `100 000 nT`).","fields":[{"name":"x","unit":"nT","type":"i32","storage":-4,"isSimpleType":true},{"name":"y","unit":"nT","type":"i32","storage":-4,"isSimpleType":true},{"name":"z","unit":"nT","type":"i32","storage":-4,"isSimpleType":true}],"volatile":true,"identifierName":"reading","packFormat":"i32 i32 i32"},{"kind":"ro","name":"forces_error","identifier":262,"description":"Error on the readings.","fields":[{"name":"_","unit":"nT","type":"i32","storage":-4,"isSimpleType":true}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"i32"},{"kind":"command","name":"calibrate","identifier":2,"description":"Forces a calibration sequence where the user/device\\nmight have to rotate to be calibrated.","fields":[],"identifierName":"calibrate"}],"tags":[]},{"name":"Matrix Keypad","status":"experimental","shortId":"matrixkeypad","camelName":"matrixKeypad","shortName":"matrixKeypad","extends":["_base","_sensor"],"notes":{"short":"A matrix of buttons connected as a keypad"},"classIdentifier":319172040,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Membrane":1,"Keyboard":2,"Elastomer":3,"ElastomerLEDPixel":4}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"pressed","identifier":257,"description":"The coordinate of the button currently pressed. Keys are zero-indexed from left to right, top to bottom:\\n``row = index / columns``, ``column = index % columns``.","fields":[{"name":"index","type":"u8","storage":1,"isSimpleType":true,"startRepeats":true}],"volatile":true,"identifierName":"reading","packFormat":"r: u8"},{"kind":"const","name":"rows","identifier":384,"description":"Number of rows in the matrix","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"const","name":"columns","identifier":385,"description":"Number of columns in the matrix","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"const","name":"labels","identifier":386,"description":"The characters printed on the keys if any, in indexing sequence.","fields":[{"name":"label","type":"string0","storage":0,"startRepeats":true}],"optional":true,"packFormat":"r: z"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical keypad. If the variant is ``ElastomerLEDPixel``\\nand the next service on the device is a ``LEDPixel`` service, it is considered\\nas the service controlling the LED pixel on the keypad.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"event","name":"down","identifier":1,"description":"Emitted when a key, at the given index, goes from inactive (`pressed == 0`) to active.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"identifierName":"active","packFormat":"u8"},{"kind":"event","name":"up","identifier":2,"description":"Emitted when a key, at the given index, goes from active (`pressed == 1`) to inactive.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"identifierName":"inactive","packFormat":"u8"},{"kind":"event","name":"click","identifier":128,"description":"Emitted together with `up` when the press time was not longer than 500ms.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"event","name":"long_click","identifier":129,"description":"Emitted together with `up` when the press time was more than 500ms.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"}],"tags":[],"group":"Button"},{"name":"Microphone","status":"experimental","shortId":"microphone","camelName":"microphone","shortName":"microphone","extends":["_base"],"notes":{"short":"A single-channel microphone."},"classIdentifier":289254534,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"sample","identifier":129,"description":"The samples will be streamed back over the `samples` pipe.\\nIf `num_samples` is `0`, streaming will only stop when the pipe is closed.\\nOtherwise the specified number of samples is streamed.\\nSamples are sent as `i16`.","fields":[{"name":"samples","type":"pipe","storage":12},{"name":"num_samples","type":"u32","storage":4,"isSimpleType":true}],"pipeType":"sample","packFormat":"b[12] u32"},{"kind":"rw","name":"sampling_period","identifier":128,"description":"Get or set microphone sampling period.\\nSampling rate is `1_000_000 / sampling_period Hz`.","fields":[{"name":"_","unit":"us","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"}],"tags":[],"group":"Sound"},{"name":"MIDI output","status":"experimental","shortId":"midioutput","camelName":"midiOutput","shortName":"midiOutput","extends":["_base"],"notes":{"short":"A MIDI output device."},"classIdentifier":444894423,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Opens or closes the port to the MIDI device","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"command","name":"clear","identifier":128,"description":"Clears any pending send data that has not yet been sent from the MIDIOutput\'s queue.","fields":[]},{"kind":"command","name":"send","identifier":129,"description":"Enqueues the message to be sent to the corresponding MIDI port","fields":[{"name":"data","type":"bytes","storage":0,"isSimpleType":true}],"unique":true,"packFormat":"b"}],"tags":[],"group":"Sound"},{"name":"Model Runner","status":"experimental","shortId":"modelrunner","camelName":"modelRunner","shortName":"modelRunner","extends":["_base"],"notes":{"short":"Runs machine learning models.\\n\\nOnly models with a single input tensor and a single output tensor are supported at the moment.\\nInput is provided by Sensor Aggregator service on the same device.\\nMultiple instances of this service may be present, if more than one model format is supported by a device."},"classIdentifier":336566904,"enums":{"ModelFormat":{"name":"ModelFormat","storage":4,"members":{"TFLite":860636756,"ML4F":809963362,"EdgeImpulseCompiled":810961221}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"set_model","identifier":128,"description":"Open pipe for streaming in the model. The size of the model has to be declared upfront.\\nThe model is streamed over regular pipe data packets.\\nThe format supported by this instance of the service is specified in `format` register.\\nWhen the pipe is closed, the model is written all into flash, and the device running the service may reset.","fields":[{"name":"model_size","unit":"B","type":"u32","storage":4,"isSimpleType":true}],"unique":true,"hasReport":true,"packFormat":"u32"},{"kind":"report","name":"set_model","identifier":128,"description":"Open pipe for streaming in the model. The size of the model has to be declared upfront.\\nThe model is streamed over regular pipe data packets.\\nThe format supported by this instance of the service is specified in `format` register.\\nWhen the pipe is closed, the model is written all into flash, and the device running the service may reset.","fields":[{"name":"model_port","type":"pipe_port","storage":2}],"secondary":true,"pipeType":"set_model","packFormat":"u16"},{"kind":"command","name":"predict","identifier":129,"description":"Open channel that can be used to manually invoke the model. When enough data is sent over the `inputs` pipe, the model is invoked,\\nand results are send over the `outputs` pipe.","fields":[{"name":"outputs","type":"pipe","storage":12}],"pipeType":"predict","hasReport":true,"packFormat":"b[12]"},{"kind":"report","name":"predict","identifier":129,"description":"Open channel that can be used to manually invoke the model. When enough data is sent over the `inputs` pipe, the model is invoked,\\nand results are send over the `outputs` pipe.","fields":[{"name":"inputs","type":"pipe_port","storage":2}],"secondary":true,"pipeType":"predict","packFormat":"u16"},{"kind":"rw","name":"auto_invoke_every","identifier":128,"description":"When register contains `N > 0`, run the model automatically every time new `N` samples are collected.\\nModel may be run less often if it takes longer to run than `N * sampling_interval`.\\nThe `outputs` register will stream its value after each run.\\nThis register is not stored in flash.","fields":[{"name":"_","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16"},{"kind":"ro","name":"outputs","identifier":257,"description":"Results of last model invocation as `float32` array.","fields":[{"name":"output","isFloat":true,"type":"f32","storage":4,"startRepeats":true}],"volatile":true,"identifierName":"reading","packFormat":"r: f32"},{"kind":"ro","name":"input_shape","identifier":384,"description":"The shape of the input tensor.","fields":[{"name":"dimension","type":"u16","storage":2,"isSimpleType":true,"startRepeats":true}],"packFormat":"r: u16"},{"kind":"ro","name":"output_shape","identifier":385,"description":"The shape of the output tensor.","fields":[{"name":"dimension","type":"u16","storage":2,"isSimpleType":true,"startRepeats":true}],"packFormat":"r: u16"},{"kind":"ro","name":"last_run_time","identifier":386,"description":"The time consumed in last model execution.","fields":[{"name":"_","unit":"us","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"allocated_arena_size","identifier":387,"description":"Number of RAM bytes allocated for model execution.","fields":[{"name":"_","unit":"B","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"model_size","identifier":388,"description":"The size of the model in bytes.","fields":[{"name":"_","unit":"B","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"last_error","identifier":389,"description":"Textual description of last error when running or loading model (if any).","fields":[{"name":"_","type":"string","storage":0}],"packFormat":"s"},{"kind":"const","name":"format","identifier":390,"description":"The type of ML models supported by this service.\\n`TFLite` is flatbuffer `.tflite` file.\\n`ML4F` is compiled machine code model for Cortex-M4F.\\nThe format is typically present as first or second little endian word of model file.","fields":[{"name":"_","type":"ModelFormat","storage":4}],"packFormat":"u32"},{"kind":"const","name":"format_version","identifier":391,"description":"A version number for the format.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"const","name":"parallel","identifier":392,"description":"If present and true this service can run models independently of other\\ninstances of this service on the device.","fields":[{"name":"_","type":"bool","storage":1}],"optional":true,"packFormat":"u8"}],"tags":[]},{"name":"Motion","status":"experimental","shortId":"motion","camelName":"motion","shortName":"motion","extends":["_base","_sensor"],"notes":{"short":"A sensor, typically PIR, that detects object motion within a certain range"},"classIdentifier":293185353,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"PIR":1}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"moving","identifier":257,"description":"Reports is movement is currently detected by the sensor.","fields":[{"name":"_","type":"bool","storage":1}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u8"},{"kind":"const","name":"max_distance","identifier":384,"description":"Maximum distance where objects can be detected.","fields":[{"name":"_","unit":"m","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"const","name":"angle","identifier":385,"description":"Opening of the field of view","fields":[{"name":"_","unit":"°","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"packFormat":"u16"},{"kind":"const","name":"variant","identifier":263,"description":"Type of physical sensor","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"event","name":"movement","identifier":1,"description":"A movement was detected.","fields":[],"identifierName":"active"}],"tags":["8bit"],"group":"Movement"},{"name":"Motor","status":"experimental","shortId":"motor","camelName":"motor","shortName":"motor","extends":["_base"],"notes":{"short":"A bi-directional DC motor."},"classIdentifier":385895640,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"duty","identifier":2,"description":"PWM duty cycle of the motor. Use negative/positive values to run the motor forwards and backwards.\\nPositive is recommended to be clockwise rotation and negative counterclockwise. A duty of ``0`` \\nwhile ``enabled`` acts as brake.","fields":[{"name":"_","unit":"/","shift":15,"type":"i1.15","storage":-2}],"identifierName":"value","packFormat":"i1.15"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turn the power to the motor on/off.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"const","name":"load_torque","identifier":384,"description":"Torque required to produce the rated power of an electrical motor at load speed.","fields":[{"name":"_","unit":"kg/cm","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"const","name":"load_speed","identifier":385,"description":"Revolutions per minute of the motor under full load.","fields":[{"name":"_","unit":"rpm","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"}],"tags":["C","8bit"]},{"name":"Multitouch","status":"experimental","shortId":"multitouch","camelName":"multitouch","shortName":"multitouch","extends":["_base","_sensor"],"notes":{"short":"A capacitive touch sensor with multiple inputs.","events":"Most events include the channel number of the input."},"classIdentifier":416636459,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"capacity","identifier":257,"description":"Capacitance of channels. The capacitance is continuously calibrated, and a value of `0` indicates\\nno touch, wheres a value of around `100` or more indicates touch.\\nIt\'s best to ignore this (unless debugging), and use events.","fields":[{"name":"capacitance","type":"i32","storage":-4,"isSimpleType":true,"startRepeats":true}],"volatile":true,"identifierName":"reading","packFormat":"r: i32"},{"kind":"event","name":"touch","identifier":1,"description":"Emitted when an input is touched.","fields":[{"name":"channel","type":"u32","storage":4,"isSimpleType":true}],"identifierName":"active","packFormat":"u32"},{"kind":"event","name":"release","identifier":2,"description":"Emitted when an input is no longer touched.","fields":[{"name":"channel","type":"u32","storage":4,"isSimpleType":true}],"identifierName":"inactive","packFormat":"u32"},{"kind":"event","name":"tap","identifier":128,"description":"Emitted when an input is briefly touched. TODO Not implemented.","fields":[{"name":"channel","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"event","name":"long_press","identifier":129,"description":"Emitted when an input is touched for longer than 500ms. TODO Not implemented.","fields":[{"name":"channel","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"event","name":"swipe_pos","identifier":144,"description":"Emitted when input channels are successively touched in order of increasing channel numbers.","fields":[]},{"kind":"event","name":"swipe_neg","identifier":145,"description":"Emitted when input channels are successively touched in order of decreasing channel numbers.","fields":[]}],"tags":[],"group":"Button"},{"name":"Potentiometer","status":"experimental","shortId":"potentiometer","camelName":"potentiometer","shortName":"potentiometer","extends":["_base","_sensor"],"notes":{"short":"A slider or rotary potentiometer."},"classIdentifier":522667846,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Slider":1,"Rotary":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"position","identifier":257,"description":"The relative position of the slider.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"Specifies the physical layout of the potentiometer.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["C","8bit"],"group":"Slider"},{"name":"Power","status":"experimental","shortId":"power","camelName":"power","shortName":"power","extends":["_base"],"notes":{"short":"A power-provider service.","long":"## Power negotiation protocol\\n\\nThe purpose of the power negotiation is to ensure that there is no more than ~900mA\\ndelivered to the power rail.\\nThis is realized by limiting the number of enabled power provider services to one.\\n\\nNote, that it\'s also possible to have low-current power providers,\\nwhich are limited to 100mA and do not run a power provider service.\\nThese are **not** accounted for in the power negotiation protocol.\\n\\nPower providers can have multiple _channels_, typically multiple Jacdac ports on the provider.\\nEach channel can be limited to 900mA separately.\\nIn normal operation, the data lines of each channels are connected together.\\nThe ground lines are always connected together.\\nMulti-channel power providers are also called _powered hubs_.\\n\\nWhile channels have separate current limits, there\'s nothing to prevent the user\\nfrom joining two or more channels outside of the provider using a passive hub.\\nThis would allow more than 900mA of current to be drawn, resulting in cables or components\\ngetting hot and/or malfunctioning.\\nThus, the power negotiation protocol seeks to detect situations where\\nmultiple channels of power provider(s) are bridged together\\nand shut down all but one of the channels involved.\\n\\nThe protocol is built around the power providers periodically sending specially crafted\\n`shutdown` commands in broadcast mode.\\nNote that this is unusual - services typically only send reports.\\n\\nThe `shutdown` commands can be reliably identified based on their first half (more details below).\\nWhen a power provider starts receiving a `shutdown` command, it needs to take\\nsteps to identify which of its channels the command is coming from.\\nThis is typically realized with analog switches between data lines of channels.\\nThe channel which received the `shutdown` command is then shut down.\\nNote that in the case a single-channel provider any received `shutdown` command will cause a shut down.\\n\\nA multi-channel provider needs to also identify when a `shutdown` command it sent from one channel\\nis received on any of its other channels and shut down one of the involved channels.\\n\\nIt is also possible to build a _data bridge_ device, with two or more ports.\\nIt passes through all data except for `shutdown` commands,\\nbut **does not** connect the power lines.\\n\\n### Protocol details\\n\\nThe `shutdown` commands follow a very narrow format:\\n* they need to be the only packet in the frame (and thus we can also call them `shutdown` frames)\\n* the second word of `device_id` needs to be set to `0xAA_AA_AA_AA` (alternating 0 and 1)\\n* the service index is set to `0x3d`\\n* the CRC is therefore fixed\\n* therefore, the packet can be recognized by reading the first 8 bytes (total length is 16 bytes)\\n\\nThe exact byte structure of `shutdown` command is:\\n`15 59 04 05 5A C9 A4 1F AA AA AA AA 00 3D 80 00`\\n\\nThere is one power service per channel.\\nA multi-channel power provider can be implemented as one device with multiple services (typically with one MCU),\\nor many devices with one service each (typically multiple MCUs).\\nThe first option is preferred as it fixes the order of channels,\\nbut the second option may be cheaper to implement.\\n\\nAfter queuing a `shutdown` command, the service enters a grace period\\nuntil the report has been sent on the wire.\\nDuring the grace period incoming `shutdown` commands are ignored.\\n\\n* Upon reset, a power service enables itself, and then only after 0-300ms (random)\\n  sends the first `shutdown` command\\n* Every enabled power service emits `shutdown` commands every 400-600ms (random; first few packets can be even sent more often)\\n* If an enabled power service sees a `shutdown` command from somebody else,\\n  it disables itself (unless in grace period)\\n* If a disabled power service sees no `shutdown` command for more than ~1200ms, it enables itself\\n  (this is when the previous power source is unplugged or otherwise malfunctions)\\n* If a power service has been disabled for around 10s, it enables itself.\\n\\nAdditionally:\\n* While the `allowed` register is set to `0`, the service will not enable itself (nor send `shutdown` commands)\\n* When a current overdraw is detected, the service stop providing power and enters `Overload` state for around 2 seconds,\\n  while still sending `shutdown` commands.\\n\\n### Client notes\\n\\nIf a client hears a `shutdown` command it just means it\'s on a branch of the\\nnetwork with a (high) power provider.\\nAs clients (brains) typically do not consume much current (as opposed to, say, servos),\\nthe `shutdown` commands are typically irrelevant to them.\\n\\nFor power monitoring, the `power_status_changed` event (and possibly `power_status` register)\\ncan be used.\\nIn particular, user interfaces may alert the user to `Overload` status.\\nThe `Overprovision` status is generally considered normal (eg. when two multi-channel power providers are linked together).\\n\\n### Server implementation notes\\n\\n#### An MCU per channel\\n\\nEvery channel has:\\n* a cheap 8-bit MCU (eg., PMS150C)\\n* a current limiter with latching circuit\\n* an analog switch\\n\\nThe MCU is connected to data line of the channel.\\nThe switch joins the data line of the channel with internal data bus, common to all channels.\\nBoth the switch and the limiter are controlled by the MCU.\\nThe latching circuit on the limiter shuts it down immediately on current overdraw.\\n\\nDuring reception, after the beginning of `shutdown` frame is detected,\\nthe switch is opened for a brief period.\\nIf the `shutdown` frame is received correctly, it means it was on MCU\'s channel.\\n\\n#### A dedicated MCU for multiple channels\\n\\nEvery channel has:\\n* a current limiter with latching circuit\\n* an analog switch\\n* a wiggle-detection line connecting the MCU to data line of the channel\\n\\nThe MCU here needs at least 4 pins per channel.\\nSwitches and limiters are set up like in the configuration above.\\nThe Jacdac data line of the MCU is connected to internal data bus.\\n\\nWhile a Jacdac packet is being received, the MCU keeps checking if it is a \\nbeginning of the `shutdown` frame.\\nIf that is the case, it opens all switches and checks which one(s) of the channel\\ndata lines wiggle (via the wiggle lines; this can be done with EXTI latches).\\nThe one(s) that wiggle received the `shutdown` frame and need to be disabled.\\n\\nAlso, while sending the `shutdown` frames itself, it needs to be done separately\\nfor each channel, with all the other switches open.\\nIf during that operation we detect wiggle on other channels, then we have detected\\na loop, and the respective channels needs to be disabled.\\n\\n#### A brain-integrated power supply\\n\\nHere, there\'s only one channel of power and we don\'t have hard real time requirements,\\nso user-programmable brain can control it.\\nThere is no need for analog switch or wiggle-detection line,\\nbut the current limiter with latching circuit is still needed.\\n\\nThere is nothing special to do during reception of `shutdown` packet.\\nWhen it is received, the current limiter should just be disabled.\\n\\nIdeally, exception/hard-fault handlers on the MCU should also disable the\\ncurrent limiter.\\nSimilarly, the limiter should be disabled while the MCU is in bootloader mode,\\nor otherwise unaware of the power negotiation protocol. \\n\\n### Rationale for the grace period\\n\\nConsider the following scenario:\\n\\n* device A queues `shutdown` command for sending\\n* A receives external `shutdown` packet from B (thus disabling A)\\n* the A `shutdown` command is sent from the queue (thus eventually disabling B)\\n\\nTo avoid that, we make sure that at the precise instant when `shutdown` command is sent,\\nthe power is enabled (and thus will stay enabled until another `shutdown` command arrives).\\nThis could be achieved by inspecting the enable bit, aftering acquiring the line\\nand before starting UART transmission, however that would require breaking abstraction layers.\\nSo instead, we never disable the service, while the `shutdown` packet is queued.\\nThis may lead to delays in disabling power services, but these should be limited due to the\\nrandom nature of the `shutdown` packet spacing.\\n\\n### Rationale for timings\\n\\nThe initial 0-300ms delay is set to spread out the `shutdown` periods of power services,\\nto minimize collisions.\\nThe `shutdown` periods are randomized 400-600ms, instead of a fixed 500ms used for regular\\nservices, for the same reason.\\n\\nThe 1200ms period is set so that droping two `shutdown` packets in a row\\nfrom the current provider will not cause power switch, while missing 3 will.\\n\\nThe 50-60s power switch period is arbitrary, but chosen to limit amount of switching between supplies,\\nwhile keeping it short enough for user to notice any problems such switching may cause."},"classIdentifier":530893146,"enums":{"PowerStatus":{"name":"PowerStatus","storage":1,"members":{"Disallowed":0,"Powering":1,"Overload":2,"Overprovision":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"allowed","identifier":1,"description":"Can be used to completely disable the service.\\nWhen allowed, the service may still not be providing power, see \\n`power_status` for the actual current state.","fields":[{"name":"_","type":"bool","storage":1,"defaultValue":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"max_power","identifier":7,"description":"Limit the power provided by the service. The actual maximum limit will depend on hardware.\\nThis field may be read-only in some implementations - you should read it back after setting.","fields":[{"name":"_","unit":"mA","type":"u16","storage":2,"isSimpleType":true,"defaultValue":900,"typicalMax":900,"typicalMin":0}],"optional":true,"identifierName":"max_power","packFormat":"u16"},{"kind":"ro","name":"power_status","identifier":385,"description":"Indicates whether the power provider is currently providing power (`Powering` state), and if not, why not.\\n`Overprovision` means there was another power provider, and we stopped not to overprovision the bus.","fields":[{"name":"_","type":"PowerStatus","storage":1}],"volatile":true,"packFormat":"u8"},{"kind":"ro","name":"current_draw","identifier":257,"description":"Present current draw from the bus.","fields":[{"name":"_","unit":"mA","type":"u16","storage":2,"isSimpleType":true}],"volatile":true,"optional":true,"identifierName":"reading","packFormat":"u16"},{"kind":"ro","name":"battery_voltage","identifier":384,"description":"Voltage on input.","fields":[{"name":"_","unit":"mV","type":"u16","storage":2,"isSimpleType":true,"typicalMin":4500,"typicalMax":5500}],"volatile":true,"optional":true,"packFormat":"u16"},{"kind":"ro","name":"battery_charge","identifier":386,"description":"Fraction of charge in the battery.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"optional":true,"packFormat":"u0.16"},{"kind":"const","name":"battery_capacity","identifier":387,"description":"Energy that can be delivered to the bus when battery is fully charged.\\nThis excludes conversion overheads if any.","fields":[{"name":"_","unit":"mWh","type":"u32","storage":4,"isSimpleType":true}],"optional":true,"packFormat":"u32"},{"kind":"rw","name":"keep_on_pulse_duration","identifier":128,"description":"Many USB power packs need current to be drawn from time to time to prevent shutdown.\\nThis regulates how often and for how long such current is drawn.\\nTypically a 1/8W 22 ohm resistor is used as load. This limits the duty cycle to 10%.","fields":[{"name":"_","unit":"ms","type":"u16","storage":2,"isSimpleType":true,"defaultValue":600}],"optional":true,"packFormat":"u16"},{"kind":"rw","name":"keep_on_pulse_period","identifier":129,"description":"Many USB power packs need current to be drawn from time to time to prevent shutdown.\\nThis regulates how often and for how long such current is drawn.\\nTypically a 1/8W 22 ohm resistor is used as load. This limits the duty cycle to 10%.","fields":[{"name":"_","unit":"ms","type":"u16","storage":2,"isSimpleType":true,"defaultValue":20000}],"optional":true,"packFormat":"u16"},{"kind":"command","name":"shutdown","identifier":128,"description":"Sent by the power service periodically, as broadcast.","fields":[]},{"kind":"event","name":"power_status_changed","identifier":3,"description":"Emitted whenever `power_status` changes.","fields":[{"name":"power_status","type":"PowerStatus","storage":1}],"identifierName":"change","packFormat":"u8"}],"tags":[]},{"name":"Pressure Button","status":"experimental","shortId":"pressurebutton","camelName":"pressureButton","shortName":"pressureButton","extends":["_base"],"notes":{"short":"A pressure sensitive push-button."},"classIdentifier":672612547,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"threshold","identifier":6,"description":"Indicates the threshold for ``up`` events.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"active_threshold","packFormat":"u0.16"}],"tags":["8bit"],"group":"Button"},{"name":"Protocol Test","status":"experimental","shortId":"prototest","camelName":"protoTest","shortName":"protoTest","extends":["_base"],"notes":{"short":"This is test service to validate the protocol packet transmissions between the browser and a MCU.\\nUse this page if you are porting Jacdac to a new platform.","long":"### Test procedure\\n\\nFor each ``rw`` registers, set a random value ``x``\\n  * read ``rw`` and check value is equal to ``x``\\n  * read ``ro`` and check value is equal to ``x``\\n  * listen to ``e`` event and check that data is equal to ``x``\\n  * call ``c`` command with new random value ``y``\\n  * read ``rw`` and check value is equal to ``y``\\n  * do all the above steps with acks\\n\\nFor each ``rw`` registers, there shall also\\nbe an ``event`` and a ``command``. The event\\nshould get raised when the value changes;\\nand the command should set the value.","registers":"Every ``rw`` register has a corresponding ``ro`` regisrer\\nand a corresponding ``set_...`` command to also set the value."},"classIdentifier":382158442,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"rw_bool","identifier":129,"description":"A read write bool register.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"ro","name":"ro_bool","identifier":385,"description":"A read only bool register. Mirrors rw_bool.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"rw","name":"rw_u32","identifier":130,"description":"A read write u32 register.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"ro_u32","identifier":386,"description":"A read only u32 register.. Mirrors rw_u32.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"rw","name":"rw_i32","identifier":131,"description":"A read write i32 register.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"ro","name":"ro_i32","identifier":387,"description":"A read only i32 register.. Mirrors rw_i32.","fields":[{"name":"_","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"rw","name":"rw_string","identifier":132,"description":"A read write string register.","fields":[{"name":"_","type":"string","storage":0}],"packFormat":"s"},{"kind":"ro","name":"ro_string","identifier":388,"description":"A read only string register. Mirrors rw_string.","fields":[{"name":"_","type":"string","storage":0}],"packFormat":"s"},{"kind":"rw","name":"rw_bytes","identifier":133,"description":"A read write string register.","fields":[{"name":"_","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"b"},{"kind":"ro","name":"ro_bytes","identifier":389,"description":"A read only string register. Mirrors ro_bytes.","fields":[{"name":"_","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"b"},{"kind":"rw","name":"rw_i8_u8_u16_i32","identifier":134,"description":"A read write i8, u8, u16, i32 register.","fields":[{"name":"i8","type":"i8","storage":-1,"isSimpleType":true},{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"u16","type":"u16","storage":2,"isSimpleType":true},{"name":"i32","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i8 u8 u16 i32"},{"kind":"ro","name":"ro_i8_u8_u16_i32","identifier":390,"description":"A read only i8, u8, u16, i32 register.. Mirrors rw_i8_u8_u16_i32.","fields":[{"name":"i8","type":"i8","storage":-1,"isSimpleType":true},{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"u16","type":"u16","storage":2,"isSimpleType":true},{"name":"i32","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i8 u8 u16 i32"},{"kind":"rw","name":"rw_u8_string","identifier":135,"description":"A read write u8, string register.","fields":[{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"string","type":"string","storage":0}],"packFormat":"u8 s"},{"kind":"ro","name":"ro_u8_string","identifier":391,"description":"A read only u8, string register.. Mirrors rw_u8_string.","fields":[{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"string","type":"string","storage":0}],"packFormat":"u8 s"},{"kind":"event","name":"e_bool","identifier":129,"description":"An event raised when rw_bool is modified","fields":[{"name":"bool","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"event","name":"e_u32","identifier":130,"description":"An event raised when rw_u32 is modified","fields":[{"name":"u32","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"event","name":"e_i32","identifier":131,"description":"An event raised when rw_i32 is modified","fields":[{"name":"i32","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"event","name":"e_string","identifier":132,"description":"An event raised when rw_string is modified","fields":[{"name":"string","type":"string","storage":0}],"packFormat":"s"},{"kind":"event","name":"e_bytes","identifier":133,"description":"An event raised when rw_bytes is modified","fields":[{"name":"bytes","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"b"},{"kind":"event","name":"e_i8_u8_u16_i32","identifier":134,"description":"An event raised when rw_i8_u8_u16_i32 is modified","fields":[{"name":"i8","type":"i8","storage":-1,"isSimpleType":true},{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"u16","type":"u16","storage":2,"isSimpleType":true},{"name":"i32","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i8 u8 u16 i32"},{"kind":"event","name":"e_u8_string","identifier":135,"description":"An event raised when rw_u8_string is modified","fields":[{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"string","type":"string","storage":0}],"packFormat":"u8 s"},{"kind":"command","name":"c_bool","identifier":129,"description":"A command to set rw_bool.","fields":[{"name":"bool","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"command","name":"c_u32","identifier":130,"description":"A command to set rw_u32.","fields":[{"name":"u32","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"command","name":"c_i32","identifier":131,"description":"A command to set rw_i32.","fields":[{"name":"i32","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i32"},{"kind":"command","name":"c_string","identifier":132,"description":"A command to set rw_string.","fields":[{"name":"string","type":"string","storage":0}],"packFormat":"s"},{"kind":"command","name":"c_bytes","identifier":133,"description":"A command to set rw_string.","fields":[{"name":"bytes","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"b"},{"kind":"command","name":"c_i8_u8_u16_i32","identifier":134,"description":"A command to set rw_bytes.","fields":[{"name":"i8","type":"i8","storage":-1,"isSimpleType":true},{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"u16","type":"u16","storage":2,"isSimpleType":true},{"name":"i32","type":"i32","storage":-4,"isSimpleType":true}],"packFormat":"i8 u8 u16 i32"},{"kind":"command","name":"c_u8_string","identifier":135,"description":"A command to set rw_u8_string.","fields":[{"name":"u8","type":"u8","storage":1,"isSimpleType":true},{"name":"string","type":"string","storage":0}],"packFormat":"u8 s"},{"kind":"command","name":"c_report_pipe","identifier":144,"description":"A command to read the content of rw_bytes, byte per byte, as a pipe.","fields":[{"name":"p_bytes","type":"pipe","storage":12}],"pipeType":"c_report_pipe","packFormat":"b[12]"},{"kind":"pipe_report","name":"p_bytes","identifier":0,"description":"A command to read the content of rw_bytes, byte per byte, as a pipe.","fields":[{"name":"byte","type":"u8","storage":1,"isSimpleType":true}],"pipeType":"c_report_pipe","packFormat":"u8"}],"tags":[]},{"name":"Proxy","status":"experimental","shortId":"proxy","camelName":"proxy","shortName":"proxy","extends":["_base"],"notes":{"short":"A service that tags a device as a packet proxy.\\n\\n\\nA device in proxy mode will proxy Jacdac packets and typically has its core logic halted."},"classIdentifier":384932169,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"}],"tags":[]},{"name":"Pulse Oximeter","status":"experimental","shortId":"pulseoximeter","camelName":"pulseOximeter","shortName":"pulseOximeter","extends":["_base","_sensor"],"notes":{"short":"A sensor approximating the oxygen level. \\n\\n**Jacdac is not suitable for medical devices and should NOT be used in any kind of device to diagnose or treat any medical conditions.**"},"classIdentifier":280710838,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"oxygen","identifier":257,"description":"The estimated oxygen level in blood.","fields":[{"name":"_","unit":"%","shift":8,"type":"u8.8","storage":2,"typicalMin":80,"typicalMax":100}],"volatile":true,"identifierName":"reading","packFormat":"u8.8"},{"kind":"ro","name":"oxygen_error","identifier":262,"description":"The estimated error on the reported sensor data.","fields":[{"name":"_","unit":"%","shift":8,"type":"u8.8","storage":2}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u8.8"}],"tags":["8bit"],"group":"Biometric"},{"name":"Rain gauge","status":"experimental","shortId":"raingauge","camelName":"rainGauge","shortName":"rainGauge","extends":["_base","_sensor"],"notes":{"short":"Measures the amount of liquid precipitation over an area in a predefined period of time."},"classIdentifier":326323349,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"precipitation","identifier":257,"description":"Total precipitation recorded so far.","fields":[{"name":"_","unit":"mm","shift":16,"type":"u16.16","storage":4}],"volatile":true,"identifierName":"reading","preferredInterval":60000,"packFormat":"u16.16"},{"kind":"const","name":"precipitation_precision","identifier":264,"description":"Typically the amount of rain needed for tipping the bucket.","fields":[{"name":"_","unit":"mm","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"reading_resolution","packFormat":"u16.16"}],"tags":["8bit"],"group":"Environment"},{"name":"Real time clock","status":"experimental","shortId":"realtimeclock","camelName":"realTimeClock","shortName":"realTimeClock","extends":["_base","_sensor"],"notes":{"short":"Real time clock to support collecting data with precise time stamps."},"classIdentifier":445323816,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Computer":1,"Crystal":2,"Cuckoo":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"local_time","identifier":257,"description":"Current time in 24h representation. \\n* ``day_of_month`` is day of the month, starting at ``1``\\n* ``day_of_week`` is day of the week, starting at ``1`` as monday\\nDefault streaming period is 1 second.","fields":[{"name":"year","type":"u16","storage":2,"isSimpleType":true},{"name":"month","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":1,"absoluteMax":12},{"name":"day_of_month","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":1,"absoluteMax":31},{"name":"day_of_week","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":1,"absoluteMax":7},{"name":"hour","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":0,"absoluteMax":23},{"name":"min","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":0,"absoluteMax":59},{"name":"sec","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":0,"absoluteMax":60}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u16 u8 u8 u8 u8 u8 u8"},{"kind":"ro","name":"drift","identifier":384,"description":"Time drift since the last call to the ``set_time`` command.","fields":[{"name":"_","unit":"s","shift":16,"type":"u16.16","storage":4}],"volatile":true,"optional":true,"packFormat":"u16.16"},{"kind":"const","name":"precision","identifier":385,"description":"Error on the clock, in parts per million of seconds.","fields":[{"name":"_","unit":"ppm","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical clock used by the sensor.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"command","name":"set_time","identifier":128,"description":"Sets the current time and resets the error.","fields":[{"name":"year","type":"u16","storage":2,"isSimpleType":true},{"name":"month","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":1,"absoluteMax":12},{"name":"day_of_month","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":1,"absoluteMax":31},{"name":"day_of_week","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":1,"absoluteMax":7},{"name":"hour","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":0,"absoluteMax":23},{"name":"min","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":0,"absoluteMax":59},{"name":"sec","type":"u8","storage":1,"isSimpleType":true,"absoluteMin":0,"absoluteMax":60}],"packFormat":"u16 u8 u8 u8 u8 u8 u8"}],"tags":["8bit"]},{"name":"Reflected light","status":"experimental","shortId":"reflectedlight","camelName":"reflectedLight","shortName":"reflectedLight","extends":["_base","_sensor"],"notes":{"short":"A sensor that detects light and dark surfaces, commonly used for line following robots."},"classIdentifier":309087410,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"InfraredDigital":1,"InfraredAnalog":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"brightness","identifier":257,"description":"Reports the reflected brightness. It may be a digital value or, for some sensor, analog value.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"Type of physical sensor used","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"event","name":"dark","identifier":2,"description":"The sensor detected a transition from light to dark","fields":[],"identifierName":"inactive"},{"kind":"event","name":"light","identifier":1,"description":"The sensor detected a transition from dark to light","fields":[],"identifierName":"active"}],"tags":["8bit"],"group":"Environment"},{"name":"Relay","status":"experimental","shortId":"relay","camelName":"relay","shortName":"relay","extends":["_base"],"notes":{"short":"A switching relay."},"classIdentifier":406840918,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Electromechanical":1,"SolidState":2,"Reed":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"closed","identifier":1,"description":"Indicates whether the relay circuit is currently energized (closed) or not.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"const","name":"variant","identifier":263,"description":"Describes the type of relay used.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"const","name":"max_switching_current","identifier":384,"description":"Maximum switching current for a resistive load.","fields":[{"name":"_","unit":"mA","type":"u32","storage":4,"isSimpleType":true}],"optional":true,"packFormat":"u32"},{"kind":"event","name":"active","identifier":1,"description":"Emitted when relay goes from `inactive` to `active` state.\\nNormally open (NO) relays close the circuit when activated.","fields":[],"identifierName":"active"},{"kind":"event","name":"inactive","identifier":2,"description":"Emitted when relay goes from `active` to `inactive` state.\\nNormally closed (NC) relays open the circuit when activated.","fields":[],"identifierName":"inactive"}],"tags":["8bit"]},{"name":"Random Number Generator","status":"experimental","shortId":"rng","camelName":"rng","shortName":"rng","extends":["_base"],"notes":{"short":"Generates random numbers using entropy sourced from physical processes.\\n\\nThis typically uses a cryptographical pseudo-random number generator (for example [Fortuna](https://en.wikipedia.org/wiki/Fortuna_(PRNG))),\\nwhich is periodically re-seeded with entropy coming from some hardware source."},"classIdentifier":394916002,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Quantum":1,"ADCNoise":2,"WebCrypto":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"ro","name":"random","identifier":384,"description":"A register that returns a 64 bytes random buffer on every request.\\nThis never blocks for a long time. If you need additional random bytes, keep querying the register.","fields":[{"name":"_","type":"bytes","storage":0,"isSimpleType":true}],"volatile":true,"packFormat":"b"},{"kind":"const","name":"variant","identifier":263,"description":"The type of algorithm/technique used to generate the number.\\n`Quantum` refers to dedicated hardware device generating random noise due to quantum effects.\\n`ADCNoise` is the noise from quick readings of analog-digital converter, which reads temperature of the MCU or some floating pin.\\n`WebCrypto` refers is used in simulators, where the source of randomness comes from an advanced operating system.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":[]},{"name":"Role Manager","status":"experimental","shortId":"rolemanager","camelName":"roleManager","shortName":"roleManager","extends":["_base"],"notes":{"short":"Assign roles to services on the Jacdac bus.\\n\\nInternally, the role manager stores a mapping from `(device_id, service_idx)` to role name.\\nUsers refer to services by using role names (eg., they instantiate an accelerometer client with a given role name).\\nEach client has a role, and roles are unique to clients\\n(ie., one should not have both a gyro and accelerometer service with role `left_leg`).\\n\\nRole names can be hierarchical, using slash character as a separator.\\nExamples: `left_leg/acc`, `left_leg/gyro`, `right_leg/acc`.\\nIf two roles share the prefix before first slash, it should be used as a hint that the services\\nshould be co-located on a single device\\n(eg., here the `left_leg` \\"location\\" is expected to have both an accelerometer and a gyro service on a single device)."},"classIdentifier":508264038,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"auto_bind","identifier":128,"description":"Normally, if some roles are unfilled, and there are idle services that can fulfill them,\\nthe brain device will assign roles (bind) automatically.\\nSuch automatic assignment happens every second or so, and is trying to be smart about \\nco-locating roles that share \\"host\\" (part before first slash),\\nas well as reasonably stable assignments.\\nOnce user start assigning roles manually using this service, auto-binding should be disabled to avoid confusion.","fields":[{"name":"_","type":"bool","storage":1,"defaultValue":1}],"packFormat":"u8"},{"kind":"ro","name":"all_roles_allocated","identifier":385,"description":"Indicates if all required roles have been allocated to devices.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"command","name":"get_role","identifier":128,"description":"Get the role corresponding to given device identifer. Returns empty string if unset.","fields":[{"name":"device_id","type":"devid","storage":8},{"name":"service_idx","type":"u8","storage":1,"isSimpleType":true}],"hasReport":true,"packFormat":"b[8] u8"},{"kind":"report","name":"get_role","identifier":128,"description":"Get the role corresponding to given device identifer. Returns empty string if unset.","fields":[{"name":"device_id","type":"devid","storage":8},{"name":"service_idx","type":"u8","storage":1,"isSimpleType":true},{"name":"role","type":"string","storage":0}],"secondary":true,"packFormat":"b[8] u8 s"},{"kind":"command","name":"set_role","identifier":129,"description":"Set role. Can set to empty to remove role binding.","fields":[{"name":"device_id","type":"devid","storage":8},{"name":"service_idx","type":"u8","storage":1,"isSimpleType":true},{"name":"role","type":"string","storage":0}],"packFormat":"b[8] u8 s"},{"kind":"command","name":"clear_all_roles","identifier":132,"description":"Remove all role bindings.","fields":[]},{"kind":"command","name":"list_stored_roles","identifier":130,"description":"Return all roles stored internally.","fields":[{"name":"stored_roles","type":"pipe","storage":12}],"pipeType":"list_stored_roles","packFormat":"b[12]"},{"kind":"pipe_report","name":"stored_roles","identifier":0,"description":"Return all roles stored internally.","fields":[{"name":"device_id","type":"devid","storage":8},{"name":"service_idx","type":"u8","storage":1,"isSimpleType":true},{"name":"role","type":"string","storage":0}],"pipeType":"list_stored_roles","packFormat":"b[8] u8 s"},{"kind":"command","name":"list_required_roles","identifier":131,"description":"List all roles required by the current program. `device_id` and `service_idx` are `0` if role is unbound.","fields":[{"name":"required_roles","type":"pipe","storage":12}],"pipeType":"list_required_roles","packFormat":"b[12]"},{"kind":"pipe_report","name":"required_roles","identifier":0,"description":"List all roles required by the current program. `device_id` and `service_idx` are `0` if role is unbound.","fields":[{"name":"device_id","type":"devid","storage":8},{"name":"service_class","type":"u32","storage":4,"isSimpleType":true},{"name":"service_idx","type":"u8","storage":1,"isSimpleType":true},{"name":"role","type":"string","storage":0}],"pipeType":"list_required_roles","packFormat":"b[8] u32 u8 s"},{"kind":"event","name":"change","identifier":3,"description":"Notifies that role bindings have changed.","fields":[],"identifierName":"change"}],"tags":[]},{"name":"Rotary encoder","status":"experimental","shortId":"rotaryencoder","camelName":"rotaryEncoder","shortName":"rotaryEncoder","extends":["_base","_sensor"],"notes":{"short":"An incremental rotary encoder - converts angular motion of a shaft to digital signal."},"classIdentifier":284830153,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"position","identifier":257,"description":"Upon device reset starts at `0` (regardless of the shaft position).\\nIncreases by `1` for a clockwise \\"click\\", by `-1` for counter-clockwise.","fields":[{"name":"_","unit":"#","type":"i32","storage":-4,"isSimpleType":true}],"volatile":true,"identifierName":"reading","packFormat":"i32"},{"kind":"const","name":"clicks_per_turn","identifier":384,"description":"This specifies by how much `position` changes when the crank does 360 degree turn. Typically 12 or 24.","fields":[{"name":"_","unit":"#","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"packFormat":"u16"}],"tags":["C","8bit"],"group":"Slider"},{"name":"Rover","status":"experimental","shortId":"rover","camelName":"rover","shortName":"rover","extends":["_base","_sensor"],"notes":{"short":"A roving robot."},"classIdentifier":435474539,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"kinematics","identifier":257,"description":"The current position and orientation of the robot.","fields":[{"name":"x","unit":"cm","shift":16,"type":"i16.16","storage":-4},{"name":"y","unit":"cm","shift":16,"type":"i16.16","storage":-4},{"name":"vx","unit":"cm/s","shift":16,"type":"i16.16","storage":-4},{"name":"vy","unit":"cm/s","shift":16,"type":"i16.16","storage":-4},{"name":"heading","unit":"°","shift":16,"type":"i16.16","storage":-4}],"volatile":true,"identifierName":"reading","packFormat":"i16.16 i16.16 i16.16 i16.16 i16.16"}],"tags":[]},{"name":"Sensor Aggregator","status":"experimental","shortId":"sensoraggregator","camelName":"sensorAggregator","shortName":"sensorAggregator","extends":["_base"],"notes":{"short":"Aggregate data from multiple sensors into a single stream\\n(often used as input to machine learning models on the same device, see model runner service)."},"classIdentifier":496034245,"enums":{"SampleType":{"name":"SampleType","storage":1,"members":{"U8":8,"I8":136,"U16":16,"I16":144,"U32":32,"I32":160}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"inputs","identifier":128,"description":"Set automatic input collection.\\nThese settings are stored in flash.","fields":[{"name":"sampling_interval","unit":"ms","type":"u16","storage":2,"isSimpleType":true},{"name":"samples_in_window","type":"u16","storage":2,"isSimpleType":true},{"name":"reserved","type":"u32","storage":4,"isSimpleType":true},{"name":"device_id","type":"devid","storage":8,"startRepeats":true},{"name":"service_class","type":"u32","storage":4,"isSimpleType":true},{"name":"service_num","type":"u8","storage":1,"isSimpleType":true},{"name":"sample_size","unit":"B","type":"u8","storage":1,"isSimpleType":true},{"name":"sample_type","type":"SampleType","storage":1},{"name":"sample_shift","type":"i8","storage":-1,"isSimpleType":true}],"packFormat":"u16 u16 u32 r: b[8] u32 u8 u8 u8 i8"},{"kind":"ro","name":"num_samples","identifier":384,"description":"Number of input samples collected so far.","fields":[{"name":"_","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"sample_size","identifier":385,"description":"Size of a single sample.","fields":[{"name":"_","unit":"B","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"rw","name":"streaming_samples","identifier":129,"description":"When set to `N`, will stream `N` samples as `current_sample` reading.","fields":[{"name":"_","unit":"#","type":"u32","storage":4,"isSimpleType":true}],"packFormat":"u32"},{"kind":"ro","name":"current_sample","identifier":257,"description":"Last collected sample.","fields":[{"name":"_","type":"bytes","storage":0,"isSimpleType":true}],"volatile":true,"identifierName":"reading","packFormat":"b"}],"tags":[]},{"name":"Servo","status":"experimental","shortId":"servo","camelName":"servo","shortName":"servo","extends":["_base"],"notes":{"short":"Servo is a small motor with arm that can be pointing at a specific direction.\\n\\nThe `min/max_angle/pulse` may be read-only if the servo is permanently affixed to its Jacdac controller."},"classIdentifier":318542083,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"angle","identifier":2,"description":"Specifies the angle of the arm (request).","fields":[{"name":"_","unit":"°","shift":16,"type":"i16.16","storage":-4,"typicalMin":-90,"typicalMax":90}],"identifierName":"value","packFormat":"i16.16"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turn the power to the servo on/off.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"offset","identifier":129,"description":"Correction applied to the angle to account for the servo arm drift.","fields":[{"name":"_","unit":"°","shift":16,"type":"i16.16","storage":-4}],"packFormat":"i16.16"},{"kind":"const","name":"min_angle","identifier":272,"description":"Lowest angle that can be set.","fields":[{"name":"_","unit":"°","shift":16,"type":"i16.16","storage":-4,"defaultValue":-90}],"identifierName":"min_value","packFormat":"i16.16"},{"kind":"rw","name":"min_pulse","identifier":131,"description":"The length of pulse corresponding to lowest angle.","fields":[{"name":"_","unit":"us","type":"u16","storage":2,"isSimpleType":true,"defaultValue":500}],"packFormat":"u16"},{"kind":"const","name":"max_angle","identifier":273,"description":"Highest angle that can be set.","fields":[{"name":"_","unit":"°","shift":16,"type":"i16.16","storage":-4,"defaultValue":90}],"identifierName":"max_value","packFormat":"i16.16"},{"kind":"rw","name":"max_pulse","identifier":133,"description":"The length of pulse corresponding to highest angle.","fields":[{"name":"_","unit":"us","type":"u16","storage":2,"isSimpleType":true,"defaultValue":2500}],"packFormat":"u16"},{"kind":"const","name":"stall_torque","identifier":384,"description":"The servo motor will stop rotating when it is trying to move a ``stall_torque`` weight at a radial distance of ``1.0`` cm.","fields":[{"name":"_","unit":"kg/cm","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"const","name":"response_speed","identifier":385,"description":"Time to move 60°.","fields":[{"name":"_","unit":"s/60°","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"ro","name":"current_angle","identifier":257,"description":"The current physical position of the arm.","fields":[{"name":"_","unit":"°","shift":16,"type":"i16.16","storage":-4}],"volatile":true,"optional":true,"identifierName":"reading","packFormat":"i16.16"}],"tags":["C"]},{"name":"Settings","status":"experimental","shortId":"settings","camelName":"settings","shortName":"settings","extends":["_base"],"notes":{"short":"Non-volatile key-value storage interface for storing settings.","long":"## Secrets\\n\\nEntries with keys starting with `$` are considered secret.\\nThey can be written normally, but they read as a single `0` byte,\\nunless they are empty, in which case the value returned is also empty.\\nThese are typically used by other services on the same device."},"classIdentifier":285727818,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"get","identifier":128,"description":"Get the value of given setting. If no such entry exists, the value returned is empty.","fields":[{"name":"key","type":"string","storage":0}],"hasReport":true,"packFormat":"s"},{"kind":"report","name":"get","identifier":128,"description":"Get the value of given setting. If no such entry exists, the value returned is empty.","fields":[{"name":"key","type":"string0","storage":0},{"name":"value","type":"bytes","storage":0,"isSimpleType":true}],"secondary":true,"packFormat":"z b"},{"kind":"command","name":"set","identifier":129,"description":"Set the value of a given setting.","fields":[{"name":"key","type":"string0","storage":0},{"name":"value","type":"bytes","storage":0,"isSimpleType":true}],"restricted":true,"packFormat":"z b"},{"kind":"command","name":"delete","identifier":132,"description":"Delete a given setting.","fields":[{"name":"key","type":"string","storage":0}],"restricted":true,"packFormat":"s"},{"kind":"command","name":"list_keys","identifier":130,"description":"Return keys of all settings.","fields":[{"name":"results","type":"pipe","storage":12}],"pipeType":"list_keys","packFormat":"b[12]"},{"kind":"pipe_report","name":"listed_key","identifier":0,"description":"Return keys of all settings.","fields":[{"name":"key","type":"string","storage":0}],"pipeType":"list_keys","packFormat":"s"},{"kind":"command","name":"list","identifier":131,"description":"Return keys and values of all settings.","fields":[{"name":"results","type":"pipe","storage":12}],"pipeType":"list","packFormat":"b[12]"},{"kind":"pipe_report","name":"listed_entry","identifier":0,"description":"Return keys and values of all settings.","fields":[{"name":"key","type":"string0","storage":0},{"name":"value","type":"bytes","storage":0,"isSimpleType":true}],"pipeType":"list","packFormat":"z b"},{"kind":"command","name":"clear","identifier":133,"description":"Clears all keys.","fields":[],"restricted":true},{"kind":"event","name":"change","identifier":3,"description":"Notifies that some setting have been modified.","fields":[],"identifierName":"change"}],"tags":[]},{"name":"7-segment display","status":"experimental","shortId":"sevensegmentdisplay","camelName":"sevenSegmentDisplay","shortName":"sevenSegmentDisplay","extends":["_base"],"notes":{"short":"A 7-segment numeric display, with one or more digits."},"classIdentifier":425810167,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"digits","identifier":2,"description":"Each byte encodes the display status of a digit using, \\nwhere bit 0 encodes segment `A`, bit 1 encodes segments `B`, ..., bit 6 encodes segments `G`, and bit 7 encodes the decimal point (if present).\\nIf incoming ``digits`` data is smaller than `digit_count`, the remaining digits will be cleared.\\nThus, sending an empty ``digits`` payload clears the screen.\\n\\n```text\\n - A -\\n G   B\\n |   |\\n - F -\\n |   |   -\\n E   C  |DP|\\n - D -   -\\n```","fields":[{"name":"_","encoding":"bitset","type":"bytes","storage":0,"isSimpleType":true}],"lowLevel":true,"identifierName":"value","packFormat":"b"},{"kind":"rw","name":"brightness","identifier":1,"description":"Controls the brightness of the LEDs. ``0`` means off.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"intensity","packFormat":"u0.16"},{"kind":"rw","name":"double_dots","identifier":128,"description":"Turn on or off the column LEDs (separating minutes from hours, etc.) in of the segment.\\nIf the column LEDs is not supported, the value remains false.","fields":[{"name":"_","type":"bool","storage":1}],"optional":true,"packFormat":"u8"},{"kind":"const","name":"digit_count","identifier":384,"description":"The number of digits available on the display.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true}],"packFormat":"u8"},{"kind":"const","name":"decimal_point","identifier":385,"description":"True if decimal points are available (on all digits).","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"command","name":"set_number","identifier":128,"description":"Shows the number on the screen using the decimal dot if available.","fields":[{"name":"value","isFloat":true,"type":"f64","storage":8}],"client":true,"packFormat":"f64"},{"kind":"command","name":"set_text","identifier":129,"description":"Shows the text on the screen. The client may decide to scroll the text if too long.","fields":[{"name":"text","type":"string","storage":0}],"client":true,"packFormat":"s"}],"tags":["8bit"],"group":"Display"},{"name":"Soil moisture","status":"experimental","shortId":"soilmoisture","camelName":"soilMoisture","shortName":"soilMoisture","extends":["_base","_sensor"],"notes":{"short":"A soil moisture sensor."},"classIdentifier":491430835,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Resistive":1,"Capacitive":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"moisture","identifier":257,"description":"Indicates the wetness of the soil, from ``dry`` to ``wet``.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u0.16"},{"kind":"ro","name":"moisture_error","identifier":262,"description":"The error on the moisture reading.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"Describe the type of physical sensor.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"],"group":"Environment"},{"name":"Solenoid","status":"experimental","shortId":"solenoid","camelName":"solenoid","shortName":"solenoid","extends":["_base"],"notes":{"short":"A push-pull solenoid is a type of relay that pulls a coil when activated."},"classIdentifier":387392458,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"PushPull":1,"Valve":2,"Latch":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"pulled","identifier":1,"description":"Indicates whether the solenoid is energized and pulled (on) or pushed (off).","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"const","name":"variant","identifier":263,"description":"Describes the type of solenoid used.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"]},{"name":"Sound level","status":"experimental","shortId":"soundlevel","camelName":"soundLevel","shortName":"soundLevel","extends":["_base","_sensor"],"notes":{"short":"A sound level detector sensor, gives a relative indication of the sound level."},"classIdentifier":346888797,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"sound_level","identifier":257,"description":"The sound level detected by the microphone","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turn on or off the microphone.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"min_decibels","identifier":129,"description":"The minimum power value considered by the sensor.\\nIf both ``min_decibels`` and ``max_decibels`` are supported,\\nthe volume in deciment can be linearly interpolated between\\n``[min_decibels, max_decibels]``.","fields":[{"name":"_","unit":"dB","type":"i16","storage":-2,"isSimpleType":true}],"optional":true,"packFormat":"i16"},{"kind":"rw","name":"max_decibels","identifier":130,"description":"The maximum power value considered by the sensor.\\nIf both ``min_decibels`` and ``max_decibels`` are supported,\\nthe volume in deciment can be linearly interpolated between\\n``[min_decibels, max_decibels]``.","fields":[{"name":"_","unit":"dB","type":"i16","storage":-2,"isSimpleType":true}],"optional":true,"packFormat":"i16"},{"kind":"rw","name":"loud_threshold","identifier":6,"description":"The sound level to trigger a loud event.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"active_threshold","packFormat":"u0.16"},{"kind":"rw","name":"quiet_threshold","identifier":5,"description":"The sound level to trigger a quiet event.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"inactive_threshold","packFormat":"u0.16"},{"kind":"event","name":"loud","identifier":1,"description":"Raised when a loud sound is detected","fields":[],"identifierName":"active"},{"kind":"event","name":"quiet","identifier":2,"description":"Raised when a period of quietness is detected","fields":[],"identifierName":"inactive"}],"tags":["8bit"],"group":"Sound"},{"name":"Sound player","status":"experimental","shortId":"soundplayer","camelName":"soundPlayer","shortName":"soundPlayer","extends":["_base"],"notes":{"short":"A device that can play various sounds stored locally. This service is typically paired with a ``storage`` service for storing sounds."},"classIdentifier":335795000,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"volume","identifier":1,"description":"Global volume of the output. ``0`` means completely off. This volume is mixed with each play volumes.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"identifierName":"intensity","packFormat":"u0.16"},{"kind":"command","name":"play","identifier":128,"description":"Starts playing a sound.","fields":[{"name":"name","type":"string","storage":0}],"packFormat":"s"},{"kind":"command","name":"list_sounds","identifier":129,"description":"Returns the list of sounds available to play.","fields":[{"name":"sounds_port","type":"pipe","storage":12}],"pipeType":"list_sounds","packFormat":"b[12]"},{"kind":"pipe_report","name":"list_sounds_pipe","identifier":0,"description":"Returns the list of sounds available to play.","fields":[{"name":"duration","unit":"ms","type":"u32","storage":4,"isSimpleType":true},{"name":"name","type":"string","storage":0}],"pipeType":"list_sounds","packFormat":"u32 s"}],"tags":[],"group":"Sound"},{"name":"Sound Spectrum","status":"experimental","shortId":"soundspectrum","camelName":"soundSpectrum","shortName":"soundSpectrum","extends":["_base","_sensor"],"notes":{"short":"A microphone that analyzes the sound specturm"},"classIdentifier":360365086,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"frequency_bins","identifier":257,"description":"The computed frequency data.","fields":[{"name":"_","type":"bytes","storage":0,"isSimpleType":true}],"volatile":true,"identifierName":"reading","packFormat":"b"},{"kind":"rw","name":"enabled","identifier":1,"description":"Turns on/off the micropohone.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"fft_pow2_size","identifier":128,"description":"The power of 2 used as the size of the FFT to be used to determine the frequency domain.","fields":[{"name":"_","type":"u8","storage":1,"isSimpleType":true,"defaultValue":5,"absoluteMin":2,"absoluteMax":7}],"packFormat":"u8"},{"kind":"rw","name":"min_decibels","identifier":129,"description":"The minimum power value in the scaling range for the FFT analysis data","fields":[{"name":"_","unit":"dB","type":"i16","storage":-2,"isSimpleType":true}],"packFormat":"i16"},{"kind":"rw","name":"max_decibels","identifier":130,"description":"The maximum power value in the scaling range for the FFT analysis data","fields":[{"name":"_","unit":"dB","type":"i16","storage":-2,"isSimpleType":true}],"packFormat":"i16"},{"kind":"rw","name":"smoothing_time_constant","identifier":131,"description":"The averaging constant with the last analysis frame. \\nIf ``0`` is set, there is no averaging done, whereas a value of ``1`` means \\"overlap the previous and current buffer quite a lot while computing the value\\".","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1,"defaultValue":0.8}],"packFormat":"u0.8"}],"tags":[],"group":"Sound"},{"name":"Speech synthesis","status":"experimental","shortId":"speechsynthesis","camelName":"speechSynthesis","shortName":"speechSynthesis","extends":["_base"],"notes":{"short":"A speech synthesizer"},"classIdentifier":302307733,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Determines if the speech engine is in a non-paused state.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"rw","name":"lang","identifier":128,"description":"Language used for utterances as defined in https://www.ietf.org/rfc/bcp/bcp47.txt.","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"packFormat":"s"},{"kind":"rw","name":"volume","identifier":129,"description":"Volume for utterances.","fields":[{"name":"_","unit":"/","shift":8,"type":"u0.8","storage":1,"defaultValue":1}],"optional":true,"packFormat":"u0.8"},{"kind":"rw","name":"pitch","identifier":130,"description":"Pitch for utterances","fields":[{"name":"_","shift":16,"type":"u16.16","storage":4,"defaultValue":1,"absoluteMax":2,"absoluteMin":0}],"optional":true,"packFormat":"u16.16"},{"kind":"rw","name":"rate","identifier":131,"description":"Rate for utterances","fields":[{"name":"_","shift":16,"type":"u16.16","storage":4,"defaultValue":1,"absoluteMin":0.1,"absoluteMax":10}],"optional":true,"packFormat":"u16.16"},{"kind":"command","name":"speak","identifier":128,"description":"Adds an utterance to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.","fields":[{"name":"text","type":"string","storage":0}],"unique":true,"packFormat":"s"},{"kind":"command","name":"cancel","identifier":129,"description":"Cancels current utterance and all utterances from the utterance queue.","fields":[]}],"tags":[]},{"name":"Switch","status":"experimental","shortId":"switch","camelName":"switch","shortName":"switch","extends":["_base","_sensor"],"notes":{"short":"A switch, which keeps its position."},"classIdentifier":450008066,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Slide":1,"Tilt":2,"PushButton":3,"Tactile":4,"Toggle":5,"Proximity":6,"Magnetic":7,"FootPedal":8}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"active","identifier":257,"description":"Indicates whether the switch is currently active (on).","fields":[{"name":"_","type":"bool","storage":1}],"volatile":true,"identifierName":"reading","packFormat":"u8"},{"kind":"const","name":"variant","identifier":263,"description":"Describes the type of switch used.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"const","name":"auto_off_delay","identifier":384,"description":"Specifies the delay without activity to automatically turn off after turning on.\\nFor example, some light switches in staircases have such a capability.","fields":[{"name":"_","unit":"s","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"event","name":"on","identifier":1,"description":"Emitted when switch goes from ``off`` to ``on``.","fields":[],"identifierName":"active"},{"kind":"event","name":"off","identifier":2,"description":"Emitted when switch goes from ``on`` to ``off``.","fields":[],"identifierName":"inactive"}],"tags":["8bit"],"group":"Button"},{"name":"TCP","status":"experimental","shortId":"tcp","camelName":"tcp","shortName":"tcp","extends":["_base"],"notes":{"short":"Data transfer over TCP/IP and TLS stream sockets.","commands":"## Pipes"},"classIdentifier":457422603,"enums":{"TcpError":{"name":"TcpError","storage":-4,"members":{"InvalidCommand":1,"InvalidCommandPayload":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"open","identifier":128,"description":"Open pair of pipes between network peripheral and a controlling device. In/outbound refers to direction from/to internet.","fields":[{"name":"inbound","type":"pipe","storage":12}],"pipeType":"open","hasReport":true,"packFormat":"b[12]"},{"kind":"report","name":"open","identifier":128,"description":"Open pair of pipes between network peripheral and a controlling device. In/outbound refers to direction from/to internet.","fields":[{"name":"outbound_port","type":"pipe_port","storage":2}],"secondary":true,"pipeType":"open","packFormat":"u16"},{"kind":"meta_pipe_command","name":"open_ssl","identifier":1,"description":"Open an SSL connection to a given host:port pair. Can be issued only once on given pipe.\\nAfter the connection is established, an empty data report is sent.\\nConnection is closed by closing the pipe.","fields":[{"name":"tcp_port","type":"u16","storage":2,"isSimpleType":true},{"name":"hostname","type":"string","storage":0}],"pipeType":"open","packFormat":"u16 s"},{"kind":"pipe_command","name":"outdata","identifier":0,"description":"Bytes to be sent directly over an established TCP or SSL connection.","fields":[{"name":"data","type":"bytes","storage":0,"isSimpleType":true}],"pipeType":"open","packFormat":"b"},{"kind":"pipe_report","name":"indata","identifier":0,"description":"Bytes read directly from directly over an established TCP or SSL connection.","fields":[{"name":"data","type":"bytes","storage":0,"isSimpleType":true}],"pipeType":"open","packFormat":"b"},{"kind":"meta_pipe_report","name":"error","identifier":0,"description":"Reported when an error is encountered. Negative error codes come directly from the SSL implementation.","fields":[{"name":"error","type":"TcpError","storage":-4}],"pipeType":"open","packFormat":"i32"}],"tags":[]},{"name":"Thermocouple","status":"experimental","shortId":"thermocouple","camelName":"thermocouple","shortName":"thermocouple","extends":["_base","_sensor"],"notes":{"short":"A thermocouple using a heat probe to gather temperatures."},"classIdentifier":339394657,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"TypeK":1,"TypeJ":2,"TypeT":3,"TypeE":4,"TypeN":5,"TypeS":6,"TypeR":7,"TypeB":8}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"temperature","identifier":257,"description":"The temperature.","fields":[{"name":"_","unit":"°C","shift":10,"type":"i22.10","storage":-4}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"i22.10"},{"kind":"const","name":"min_temperature","identifier":260,"description":"Lowest temperature that can be reported.","fields":[{"name":"_","unit":"°C","shift":10,"type":"i22.10","storage":-4}],"identifierName":"min_reading","packFormat":"i22.10"},{"kind":"const","name":"max_temperature","identifier":261,"description":"Highest temperature that can be reported.","fields":[{"name":"_","unit":"°C","shift":10,"type":"i22.10","storage":-4}],"identifierName":"max_reading","packFormat":"i22.10"},{"kind":"ro","name":"temperature_error","identifier":262,"description":"The real temperature is between `temperature - temperature_error` and `temperature + temperature_error`.","fields":[{"name":"_","unit":"°C","shift":10,"type":"u22.10","storage":4}],"volatile":true,"identifierName":"reading_error","packFormat":"u22.10"},{"kind":"const","name":"variant","identifier":263,"description":"Specifies the type of thermometer.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"],"group":"Environment"},{"name":"Thermometer","status":"experimental","shortId":"thermometer","camelName":"thermometer","shortName":"thermometer","extends":["_base","_sensor"],"notes":{"short":"A thermometer measuring outside or inside environment."},"classIdentifier":337754823,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Outdoor":1,"Indoor":2,"Body":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"temperature","identifier":257,"description":"The temperature.","fields":[{"name":"_","unit":"°C","shift":10,"type":"i22.10","storage":-4}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"i22.10"},{"kind":"const","name":"min_temperature","identifier":260,"description":"Lowest temperature that can be reported.","fields":[{"name":"_","unit":"°C","shift":10,"type":"i22.10","storage":-4}],"identifierName":"min_reading","packFormat":"i22.10"},{"kind":"const","name":"max_temperature","identifier":261,"description":"Highest temperature that can be reported.","fields":[{"name":"_","unit":"°C","shift":10,"type":"i22.10","storage":-4}],"identifierName":"max_reading","packFormat":"i22.10"},{"kind":"ro","name":"temperature_error","identifier":262,"description":"The real temperature is between `temperature - temperature_error` and `temperature + temperature_error`.","fields":[{"name":"_","unit":"°C","shift":10,"type":"u22.10","storage":4}],"volatile":true,"identifierName":"reading_error","packFormat":"u22.10"},{"kind":"const","name":"variant","identifier":263,"description":"Specifies the type of thermometer.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["C","8bit"],"group":"Environment"},{"name":"Traffic Light","status":"experimental","shortId":"trafficlight","camelName":"trafficLight","shortName":"trafficLight","extends":["_base"],"notes":{"short":"Controls a mini traffic with a red, orange and green LED."},"classIdentifier":365137307,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"red","identifier":128,"description":"The on/off state of the red light.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"rw","name":"orange","identifier":129,"description":"The on/off state of the red light.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"},{"kind":"rw","name":"green","identifier":130,"description":"The on/off state of the red light.","fields":[{"name":"_","type":"bool","storage":1}],"packFormat":"u8"}],"tags":["8bit"]},{"name":"Total Volatile organic compound","status":"experimental","shortId":"tvoc","camelName":"tvoc","shortName":"tvoc","extends":["_base","_sensor"],"notes":{"short":"Measures equivalent Total Volatile Organic Compound levels."},"classIdentifier":312849815,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"TVOC","identifier":257,"description":"Total volatile organic compound readings in parts per billion.","fields":[{"name":"_","unit":"ppb","shift":10,"type":"u22.10","storage":4,"absoluteMin":0,"typicalMax":1187,"typicalMin":0}],"volatile":true,"identifierName":"reading","packFormat":"u22.10"},{"kind":"ro","name":"TVOC_error","identifier":262,"description":"Error on the reading data","fields":[{"name":"_","unit":"ppb","shift":10,"type":"u22.10","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u22.10"},{"kind":"const","name":"min_TVOC","identifier":260,"description":"Minimum measurable value","fields":[{"name":"_","unit":"ppb","shift":10,"type":"u22.10","storage":4}],"optional":true,"identifierName":"min_reading","packFormat":"u22.10"},{"kind":"const","name":"max_TVOC","identifier":261,"description":"Minimum measurable value","fields":[{"name":"_","unit":"ppb","shift":10,"type":"u22.10","storage":4}],"optional":true,"identifierName":"max_reading","packFormat":"u22.10"},{"kind":"const","name":"conditioning_period","identifier":384,"description":"Time required to achieve good sensor stability before measuring after long idle period.","fields":[{"name":"_","unit":"s","type":"u32","storage":4,"isSimpleType":true}],"optional":true,"packFormat":"u32"}],"tags":["8bit"],"group":"Environment"},{"name":"Unique Brain","status":"experimental","shortId":"uniquebrain","camelName":"uniqueBrain","shortName":"uniqueBrain","extends":["_base"],"notes":{"short":"The presence of this service indicates that this device is a client that controls sensors and actuators.\\nIf a unique brain detects another younger unique brain (determined by reset counter in announce packets),\\nthen the older brain should switch into proxy mode."},"classIdentifier":272387813,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"}],"tags":["infrastructure"]},{"name":"UV index","status":"experimental","shortId":"uvindex","camelName":"uvIndex","shortName":"uvIndex","extends":["_base","_sensor"],"notes":{"short":"The UV Index is a measure of the intensity of ultraviolet (UV) rays from the Sun."},"classIdentifier":527306128,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"UVA_UVB":1,"Visible_IR":2}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"uv_index","identifier":257,"description":"Ultraviolet index, typically refreshed every second.","fields":[{"name":"_","unit":"uv","shift":16,"type":"u16.16","storage":4,"typicalMax":11,"typicalMin":0}],"volatile":true,"identifierName":"reading","packFormat":"u16.16"},{"kind":"ro","name":"uv_index_error","identifier":262,"description":"Error on the UV measure.","fields":[{"name":"_","unit":"uv","shift":16,"type":"u16.16","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u16.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical sensor and capabilities.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"],"group":"Environment"},{"name":"Verified Telemetry","status":"experimental","shortId":"verifiedtelemetrysensor","camelName":"verifiedTelemetry","shortName":"verifiedTelemetry","extends":["_base"],"notes":{"short":"A mixin service that exposes verified telemetry information for a sensor (see https://github.com/Azure/Verified-Telemetry/tree/main/PnPModel)."},"classIdentifier":563381279,"enums":{"Status":{"name":"Status","storage":1,"members":{"Unknown":0,"Working":1,"Faulty":2}},"FingerprintType":{"name":"FingerprintType","storage":1,"members":{"FallCurve":1,"CurrentSense":2,"Custom":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"ro","name":"telemetry_status","identifier":384,"description":"Reads the telemetry working status, where ``true`` is working and ``false`` is faulty.","fields":[{"name":"_","type":"Status","storage":1}],"packFormat":"u8"},{"kind":"rw","name":"telemetry_status_interval","identifier":128,"description":"Specifies the interval between computing the fingerprint information.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"optional":true,"packFormat":"u32"},{"kind":"const","name":"fingerprint_type","identifier":385,"description":"Type of the fingerprint.","fields":[{"name":"_","type":"FingerprintType","storage":1}],"packFormat":"u8"},{"kind":"ro","name":"fingerprint_template","identifier":386,"description":"Template Fingerprint information of a working sensor.","fields":[{"name":"confidence","unit":"%","type":"u16","storage":2,"isSimpleType":true},{"name":"template","type":"bytes","storage":0,"isSimpleType":true}],"packFormat":"u16 b"},{"kind":"command","name":"reset_fingerprint_template","identifier":128,"description":"This command will clear the template fingerprint of a sensor and collect a new template fingerprint of the attached sensor.","fields":[]},{"kind":"command","name":"retrain_fingerprint_template","identifier":129,"description":"This command will append a new template fingerprint to the `fingerprintTemplate`. Appending more fingerprints will increase the accuracy in detecting the telemetry status.","fields":[],"unique":true},{"kind":"event","name":"telemetry_status_change","identifier":3,"description":"The telemetry status of the device was updated.","fields":[{"name":"telemetry_status","type":"Status","storage":1}],"identifierName":"change","packFormat":"u8"},{"kind":"event","name":"fingerprint_template_change","identifier":128,"description":"The fingerprint template was updated","fields":[]}],"tags":[]},{"name":"Vibration motor","status":"experimental","shortId":"vibration","camelName":"vibrationMotor","shortName":"vibrationMotor","extends":["_base"],"notes":{"short":"A vibration motor."},"classIdentifier":406832290,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"enabled","identifier":1,"description":"Determines if the vibration motor responds to vibrate commands.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"command","name":"vibrate","identifier":128,"description":"Starts a sequence of vibration and pauses. To stop any existing vibration, send an empty payload.","fields":[{"name":"duration","unit":"8ms","type":"u8","storage":1,"isSimpleType":true,"startRepeats":true},{"name":"speed","unit":"/","shift":8,"type":"u0.8","storage":1}],"packFormat":"r: u8 u0.8"}],"tags":[]},{"name":"Water level","status":"experimental","shortId":"waterlevel","camelName":"waterLevel","shortName":"waterLevel","extends":["_base","_sensor"],"notes":{"short":"A sensor that measures liquid/water level."},"classIdentifier":343630573,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Resistive":1,"ContactPhotoElectric":2,"NonContactPhotoElectric":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"level","identifier":257,"description":"The reported water level.","fields":[{"name":"_","unit":"/","shift":16,"type":"u0.16","storage":2}],"volatile":true,"identifierName":"reading","packFormat":"u0.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical sensor.","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"}],"tags":["8bit"]},{"name":"Weight Scale","status":"experimental","shortId":"weightscale","camelName":"weightScale","shortName":"weightScale","extends":["_base","_sensor"],"notes":{"short":"A weight measuring sensor."},"classIdentifier":525160512,"enums":{"Variant":{"name":"Variant","storage":1,"members":{"Body":1,"Food":2,"Jewelry":3}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"weight","identifier":257,"description":"The reported weight.","fields":[{"name":"_","unit":"kg","shift":16,"type":"u16.16","storage":4}],"volatile":true,"identifierName":"reading","packFormat":"u16.16"},{"kind":"ro","name":"weight_error","identifier":262,"description":"The estimate error on the reported reading.","fields":[{"name":"_","unit":"kg","shift":16,"type":"u16.16","storage":4}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u16.16"},{"kind":"rw","name":"zero_offset","identifier":128,"description":"Calibrated zero offset error on the scale, i.e. the measured weight when nothing is on the scale.\\nYou do not need to subtract that from the reading, it has already been done.","fields":[{"name":"_","unit":"kg","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"rw","name":"gain","identifier":129,"description":"Calibrated gain on the weight scale error.","fields":[{"name":"_","shift":16,"type":"u16.16","storage":4}],"optional":true,"packFormat":"u16.16"},{"kind":"const","name":"max_weight","identifier":261,"description":"Maximum supported weight on the scale.","fields":[{"name":"_","unit":"kg","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"max_reading","packFormat":"u16.16"},{"kind":"const","name":"min_weight","identifier":260,"description":"Minimum recommend weight on the scale.","fields":[{"name":"_","unit":"kg","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"min_reading","packFormat":"u16.16"},{"kind":"const","name":"weight_resolution","identifier":264,"description":"Smallest, yet distinguishable change in reading.","fields":[{"name":"_","unit":"kg","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"reading_resolution","packFormat":"u16.16"},{"kind":"const","name":"variant","identifier":263,"description":"The type of physical scale","fields":[{"name":"_","type":"Variant","storage":1}],"optional":true,"identifierName":"variant","packFormat":"u8"},{"kind":"command","name":"calibrate_zero_offset","identifier":128,"description":"Call this command when there is nothing on the scale. If supported, the module should save the calibration data.","fields":[]},{"kind":"command","name":"calibrate_gain","identifier":129,"description":"Call this command with the weight of the thing on the scale.","fields":[{"name":"weight","unit":"g","shift":10,"type":"u22.10","storage":4}],"packFormat":"u22.10"}],"tags":["8bit"]},{"name":"WIFI","status":"experimental","shortId":"wifi","camelName":"wifi","shortName":"wifi","extends":["_base"],"notes":{"short":"Discovery and connection to WiFi networks. Separate TCP service can be used for data transfer.\\n\\nThe device controlled by this service is meant to connect automatically, once configured.\\nTo that end, it keeps a list of known WiFi networks, with priorities and passwords.\\nIt will connect to the available network with numerically highest priority,\\nbreaking ties in priority by signal strength (typically all known networks have priority of `0`).\\nIf the connection fails (due to wrong password, radio failure, or other problem)\\nan `connection_failed` event is emitted, and the device will try to connect to the next eligible network.\\nWhen networks are exhausted, the scan is performed again and the connection process restarts.\\n\\nUpdating networks (setting password, priorties, forgetting) does not trigger an automatic reconnect."},"classIdentifier":413852154,"enums":{"APFlags":{"name":"APFlags","storage":4,"isFlags":true,"members":{"HasPassword":1,"WPS":2,"HasSecondaryChannelAbove":4,"HasSecondaryChannelBelow":8,"IEEE_802_11B":256,"IEEE_802_11A":512,"IEEE_802_11G":1024,"IEEE_802_11N":2048,"IEEE_802_11AC":4096,"IEEE_802_11AX":8192,"IEEE_802_LongRange":32768}}},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"command","name":"last_scan_results","identifier":128,"description":"Return list of WiFi network from the last scan.\\nScans are performed periodically while not connected (in particular, on startup and after current connection drops),\\nas well as upon `reconnect` and `scan` commands.","fields":[{"name":"results","type":"pipe","storage":12}],"pipeType":"last_scan_results","packFormat":"b[12]"},{"kind":"pipe_report","name":"results","identifier":0,"description":"Return list of WiFi network from the last scan.\\nScans are performed periodically while not connected (in particular, on startup and after current connection drops),\\nas well as upon `reconnect` and `scan` commands.","fields":[{"name":"flags","type":"APFlags","storage":4},{"name":"reserved","type":"u32","storage":4,"isSimpleType":true},{"name":"rssi","unit":"dB","type":"i8","storage":-1,"isSimpleType":true,"typicalMin":-100,"typicalMax":-20},{"name":"channel","type":"u8","storage":1,"isSimpleType":true,"typicalMin":1,"typicalMax":13},{"name":"bssid","type":"u8[6]","storage":6},{"name":"ssid","type":"string","storage":33,"maxBytes":33}],"pipeType":"last_scan_results","packFormat":"u32 u32 i8 u8 b[6] s[33]"},{"kind":"command","name":"add_network","identifier":129,"description":"Automatically connect to named network if available. Also set password if network is not open.","fields":[{"name":"ssid","type":"string0","storage":0},{"name":"password","type":"string0","storage":0,"isOptional":true}],"packFormat":"z z"},{"kind":"command","name":"reconnect","identifier":130,"description":"Enable the WiFi (if disabled), initiate a scan, wait for results, disconnect from current WiFi network if any,\\nand then reconnect (using regular algorithm, see `set_network_priority`).","fields":[]},{"kind":"command","name":"forget_network","identifier":131,"description":"Prevent from automatically connecting to named network in future.\\nForgetting a network resets its priority to `0`.","fields":[{"name":"ssid","type":"string","storage":0}],"packFormat":"s"},{"kind":"command","name":"forget_all_networks","identifier":132,"description":"Clear the list of known networks.","fields":[]},{"kind":"command","name":"set_network_priority","identifier":133,"description":"Set connection priority for a network.\\nBy default, all known networks have priority of `0`.","fields":[{"name":"priority","type":"i16","storage":-2,"isSimpleType":true},{"name":"ssid","type":"string","storage":0}],"packFormat":"i16 s"},{"kind":"command","name":"scan","identifier":134,"description":"Initiate search for WiFi networks. Generates `scan_complete` event.","fields":[]},{"kind":"command","name":"list_known_networks","identifier":135,"description":"Return list of known WiFi networks.\\n`flags` is currently always 0.","fields":[{"name":"results","type":"pipe","storage":12}],"pipeType":"list_known_networks","packFormat":"b[12]"},{"kind":"pipe_report","name":"network_results","identifier":0,"description":"Return list of known WiFi networks.\\n`flags` is currently always 0.","fields":[{"name":"priority","type":"i16","storage":-2,"isSimpleType":true},{"name":"flags","type":"i16","storage":-2,"isSimpleType":true},{"name":"ssid","type":"string","storage":0}],"pipeType":"list_known_networks","packFormat":"i16 i16 s"},{"kind":"rw","name":"enabled","identifier":1,"description":"Determines whether the WiFi radio is enabled. It starts enabled upon reset.","fields":[{"name":"_","type":"bool","storage":1}],"identifierName":"intensity","packFormat":"u8"},{"kind":"ro","name":"ip_address","identifier":385,"description":"0, 4 or 16 byte buffer with the IPv4 or IPv6 address assigned to device if any.","fields":[{"name":"_","type":"bytes","storage":16,"isSimpleType":true,"maxBytes":16}],"packFormat":"b[16]"},{"kind":"const","name":"eui_48","identifier":386,"description":"The 6-byte MAC address of the device. If a device does MAC address randomization it will have to \\"restart\\".","fields":[{"name":"_","type":"bytes","storage":6,"isSimpleType":true,"maxBytes":6}],"packFormat":"b[6]"},{"kind":"ro","name":"ssid","identifier":387,"description":"SSID of the access-point to which device is currently connected.\\nEmpty string if not connected.","fields":[{"name":"_","type":"string","storage":32,"maxBytes":32}],"packFormat":"s[32]"},{"kind":"ro","name":"rssi","identifier":388,"description":"Current signal strength. Returns -128 when not connected.","fields":[{"name":"_","unit":"dB","type":"i8","storage":-1,"isSimpleType":true,"typicalMin":-128,"typicalMax":-20}],"volatile":true,"packFormat":"i8"},{"kind":"event","name":"got_ip","identifier":1,"description":"Emitted upon successful join and IP address assignment.","fields":[],"identifierName":"active"},{"kind":"event","name":"lost_ip","identifier":2,"description":"Emitted when disconnected from network.","fields":[],"identifierName":"inactive"},{"kind":"event","name":"scan_complete","identifier":128,"description":"A WiFi network scan has completed. Results can be read with the `last_scan_results` command.\\nThe event indicates how many networks where found, and how many are considered\\nas candidates for connection.","fields":[{"name":"num_networks","type":"u16","storage":2,"isSimpleType":true},{"name":"num_known_networks","type":"u16","storage":2,"isSimpleType":true}],"packFormat":"u16 u16"},{"kind":"event","name":"networks_changed","identifier":129,"description":"Emitted whenever the list of known networks is updated.","fields":[]},{"kind":"event","name":"connection_failed","identifier":130,"description":"Emitted when when a network was detected in scan, the device tried to connect to it\\nand failed.\\nThis may be because of wrong password or other random failure.","fields":[{"name":"ssid","type":"string","storage":0}],"packFormat":"s"}],"tags":[],"group":"Iot"},{"name":"Wind direction","status":"experimental","shortId":"winddirection","camelName":"windDirection","shortName":"windDirection","extends":["_base","_sensor"],"notes":{"short":"A sensor that measures wind direction."},"classIdentifier":409725227,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"wind_direction","identifier":257,"description":"The direction of the wind.","fields":[{"name":"_","unit":"°","type":"u16","storage":2,"isSimpleType":true,"absoluteMin":0,"absoluteMax":359}],"volatile":true,"identifierName":"reading","preferredInterval":1000,"packFormat":"u16"},{"kind":"ro","name":"wind_direction_error","identifier":262,"description":"Error on the wind direction reading","fields":[{"name":"_","unit":"°","type":"u16","storage":2,"isSimpleType":true}],"volatile":true,"optional":true,"identifierName":"reading_error","packFormat":"u16"}],"tags":["8bit"]},{"name":"Wind speed","status":"experimental","shortId":"windspeed","camelName":"windSpeed","shortName":"windSpeed","extends":["_base","_sensor"],"notes":{"short":"A sensor that measures wind speed."},"classIdentifier":458824639,"enums":{},"constants":{},"packets":[{"kind":"report","name":"command_not_implemented","identifier":3,"description":"This report may be emitted by a server in response to a command (action or register operation)\\nthat it does not understand.\\nThe `service_command` and `packet_crc` fields are copied from the command packet that was unhandled.\\nNote that it\'s possible to get an ACK, followed by such an error report.","fields":[{"name":"service_command","type":"u16","storage":2,"isSimpleType":true},{"name":"packet_crc","type":"u16","storage":2,"isSimpleType":true}],"identifierName":"command_not_implemented","packFormat":"u16 u16","derived":"_base"},{"kind":"const","name":"instance_name","identifier":265,"description":"A friendly name that describes the role of this service instance in the device.\\nIt often corresponds to what\'s printed on the device:\\nfor example, `A` for button A, or `S0` for servo channel 0.\\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).","fields":[{"name":"_","type":"string","storage":0}],"optional":true,"identifierName":"instance_name","packFormat":"s","derived":"_base"},{"kind":"ro","name":"status_code","identifier":259,"description":"Reports the current state or error status of the device. ``code`` is a standardized value from \\nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\\nstate. This report is typically not queried, when a device has an error, it will typically\\nadd this report in frame along with the announce packet. If a service implements this register,\\nit should also support the ``status_code_changed`` event defined below.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code","packFormat":"u16 u16","derived":"_base"},{"kind":"event","name":"status_code_changed","identifier":4,"description":"Notifies that the status code of the service changed.","fields":[{"name":"code","type":"u16","storage":2,"isSimpleType":true},{"name":"vendor_code","type":"u16","storage":2,"isSimpleType":true}],"optional":true,"identifierName":"status_code_changed","packFormat":"u16 u16","derived":"_base"},{"kind":"rw","name":"streaming_samples","identifier":3,"description":"Asks device to stream a given number of samples\\n(clients will typically write `255` to this register every second or so, while streaming is required).","fields":[{"name":"_","unit":"#","type":"u8","storage":1,"isSimpleType":true}],"internal":true,"identifierName":"streaming_samples","packFormat":"u8","derived":"_sensor"},{"kind":"rw","name":"streaming_interval","identifier":4,"description":"Period between packets of data when streaming in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true,"defaultValue":100,"typicalMin":1,"typicalMax":60000}],"identifierName":"streaming_interval","packFormat":"u32","derived":"_sensor"},{"kind":"const","name":"streaming_preferred_interval","identifier":258,"description":"Preferred default streaming interval for sensor in milliseconds.","fields":[{"name":"_","unit":"ms","type":"u32","storage":4,"isSimpleType":true}],"internal":true,"optional":true,"identifierName":"streaming_preferred_interval","packFormat":"u32","derived":"_sensor"},{"kind":"ro","name":"wind_speed","identifier":257,"description":"The velocity of the wind.","fields":[{"name":"_","unit":"m/s","shift":16,"type":"u16.16","storage":4}],"volatile":true,"identifierName":"reading","preferredInterval":60000,"packFormat":"u16.16"},{"kind":"ro","name":"wind_speed_error","identifier":262,"description":"Error on the reading","fields":[{"name":"_","unit":"m/s","shift":16,"type":"u16.16","storage":4}],"volatile":true,"identifierName":"reading_error","packFormat":"u16.16"},{"kind":"const","name":"max_wind_speed","identifier":261,"description":"Maximum speed that can be measured by the sensor.","fields":[{"name":"_","unit":"m/s","shift":16,"type":"u16.16","storage":4}],"optional":true,"identifierName":"max_reading","packFormat":"u16.16"}],"tags":["8bit"]}]');
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/spec.ts
// eslint-disable-next-line @typescript-eslint/triple-slash-reference
/// <reference path="../../jacdac-spec/spectool/jdspec.d.ts" />



 // eslint-disable-next-line @typescript-eslint/no-explicit-any

var _serviceSpecifications = services_namespaceObject;
var _serviceSpecificationMap = undefined;
var _customServiceSpecifications = {};
/**
 * Override built-in service specifications
 * @param specs
 * @category Specification
 */

function loadServiceSpecifications(specs) {
  _serviceSpecifications = (specs === null || specs === void 0 ? void 0 : specs.slice(0)) || [];
  _serviceSpecificationMap = undefined;
}
/**
 * Adds a custom service specification
 * @param service
 * @category Specification
 */

function addCustomServiceSpecification(service) {
  if (service && service.classIdentifier) {
    _customServiceSpecifications[service.classIdentifier] = service;
    _serviceSpecificationMap = undefined;
  }
}
/**
 * Clears any custom service specification
 * @category Specification
 */

function clearCustomServiceSpecifications() {
  _customServiceSpecifications = {};
  _serviceSpecificationMap = undefined;
}
/**
 * Returns a map from service short ids to service specifications
 * @category Specification
 */

function serviceMap() {
  var m = {};

  _serviceSpecifications.forEach(spec => m[spec.shortId] = spec);

  return m;
}
/**
 * Returns the list of service specifications
 * @category Specification
 */

function serviceSpecifications() {
  return _serviceSpecifications.slice(0);
}
/**
 * @internal
 */

function identifierToUrlPath(id) {
  // compiled web site does not like . in path
  return id === null || id === void 0 ? void 0 : id.replace(/-/g, "/").replace(/\./g, "").toLowerCase();
}
/**
 * Checks if classIdentifier is compatible with requiredClassIdentifier
 * @category Specification
 */

function isInstanceOf(classIdentifier, requiredClassIdentifier) {
  var _classSpec$extends;

  // garbage data
  if (isNaN(classIdentifier)) return false; // direct hit

  if (classIdentifier === requiredClassIdentifier) return true; // lookup inheritance chain

  var classSpec = serviceSpecificationFromClassIdentifier(classIdentifier);
  return !!(classSpec !== null && classSpec !== void 0 && (_classSpec$extends = classSpec.extends) !== null && _classSpec$extends !== void 0 && _classSpec$extends.some(extend => {
    var extendSpec = serviceSpecificationFromName(extend);
    return !!extendSpec && isInstanceOf(extendSpec.classIdentifier, requiredClassIdentifier);
  }));
}
/**
 * Checks if the service supports the Jacdac infrastructure
 * @param spec
 * @returns
 * @category Specification
 */

function isInfrastructure(spec) {
  return spec && ([constants/* SRV_CONTROL */.gm9, constants/* SRV_ROLE_MANAGER */.igi, constants/* SRV_LOGGER */.w9j, constants/* SRV_SETTINGS */.B9b, constants/* SRV_BOOTLOADER */.PWm, constants/* SRV_PROTO_TEST */.$Bn, constants/* SRV_INFRASTRUCTURE */.QWn, constants/* SRV_PROXY */.Ahc, constants/* SRV_UNIQUE_BRAIN */.U9t, constants/* SRV_DASHBOARD */.UPj].indexOf(spec.classIdentifier) > -1 || spec.shortId[0] === "_");
}
/**
 * Looks up a service specification by name
 * @param shortId
 * @category Specification
 */

function serviceSpecificationFromName(shortId) {
  if (!shortId) return undefined;
  return _serviceSpecifications.find(s => s.shortId === shortId) || Object.values(_customServiceSpecifications).find(ser => ser.shortId === shortId);
}
/**
 * Looks up a service specification by class
 * @param classIdentifier
 * @category Specification
 */

function serviceSpecificationFromClassIdentifier(classIdentifier) {
  var _serviceSpecification;

  if (isNaN(classIdentifier)) return undefined; // try lookup cache

  var srv = (_serviceSpecification = _serviceSpecificationMap) === null || _serviceSpecification === void 0 ? void 0 : _serviceSpecification[classIdentifier];
  if (srv) return srv; // resolve

  srv = _serviceSpecifications.find(s => s.classIdentifier === classIdentifier) || _customServiceSpecifications[classIdentifier];

  if (srv) {
    if (!_serviceSpecificationMap) _serviceSpecificationMap = {};
    _serviceSpecificationMap[classIdentifier] = srv;
  }

  return srv;
}
/**
 * Indicates if the specified service is a sensor
 * @param spec
 * @returns
 * @category Specification
 */

function isSensor(spec) {
  return spec && spec.packets.some(pkt => isReading(pkt)) && spec.packets.some(pkt => pkt.identifier == constants/* SensorReg.StreamingSamples */.q9t.StreamingSamples);
}
/**
 * Indicates if the specified service is an actuator
 * @param spec
 * @returns
 * @category Specification
 */

function isActuator(spec) {
  return spec && spec.packets.some(pkt => pkt.identifier === SystemReg.Value) && spec.packets.some(pkt => pkt.identifier === SystemReg.Intensity);
}
/**
 * Indicates if the packet information is a register
 * @param spec
 * @returns
 * @category Specification
 */

function isRegister(pkt) {
  return pkt && (pkt.kind == "const" || pkt.kind == "ro" || pkt.kind == "rw");
}
/**
 * Indicates if the packet information is a ``reading`` register
 * @param spec
 * @returns
 * @category Specification
 */

function isReading(pkt) {
  return pkt && pkt.kind == "ro" && pkt.identifier == constants/* SystemReg.Reading */.ZJq.Reading;
}
var ignoredRegister = [constants/* SystemReg.StatusCode */.ZJq.StatusCode, constants/* SystemReg.InstanceName */.ZJq.InstanceName, constants/* SystemReg.StreamingInterval */.ZJq.StreamingInterval, constants/* SystemReg.StreamingPreferredInterval */.ZJq.StreamingPreferredInterval, constants/* SystemReg.StreamingSamples */.ZJq.StreamingSamples, constants/* SystemReg.ReadingError */.ZJq.ReadingError, constants/* SystemReg.ReadingResolution */.ZJq.ReadingResolution, constants/* SystemReg.MinReading */.ZJq.MinReading, constants/* SystemReg.MaxReading */.ZJq.MaxReading, constants/* SystemReg.MinValue */.ZJq.MinValue, constants/* SystemReg.MaxValue */.ZJq.MaxValue, constants/* SystemReg.MaxPower */.ZJq.MaxPower];
/**
 * Indicates if the register is usable from a high-level programming environment.
 * @category Specification
 */

function isHighLevelRegister(pkt) {
  return isRegister(pkt) && !pkt.lowLevel && !pkt.internal && ignoredRegister.indexOf(pkt.identifier) < 0;
}
var ignoredEvents = [constants/* SystemEvent.StatusCodeChanged */.nSK.StatusCodeChanged];
/**
 * Indicates if the event is usable from a high-level programming environment.
 * @category Specification
 */

function isHighLevelEvent(pkt) {
  return isEvent(pkt) && !pkt.lowLevel && !pkt.internal && ignoredEvents.indexOf(pkt.identifier) < 0;
}
/**
 * Indicate if the register code is an auxilliary register to support streaming.
 * @param code
 * @returns
 * @category Specification
 */

function isOptionalReadingRegisterCode(code) {
  var regs = [constants/* SystemReg.MinReading */.ZJq.MinReading, constants/* SystemReg.MaxReading */.ZJq.MaxReading, constants/* SystemReg.ReadingError */.ZJq.ReadingError, constants/* SystemReg.ReadingResolution */.ZJq.ReadingResolution, constants/* SystemReg.StreamingPreferredInterval */.ZJq.StreamingPreferredInterval];
  return regs.indexOf(code) > -1;
}
/**
 * Indicates if the packet info represents an ``intensity`` register
 * @category Specification
 */

function isIntensity(pkt) {
  return pkt && pkt.kind == "rw" && pkt.identifier == constants/* SystemReg.Intensity */.ZJq.Intensity;
}
/**
 * Indicates if the packet info represents a ``value`` register
 * @category Specification
 */

function isValue(pkt) {
  return pkt && pkt.kind == "rw" && pkt.identifier == constants/* SystemReg.Value */.ZJq.Value;
}
/**
 * Indicates if the packet info represents a ``intensity`` or a ``value`` register
 * @category Specification
 */

function isValueOrIntensity(pkt) {
  return pkt && pkt.kind == "rw" && (pkt.identifier == constants/* SystemReg.Value */.ZJq.Value || pkt.identifier == constants/* SystemReg.Intensity */.ZJq.Intensity);
}
/**
 * Indicates if the packet info represents an ``const`` register
 * @category Specification
 */

function isConstRegister(pkt) {
  return (pkt === null || pkt === void 0 ? void 0 : pkt.kind) == "const";
}
/**
 * Indicates if the packet info represents an ``event``
 * @category Specification
 */

function isEvent(pkt) {
  return pkt.kind == "event";
}
/**
 * Indicates if the packet info represents a ``command``
 * @category Specification
 */

function isCommand(pkt) {
  return pkt.kind == "command";
}
/**
 * Indicates if the packet info represents a ``pipe_report``
 * @category Specification
 */

function isPipeReport(pkt) {
  return pkt.kind == "pipe_report";
}
/**
 * Indicates if the `report` packet is the report specication of the `cmd` command.
 * @category Specification
 */

function isReportOf(cmd, report) {
  return report.secondary && report.kind == "report" && cmd.kind == "command" && cmd.name == report.name;
}
/**
 * Indicates if the `report` packet is the *pipe* report specication of the `cmd` command.
 * @category Specification
 */

function isPipeReportOf(cmd, pipeReport) {
  return pipeReport.kind == "pipe_report" && cmd.kind == "command" && cmd.pipeType && cmd.pipeType === pipeReport.pipeType;
}
/**
 * @internal
 */

function isIntegerType(tp) {
  return /^[ui]\d+(\.|$)/.test(tp) || tp == "pipe_port" || tp == "bool";
}
/**
 * @internal
 */

function numberFormatFromStorageType(tp) {
  switch (tp) {
    case -1:
      return buffer/* NumberFormat.Int8LE */.y4.Int8LE;

    case 1:
      return buffer/* NumberFormat.UInt8LE */.y4.UInt8LE;

    case -2:
      return buffer/* NumberFormat.Int16LE */.y4.Int16LE;

    case 2:
      return buffer/* NumberFormat.UInt16LE */.y4.UInt16LE;

    case -4:
      return buffer/* NumberFormat.Int32LE */.y4.Int32LE;

    case 4:
      return buffer/* NumberFormat.UInt32LE */.y4.UInt32LE;

    case -8:
      return buffer/* NumberFormat.Int64LE */.y4.Int64LE;

    case 8:
      return buffer/* NumberFormat.UInt64LE */.y4.UInt64LE;

    case 0:
      return null;

    default:
      return null;
  }
}
/**
 * @internal
 */

function numberFormatToStorageType(nf) {
  switch (nf) {
    case buffer/* NumberFormat.Int8LE */.y4.Int8LE:
      return -1;

    case buffer/* NumberFormat.UInt8LE */.y4.UInt8LE:
      return 1;

    case buffer/* NumberFormat.Int16LE */.y4.Int16LE:
      return -2;

    case buffer/* NumberFormat.UInt16LE */.y4.UInt16LE:
      return 2;

    case buffer/* NumberFormat.Int32LE */.y4.Int32LE:
      return -4;

    case buffer/* NumberFormat.UInt32LE */.y4.UInt32LE:
      return 4;

    case buffer/* NumberFormat.Int64LE */.y4.Int64LE:
      return -8;

    case buffer/* NumberFormat.UInt64LE */.y4.UInt64LE:
      return 8;

    default:
      return null;
  }
}
/**
 * @internal
 */

function scaleIntToFloat(v, info) {
  if (!info.shift) return v;
  if (info.shift < 0) return v * (1 << -info.shift);else return v / (1 << info.shift);
}
/**
 * @internal
 */

function scaleFloatToInt(v, info) {
  if (!info.shift) return v;
  if (info.shift < 0) return Math.round(v / (1 << -info.shift));else return Math.round(v * (1 << info.shift));
}
/**
 * @internal
 */

function storageTypeRange(tp) {
  if (tp == 0) throw new Error("no range for 0");

  if (tp < 0) {
    var v = Math.pow(2, -tp * 8 - 1);
    return [-v, v - 1];
  } else {
    var _v = Math.pow(2, tp * 8);

    return [0, _v - 1];
  }
}
/**
 * @internal
 */

function clampToStorage(v, tp) {
  var [min, max] = storageTypeRange(tp);
  if (isNaN(v)) return 0;
  if (v < min) return min;
  if (v > max) return max;
  return v;
}
/**
 * @internal
 */

function memberValueToString(value, info) {
  if (value === undefined || value === null) return "";

  switch (info.type) {
    case "bytes":
      return (0,utils/* toHex */.NC)(value);

    case "string":
      return value;

    default:
      return "" + value;
  }
}
/**
 * @internal
 */

function tryParseMemberValue(text, info) {
  if (!text) return {};
  if (info.type === "string") return {
    value: text
  };else if (info.type === "pipe") return {}; // not supported
  else if (info.type === "bytes") {
    try {
      return {
        value: (0,utils/* fromHex */.H_)(text)
      };
    } catch (e) {
      return {
        error: "invalid hexadecimal format"
      };
    }
  } else {
    var n = isIntegerType(info.type) ? parseInt(text) : parseFloat(text);
    if (isNaN(n)) return {
      error: "invalid format"
    };else return {
      value: n
    };
  }
}
/**
 * Parses a device identifier into a buffer, returns undefined if invalid
 * @param id
 * @returns
 * @category Specification
 */

function parseDeviceId(id) {
  if (!id) return undefined;
  id = id.replace(/\s/g, "");
  if (id.length != 16 || !/^[a-f0-9]+$/i.test(id)) return undefined;
  return fromHex(id);
}

/***/ }),

/***/ 61649:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "kn": function() { return /* binding */ stack; }
/* harmony export */ });
/* unused harmony exports cleanStack, serializeToTrace, Trace */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(43144);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _pretty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10913);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80303);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81794);





var TRACE_OVERSHOOT = 1.1;
/**
 * Collect stack trace at the current execution position
 * @returns
 * @internal
 */

function stack() {
  return new Error().stack;
}
/**
 * @internal
 */

function cleanStack(text) {
  return text === null || text === void 0 ? void 0 : text.split(/\n/g).slice(2).join("\n") // drop first 2 lines
  .replace(/webpack-internal:\/\/\//g, "").replace(/https:\/\/microsoft\.github\.io\/jacdac-docs/g, "");
}
function serializeToTrace(pkt, start) {
  var data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__/* .toHex */ .NC)(pkt.toBuffer()).padEnd(84, " ");
  var t = (0,_utils__WEBPACK_IMPORTED_MODULE_3__/* .roundWithPrecision */ .JI)(pkt.timestamp - start, 3);
  var descr = (0,_pretty__WEBPACK_IMPORTED_MODULE_1__/* .printPacket */ .$_)(pkt, {}).replace(/\r?\n/g, " ");
  var msg = t + "\t" + data + "\t" + descr;
  var trace = pkt.meta[_constants__WEBPACK_IMPORTED_MODULE_0__/* .META_TRACE */ .EEP];
  if (trace) msg += "\n" + cleanStack(trace);
  return msg;
}
/**
 * A sequence of packets.
 * @category Trace
 */

var Trace = /*#__PURE__*/function () {
  /**
   * Constructs a new empty trace or from an existing list of packets
   * @param packets list of packets
   * @param description description of the trace
   */
  function Trace(packets, options) {
    if (packets === void 0) {
      packets = [];
    }

    this.id = (0,_random__WEBPACK_IMPORTED_MODULE_2__/* .randomDeviceId */ .b_)();
    this.packets = packets;
    this.description = options === null || options === void 0 ? void 0 : options.description;
    this.maxLength = options === null || options === void 0 ? void 0 : options.maxLength;
  }
  /**
   * Number of packets in trace
   */


  var _proto = Trace.prototype;

  /**
   * Appends a packet to the trace
   * @param packet packet to add
   * @param maxLength If positive, prunes older packets when the length reaches maxLength
   */
  _proto.addPacket = function addPacket(packet) {
    // our event tracing may end up registering the same
    // packet twice when it is received and transmitted
    if (packet.meta[this.id]) {
      // console.trace("packet added twice", { packet })
      return;
    } // keep track of trace added


    packet.meta[this.id] = true; // packets are mutable (eg., timestamp is updated on each send), so we take a copy

    var copy = packet.clone();
    copy.sender = packet.sender;
    copy.device = packet.device; // TODO need to copy 'meta' as well?

    this.packets.push(copy); // limit trace size

    if (this.maxLength > 0 && this.packets.length > this.maxLength * TRACE_OVERSHOOT) {
      // 10% overshoot of max
      this.packets = this.packets.slice(-this.maxLength);
    }
  }
  /**
   * Gets a text-rendered view of the trace
   * @param length maximum number of elements
   * @returns text where each line is a packet
   */
  ;

  _proto.serializeToText = function serializeToText(length) {
    var _this$packets$;

    var start = ((_this$packets$ = this.packets[0]) === null || _this$packets$ === void 0 ? void 0 : _this$packets$.timestamp) || 0;
    var pkts = this.packets;
    if (length > 0) pkts = pkts.slice(-length);
    var text = pkts.map(pkt => serializeToTrace(pkt, start));

    if (this.description) {
      text.unshift(this.description);
      text.unshift("");
    }

    return text.join("\n");
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(Trace, [{
    key: "length",
    get: function get() {
      return this.packets.length;
    }
    /**
     * Duration in milliseconds between the first and last packet.
     */

  }, {
    key: "duration",
    get: function get() {
      if (!this.packets.length) return 0;
      return this.packets[this.packets.length - 1].timestamp - this.packets[0].timestamp;
    }
    /**
     * Timestamp of the first packet, defaults to 0 if trace is empty.
     */

  }, {
    key: "startTimestamp",
    get: function get() {
      var _this$packets$2;

      return ((_this$packets$2 = this.packets[0]) === null || _this$packets$2 === void 0 ? void 0 : _this$packets$2.timestamp) || 0;
    }
    /**
     * Timestamp of the last packet, defaults to 0 if trace is empty.
     */

  }, {
    key: "endTimestamp",
    get: function get() {
      var _this$packets;

      return ((_this$packets = this.packets[this.packets.length - 1]) === null || _this$packets === void 0 ? void 0 : _this$packets.timestamp) || 0;
    }
  }]);

  return Trace;
}();
/* harmony default export */ __webpack_exports__["ZP"] = (Trace);

/***/ }),

/***/ 93829:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export TracePlayer */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94578);
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47235);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);






/**
 * A player for packet traces.
 * @category Trace
 */
var TracePlayer = /*#__PURE__*/function (_JDClient) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(TracePlayer, _JDClient);

  function TracePlayer(bus, speed) {
    var _this;

    if (speed === void 0) {
      speed = 1;
    }

    _this = _JDClient.call(this) || this;
    _this._busStartTimestamp = 0;
    _this._index = 0;
    _this._lastProgressEmit = 0;
    _this.bus = bus;
    _this.speed = speed;
    _this.tick = _this.tick.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)); // always stop when unmounting

    _this.mount(() => _this.stop());

    return _this;
  }

  var _proto = TracePlayer.prototype;

  _proto.start = function start() {
    if (this._interval || !this._trace) return; // already running
    // this is the reference start time of this run

    this._busStartTimestamp = this.bus.timestamp;
    this._index = 0;
    this._interval = this.bus.scheduler.setInterval(this.tick, 50);
    this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
    this.emitProgress(true);
  };

  _proto.stop = function stop() {
    if (this._interval) {
      this.bus.scheduler.clearInterval(this._interval);
      this._interval = undefined;
      this.emitProgress(true);
      this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
    }
  };

  _proto.tick = function tick() {
    var _packets$;

    if (!this._trace) return;
    var busElapsed = this.elapsed;
    var packets = this.trace.packets;
    var packetStart = ((_packets$ = packets[0]) === null || _packets$ === void 0 ? void 0 : _packets$.timestamp) || 0;

    while (this._index < packets.length) {
      var packet = packets[this._index];
      var packetElapsed = packet.timestamp - packetStart;
      if (packetElapsed > busElapsed) break; // wait to catch up
      // clone packet and send

      var pkt = packet.clone();
      pkt.replay = true;
      pkt.timestamp = this._busStartTimestamp + packetElapsed;
      this.bus.processPacket(pkt);
      this._index++;
    } //console.log(`replay ${this._index} ${nframes} frames, ${npackets} packets`)


    this.emitProgress();
    if (this._index >= packets.length) this.stop();
  };

  _proto.emitProgress = function emitProgress(force) {
    if (force || this.bus.timestamp - this._lastProgressEmit > 250) {
      this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .PROGRESS */ .ad7, this.progress);
      this._lastProgressEmit = this.bus.timestamp;
    }
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(TracePlayer, [{
    key: "running",
    get: function get() {
      return !!this._interval;
    }
  }, {
    key: "trace",
    get: function get() {
      return this._trace;
    },
    set: function set(t) {
      if (t !== this._trace) {
        this.stop();
        this._trace = t;
        this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
      }
    }
    /**
     * Gets the adjusted timestamp
     */

  }, {
    key: "elapsed",
    get: function get() {
      return (this.bus.timestamp - this._busStartTimestamp) * this.speed;
    }
  }, {
    key: "progress",
    get: function get() {
      if (!this.trace) return 0;
      return Math.max(0, Math.min(1, this.elapsed / this.trace.duration));
    }
  }, {
    key: "length",
    get: function get() {
      var _this$trace;

      return ((_this$trace = this.trace) === null || _this$trace === void 0 ? void 0 : _this$trace.length) || 0;
    }
  }]);

  return TracePlayer;
}(_client__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);
/* harmony default export */ __webpack_exports__["Z"] = (TracePlayer);

/***/ }),

/***/ 86748:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export EventTargetObservable */
/**
 * @internal
 */
var EventTargetObservable = /*#__PURE__*/function () {
  function EventTargetObservable(element, eventName) {
    this.element = element;
    this.eventName = eventName;
  }

  var _proto = EventTargetObservable.prototype;

  _proto.subscribe = function subscribe(observer) {
    var handler = ev => !!observer.next && observer.next(ev);

    this.element.addEventListener(this.eventName, handler, false);
    return {
      unsubscribe: () => this.element.removeEventListener(this.eventName, handler)
    };
  };

  return EventTargetObservable;
}();
/* harmony default export */ __webpack_exports__["Z"] = (EventTargetObservable);

/***/ }),

/***/ 72740:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RY": function() { return /* binding */ HF2_DEVICE_MAJOR; },
/* harmony export */   "xP": function() { return /* binding */ HF2Proto; }
/* harmony export */ });
/* unused harmony exports HF2_CMD_BININFO, HF2_MODE_BOOTLOADER, HF2_MODE_USERSPACE, HF2_CMD_INFO, HF2_CMD_RESET_INTO_APP, HF2_CMD_RESET_INTO_BOOTLOADER, HF2_CMD_START_FLASH, HF2_CMD_WRITE_FLASH_PAGE, HF2_CMD_CHKSUM_PAGES, HF2_CMD_READ_WORDS, HF2_CMD_WRITE_WORDS, HF2_CMD_DMESG, HF2_FLAG_SERIAL_OUT, HF2_FLAG_SERIAL_ERR, HF2_FLAG_CMDPKT_LAST, HF2_FLAG_CMDPKT_BODY, HF2_FLAG_MASK, HF2_SIZE_MASK, HF2_STATUS_OK, HF2_STATUS_INVALID_CMD, HF2_STATUS_EXEC_ERR, HF2_STATUS_EVENT, HF2_EV_MASK, HF2_CMD_JDS_CONFIG, HF2_CMD_JDS_SEND, HF2_EV_JDS_PACKET */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15861);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81794);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52800);



 // see https://github.com/microsoft/uf2/blob/main/hf2.md for full spec

var HF2_DEVICE_MAJOR = 42;
var HF2_CMD_BININFO = 0x0001; // no arguments

var HF2_MODE_BOOTLOADER = 0x01;
var HF2_MODE_USERSPACE = 0x02;
/*
struct HF2_BININFO_Result {
    uint32_t mode;
    uint32_t flash_page_size;
    uint32_t flash_num_pages;
    uint32_t max_message_size;
};
*/

var HF2_CMD_INFO = 0x0002; // no arguments
// results is utf8 character array

var HF2_CMD_RESET_INTO_APP = 0x0003; // no arguments, no result

var HF2_CMD_RESET_INTO_BOOTLOADER = 0x0004; // no arguments, no result

var HF2_CMD_START_FLASH = 0x0005; // no arguments, no result

var HF2_CMD_WRITE_FLASH_PAGE = 0x0006;
/*
struct HF2_WRITE_FLASH_PAGE_Command {
    uint32_t target_addr;
    uint32_t data[flash_page_size];
};
*/
// no result

var HF2_CMD_CHKSUM_PAGES = 0x0007;
/*
struct HF2_CHKSUM_PAGES_Command {
    uint32_t target_addr;
    uint32_t num_pages;
};
struct HF2_CHKSUM_PAGES_Result {
    uint16_t chksums[num_pages];
};
*/

var HF2_CMD_READ_WORDS = 0x0008;
/*
struct HF2_READ_WORDS_Command {
    uint32_t target_addr;
    uint32_t num_words;
};
struct HF2_READ_WORDS_Result {
    uint32_t words[num_words];
};
*/

var HF2_CMD_WRITE_WORDS = 0x0009;
/*
struct HF2_WRITE_WORDS_Command {
    uint32_t target_addr;
    uint32_t num_words;
    uint32_t words[num_words];
};
*/
// no result

var HF2_CMD_DMESG = 0x0010; // no arguments
// results is utf8 character array

var HF2_FLAG_SERIAL_OUT = 0x80;
var HF2_FLAG_SERIAL_ERR = 0xc0;
var HF2_FLAG_CMDPKT_LAST = 0x40;
var HF2_FLAG_CMDPKT_BODY = 0x00;
var HF2_FLAG_MASK = 0xc0;
var HF2_SIZE_MASK = 63;
var HF2_STATUS_OK = 0x00;
var HF2_STATUS_INVALID_CMD = 0x01;
var HF2_STATUS_EXEC_ERR = 0x02;
var HF2_STATUS_EVENT = 0x80; // the eventId is overlayed on the tag+status; the mask corresponds
// to the HF2_STATUS_EVENT above

var HF2_EV_MASK = 0x800000;
var HF2_CMD_JDS_CONFIG = 0x0020;
var HF2_CMD_JDS_SEND = 0x0021;
var HF2_EV_JDS_PACKET = 0x800020;
var HF2Proto = /*#__PURE__*/function () {
  function HF2Proto(io) {
    this.eventHandlers = {};
    this.msgs = new _utils__WEBPACK_IMPORTED_MODULE_0__/* .PromiseBuffer */ .Dg();
    this.cmdSeq = Math.random() * 0xffff | 0;
    this.lock = new _utils__WEBPACK_IMPORTED_MODULE_0__/* .PromiseQueue */ .bo();
    this.io = io;
    var frames = [];

    io.onData = buf => {
      var tp = buf[0] & HF2_FLAG_MASK;
      var len = buf[0] & 63; //console.log(`msg tp=${tp} len=${len}`)

      var frame = new Uint8Array(len);
      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .memcpy */ .Tz)(frame, 0, buf, 1, len);

      if (tp & HF2_FLAG_SERIAL_OUT) {
        this.onSerial(frame, tp == HF2_FLAG_SERIAL_ERR);
        return;
      }

      frames.push(frame);

      if (tp == HF2_FLAG_CMDPKT_BODY) {
        return;
      } else {
        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .assert */ .hu)(tp == HF2_FLAG_CMDPKT_LAST);
        var total = 0;

        for (var f of frames) {
          total += f.length;
        }

        var r = new Uint8Array(total);
        var ptr = 0;

        for (var _f of frames) {
          (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .memcpy */ .Tz)(r, ptr, _f);
          ptr += _f.length;
        }

        frames = [];

        if (r[2] & HF2_STATUS_EVENT) {
          // asynchronous event
          this.handleEvent(r);
        } else {
          this.msgs.push(r);
        }
      }
    };
  }

  var _proto = HF2Proto.prototype;

  _proto.error = function error(m) {
    var _this$io;

    return (_this$io = this.io) === null || _this$io === void 0 ? void 0 : _this$io.error(m);
  };

  _proto.talkAsync = function talkAsync(cmd, data) {
    var _this = this;

    if (!this.io) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("hf2: rogue instance");
    var len = 8;
    if (data) len += data.length;
    var pkt = new Uint8Array(len);
    var seq = ++this.cmdSeq & 0xffff;
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write32 */ .Pg)(pkt, 0, cmd);
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write16 */ .SZ)(pkt, 4, seq);
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .write16 */ .SZ)(pkt, 6, 0);
    if (data) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .memcpy */ .Tz)(pkt, 8, data, 0, data.length);
    var numSkipped = 0;

    var handleReturnAsync = () => this.msgs.shiftAsync(_constants__WEBPACK_IMPORTED_MODULE_1__/* .HF2_TIMEOUT */ .jsd) // we wait up to a second
    .then(res => {
      if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(res, 0) != seq) {
        if (numSkipped < 3) {
          numSkipped++;
          this.io.log("message out of sync, (" + seq + " vs " + (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read16 */ .gI)(res, 0) + "); will re-try");
          return handleReturnAsync();
        }

        this.error("out of sync");
      }

      var info = "";
      if (res[3]) info = "; info=" + res[3];

      switch (res[2]) {
        case HF2_STATUS_OK:
          return res.slice(4);

        case HF2_STATUS_INVALID_CMD:
          this.error("invalid command" + info);
          break;

        case HF2_STATUS_EXEC_ERR:
          this.error("execution error" + info);
          break;

        default:
          this.error("error " + res[2] + info);
          break;
      }

      return null;
    }).catch(e => {
      console.debug("hf2 error: " + e.message + "; cmd=" + cmd);

      if (this.io) {
        var _code = (0,_error__WEBPACK_IMPORTED_MODULE_2__/* .errorCode */ .uY)(e);

        if (_code !== _constants__WEBPACK_IMPORTED_MODULE_1__/* .TIMEOUT_ERROR_CODE */ .yA$) this.error(e);
      }

      return null;
    });

    return this.lock.enqueue("talk", /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
      if (!_this.io) return null; // disconnected

      return yield _this.sendMsgAsync(pkt).then(handleReturnAsync);
    }));
  };

  _proto.sendMsgAsync = function sendMsgAsync(buf, serial) {
    if (serial === void 0) {
      serial = 0;
    }

    // Util.assert(buf.length <= this.maxMsgSize)
    var frame = new Uint8Array(64);

    var loop = pos => {
      var len = buf.length - pos;
      if (len <= 0) return Promise.resolve();

      if (len > 63) {
        len = 63;
        frame[0] = HF2_FLAG_CMDPKT_BODY;
      } else {
        frame[0] = HF2_FLAG_CMDPKT_LAST;
      }

      if (serial) frame[0] = serial == 1 ? HF2_FLAG_SERIAL_OUT : HF2_FLAG_SERIAL_ERR;
      frame[0] |= len;

      for (var i = 0; i < len; ++i) {
        frame[i + 1] = buf[pos + i];
      }

      if (!this.io) return Promise.resolve();
      return this.io.sendPacketAsync(frame).then(() => loop(pos + len));
    };

    return loop(0);
  };

  _proto.onEvent = function onEvent(id, f) {
    (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .assert */ .hu)(!!(id & HF2_EV_MASK));
    this.eventHandlers[id + ""] = f;
  };

  _proto.onJDMessage = function onJDMessage(f) {
    this.talkAsync(HF2_CMD_JDS_CONFIG, (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .encodeU32LE */ .KY)([1]));
    this.onEvent(HF2_EV_JDS_PACKET, f);
  };

  _proto.sendJDMessageAsync = function sendJDMessageAsync(buf) {
    return this.talkAsync(HF2_CMD_JDS_SEND, buf).then(() => {});
  };

  _proto.handleEvent = function handleEvent(buf) {
    var evid = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(buf, 0);
    var f = this.eventHandlers[evid + ""];

    if (f) {
      f(buf.slice(4));
    } else {
      this.io.log("unhandled event: " + evid.toString(16)); // We can get these before we're ready to recv; this is fine.
      //if (evid === 0x800020) {
      //    this.io.onError(new Error("hf2 corrupted"))
      //}
    }
  };

  _proto.onSerial = function onSerial(data, iserr) {// TODO: reenable?
    //const line = bufferToString(data).replace(/[\r\n]*$/, "")
    //const msg = `hf2: ${line}`
    //if (iserr) console.log(msg)
    //else console.debug(msg)
  };

  _proto.postConnectAsync = /*#__PURE__*/function () {
    var _postConnectAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
      yield this.checkMode();
      var buf = yield this.talkAsync(HF2_CMD_INFO);
      this.io.log("connected to " + (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .bufferToString */ .zT)(buf));
    });

    function postConnectAsync() {
      return _postConnectAsync.apply(this, arguments);
    }

    return postConnectAsync;
  }();

  _proto.checkMode = /*#__PURE__*/function () {
    var _checkMode = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
      // first check that we are not talking to a bootloader
      var info = yield this.talkAsync(HF2_CMD_BININFO);
      if (!info) (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("device disconnected");
      var mode = (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .read32 */ .Zy)(info, 0);
      this.io.log("mode " + mode);

      if (mode == HF2_MODE_USERSPACE) {
        // all good
        this.io.log("device in user-space mode");
      } else if (mode == HF2_MODE_BOOTLOADER) {
        this.io.log("device in bootloader mode, reseting into user-space mode");
        yield this.talkAsync(HF2_CMD_RESET_INTO_APP); // and fail

        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("Device in bootloader mode");
      } else {
        // unknown mdoe
        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .throwError */ ._y)("Unknown device operation mode");
      }
    });

    function checkMode() {
      return _checkMode.apply(this, arguments);
    }

    return checkMode;
  }();

  _proto.disconnectAsync = /*#__PURE__*/function () {
    var _disconnectAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
      if (this.io) {
        var _io = this.io;
        this.io = undefined;
        yield _io.disconnectAsync();
      }
    });

    function disconnectAsync() {
      return _disconnectAsync.apply(this, arguments);
    }

    return disconnectAsync;
  }();

  return HF2Proto;
}();

/***/ }),

/***/ 27591:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "em": function() { return /* binding */ ConnectionState; },
/* harmony export */   "J7": function() { return /* binding */ Transport; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94578);
/* harmony import */ var core_js_modules_es_promise_finally_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17727);
/* harmony import */ var core_js_modules_es_promise_finally_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_finally_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _eventsource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45484);
/* harmony import */ var _packet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57683);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81794);








/**
 * Connection states for transports
 * @category Transport
 */

var ConnectionState;
/**
 * General options for the transports
 * @category Transport
 */

(function (ConnectionState) {
  ConnectionState["Connected"] = "connected";
  ConnectionState["Connecting"] = "connecting";
  ConnectionState["Disconnecting"] = "disconnecting";
  ConnectionState["Disconnected"] = "disconnected";
})(ConnectionState || (ConnectionState = {}));

/**
 * A transport marshalls Jacdac packets between a physical device on the TypeScript bus.
 * @category Transport
 */
var Transport = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(Transport, _JDEventSource);

  function Transport(type, options) {
    var _options$connectObser, _options$connectObser2, _options$disconnectOb, _options$disconnectOb2;

    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.disposed = false;
    _this._connectionState = ConnectionState.Disconnected;
    _this.type = type;
    _this._checkPulse = !!(options !== null && options !== void 0 && options.checkPulse);
    _this._cleanups = [options === null || options === void 0 ? void 0 : (_options$connectObser = options.connectObservable) === null || _options$connectObser === void 0 ? void 0 : (_options$connectObser2 = _options$connectObser.subscribe({
      next: function () {
        var _next = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* () {
          var _this$bus;

          console.debug(_this.type + ": device detected");

          if ((_this$bus = _this.bus) !== null && _this$bus !== void 0 && _this$bus.disconnected) {
            var _this$bus2;

            yield (0,_utils__WEBPACK_IMPORTED_MODULE_4__/* .delay */ .gw)(_constants__WEBPACK_IMPORTED_MODULE_1__/* .TRANSPORT_CONNECT_RETRY_DELAY */ .Wdl);

            if ((_this$bus2 = _this.bus) !== null && _this$bus2 !== void 0 && _this$bus2.disconnected) {
              if (typeof document === "undefined" || // Node.js
              document.visibilityState === "visible" // or tab visible
              ) {
                _this.connect(true);
              }
            }
          }
        });

        function next() {
          return _next.apply(this, arguments);
        }

        return next;
      }()
    })) === null || _options$connectObser2 === void 0 ? void 0 : _options$connectObser2.unsubscribe, options === null || options === void 0 ? void 0 : (_options$disconnectOb = options.disconnectObservable) === null || _options$disconnectOb === void 0 ? void 0 : (_options$disconnectOb2 = _options$disconnectOb.subscribe({
      next: () => {
        _this.disconnect();
      }
    })) === null || _options$disconnectOb2 === void 0 ? void 0 : _options$disconnectOb2.unsubscribe].filter(c => !!c);
    return _this;
  }

  var _proto = Transport.prototype;

  _proto.setConnectionState = function setConnectionState(state) {
    if (this._connectionState !== state) {
      //console.debug(`${this._connectionState} -> ${state}`)
      this._connectionState = state;
      this._connectionTime = state === ConnectionState.Connected ? this.bus.timestamp : undefined;
      this._lastReceivedTime = undefined;
      this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONNECTION_STATE */ .pzj, this._connectionState);
      this.bus.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONNECTION_STATE */ .pzj, this);

      switch (this._connectionState) {
        case ConnectionState.Connected:
          this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONNECT */ .JD8);
          break;

        case ConnectionState.Connecting:
          this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONNECTING */ .BS3);
          break;

        case ConnectionState.Disconnecting:
          this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .DISCONNECTING */ .fv$);
          break;

        case ConnectionState.Disconnected:
          this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .DISCONNECT */ .PYu);
          break;
      }

      this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
      this.bus.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
    }
  };

  _proto.checkPulse = /*#__PURE__*/function () {
    var _checkPulse = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* () {
      (0,_utils__WEBPACK_IMPORTED_MODULE_4__/* .assert */ .hu)(this._checkPulse);
      if (!this.connected) return; // ignore while connected

      if (this.bus.safeBoot) return; // don't mess with flashing bootloaders

      var devices = this.bus.devices();
      if (devices.some(dev => dev.flashing)) // don't mess with flashing
        return; // detect if the proxy device is lost

      var t = this.bus.timestamp - (this._lastReceivedTime || this._connectionTime);

      if (t > _constants__WEBPACK_IMPORTED_MODULE_1__/* .TRANSPORT_PULSE_TIMEOUT */ .U5y) {
        this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .LOST */ .XWw);
        console.debug(this.type + ": lost connection with device");
        if (this._lastReceivedTime !== undefined) yield this.reconnect();else yield this.disconnect(true);
      }
    });

    function checkPulse() {
      return _checkPulse.apply(this, arguments);
    }

    return checkPulse;
  }();

  _proto.sendPacketAsync = /*#__PURE__*/function () {
    var _sendPacketAsync = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* (p) {
      if (!this.connected) {
        this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_SEND_DISCONNECT */ .FrK, p);
      } else {
        yield this.transportSendPacketAsync(p);
      }
    });

    function sendPacketAsync(_x) {
      return _sendPacketAsync.apply(this, arguments);
    }

    return sendPacketAsync;
  }();

  _proto.connect = function connect(background) {
    console.debug(this.type + ": connect " + (background ? "(background)" : ""));
    if (this.disposed) throw new Error("attempted to connect to a disposed transport"); // already connected

    if (this.connectionState == ConnectionState.Connected) {
      console.debug(this.type + ": already connected");
      return Promise.resolve();
    } // connecting


    if (!this._connectPromise) {
      // already disconnecting, retry when disconnected
      if (this._disconnectPromise) {
        console.debug(this.type + ": queuing connect after disconnecting");
        var _p = this._disconnectPromise;
        this._disconnectPromise = undefined;
        this._connectPromise = _p.then(() => this.connect());
      } else {
        // starting a fresh connection
        console.debug(this.type + ": connecting");
        this._connectPromise = Promise.resolve();
        this.setConnectionState(ConnectionState.Connecting);
        this._connectPromise = this._connectPromise.then(() => this.transportConnectAsync(background));

        var _p2 = this._connectPromise = this._connectPromise.then(() => {
          if (_p2 == this._connectPromise) {
            this._connectPromise = undefined;
            this.setConnectionState(ConnectionState.Connected);
          } else {
            console.debug(this.type + ": connection aborted in flight", {
              state: this._connectionState,
              old: this._connectPromise,
              new: _p2
            }); // already reported
          }
        }).catch(e => {
          if (_p2 == this._connectPromise) {
            this._connectPromise = undefined;
            this.setConnectionState(ConnectionState.Disconnected);
            if (!background) this.errorHandler(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONNECT */ .JD8, e);else console.debug(this.type + ": background connect failed");
          } else {
            console.debug(this.type + ": connection error aborted in flight");
          }
        });
      }
    } else {
      console.debug(this.type + ": connect with existing promise");
    }

    return this._connectPromise;
  };

  _proto.disconnect = function disconnect(background) {
    // already disconnected
    if (this.connectionState == ConnectionState.Disconnected) return Promise.resolve();

    if (!this._disconnectPromise) {
      // connection in progress, wait and disconnect when done
      if (this._connectPromise) {
        console.debug(this.type + ": cancelling connection and disconnect");
        this._connectPromise = undefined;
      }

      console.debug(this.type + ": disconnecting");
      this._disconnectPromise = Promise.resolve();
      this.setConnectionState(ConnectionState.Disconnecting);
      this._disconnectPromise = this._disconnectPromise.then(() => this.transportDisconnectAsync(background));
      this._disconnectPromise = this._disconnectPromise.catch(e => {
        this._disconnectPromise = undefined;
        this.errorHandler(_constants__WEBPACK_IMPORTED_MODULE_1__/* .DISCONNECT */ .PYu, e);
      }).finally(() => {
        this._disconnectPromise = undefined;
        this.setConnectionState(ConnectionState.Disconnected);
      });
    } else {
      console.debug(this.type + ": disconnect with existing promise");
    }

    return this._disconnectPromise;
  };

  _proto.reconnect = /*#__PURE__*/function () {
    var _reconnect = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(function* () {
      console.debug(this.type + ": reconnect");
      yield this.disconnect(true);
      yield this.connect(true);
    });

    function reconnect() {
      return _reconnect.apply(this, arguments);
    }

    return reconnect;
  }();

  _proto.handlePacket = function handlePacket(payload) {
    var {
      timestamp
    } = this.bus;
    this._lastReceivedTime = timestamp;
    var pkt = _packet__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromBinary */ .Z.fromBinary(payload, timestamp);
    pkt.sender = this.type;
    this.bus.processPacket(pkt);
  };

  _proto.handleFrame = function handleFrame(payload) {
    var {
      timestamp
    } = this.bus;
    this._lastReceivedTime = timestamp;
    var pkts = _packet__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromFrame */ .Z.fromFrame(payload, timestamp);

    for (var pkt of pkts) {
      pkt.sender = this.type;
      this.bus.processPacket(pkt);
    }
  } // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ;

  _proto.errorHandler = function errorHandler(context, exception) {
    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_4__/* .isCancelError */ .G5)(exception)) {
      this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, {
        context,
        exception
      });
      this.bus.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, {
        transport: this.type,
        context,
        exception
      });
    }

    this.emit(_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver); // when a microbit flash is initiated via file download, the device will
    // stop responding. we should not try to reconnect while this is the case

    this.disconnect(true);
  };

  _proto.dispose = function dispose() {
    this.disposed = true;

    this._cleanups.forEach(c => c());

    this._cleanups = [];
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(Transport, [{
    key: "bus",
    get: function get() {
      return this._bus;
    },
    set: function set(bus) {
      (0,_utils__WEBPACK_IMPORTED_MODULE_4__/* .assert */ .hu)(!this._bus && !!bus);
      this._bus = bus;

      if (this._checkPulse) {
        this._bus.on(_constants__WEBPACK_IMPORTED_MODULE_1__/* .SELF_ANNOUNCE */ .Pbc, this.checkPulse.bind(this));
      }
    }
  }, {
    key: "connectionState",
    get:
    /**
     * Gets the bus connection state.
     */
    function get() {
      return this._connectionState;
    }
  }, {
    key: "connecting",
    get: function get() {
      return this.connectionState == ConnectionState.Connecting;
    }
  }, {
    key: "disconnecting",
    get: function get() {
      return this.connectionState == ConnectionState.Disconnecting;
    }
  }, {
    key: "connected",
    get: function get() {
      return this._connectionState == ConnectionState.Connected;
    }
  }, {
    key: "disconnected",
    get: function get() {
      return this._connectionState == ConnectionState.Disconnected;
    }
  }]);

  return Transport;
}(_eventsource__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP);
/* harmony default export */ __webpack_exports__["ZP"] = (Transport);

/***/ }),

/***/ 74278:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZZ": function() { return /* binding */ createWebSerialTransport; },
  "es": function() { return /* binding */ isWebSerialSupported; }
});

// UNUSED EXPORTS: WebSerialTransport, isWebSerialEnabled

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/flags.ts
var flags = __webpack_require__(21258);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/transport.ts
var transport = __webpack_require__(27591);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/hf2.ts
var hf2 = __webpack_require__(72740);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/error.ts
var jdom_error = __webpack_require__(52800);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/webserialio.ts






var WebSerialIO = /*#__PURE__*/function () {
  function WebSerialIO(bus) {
    this.readLoopStarted = false;
    this.ready = false;

    this.onData = v => {};

    this.onError = e => {
      console.warn("usb error: " + ((0,jdom_error/* errorCode */.uY)(e) || "") + " " + (e ? e.stack : e));
    };

    this.bus = bus;
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars


  var _proto = WebSerialIO.prototype;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _proto.log = function log(msg, v) {
    if (flags/* default.diagnostics */.Z.diagnostics) {
      if (v != undefined) console.debug("usb: " + msg, v);else console.debug("usb: " + msg);
    }
  };

  _proto.mkProto = function mkProto() {
    return new hf2/* HF2Proto */.xP(this);
  };

  _proto.clearDev = function clearDev() {
    if (this.dev) {
      this.dev = null;

      this.onData = () => console.warn("rogue webserial hf2 onData");
    }
  };

  _proto.disconnectAsync = function disconnectAsync() {
    this.ready = false;
    if (!this.dev) return Promise.resolve();
    console.debug("close device");
    return this.cancelStreams().catch(e => {
      // just ignore errors closing, most likely device just disconnected
      if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
    }).then(() => {
      this.clearDev();
      return (0,utils/* delay */.gw)(500);
    });
  };

  _proto.devInfo = function devInfo() {
    if (!this.dev) return "n/a";

    var h = n => ("000" + n.toString(16)).slice(-4);

    var info = this.dev.getInfo();
    return h(info.usbVendorId) + ":" + h(info.usbProductId);
  };

  _proto.error = function error(msg, code) {
    var e = new jdom_error/* default */.ZP("serial device " + this.devInfo() + " (" + msg + ")", code);
    this.onError(e);
  };

  _proto.cancelStreams = /*#__PURE__*/function () {
    var _cancelStreams = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this.reader) try {
        yield this.reader.cancel();
        this.reader.releaseLock(); // eslint-disable-next-line no-empty
      } catch (_unused) {}

      try {
        this.writer.releaseLock(); // eslint-disable-next-line no-empty
      } catch (_unused2) {}

      yield this.dev.close();
    });

    function cancelStreams() {
      return _cancelStreams.apply(this, arguments);
    }

    return cancelStreams;
  }();

  _proto.readLoop = /*#__PURE__*/function () {
    var _readLoop = (0,asyncToGenerator/* default */.Z)(function* () {
      var _this = this;

      if (this.readLoopStarted) return;
      this.readLoopStarted = true;
      console.debug("start read loop");

      var readpkt = /*#__PURE__*/function () {
        var _ref = (0,asyncToGenerator/* default */.Z)(function* (reader) {
          var value = null;

          for (;;) {
            var tmp = yield reader.read();
            if (tmp.done || !_this.dev) return null; // reader cancelled

            if (!value) value = tmp.value;else value = (0,utils/* bufferConcat */.gX)(value, tmp.value); // Despite the fact that the device always sends full 64 bytes USB packets
            // the Windows serial driver will sometimes give only one character, and then the remaining
            // 63 in the second read - this must be going through some UART abstraction layers I guess... ¯\_(ツ)_/¯

            if (value && (value.length & 63) == 0) return value;
          }
        });

        return function readpkt(_x) {
          return _ref.apply(this, arguments);
        };
      }();

      for (;;) {
        var _this$dev, _this$dev$readable;

        var reader = (_this$dev = this.dev) === null || _this$dev === void 0 ? void 0 : (_this$dev$readable = _this$dev.readable) === null || _this$dev$readable === void 0 ? void 0 : _this$dev$readable.getReader();

        if (!reader) {
          yield (0,utils/* delay */.gw)(100);
          continue;
        }

        this.reader = reader;
        console.debug("start new read loop round");

        try {
          // eslint-disable-next-line no-constant-condition
          for (;;) {
            var value = yield readpkt(reader);
            if (!value) break; // console.log("Recv", toHex(value))

            if (value.length > 64) for (var i = 0; i < value.length; i += 64) {
              this.onData(value.slice(i, i + 64));
            } else this.onData(value);
          }
        } catch (e) {
          if (this.dev) {
            if (!(0,utils/* isCancelError */.G5)(e)) this.onError(e);
          }

          yield (0,utils/* delay */.gw)(100);
        } finally {
          try {
            reader.releaseLock(); // eslint-disable-next-line no-empty
          } catch (e) {}

          yield (0,utils/* delay */.gw)(100);
        }
      }
    });

    function readLoop() {
      return _readLoop.apply(this, arguments);
    }

    return readLoop;
  }();

  _proto.sendPacketAsync = function sendPacketAsync(pkt) {
    if (!this.dev || !this.writer) return Promise.reject(new Error("Disconnected"));
    (0,utils/* assert */.hu)(pkt.length <= 64); // console.log("Send", toHex(pkt))

    if (pkt.length < 64) {
      var p = pkt;
      pkt = new Uint8Array(64);
      pkt.set(p);
    }

    return this.writer.write(pkt);
  };

  _proto.tryReconnectAsync = /*#__PURE__*/function () {
    var _tryReconnectAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      var matchFilter = port => {
        var info = port === null || port === void 0 ? void 0 : port.getInfo();
        var usbVendorId = info === null || info === void 0 ? void 0 : info.usbVendorId;
        return this.bus.deviceCatalog.matchVendorId("serial", usbVendorId);
      };

      try {
        var ports = yield navigator.serial.getPorts();
        var filtered = ports.filter(matchFilter);
        this.dev = filtered[0];
      } catch (e) {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        this.dev = undefined;
      }
    });

    function tryReconnectAsync() {
      return _tryReconnectAsync.apply(this, arguments);
    }

    return tryReconnectAsync;
  }() // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.requestDeviceAsync =
  /*#__PURE__*/
  function () {
    var _requestDeviceAsync = (0,asyncToGenerator/* default */.Z)(function* (deviceId) {
      var vendorIds = this.bus.deviceCatalog.vendorIds("serial");
      var WEB_SERIAL_FILTERS = {
        filters: vendorIds.map(usbVendorId => ({
          usbVendorId
        }))
      };

      try {
        this.dev = yield navigator.serial.requestPort(WEB_SERIAL_FILTERS); // TODO: deviceid
      } catch (e) {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        this.dev = undefined;
      }
    });

    function requestDeviceAsync(_x2) {
      return _requestDeviceAsync.apply(this, arguments);
    }

    return requestDeviceAsync;
  }();

  _proto.connectAsync = /*#__PURE__*/function () {
    var _connectAsync = (0,asyncToGenerator/* default */.Z)(function* (background, deviceId) {
      yield this.tryReconnectAsync();
      if (!this.dev && !background) yield this.requestDeviceAsync(deviceId); // background call and no device, just give up for now

      if (!this.dev && background) (0,utils/* throwError */._y)("device not paired", true); // let's connect

      yield this.openDeviceAsync();
      var proto = this.mkProto();

      try {
        yield proto.postConnectAsync();
      } catch (e) {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        yield proto.disconnectAsync();
        throw e;
      }

      return proto;
    });

    function connectAsync(_x3, _x4) {
      return _connectAsync.apply(this, arguments);
    }

    return connectAsync;
  }();

  _proto.openDeviceAsync = /*#__PURE__*/function () {
    var _openDeviceAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      var _this$dev$writable;

      if (!this.dev) (0,utils/* throwError */._y)("device not found", true);
      yield this.dev.open({
        baudRate: 115200,
        // not really
        bufferSize: 32 * 1024
      });
      this.writer = (_this$dev$writable = this.dev.writable) === null || _this$dev$writable === void 0 ? void 0 : _this$dev$writable.getWriter();
      if (!this.writer) (0,utils/* throwError */._y)("no writer");
      this.ready = true;
      /* no await */

      this.readLoop();
    });

    function openDeviceAsync() {
      return _openDeviceAsync.apply(this, arguments);
    }

    return openDeviceAsync;
  }();

  return WebSerialIO;
}();


// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/eventtargetobservable.ts
var eventtargetobservable = __webpack_require__(86748);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/webserial.ts




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }






function isWebSerialEnabled() {
  return !!Flags.webSerial;
}
function isWebSerialSupported() {
  try {
    return typeof navigator !== "undefined" && !!navigator.serial && !!navigator.serial.getPorts;
  } catch (e) {
    return false;
  }
}
var WebSerialTransport = /*#__PURE__*/function (_Transport) {
  (0,inheritsLoose/* default */.Z)(WebSerialTransport, _Transport);

  function WebSerialTransport(options) {
    var _this;

    _this = _Transport.call(this, constants/* SERIAL_TRANSPORT */.NbT, _objectSpread(_objectSpread({}, options), {}, {
      checkPulse: true
    })) || this;
    _this.mkTransport = options.mkTransport;
    return _this;
  }

  var _proto = WebSerialTransport.prototype;

  _proto.transportConnectAsync = /*#__PURE__*/function () {
    var _transportConnectAsync = (0,asyncToGenerator/* default */.Z)(function* (background) {
      var transport = this.mkTransport(this.bus);

      transport.onError = e => this.errorHandler(constants/* SERIAL_TRANSPORT */.NbT, e);

      this.hf2 = yield transport.connectAsync(background);
      this.hf2.onJDMessage(this.handleFrame.bind(this));
    });

    function transportConnectAsync(_x) {
      return _transportConnectAsync.apply(this, arguments);
    }

    return transportConnectAsync;
  }();

  _proto.transportSendPacketAsync = /*#__PURE__*/function () {
    var _transportSendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (p) {
      if (!this.hf2) throw new Error("hf2 transport disconnected");
      var buf = p.toBuffer();
      yield this.hf2.sendJDMessageAsync(buf);
    });

    function transportSendPacketAsync(_x2) {
      return _transportSendPacketAsync.apply(this, arguments);
    }

    return transportSendPacketAsync;
  }() // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.transportDisconnectAsync =
  /*#__PURE__*/
  function () {
    var _transportDisconnectAsync = (0,asyncToGenerator/* default */.Z)(function* (background) {
      var h = this.hf2;
      this.hf2 = undefined;
      if (h) yield h.disconnectAsync();
    });

    function transportDisconnectAsync(_x3) {
      return _transportDisconnectAsync.apply(this, arguments);
    }

    return transportDisconnectAsync;
  }();

  return WebSerialTransport;
}(transport/* default */.ZP);

function defaultOptions() {
  if (!isWebSerialSupported()) return undefined;
  var connectObservable = new eventtargetobservable/* default */.Z(navigator.serial, "connect");
  var disconnectObservable = new eventtargetobservable/* default */.Z(navigator.serial, "disconnect");
  return {
    mkTransport: bus => new WebSerialIO(bus),
    connectObservable,
    disconnectObservable
  };
}
/**
 * Creates a transport over a Web Serial connection
 * @category Transport
 */


function createWebSerialTransport(options) {
  if (!options) options = defaultOptions();
  return options && new WebSerialTransport(options);
}

/***/ }),

/***/ 81794:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_y": function() { return /* binding */ throwError; },
/* harmony export */   "G5": function() { return /* binding */ isCancelError; },
/* harmony export */   "qc": function() { return /* binding */ setAckError; },
/* harmony export */   "gw": function() { return /* binding */ delay; },
/* harmony export */   "Tz": function() { return /* binding */ memcpy; },
/* harmony export */   "eT": function() { return /* binding */ strcmp; },
/* harmony export */   "zo": function() { return /* binding */ bufferEq; },
/* harmony export */   "vp": function() { return /* binding */ hash; },
/* harmony export */   "cP": function() { return /* binding */ idiv; },
/* harmony export */   "Br": function() { return /* binding */ crc; },
/* harmony export */   "Hp": function() { return /* binding */ ALIGN; },
/* harmony export */   "sy": function() { return /* binding */ stringToUint8Array; },
/* harmony export */   "DA": function() { return /* binding */ uint8ArrayToString; },
/* harmony export */   "W_": function() { return /* binding */ fromUTF8; },
/* harmony export */   "IE": function() { return /* binding */ toUTF8; },
/* harmony export */   "Dg": function() { return /* binding */ PromiseBuffer; },
/* harmony export */   "bo": function() { return /* binding */ PromiseQueue; },
/* harmony export */   "b": function() { return /* binding */ rgbToHtmlColor; },
/* harmony export */   "$3": function() { return /* binding */ toFullHex; },
/* harmony export */   "NC": function() { return /* binding */ toHex; },
/* harmony export */   "H_": function() { return /* binding */ fromHex; },
/* harmony export */   "DM": function() { return /* binding */ isSet; },
/* harmony export */   "qo": function() { return /* binding */ toArray; },
/* harmony export */   "Rj": function() { return /* binding */ hexNum; },
/* harmony export */   "Pg": function() { return /* binding */ write32; },
/* harmony export */   "SZ": function() { return /* binding */ write16; },
/* harmony export */   "Zy": function() { return /* binding */ read32; },
/* harmony export */   "gI": function() { return /* binding */ read16; },
/* harmony export */   "KY": function() { return /* binding */ encodeU32LE; },
/* harmony export */   "pL": function() { return /* binding */ isBufferEmpty; },
/* harmony export */   "zT": function() { return /* binding */ bufferToString; },
/* harmony export */   "k8": function() { return /* binding */ stringToBuffer; },
/* harmony export */   "gX": function() { return /* binding */ bufferConcat; },
/* harmony export */   "Gb": function() { return /* binding */ bufferConcatMany; },
/* harmony export */   "ue": function() { return /* binding */ arrayConcatMany; },
/* harmony export */   "hu": function() { return /* binding */ assert; },
/* harmony export */   "d9": function() { return /* binding */ clone; },
/* harmony export */   "P2": function() { return /* binding */ throttle; },
/* harmony export */   "td": function() { return /* binding */ signal; },
/* harmony export */   "Lg": function() { return /* binding */ readBlobToUint8Array; },
/* harmony export */   "i1": function() { return /* binding */ readBlobToText; },
/* harmony export */   "Ds": function() { return /* binding */ debounce; },
/* harmony export */   "kl": function() { return /* binding */ debounceAsync; },
/* harmony export */   "ZZ": function() { return /* binding */ JSONTryParse; },
/* harmony export */   "JI": function() { return /* binding */ roundWithPrecision; },
/* harmony export */   "rs": function() { return /* binding */ randomRange; },
/* harmony export */   "Tw": function() { return /* binding */ unique; },
/* harmony export */   "EM": function() { return /* binding */ uniqueMap; },
/* harmony export */   "qL": function() { return /* binding */ toMap; },
/* harmony export */   "hr": function() { return /* binding */ ellipse; },
/* harmony export */   "VA": function() { return /* binding */ ellipseJoin; },
/* harmony export */   "r": function() { return /* binding */ arrayShuffle; },
/* harmony export */   "yZ": function() { return /* binding */ uniqueName; },
/* harmony export */   "vM": function() { return /* binding */ groupBy; },
/* harmony export */   "ei": function() { return /* binding */ pick; },
/* harmony export */   "ap": function() { return /* binding */ splitFilter; },
/* harmony export */   "LA": function() { return /* binding */ toggleBit; }
/* harmony export */ });
/* unused harmony exports isAckError, fnv1, decodeU32LE, jsonCopyFrom, flatClone, range */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15861);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52800);
/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21258);




function throwError(msg, cancel) {
  var e = new Error(msg);
  if (cancel) // eslint-disable-next-line @typescript-eslint/no-explicit-any
    e.__cancel = true;
  throw e;
}
function isCancelError(e) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return !!(e !== null && e !== void 0 && e.__cancel);
}
function setAckError(e) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  if (e) e.__ack = true;
}
function isAckError(e) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return !!(e !== null && e !== void 0 && e.__ack);
}
function delay(millis, value) {
  return new Promise(resolve => setTimeout(() => resolve(value), millis));
}
function memcpy(trg, trgOff, src, srcOff, len) {
  if (srcOff === void 0) srcOff = 0;
  if (len === void 0) len = src.length - srcOff;

  for (var i = 0; i < len; ++i) {
    trg[trgOff + i] = src[srcOff + i];
  }
}
function strcmp(a, b) {
  if (a == b) return 0;
  if (a < b) return -1;else return 1;
}
function bufferEq(a, b, offset) {
  if (offset === void 0) {
    offset = 0;
  }

  if (a == b) return true;
  if (!a || !b || a.length != b.length) return false;

  for (var i = offset; i < a.length; ++i) {
    if (a[i] != b[i]) return false;
  }

  return true;
}
function hash(buf, bits) {
  bits |= 0;
  if (bits < 1) return 0;
  var h = fnv1(buf);
  if (bits >= 32) return h >>> 0;else return ((h ^ h >>> bits) & (1 << bits) - 1) >>> 0;
}
function idiv(a, b) {
  return (a | 0) / (b | 0) | 0;
}
function fnv1(data) {
  var h = 0x811c9dc5;

  for (var i = 0; i < data.length; ++i) {
    h = Math.imul(h, 0x1000193) ^ data[i];
  }

  return h;
}
function crc(p) {
  var crc = 0xffff;

  for (var i = 0; i < p.length; ++i) {
    var data = p[i];
    var x = crc >> 8 ^ data;
    x ^= x >> 4;
    crc = crc << 8 ^ x << 12 ^ x << 5 ^ x;
    crc &= 0xffff;
  }

  return crc;
}
function ALIGN(n) {
  return n + 3 & ~3;
} // this will take lower 8 bits from each character

function stringToUint8Array(input) {
  var len = input.length;
  var res = new Uint8Array(len);

  for (var i = 0; i < len; ++i) {
    res[i] = input.charCodeAt(i) & 0xff;
  }

  return res;
}
function uint8ArrayToString(input) {
  var len = input.length;
  var res = "";

  for (var i = 0; i < len; ++i) {
    res += String.fromCharCode(input[i]);
  }

  return res;
}
function fromUTF8(binstr) {
  if (!binstr) return ""; // escape function is deprecated

  var escaped = "";

  for (var i = 0; i < binstr.length; ++i) {
    var k = binstr.charCodeAt(i) & 0xff;

    if (k == 37 || k > 0x7f) {
      escaped += "%" + k.toString(16);
    } else {
      escaped += binstr.charAt(i);
    }
  } // decodeURIComponent does the actual UTF8 decoding


  return decodeURIComponent(escaped);
}
function toUTF8(str, cesu8) {
  var res = "";
  if (!str) return res;

  for (var i = 0; i < str.length; ++i) {
    var code = str.charCodeAt(i);
    if (code <= 0x7f) res += str.charAt(i);else if (code <= 0x7ff) {
      res += String.fromCharCode(0xc0 | code >> 6, 0x80 | code & 0x3f);
    } else {
      if (!cesu8 && 0xd800 <= code && code <= 0xdbff) {
        var next = str.charCodeAt(++i);
        if (!isNaN(next)) code = 0x10000 + (code - 0xd800 << 10) + (next - 0xdc00);
      }

      if (code <= 0xffff) res += String.fromCharCode(0xe0 | code >> 12, 0x80 | code >> 6 & 0x3f, 0x80 | code & 0x3f);else res += String.fromCharCode(0xf0 | code >> 18, 0x80 | code >> 12 & 0x3f, 0x80 | code >> 6 & 0x3f, 0x80 | code & 0x3f);
    }
  }

  return res;
}

/** @internal */
var PromiseBuffer = /*#__PURE__*/function () {
  function PromiseBuffer() {
    this.waiting = [];
    this.available = [];
  }

  var _proto = PromiseBuffer.prototype;

  _proto.drain = function drain() {
    for (var f of this.waiting) {
      f(new Error("Promise Buffer Reset"));
    }

    this.waiting = [];
    this.available = [];
  };

  _proto.pushError = function pushError(v) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    this.push(v);
  };

  _proto.push = function push(v) {
    var f = this.waiting.shift();
    if (f) f(v);else this.available.push(v);
  };

  _proto.shiftAsync = function shiftAsync(timeout) {
    if (timeout === void 0) {
      timeout = 0;
    }

    if (this.available.length > 0) {
      var _v = this.available.shift();

      if (_v instanceof Error) return Promise.reject(_v);else return Promise.resolve(_v);
    } else return new Promise((resolve, reject) => {
      var f = v => {
        if (v instanceof Error) reject(v);else resolve(v);
      };

      this.waiting.push(f);

      if (timeout > 0) {
        delay(timeout).then(() => {
          var idx = this.waiting.indexOf(f);

          if (idx >= 0) {
            this.waiting.splice(idx, 1);
            reject(new _error__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP("Timeout", _constants__WEBPACK_IMPORTED_MODULE_0__/* .TIMEOUT_ERROR_CODE */ .yA$));
          }
        });
      }
    });
  };

  return PromiseBuffer;
}();
/** @internal */

var PromiseQueue = /*#__PURE__*/function () {
  function PromiseQueue() {
    this.promises = {};
  }

  var _proto2 = PromiseQueue.prototype;

  _proto2.enqueue = function enqueue(id, f) {
    return new Promise((resolve, reject) => {
      var arr = this.promises[id];

      if (!arr) {
        arr = this.promises[id] = [];
      }

      var cleanup = () => {
        arr.shift();
        if (arr.length == 0) delete this.promises[id];else arr[0]();
      };

      arr.push(() => f().then(v => {
        cleanup();
        resolve(v);
      }, err => {
        cleanup();
        reject(err);
      }));
      if (arr.length == 1) arr[0]();
    });
  };

  return PromiseQueue;
}();
function rgbToHtmlColor(rgb) {
  return "#" + ("000000" + rgb.toString(16)).slice(-6);
}
function toFullHex(n) {
  return "0x" + n.map(id => ("000000000" + id.toString(16)).slice(-8)).join("");
}
function toHex(bytes, sep) {
  if (!bytes) return undefined;
  var r = "";

  for (var i = 0; i < bytes.length; ++i) {
    if (sep && i > 0) r += sep;
    r += ("0" + bytes[i].toString(16)).slice(-2);
  }

  return r;
}
function fromHex(hex) {
  var r = new Uint8Array(hex.length >> 1);

  for (var i = 0; i < hex.length; i += 2) {
    r[i >> 1] = parseInt(hex.slice(i, i + 2), 16);
  }

  return r;
}
function isSet(v) {
  return v !== null && v !== undefined;
}
function toArray(a) {
  if (!a) return undefined;
  var r = new Array(a.length);

  for (var i = 0; i < a.length; ++i) {
    r[i] = a[i];
  }

  return r;
}
function hexNum(n) {
  if (isNaN(n)) return undefined;
  if (n < 0) return "-" + hexNum(-n);
  return "0x" + n.toString(16);
}
function write32(buf, pos, v) {
  buf[pos + 0] = v >> 0 & 0xff;
  buf[pos + 1] = v >> 8 & 0xff;
  buf[pos + 2] = v >> 16 & 0xff;
  buf[pos + 3] = v >> 24 & 0xff;
}
function write16(buf, pos, v) {
  buf[pos + 0] = v >> 0 & 0xff;
  buf[pos + 1] = v >> 8 & 0xff;
}
function read32(buf, pos) {
  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16 | buf[pos + 3] << 24) >>> 0;
}
function read16(buf, pos) {
  return buf[pos] | buf[pos + 1] << 8;
}
function encodeU32LE(words) {
  var r = new Uint8Array(words.length * 4);

  for (var i = 0; i < words.length; ++i) {
    write32(r, i * 4, words[i]);
  }

  return r;
}
function decodeU32LE(buf) {
  var res = [];

  for (var i = 0; i < buf.length; i += 4) {
    res.push(read32(buf, i));
  }

  return res;
}
function isBufferEmpty(data) {
  if (!data) return true;
  var n = data.length;

  for (var i = 0; i < n; ++i) {
    if (data[i]) return false;
  }

  return true;
}
function bufferToString(buf) {
  return fromUTF8(uint8ArrayToString(buf));
}
function stringToBuffer(str) {
  return stringToUint8Array(toUTF8(str));
}
function bufferConcat(a, b) {
  var r = new Uint8Array(a.length + b.length);
  r.set(a, 0);
  r.set(b, a.length);
  return r;
}
function bufferConcatMany(bufs) {
  var sz = 0;

  for (var buf of bufs) {
    sz += buf.length;
  }

  var r = new Uint8Array(sz);
  sz = 0;

  for (var _buf of bufs) {
    r.set(_buf, sz);
    sz += _buf.length;
  }

  return r;
}
function arrayConcatMany(arrs) {
  if (!arrs) return undefined; // weed out empty array

  arrs = arrs.filter(a => !!(a !== null && a !== void 0 && a.length));
  var sz = 0;

  for (var buf of arrs) {
    sz += buf.length;
  }

  var r = new Array(sz);
  sz = 0;

  for (var arr of arrs) {
    for (var i = 0; i < arr.length; ++i) {
      r[i + sz] = arr[i];
    }

    sz += arr.length;
  }

  return r;
}
function jsonCopyFrom(trg, src) {
  var v = clone(src);

  for (var k of Object.keys(src)) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-extra-semi
    ;
    trg[k] = v[k];
  }
}
function assert(cond, msg, // eslint-disable-next-line @typescript-eslint/no-explicit-any
debugData) {
  if (msg === void 0) {
    msg = "Assertion failed";
  }

  if (!cond) {
    if (debugData) console.debug("assertion filed " + msg, debugData);
    if (_flags__WEBPACK_IMPORTED_MODULE_2__/* ["default"].diagnostics */ .Z.diagnostics) // eslint-disable-next-line no-debugger
      debugger;
    throw new Error(msg);
  }
}
function flatClone(obj) {
  if (obj == null) return null; // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var r = {};
  Object.keys(obj).forEach(k => {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    r[k] = obj[k];
  });
  return r;
}
function clone(v) {
  if (v == null) return null;
  return JSON.parse(JSON.stringify(v));
}
function throttle(handler, delay) {
  var enableCall = true;
  return function () {
    if (!enableCall) return;
    enableCall = false;
    handler();
    setTimeout(() => enableCall = true, delay);
  };
}
function signal() {
  var resolve;
  return {
    signalled: new Promise(r => {
      resolve = r;
    }),
    signal: () => resolve(true)
  };
}
function readBlobToUint8Array(blob) {
  if (blob !== null && blob !== void 0 && blob.arrayBuffer) {
    return blob.arrayBuffer().then(data => new Uint8Array(data));
  }

  return new Promise((resolve, reject) => {
    var fileReader = new FileReader();

    fileReader.onload = () => {
      resolve(new Uint8Array(fileReader.result));
    };

    fileReader.onerror = e => {
      //console.log(e)
      reject(e);
    };

    try {
      fileReader.readAsArrayBuffer(blob);
    } catch (e) {
      reject(e);
    }
  });
}
function readBlobToText(blob) {
  if (blob.text) {
    return blob.text();
  }

  return new Promise((resolve, reject) => {
    var fileReader = new FileReader();

    fileReader.onload = () => resolve(fileReader.result);

    fileReader.onerror = e => {
      //console.log(e)
      reject(e);
    };

    try {
      fileReader.readAsText(blob);
    } catch (e) {
      reject(e);
    }
  });
}
function debounce(handler, delay) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  var timeOutId;
  return function () {
    if (timeOutId) {
      clearTimeout(timeOutId);
    }

    timeOutId = setTimeout( /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
      handler();
    }), delay);
  };
}
function debounceAsync(handler, delay) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  var timeOutId;
  return function () {
    if (timeOutId) {
      clearTimeout(timeOutId);
    }

    timeOutId = setTimeout( /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
      yield handler();
    }), delay);
  };
}
function JSONTryParse(src, defaultValue) {
  if (src === undefined) return undefined;
  if (src === null) return null;

  try {
    return JSON.parse(src);
  } catch (e) {
    return defaultValue;
  }
}
function roundWithPrecision(x, digits, round) {
  if (round === void 0) {
    round = Math.round;
  }

  digits = digits | 0; // invalid digits input

  if (digits <= 0) return Math.round(x);
  if (x == 0) return 0;
  var r = 0;

  while (r == 0 && digits < 21) {
    var d = Math.pow(10, digits++);
    r = round(x * d + Number.EPSILON) / d;
  }

  return r;
}
function randomRange(min, max) {
  return Math.round(Math.random() * (max - min) + min);
}
function unique(values) {
  return Array.from(new Set(values).keys());
}
function uniqueMap(values, id, converter) {
  var r = {};

  for (var i = 0; i < values.length; ++i) {
    var _value = values[i];
    var idv = id(_value);

    if (!r[idv]) {
      r[idv] = _value;
    }
  }

  return Object.values(r).map(converter);
}
function toMap(a, keyConverter, valueConverter, ignoreMissingValues) {
  var m = {};
  if (a) for (var i = 0; i < a.length; ++i) {
    var key = keyConverter(a[i], i);
    if (key === undefined || key === null) continue;

    var _v2 = valueConverter(a[i], i);

    if (ignoreMissingValues && (_v2 === undefined || _v2 === null)) continue;
    m[key] = _v2;
  }
  return m;
}
function ellipse(text, maxChars, suffix) {
  if (suffix === void 0) {
    suffix = "...";
  }

  if (!isNaN(maxChars) && maxChars > 0 && (text === null || text === void 0 ? void 0 : text.length) > maxChars - suffix.length) return text.slice(0, maxChars) + suffix;
  return text;
}
function ellipseJoin(values, maxChars, ellipse) {
  if (ellipse === void 0) {
    ellipse = "...";
  }

  var r = "";

  for (var i = 0; i < values.length && r.length < maxChars; ++i) {
    if (r) r += ", ";
    r += values[i];
  }

  if (r.length > maxChars - ellipse.length) return r.slice(0, maxChars) + ellipse;else return r;
}
function arrayShuffle(a) {
  for (var i = a.length - 1; i > 0; i--) {
    var j = Math.floor(Math.random() * (i + 1));
    [a[i], a[j]] = [a[j], a[i]];
  }

  return a;
}
function uniqueName(names, name, separator) {
  if (separator === void 0) {
    separator = "";
  }

  if (names.indexOf(name) < 0) return name; // allocate names

  var count = 2;

  while (names.indexOf("" + name + separator + count) > -1) {
    count++;
  }

  return "" + name + separator + count;
}
function groupBy(list, key) {
  if (!list) return {};
  var r = {};
  list.forEach(item => {
    var k = key(item);
    var a = r[k] || (r[k] = []);
    a.push(item);
  });
  return r;
}
function pick() {
  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
    values[_key] = arguments[_key];
  }

  return values === null || values === void 0 ? void 0 : values.find(x => x !== undefined);
}
/**
 * Applies filters and returns array of [yays, nays]
 * @param values
 * @param condition
 */

function splitFilter(values, condition) {
  var yays = [];
  var nays = [];
  var n = values.length;

  for (var i = 0; i < n; ++i) {
    var _v3 = values[i];
    if (condition(_v3)) yays.push(_v3);else nays.push(_v3);
  }

  return [yays, nays];
}
function range(end) {
  return Array(end).fill(0).map((_, i) => i);
}
function toggleBit(data, bitindex) {
  // find bit to flip
  var byte = data[bitindex >> 3];
  var bit = bitindex % 8;
  var on = 1 === (byte >> bit & 1); // flip bit

  if (on) {
    byte &= ~(1 << bit);
  } else {
    byte |= 1 << bit;
  } // save


  data[bitindex >> 3] = byte;
}

/***/ }),

/***/ 69589:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "x": function() { return /* binding */ tonePayload; },
/* harmony export */   "Z": function() { return /* binding */ BuzzerServer; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94578);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jdom_pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91635);
/* harmony import */ var _jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5800);





/**
 * @internal
 */

/**
 * Encodes a buzzer tone information into a data payload
 * @param frequency sound frequency in Hz
 * @param ms sound duration in milliseconds
 * @param volume volume from [0..1]
 * @returns data payload
 * @category Data Packing
 */
function tonePayload(frequency, ms, volume) {
  var period = Math.round(1000000 / frequency);
  var duty = period * volume >> 11;
  return (0,_jdom_pack__WEBPACK_IMPORTED_MODULE_1__/* .jdpack */ .AV)("u16 u16 u16", [period, duty, ms]);
}
/**
 * Server implementation for the buzzer service
 * @category Servers
 */

var BuzzerServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(BuzzerServer, _JDServiceServer);

  function BuzzerServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_BUZZER */ .J1$, options) || this;
    _this.volume = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .BuzzerReg.Volume */ .CGK.Volume, [0.2]);

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .BuzzerCmd.PlayTone */ .Rv2.PlayTone, _this.handlePlayTone.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  var _proto = BuzzerServer.prototype;

  _proto.handlePlayTone = function handlePlayTone(pkt) {
    var [period,, duration] = (0,_jdom_pack__WEBPACK_IMPORTED_MODULE_1__/* .jdunpack */ .TE)(pkt.data, "u16 u16 u16");
    var frequency = 1000000 / period;
    var [volume] = this.volume.values();
    this.emit(BuzzerServer.PLAY_TONE, {
      frequency,
      duration,
      volume
    });
  };

  return BuzzerServer;
}(_jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);

BuzzerServer.PLAY_TONE = "playTone";


/***/ }),

/***/ 41577:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZP": function() { return /* binding */ HIDKeyboardServer; },
/* harmony export */   "wl": function() { return /* binding */ selectors; },
/* harmony export */   "db": function() { return /* binding */ modifierCodes; },
/* harmony export */   "OJ": function() { return /* binding */ renderKeyboardKey; }
/* harmony export */ });
/* unused harmony export reverseSelectors */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94578);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5800);






var HIDKeyboardServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(HIDKeyboardServer, _JDServiceServer);

  function HIDKeyboardServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_HID_KEYBOARD */ .Hg9, options) || this;

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardCmd.Clear */ .Fnq.Clear, _this.handleClear.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardCmd.Key */ .Fnq.Key, _this.handleKey.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  var _proto = HIDKeyboardServer.prototype;

  _proto.handleKey = function handleKey(pkt) {
    var [rest] = pkt.jdunpack("r: u16 u8 u8");
    this._lastKey = rest;
    this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
  };

  _proto.handleClear = function handleClear() {
    if (this._lastKey) {
      this._lastKey = undefined;
      this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
    }
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(HIDKeyboardServer, [{
    key: "lastKey",
    get: function get() {
      return this._lastKey;
    }
  }]);

  return HIDKeyboardServer;
}(_jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
/**
 * @internal
 */



var selectors = {
  a: 0x04,
  b: 0x05,
  c: 0x06,
  d: 0x07,
  e: 0x08,
  f: 0x09,
  g: 0x0a,
  h: 0x0b,
  i: 0x0c,
  j: 0x0d,
  k: 0x0e,
  l: 0x0f,
  m: 0x10,
  n: 0x11,
  o: 0x12,
  p: 0x13,
  q: 0x14,
  r: 0x15,
  s: 0x16,
  t: 0x17,
  u: 0x18,
  v: 0x19,
  w: 0x1a,
  x: 0x1b,
  y: 0x1c,
  z: 0x1d,
  "1": 0x1e,
  "2": 0x1f,
  "3": 0x20,
  "4": 0x21,
  "5": 0x22,
  "6": 0x23,
  "7": 0x24,
  "8": 0x25,
  "9": 0x26,
  "0": 0x27,
  "!": 0x1e,
  "@": 0x1f,
  "#": 0x20,
  $: 0x21,
  "%": 0x22,
  "^": 0x23,
  "&": 0x24,
  "*": 0x25,
  "(": 0x26,
  ")": 0x27,
  enter: 0x28,
  escape: 0x29,
  backspace: 0x2a,
  tab: 0x2b,
  space: 0x2c,
  " ": 0x2c,
  "-": 0x2d,
  _: 0x2d,
  "=": 0x2e,
  "+": 0x2e,
  "[": 0x2f,
  "{": 0x2f,
  "]": 0x30,
  "}": 0x30,
  "\\": 0x31,
  "|": 0x31,
  // non-US #
  "~": 0x32,
  ";": 0x33,
  ":": 0x33,
  "'": 0x34,
  '"': 0x34,
  "`": 0x35,
  ",": 0x36,
  //"<": 0x37,
  ".": 0x37,
  //">": 0x37,
  "/": 0x38,
  "?": 0x38,
  capslock: 0x39,
  f1: 0x3a,
  f2: 0x3b,
  f3: 0x3c,
  f4: 0x3d,
  f5: 0x3e,
  f6: 0x3f,
  f7: 0x40,
  f8: 0x41,
  f9: 0x42,
  f10: 0x43,
  f11: 0x44,
  f12: 0x45,
  printscreen: 0x46,
  scrolllock: 0x47,
  pause: 0x48,
  insert: 0x49,
  home: 0x4a,
  pageup: 0x4b,
  delete: 0x4c,
  end: 0x4d,
  pagedown: 0x4e,
  arrowright: 0x4f,
  arrowleft: 0x50,
  arrowdown: 0x51,
  arrowup: 0x52,
  numlock: 0x53,
  numpaddivide: 0x54,
  numpadmultiply: 0x55,
  numpadsubstract: 0x56,
  numpadadd: 0x57,
  numpadenter: 0x58,
  numpad1: 0x59,
  numpad2: 0x5a,
  numpad3: 0x5b,
  numpad4: 0x5c,
  numpad5: 0x5d,
  numpad6: 0x5e,
  numpad7: 0x5f,
  numpad8: 0x60,
  numpad9: 0x61,
  numpad0: 0x62,
  numpaddecimal: 0x63,
  numpadequal: 0x67,
  f13: 0x68,
  f14: 0x69,
  f15: 0x6a,
  f16: 0x6b,
  f17: 0x6c,
  f18: 0x6d,
  f19: 0x6e,
  f20: 0x6f,
  f21: 0x70,
  f22: 0x71,
  f23: 0x72,
  f24: 0x73,
  execute: 0x74,
  help: 0x75,
  contextmenu: 0x76,
  select: 0x77,
  stop: 0x78,
  again: 0x79,
  undo: 0x7a,
  cut: 0x7b,
  copy: 0x7c,
  paste: 0x7d,
  find: 0x7e,
  mute: 0x7f,
  volumeup: 0x80,
  volumedown: 0x81,
  numpadcomma: 0x85
};
/**
 * @internal
 */

var reverseSelectors = Object.keys(selectors).reduce((r, key) => {
  if (!r[selectors[key]]) r[selectors[key]] = key;
  return r;
}, {});
/**
 * @internal
 */

var modifierCodes = {
  controlleft: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.LeftControl */ .Q2Q.LeftControl,
  altleft: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.LeftAlt */ .Q2Q.LeftAlt,
  shiftleft: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.LeftShift */ .Q2Q.LeftShift,
  metaleft: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.LeftGUI */ .Q2Q.LeftGUI,
  controlright: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.RightControl */ .Q2Q.RightControl,
  altright: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.RightAlt */ .Q2Q.RightAlt,
  shiftright: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.RightShift */ .Q2Q.RightShift,
  metaright: _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidKeyboardModifiers.RightGUI */ .Q2Q.RightGUI
};
/**
 * @internal
 */

function renderKeyboardKey(selector, modifiers, pretty) {
  var flags = pretty ? ["Ctrl", "Shift", "Alt", "Cmd", "Ctrl Right", "Shift Right", "AltRight", "Cmd Right"] : ["{controlleft}", "{shiftleft}", "{altleft}", "{metaleft}", "{controlright}", "{shiftright}", "{altright}", "{metaright}"];
  var sep = pretty ? " + " : " ";
  var values = [];
  flags.forEach((flag, i) => {
    if (modifiers & 1 << i) {
      values.push(flag);
    }
  });
  var sel = reverseSelectors[selector];
  if (sel !== undefined) values.push(pretty ? sel.toUpperCase() : !pretty && sel.length > 1 ? "{" + sel + "}" : sel);
  var value = values.filter(v => !!v).join(sep);
  return value;
}

/***/ }),

/***/ 72191:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "z": function() { return /* binding */ renderHidMouseButtons; },
/* harmony export */   "Z": function() { return /* binding */ HIDMouseServer; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94578);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5800);





/**
 * @internal
 */

function renderHidMouseButtons(buttons) {
  var btns = [buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseButton.Left */ .chA.Left ? "left" : "", buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseButton.Right */ .chA.Right ? "right" : "", buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseButton.Middle */ .chA.Middle ? "middle" : ""].filter(b => !!b).join(", ");
  return btns;
}

var HIDMouseServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(HIDMouseServer, _JDServiceServer);

  function HIDMouseServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_HID_MOUSE */ .Eef, options) || this;

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseCmd.Move */ .pvv.Move, _this.handleMove.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseCmd.SetButton */ .pvv.SetButton, _this.handleSetButton.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseCmd.Wheel */ .pvv.Wheel, _this.handleWheel.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  var _proto = HIDMouseServer.prototype;

  _proto.setLastCommand = function setLastCommand(s) {
    if (this._lastCommand !== s) {
      this._lastCommand = s;
      this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
    }
  };

  _proto.handleMove = function handleMove(pkt) {
    var [dx, dy, time] = pkt.jdunpack("i16 i16 u16");
    this.setLastCommand("move " + dx + " " + dy + " " + time);
  };

  _proto.handleSetButton = function handleSetButton(pkt) {
    var [buttons, event] = pkt.jdunpack("u16 u8");
    var btns = renderHidMouseButtons(buttons);
    this.setLastCommand("set buttons " + (btns || "?") + " " + (_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .HidMouseButtonEvent */ .A9D[event] || "?").toLocaleLowerCase());
  };

  _proto.handleWheel = function handleWheel(pkt) {
    var [dy, time] = pkt.jdunpack("i16 u16");
    this.setLastCommand("wheel " + dy + " " + time);
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(HIDMouseServer, [{
    key: "lastCommand",
    get: function get() {
      return this._lastCommand;
    }
  }]);

  return HIDMouseServer;
}(_jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);



/***/ }),

/***/ 26708:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ef": function() { return /* binding */ JOYSTICK_DPAD_BUTTONS; },
/* harmony export */   "f8": function() { return /* binding */ JOYSTICK_ARCADE_BUTTONS; },
/* harmony export */   "YJ": function() { return /* binding */ JOYSTICK_DPAD_AB_BUTTONS; },
/* harmony export */   "Jx": function() { return /* binding */ JOYSTICK_GAMEPAD_EXTRA_BUTTONS; },
/* harmony export */   "ZP": function() { return /* binding */ JoystickServer; }
/* harmony export */ });
/* unused harmony export JOYSTICK_DPAD_A_BUTTONS */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94578);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jdom_pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91635);
/* harmony import */ var _sensorserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(85863);






/**
 * @internal
 */

var JOYSTICK_DPAD_BUTTONS = _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Left */ .xC.Left | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Right */ .xC.Right | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Up */ .xC.Up | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Down */ .xC.Down;
/**
 * @internal
 */

var JOYSTICK_ARCADE_BUTTONS = JOYSTICK_DPAD_BUTTONS | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.A */ .xC.A | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.B */ .xC.B | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Menu */ .xC.Menu | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Select */ .xC.Select | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Exit */ .xC.Exit;
/**
 * @internal
 */

var JOYSTICK_DPAD_A_BUTTONS = JOYSTICK_DPAD_BUTTONS | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.A */ .xC.A;
/**
 * @internal
 */

var JOYSTICK_DPAD_AB_BUTTONS = JOYSTICK_DPAD_A_BUTTONS | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.B */ .xC.B;
/**
 * @internal
 */

var JOYSTICK_GAMEPAD_EXTRA_BUTTONS = _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.B */ .xC.B | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Select */ .xC.Select | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Menu */ .xC.Menu | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Reset */ .xC.Reset; // https://w3c.github.io/gamepad/#remapping

var standardGamepadMapping = [[_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Left */ .xC.Left, 14], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Right */ .xC.Right, 15], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Up */ .xC.Up, 12], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Down */ .xC.Down, 13], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.A */ .xC.A, 0], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.B */ .xC.B, 1], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Select */ .xC.Select, 8], [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Menu */ .xC.Menu, 9]];

var JoystickServer = /*#__PURE__*/function (_SensorServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(JoystickServer, _SensorServer);

  function JoystickServer(options) {
    var _this;

    _this = _SensorServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_JOYSTICK */ .vRO, {
      instanceName: options === null || options === void 0 ? void 0 : options.instanceName,
      readingValues: [0, 0, 0],
      streamingInterval: 50
    }) || this;
    var {
      variant = _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickVariant.Thumb */ .BUi.Thumb,
      buttonsAvailable = 0
    } = options || {};
    _this.variant = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickReg.Variant */ .ztd.Variant, [variant]);
    _this.buttonsAvailable = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickReg.ButtonsAvailable */ .ztd.ButtonsAvailable, [buttonsAvailable]);
    return _this;
  }

  var _proto = JoystickServer.prototype;

  _proto.down = /*#__PURE__*/function () {
    var _down = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(function* (buttons) {
      var [currentButtons, x, y] = this.reading.values();
      var newButtons = currentButtons | buttons;
      yield this.updateReading(newButtons, x, y);
    });

    function down(_x) {
      return _down.apply(this, arguments);
    }

    return down;
  }();

  _proto.up = /*#__PURE__*/function () {
    var _up = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(function* (buttons) {
      var [currentButtons, x, y] = this.reading.values();
      var newButtons = currentButtons & ~buttons;
      yield this.updateReading(newButtons, x, y);
    });

    function up(_x2) {
      return _up.apply(this, arguments);
    }

    return up;
  }();

  _proto.updateDirection = /*#__PURE__*/function () {
    var _updateDirection = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(function* (x, y) {
      var [button] = this.reading.values();
      yield this.updateReading(button, x, y);
    });

    function updateDirection(_x3, _x4) {
      return _updateDirection.apply(this, arguments);
    }

    return updateDirection;
  }()
  /**
   * Read the state of a browser gamepad and apply it to the sensor
   * @param gamepad
   */
  ;

  _proto.update =
  /*#__PURE__*/
  function () {
    var _update = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(function* (gamepad) {
      var {
        buttons,
        axes
      } = gamepad;
      var [buttonsAvailable] = this.buttonsAvailable.values();
      var newButtons = 0;

      for (var [b, id] of standardGamepadMapping) {
        if ((b & buttonsAvailable) == b && !!buttons[id].pressed) {
          newButtons |= b;
        }
      }

      var newX = 0,
          newY = 0;

      if (!this.isDigital) {
        var [axeLeftRight, axeUpDown] = axes;
        newX = axeLeftRight;
        newY = axeUpDown;
      }

      yield this.updateReading(newButtons, newX, newY);
    });

    function update(_x5) {
      return _update.apply(this, arguments);
    }

    return update;
  }();

  _proto.updateReading = /*#__PURE__*/function () {
    var _updateReading = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(function* (buttons, x, y) {
      var [oldButtons] = this.reading.values();

      if (this.isDigital) {
        x = buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Left */ .xC.Left ? -1 : buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Right */ .xC.Right ? 1 : 0;
        y = buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Up */ .xC.Up ? -1 : buttons & _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Down */ .xC.Down ? 1 : 0;
      } else {
        var threshold = -1;
        if (x < -threshold) buttons |= _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Left */ .xC.Left;else if (x > threshold) buttons |= _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Right */ .xC.Right;else buttons &= ~(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Left */ .xC.Left | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Right */ .xC.Right);
        if (y < -threshold) buttons |= _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Up */ .xC.Up;else if (y > threshold) buttons |= _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Down */ .xC.Down;else buttons &= ~(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Up */ .xC.Up | _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickButtons.Down */ .xC.Down);
      }

      this.reading.setValues([buttons, x, y]);

      if (buttons !== oldButtons) {
        yield this.sendEvent(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .JoystickEvent.ButtonsChanged */ .$42.ButtonsChanged, (0,_jdom_pack__WEBPACK_IMPORTED_MODULE_1__/* .jdpack */ .AV)("u32", [buttons]));
      }
    });

    function updateReading(_x6, _x7, _x8) {
      return _updateReading.apply(this, arguments);
    }

    return updateReading;
  }();

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(JoystickServer, [{
    key: "isDigital",
    get: function get() {
      var [value] = this.buttonsAvailable.values();
      return (value & JOYSTICK_DPAD_BUTTONS) === JOYSTICK_DPAD_BUTTONS;
    }
  }]);

  return JoystickServer;
}(_sensorserver__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);



/***/ }),

/***/ 30524:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ LedPixelServer; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94578);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(23795);
/* harmony import */ var _jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5800);
/* harmony import */ var _jdom_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);







var PROG_EOF = 0;
var PROG_CMD = 1;
var PROG_NUMBER = 3;
var PROG_COLOR_BLOCK = 4;

function rgb(r, g, b) {
  return {
    r,
    g,
    b
  };
}

function hsv(hue, sat, val) {
  // scale down to 0..192
  hue = hue * 192 >> 8; // reference: based on FastLED's hsv2rgb rainbow algorithm
  // [https://github.com/FastLED/FastLED](MIT)

  var invsat = 255 - sat;
  var brightness_floor = val * invsat >> 8;
  var color_amplitude = val - brightness_floor;
  var section = hue / 0x40 >> 0; // [0..2]

  var offset = hue % 0x40 >> 0; // [0..63]

  var rampup = offset;
  var rampdown = 0x40 - 1 - offset;
  var rampup_amp_adj = rampup * color_amplitude / (256 / 4) >> 0;
  var rampdown_amp_adj = rampdown * color_amplitude / (256 / 4) >> 0;
  var rampup_adj_with_floor = rampup_amp_adj + brightness_floor;
  var rampdown_adj_with_floor = rampdown_amp_adj + brightness_floor;
  var r = 0,
      g = 0,
      b = 0;

  if (section) {
    if (section == 1) {
      // section 1: 0x40..0x7F
      r = brightness_floor;
      g = rampdown_adj_with_floor;
      b = rampup_adj_with_floor;
    } else {
      // section 2; 0x80..0xBF
      r = rampup_adj_with_floor;
      g = brightness_floor;
      b = rampdown_adj_with_floor;
    }
  } else {
    // section 0: 0x00..0x3F
    r = rampdown_adj_with_floor;
    g = rampup_adj_with_floor;
    b = brightness_floor;
  }

  return rgb(r, g, b);
}

function mulcol(c, m) {
  var c2 = c * m >> 7;
  if (m < 128 && c == c2) c2--;else if (m > 128 && c == c2) c2++;
  return c2;
}

function clamp(c) {
  if (c < 0) return 0;
  if (c > 255) return 255;
  return c;
}

function SCALE0(c, i) {
  return (c & 0xff) * (1 + (i & 0xff)) >> 8;
}

var LedPixelServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(LedPixelServer, _JDServiceServer);

  function LedPixelServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_LED_PIXEL */ .zEX, options) || this;
    _this.pxbuffer = new Uint8Array(0);
    _this.prog_mode = 0;
    _this.prog_tmpmode = 0;
    _this.range_start = 0;
    _this.range_end = 0;
    _this.range_len = 0;
    _this.range_ptr = 0;
    _this.prog_ptr = 0;
    _this.prog_size = 0;
    _this.prog_data = new Uint8Array(0);
    _this.dirty = true;
    _this.inited = false;
    _this.power_enable = false;
    var {
      numColumns,
      maxPower = 200,
      maxPixels = 300,
      numPixels = 15
    } = options || {};
    _this.brightness = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.Brightness */ .k9u.Brightness, [15]);
    _this.actualBrightness = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.ActualBrightness */ .k9u.ActualBrightness, [15]);
    _this.lightType = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.LightType */ .k9u.LightType, [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelLightType.WS2812B_GRB */ .lFE.WS2812B_GRB]);
    _this.numPixels = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.NumPixels */ .k9u.NumPixels, [numPixels]);
    _this.maxPower = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.MaxPower */ .k9u.MaxPower, [maxPower]);
    _this.maxPixels = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.MaxPixels */ .k9u.MaxPixels, [maxPixels]);
    _this.variant = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.Variant */ .k9u.Variant, [_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelVariant.Strip */ .dQg.Strip]);
    _this.numRepeats = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.NumRepeats */ .k9u.NumRepeats, [0]);
    if (numColumns !== undefined) _this.numColumns = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelReg.NumColumns */ .k9u.NumColumns, [numColumns]);

    _this.brightness.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver, () => _this.intensity = _this.requested_intensity);

    _this.numPixels.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver, _this.allocRxBuffer.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    _this.maxPixels.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver, _this.allocRxBuffer.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .LedPixelCmd.Run */ .yB$.Run, _this.handleRun.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    _this.allocRxBuffer();

    return _this;
  }
  /**
   * Gets an array of RGB color numbers
   */


  var _proto = LedPixelServer.prototype;

  _proto.jd_power_enable = function jd_power_enable(value) {
    this.power_enable = value;
  };

  _proto.is_enabled = function is_enabled() {
    return this.numpixels > 0 && this.requested_intensity > 0;
  };

  _proto.allocRxBuffer = function allocRxBuffer() {
    var {
      numpixels = 0,
      maxpixels,
      pxbuffer
    } = this;
    if (maxpixels !== undefined && numpixels > maxpixels) this.numPixels.setValues([this.maxpixels]);
    var n = numpixels * 3; // don't need to prealloc here

    if (pxbuffer || n !== pxbuffer.length) this.pxbuffer = new Uint8Array(n);
  };

  _proto.reset_range = function reset_range() {
    this.range_ptr = this.range_start;
  };

  _proto.set_next = function set_next(c) {
    if (this.range_ptr >= this.range_end) return false;
    var p = this.pxbuffer;
    var pi = this.range_ptr++ * 3; // fast path

    if (this.prog_tmpmode == _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_MODE_REPLACE */ ._I) {
      p[pi + 0] = c.r;
      p[pi + 1] = c.g;
      p[pi + 2] = c.b;
      return true;
    }

    var r = p[pi + 0],
        g = p[pi + 1],
        b = p[pi + 2];

    switch (this.prog_tmpmode) {
      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_MODE_ADD_RGB */ .xI:
        r += c.r;
        g += c.g;
        b += c.b;
        break;

      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_MODE_SUBTRACT_RGB */ .uZ:
        r -= c.r;
        g -= c.g;
        b -= c.b;
        break;

      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_MODE_MULTIPLY_RGB */ .Qj:
        r = mulcol(r, c.r);
        g = mulcol(g, c.g);
        b = mulcol(b, c.b);
        break;
    }

    p[pi + 0] = clamp(r);
    p[pi + 1] = clamp(g);
    p[pi + 2] = clamp(b);
    return true;
  };

  _proto.limit_intensity = function limit_intensity() {
    var {
      numpixels,
      requested_intensity,
      maxpower,
      pxbuffer
    } = this;
    var n = numpixels * 3;
    var prev_intensity = this.intensity;
    var intensity = this.intensity;
    intensity += 1 + (intensity >> 5);
    if (requested_intensity !== undefined && intensity > requested_intensity) intensity = requested_intensity;
    var current_full = 0;
    var current = 0;
    var current_prev = 0;
    var di = 0;

    while (n--) {
      var v = pxbuffer[di++];
      current += SCALE0(v, intensity);
      current_prev += SCALE0(v, prev_intensity);
      current_full += v;
    } // 46uA per step of LED


    current *= 46;
    current_prev *= 46;
    current_full *= 46; // 14mA is the chip at 48MHz, 930uA per LED is static

    var base_current = 14000 + 930 * numpixels;
    var current_limit = maxpower * 1000 - base_current;

    if (current <= current_limit) {
      this.intensity = intensity; // LOG("curr: %dmA; not limiting %d", (base_current + current) / 1000, state->intensity);

      return;
    }

    if (current_prev <= current_limit) {
      return; // no change needed
    }

    var inten = current_limit / (current_full >> 8) - 1;
    if (inten < 0) inten = 0;
    this.intensity = inten;
  };

  _proto.prog_fetch_color = function prog_fetch_color() {
    var ptr = this.prog_ptr;
    if (ptr + 3 > this.prog_size) return rgb(0, 0, 0);
    var d = this.prog_data;
    this.prog_ptr = ptr + 3;
    return rgb(d[ptr + 0], d[ptr + 1], d[ptr + 2]);
  };

  _proto.prog_fetch = function prog_fetch() {
    if (this.prog_ptr >= this.prog_size) return {
      prog: PROG_EOF
    };
    var d = this.prog_data;
    var c = d[this.prog_ptr++];

    if (!(c & 0x80)) {
      return {
        dst: c,
        prog: PROG_NUMBER
      };
    } else if ((c & 0xc0) == 0x80) {
      return {
        dst: (c & 0x3f) << 8 | d[this.prog_ptr++],
        prog: PROG_NUMBER
      };
    } else switch (c) {
      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_COL1 */ .oO:
        return {
          dst: 1,
          prog: PROG_COLOR_BLOCK
        };

      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_COL2 */ .W9:
        return {
          dst: 2,
          prog: PROG_COLOR_BLOCK
        };

      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_COL3 */ .Z3:
        return {
          dst: 3,
          prog: PROG_COLOR_BLOCK
        };

      case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_COLN */ .Lp:
        return {
          dst: d[this.prog_ptr++],
          prog: PROG_COLOR_BLOCK
        };

      default:
        return {
          dst: c,
          prog: PROG_CMD
        };
    }
  };

  _proto.prog_fetch_num = function prog_fetch_num(defl) {
    var prev = this.prog_ptr;
    var fr = this.prog_fetch();
    var {
      dst: res,
      prog: r
    } = fr;
    if (r == PROG_NUMBER) return res;else {
      this.prog_ptr = prev; // rollback

      return defl;
    }
  };

  _proto.prog_fetch_cmd = function prog_fetch_cmd() {
    var cmd; // skip until there's a command

    for (;;) {
      var c = this.prog_fetch();

      switch (c.prog) {
        case PROG_CMD:
          return c.dst;

        case PROG_COLOR_BLOCK:
          while (cmd--) {
            this.prog_fetch_color();
          }

          break;

        case PROG_EOF:
          return 0;
      }
    }
  };

  _proto.prog_set = function prog_set(len) {
    this.reset_range();
    var start = this.prog_ptr;

    for (;;) {
      this.prog_ptr = start;
      var ok = false;

      for (var i = 0; i < len; ++i) {
        // don't break the loop immediately if !ok - make sure the prog counter advances
        ok = this.set_next(this.prog_fetch_color());
      }

      if (!ok) break;
    }
  };

  _proto.prog_fade = function prog_fade(len, usehsv) {
    if (len < 2) {
      this.prog_set(len);
      return;
    }

    var colidx = 0;
    var endp = this.prog_ptr + 3 * len;
    var col0 = this.prog_fetch_color();
    var col1 = this.prog_fetch_color();
    var colstep = (len - 1 << 16) / this.range_len;
    var colpos = 0;
    this.reset_range();

    for (;;) {
      while (colidx < colpos >> 16) {
        colidx++;
        col0 = col1;
        col1 = this.prog_fetch_color();
      }

      var fade1 = colpos & 0xffff;
      var fade0 = 0xffff - fade1;
      var col = rgb(col0.r * fade0 + col1.r * fade1 + 0x8000 >> 16, col0.g * fade0 + col1.g * fade1 + 0x8000 >> 16, col0.b * fade0 + col1.b * fade1 + 0x8000 >> 16);
      if (!this.set_next(usehsv ? hsv(col.r, col.g, col.b) : col)) break;
      colpos += colstep;
    }

    this.prog_ptr = endp;
  };

  _proto.prog_rot = function prog_rot(shift) {
    if (shift <= 0 || shift >= this.range_len) return;
    var range_start = this.range_start;
    var range_end = this.range_end;
    var buf = this.pxbuffer;
    var first = range_start * 3;
    var middle = (range_start + shift) * 3;
    var last = range_end * 3;
    var next = middle;

    while (first != next) {
      var tmp = buf[first];
      var tmp1 = buf[first + 1];
      var tmp2 = buf[first + 2];
      buf[first] = buf[next];
      buf[first + 1] = buf[next + 1];
      buf[first + 2] = buf[next + 2];
      buf[next] = tmp;
      buf[next + 1] = tmp1;
      buf[next + 2] = tmp2;
      first += 3;
      next += 3;
      if (next === last) next = middle;else if (first === middle) middle = next;
    }
  };

  _proto.fetch_mode = function fetch_mode() {
    var m = this.prog_fetch_num(0);
    if (m > _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_MODE_LAST */ .wW) return 0;
    return m;
  };

  _proto.prog_process = function prog_process() {
    var data = this.prog_data;
    if (this.prog_ptr >= this.prog_size) return false; // check that the program wasn't restarted
    // concurrently

    while (data === this.prog_data) {
      var cmd = this.prog_fetch_cmd();
      if (!cmd) break;

      if (cmd == _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_SHOW */ .Xo) {
        var k = this.prog_fetch_num(50);
        this.dirty = true;
        setTimeout(this.animationFrame.bind(this), k); // check data is still current;

        return data === this.prog_data;
      }

      switch (cmd) {
        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_COL1_SET */ .gd:
          this.range_ptr = this.range_start + this.prog_fetch_num(0);
          this.set_next(this.prog_fetch_color());
          break;

        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_FADE */ .r$:
        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_FADE_HSV */ .zy:
        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_SET_ALL */ .Ve:
          {
            var {
              dst: len,
              prog: pcmd
            } = this.prog_fetch();
            if (pcmd != PROG_COLOR_BLOCK || len == 0) continue; // bailout

            if (cmd == _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_SET_ALL */ .Ve) this.prog_set(len);else this.prog_fade(len, cmd == _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_FADE_HSV */ .zy);
            break;
          }

        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_ROTATE_BACK */ .fq:
        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_ROTATE_FWD */ .ln:
          {
            var _k = this.prog_fetch_num(1);

            var _len = this.range_len;
            if (_len == 0) continue;

            while (_k >= _len) {
              _k -= _len;
            }

            if (cmd == _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_ROTATE_FWD */ .ln && _k != 0) _k = _len - _k;
            this.prog_rot(_k);
            break;
          }

        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_MODE1 */ .Aw:
          this.prog_tmpmode = this.fetch_mode();
          break;

        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_MODE */ .T:
          this.prog_mode = this.fetch_mode();
          break;

        case _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_RANGE */ .ht:
          {
            var start = this.prog_fetch_num(0);

            var _len2 = this.prog_fetch_num(this.numpixels);

            var numpixels = this.numpixels;
            if (start > numpixels) start = numpixels;
            var end = start + _len2;
            if (end > numpixels) end = numpixels;
            this.range_start = start;
            this.range_end = end;
            this.range_len = end - start;
            break;
          }
      }

      if (cmd != _jdom_lightconstants__WEBPACK_IMPORTED_MODULE_5__/* .LIGHT_PROG_MODE1 */ .Aw) this.prog_tmpmode = this.prog_mode;
    }

    return false;
  }
  /**
   * Perform an animation step
   */
  ;

  _proto.animationFrame = function animationFrame() {
    if (!this.prog_process()) return; // concurrently udpated

    if (!this.is_enabled()) return;

    if (this.dirty) {
      this.dirty = false;

      if ((0,_jdom_utils__WEBPACK_IMPORTED_MODULE_2__/* .isBufferEmpty */ .pL)(this.pxbuffer)) {
        this.jd_power_enable(false);
        return;
      } else {
        this.jd_power_enable(true);
      }

      this.limit_intensity(); // we're ready to render...

      this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .RENDER */ .kq7);
    }
  };

  _proto.sync_config = function sync_config() {
    if (!this.is_enabled()) {
      this.jd_power_enable(false);
      return;
    }

    if (!this.inited) {
      this.inited = true; // initialize?
      // px_init(this.lighttype);
    }

    this.jd_power_enable(true);
  };

  _proto.handleRun = function handleRun(pkt) {
    this.prog_data = pkt.data;
    this.prog_size = this.prog_data.length;
    this.prog_ptr = 0;
    this.range_start = 0;
    this.range_end = this.range_len = this.numpixels;
    this.prog_tmpmode = this.prog_mode = 0;
    this.sync_config();
    this.animationFrame();
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(LedPixelServer, [{
    key: "colors",
    get: function get() {
      return this.pxbuffer;
    }
  }, {
    key: "maxpower",
    get: function get() {
      var [r] = this.maxPower.values() || [200];
      return r;
    }
  }, {
    key: "maxpixels",
    get: function get() {
      var [r] = this.maxPixels.values() || [];
      return r;
    }
  }, {
    key: "numpixels",
    get: function get() {
      var [r] = this.numPixels.values() || [0];
      return r;
    }
  }, {
    key: "requested_intensity",
    get: function get() {
      var [r] = this.brightness.values() || [0];
      return r;
    }
  }, {
    key: "intensity",
    get: function get() {
      var [r] = this.actualBrightness.values() || [0];
      return r;
    },
    set: function set(v) {
      this.actualBrightness.setValues([v]);
    }
  }]);

  return LedPixelServer;
}(_jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);



/***/ }),

/***/ 83090:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ RealTimeClockServer; }
/* harmony export */ });
/* unused harmony export dateToClock */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94578);
/* harmony import */ var _sensorserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85863);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jdom_packet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57683);






/**
 * @internal
 */

/**
 * @internal
 */
function dateToClock(n) {
  var year = n.getFullYear();
  var month = n.getMonth() + 1;
  var dayOfMonth = n.getDate();
  var dayOfWeek = n.getDay();
  var hour = n.getHours();
  var min = n.getMinutes();
  var sec = n.getSeconds();
  return [year, month, dayOfMonth, dayOfWeek, hour, min, sec];
}

var RealTimeClockServer = /*#__PURE__*/function (_SensorServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(RealTimeClockServer, _SensorServer);

  function RealTimeClockServer() {
    var _this;

    _this = _SensorServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SRV_REAL_TIME_CLOCK */ .XXX, {
      readingValues: dateToClock(new Date()),
      variant: _jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .RealTimeClockVariant.Computer */ .rSD.Computer,
      streamingInterval: 1000
    }) || this;
    _this.lastSecond = 0;
    _this.drift = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .RealTimeClockReg.Drift */ .AEe.Drift, [0]);
    _this.precision = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .RealTimeClockReg.Precision */ .AEe.Precision, [0]);

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .RealTimeClockCmd.SetTime */ .BL8.SetTime, _this.handleSetTime.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    _this.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REFRESH */ .RGM, _this.refreshTime.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  RealTimeClockServer.syncTime = /*#__PURE__*/function () {
    var _syncTime = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(function* (bus) {
      var values = dateToClock(new Date());
      var pkt = _jdom_packet__WEBPACK_IMPORTED_MODULE_2__/* ["default"].jdpacked */ .Z.jdpacked(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .RealTimeClockCmd.SetTime */ .BL8.SetTime, "u16 u8 u8 u8 u8 u8 u8", values);
      yield pkt.sendAsMultiCommandAsync(bus, _jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SRV_REAL_TIME_CLOCK */ .XXX);
    });

    function syncTime(_x) {
      return _syncTime.apply(this, arguments);
    }

    return syncTime;
  }();

  var _proto = RealTimeClockServer.prototype;

  _proto.handleSetTime = function handleSetTime(pkt) {
    console.debug("set time", {
      pkt
    });
  };

  _proto.refreshTime = function refreshTime() {
    var d = new Date();
    var s = d.getSeconds();

    if (s !== this.lastSecond) {
      var r = dateToClock(d);
      this.reading.setValues(r);
      this.lastSecond = s;
    }
  };

  return RealTimeClockServer;
}(_sensorserver__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z);



/***/ }),

/***/ 85863:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ SensorServer; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94578);
/* harmony import */ var _jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73512);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5800);





/**
 * Creation options for sensor servers
 * @category Servers
 * @internal
 */

var SensorServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(SensorServer, _JDServiceServer);

  function SensorServer(serviceClass, options) {
    var _this;

    _this = _JDServiceServer.call(this, serviceClass, options) || this;
    _this.lastStream = 0;
    _this.lastErrorReadingChanged = false;
    _this.serviceClass = serviceClass;
    var {
      readingValues,
      streamingInterval,
      preferredStreamingInterval,
      readingError
    } = options || {};
    _this.reading = _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.Reading */ .ZJq.Reading, readingValues);
    _this.streamingSamples = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SensorReg.StreamingSamples */ .q9t.StreamingSamples);
    _this.streamingInterval = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SensorReg.StreamingInterval */ .q9t.StreamingInterval, [streamingInterval || preferredStreamingInterval || _this.reading.specification.preferredInterval || _jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .STREAMING_DEFAULT_INTERVAL */ .cXd]);
    if (preferredStreamingInterval !== undefined) _this.preferredStreamingInterval = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SensorReg.StreamingPreferredInterval */ .q9t.StreamingPreferredInterval, [preferredStreamingInterval]);

    if (readingError !== undefined) {
      _this.readingError = _this.addRegister(_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.ReadingError */ .ZJq.ReadingError, readingError);
      _this.reading.errorRegister = _this.readingError;

      _this.readingError.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver, () => _this.lastErrorReadingChanged = true);
    }

    _this.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REFRESH */ .RGM, _this.refreshRegisters.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  var _proto = SensorServer.prototype;

  _proto.refreshRegisters = function refreshRegisters() {
    var _this$streamingInterv, _this$streamingInterv2, _this$preferredStream, _this$preferredStream2;

    var [samples] = this.streamingSamples.values();
    if (samples <= 0 || !this.reading.data) return; // is it time to stream?

    var interval = (_this$streamingInterv = this.streamingInterval) === null || _this$streamingInterv === void 0 ? void 0 : (_this$streamingInterv2 = _this$streamingInterv.values()) === null || _this$streamingInterv2 === void 0 ? void 0 : _this$streamingInterv2[0];
    if (interval === undefined) interval = (_this$preferredStream = this.preferredStreamingInterval) === null || _this$preferredStream === void 0 ? void 0 : (_this$preferredStream2 = _this$preferredStream.values()) === null || _this$preferredStream2 === void 0 ? void 0 : _this$preferredStream2[0];
    if (interval === undefined) interval = this.reading.specification.preferredInterval;
    if (interval === undefined) interval = _jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .STREAMING_DEFAULT_INTERVAL */ .cXd;
    var now = this.device.bus.timestamp;

    if (now - this.lastStream > interval) {
      // let's stream a value!
      this.lastStream = now;
      this.streamingSamples.setValues([samples - 1]);
      this.reading.sendGetAsync();
      this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .READING_SENT */ .UJt); // if the error changed, send value as well.

      if (this.lastErrorReadingChanged) {
        var _this$readingError;

        (_this$readingError = this.readingError) === null || _this$readingError === void 0 ? void 0 : _this$readingError.sendGetAsync();
        this.lastErrorReadingChanged = false;
      }
    }
  };

  return SensorServer;
}(_jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);



/***/ }),

/***/ 50713:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "$": function() { return /* binding */ SG90_RESPONSE_SPEED; },
  "Q6": function() { return /* binding */ addServiceProvider; },
  "ZP": function() { return /* binding */ serviceProviderDefinitions; },
  "vd": function() { return /* binding */ serviceProviderDefinitionFromServiceClass; },
  "V6": function() { return /* binding */ startServiceProviderFromServiceClass; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/servers/serverserviceprovider.ts + 2 modules
var serverserviceprovider = __webpack_require__(55739);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/servers/protocoltestserver.ts
var protocoltestserver = __webpack_require__(8695);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/servers/serviceserver.ts
var serviceserver = __webpack_require__(5800);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(43144);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./jacdac-ts/src/servers/sensorserver.ts
var sensorserver = __webpack_require__(85863);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pack.ts
var pack = __webpack_require__(91635);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/buttonserver.ts







/**
 * Server implementation for the button service
 * @category Servers
 */

var ButtonServer = /*#__PURE__*/function (_SensorServer) {
  (0,inheritsLoose/* default */.Z)(ButtonServer, _SensorServer);

  function ButtonServer(instanceName, analog) {
    var _this;

    _this = _SensorServer.call(this, constants/* SRV_BUTTON */.XJR, {
      instanceName,
      readingValues: [ButtonServer.INACTIVE_VALUE],
      streamingInterval: 50
    }) || this;
    _this.analog = _this.addRegister(constants/* ButtonReg.Analog */.CP7.Analog, [!!analog]);

    _this.on(constants/* REFRESH */.RGM, _this.handleRefresh.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = ButtonServer.prototype;

  _proto.isActive = function isActive() {
    var _this$threshold, _this$threshold$value;

    // TODO: debouncing
    var [v] = this.reading.values();
    var t = ((_this$threshold = this.threshold) === null || _this$threshold === void 0 ? void 0 : (_this$threshold$value = _this$threshold.values()) === null || _this$threshold$value === void 0 ? void 0 : _this$threshold$value[0]) || 0.5;
    return v > t;
  };

  _proto.handleRefresh = /*#__PURE__*/function () {
    var _handleRefresh = (0,asyncToGenerator/* default */.Z)(function* () {
      var now = this.device.bus.timestamp;

      if (this.isActive()) {
        // down event
        if (this._downTime === undefined) {
          this._downTime = now;
          this._nextHold = this._downTime + ButtonServer.HOLD_TIME;
          yield this.sendEvent(constants/* ButtonEvent.Down */.XKP.Down); // hold
        } else if (now > this._nextHold) {
          var time = now - this._downTime;
          this._nextHold = this.device.bus.timestamp + ButtonServer.HOLD_TIME;
          yield this.sendEvent(constants/* ButtonEvent.Hold */.XKP.Hold, (0,pack/* jdpack */.AV)("u32", [time]));
        }
      } else {
        // up event
        if (this._downTime !== undefined) {
          var _time = now - this._downTime;

          this._downTime = undefined;
          this._nextHold = undefined;
          yield this.sendEvent(constants/* ButtonEvent.Up */.XKP.Up, (0,pack/* jdpack */.AV)("u32", [_time]));
        }
      }
    });

    function handleRefresh() {
      return _handleRefresh.apply(this, arguments);
    }

    return handleRefresh;
  }();

  _proto.down = /*#__PURE__*/function () {
    var _down = (0,asyncToGenerator/* default */.Z)(function* () {
      this.reading.setValues([ButtonServer.ACTIVE_VALUE]);
    });

    function down() {
      return _down.apply(this, arguments);
    }

    return down;
  }();

  _proto.up = /*#__PURE__*/function () {
    var _up = (0,asyncToGenerator/* default */.Z)(function* () {
      this.reading.setValues([ButtonServer.INACTIVE_VALUE]);
    });

    function up() {
      return _up.apply(this, arguments);
    }

    return up;
  }();

  (0,createClass/* default */.Z)(ButtonServer, [{
    key: "threshold",
    get: function get() {
      return this._threshold;
    },
    set: function set(value) {
      if (value !== this._threshold) {
        this._threshold = value;
        this.analog.setValues([!!this._threshold]);
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }]);

  return ButtonServer;
}(sensorserver/* default */.Z);

ButtonServer.HOLD_TIME = 500;
ButtonServer.INACTIVE_VALUE = 0;
ButtonServer.ACTIVE_VALUE = 1;

// EXTERNAL MODULE: ./jacdac-ts/src/servers/buzzerserver.ts
var buzzerserver = __webpack_require__(69589);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/characterscreenserver.ts





var CharacterScreenServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(CharacterScreenServer, _JDServiceServer);

  function CharacterScreenServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_CHARACTER_SCREEN */.IB4) || this;
    var {
      message = "",
      rows = 2,
      columns = 16,
      variant,
      textDirection,
      brightness = 100
    } = options || {};
    _this.message = _this.addRegister(constants/* CharacterScreenReg.Message */.OEJ.Message, [message]);
    _this.brightness = _this.addRegister(constants/* CharacterScreenReg.Brightness */.OEJ.Brightness, [brightness]);
    _this.rows = _this.addRegister(constants/* CharacterScreenReg.Rows */.OEJ.Rows, [rows]);
    _this.columns = _this.addRegister(constants/* CharacterScreenReg.Columns */.OEJ.Columns, [columns]);
    _this.variant = _this.addRegister(constants/* CharacterScreenReg.Variant */.OEJ.Variant, [variant || constants/* CharacterScreenVariant.LCD */.GLh.LCD]);
    _this.message = _this.addRegister(constants/* CharacterScreenReg.Message */.OEJ.Message, [""]);
    _this.textDirection = _this.addRegister(constants/* CharacterScreenReg.TextDirection */.OEJ.TextDirection, [textDirection || constants/* CharacterScreenTextDirection.LeftToRight */.mbk.LeftToRight]);

    _this.addCommand(constants/* CharacterScreenCmd.SetLine */.nWR.SetLine, _this.handleSetLine.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* CharacterScreenCmd.Clear */.nWR.Clear, _this.handleClear.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = CharacterScreenServer.prototype;

  _proto.handleClear = function handleClear() {
    this.message.setValues([""]);
  };

  _proto.handleSetLine = function handleSetLine(pkt) {
    var [line, lineMessage] = pkt.jdunpack("u16 s");
    var [rows] = this.rows.values();
    if (line >= rows) return;
    var [columns] = this.columns.values();
    var [message = ""] = this.message.values();
    var lines = message.split("\n");
    lines[line] = lineMessage.slice(0, columns); // clip as needed

    var newMessage = lines.map(l => l || "").join("\n");
    this.message.setValues([newMessage]);
  };

  return CharacterScreenServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/servers/joystickserver.ts
var joystickserver = __webpack_require__(26708);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/dotmatrixserver.ts





var DotMatrixServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(DotMatrixServer, _JDServiceServer);

  function DotMatrixServer(columns, rows, options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_DOT_MATRIX */.GDq) || this;
    var {
      brightness,
      variant
    } = options || {};
    _this.dots = _this.addRegister(constants/* DotMatrixReg.Dots */.v$D.Dots, [new Uint8Array(0)]);
    _this.rows = _this.addRegister(constants/* DotMatrixReg.Rows */.v$D.Rows, [rows]);
    _this.columns = _this.addRegister(constants/* DotMatrixReg.Columns */.v$D.Columns, [columns]);
    if (brightness !== undefined) _this.brightness = _this.addRegister(constants/* DotMatrixReg.Brightness */.v$D.Brightness, [128]);
    if (variant !== undefined) _this.variant = _this.addRegister(constants/* DotMatrixReg.Variant */.v$D.Variant, [variant]);
    _this.rows.skipBoundaryCheck = true;
    _this.rows.skipErrorInjection = true;
    if (variant === constants/* DotMatrixVariant.LED */.ozp.LED) _this.addRegister(constants/* SensorReg.StreamingPreferredInterval */.q9t.StreamingPreferredInterval, [50]);

    _this.rows.on(constants/* CHANGE */.Ver, _this.updateDotsBuffer.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.columns.on(constants/* CHANGE */.Ver, _this.updateDotsBuffer.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.updateDotsBuffer();

    return _this;
  }

  var _proto = DotMatrixServer.prototype;

  _proto.updateDotsBuffer = function updateDotsBuffer() {
    var _this$dots$data;

    // columns must be byte aligned
    var [rows] = this.rows.values();
    var [columns] = this.columns.values(); // there's probably a much smarter way to do this

    var columnspadded = columns + (8 - columns % 8); // total bits needed

    var n = rows * columnspadded;

    if (((_this$dots$data = this.dots.data) === null || _this$dots$data === void 0 ? void 0 : _this$dots$data.length) !== n) {
      this.dots.data = new Uint8Array(n);
      this.dots.emit(constants/* CHANGE */.Ver);
    }
  };

  return DotMatrixServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/servers/ledpixelserver.ts
var ledpixelserver = __webpack_require__(30524);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/matrixkeypadserver.ts





var MatrixKeypadServer = /*#__PURE__*/function (_SensorServer) {
  (0,inheritsLoose/* default */.Z)(MatrixKeypadServer, _SensorServer);

  function MatrixKeypadServer(columns, rows, labels) {
    var _this;

    _this = _SensorServer.call(this, constants/* SRV_MATRIX_KEYPAD */.UB9, {
      readingValues: [[]]
    }) || this;
    _this.columns = _this.addRegister(constants/* MatrixKeypadReg.Columns */.f6T.Columns, [columns]);
    _this.rows = _this.addRegister(constants/* MatrixKeypadReg.Rows */.f6T.Rows, [rows]);
    _this.labels = _this.addRegister(constants/* MatrixKeypadReg.Labels */.f6T.Labels, labels ? [labels.map(l => [l])] : undefined);
    return _this;
  }

  var _proto = MatrixKeypadServer.prototype;

  _proto.down = /*#__PURE__*/function () {
    var _down = (0,asyncToGenerator/* default */.Z)(function* (button) {
      var [values] = this.reading.values();
      var valuei = values.findIndex(v => v[0] === button);

      if (valuei < 0) {
        values.push([button]);
        this.reading.setValues([values]);
      }
    });

    function down(_x) {
      return _down.apply(this, arguments);
    }

    return down;
  }();

  _proto.up = /*#__PURE__*/function () {
    var _up = (0,asyncToGenerator/* default */.Z)(function* (button) {
      var [values] = this.reading.values();
      var valuei = values.findIndex(v => v[0] === button);

      if (valuei > -1) {
        values.splice(valuei, 1);
        this.reading.setValues([values]);
      }
    });

    function up(_x2) {
      return _up.apply(this, arguments);
    }

    return up;
  }();

  return MatrixKeypadServer;
}(sensorserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/motorserver.ts




var MotorServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(MotorServer, _JDServiceServer);

  function MotorServer(instanceName) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_MOTOR */.YZU, {
      instanceName
    }) || this;
    _this.duty = _this.addRegister(constants/* MotorReg.Duty */.Xjv.Duty, [0]);
    _this.enabled = _this.addRegister(constants/* MotorReg.Enabled */.Xjv.Enabled, [false]);
    _this.loadTorque = _this.addRegister(constants/* MotorReg.LoadTorque */.Xjv.LoadTorque);
    _this.loadSpeed = _this.addRegister(constants/* MotorReg.LoadSpeed */.Xjv.LoadSpeed);
    return _this;
  }

  return MotorServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/jdom/client.ts
var client = __webpack_require__(47235);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/leveldetector.ts





var LevelDetector = /*#__PURE__*/function (_JDClient) {
  (0,inheritsLoose/* default */.Z)(LevelDetector, _JDClient);

  function LevelDetector(service) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this.service = service;

    _this.reset();

    if (_this.service.inactiveThreshold) _this.mount(_this.service.inactiveThreshold.subscribe(constants/* CHANGE */.Ver, _this.reset.bind((0,assertThisInitialized/* default */.Z)(_this))));
    if (_this.service.activeThreshold) _this.mount(_this.service.activeThreshold.subscribe(constants/* CHANGE */.Ver, _this.reset.bind((0,assertThisInitialized/* default */.Z)(_this))));

    _this.mount(_this.service.reading.subscribe(constants/* CHANGE */.Ver, _this.update.bind((0,assertThisInitialized/* default */.Z)(_this))));

    return _this;
  }

  var _proto = LevelDetector.prototype;

  _proto.reset = function reset() {
    this._state = constants/* SystemReadingThreshold.Neutral */.GKF.Neutral;
  };

  _proto.update = function update() {
    var _this$service$activeT, _this$service$inactiv;

    var [level] = this.service.reading.values();

    if (level === undefined) {
      this.setState(constants/* SystemReadingThreshold.Neutral */.GKF.Neutral);
      return;
    }

    var [active] = (_this$service$activeT = this.service.activeThreshold) === null || _this$service$activeT === void 0 ? void 0 : _this$service$activeT.values();

    if (active !== undefined && level >= active) {
      this.setState(constants/* SystemReadingThreshold.Active */.GKF.Active);
      return;
    }

    var [inactive] = (_this$service$inactiv = this.service.inactiveThreshold) === null || _this$service$inactiv === void 0 ? void 0 : _this$service$inactiv.values();

    if (inactive !== undefined && level <= inactive) {
      this.setState(constants/* SystemReadingThreshold.Inactive */.GKF.Inactive);
      return;
    } // neutral


    this.setState(constants/* SystemReadingThreshold.Neutral */.GKF.Neutral);
  };

  _proto.setState = function setState(state) {
    if (state === this._state) return;
    this._state = state;

    switch (state) {
      case constants/* SystemReadingThreshold.Active */.GKF.Active:
        this.service.sendEvent(constants/* SystemEvent.Active */.nSK.Active);
        break;

      case constants/* SystemReadingThreshold.Inactive */.GKF.Inactive:
        this.service.sendEvent(constants/* SystemEvent.Inactive */.nSK.Inactive);
        break;

      case constants/* SystemReadingThreshold.Neutral */.GKF.Neutral:
        this.service.sendEvent(constants/* SystemEvent.Neutral */.nSK.Neutral);
        break;
    }
  };

  return LevelDetector;
}(client/* JDClient */.z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/analogsensorserver.ts





/**
 * Creation options for AnalogSensorServer
 * @category Servers
 * @internal
 */

/**
 * Base class for analog sensor servers
 * @category Servers
 */
var AnalogSensorServer = /*#__PURE__*/function (_SensorServer) {
  (0,inheritsLoose/* default */.Z)(AnalogSensorServer, _SensorServer);

  function AnalogSensorServer(serviceClass, options) {
    var _this;

    _this = _SensorServer.call(this, serviceClass, options) || this;
    var {
      minReading,
      maxReading,
      inactiveThreshold,
      activeThreshold,
      readingResolution
    } = options || {};
    if (minReading !== undefined) _this.addRegister(constants/* SystemReg.MinReading */.ZJq.MinReading, [minReading]);
    if (maxReading !== undefined) _this.addRegister(constants/* SystemReg.MaxReading */.ZJq.MaxReading, [maxReading]);
    if (readingResolution !== undefined) _this.addRegister(constants/* SystemReg.ReadingResolution */.ZJq.ReadingResolution, [readingResolution]);

    if (inactiveThreshold !== undefined || _this.activeThreshold !== undefined) {
      if (inactiveThreshold !== undefined) _this.inactiveThreshold = _this.addRegister(constants/* SystemReg.InactiveThreshold */.ZJq.InactiveThreshold, [inactiveThreshold]);
      if (activeThreshold !== undefined) _this.activeThreshold = _this.addRegister(constants/* SystemReg.ActiveThreshold */.ZJq.ActiveThreshold, [activeThreshold]);
      _this.levelDetector = new LevelDetector((0,assertThisInitialized/* default */.Z)(_this));
    }

    return _this;
  }

  return AnalogSensorServer;
}(sensorserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/raingaugeserver.ts






var RainGaugeServer = /*#__PURE__*/function (_AnalogSensorServer) {
  (0,inheritsLoose/* default */.Z)(RainGaugeServer, _AnalogSensorServer);

  function RainGaugeServer(options) {
    var _this;

    _this = _AnalogSensorServer.call(this, constants/* SRV_RAIN_GAUGE */.NnQ, {
      readingValues: [0]
    }) || this;
    _this._tiltCount = 0;
    _this._level = 0;
    var {
      bucketSize
    } = options || {};
    _this.precipitationPrecision = _this.addRegister(constants/* RainGaugeReg.PrecipitationPrecision */.HUu.PrecipitationPrecision, [bucketSize || 0.2794]);
    _this._level = 0;
    return _this;
  }

  var _proto = RainGaugeServer.prototype;

  _proto.rain = /*#__PURE__*/function () {
    var _rain = (0,asyncToGenerator/* default */.Z)(function* (fraction) {
      if (!fraction) return;
      this._level += fraction;
      if (this._level >= 0.7) yield this.tilt();else this.emit(constants/* CHANGE */.Ver);
    });

    function rain(_x) {
      return _rain.apply(this, arguments);
    }

    return rain;
  }();

  _proto.tilt = /*#__PURE__*/function () {
    var _tilt = (0,asyncToGenerator/* default */.Z)(function* () {
      this._tiltCount++;
      this._level = 0;
      var [bucket] = this.precipitationPrecision.values();
      var [current] = this.reading.values();
      this.reading.setValues([current + (bucket || 0.2)]);
      this.emit(constants/* CHANGE */.Ver);
    });

    function tilt() {
      return _tilt.apply(this, arguments);
    }

    return tilt;
  }();

  (0,createClass/* default */.Z)(RainGaugeServer, [{
    key: "tiltCount",
    get: function get() {
      return this._tiltCount;
    }
  }, {
    key: "level",
    get: function get() {
      return this._level;
    }
  }]);

  return RainGaugeServer;
}(AnalogSensorServer);


// EXTERNAL MODULE: ./jacdac-ts/src/servers/realtimeclockserver.ts
var realtimeclockserver = __webpack_require__(83090);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/reflectedlightserver.ts




var ReflectedLightServer = /*#__PURE__*/function (_AnalogSensorServer) {
  (0,inheritsLoose/* default */.Z)(ReflectedLightServer, _AnalogSensorServer);

  function ReflectedLightServer(options) {
    var _this;

    _this = _AnalogSensorServer.call(this, constants/* SRV_REFLECTED_LIGHT */.tky, {
      readingValues: [0]
    }) || this;
    var {
      variant
    } = options || {};
    _this.variant = _this.addRegister(constants/* ReflectedLightReg.Variant */.XXp.Variant, [variant || constants/* ReflectedLightVariant.InfraredDigital */.cRH.InfraredDigital]);
    return _this;
  }

  return ReflectedLightServer;
}(AnalogSensorServer);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/rotaryencoderserver.ts





var RotaryEncoderServer = /*#__PURE__*/function (_SensorServer) {
  (0,inheritsLoose/* default */.Z)(RotaryEncoderServer, _SensorServer);

  function RotaryEncoderServer() {
    var _this;

    _this = _SensorServer.call(this, constants/* SRV_ROTARY_ENCODER */.lNp, {
      readingValues: [0],
      streamingInterval: 50
    }) || this;
    _this.clicksPerTurn = _this.addRegister(constants/* RotaryEncoderReg.ClicksPerTurn */.$v5.ClicksPerTurn, [12]);
    return _this;
  }

  var _proto = RotaryEncoderServer.prototype;

  _proto.rotate = /*#__PURE__*/function () {
    var _rotate = (0,asyncToGenerator/* default */.Z)(function* (clicks) {
      var [position] = this.reading.values();
      this.reading.setValues([position + (clicks >> 0)]);
    });

    function rotate(_x) {
      return _rotate.apply(this, arguments);
    }

    return rotate;
  }();

  return RotaryEncoderServer;
}(sensorserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/servoserver.ts




var ServoServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(ServoServer, _JDServiceServer);

  function ServoServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_SERVO */.$X_, options) || this;
    var {
      minAngle = -90,
      maxAngle = 90,
      responseSpeed,
      stallTorque
    } = options || {};
    _this.angle = _this.addRegister(constants/* ServoReg.Angle */.pmu.Angle, [0]);
    _this.currentAngle = _this.addRegister(constants/* ServoReg.CurrentAngle */.pmu.CurrentAngle, [0]);
    _this.enabled = _this.addRegister(constants/* ServoReg.Enabled */.pmu.Enabled, [false]);
    _this.minAngle = _this.addRegister(constants/* ServoReg.MinAngle */.pmu.MinAngle, minAngle !== undefined ? [minAngle] : undefined);
    _this.maxAngle = _this.addRegister(constants/* ServoReg.MaxAngle */.pmu.MaxAngle, maxAngle !== undefined ? [maxAngle] : undefined);
    _this.offset = _this.addRegister(constants/* ServoReg.Offset */.pmu.Offset, [0]);
    _this.responseSpeed = _this.addRegister(constants/* ServoReg.ResponseSpeed */.pmu.ResponseSpeed, responseSpeed !== undefined ? [responseSpeed] : undefined);
    _this.stallTorque = _this.addRegister(constants/* ServoReg.StallTorque */.pmu.StallTorque, stallTorque !== undefined ? [stallTorque] : undefined);

    _this.angle.on(constants/* PACKET_DATA_NORMALIZE */.fjv, values => {
      var angle = values[0];

      var [minAngle] = _this.minAngle.values();

      var [maxAngle] = _this.maxAngle.values();

      if (minAngle !== undefined) angle = Math.max(minAngle, angle);
      if (maxAngle !== undefined) angle = Math.min(maxAngle, angle);
      values[0] = angle;
    });

    _this.angle.on(constants/* CHANGE */.Ver, () => _this.currentAngle.setValues(_this.angle.values()));

    return _this;
  }

  return ServoServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/jdom/packet.ts
var packet = __webpack_require__(57683);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pipes.ts
var pipes = __webpack_require__(93642);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/settingsserver.ts










var SettingsServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(SettingsServer, _JDServiceServer);

  function SettingsServer(storageKey) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_SETTINGS */.B9b) || this;
    _this.storageKey = storageKey;

    _this.addCommand(constants/* SettingsCmd.Get */.vnb.Get, _this.handleGet.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SettingsCmd.Set */.vnb.Set, _this.handleSet.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SettingsCmd.Delete */.vnb.Delete, _this.handleDelete.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SettingsCmd.ListKeys */.vnb.ListKeys, _this.handleListKeys.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SettingsCmd.List */.vnb.List, _this.handleList.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SettingsCmd.Clear */.vnb.Clear, _this.handleClear.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.settings = _this.read();
    return _this;
  }

  var _proto = SettingsServer.prototype;

  _proto.getPayload = function getPayload(key) {
    var value = this.settings[key];
    var secret = /^$/.test(key);
    var payload;

    if (value === undefined) {
      payload = new Uint8Array(0);
    } else if (secret) {
      var _payload = new Uint8Array(1);

      _payload[0] = 0;
    } else {
      payload = (0,utils/* fromHex */.H_)(value);
    }

    return payload;
  };

  _proto.handleGet = /*#__PURE__*/function () {
    var _handleGet = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var [key] = pkt.jdunpack("s");
      var payload = this.getPayload(key);
      var resp = packet/* default.jdpacked */.Z.jdpacked(constants/* SettingsCmd.Get */.vnb.Get, "z b", [key, payload]);
      yield this.sendPacketAsync(resp);
    });

    function handleGet(_x) {
      return _handleGet.apply(this, arguments);
    }

    return handleGet;
  }();

  _proto.handleSet = /*#__PURE__*/function () {
    var _handleSet = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var [key, value] = pkt.jdunpack("z b");
      this.settings[key] = (0,utils/* toHex */.NC)(value);
      yield this.save();
    });

    function handleSet(_x2) {
      return _handleSet.apply(this, arguments);
    }

    return handleSet;
  }();

  _proto.handleDelete = /*#__PURE__*/function () {
    var _handleDelete = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var [key] = pkt.jdunpack("s");
      delete this.settings[key];
      yield this.save();
    });

    function handleDelete(_x3) {
      return _handleDelete.apply(this, arguments);
    }

    return handleDelete;
  }();

  _proto.handleListKeys = /*#__PURE__*/function () {
    var _handleListKeys = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var pipe = pipes/* OutPipe.from */.Ah.from(this.device.bus, pkt, true);
      yield pipe.respondForEach(Object.keys(this.settings), k => (0,pack/* jdpack */.AV)("s", [k]));
    });

    function handleListKeys(_x4) {
      return _handleListKeys.apply(this, arguments);
    }

    return handleListKeys;
  }();

  _proto.handleList = /*#__PURE__*/function () {
    var _handleList = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var pipe = pipes/* OutPipe.from */.Ah.from(this.device.bus, pkt, true);
      yield pipe.respondForEach(Object.keys(this.settings), k => {
        var payload = this.getPayload(k);
        return (0,pack/* jdpack */.AV)("z b", [k, payload]);
      });
    });

    function handleList(_x5) {
      return _handleList.apply(this, arguments);
    }

    return handleList;
  }();

  _proto.handleClear = function handleClear() {
    this.settings = {};
    this.save();
  };

  _proto.read = function read() {
    if (!this.storageKey) return {};

    try {
      var payload = typeof window !== "undefined" && window.localStorage.getItem(this.storageKey);
      return JSON.parse(payload || "{}");
    } catch (e) {
      console.debug(e);
      return {};
    }
  };

  _proto.save = /*#__PURE__*/function () {
    var _save = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this.storageKey) {
        try {
          if (typeof window !== "undefined") window.localStorage.setItem(this.storageKey, JSON.stringify(this.settings));
        } catch (e) {
          console.debug(e);
        }
      }

      yield this.sendEvent(constants/* SettingsEvent.Change */.NAh.Change);
    });

    function save() {
      return _save.apply(this, arguments);
    }

    return save;
  }();

  return SettingsServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/speechsynthesisserver.ts





var SpeechSynthesisServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(SpeechSynthesisServer, _JDServiceServer);

  function SpeechSynthesisServer() {
    var _this$synthesis;

    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_SPEECH_SYNTHESIS */.ydR) || this;
    _this.synthesis = typeof window !== "undefined" && window.speechSynthesis;
    _this.enabled = _this.addRegister(constants/* SpeechSynthesisReg.Enabled */.b3j.Enabled, [!((_this$synthesis = _this.synthesis) !== null && _this$synthesis !== void 0 && _this$synthesis.paused)]);
    _this.pitch = _this.addRegister(constants/* SpeechSynthesisReg.Pitch */.b3j.Pitch, [1]);
    _this.rate = _this.addRegister(constants/* SpeechSynthesisReg.Rate */.b3j.Rate, [1]);
    _this.lang = _this.addRegister(constants/* SpeechSynthesisReg.Lang */.b3j.Lang, [""]);
    _this.volume = _this.addRegister(constants/* SpeechSynthesisReg.Volume */.b3j.Volume, [0.5]);

    _this.addCommand(constants/* SpeechSynthesisCmd.Speak */.AWi.Speak, _this.handleSpeak.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SpeechSynthesisCmd.Cancel */.AWi.Cancel, _this.handleCancel.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = SpeechSynthesisServer.prototype;

  _proto.handleSpeak = function handleSpeak(pkt) {
    var [text] = pkt.jdunpack("s");
    if (!this.synthesis || !text) return;
    var [pitch] = this.pitch.values();
    var [rate] = this.pitch.values();
    var [lang] = this.lang.values();
    var [volume] = this.volume.values();
    var utterance = new SpeechSynthesisUtterance(text);
    utterance.pitch = pitch;
    utterance.rate = rate;
    utterance.lang = lang;
    utterance.volume = volume;
    this.synthesis.speak(utterance);
  };

  _proto.handleCancel = function handleCancel(pkt) {
    var _this$synthesis2;

    (_this$synthesis2 = this.synthesis) === null || _this$synthesis2 === void 0 ? void 0 : _this$synthesis2.cancel();
  };

  return SpeechSynthesisServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/switchserver.ts





var SwitchServer = /*#__PURE__*/function (_SensorServer) {
  (0,inheritsLoose/* default */.Z)(SwitchServer, _SensorServer);

  function SwitchServer(options) {
    var _this;

    _this = _SensorServer.call(this, constants/* SRV_SWITCH */.Crg, {
      readingValues: [false],
      streamingInterval: 50
    }) || this;
    var {
      autoOffDelay,
      variant
    } = options || {};
    _this.variant = _this.addRegister(constants/* SwitchReg.Variant */.FNv.Variant, variant !== undefined ? [variant] : undefined);
    _this.autoOffDelay = _this.addRegister(constants/* SwitchReg.AutoOffDelay */.FNv.AutoOffDelay, autoOffDelay !== undefined ? [autoOffDelay] : undefined);
    return _this;
  }

  var _proto = SwitchServer.prototype;

  _proto.toggle = /*#__PURE__*/function () {
    var _toggle = (0,asyncToGenerator/* default */.Z)(function* () {
      var [v] = this.reading.values();
      if (!v) yield this.switchOn();else yield this.switchOff();
    });

    function toggle() {
      return _toggle.apply(this, arguments);
    }

    return toggle;
  }();

  _proto.switchOn = /*#__PURE__*/function () {
    var _switchOn = (0,asyncToGenerator/* default */.Z)(function* () {
      var [v] = this.reading.values();

      if (!v) {
        this.reading.setValues([true]);
        yield this.sendEvent(constants/* SwitchEvent.On */.MfB.On);
        this.startAutoOff();
      }
    });

    function switchOn() {
      return _switchOn.apply(this, arguments);
    }

    return switchOn;
  }();

  _proto.switchOff = /*#__PURE__*/function () {
    var _switchOff = (0,asyncToGenerator/* default */.Z)(function* () {
      var [v] = this.reading.values();

      if (v) {
        this.reading.setValues([false]);
        yield this.sendEvent(constants/* SwitchEvent.Off */.MfB.Off);
        this.stopAutoOff();
      }
    });

    function switchOff() {
      return _switchOff.apply(this, arguments);
    }

    return switchOff;
  }();

  _proto.startAutoOff = function startAutoOff() {
    this.stopAutoOff();

    if (this.autoOffDelay.data !== undefined) {
      var [delay] = this.autoOffDelay.values();
      this.autoOffInterval = setTimeout(this.switchOn.bind(this), delay);
    }
  };

  _proto.stopAutoOff = function stopAutoOff() {
    if (this.autoOffInterval) {
      clearTimeout(this.autoOffInterval);
      this.autoOffInterval = undefined;
    }
  };

  return SwitchServer;
}(sensorserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/trafficlightserver.ts




var TrafficLightServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(TrafficLightServer, _JDServiceServer);

  function TrafficLightServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_TRAFFIC_LIGHT */.jHN, options) || this;
    _this.red = _this.addRegister(constants/* TrafficLightReg.Red */.r6v.Red, [true]);
    _this.orange = _this.addRegister(constants/* TrafficLightReg.Orange */.r6v.Orange, [false]);
    _this.green = _this.addRegister(constants/* TrafficLightReg.Green */.r6v.Green, [false]);
    return _this;
  }

  return TrafficLightServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/ledserver.ts





var LEDServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(LEDServer, _JDServiceServer);

  function LEDServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_LED */.i04, options) || this;
    var {
      ledCount = 1,
      variant = constants/* LedVariant.ThroughHole */.FRS.ThroughHole,
      luminousIntensity,
      waveLength,
      color = [255, 0, 0],
      maxPower = 200
    } = options || {};
    _this.color = _this.addRegister(constants/* LedReg.Color */.Abo.Color, color);

    _this.color.on(constants/* REGISTER_PRE_GET */.q5h, _this.updateColor.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.maxPower = _this.addRegister(constants/* LedReg.MaxPower */.Abo.MaxPower, [maxPower]);
    _this.ledCount = _this.addRegister(constants/* LedReg.LedCount */.Abo.LedCount, [ledCount]);
    if (luminousIntensity !== undefined) _this.luminousIntensity = _this.addRegister(constants/* LedReg.LuminousIntensity */.Abo.LuminousIntensity, [luminousIntensity]);
    if (waveLength !== undefined) _this.waveLength = _this.addRegister(constants/* LedReg.WaveLength */.Abo.WaveLength, [waveLength]);
    _this.variant = _this.addRegister(constants/* LedReg.Variant */.Abo.Variant, [variant]);

    _this.addCommand(constants/* LedCmd.Animate */.tVE.Animate, _this.handleAnimate.bind((0,assertThisInitialized/* default */.Z)(_this))); // animation


    _this.on(constants/* REFRESH */.RGM, _this.updateColor.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = LEDServer.prototype;

  _proto.updateColor = function updateColor() {
    if (!this._animation) return; // nothing to do
    // compute new color

    var {
      red,
      green,
      blue,
      toRed,
      toGreen,
      toBlue,
      speed,
      start
    } = this._animation;
    var now = this.device.bus.timestamp;
    var elapsed = now - start; // see control.md

    var total = 512 / speed * 100 | 0;
    var progress = elapsed / total; // may overshoot

    var alpha = Math.min(1, progress);
    var oneAlpha = 1 - alpha;
    var newRed = red * oneAlpha + alpha * toRed | 0;
    var newGreen = green * oneAlpha + alpha * toGreen | 0;
    var newBlue = blue * oneAlpha + alpha * toBlue | 0;
    this.color.setValues([newRed, newGreen, newBlue]); // clear animation when done

    if (progress > 1) this._animation = undefined;
  };

  _proto.handleAnimate = function handleAnimate(pkt) {
    var [toRed, toGreen, toBlue, speed] = pkt.jdunpack("u8 u8 u8 u8");

    if (speed == 0) {
      this.color.setValues([toRed, toGreen, toBlue]);
      this._animation = undefined;
    } else {
      var [red, green, blue] = this.color.values();
      this._animation = {
        red,
        green,
        blue,
        toRed,
        toGreen,
        toBlue,
        speed,
        start: this.device.bus.timestamp
      };
    }
  };

  return LEDServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/soundplayerserver.ts







/**
 * @internal
 */

var SoundPlayerServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(SoundPlayerServer, _JDServiceServer);

  function SoundPlayerServer(sounds) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_SOUND_PLAYER */.OrM) || this;
    _this.sounds = sounds;
    _this.volume = _this.addRegister(constants/* SoundPlayerReg.Volume */.Ic7.Volume, [0.5]);

    _this.addCommand(constants/* SoundPlayerCmd.ListSounds */.TFx.ListSounds, _this.handleListSounds.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* SoundPlayerCmd.Play */.TFx.Play, _this.handlePlay.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = SoundPlayerServer.prototype;

  _proto.handleListSounds = /*#__PURE__*/function () {
    var _handleListSounds = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var pipe = pipes/* OutPipe.from */.Ah.from(this.device.bus, pkt, true);
      yield pipe.respondForEach(this.sounds, sound => (0,pack/* jdpack */.AV)("u32 s", sound));
    });

    function handleListSounds(_x) {
      return _handleListSounds.apply(this, arguments);
    }

    return handleListSounds;
  }();

  _proto.handlePlay = function handlePlay(pkt) {
    var _this$onPlay;

    var [name] = pkt.jdunpack("s");
    (_this$onPlay = this.onPlay) === null || _this$onPlay === void 0 ? void 0 : _this$onPlay.call(this, name);
  };

  return SoundPlayerServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/randomnumbergeneratorserver.ts





var RandomNumberGeneratorServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(RandomNumberGeneratorServer, _JDServiceServer);

  function RandomNumberGeneratorServer() {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_RNG */.NMZ, {
      variant: constants/* RngVariant.WebCrypto */.OzQ.WebCrypto
    }) || this;
    _this.reading = _this.addRegister(constants/* RngReg.Random */.gz5.Random, [new Uint8Array(64)]);

    _this.reading.on(constants/* REGISTER_PRE_GET */.q5h, _this.handleRefresh.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = RandomNumberGeneratorServer.prototype;

  _proto.handleRefresh = function handleRefresh() {
    // generate new data
    var data = new Uint8Array(64);
    if (typeof window !== "undefined") window.crypto.getRandomValues(data);
    this.reading.setValues([data], true);
  };

  return RandomNumberGeneratorServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/compassserver.ts




var CompassServer = /*#__PURE__*/function (_AnalogSensorServer) {
  (0,inheritsLoose/* default */.Z)(CompassServer, _AnalogSensorServer);

  function CompassServer() {
    var _this;

    _this = _AnalogSensorServer.call(this, constants/* SRV_COMPASS */.JTB, {
      readingValues: [0],
      minReading: 0,
      maxReading: 360,
      readingError: [1]
    }) || this;
    _this.enabled = _this.addRegister(constants/* CompassReg.Enabled */.kQD.Enabled, [false]);

    _this.enabled.on(constants/* CHANGE */.Ver, () => {
      var [status] = _this.statusCode.values();

      if (status === constants/* SystemStatusCodes.CalibrationNeeded */._kj.CalibrationNeeded) {
        console.debug("start calibration");

        _this.calibrate();
      }
    });

    return _this;
  }

  return CompassServer;
}(AnalogSensorServer);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/dmxserver.ts






var DMXServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(DMXServer, _JDServiceServer);

  function DMXServer() {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_DMX */.$GJ, {
      intensityValues: [0]
    }) || this;

    _this.addCommand(constants/* DmxCmd.Send */.tXW.Send, _this.handleSend.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = DMXServer.prototype;

  _proto.handleSend = function handleSend(pkt) {
    // ignore
    console.debug("dmx send", (0,utils/* toHex */.NC)(pkt.data));
  };

  return DMXServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/jdom/buffer.ts
var buffer = __webpack_require__(3482);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/iframeclient.ts
var iframeclient = __webpack_require__(9809);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/bitradioserver.ts







 // keep in sync with CODAL

var RADIO_MAX_PACKET_SIZE = 32; //const MAX_FIELD_DOUBLE_NAME_LENGTH = 8;

var MAX_PAYLOAD_LENGTH = 20;
var PACKET_PREFIX_LENGTH = 9;
var VALUE_PACKET_NAME_LEN_OFFSET = 13;
var DOUBLE_VALUE_PACKET_NAME_LEN_OFFSET = 17; // Packet Spec:
// | 0              | 1 ... 4       | 5 ... 8           | 9 ... 28
// ----------------------------------------------------------------
// | packet type    | system time   | serial number     | payload
//
// Serial number defaults to 0 unless enabled by user
// payload: number (9 ... 12)

var PACKET_TYPE_NUMBER = 0; // payload: number (9 ... 12), name length (13), name (14 ... 26)

var PACKET_TYPE_VALUE = 1; // payload: string length (9), string (10 ... 28)

var PACKET_TYPE_STRING = 2; // payload: buffer length (9), buffer (10 ... 28)

var PACKET_TYPE_BUFFER = 3; // payload: number (9 ... 16)

var PACKET_TYPE_DOUBLE = 4; // payload: number (9 ... 16), name length (17), name (18 ... 26)

var PACKET_TYPE_DOUBLE_VALUE = 5;

function getStringOffset(packetType) {
  switch (packetType) {
    case PACKET_TYPE_STRING:
      return PACKET_PREFIX_LENGTH;

    case PACKET_TYPE_VALUE:
      return VALUE_PACKET_NAME_LEN_OFFSET;

    case PACKET_TYPE_DOUBLE_VALUE:
      return DOUBLE_VALUE_PACKET_NAME_LEN_OFFSET;

    default:
      return undefined;
  }
}
/*
function getMaxStringLength(packetType: number) {
    switch (packetType) {
        case PACKET_TYPE_STRING:
            return MAX_PAYLOAD_LENGTH - 2;
        case PACKET_TYPE_VALUE:
        case PACKET_TYPE_DOUBLE_VALUE:
            return MAX_FIELD_DOUBLE_NAME_LENGTH;
        default:
            return undefined;
    }
}
*/


function truncateString(str) {
  // TODO
  return str;
}

var RadioPacket = /*#__PURE__*/function () {
  RadioPacket.getPacket = function getPacket(data) {
    if (!data) return undefined; // last 4 bytes is RSSi

    return new RadioPacket(data);
  };

  RadioPacket.mkPacket = function mkPacket(packetType) {
    var res = new RadioPacket();
    res.data[0] = packetType;
    return res;
  };

  function RadioPacket(data) {
    this.data = data;
    if (!data) this.data = new Uint8Array(RADIO_MAX_PACKET_SIZE + 4);
  }

  var _proto = RadioPacket.prototype;

  _proto.hasString = function hasString() {
    return this.packetType === PACKET_TYPE_STRING || this.packetType === PACKET_TYPE_VALUE || this.packetType === PACKET_TYPE_DOUBLE_VALUE;
  };

  _proto.hasNumber = function hasNumber() {
    return this.packetType === PACKET_TYPE_NUMBER || this.packetType === PACKET_TYPE_DOUBLE || this.packetType === PACKET_TYPE_VALUE || this.packetType === PACKET_TYPE_DOUBLE_VALUE;
  };

  (0,createClass/* default */.Z)(RadioPacket, [{
    key: "signal",
    get: function get() {
      return (0,buffer/* getNumber */.Dx)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, this.data.length - 4);
    }
  }, {
    key: "packetType",
    get: function get() {
      return this.data[0];
    }
  }, {
    key: "time",
    get: function get() {
      return (0,buffer/* getNumber */.Dx)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, 1);
    },
    set: function set(val) {
      (0,buffer/* setNumber */.Gy)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, 1, val);
    }
  }, {
    key: "serial",
    get: function get() {
      return (0,buffer/* getNumber */.Dx)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, 5);
    },
    set: function set(val) {
      (0,buffer/* setNumber */.Gy)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, 5, val);
    }
  }, {
    key: "stringPayload",
    get: function get() {
      var offset = getStringOffset(this.packetType);
      return offset ? this.data.slice(offset + 1, this.data[offset]).toString() : undefined;
    },
    set: function set(val) {
      var offset = getStringOffset(this.packetType);

      if (offset) {
        var buf = (0,utils/* stringToBuffer */.k8)(truncateString(val));
        this.data[offset] = buf.length;
        (0,utils/* memcpy */.Tz)(this.data, offset + 1, buf);
      }
    }
  }, {
    key: "numberPayload",
    get: function get() {
      switch (this.packetType) {
        case PACKET_TYPE_NUMBER:
        case PACKET_TYPE_VALUE:
          return (0,buffer/* getNumber */.Dx)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, PACKET_PREFIX_LENGTH);

        case PACKET_TYPE_DOUBLE:
        case PACKET_TYPE_DOUBLE_VALUE:
          return (0,buffer/* getNumber */.Dx)(this.data, buffer/* NumberFormat.Float64LE */.y4.Float64LE, PACKET_PREFIX_LENGTH);
      }

      return undefined;
    },
    set: function set(val) {
      switch (this.packetType) {
        case PACKET_TYPE_NUMBER:
        case PACKET_TYPE_VALUE:
          (0,buffer/* setNumber */.Gy)(this.data, buffer/* NumberFormat.Int32LE */.y4.Int32LE, PACKET_PREFIX_LENGTH, val);
          break;

        case PACKET_TYPE_DOUBLE:
        case PACKET_TYPE_DOUBLE_VALUE:
          (0,buffer/* setNumber */.Gy)(this.data, buffer/* NumberFormat.Float64LE */.y4.Float64LE, PACKET_PREFIX_LENGTH, val);
          break;
      }
    }
  }, {
    key: "bufferPayload",
    get: function get() {
      var len = this.data[PACKET_PREFIX_LENGTH];
      return this.data.slice(PACKET_PREFIX_LENGTH + 1, PACKET_PREFIX_LENGTH + 1 + len);
    },
    set: function set(b) {
      var len = Math.min(b.length, MAX_PAYLOAD_LENGTH - 1);
      this.data[PACKET_PREFIX_LENGTH] = len;
      (0,utils/* memcpy */.Tz)(this.data, PACKET_PREFIX_LENGTH + 1, b, 0, len);
    }
  }]);

  return RadioPacket;
}();
/**
 * A server implementation of the bit:radio service
 * @category Servers
 */


var BitRadioServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(BitRadioServer, _JDServiceServer);

  function BitRadioServer() {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_BIT_RADIO */.BYF) || this;
    _this.enabled = _this.addRegister(constants/* BitRadioReg.Enabled */.qdU.Enabled, [false]);
    _this.group = _this.addRegister(constants/* BitRadioReg.Group */.qdU.Group, [1]);
    _this.transmissionPower = _this.addRegister(constants/* BitRadioReg.TransmissionPower */.qdU.TransmissionPower, [6]);
    _this.frequencyBand = _this.addRegister(constants/* BitRadioReg.FrequencyBand */.qdU.FrequencyBand, [7]);

    _this.addCommand(constants/* BitRadioCmd.SendString */.GZs.SendString, _this.handleSendString.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* BitRadioCmd.SendNumber */.GZs.SendNumber, _this.handleSendNumber.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* BitRadioCmd.SendValue */.GZs.SendValue, _this.handleSendValue.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* BitRadioCmd.SendBuffer */.GZs.SendBuffer, _this.handleSendBuffer.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto2 = BitRadioServer.prototype;

  _proto2.handleSendString = function handleSendString(pkt) {
    var [message] = pkt.jdunpack("s");
    var rpkt = RadioPacket.mkPacket(PACKET_TYPE_STRING);
    rpkt.stringPayload = message;
    this.sendRadioPacket(rpkt);
  };

  _proto2.handleSendNumber = function handleSendNumber(pkt) {
    var [value] = pkt.jdunpack("f64");
    var rpkt = RadioPacket.mkPacket(PACKET_TYPE_DOUBLE);
    rpkt.numberPayload = value;
    this.sendRadioPacket(rpkt);
  };

  _proto2.handleSendValue = function handleSendValue(pkt) {
    var [value, name] = pkt.jdunpack("f64 s");
    var rpkt = RadioPacket.mkPacket(PACKET_TYPE_DOUBLE_VALUE);
    rpkt.stringPayload = name;
    rpkt.numberPayload = value;
    this.sendRadioPacket(rpkt);
  };

  _proto2.handleSendBuffer = function handleSendBuffer(pkt) {
    var {
      data
    } = pkt;
    var rpkt = RadioPacket.mkPacket(PACKET_TYPE_BUFFER);
    rpkt.bufferPayload = data;
    this.sendRadioPacket(rpkt);
  };

  _proto2.sendRadioPacket = function sendRadioPacket(rpkt) {
    var [on] = this.enabled.values();
    if (!on) return; // radio is off

    var {
      bus
    } = this.device;
    var {
      timestamp
    } = bus;
    var [group] = this.group.values();
    rpkt.time = timestamp;
    rpkt.serial = 0; // todo

    var msg = {
      type: "radiopacket",
      broadcast: true,
      // TODO
      rssi: -75,
      // TODO
      serial: 0,
      time: bus.timestamp,
      payload: {
        groupId: group,
        type: 0,
        // buffer
        bufferData: rpkt.data
      }
    }; // send message to parent

    if ((0,iframeclient/* inIFrame */.H)()) {
      window.parent.postMessage(msg, "*");
    }
  };

  return BitRadioServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/powerserver.ts




var PowerServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(PowerServer, _JDServiceServer);

  function PowerServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_POWER */.mQG, options) || this;
    _this.enabled = _this.addRegister(constants/* PowerReg.Allowed */.$xp.Allowed, [false]);
    _this.maxPower = _this.addRegister(constants/* PowerReg.MaxPower */.$xp.MaxPower, [500]);
    _this.overload = _this.addRegister(constants/* PowerReg.PowerStatus */.$xp.PowerStatus, [false]);
    return _this;
  }

  return PowerServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/capacitivebuttonserver.ts




var CapacitiveButtonServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(CapacitiveButtonServer, _JDServiceServer);

  function CapacitiveButtonServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_CAPACITIVE_BUTTON */.bKD, options) || this;
    var {
      threshold = 0.5
    } = options || {};
    _this.threshold = _this.addRegister(constants/* CapacitiveButtonReg.Threshold */.mVd.Threshold, [threshold]);
    return _this;
  }

  return CapacitiveButtonServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/servers/hidkeyboardserver.ts
var hidkeyboardserver = __webpack_require__(41577);
// EXTERNAL MODULE: ./jacdac-ts/src/servers/hidmouseserver.ts
var hidmouseserver = __webpack_require__(72191);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/dimmerserver.ts




var DimmerServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(DimmerServer, _JDServiceServer);

  function DimmerServer(instanceName, options) {
    var _this;

    if (options === void 0) {
      options = {};
    }

    _this = _JDServiceServer.call(this, constants/* SRV_DIMMER */.YzE, {
      instanceName
    }) || this;
    var {
      variant = constants/* DimmerVariant.Light */.V1A.Light
    } = options;
    _this.intensity = _this.addRegister(constants/* DimmerReg.Intensity */.pwy.Intensity, [0]);
    _this.variant = _this.addRegister(constants/* DimmerReg.Variant */.pwy.Variant, [variant]);
    return _this;
  }

  return DimmerServer;
}(serviceserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/azureiothubhealthserver.ts




/* eslint-disable @typescript-eslint/no-unused-vars */




function splitPair(kv) {
  var i = kv.indexOf("=");
  if (i < 0) return [kv, ""];else return [kv.slice(0, i), kv.slice(i + 1)];
}

function parsePropertyBag(msg, separator) {
  var r = {};
  msg.split(separator || "&").map(kv => splitPair(kv)).forEach(parts => r[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]));
  return r;
}

var AzureIoTHubHealthServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(AzureIoTHubHealthServer, _JDServiceServer);

  function AzureIoTHubHealthServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_AZURE_IOT_HUB_HEALTH */.tOR, options) || this;
    _this.hubName = _this.addRegister(constants/* AzureIotHubHealthReg.HubName */.q7s.HubName, [""]);
    _this.hubDeviceId = _this.addRegister(constants/* AzureIotHubHealthReg.HubDeviceId */.q7s.HubDeviceId, [""]);
    _this.connectionStatus = _this.addRegister(constants/* AzureIotHubHealthReg.ConnectionStatus */.q7s.ConnectionStatus, [constants/* AzureIotHubHealthConnectionStatus.Connected */.gaB.Connected]);

    _this.connectionStatus.on(constants/* CHANGE */.Ver, () => _this.sendEvent(constants/* AzureIotHubHealthEvent.ConnectionStatusChange */.qqS.ConnectionStatusChange));

    _this.connectionString = "";

    _this.addCommand(constants/* AzureIotHubHealthCmd.Connect */.FhJ.Connect, _this.handleConnect.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* AzureIotHubHealthCmd.Disconnect */.FhJ.Disconnect, _this.handleDisconnect.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* AzureIotHubHealthCmd.SetConnectionString */.FhJ.SetConnectionString, _this.handleSetConnectionString.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = AzureIoTHubHealthServer.prototype;

  _proto.handleConnect = /*#__PURE__*/function () {
    var _handleConnect = (0,asyncToGenerator/* default */.Z)(function* () {
      this.connectionStatus.setValues([constants/* AzureIotHubHealthConnectionStatus.Connecting */.gaB.Connecting]);
      yield (0,utils/* delay */.gw)(500);
      if (!this.connectionString) this.connectionStatus.setValues([401]);else this.connectionStatus.setValues([constants/* AzureIotHubHealthConnectionStatus.Connected */.gaB.Connected]);
    });

    function handleConnect() {
      return _handleConnect.apply(this, arguments);
    }

    return handleConnect;
  }();

  _proto.handleDisconnect = /*#__PURE__*/function () {
    var _handleDisconnect = (0,asyncToGenerator/* default */.Z)(function* () {
      this.connectionStatus.setValues([constants/* AzureIotHubHealthConnectionStatus.Disconnecting */.gaB.Disconnecting]);
      yield (0,utils/* delay */.gw)(500);
      this.connectionStatus.setValues([constants/* AzureIotHubHealthConnectionStatus.Disconnected */.gaB.Disconnected]);
    });

    function handleDisconnect() {
      return _handleDisconnect.apply(this, arguments);
    }

    return handleDisconnect;
  }();

  _proto.handleSetConnectionString = /*#__PURE__*/function () {
    var _handleSetConnectionString = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var newConnectionString = pkt.stringData;

      if (newConnectionString !== this.connectionString) {
        yield this.handleDisconnect();
        this.connectionString = newConnectionString;
        var connStringParts = parsePropertyBag(this.connectionString, ";");
        this.hubName.setValues([connStringParts["HostName"] || ""]);
        this.hubDeviceId.setValues([connStringParts["DeviceId"] || ""]); // notify connection string changed

        this.sendEvent(constants/* AzureIotHubHealthEvent.ConnectionStatusChange */.qqS.ConnectionStatusChange);
      }
    });

    function handleSetConnectionString(_x) {
      return _handleSetConnectionString.apply(this, arguments);
    }

    return handleSetConnectionString;
  }();

  return AzureIoTHubHealthServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/servers/vibrationmotorserver.ts
var vibrationmotorserver = __webpack_require__(91697);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/random.ts
var random = __webpack_require__(80303);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/wifiserver.ts









var WifiServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(WifiServer, _JDServiceServer);

  function WifiServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_WIFI */.zti, {
      intensityValues: [true]
    }) || this;
    _this._lastScanResults = (options === null || options === void 0 ? void 0 : options.scanResults) || [];
    _this._knownNetworks = (options === null || options === void 0 ? void 0 : options.knownNetworks) || [];
    _this.enabled = _this.addRegister(constants/* WifiReg.Enabled */.eFM.Enabled, [true]);
    _this.ssid = _this.addRegister(constants/* WifiReg.Ssid */.eFM.Ssid, [""]);
    _this.ipAddress = _this.addRegister(constants/* WifiReg.IpAddress */.eFM.IpAddress, [new Uint8Array(0)]);
    _this.eui48 = _this.addRegister(constants/* WifiReg.Eui48 */.eFM.Eui48, [new Uint8Array(0)]);

    _this.addCommand(constants/* WifiCmd.Scan */.kBD.Scan, _this.handleScan.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.Reconnect */.kBD.Reconnect, _this.handleReconnect.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.LastScanResults */.kBD.LastScanResults, _this.handleLastScanResults.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.ListKnownNetworks */.kBD.ListKnownNetworks, _this.handleListKnownNetworks.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.AddNetwork */.kBD.AddNetwork, _this.handleAddNetwork.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.ForgetAllNetworks */.kBD.ForgetAllNetworks, _this.handleForgetAllNetworks.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.ForgetNetwork */.kBD.ForgetNetwork, _this.handleForgetNetwork.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addCommand(constants/* WifiCmd.SetNetworkPriority */.kBD.SetNetworkPriority, _this.handleSetNetworkPriority.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.ipAddress.on(constants/* CHANGE */.Ver, _this.handleIpChange.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.enabled.on(constants/* CHANGE */.Ver, _this.handleEnabledChange.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  }

  var _proto = WifiServer.prototype;

  _proto.handleEnabledChange = function handleEnabledChange() {
    var [enabled] = this.enabled.values();
    if (!enabled) this.disconnect();else this.connect();
  };

  _proto.handleIpChange = function handleIpChange() {
    var [ip] = this.ipAddress.values();
    if (ip !== null && ip !== void 0 && ip.length) this.sendEvent(constants/* WifiEvent.GotIp */.Xoc.GotIp);else this.sendEvent(constants/* WifiEvent.LostIp */.Xoc.LostIp);
  };

  _proto.handleReconnect = function handleReconnect() {
    this.disconnect();

    if (this.scannedKnownNetworks.length) {
      console.debug("wifi: reconnect, connect");
      this.enabled.setValues([true]);
    }
  };

  _proto.connect = function connect() {
    var network = this.scannedKnownNetworks[0];
    var {
      ssid
    } = network || {};
    this.ssid.setValues([ssid || ""]);
    this.enabled.setValues([!!ssid]);
    this.ipAddress.setValues([ssid ? (0,random/* randomBytes */.O6)(4) : new Uint8Array(0)]);
  };

  _proto.disconnect = function disconnect() {
    this.ssid.setValues([""]);
    this.enabled.setValues([false]);
    this.ipAddress.setValues([new Uint8Array(0)]);
  };

  _proto.scan = function scan() {
    this.sendEvent(constants/* WifiEvent.ScanComplete */.Xoc.ScanComplete, (0,pack/* jdpack */.AV)("u16 u16", [this._lastScanResults.length, this.scannedKnownNetworks.length]));
  };

  _proto.handleScan = function handleScan() {
    this.scan();
  };

  _proto.handleLastScanResults = /*#__PURE__*/function () {
    var _handleLastScanResults = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var pipe = pipes/* OutPipe.from */.Ah.from(this.device.bus, pkt, true);
      yield pipe.respondForEach(this._lastScanResults, _ref => {
        var {
          flags,
          rssi,
          channel,
          bssid,
          ssid
        } = _ref;
        return (0,pack/* jdpack */.AV)("u32 x[4] i8 u8 b[6] s[33]", [flags, rssi, channel, bssid, ssid]);
      });
    });

    function handleLastScanResults(_x) {
      return _handleLastScanResults.apply(this, arguments);
    }

    return handleLastScanResults;
  }();

  _proto.handleListKnownNetworks = /*#__PURE__*/function () {
    var _handleListKnownNetworks = (0,asyncToGenerator/* default */.Z)(function* (pkt) {
      var pipe = pipes/* OutPipe.from */.Ah.from(this.device.bus, pkt, true);
      yield pipe.respondForEach(this._knownNetworks, _ref2 => {
        var {
          priority,
          flags,
          ssid
        } = _ref2;
        return (0,pack/* jdpack */.AV)("i16 i16 s", [priority, flags, ssid]);
      });
    });

    function handleListKnownNetworks(_x2) {
      return _handleListKnownNetworks.apply(this, arguments);
    }

    return handleListKnownNetworks;
  }();

  _proto.handleAddNetwork = function handleAddNetwork(pkt) {
    var [ssid, password] = pkt.jdunpack("z z");

    var network = this._knownNetworks.find(n => n.ssid === ssid);

    if (!network) {
      var scanned = this._lastScanResults.find(s => s.ssid === ssid);

      this._knownNetworks.push(network = {
        ssid,
        flags: scanned === null || scanned === void 0 ? void 0 : scanned.flags,
        priority: 0,
        password: ""
      });
    }

    network.password = password;
    this.sendEvent(constants/* WifiEvent.NetworksChanged */.Xoc.NetworksChanged);
  };

  _proto.handleForgetAllNetworks = function handleForgetAllNetworks() {
    this._knownNetworks = [];
    this.disconnect();
    this.sendEvent(constants/* WifiEvent.NetworksChanged */.Xoc.NetworksChanged);
  };

  _proto.handleForgetNetwork = function handleForgetNetwork(pkt) {
    var [ssid] = pkt.jdunpack("s");
    this._knownNetworks = this._knownNetworks.filter(network => network.ssid !== ssid);
    var [currentSsid] = this.ssid.values();
    if (ssid === currentSsid) this.disconnect();
    this.sendEvent(constants/* WifiEvent.NetworksChanged */.Xoc.NetworksChanged);
  };

  _proto.handleSetNetworkPriority = function handleSetNetworkPriority(pkt) {
    var [priority, ssid] = pkt.jdunpack("i16 s");

    var network = this._knownNetworks.find(network => network.ssid === ssid);

    if (network) network.priority = priority;
    this.sendEvent(constants/* WifiEvent.NetworksChanged */.Xoc.NetworksChanged);
  };

  (0,createClass/* default */.Z)(WifiServer, [{
    key: "scannedKnownNetworks",
    get: function get() {
      return this._lastScanResults.filter(n => this._knownNetworks.some(kn => kn.ssid === n.ssid));
    }
  }]);

  return WifiServer;
}(serviceserver/* default */.Z);
/* harmony default export */ var wifiserver = (WifiServer);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/dist/specconstants.ts
var specconstants = __webpack_require__(73512);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/accelerometerserver.ts




var AccelerometerServer = /*#__PURE__*/function (_SensorServer) {
  (0,inheritsLoose/* default */.Z)(AccelerometerServer, _SensorServer);

  function AccelerometerServer() {
    var _this;

    _this = _SensorServer.call(this, specconstants/* SRV_ACCELEROMETER */.QF7, {
      readingValues: [0.5, 0.5, -(1 - (0.5 * 0.5 + 0.5 * 0.5))],
      preferredStreamingInterval: 20
    }) || this;
    _this.maxForce = _this.addRegister(specconstants/* AccelerometerReg.MaxForce */.bdf.MaxForce, [2]);
    return _this;
  }

  return AccelerometerServer;
}(sensorserver/* default */.Z);


;// CONCATENATED MODULE: ./jacdac-ts/src/servers/brailledisplayserver.ts




var BrailleDisplayServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,inheritsLoose/* default */.Z)(BrailleDisplayServer, _JDServiceServer);

  function BrailleDisplayServer(options) {
    var _this;

    _this = _JDServiceServer.call(this, constants/* SRV_BRAILLE_DISPLAY */.IvW, options) || this;
    var {
      patterns = "",
      length = 12
    } = options || {};
    _this.patterns = _this.addRegister(constants/* BrailleDisplayReg.Patterns */.Dvj.Patterns, [patterns]);
    _this.enabled = _this.addRegister(constants/* BrailleDisplayReg.Enabled */.Dvj.Enabled, [false]);
    _this.length = _this.addRegister(constants/* BrailleDisplayReg.Length */.Dvj.Length, [length]);
    return _this;
  }

  return BrailleDisplayServer;
}(serviceserver/* default */.Z);


// EXTERNAL MODULE: ./jacdac-ts/src/jdom/flags.ts
var flags = __webpack_require__(21258);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/servers.ts


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


































 //import AzureIoTHubServer from "./azureiothubserver"








var indoorThermometerOptions = {
  instanceName: "indoor",
  readingValues: [21.5],
  streamingInterval: 1000,
  minReading: -5,
  maxReading: 50,
  readingError: [0.25],
  variant: constants/* ThermometerVariant.Indoor */._bR.Indoor
};
var outdoorThermometerOptions = {
  instanceName: "temperature",
  readingValues: [21.5],
  streamingInterval: 1000,
  minReading: -40,
  maxReading: 120,
  readingError: [0.25],
  variant: constants/* ThermometerVariant.Outdoor */._bR.Outdoor
};
var outdoorHumidityOptions = {
  instanceName: "humidity",
  streamingInterval: 1000,
  readingValues: [40],
  readingError: [0.1]
};
var soilThermometerOptions = {
  instanceName: "temperature",
  readingValues: [15],
  streamingInterval: 1000,
  minReading: -55,
  maxReading: 125,
  readingError: [0.5],
  variant: constants/* ThermometerVariant.Outdoor */._bR.Outdoor
};
var medicalThermometerOptions = {
  instanceName: "medical",
  readingValues: [37.5],
  streamingInterval: 1000,
  minReading: 35,
  maxReading: 42,
  readingError: [0.5],
  variant: constants/* ThermometerVariant.Body */._bR.Body
};
var barometerOptions = {
  instanceName: "pressure",
  readingValues: [1013],
  readingError: [0.4],
  streamingInterval: 1000
};
var sonarOptions = {
  variant: constants/* DistanceVariant.Ultrasonic */.NA1.Ultrasonic,
  minReading: 0.02,
  maxReading: 4,
  readingValues: [1]
};
var SG90_STALL_TORQUE = 1.8;
/**
 * @internal
 */

var SG90_RESPONSE_SPEED = 0.12; // deg/60deg

var microServoOptions = {
  stallTorque: SG90_STALL_TORQUE,
  // kg/cm
  responseSpeed: SG90_RESPONSE_SPEED,
  // s/60deg
  minAngle: -90,
  maxAngle: 90
};
var microServo270Options = {
  stallTorque: SG90_STALL_TORQUE,
  // kg/cm
  responseSpeed: SG90_RESPONSE_SPEED,
  // s/60deg
  minAngle: -135,
  maxAngle: 135
};
var microServo360Options = {
  stallTorque: SG90_STALL_TORQUE,
  // kg/cm
  responseSpeed: SG90_RESPONSE_SPEED * 2,
  // s/60deg
  minAngle: -180,
  maxAngle: 180
};
var windDirectionOptions = {
  readingValues: [0],
  readingError: [5],
  streamingInterval: 1000
};
var windSpeedOptions = {
  readingValues: [0],
  readingError: [0.5],
  streamingInterval: 1000,
  registerValues: [{
    code: constants/* WindSpeedReg.MaxWindSpeed */.EPs.MaxWindSpeed,
    values: [55]
  }]
};
var eCO2Options = {
  readingValues: [4000],
  streamingInterval: 1000,
  variant: constants/* ECO2Variant.VOC */.Jlc.VOC
};
var CO2Options = {
  readingValues: [4000],
  streamingInterval: 1000,
  variant: constants/* ECO2Variant.NDIR */.Jlc.NDIR
};
var tvocOptions = {
  readingValues: [500],
  streamingInterval: 1000
};
var microbitSounds = [[0, "giggle"], [0, "happy"], [0, "hello"], [0, "mysterious"], [0, "sad"], [0, "slide"], [0, "soaring"], [0, "spring"], [0, "twinkle"], [0, "yawn"]];
var soundLevel = {
  readingValues: [0],
  inactiveThreshold: 10,
  activeThreshold: 70,
  intensityValues: [false],
  registerValues: [{
    code: constants/* SoundLevelReg.MinDecibels */.lSs.MinDecibels,
    values: [-100]
  }, {
    code: constants/* SoundLevelReg.MaxDecibels */.lSs.MaxDecibels,
    values: [-30]
  }]
};
var soundSpectrum = {
  readingValues: [new Uint8Array(0)],
  intensityValues: [false],
  registerValues: [{
    code: constants/* SoundSpectrumReg.FftPow2Size */.w4N.FftPow2Size,
    values: [5]
  }, {
    code: constants/* SoundSpectrumReg.MinDecibels */.w4N.MinDecibels,
    values: [-100]
  }, {
    code: constants/* SoundSpectrumReg.MaxDecibels */.w4N.MaxDecibels,
    values: [-30]
  }, {
    code: constants/* SoundSpectrumReg.SmoothingTimeConstant */.w4N.SmoothingTimeConstant,
    values: [0.8]
  }]
};
/**
 * A factory for instantiation a simulated service server
 * @category Servers
 */

var _providerDefinitions;

function initProviders() {
  return _providerDefinitions = _providerDefinitions || [{
    name: "7-segment (4 segments)",
    serviceClasses: [constants/* SRV_SEVEN_SEGMENT_DISPLAY */.hvg],
    services: () => [new serviceserver/* default */.Z(constants/* SRV_SEVEN_SEGMENT_DISPLAY */.hvg, {
      intensityValues: [0xffff],
      valueValues: [(0,utils/* fromHex */.H_)("ff112233")],
      registerValues: [{
        code: constants/* SevenSegmentDisplayReg.DigitCount */.p2w.DigitCount,
        values: [4]
      }, {
        code: constants/* SevenSegmentDisplayReg.DecimalPoint */.p2w.DecimalPoint,
        values: [true]
      }]
    })]
  }, {
    name: "7-segment (8 segments)",
    serviceClasses: [constants/* SRV_SEVEN_SEGMENT_DISPLAY */.hvg],
    services: () => [new serviceserver/* default */.Z(constants/* SRV_SEVEN_SEGMENT_DISPLAY */.hvg, {
      intensityValues: [0xffff],
      valueValues: [(0,utils/* fromHex */.H_)("0102040810204080")],
      registerValues: [{
        code: constants/* SevenSegmentDisplayReg.DigitCount */.p2w.DigitCount,
        values: [8]
      }, {
        code: constants/* SevenSegmentDisplayReg.DecimalPoint */.p2w.DecimalPoint,
        values: [true]
      }]
    })]
  }, {
    name: "accelerometer",
    serviceClasses: [constants/* SRV_ACCELEROMETER */.QF7],
    services: () => [new AccelerometerServer()]
  }, {
    name: "barometer",
    serviceClasses: [constants/* SRV_BAROMETER */.bDe],
    services: () => [new AnalogSensorServer(constants/* SRV_BAROMETER */.bDe, barometerOptions)]
  }, {
    name: "bitradio",
    serviceClasses: [constants/* SRV_BIT_RADIO */.BYF],
    services: () => [new BitRadioServer()]
  }, {
    name: "Braille display (4 patterns)",
    serviceClasses: [constants/* SRV_BRAILLE_DISPLAY */.IvW],
    services: () => [new BrailleDisplayServer({
      patterns: "⠃",
      length: 4
    })]
  }, {
    name: "Braille display (16 patterns)",
    serviceClasses: [constants/* SRV_BRAILLE_DISPLAY */.IvW],
    services: () => [new BrailleDisplayServer({
      patterns: "⠃",
      length: 16
    })]
  }, {
    name: "Braille display (32 patterns)",
    serviceClasses: [constants/* SRV_BRAILLE_DISPLAY */.IvW],
    services: () => [new BrailleDisplayServer({
      patterns: "⠃",
      length: 32
    })]
  }, {
    name: "button",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => [new ButtonServer()]
  }, {
    name: "button (2x)",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => [new ButtonServer("B0"), new ButtonServer("B1")]
  }, {
    name: "button (4x)",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => Array(4).fill(0).map((_, i) => new ButtonServer("B" + i))
  }, {
    name: "buzzer",
    serviceClasses: [constants/* SRV_BUZZER */.J1$],
    services: () => [new buzzerserver/* default */.Z()]
  }, {
    name: "capacitive button",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => {
      var button = new ButtonServer();
      var config = new CapacitiveButtonServer();
      button.threshold = config.threshold;
      return [button, config];
    }
  }, {
    name: "capacitive button (6x)",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => Array(6).fill(0).map((_, i) => new ButtonServer("C" + i, true))
  }, {
    name: "capacitive button (12x)",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => Array(12).fill(0).map((_, i) => new ButtonServer("C" + i, true))
  }, {
    name: "character screen (LDC, 16x2)",
    serviceClasses: [constants/* SRV_CHARACTER_SCREEN */.IB4],
    services: () => [new CharacterScreenServer({
      message: "hello\nworld!"
    })]
  }, {
    name: "character screen (OLED, 32x8, RTL)",
    serviceClasses: [constants/* SRV_CHARACTER_SCREEN */.IB4],
    services: () => [new CharacterScreenServer({
      message: "hello\nworld!",
      columns: 32,
      rows: 8,
      variant: constants/* CharacterScreenVariant.OLED */.GLh.OLED,
      textDirection: constants/* CharacterScreenTextDirection.RightToLeft */.mbk.RightToLeft
    })]
  }, {
    name: "character screen (Braille, 4x1)",
    serviceClasses: [constants/* SRV_CHARACTER_SCREEN */.IB4],
    services: () => [new CharacterScreenServer({
      message: "hi",
      columns: 4,
      rows: 1,
      variant: constants/* CharacterScreenVariant.Braille */.GLh.Braille,
      textDirection: constants/* CharacterScreenTextDirection.LeftToRight */.mbk.LeftToRight
    })]
  }, {
    name: "character screen (Braille, 16x1)",
    serviceClasses: [constants/* SRV_CHARACTER_SCREEN */.IB4],
    services: () => [new CharacterScreenServer({
      message: "hi",
      columns: 16,
      rows: 1,
      variant: constants/* CharacterScreenVariant.Braille */.GLh.Braille,
      textDirection: constants/* CharacterScreenTextDirection.LeftToRight */.mbk.LeftToRight
    })]
  }, {
    name: "character screen (Braille, 32x1)",
    serviceClasses: [constants/* SRV_CHARACTER_SCREEN */.IB4],
    services: () => [new CharacterScreenServer({
      message: "hi",
      columns: 32,
      rows: 1,
      variant: constants/* CharacterScreenVariant.Braille */.GLh.Braille,
      textDirection: constants/* CharacterScreenTextDirection.LeftToRight */.mbk.LeftToRight
    })]
  }, {
    name: "color",
    serviceClasses: [constants/* SRV_COLOR */.Coy],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_COLOR */.Coy, {
      readingValues: [0.5, 0, 0.5],
      preferredStreamingInterval: 1000
    })]
  }, {
    name: "compass",
    serviceClasses: [constants/* SRV_COMPASS */.JTB],
    services: () => [new CompassServer()]
  }, {
    name: "dimmer (fan)",
    serviceClasses: [constants/* SRV_DIMMER */.YzE],
    services: () => [new DimmerServer("fan", {
      variant: constants/* DimmerVariant.Fan */.V1A.Fan
    })]
  }, {
    name: "dimmer (light)",
    serviceClasses: [constants/* SRV_DIMMER */.YzE],
    services: () => [new DimmerServer("light", {
      variant: constants/* DimmerVariant.Light */.V1A.Light
    })]
  }, {
    name: "distance (sonar)",
    serviceClasses: [constants/* SRV_DISTANCE */.Sfn],
    services: () => [new AnalogSensorServer(constants/* SRV_DISTANCE */.Sfn, sonarOptions)]
  }, {
    name: "DMX",
    serviceClasses: [constants/* SRV_DMX */.$GJ],
    services: () => [new DMXServer()]
  }, {
    name: "eCO₂",
    serviceClasses: [constants/* SRV_E_CO2 */.bpX],
    services: () => [new AnalogSensorServer(constants/* SRV_E_CO2 */.bpX, eCO2Options)]
  }, {
    name: "eCO₂ + TVOC",
    serviceClasses: [constants/* SRV_E_CO2 */.bpX, constants/* SRV_TVOC */.Jz1],
    services: () => [new AnalogSensorServer(constants/* SRV_E_CO2 */.bpX, eCO2Options), new AnalogSensorServer(constants/* SRV_TVOC */.Jz1, tvocOptions)]
  }, {
    name: "eCO₂ + humidity + thermometer",
    serviceClasses: [constants/* SRV_E_CO2 */.bpX, constants/* SRV_HUMIDITY */.JbI, constants/* SRV_THERMOMETER */.O$i],
    services: () => [new AnalogSensorServer(constants/* SRV_E_CO2 */.bpX, CO2Options), new AnalogSensorServer(constants/* SRV_HUMIDITY */.JbI, outdoorHumidityOptions), new AnalogSensorServer(constants/* SRV_THERMOMETER */.O$i, indoorThermometerOptions)]
  }, {
    name: "flex sensor (2.2 inch)",
    serviceClasses: [constants/* SRV_FLEX */.YYl],
    services: () => [new AnalogSensorServer(constants/* SRV_FLEX */.YYl, {
      variant: constants/* FlexVariant.Linear22Inch */.MhZ.Linear22Inch,
      readingValues: [0.5]
    })]
  }, {
    name: "gyroscope",
    serviceClasses: [constants/* SRV_GYROSCOPE */.R0$],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_GYROSCOPE */.R0$, {
      readingValues: [0, 0, 0]
    })]
  }, {
    name: "heart rate",
    serviceClasses: [constants/* SRV_HEART_RATE */.t9W],
    services: () => [new AnalogSensorServer(constants/* SRV_HEART_RATE */.t9W, {
      readingValues: [80],
      streamingInterval: 100,
      variant: constants/* HeartRateVariant.Finger */.PBH.Finger
    })]
  }, {
    name: "humidity",
    serviceClasses: [constants/* SRV_HUMIDITY */.JbI],
    services: () => [new AnalogSensorServer(constants/* SRV_HUMIDITY */.JbI, outdoorHumidityOptions)]
  }, {
    name: "humidity + temperature",
    serviceClasses: [constants/* SRV_HUMIDITY */.JbI, constants/* SRV_THERMOMETER */.O$i],
    services: () => [new AnalogSensorServer(constants/* SRV_THERMOMETER */.O$i, outdoorThermometerOptions), new AnalogSensorServer(constants/* SRV_HUMIDITY */.JbI, outdoorHumidityOptions)]
  }, {
    name: "humidity + temperature + barometer",
    serviceClasses: [constants/* SRV_HUMIDITY */.JbI, constants/* SRV_THERMOMETER */.O$i, constants/* SRV_BAROMETER */.bDe],
    services: () => [new AnalogSensorServer(constants/* SRV_THERMOMETER */.O$i, outdoorThermometerOptions), new AnalogSensorServer(constants/* SRV_HUMIDITY */.JbI, outdoorHumidityOptions), new AnalogSensorServer(constants/* SRV_BAROMETER */.bDe, barometerOptions)]
  }, {
    name: "HID keyboard",
    serviceClasses: [constants/* SRV_HID_KEYBOARD */.Hg9],
    services: () => [new hidkeyboardserver/* default */.ZP()]
  }, {
    name: "HID mouse",
    serviceClasses: [constants/* SRV_HID_MOUSE */.Eef],
    services: () => [new hidmouseserver/* default */.Z()]
  }, {
    name: "illuminance",
    serviceClasses: [constants/* SRV_ILLUMINANCE */.Mvm],
    services: () => [new AnalogSensorServer(constants/* SRV_ILLUMINANCE */.Mvm, {
      readingValues: [1]
    })]
  }, {
    name: "joystick (stick + A + B)",
    serviceClasses: [constants/* SRV_JOYSTICK */.vRO],
    services: () => [new joystickserver/* default */.ZP({
      variant: constants/* JoystickVariant.Thumb */.BUi.Thumb,
      buttonsAvailable: constants/* JoystickButtons.A */.xC.A | constants/* JoystickButtons.B */.xC.B
    })]
  }, {
    name: "joystick (stick)",
    serviceClasses: [constants/* SRV_JOYSTICK */.vRO],
    services: () => [new joystickserver/* default */.ZP({
      variant: constants/* JoystickVariant.Thumb */.BUi.Thumb
    })]
  }, {
    name: "joystick (stick+A)",
    serviceClasses: [constants/* SRV_JOYSTICK */.vRO],
    services: () => [new joystickserver/* default */.ZP({
      variant: constants/* JoystickVariant.Thumb */.BUi.Thumb,
      buttonsAvailable: constants/* JoystickButtons.A */.xC.A
    })]
  }, {
    name: "joystick (Dpad + all buttons)",
    serviceClasses: [constants/* SRV_JOYSTICK */.vRO],
    services: () => [new joystickserver/* default */.ZP({
      variant: constants/* JoystickVariant.Gamepad */.BUi.Gamepad,
      buttonsAvailable: joystickserver/* JOYSTICK_ARCADE_BUTTONS */.f8
    })]
  }, {
    name: "joystick (only DPad+A/B)",
    serviceClasses: [constants/* SRV_JOYSTICK */.vRO],
    services: () => [new joystickserver/* default */.ZP({
      variant: constants/* JoystickVariant.Gamepad */.BUi.Gamepad,
      buttonsAvailable: joystickserver/* JOYSTICK_DPAD_AB_BUTTONS */.YJ
    })]
  }, {
    name: "RGB LED (RGB through hole)",
    serviceClasses: [constants/* SRV_LED */.i04],
    services: () => [new LEDServer({
      variant: constants/* LedVariant.ThroughHole */.FRS.ThroughHole,
      ledCount: 1,
      color: [255, 0, 0]
    })]
  }, {
    name: "LED (5x blue through hole)",
    serviceClasses: [constants/* SRV_LED */.i04],
    services: () => [new LEDServer({
      variant: constants/* LedVariant.ThroughHole */.FRS.ThroughHole,
      waveLength: 450,
      ledCount: 5,
      color: [0, 0, 255]
    })]
  }, {
    name: "LED matrix (5x5 micro:bit)",
    serviceClasses: [constants/* SRV_DOT_MATRIX */.GDq],
    services: () => [new DotMatrixServer(5, 5, {
      brightness: 128,
      variant: constants/* DotMatrixVariant.LED */.ozp.LED
    })]
  }, {
    name: "LED matrix (8x8)",
    serviceClasses: [constants/* SRV_DOT_MATRIX */.GDq],
    services: () => [new DotMatrixServer(8, 8, {
      brightness: 128,
      variant: constants/* DotMatrixVariant.LED */.ozp.LED
    })]
  }, {
    name: "LED matrix (11x7)",
    serviceClasses: [constants/* SRV_DOT_MATRIX */.GDq],
    services: () => [new DotMatrixServer(11, 7, {
      brightness: 128,
      variant: constants/* DotMatrixVariant.LED */.ozp.LED
    })]
  }, {
    name: "Braille matrix (8x4)",
    serviceClasses: [constants/* SRV_DOT_MATRIX */.GDq],
    services: () => [new DotMatrixServer(8, 4, {
      variant: constants/* DotMatrixVariant.Braille */.ozp.Braille
    })]
  }, {
    name: "LED pixel ring 10",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 10,
      variant: constants/* LedPixelVariant.Ring */.dQg.Ring
    })]
  }, {
    name: "LED pixel ring 12",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 12,
      variant: constants/* LedPixelVariant.Ring */.dQg.Ring
    })]
  }, {
    name: "LED pixel ring 16",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 16,
      variant: constants/* LedPixelVariant.Ring */.dQg.Ring
    })]
  }, {
    name: "LED pixel ring 24",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 24,
      variant: constants/* LedPixelVariant.Ring */.dQg.Ring
    })]
  }, {
    name: "LED pixel jewel 7",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 7,
      variant: constants/* LedPixelVariant.Jewel */.dQg.Jewel
    })]
  }, {
    name: "LED pixel stick 8",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 8,
      variant: constants/* LedPixelVariant.Stick */.dQg.Stick
    })]
  }, {
    name: "LED pixel strip 30",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 60,
      maxPower: 1000,
      variant: constants/* LedPixelVariant.Strip */.dQg.Strip
    })]
  }, {
    name: "LED pixel strip 60",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 60,
      maxPower: 2000,
      variant: constants/* LedPixelVariant.Strip */.dQg.Strip
    })]
  }, {
    name: "LED pixel strip 150",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 150,
      maxPower: 5000,
      variant: constants/* LedPixelVariant.Strip */.dQg.Strip
    })]
  }, {
    name: "LED pixel strip 300",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 300,
      maxPower: 5000,
      variant: constants/* LedPixelVariant.Strip */.dQg.Strip
    })]
  }, {
    name: "LED pixel matrix (4x4)",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 16,
      variant: constants/* LedPixelVariant.Matrix */.dQg.Matrix
    })]
  }, {
    name: "LED pixel matrix (8x8)",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 64,
      variant: constants/* LedPixelVariant.Matrix */.dQg.Matrix
    })]
  }, {
    name: "LED pixel matrix (16x4)",
    serviceClasses: [constants/* SRV_LED_PIXEL */.zEX],
    services: () => [new ledpixelserver/* default */.Z({
      numPixels: 64,
      numColumns: 16,
      variant: constants/* LedPixelVariant.Matrix */.dQg.Matrix
    })]
  }, {
    name: "light bulb",
    serviceClasses: [constants/* SRV_LIGHT_BULB */.yWt],
    services: () => [new serviceserver/* default */.Z(constants/* SRV_LIGHT_BULB */.yWt, {
      intensityValues: [0],
      isActive: values => !!(values !== null && values !== void 0 && values[0]),
      intensityProcessor: values => {
        var newValues = [values[0] > 0 ? 1 : 0];
        return newValues;
      },
      registerValues: [{
        code: constants/* LightBulbReg.Dimmeable */.DPc.Dimmeable,
        values: [false]
      }]
    })]
  }, {
    name: "light bulb (dimmeable)",
    serviceClasses: [constants/* SRV_LIGHT_BULB */.yWt],
    services: () => [new serviceserver/* default */.Z(constants/* SRV_LIGHT_BULB */.yWt, {
      intensityValues: [0],
      isActive: values => !!(values !== null && values !== void 0 && values[0]),
      registerValues: [{
        code: constants/* LightBulbReg.Dimmeable */.DPc.Dimmeable,
        values: [true]
      }]
    })]
  }, {
    name: "light level (photo-resistor)",
    serviceClasses: [constants/* SRV_LIGHT_LEVEL */.pPH],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_LIGHT_LEVEL */.pPH, {
      readingValues: [0.5],
      variant: constants/* LightLevelVariant.PhotoResistor */.A9j.PhotoResistor
    })]
  }, {
    name: "line tracker (digital)",
    serviceClasses: [constants/* SRV_REFLECTED_LIGHT */.tky],
    services: () => [new ReflectedLightServer()]
  }, {
    name: "line tracker (2x digital)",
    serviceClasses: [constants/* SRV_REFLECTED_LIGHT */.tky],
    services: () => [new ReflectedLightServer(), new ReflectedLightServer()]
  }, {
    name: "line tracker (analog)",
    serviceClasses: [constants/* SRV_REFLECTED_LIGHT */.tky],
    services: () => [new ReflectedLightServer({
      variant: constants/* ReflectedLightVariant.InfraredAnalog */.cRH.InfraredAnalog
    })]
  }, {
    name: "matrix keypad (3x4)",
    serviceClasses: [constants/* SRV_MATRIX_KEYPAD */.UB9],
    services: () => [new MatrixKeypadServer(3, 4, ["0", "1", "2", "3", "4", "5", "6", "7", "8", "*", "0", "#"])]
  }, {
    name: "matrix keypad (4x4)",
    serviceClasses: [constants/* SRV_MATRIX_KEYPAD */.UB9],
    services: () => [new MatrixKeypadServer(4, 4, ["0", "1", "2", "A", "3", "4", "5", "B", "6", "7", "8", "C", "*", "0", "#", "D"])]
  }, {
    name: "matrix keypad (1x4)",
    serviceClasses: [constants/* SRV_MATRIX_KEYPAD */.UB9],
    services: () => [new MatrixKeypadServer(4, 1, ["1", "2", "3", "4"])]
  }, {
    name: "motion",
    serviceClasses: [constants/* SRV_MOTION */.yRl],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_MOTION */.yRl, {
      readingValues: [false],
      streamingInterval: 1000
    })]
  }, {
    name: "motor",
    serviceClasses: [constants/* SRV_MOTOR */.YZU],
    services: () => [new MotorServer()],
    resetIn: true
  }, {
    name: "protocol test",
    serviceClasses: [constants/* SRV_PROTO_TEST */.$Bn],
    services: () => [new protocoltestserver/* default */.Z()]
  }, {
    name: "pulse oxymeter",
    serviceClasses: [constants/* SRV_PULSE_OXIMETER */.c2H],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_PULSE_OXIMETER */.c2H, {
      readingValues: [98],
      streamingInterval: 1000
    })]
  }, {
    name: "oxymeter + heart beat",
    serviceClasses: [constants/* SRV_PULSE_OXIMETER */.c2H, constants/* SRV_HEART_RATE */.t9W],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_PULSE_OXIMETER */.c2H, {
      readingValues: [98],
      streamingInterval: 1000
    }), new AnalogSensorServer(constants/* SRV_HEART_RATE */.t9W, {
      readingValues: [80],
      streamingInterval: 1000,
      variant: constants/* HeartRateVariant.Finger */.PBH.Finger
    })]
  }, {
    name: "power",
    serviceClasses: [constants/* SRV_POWER */.mQG],
    services: () => [new PowerServer()]
  }, {
    name: "RNG (random number generator)",
    serviceClasses: [constants/* SRV_RNG */.NMZ],
    services: () => [new RandomNumberGeneratorServer()]
  }, {
    name: "rain gauge",
    serviceClasses: [constants/* SRV_RAIN_GAUGE */.NnQ],
    services: () => [new RainGaugeServer()]
  }, {
    name: "real time clock",
    serviceClasses: [constants/* SRV_REAL_TIME_CLOCK */.XXX],
    services: () => [new realtimeclockserver/* default */.Z()]
  }, {
    name: "relay (EM/10A)",
    serviceClasses: [constants/* SRV_RELAY */.E4D],
    services: () => [new serviceserver/* default */.Z(constants/* SRV_RELAY */.E4D, {
      intensityValues: [false],
      isActive: values => !!(values !== null && values !== void 0 && values[0]),
      variant: constants/* RelayVariant.Electromechanical */.fuX.Electromechanical,
      registerValues: [{
        code: constants/* RelayReg.MaxSwitchingCurrent */.D_x.MaxSwitchingCurrent,
        values: [10]
      }]
    })]
  }, {
    name: "relay 4x (SSR/5A)",
    serviceClasses: [constants/* SRV_RELAY */.E4D],
    services: () => Array(4).fill(0).map(() => new serviceserver/* default */.Z(constants/* SRV_RELAY */.E4D, {
      intensityValues: [false],
      isActive: values => !!(values !== null && values !== void 0 && values[0]),
      variant: constants/* RelayVariant.SolidState */.fuX.SolidState,
      registerValues: [{
        code: constants/* RelayReg.MaxSwitchingCurrent */.D_x.MaxSwitchingCurrent,
        values: [5]
      }]
    }))
  }, {
    name: "rotary encoder",
    serviceClasses: [constants/* SRV_ROTARY_ENCODER */.lNp],
    services: () => [new RotaryEncoderServer()]
  }, {
    name: "rotary encoder + button",
    serviceClasses: [constants/* SRV_ROTARY_ENCODER */.lNp, constants/* SRV_BUTTON */.XJR],
    services: () => [new RotaryEncoderServer(), new ButtonServer()]
  }, {
    name: "rotary potentiometer",
    serviceClasses: [constants/* SRV_POTENTIOMETER */.GQv],
    services: () => [new AnalogSensorServer(constants/* SRV_POTENTIOMETER */.GQv, {
      variant: constants/* PotentiometerVariant.Rotary */.cmA.Rotary,
      readingValues: [0.5]
    })]
  }, {
    name: "servo",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    services: () => [new ServoServer(microServoOptions)],
    resetIn: true
  }, {
    name: "servo (270°)",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    services: () => [new ServoServer(microServo270Options)],
    resetIn: true
  }, {
    name: "servo (360°)",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    services: () => [new ServoServer(microServo360Options)],
    resetIn: true
  }, {
    name: "servo x 2",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    resetIn: true,
    services: () => Array(2).fill(0).map((_, i) => new ServoServer(_objectSpread(_objectSpread({}, microServoOptions), {}, {
      instanceName: "S" + i
    })))
  }, {
    name: "servo x 4",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    resetIn: true,
    services: () => Array(4).fill(0).map((_, i) => new ServoServer(_objectSpread(_objectSpread({}, microServoOptions), {}, {
      instanceName: "S" + i
    })))
  }, {
    name: "servo x 6",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    resetIn: true,
    services: () => Array(6).fill(0).map((_, i) => new ServoServer(_objectSpread(_objectSpread({}, microServoOptions), {}, {
      instanceName: "S" + i
    })))
  }, {
    name: "servo x 16",
    serviceClasses: [constants/* SRV_SERVO */.$X_],
    resetIn: true,
    services: () => Array(16).fill(0).map((_, i) => new ServoServer(_objectSpread(_objectSpread({}, microServoOptions), {}, {
      instanceName: "S" + i
    })))
  }, {
    name: "settings",
    serviceClasses: [constants/* SRV_SETTINGS */.B9b],
    services: () => [new SettingsServer()]
  }, {
    name: "slider (potentiometer)",
    serviceClasses: [constants/* SRV_POTENTIOMETER */.GQv],
    services: () => [new AnalogSensorServer(constants/* SRV_POTENTIOMETER */.GQv, {
      variant: constants/* PotentiometerVariant.Slider */.cmA.Slider
    })]
  }, {
    name: "soil moisture",
    serviceClasses: [constants/* SRV_SOIL_MOISTURE */.Bj3],
    services: () => [new AnalogSensorServer(constants/* SRV_SOIL_MOISTURE */.Bj3, {
      readingValues: [0.5],
      readingError: [0.05],
      streamingInterval: 1000
    })]
  }, {
    name: "speech synthesis",
    serviceClasses: [constants/* SRV_SPEECH_SYNTHESIS */.ydR],
    services: () => [new SpeechSynthesisServer()]
  }, {
    name: "solenoid",
    serviceClasses: [constants/* SRV_SOLENOID */.b68],
    services: () => [new serviceserver/* default */.Z(constants/* SRV_SOLENOID */.b68, {
      intensityValues: [0]
    })]
  }, {
    name: "sound level",
    serviceClasses: [constants/* SRV_SOUND_LEVEL */.GvX],
    services: () => [new AnalogSensorServer(constants/* SRV_SOUND_LEVEL */.GvX, soundLevel)]
  }, {
    name: "sound spectrum",
    serviceClasses: [constants/* SRV_SOUND_SPECTRUM */.vsp],
    services: () => [new sensorserver/* default */.Z(constants/* SRV_SOUND_SPECTRUM */.vsp, soundSpectrum)]
  }, {
    name: "sound player (micro:bit v2 sounds)",
    serviceClasses: [constants/* SRV_SOUND_PLAYER */.OrM],
    services: () => [new SoundPlayerServer(microbitSounds)]
  }, {
    name: "switch (slide)",
    serviceClasses: [constants/* SRV_SWITCH */.Crg],
    services: () => [new SwitchServer({
      variant: constants/* SwitchVariant.Slide */.fhu.Slide
    })]
  }, {
    name: "switch (push button)",
    serviceClasses: [constants/* SRV_SWITCH */.Crg],
    services: () => [new SwitchServer({
      variant: constants/* SwitchVariant.PushButton */.fhu.PushButton
    })]
  }, {
    name: "switch (toggle)",
    serviceClasses: [constants/* SRV_SWITCH */.Crg],
    services: () => [new SwitchServer({
      variant: constants/* SwitchVariant.Toggle */.fhu.Toggle
    })]
  }, {
    name: "switch (tilt)",
    serviceClasses: [constants/* SRV_SWITCH */.Crg],
    services: () => [new SwitchServer({
      variant: constants/* SwitchVariant.Tilt */.fhu.Tilt
    })]
  }, {
    name: "switch (proximity)",
    serviceClasses: [constants/* SRV_SWITCH */.Crg],
    services: () => [new SwitchServer({
      variant: constants/* SwitchVariant.Proximity */.fhu.Proximity,
      autoOffDelay: 30
    })]
  }, {
    name: "thermometer (outdoor)",
    serviceClasses: [constants/* SRV_THERMOMETER */.O$i],
    services: () => [new AnalogSensorServer(constants/* SRV_THERMOMETER */.O$i, outdoorThermometerOptions)]
  }, {
    name: "thermometer (soil)",
    serviceClasses: [constants/* SRV_THERMOMETER */.O$i],
    services: () => [new AnalogSensorServer(constants/* SRV_THERMOMETER */.O$i, soilThermometerOptions)]
  }, {
    name: "thermometer (medical)",
    serviceClasses: [constants/* SRV_THERMOMETER */.O$i],
    services: () => [new AnalogSensorServer(constants/* SRV_THERMOMETER */.O$i, medicalThermometerOptions)]
  }, {
    name: "traffic light",
    serviceClasses: [constants/* SRV_TRAFFIC_LIGHT */.jHN],
    services: () => [new TrafficLightServer()]
  }, {
    name: "traffic crossing (4 x lights)",
    serviceClasses: [constants/* SRV_TRAFFIC_LIGHT */.jHN],
    services: () => Array(4).fill(0).map(_ => new TrafficLightServer())
  }, {
    name: "thermocouple",
    serviceClasses: [constants/* SRV_THERMOCOUPLE */.ZZs],
    services: () => [new AnalogSensorServer(constants/* SRV_THERMOCOUPLE */.ZZs, {
      readingValues: [550],
      streamingInterval: 1000,
      minReading: 0,
      maxReading: 1100,
      readingError: [2.2],
      variant: constants/* ThermocoupleVariant.TypeB */.Jvc.TypeB
    })]
  }, {
    name: "TVOC",
    serviceClasses: [constants/* SRV_TVOC */.Jz1],
    services: () => [new AnalogSensorServer(constants/* SRV_TVOC */.Jz1, tvocOptions)]
  }, {
    name: "UV index",
    serviceClasses: [constants/* SRV_UV_INDEX */.R2S],
    services: () => [new AnalogSensorServer(constants/* SRV_UV_INDEX */.R2S, {
      readingValues: [5],
      minReading: 0,
      maxReading: 11,
      streamingInterval: 1000
    })]
  }, {
    name: "vibration motor",
    serviceClasses: [constants/* SRV_VIBRATION_MOTOR */.X8d],
    services: () => [new vibrationmotorserver/* default */.Z()]
  }, {
    name: "water level",
    serviceClasses: [constants/* SRV_WATER_LEVEL */.Szz],
    services: () => [new AnalogSensorServer(constants/* SRV_WATER_LEVEL */.Szz, {
      readingValues: [0.5],
      streamingInterval: 1000
    })]
  }, {
    name: "weight scale (jewelry)",
    serviceClasses: [constants/* SRV_WEIGHT_SCALE */.Mf9],
    services: () => [new AnalogSensorServer(constants/* SRV_WEIGHT_SCALE */.Mf9, {
      readingValues: [0.001],
      variant: constants/* WeightScaleVariant.Jewelry */.eBe.Jewelry,
      maxReading: 0.2,
      minReading: 0.0005,
      readingResolution: 0.00001
    })]
  }, {
    name: "weight scale (body)",
    serviceClasses: [constants/* SRV_WEIGHT_SCALE */.Mf9],
    services: () => [new AnalogSensorServer(constants/* SRV_WEIGHT_SCALE */.Mf9, {
      readingValues: [60],
      variant: constants/* WeightScaleVariant.Body */.eBe.Body,
      maxReading: 180,
      readingResolution: 0.1
    })]
  }, {
    name: "weight scale (food)",
    serviceClasses: [constants/* SRV_WEIGHT_SCALE */.Mf9],
    services: () => [new AnalogSensorServer(constants/* SRV_WEIGHT_SCALE */.Mf9, {
      readingValues: [0.5],
      variant: constants/* WeightScaleVariant.Food */.eBe.Food,
      maxReading: 6,
      readingResolution: 0.001
    })]
  }, {
    name: "wind direction",
    serviceClasses: [constants/* SRV_WIND_DIRECTION */.M$m],
    services: () => [new AnalogSensorServer(constants/* SRV_WIND_DIRECTION */.M$m, windDirectionOptions)]
  }, {
    name: "wind speed",
    serviceClasses: [constants/* SRV_WIND_SPEED */.qvJ],
    services: () => [new AnalogSensorServer(constants/* SRV_WIND_SPEED */.qvJ, windSpeedOptions)]
  }, {
    name: "weather station (wind speed, direction, rain)",
    serviceClasses: [constants/* SRV_WIND_SPEED */.qvJ, constants/* SRV_WIND_DIRECTION */.M$m, constants/* SRV_RAIN_GAUGE */.NnQ],
    services: () => [new AnalogSensorServer(constants/* SRV_WIND_SPEED */.qvJ, windSpeedOptions), new AnalogSensorServer(constants/* SRV_WIND_DIRECTION */.M$m, windDirectionOptions), new RainGaugeServer()]
  }, {
    name: "chassis (motor x 2 + sonar + light)",
    serviceClasses: [constants/* SRV_DISTANCE */.Sfn, constants/* SRV_LED_PIXEL */.zEX, constants/* SRV_MOTOR */.YZU],
    services: () => [new MotorServer("L"), new MotorServer("R"), new AnalogSensorServer(constants/* SRV_DISTANCE */.Sfn, sonarOptions), new ledpixelserver/* default */.Z({
      numPixels: 5,
      variant: constants/* LedPixelVariant.Stick */.dQg.Stick,
      instanceName: "lights"
    })]
  }, {
    name: "railway crossing (2 x lights, 2 x servos, 1 x buffer)",
    serviceClasses: [constants/* SRV_TRAFFIC_LIGHT */.jHN, constants/* SRV_SERVO */.$X_, constants/* SRV_BUZZER */.J1$],
    services: () => [new TrafficLightServer({
      instanceName: "left light"
    }), new ServoServer({
      minAngle: 0,
      maxAngle: 90,
      instanceName: "left arm"
    }), new TrafficLightServer({
      instanceName: "right light"
    }), new ServoServer({
      minAngle: 0,
      maxAngle: 90,
      instanceName: "right arm"
    }), new buzzerserver/* default */.Z({
      instanceName: "bell"
    })]
  }, {
    name: "Arcade controller (6 x buttons)",
    serviceClasses: [constants/* SRV_BUTTON */.XJR],
    services: () => [new ButtonServer("Left"), new ButtonServer("Up"), new ButtonServer("Right"), new ButtonServer("Down"), new ButtonServer("A"), new ButtonServer("B")]
  }, {
    name: "micro:bit v2",
    serviceClasses: [constants/* SRV_DOT_MATRIX */.GDq, constants/* SRV_BUTTON */.XJR, constants/* SRV_ACCELEROMETER */.QF7, constants/* SRV_SOUND_LEVEL */.GvX, constants/* SRV_LIGHT_LEVEL */.pPH, constants/* SRV_BUZZER */.J1$, constants/* SRV_SOUND_PLAYER */.OrM],
    services: () => [new DotMatrixServer(5, 5), new ButtonServer("A"), new ButtonServer("B"), new sensorserver/* default */.Z(constants/* SRV_ACCELEROMETER */.QF7, {
      readingValues: [0.5, 0.5, -(1 - (0.5 * 0.5 + 0.5 * 0.5))]
    }), new AnalogSensorServer(constants/* SRV_SOUND_LEVEL */.GvX, soundLevel), new sensorserver/* default */.Z(constants/* SRV_LIGHT_LEVEL */.pPH, {
      readingValues: [0.5],
      variant: constants/* LightLevelVariant.LEDMatrix */.A9j.LEDMatrix
    }), new buzzerserver/* default */.Z(), new SoundPlayerServer(microbitSounds)]
  }, {
    name: "power + humidity",
    serviceClasses: [constants/* SRV_POWER */.mQG, constants/* SRV_HUMIDITY */.JbI],
    services: () => [new PowerServer(), new AnalogSensorServer(constants/* SRV_HUMIDITY */.JbI, outdoorHumidityOptions)],
    factory: services => {
      var dev = new serverserviceprovider/* default */.Z("power+humidity", [services[0]]);
      var pwr = dev.service(1);
      pwr.enabled.on(constants/* CHANGE */.Ver, () => {
        var enabled = !!pwr.enabled.values()[0];
        console.debug("power: " + (enabled ? "on" : "off"));
        if (enabled) // power + rest
          dev.updateServices(services); // power only
        else dev.updateServices([services[0]]);
      });
      return dev;
    }
  }, flags/* default.diagnostics */.Z.diagnostics ? {
    name: "WiFi (virtual, no ap)",
    serviceClasses: [constants/* SRV_WIFI */.zti],
    services: () => [new wifiserver()]
  } : undefined, flags/* default.diagnostics */.Z.diagnostics ? {
    name: "WiFi (virtual, 1 AP)",
    serviceClasses: [constants/* SRV_WIFI */.zti],
    services: () => [new wifiserver({
      scanResults: [{
        ssid: "HOME",
        bssid: new Uint8Array(0),
        rssi: -42,
        channel: 10,
        flags: constants/* WifiAPFlags.WPS */.GHo.WPS | constants/* WifiAPFlags.IEEE_802_11B */.GHo.IEEE_802_11B
      }]
    })]
  } : undefined, flags/* default.diagnostics */.Z.diagnostics ? {
    name: "WiFi (virtual, 1 network)",
    serviceClasses: [constants/* SRV_WIFI */.zti],
    services: () => [new wifiserver({
      scanResults: [{
        ssid: "HOME",
        bssid: new Uint8Array(0),
        rssi: -42,
        channel: 10,
        flags: constants/* WifiAPFlags.WPS */.GHo.WPS | constants/* WifiAPFlags.IEEE_802_11B */.GHo.IEEE_802_11B
      }],
      knownNetworks: [{
        ssid: "HOME",
        password: "home",
        priority: 0,
        flags: constants/* WifiAPFlags.WPS */.GHo.WPS | constants/* WifiAPFlags.IEEE_802_11B */.GHo.IEEE_802_11B
      }]
    })]
  } : undefined, flags/* default.diagnostics */.Z.diagnostics ? {
    name: "Azure IoT Hub Health (virtual)",
    serviceClasses: [constants/* SRV_AZURE_IOT_HUB_HEALTH */.tOR],
    services: () => [new AzureIoTHubHealthServer()]
  } : undefined].filter(s => !!s);
}
/**
 * Gets the list of simulated service providers
 * @category Servers
 */


function serviceProviderDefinitions() {
  return initProviders().slice(0);
}

function stableSimulatorDeviceId(bus, template) {
  var others = bus.serviceProviders().filter(sp => sp.template === template);
  var word0 = (0,utils/* hash */.vp)((0,utils/* stringToUint8Array */.sy)(template + others.length), 32);
  var word1 = (0,utils/* hash */.vp)((0,utils/* stringToUint8Array */.sy)(template + others.length + 1), 32);
  var id = (0,utils/* toFullHex */.$3)([word0, word1]);
  return id.slice(2);
}
/**
 * Instantiates a new service provider instance and adds it to the bus
 * @category Servers
 */


function addServiceProvider(bus, definition) {
  var _definition$factory;

  var services = definition.services();
  services.forEach(srv => srv.lock());
  var deviceId = stableSimulatorDeviceId(bus, definition.name);
  var options = {
    resetIn: definition.resetIn,
    deviceId
  };
  var d = ((_definition$factory = definition.factory) === null || _definition$factory === void 0 ? void 0 : _definition$factory.call(definition, services)) || new serverserviceprovider/* default */.Z(definition.name, services, options);
  bus.addServiceProvider(d);
  return d;
}
/**
 * Finds the first service provider that supports the given service class
 * @category Servers
 */

function serviceProviderDefinitionFromServiceClass(serviceClass) {
  return initProviders().find(provider => provider.serviceClasses.length === 1 && provider.serviceClasses[0] === serviceClass);
}
/**
 * Starts a service provider that hosts the given service class.
 * @category Servers
 */

function startServiceProviderFromServiceClass(bus, serviceClass) {
  var provider = serviceProviderDefinitionFromServiceClass(serviceClass);
  return addServiceProvider(bus, provider);
}

/***/ }),

/***/ 91697:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ VibrationMotorServer; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94578);
/* harmony import */ var _jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5800);





var VibrationMotorServer = /*#__PURE__*/function (_JDServiceServer) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(VibrationMotorServer, _JDServiceServer);

  function VibrationMotorServer() {
    var _this;

    _this = _JDServiceServer.call(this, _jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_VIBRATION_MOTOR */ .X8d) || this;
    _this._animationStep = -1;
    _this.enabled = _this.addRegister(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .VibrationMotorReg.Enabled */ .tDt.Enabled, [false]);

    _this.addCommand(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .VibrationMotorCmd.Vibrate */ .EmZ.Vibrate, _this.handleVibrate.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    _this.on(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .REFRESH */ .RGM, _this.handleRefresh.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_this)));

    return _this;
  }

  var _proto = VibrationMotorServer.prototype;

  _proto.handleRefresh = function handleRefresh() {
    if (!this._animation) return; // nothing to do

    var {
      start,
      pattern
    } = this._animation;
    var now = this.device.bus.timestamp;
    var elapsed = now - start;
    var t = 0;

    for (var i = 0; i < pattern.length; ++i) {
      var [duration, speed] = pattern[i];
      var dt = duration << 3;
      t += dt;

      if (t - dt <= elapsed && t > elapsed) {
        // we're playing this note
        if (this._animationStep !== i) {
          this._animationStep = i;
          this.emit(VibrationMotorServer.VIBRATE_PATTERN, {
            duration,
            speed
          });
        }

        break;
      }
    }

    if (elapsed > t) {
      // animation finished
      this._animation = undefined;
      this._animationStep = -1;
      this.emit(VibrationMotorServer.VIBRATE_PATTERN, {
        duration: 0,
        speed: 0
      });
      this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
    }
  };

  _proto.handleVibrate = function handleVibrate(pkt) {
    var [pattern] = pkt.jdunpack("r: u8 u0.8");
    this._animation = {
      start: this.device.bus.timestamp,
      pattern
    };
    this._animationStep = -1;

    if (pattern.length) {
      var [duration, speed] = pattern[0];
      this._animationStep = 0;
      this.emit(VibrationMotorServer.VIBRATE_PATTERN, {
        duration,
        speed
      });
    }

    this.emit(_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
  };

  return VibrationMotorServer;
}(_jdom_servers_serviceserver__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);

VibrationMotorServer.VIBRATE_PATTERN = "vibratePattern";


/***/ }),

/***/ 84377:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "jw": function() { return /* binding */ DrawerType; },
/* harmony export */   "wI": function() { return /* binding */ AppProvider; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(15861);
/* harmony import */ var notistack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30255);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_ts_src_jdom_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52800);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81794);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20392);
/* harmony import */ var _hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72513);
/* harmony import */ var _PacketsContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43226);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(6890);










var StartSimulatorDialog = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/* import() */ 4610).then(__webpack_require__.bind(__webpack_require__, 44610)));
var SelectRoleDialog = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(1745)]).then(__webpack_require__.bind(__webpack_require__, 31745)));
var ConnectTransportDialog = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/* import() */ 9474).then(__webpack_require__.bind(__webpack_require__, 9474)));
var DrawerType;

(function (DrawerType) {
  DrawerType[DrawerType["None"] = 0] = "None";
  DrawerType[DrawerType["Toc"] = 1] = "Toc";
  DrawerType[DrawerType["Packets"] = 2] = "Packets";
  DrawerType[DrawerType["Dom"] = 3] = "Dom";
  DrawerType[DrawerType["Console"] = 4] = "Console";
})(DrawerType || (DrawerType = {}));

var AppContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({
  drawerType: DrawerType.None,
  setDrawerType: () => {},
  searchQuery: undefined,
  setSearchQuery: () => {},
  toolsMenu: false,
  setToolsMenu: () => {},
  setError: () => {},
  enqueueSnackbar: () => {},
  toggleShowDeviceHostsDialog: () => {},
  showSelectRoleDialog: () => {},
  toggleShowConnectTransportDialog: () => {},
  selectedPacket: undefined,
  setSelectedPacket: () => {},
  showWebCam: false,
  setShowWebCam: () => {}
});
AppContext.displayName = "app";
/* harmony default export */ __webpack_exports__["ZP"] = (AppContext); // eslint-disable-next-line react/prop-types

var AppProvider = _ref => {
  var {
    children
  } = _ref;
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z);
  var {
    setSilent
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_PacketsContext__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z);
  var {
    0: type,
    1: setType
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(DrawerType.None);
  var {
    0: searchQuery,
    1: setSearchQuery
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
  var {
    0: toolsMenu,
    1: _setToolsMenu
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  var {
    0: showDeviceHostsDialog,
    1: setShowDeviceHostsDialog
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  var {
    0: showConnectTransportDialog,
    1: setShowConnectTransportDialog
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  var {
    0: showSelectRoleDialogService,
    1: setShowSelectRoleDialogService
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);
  var {
    trackError
  } = (0,_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP)();
  var {
    0: selectedPacket,
    1: setSelectedPacket
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);
  var {
    0: showWebCam,
    1: setShowWebCam
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  var {
    enqueueSnackbar: _enqueueSnackbar
  } = (0,notistack__WEBPACK_IMPORTED_MODULE_0__/* .useSnackbar */ .Ds)(); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var setError = e => {
    if (!e || (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__/* .isCancelError */ .G5)(e)) return;
    var msg = (e === null || e === void 0 ? void 0 : e.message) || e + "";
    var code = (0,_jacdac_ts_src_jdom_error__WEBPACK_IMPORTED_MODULE_3__/* .errorCode */ .uY)(e);
    console.error(msg, {
      code,
      error: e
    });
    trackError === null || trackError === void 0 ? void 0 : trackError(e, {
      code
    });

    _enqueueSnackbar(msg, {
      variant: "error",
      autoHideDuration: code ? 8000 : 4000,
      preventDuplicate: true
    });
  };

  var enqueueSnackbar = (message, variant) => _enqueueSnackbar(message, {
    variant
  });

  var setDrawerType = type => {
    if (type !== DrawerType.None) _setToolsMenu(false);
    setType(type);
    setSilent(type !== DrawerType.Packets);
  };

  var setToolsMenu = open => {
    if (open) setType(DrawerType.None);

    _setToolsMenu(open);
  }; // notify errors


  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => bus.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_2__/* .ERROR */ .pnR, e => {
    if ((0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__/* .isCancelError */ .G5)(e.exception)) return;
    setError(e.exception);
  }), []);

  var toggleShowDeviceHostsDialog = () => {
    var b = !showDeviceHostsDialog;
    setShowDeviceHostsDialog(b);
    if (!b) setToolsMenu(false);
  };

  var toggleShowConnectTransportDialog = /*#__PURE__*/function () {
    var _ref2 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(function* () {
      var b = !showConnectTransportDialog;
      setShowConnectTransportDialog(b);
      if (!b) setToolsMenu(false);
    });

    return function toggleShowConnectTransportDialog() {
      return _ref2.apply(this, arguments);
    };
  }();

  var handleCloseRoleDialog = () => setShowSelectRoleDialogService(undefined);

  var showSelectRoleDialog = srv => setShowSelectRoleDialogService(srv);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(AppContext.Provider, {
    value: {
      drawerType: type,
      setDrawerType,
      searchQuery,
      setSearchQuery,
      toolsMenu,
      setToolsMenu,
      setError,
      enqueueSnackbar,
      toggleShowDeviceHostsDialog,
      showSelectRoleDialog,
      toggleShowConnectTransportDialog,
      selectedPacket,
      setSelectedPacket,
      showWebCam,
      setShowWebCam
    }
  }, children, showDeviceHostsDialog && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(StartSimulatorDialog, {
    open: showDeviceHostsDialog,
    onClose: toggleShowDeviceHostsDialog
  })), showSelectRoleDialogService && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(SelectRoleDialog, {
    service: showSelectRoleDialogService,
    onClose: handleCloseRoleDialog
  })), showConnectTransportDialog && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(ConnectTransportDialog, {
    open: showConnectTransportDialog,
    onClose: toggleShowConnectTransportDialog
  })));
};

/***/ }),

/***/ 50092:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ CmdButton; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(45987);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67663);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(98348);
/* harmony import */ var gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36176);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _AppContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(84377);
/* harmony import */ var _mui_icons_material_Error__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(30035);
/* harmony import */ var _ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71973);
/* harmony import */ var _hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72513);
/* harmony import */ var _hooks_useMounted__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(72179);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(85505);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20392);


var _excluded = ["onClick", "className", "style", "children", "icon", "title", "disabled", "disableReset", "autoRun", "trackName", "trackProperties", "ackResetDelay", "color"];




 // tslint:disable-next-line: match-default-export-name no-submodule-imports







var PREFIX = "CmdButton";
var classes = {
  ack: PREFIX + "-ack",
  error: PREFIX + "-error"
};
var Root = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP)("span")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + classes.ack]: {
      color: "#fff",
      fontWeight: theme.typography.fontWeightMedium,
      backgroundColor: theme.palette.success.main
    },
    ["& ." + classes.error]: {
      color: "#fff",
      backgroundColor: (theme.palette.mode === "light" ? _mui_material__WEBPACK_IMPORTED_MODULE_8__/* .lighten */ .$n : _mui_material__WEBPACK_IMPORTED_MODULE_8__/* .darken */ ._j)(theme.palette.error.main, 0.6)
    }
  };
});
var ACK_RESET_DELAY = 500;
var ERROR_RESET_DELAY = 2000;
function CmdButton(props) {
  var {
    onClick,
    className,
    style,
    children,
    icon,
    title,
    disabled,
    disableReset,
    autoRun,
    trackName,
    trackProperties,
    ackResetDelay,
    color
  } = props,
      others = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(props, _excluded);

  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z);
  var {
    setError: setAppError
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_AppContext__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP);
  var {
    0: working,
    1: setWorking
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  var {
    0: ack,
    1: setAck
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  var {
    0: error,
    1: setError
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);
  var {
    trackEvent
  } = (0,_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP)();
  var mounted = (0,_hooks_useMounted__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();

  var _disabled = disabled || working;

  var run = /*#__PURE__*/function () {
    var _ref2 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(function* () {
      if (working) return; // already working

      if (trackName) trackEvent("cmd." + trackName, trackProperties);

      try {
        setError(undefined);
        setAck(false);
        setWorking(true);
        yield onClick(mounted);
        if (!mounted()) return;
        setAck(true);

        if (!disableReset) {
          yield bus.delay(ackResetDelay || ACK_RESET_DELAY);
          if (!mounted()) return;
          setAck(false);
        }
      } catch (e) {
        if (!mounted()) return;
        setAppError(e);
        setError(e);

        if (!disableReset) {
          yield bus.delay(ERROR_RESET_DELAY);
          if (!mounted()) return;
          setError(undefined);
        }
      } finally {
        if (mounted()) setWorking(false);
      }
    });

    return function run() {
      return _ref2.apply(this, arguments);
    };
  }();

  var handleClick = /*#__PURE__*/function () {
    var _ref3 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(function* (ev) {
      ev.stopPropagation();
      ev.preventDefault();
      run();
    });

    return function handleClick(_x) {
      return _ref3.apply(this, arguments);
    };
  }();

  var statusIcon = error ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_icons_material_Error__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, null) : undefined;
  var modeClassName = error ? classes.error : ack ? classes.ack : undefined;
  var elClassName = (0,clsx__WEBPACK_IMPORTED_MODULE_12__["default"])(className, modeClassName); // run once

  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (autoRun && mounted()) run();
  }, [autoRun]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Root, null, !children && icon ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, Object.assign({
    className: elClassName,
    style: style,
    onClick: handleClick,
    "aria-label": title,
    title: title,
    disabled: _disabled,
    color: color
  }, others), statusIcon || icon) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_0__/* .Button */ .zx, Object.assign({
    className: elClassName,
    style: style,
    startIcon: icon,
    endIcon: statusIcon,
    onClick: handleClick,
    "aria-label": title,
    title: title,
    disabled: _disabled,
    color: color
  }, others), children));
}

/***/ }),

/***/ 94904:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TB": function() { return /* binding */ DB_VALUE_CHANGE; },
/* harmony export */   "WQ": function() { return /* binding */ DbProvider; }
/* harmony export */ });
/* unused harmony export DbStore */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94578);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_ts_src_jdom_eventsource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45484);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81794);
/* harmony import */ var _jacdac_providerbus__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(24725);
/* harmony import */ var _useEffectAsync__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7751);










var DB_VALUE_CHANGE = "dbValueChange";
var DbStore = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(DbStore, _JDEventSource);

  function DbStore(db, name) {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.db = db;
    _this.name = name;
    return _this;
  }

  var _proto = DbStore.prototype;

  _proto.get = function get(id) {
    return this.db.get(this.name, id);
  };

  _proto.set = /*#__PURE__*/function () {
    var _set = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (id, value) {
      var current = yield this.db.get(this.name, id);

      if (current !== value) {
        yield this.db.set(this.name, id, value);
        this.emit(DB_VALUE_CHANGE, id);
        this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
      }
    });

    function set(_x, _x2) {
      return _set.apply(this, arguments);
    }

    return set;
  }();

  _proto.list = function list() {
    return this.db.list(this.name);
  };

  _proto.clear = /*#__PURE__*/function () {
    var _clear = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
      this.db.clear(this.name);
      this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
    });

    function clear() {
      return _clear.apply(this, arguments);
    }

    return clear;
  }();

  return DbStore;
}(_jacdac_ts_src_jdom_eventsource__WEBPACK_IMPORTED_MODULE_2__/* .JDEventSource */ .aE);

var IDBDb = /*#__PURE__*/function (_JDEventSource2) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(IDBDb, _JDEventSource2);

  function IDBDb() {
    var _this2;

    _this2 = _JDEventSource2.call(this) || this;
    _this2.upgrading = false;
    _this2.blobs = new DbStore((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(_this2), IDBDb.STORE_BLOBS);
    _this2.firmwares = new DbStore((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(_this2), IDBDb.STORE_FIRMWARE_BLOBS);
    _this2.directories = new DbStore((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(_this2), IDBDb.STORE_DIRECTORIES);
    return _this2;
  }

  IDBDb.create = function create() {
    return new Promise(resolve => {
      // create or upgrade database
      var request = indexedDB.open(IDBDb.DB_NAME, IDBDb.DB_VERSION);
      var db = new IDBDb();

      request.onsuccess = function () {
        db.db = request.result;
        resolve(db);
      };

      request.onupgradeneeded = function () {
        console.log("db: upgrade");
        db.upgrading = true;

        try {
          var _db = request.result;
          var stores = _db.objectStoreNames;
          if (!stores.contains(IDBDb.STORE_FIRMWARE_BLOBS)) _db.createObjectStore(IDBDb.STORE_FIRMWARE_BLOBS);
          if (!stores.contains(IDBDb.STORE_BLOBS)) _db.createObjectStore(IDBDb.STORE_BLOBS);
          if (!stores.contains(IDBDb.STORE_DIRECTORIES)) _db.createObjectStore(IDBDb.STORE_DIRECTORIES);

          _db.onerror = function (event) {
            console.log("idb error", event);
          };
        } finally {
          db.upgrading = false;
        }
      };
    });
  };

  var _proto2 = IDBDb.prototype;

  _proto2.checkUpgrading = function checkUpgrading() {
    if (!this.db || this.upgrading) return (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_3__/* .delay */ .gw)(100);else return Promise.resolve();
  };

  _proto2.list = function list(table) {
    return this.checkUpgrading().then(() => new Promise((resolve, reject) => {
      try {
        var transaction = this.db.transaction([table], "readonly");
        var blobs = transaction.objectStore(table);
        var request = blobs.getAllKeys(); // eslint-disable-next-line @typescript-eslint/no-explicit-any

        request.onsuccess = event => // eslint-disable-next-line @typescript-eslint/no-explicit-any
        resolve(event.target.result);

        request.onerror = event => {
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, event);
          resolve(undefined);
        };
      } catch (e) {
        this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, e);
        reject(e);
      }
    }));
  };

  _proto2.get = function get(table, id) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return this.checkUpgrading().then(() => // eslint-disable-next-line @typescript-eslint/no-explicit-any
    new Promise((resolve, reject) => {
      try {
        var transaction = this.db.transaction([table], "readonly");
        var blobs = transaction.objectStore(table);
        var request = blobs.get(id);

        request.onsuccess = event => // eslint-disable-next-line @typescript-eslint/no-explicit-any
        resolve(event.target.result);

        request.onerror = event => {
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, event);
          resolve(undefined);
        };
      } catch (e) {
        this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, e);
        reject(e);
      }
    }));
  };

  _proto2.set = function set(table, id, data) {
    return this.checkUpgrading().then(() => new Promise((resolve, reject) => {
      try {
        var transaction = this.db.transaction([table], "readwrite");
        var blobs = transaction.objectStore(table);
        var request = data !== undefined ? blobs.put(data, id) : blobs.delete(id);

        request.onsuccess = () => {
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
          resolve();
        };

        request.onerror = event => {
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, event);
          resolve();
        };
      } catch (e) {
        this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, e);
        reject(e);
      }
    }));
  };

  _proto2.clear = function clear(table) {
    return this.checkUpgrading().then(() => new Promise((resolve, reject) => {
      try {
        var transaction = this.db.transaction([table], "readwrite");
        var blobs = transaction.objectStore(table);
        var request = blobs.clear();

        request.onsuccess = () => {
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver);
          resolve();
        };

        request.onerror = event => {
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, event);
          resolve();
        };
      } catch (e) {
        this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, e);
        reject(e);
      }
    }));
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(IDBDb, [{
    key: "db",
    get: function get() {
      return this._db;
    },
    set: function set(idb) {
      this._db = idb;
      if (this._db) this._db.onerror = event => {
        this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ERROR */ .pnR, event);
      };
    }
  }]);

  return IDBDb;
}(_jacdac_ts_src_jdom_eventsource__WEBPACK_IMPORTED_MODULE_2__/* .JDEventSource */ .aE);

IDBDb.DB_VERSION = 19;
IDBDb.DB_NAME = "JACDAC";
IDBDb.STORE_BLOBS = "BLOBS";
IDBDb.STORE_FIRMWARE_BLOBS = "STORE_FIRMWARE_BLOBS";
IDBDb.STORE_DIRECTORIES = "FILE_SYSTEM_ACCESS_DIRECTORIES";

var MemoryDb = /*#__PURE__*/function (_JDEventSource3) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(MemoryDb, _JDEventSource3);

  function MemoryDb() {
    var _this3;

    _this3 = _JDEventSource3.call(this) || this;
    _this3.tables = {
      [IDBDb.STORE_BLOBS]: {},
      [IDBDb.STORE_FIRMWARE_BLOBS]: {},
      [IDBDb.STORE_DIRECTORIES]: {}
    };
    _this3.blobs = new DbStore((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(_this3), IDBDb.STORE_BLOBS);
    _this3.firmwares = new DbStore((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(_this3), IDBDb.STORE_FIRMWARE_BLOBS);
    _this3.directories = new DbStore((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(_this3), IDBDb.STORE_DIRECTORIES);
    return _this3;
  } // eslint-disable-next-line @typescript-eslint/no-explicit-any


  var _proto3 = MemoryDb.prototype;

  _proto3.get =
  /*#__PURE__*/
  function () {
    var _get = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (table, key) {
      var _this$tables$table;

      return (_this$tables$table = this.tables[table]) === null || _this$tables$table === void 0 ? void 0 : _this$tables$table[key];
    });

    function get(_x3, _x4) {
      return _get.apply(this, arguments);
    }

    return get;
  }() // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ;

  _proto3.set =
  /*#__PURE__*/
  function () {
    var _set2 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (table, key, value) {
      var t = this.tables[table];
      if (t) t[key] = value;
    });

    function set(_x5, _x6, _x7) {
      return _set2.apply(this, arguments);
    }

    return set;
  }();

  _proto3.list = /*#__PURE__*/function () {
    var _list = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (table) {
      var keys = Object.keys(this.tables[table] || {});
      return keys;
    });

    function list(_x8) {
      return _list.apply(this, arguments);
    }

    return list;
  }();

  _proto3.clear = /*#__PURE__*/function () {
    var _clear2 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* (table) {
      var t = this.tables[table];
      if (t) this.tables[table] = {};
    });

    function clear(_x9) {
      return _clear2.apply(this, arguments);
    }

    return clear;
  }();

  return MemoryDb;
}(_jacdac_ts_src_jdom_eventsource__WEBPACK_IMPORTED_MODULE_2__/* .JDEventSource */ .aE);

var DbContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  db: undefined,
  error: undefined
});
DbContext.displayName = "db";
/* harmony default export */ __webpack_exports__["ZP"] = (DbContext); // eslint-disable-next-line react/prop-types

var DbProvider = _ref => {
  var {
    children
  } = _ref;
  var {
    0: db,
    1: setDb
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined);
  var {
    0: error,
    1: setError
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined);
  (0,_useEffectAsync__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)( /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
    if (_jacdac_providerbus__WEBPACK_IMPORTED_MODULE_4__/* .UIFlags.storage */ .A.storage) {
      console.debug("db: indexeddb");

      try {
        var r = yield IDBDb.create();
        setDb(r);
      } catch (e) {
        setError(e);
      }
    } else {
      console.debug("db: in memory");
      setDb(new MemoryDb());
    }
  }), []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DbContext.Provider, {
    value: {
      db,
      error
    }
  }, children);
};

/***/ }),

/***/ 80691:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ErrorList; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var gatsby__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35313);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);
/* harmony import */ var _ui_PageLinkList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(85748);




function ErrorList() {
  var _data$allMdx, _data$allMdx$nodes;

  var data = (0,gatsby__WEBPACK_IMPORTED_MODULE_1__.useStaticQuery)("1281896507");
  var nodes = data === null || data === void 0 ? void 0 : (_data$allMdx = data.allMdx) === null || _data$allMdx === void 0 ? void 0 : (_data$allMdx$nodes = _data$allMdx.nodes) === null || _data$allMdx$nodes === void 0 ? void 0 : _data$allMdx$nodes.filter(node => {
    var _node$fields, _node$frontmatter;

    return ((_node$fields = node.fields) === null || _node$fields === void 0 ? void 0 : _node$fields.slug.indexOf("/")) > -1 && ((_node$frontmatter = node.frontmatter) === null || _node$frontmatter === void 0 ? void 0 : _node$frontmatter.title);
  }).map(node => {
    var _node$fields2, _node$headings;

    return {
      slug: (_node$fields2 = node.fields) === null || _node$fields2 === void 0 ? void 0 : _node$fields2.slug,
      title: node.frontmatter.title || ((_node$headings = node.headings) === null || _node$headings === void 0 ? void 0 : _node$headings[0].value)
    };
  });
  var groups = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__/* .groupBy */ .vM)(nodes, node => node.slug.split("/", 3)[2] || "");
  var groupNames = Object.keys(groups).filter(g => !!g);
  console.debug(groupNames);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, groupNames.map(group => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2", {
    key: group
  }, group), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_PageLinkList__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    nodes: groups[group]
  }))));
}

/***/ }),

/***/ 64616:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZP": function() { return /* binding */ FielddataSet; }
/* harmony export */ });
/* unused harmony exports Example, Recording */
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(15785);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94578);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_ts_src_jdom_eventsource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45484);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);






var Example = /*#__PURE__*/function () {
  function Example(timestamp, data) {
    this.timestamp = timestamp;
    this.data = data;
  }

  var _proto = Example.prototype;

  _proto.toVector = function toVector(startTimestamp) {
    var t = this.timestamp - (startTimestamp || 0);
    var s = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__/* .roundWithPrecision */ .JI)(t / 1000, 3);
    return [s].concat(this.data);
  };

  return Example;
}();
var Recording = function Recording(name, colors, headers, rows, units) {
  this.name = name;
  this.colors = colors;
  this.headers = headers;
  this.rows = rows;
  this.units = units;
};

var FielddataSet = /*#__PURE__*/function (_JDEventSource) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(FielddataSet, _JDEventSource);

  // sd is the standard deviation of the sample, a measure of volatility
  FielddataSet.create = function create(bus, registers, name, palette, maxRows) {
    var fields = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__/* .arrayConcatMany */ .ue)(registers.map(reg => reg.fields));
    var colors = fields.map((f, i) => palette[i % palette.length]);
    var set = new FielddataSet(bus, name, fields, colors);
    if (maxRows !== undefined) set.maxRows = maxRows;
    return set;
  };

  FielddataSet.createFromFile = function createFromFile(dataSet) {
    var set = new FielddataSet(null, dataSet.name, null, dataSet.colors);
    dataSet.rows.forEach(row => {
      var {
        timestamp,
        data
      } = row;
      set.addExample(timestamp, data);
    });
    set.units = dataSet.units;
    set.headers = dataSet.headers;
    set.colors = dataSet.colors;
    return set;
  };

  function FielddataSet(bus, name, fields, colors) {
    var _this;

    if (colors === void 0) {
      colors = ["#000"];
    }

    _this = _JDEventSource.call(this) || this;
    _this.id = Math.random().toString();
    _this.maxRows = -1;
    _this.bus = bus;
    _this.name = name;
    _this.fields = fields;
    _this.colors = colors;
    _this.rows = [];

    if (fields !== undefined && fields !== null) {
      _this.headers = fields.map(field => field.name);
      _this.units = fields.map(field => field.unit);
    }

    return _this;
  }

  var _proto2 = FielddataSet.prototype;

  _proto2.data = function data(flatten) {
    if (flatten && this.headers.length == 1) return this.rows.map(row => row.data[0]);else return this.rows.map(row => row.data);
  };

  _proto2.indexOf = function indexOf(field) {
    return this.fields.indexOf(field);
  };

  _proto2.colorOf = function colorOf(field, header) {
    if (field) return this.colors[this.indexOf(field)];
    if (header) return this.colors[this.headers.indexOf(header)];
    return ["#000"];
  };

  _proto2.addRow = function addRow(data) {
    var timestamp = this.bus.timestamp;
    if (!data) data = this.fields.map(f => f.value);
    this.addExample(timestamp, data);
  };

  _proto2.addData = function addData(data) {
    this.addExample(Date.now(), data);
  };

  _proto2.addExample = function addExample(timestamp, data) {
    this.rows.push(new Example(timestamp, data)); // drop rows if needed

    var refreshminmax = false;

    while (this.maxRows > 0 && this.rows.length > this.maxRows * 1.1) {
      this.rows.shift();
      refreshminmax = true;
    }

    if (refreshminmax) {
      // refresh entire mins/max
      for (var r = 0; r < this.rows.length; ++r) {
        var row = this.rows[r];

        if (r == 0) {
          this.mins = row.data.slice(0);
          this.maxs = row.data.slice(0);
          this.rms = row.data.slice(0);
          this.sd = new Array(row.data.length).fill(0);
        } else {
          var n = r;

          for (var i = 0; i < row.data.length; ++i) {
            this.mins[i] = Math.min(this.mins[i], row.data[i]);
            this.maxs[i] = Math.max(this.maxs[i], row.data[i]);
            this.rms[i] = Math.sqrt((Math.pow(this.rms[i], 2) * (n - 1) + Math.pow(row.data[i], 2)) / n);
            this.sd[i] = Math.sqrt((Math.pow(this.sd[i], 2) * (n - 1) + Math.pow(this.rms[i] - row.data[i], 2)) / n);
          }
        }
      }
    } else {
      // incremental update
      if (!this.mins) {
        this.mins = data.slice(0);
        this.maxs = data.slice(0);
        this.rms = data.slice(0);
        this.sd = new Array(data.length).fill(0);
      } else {
        var _n = this.rows.length;

        for (var _i = 0; _i < data.length; ++_i) {
          this.mins[_i] = Math.min(this.mins[_i], data[_i]);
          this.maxs[_i] = Math.max(this.maxs[_i], data[_i]);
          this.rms[_i] = Math.sqrt((Math.pow(this.rms[_i], 2) * (_n - 1) + Math.pow(data[_i], 2)) / _n);
          this.sd[_i] = Math.sqrt((Math.pow(this.sd[_i], 2) * (_n - 1) + Math.pow(this.rms[_i] - data[_i], 2)) / _n);
        }
      }
    }

    this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
  };

  _proto2.toCSV = function toCSV(sep, options) {
    if (sep === void 0) {
      sep = ",";
    }

    var allheaders = ["time"].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this.headers)).join(sep);
    var start = this.startTimestamp;
    var csv = [allheaders];
    if (options !== null && options !== void 0 && options.units) csv.push(["s"].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this.units)).join(sep));
    this.rows.forEach(row => csv.push(row.toVector(start).map(cell => cell !== undefined ? cell.toString() : "").join(sep)));
    return csv.join("\n");
  };

  _proto2.toJSON = function toJSON() {
    return {
      name: this.name,
      rows: this.rows,
      headers: this.headers,
      units: this.units,
      colors: this.colors
    };
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(FielddataSet, [{
    key: "startTimestamp",
    get: function get() {
      var row = this.rows[0];
      return row === null || row === void 0 ? void 0 : row.timestamp;
    }
  }, {
    key: "duration",
    get: function get() {
      var first = this.rows[0];
      var last = this.rows[this.rows.length - 1];
      return first && last && last.timestamp - first.timestamp || 0;
    }
  }, {
    key: "length",
    get: function get() {
      return this.rows.length;
    }
  }, {
    key: "width",
    get: function get() {
      return this.headers.length;
    }
  }]);

  return FielddataSet;
}(_jacdac_ts_src_jdom_eventsource__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP);



/***/ }),

/***/ 48202:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "P": function() { return /* binding */ FileSystemProvider; },
  "Z": function() { return /* binding */ components_FileSystemContext; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./src/components/fs/fs.ts
var fs = __webpack_require__(31396);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules
var toConsumableArray = __webpack_require__(15785);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(43144);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncIterator.js
function _asyncIterator(iterable) {
  var method;

  if (typeof Symbol !== "undefined") {
    if (Symbol.asyncIterator) method = iterable[Symbol.asyncIterator];
    if (method == null && Symbol.iterator) method = iterable[Symbol.iterator];
  }

  if (method == null) method = iterable["@@asyncIterator"];
  if (method == null) method = iterable["@@iterator"];
  if (method == null) throw new TypeError("Object is not async iterable");
  return method.call(iterable);
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/node.ts
var node = __webpack_require__(60154);
;// CONCATENATED MODULE: ./src/components/fs/fsdom.ts








var FILE_SYSTEM_NODE = "fs";
var FILE_SYSTEM_DIRECTORY_NODE = "directory";
var FILE_SYSTEM_FILE_NODE = "file";
var FileSystemNode = /*#__PURE__*/function (_JDNode) {
  (0,inheritsLoose/* default */.Z)(FileSystemNode, _JDNode);

  function FileSystemNode() {
    return _JDNode.apply(this, arguments) || this;
  }

  return FileSystemNode;
}(node/* default */.Z);
var FileSystem = /*#__PURE__*/function (_FileSystemNode) {
  (0,inheritsLoose/* default */.Z)(FileSystem, _FileSystemNode);

  function FileSystem() {
    return _FileSystemNode.call(this) || this;
  }

  var _proto = FileSystem.prototype;

  _proto.createWorkingDirectory = /*#__PURE__*/function () {
    var _createWorkingDirectory = (0,asyncToGenerator/* default */.Z)(function* (name, filename, content) {
      var handle = yield this.root.handle.getDirectoryHandle(name, {
        create: true
      });

      if (filename) {
        var fileHandle = yield handle.getFileHandle(filename, {
          create: true
        });
        yield (0,fs/* writeFileText */.$8)(fileHandle, content);
      }

      yield this.root.sync();
      this.workingDirectory = this.root.directories.find(d => d.name === name);
    });

    function createWorkingDirectory(_x, _x2, _x3) {
      return _createWorkingDirectory.apply(this, arguments);
    }

    return createWorkingDirectory;
  }();

  (0,createClass/* default */.Z)(FileSystem, [{
    key: "id",
    get: function get() {
      return FILE_SYSTEM_NODE;
    }
  }, {
    key: "nodeKind",
    get: function get() {
      return FILE_SYSTEM_NODE;
    }
  }, {
    key: "name",
    get: function get() {
      return FILE_SYSTEM_NODE;
    }
  }, {
    key: "friendlyName",
    get: function get() {
      return this.name;
    }
  }, {
    key: "qualifiedName",
    get: function get() {
      return this.name;
    }
  }, {
    key: "parent",
    get: function get() {
      return undefined;
    }
  }, {
    key: "children",
    get: function get() {
      return [this.root];
    }
  }, {
    key: "root",
    get: function get() {
      return this._root;
    },
    set: function set(d) {
      if (d !== this._root) {
        this._root = d;
        this._workingDirectory = undefined;
        this._workingFile = undefined;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }, {
    key: "workingDirectory",
    get: function get() {
      return this._workingDirectory;
    },
    set: function set(d) {
      if (d !== this._workingDirectory) {
        this._workingDirectory = d;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }, {
    key: "workingFile",
    get: function get() {
      return this._workingFile;
    },
    set: function set(d) {
      if (d !== this._workingFile) {
        var _this$_workingFile;

        this._workingFile = d;
        this._workingDirectory = (_this$_workingFile = this._workingFile) === null || _this$_workingFile === void 0 ? void 0 : _this$_workingFile.parentDirectory;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }]);

  return FileSystem;
}(FileSystemNode);
var FileSystemFile = /*#__PURE__*/function (_FileSystemNode2) {
  (0,inheritsLoose/* default */.Z)(FileSystemFile, _FileSystemNode2);

  function FileSystemFile(_parent, handle) {
    var _this;

    _this = _FileSystemNode2.call(this) || this;
    _this._parent = _parent;
    _this.handle = handle;
    return _this;
  }

  var _proto2 = FileSystemFile.prototype;

  _proto2.textAsync = /*#__PURE__*/function () {
    var _textAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      yield this.sync();
      return this._text;
    });

    function textAsync() {
      return _textAsync.apply(this, arguments);
    }

    return textAsync;
  }();

  _proto2.write = /*#__PURE__*/function () {
    var _write = (0,asyncToGenerator/* default */.Z)(function* (text) {
      yield (0,fs/* writeFileText */.$8)(this.handle, text);

      if (this._text !== text) {
        this._text = text; // don't signal
        // this.emit(CHANGE)
      }
    });

    function write(_x4) {
      return _write.apply(this, arguments);
    }

    return write;
  }();

  _proto2.sync = /*#__PURE__*/function () {
    var _sync = (0,asyncToGenerator/* default */.Z)(function* () {
      var text = yield (0,fs/* readFileText */.ue)(this.handle);

      if (text !== this._text) {
        this._text = text;
        this.emit(constants/* CHANGE */.Ver);
      }
    });

    function sync() {
      return _sync.apply(this, arguments);
    }

    return sync;
  }();

  (0,createClass/* default */.Z)(FileSystemFile, [{
    key: "id",
    get: function get() {
      return this.parent.id + "/" + this.name;
    }
  }, {
    key: "nodeKind",
    get: function get() {
      return FILE_SYSTEM_FILE_NODE;
    }
  }, {
    key: "qualifiedName",
    get: function get() {
      return this.id;
    }
  }, {
    key: "parent",
    get: function get() {
      return this._parent;
    }
  }, {
    key: "parentDirectory",
    get: function get() {
      return this._parent;
    }
  }, {
    key: "children",
    get: function get() {
      return [];
    }
  }, {
    key: "name",
    get: function get() {
      return this.handle.name;
    }
  }, {
    key: "text",
    get: function get() {
      if (this._text === undefined) this.sync();
      return this._text;
    }
  }]);

  return FileSystemFile;
}(FileSystemNode);

function sortHandles(handles) {
  handles.sort((l, r) => l.name.localeCompare(r.name));
  return handles;
}

var FileSystemDirectory = /*#__PURE__*/function (_FileSystemNode3) {
  (0,inheritsLoose/* default */.Z)(FileSystemDirectory, _FileSystemNode3);

  function FileSystemDirectory(_parent, handle) {
    var _this2;

    _this2 = _FileSystemNode3.call(this) || this;
    _this2._directories = [];
    _this2._files = [];
    _this2._parent = _parent;
    _this2.handle = handle;

    _this2.sync();

    return _this2;
  }

  var _proto3 = FileSystemDirectory.prototype;

  _proto3.directory = function directory(name, options) {
    var existing = this._directories.find(f => f.name === name);

    if (existing) return existing;

    if (options !== null && options !== void 0 && options.create) {
      // create file in the background
      this.handle.getDirectoryHandle(name, {
        create: true
      }).then(nf => {
        var nfn = new FileSystemDirectory(this, nf);

        this._directories.push(nfn);

        this._directories.sort((l, r) => l.name.localeCompare(r.name));

        this.emitPropagated(constants/* CHANGE */.Ver);
      });
    } // no file yet


    return undefined;
  };

  _proto3.fileAsync = /*#__PURE__*/function () {
    var _fileAsync = (0,asyncToGenerator/* default */.Z)(function* (name, options) {
      var f = this._files.find(f => f.name === name);

      if (!f && options !== null && options !== void 0 && options.create) {
        var _handle = yield this.handle.getFileHandle(name, {
          create: true
        });

        f = new FileSystemFile(this, _handle);

        this._files.push(f);

        this._files.sort((l, r) => l.name.localeCompare(r.name));

        this.emitPropagated(constants/* CHANGE */.Ver);
      }

      return f;
    });

    function fileAsync(_x5, _x6) {
      return _fileAsync.apply(this, arguments);
    }

    return fileAsync;
  }();

  _proto3.file = function file(name, options) {
    var existing = this._files.find(f => f.name === name);

    if (!existing) {
      if (options !== null && options !== void 0 && options.create) this.fileAsync(name, options);
    }

    return existing;
  };

  _proto3.sync = /*#__PURE__*/function () {
    var _sync2 = (0,asyncToGenerator/* default */.Z)(function* () {
      var values = this.handle.values();
      var files = [];
      var directories = [];

      if (values) {
        var _iteratorAbruptCompletion = false;
        var _didIteratorError = false;

        var _iteratorError;

        try {
          for (var _iterator = _asyncIterator(values), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {
            var entry = _step.value;
            if (entry.kind === "directory") directories.push(entry);else if (entry.kind === "file") files.push(entry);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (_iteratorAbruptCompletion && _iterator.return != null) {
              yield _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      sortHandles(files);
      sortHandles(directories); // did the files change?

      var changed = false;

      if (this._files.map(f => f.name).join() !== files.map(f => f.name).join()) {
        // some of the file changed
        var patched = files.map(f => {
          var oldf = this._files.find(oldf => oldf.name === f.name);

          return oldf || new FileSystemFile(this, f);
        });
        this._files = patched;
        changed = true;
      }

      if (this._directories.map(f => f.name).join() !== directories.map(f => f.name).join()) {
        // some of the file changed
        var _patched = directories.map(f => {
          var oldf = this._directories.find(oldf => oldf.name === f.name);

          return oldf || new FileSystemDirectory(this, f);
        });

        this._directories = _patched;
        changed = true;
      }

      if (changed) this.emitPropagated(constants/* CHANGE */.Ver);
    });

    function sync() {
      return _sync2.apply(this, arguments);
    }

    return sync;
  }();

  (0,createClass/* default */.Z)(FileSystemDirectory, [{
    key: "id",
    get: function get() {
      var _this$_parent;

      return (((_this$_parent = this._parent) === null || _this$_parent === void 0 ? void 0 : _this$_parent.id) || "") + "/" + this.name;
    }
  }, {
    key: "nodeKind",
    get: function get() {
      return FILE_SYSTEM_DIRECTORY_NODE;
    }
  }, {
    key: "qualifiedName",
    get: function get() {
      return this.id;
    }
  }, {
    key: "parent",
    get: function get() {
      return this._parent;
    }
  }, {
    key: "children",
    get: function get() {
      return [].concat((0,toConsumableArray/* default */.Z)(this._directories), (0,toConsumableArray/* default */.Z)(this._files));
    }
  }, {
    key: "name",
    get: function get() {
      return this.handle.name;
    }
  }, {
    key: "directories",
    get: function get() {
      return this._directories.slice(0) || [];
    }
  }, {
    key: "files",
    get: function get() {
      return this._files.slice(0) || [];
    }
  }]);

  return FileSystemDirectory;
}(FileSystemNode);
;// CONCATENATED MODULE: ./src/components/FileSystemContext.tsx




var FileSystemContext = /*#__PURE__*/(0,react.createContext)({
  fileSystem: undefined,
  showDirectoryPicker: undefined
});
FileSystemContext.displayName = "fs";
/* harmony default export */ var components_FileSystemContext = (FileSystemContext); // eslint-disable-next-line react/prop-types

function FileSystemProvider(props) {
  var _this = this;

  var {
    children
  } = props;
  var fileSystem = (0,react.useMemo)(() => (0,fs/* fileSystemHandleSupported */.ou)() ? new FileSystem() : undefined, []);
  var supported = !!fileSystem;
  var showDirectoryPicker = supported ? /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* (options) {
      try {
        var _fileSystem$root;

        var handle = yield window.showDirectoryPicker(options);
        if (handle !== ((_fileSystem$root = fileSystem.root) === null || _fileSystem$root === void 0 ? void 0 : _fileSystem$root.handle)) fileSystem.root = new FileSystemDirectory(_this, handle);
      } catch (e) {
        console.debug(e);
      }
    });

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }() : undefined;
  return /*#__PURE__*/react.createElement(FileSystemContext.Provider, {
    value: {
      fileSystem,
      showDirectoryPicker
    }
  }, children);
}

/***/ }),

/***/ 43830:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JF": function() { return /* binding */ hostedSimulatorDefinitions; },
/* harmony export */   "sr": function() { return /* binding */ HostedSimulatorsProvider; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(15785);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(30664);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(5234);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(27221);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(98348);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_ts_src_jdom_iframeclient__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9809);
/* harmony import */ var _jacdac_ts_src_jdom_random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80303);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20392);
/* harmony import */ var _hooks_useWindowEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72144);
/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(35902);
/* harmony import */ var _makecode_iframebridgeclient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(43380);
/* harmony import */ var _ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(71973);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6890);
/* harmony import */ var _jacdac_providerbus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(24725);
/* harmony import */ var _jacdac_ts_src_jdom_flags__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(21258);















var PREFIX = "HostedSimulatorsContext";
var classes = {
  cardContainer: PREFIX + "-cardContainer",
  card: PREFIX + "-card"
};
var Root = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .ZP)("div")(() => ({
  ["& ." + classes.cardContainer]: {
    zIndex: 1100,
    position: "absolute",
    left: "5rem",
    top: "5rem"
  },
  ["& ." + classes.card]: {
    "& .hostedcontainer": {
      position: "relative"
    },
    "& iframe": {
      border: "none",
      position: "relative",
      width: "100%",
      height: "100%"
    }
  }
}));
var Draggable = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => __webpack_require__.e(/* import() */ 317).then(__webpack_require__.t.bind(__webpack_require__, 82625, 23)));
var HostedSimulatorsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  addHostedSimulator: () => {},
  removeHostedSimulator: () => {},
  clearHostedSimulators: () => {},
  isHostedSimulator: () => false
});
HostedSimulatorsContext.displayName = "hostedSims";
/* harmony default export */ __webpack_exports__["ZP"] = (HostedSimulatorsContext);
function hostedSimulatorDefinitions() {
  // TODO: support in iframe as well
  if ((0,_jacdac_ts_src_jdom_iframeclient__WEBPACK_IMPORTED_MODULE_11__/* .inIFrame */ .H)()) return [];
  return [{
    name: "micro:bit V2 Out-of-the-Box",
    url: "https://microsoft.github.io/pxt-jacdac/?tool=microbit-oob",
    width: "20rem",
    height: "17.5rem"
  }, {
    name: "Azure IoT Uploader",
    url: "https://microsoft.github.io/pxt-jacdac/",
    width: "20rem",
    height: "12rem"
  }, _jacdac_ts_src_jdom_flags__WEBPACK_IMPORTED_MODULE_9__/* ["default"].diagnostics */ .Z.diagnostics && {
    name: "MakeCode Arcade multitool",
    url: "https://microsoft.github.io/pxt-jacdac/?tool=multitool",
    width: "25vw",
    height: "28.75vw"
  }, _jacdac_providerbus__WEBPACK_IMPORTED_MODULE_8__/* .UIFlags.localhost */ .A.localhost && {
    name: "Azure IoT Uploader (localhost)",
    url: "http://localhost:3232/index.html",
    width: "20rem",
    height: "12rem"
  }, _jacdac_providerbus__WEBPACK_IMPORTED_MODULE_8__/* .UIFlags.localhost */ .A.localhost && {
    name: "makecode serve (localhost)",
    url: "http://localhost:7000/",
    width: "20rem",
    height: "17.5rem"
  }].filter(d => !!d);
}

function HostedSimulatorCard(props) {
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z);
  var {
    sim
  } = props;
  var {
    removeHostedSimulator
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(HostedSimulatorsContext);
  var {
    definition,
    id
  } = sim;
  var {
    url,
    name,
    width,
    height
  } = definition;
  var origin = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => new URL(url).origin, [url]);
  var nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var iframeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => bus.subscribe([_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_SEND */ .RaS, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_PROCESS */ .wY8], pkt => {
    var _iframeRef$current, _iframeRef$current$co;

    var {
      sender
    } = pkt;
    if (id === sender) return;
    var msg = {
      type: "messagepacket",
      channel: "jacdac",
      broadcast: false,
      data: pkt.toBuffer(),
      sender: pkt.sender
    };
    (_iframeRef$current = iframeRef.current) === null || _iframeRef$current === void 0 ? void 0 : (_iframeRef$current$co = _iframeRef$current.contentWindow) === null || _iframeRef$current$co === void 0 ? void 0 : _iframeRef$current$co.postMessage(msg, origin);
  }), [url]);

  var handleStop = () => removeHostedSimulator(sim.devideId); // eslint-disable-next-line @typescript-eslint/no-explicit-any


  var draggableProps = {
    nodeRef
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Draggable, draggableProps, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    ref: nodeRef,
    className: classes.cardContainer
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, {
    className: classes.card
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z, {
    subheader: name,
    action: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
      title: "stop simulator",
      onClick: handleStop
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z, null))
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: "hostedcontainer",
    style: {
      width
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("iframe", {
    id: sim.id,
    ref: iframeRef,
    title: name,
    src: url + "#" + id,
    style: {
      width,
      height,
      margin: 0,
      padding: 0
    }
  })))))));
} // eslint-disable-next-line react/prop-types


var HostedSimulatorsProvider = _ref => {
  var {
    children
  } = _ref;
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z);
  var {
    0: simulators,
    1: setSimulators
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);

  var addHostedSimulator = definition => setSimulators([].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(simulators), [{
    id: (0,_jacdac_ts_src_jdom_random__WEBPACK_IMPORTED_MODULE_2__/* .randomDeviceId */ .b_)(),
    definition
  }]));

  var removeHostedSimulator = deviceId => setSimulators((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(simulators.filter(sim => sim.devideId !== deviceId)));

  var isHostedSimulator = deviceId => simulators.some(sim => sim.devideId === deviceId);

  var handleMessage = event => {
    var {
      data
    } = event;
    var msg = data;
    var {
      channel,
      type,
      sender
    } = msg;
    if (channel !== "jacdac" || type !== "messagepacket") return;
    var sim = simulators.find(sim => sim.id === sender);
    if (!sim) return;
    var pkts = (0,_makecode_iframebridgeclient__WEBPACK_IMPORTED_MODULE_5__/* .decodePacketMessage */ .Iy)(bus, msg);
    if (!pkts) return;

    for (var pkt of pkts) {
      // sniff the device id from annouce packets
      if (pkt.isAnnounce && sim.devideId !== pkt.deviceIdentifier) {
        if (sim.devideId) console.warn("hostedsim: device id changed from " + sim.devideId + " to " + pkt.deviceIdentifier);
        sim.devideId = pkt.deviceIdentifier;
      } // send to native bus


      bus.sendPacketAsync(pkt); // send to javascript bus

      bus.processPacket(pkt);
    }
  };

  var clearHostedSimulators = () => setSimulators([]); // iframe -> bus


  (0,_hooks_useWindowEvent__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)("message", !!simulators.length && handleMessage, false, [simulators]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(HostedSimulatorsContext.Provider, {
    value: {
      addHostedSimulator,
      removeHostedSimulator,
      isHostedSimulator,
      clearHostedSimulators
    }
  }, children, simulators.map(sim => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(HostedSimulatorCard, {
    key: sim.id,
    sim: sim
  }))));
};

/***/ }),

/***/ 50048:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZP": function() { return /* binding */ KindIcon; },
/* harmony export */   "QD": function() { return /* binding */ kindName; },
/* harmony export */   "NH": function() { return /* binding */ allKinds; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45987);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_icons_material_Create__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(64478);
/* harmony import */ var _mui_icons_material_Lock__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68347);
/* harmony import */ var _mui_icons_material_CallToAction__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(10078);
/* harmony import */ var _mui_icons_material_FlashOn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(68974);
/* harmony import */ var _mui_icons_material_DataUsage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(61323);
/* harmony import */ var _mui_icons_material_Reply__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(7087);
/* harmony import */ var _mui_icons_material_DeviceUnknown__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(53093);
/* harmony import */ var _mui_icons_material_DeviceHub__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(51125);
/* harmony import */ var _mui_icons_material_BubbleChart__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(58547);
/* harmony import */ var _mui_icons_material_Computer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(90035);
/* harmony import */ var _mui_icons_material_BlurLinear__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(10800);
/* harmony import */ var _mui_icons_material_ConfirmationNumber__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(89247);
/* harmony import */ var _mui_icons_material_NotificationsNone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(32815);
/* harmony import */ var _mui_icons_material_CheckCircle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(79404);
/* harmony import */ var _mui_icons_material_Gradient__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(68604);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36656);

var _excluded = ["kind"];
 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name




function KindIcon(props) {
  var {
    kind
  } = props,
      rest = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(props, _excluded);

  var icon;

  switch (kind) {
    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_RO */ .XMp:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_DataUsage__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_RW */ .beQ:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Create__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_ANNOUNCE */ .Fv9:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_NotificationsNone__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONST_NODE_NAME */ .b7m:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Lock__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .COMMAND_NODE_NAME */ .P58:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_CallToAction__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .EVENT_NODE_NAME */ .Yuh:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_FlashOn__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_NODE_NAME */ ._iZ:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Reply__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .BUS_NODE_NAME */ .oPG:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_DeviceHub__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .DEVICE_NODE_NAME */ .tY6:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .VIRTUAL_DEVICE_NODE_NAME */ .UX7:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Computer__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SERVICE_NODE_NAME */ .M_U:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_BubbleChart__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SERVICE_MIXIN_NODE_NAME */ .mLn:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Gradient__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_NODE_NAME */ .C1C:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_BlurLinear__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PIPE_REPORT_NODE_NAME */ .C3l:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_BlurLinear__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CRC_ACK_NODE_NAME */ .REx:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_ConfirmationNumber__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z, rest);
      break;

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .SERVICE_TEST_NODE_NAME */ .BCz:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_CheckCircle__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z, rest);
      break;

    default:
      icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_DeviceUnknown__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z, rest);
      break;
  }

  return icon;
}
function kindName(kind) {
  switch (kind) {
    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_RO */ .XMp:
      return "read only";

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_RW */ .beQ:
      return "read write";

    case _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .VIRTUAL_DEVICE_NODE_NAME */ .UX7:
      return "simulated device";

    default:
      return kind;
  }
}
function allKinds() {
  return [_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_NODE_NAME */ ._iZ, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_RW */ .beQ, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .PACKET_KIND_RO */ .XMp, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CONST_NODE_NAME */ .b7m, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .EVENT_NODE_NAME */ .Yuh, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .COMMAND_NODE_NAME */ .P58];
}

/***/ }),

/***/ 43226:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "l": function() { return /* binding */ PacketsProvider; },
  "Z": function() { return /* binding */ components_PacketsContext; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./src/jacdac/Context.tsx
var Context = __webpack_require__(20392);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/trace/traceplayer.ts
var traceplayer = __webpack_require__(93829);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(43144);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/client.ts
var client = __webpack_require__(47235);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/trace/trace.ts
var trace = __webpack_require__(61649);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/trace/tracerecorder.ts






var RECORDING_TRACE_MAX_ITEMS = 100000;
/**
 * A recorder of packets to create traces.
 * @category Trace
 */

var TraceRecorder = /*#__PURE__*/function (_JDClient) {
  (0,inheritsLoose/* default */.Z)(TraceRecorder, _JDClient);

  function TraceRecorder(bus) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this.maxRecordingLength = RECORDING_TRACE_MAX_ITEMS;
    _this.bus = bus;
    _this.handlePacket = _this.handlePacket.bind((0,assertThisInitialized/* default */.Z)(_this));

    _this.mount(() => {
      var _this$_subscription, _this2;

      return (_this$_subscription = (_this2 = _this)._subscription) === null || _this$_subscription === void 0 ? void 0 : _this$_subscription.call(_this2);
    });

    return _this;
  }

  var _proto = TraceRecorder.prototype;

  _proto.start = function start() {
    if (this.recording) return;
    this._subscription = this.bus.subscribe([constants/* PACKET_PROCESS */.wY8, constants/* PACKET_SEND */.RaS], this.handlePacket);
    this._trace = new trace/* default */.ZP([], {
      maxLength: this.maxRecordingLength
    });
    this.emit(constants/* START */.tj6);
    this.emit(constants/* CHANGE */.Ver);
  };

  _proto.stop = function stop() {
    var _this$_subscription2;

    if (!this.recording) return;
    (_this$_subscription2 = this._subscription) === null || _this$_subscription2 === void 0 ? void 0 : _this$_subscription2.call(this);
    this._subscription = undefined;
    var t = this._trace;
    this._trace = undefined;
    this.emit(constants/* STOP */.N70);
    this.emit(constants/* CHANGE */.Ver);
    return t;
  };

  _proto.handlePacket = function handlePacket(pkt) {
    // record packets in traces
    this._trace.addPacket(pkt); // notify that this packet has been processed


    this.emit(constants/* PACKET_PROCESS */.wY8, pkt);
  };

  (0,createClass/* default */.Z)(TraceRecorder, [{
    key: "recording",
    get: function get() {
      return !!this._trace;
    }
  }, {
    key: "trace",
    get: function get() {
      return this._trace;
    }
  }]);

  return TraceRecorder;
}(client/* default */.Z);
/* harmony default export */ var tracerecorder = (TraceRecorder);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/dist/specconstants.ts
var specconstants = __webpack_require__(73512);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var spec = __webpack_require__(26799);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/packetfilter.ts


/**
 * @category Trace
 * @internal
 */

/**
 * Given a filter text, compiles packet filter
 * @param bus
 * @param text
 * @returns
 * @category Trace
 */
function parsePacketFilter(bus, text) {
  if (!text) {
    return {
      source: text,
      props: {
        grouping: true
      },
      filter: () => true
    };
  }

  var flags = new Set();
  var serviceClasses = new Set();
  var pkts = new Set();
  var productIdentifiers = new Set();
  var repeatedAnnounce = undefined;
  var announce = undefined;
  var resetIn = undefined;
  var minPriority = undefined;
  var regGet = undefined;
  var regSet = undefined;
  var requiresAck = undefined;
  var log = undefined;
  var before = undefined;
  var after = undefined;
  var devices = {};
  var grouping = true;
  var pipes = undefined;
  var port = undefined;
  var collapseAck = true;
  var collapsePipes = true;
  var collapseGets = true;
  var collapseNotImplemented = true;
  var errors = undefined;
  var selfDevice = undefined;
  text.split(/\s+/g).forEach(part => {
    var [, prefix,, value] = /([a-z\-_]+)([:=]([^\s]+))?/.exec(part) || [];

    switch (prefix || "") {
      case "kind":
      case "k":
        if (!value) break;
        flags.add(value.toLowerCase());
        break;

      case "service":
      case "srv":
        {
          if (!value) break;
          var service = (0,spec/* serviceSpecificationFromName */.kB)(value);
          var serviceClass = (service === null || service === void 0 ? void 0 : service.classIdentifier) || parseInt(value, 16);
          if (serviceClass !== undefined && !isNaN(serviceClass)) serviceClasses.add(serviceClass);
          break;
        }

      case "announce":
      case "a":
        announce = parseBoolean(value);
        break;

      case "repeated-announce":
      case "ra":
        repeatedAnnounce = parseBoolean(value);
        break;

      case "self":
        selfDevice = parseBoolean(value);
        break;

      case "reset-in":
      case "ri":
      case "resetin":
        resetIn = parseBoolean(value);
        break;

      case "errors":
        errors = parseBoolean(value);
        break;

      case "min-priority":
      case "minpri":
      case "minpriority":
      case "mi":
        minPriority = parseBoolean(value);
        break;

      case "requires-ack":
      case "ack":
        requiresAck = parseBoolean(value);
        break;

      case "collapse-ack":
        collapseAck = parseBoolean(value);
        break;

      case "collapse-notimpl":
      case "collapse-not-implemeneted":
        collapseNotImplemented = parseBoolean(value);
        break;

      case "device":
      case "dev":
      case "to":
      case "from":
        {
          var _bus$devices$find;

          if (!value) break; // resolve device by name

          var deviceId = (_bus$devices$find = bus.devices().find(d => d.shortId === value || d.name === value)) === null || _bus$devices$find === void 0 ? void 0 : _bus$devices$find.deviceId;

          if (deviceId) {
            var data = devices[deviceId] || (devices[deviceId] = {
              from: false,
              to: false
            });
            if (prefix === "from") data.from = true;else if (prefix === "to") data.to = true;
          }

          break;
        }

      case "pid":
      case "product-identifier":
        {
          if (!value) return; // find register

          var pid = parseInt(value.replace(/^0?x/, ""), 16);
          if (!isNaN(pid)) productIdentifiers.add(pid);
          break;
        }

      case "pkt":
      case "reg":
      case "register":
      case "cmd":
      case "command":
      case "ev":
      case "event":
        {
          if (!value) return; // find register

          var id = parseInt(value.replace(/^0?x/, ""), 16);
          if (!isNaN(id)) pkts.add(id.toString(16)); // support name

          pkts.add(value);
          break;
        }

      case "reg-get":
      case "get":
        regGet = parseBoolean(value);
        break;

      case "reg-set":
      case "set":
        regSet = parseBoolean(value);
        break;

      case "log":
        log = parseBoolean(value);
        break;

      case "before":
        before = parseTimestamp(value);
        break;

      case "after":
        after = parseTimestamp(value);
        break;

      case "grouping":
        grouping = parseBoolean(value);
        break;

      case "pipes":
        pipes = parseBoolean(value);
        break;

      case "collapse-pipe":
      case "collapse-pipes":
        collapsePipes = parseBoolean(value);
        break;

      case "collapse-get":
      case "collapse-gets":
        collapseGets = parseBoolean(value);
        break;

      case "port":
        port = parseInt(value);
        break;
    }
  });
  var props = {
    announce,
    repeatedAnnounce,
    resetIn,
    minPriority,
    requiresAck,
    collapseAck,
    collapseNotImplemented,
    log,
    productIdentifiers: !!productIdentifiers.size && Array.from(productIdentifiers.keys()),
    flags: !!flags.size && Array.from(flags.keys()),
    regGet,
    regSet,
    devices,
    selfDevice,
    serviceClasses: !!serviceClasses.size && Array.from(serviceClasses.keys()),
    pkts: !!pkts.size && Array.from(pkts.keys()),
    before,
    after,
    grouping,
    pipes,
    collapsePipes,
    collapseGets,
    port,
    errors
  };
  var filter = compileFilter(props);
  return {
    source: text,
    props,
    filter
  };

  function parseBoolean(value) {
    if (value === "false" || value === "no") return false;else if (value === "true" || value === "yes" || !value) return true;else return undefined;
  }

  function parseTimestamp(value) {
    var t = parseInt(value);
    return isNaN(t) ? undefined : t;
  }
}

function compileFilter(props) {
  var {
    announce,
    repeatedAnnounce,
    resetIn,
    minPriority,
    requiresAck,
    log,
    productIdentifiers,
    flags,
    regGet,
    regSet,
    devices,
    selfDevice,
    serviceClasses,
    pkts,
    before,
    after,
    pipes,
    port,
    errors
  } = props;
  var filters = [];
  if (before !== undefined) filters.push(pkt => pkt.timestamp <= before);
  if (after !== undefined) filters.push(pkt => pkt.timestamp >= after);
  if (announce !== undefined) filters.push(pkt => pkt.isAnnounce === announce);
  if (repeatedAnnounce !== undefined) filters.push(pkt => (!pkt.isAnnounce || pkt.isRepeatedAnnounce) === repeatedAnnounce);
  if (resetIn !== undefined) filters.push(pkt => !!(pkt.isRegisterSet && pkt.serviceClass === specconstants/* SRV_CONTROL */.gm9 && pkt.registerIdentifier === specconstants/* ControlReg.ResetIn */.toU.ResetIn) === resetIn);
  if (minPriority !== undefined) filters.push(pkt => (pkt.isRegisterSet && pkt.serviceClass == specconstants/* SRV_LOGGER */.w9j && pkt.registerIdentifier === specconstants/* LoggerReg.MinPriority */.hXV.MinPriority) === minPriority);
  if (requiresAck !== undefined) filters.push(pkt => pkt.requiresAck === requiresAck);
  if (flags) filters.push(pkt => hasAnyFlag(pkt));
  if (pipes !== undefined) filters.push(pkt => pkt.isPipe);
  if (port !== undefined) filters.push(pkt => pkt.pipePort === port);
  if (regGet !== undefined && regSet !== undefined) filters.push(pkt => pkt.isRegisterGet === regGet && pkt.isRegisterSet === regSet);else if (regGet !== undefined) filters.push(pkt => pkt.isRegisterGet === regGet);else if (regSet !== undefined) filters.push(pkt => pkt.isRegisterSet === regSet);
  if (log !== undefined) filters.push(pkt => (pkt.serviceClass === specconstants/* SRV_LOGGER */.w9j && pkt.isReport) === log);

  if (selfDevice !== undefined) {
    filters.push(pkt => {
      var {
        device
      } = pkt;
      if (!device) return true;
      return device === device.bus.selfDevice === selfDevice;
    });
  }

  if (Object.keys(devices).length) filters.push(pkt => {
    if (!pkt.device) return false;
    var f = devices[pkt.device.deviceId];
    return !!f && (!f.from || !pkt.isCommand) && (!f.to || pkt.isCommand);
  });

  if (serviceClasses) {
    filters.push(pkt => serviceClasses.some(serviceClass => (0,spec/* isInstanceOf */.V9)(pkt.serviceClass, serviceClass)));
  }

  if (pkts) {
    filters.push(pkt => {
      var _pkt$decoded, _pkt$decoded2;

      return pkts.indexOf((_pkt$decoded = pkt.decoded) === null || _pkt$decoded === void 0 ? void 0 : _pkt$decoded.info.identifier.toString(16)) > -1 || pkts.indexOf((_pkt$decoded2 = pkt.decoded) === null || _pkt$decoded2 === void 0 ? void 0 : _pkt$decoded2.info.name) > -1;
    });
  }

  if (productIdentifiers) filters.push(pkt => {
    var _pkt$device;

    var fwid = (_pkt$device = pkt.device) === null || _pkt$device === void 0 ? void 0 : _pkt$device.productIdentifier;
    return fwid === undefined || productIdentifiers.indexOf(fwid) > -1;
  });
  if (errors !== undefined) filters.push(pkt => {
    var _pkt$decoded3;

    return !!((_pkt$decoded3 = pkt.decoded) !== null && _pkt$decoded3 !== void 0 && _pkt$decoded3.error) === errors;
  });

  var filter = pkt => filters.every(filter => filter(pkt));

  return filter;

  function hasAnyFlag(pkt) {
    var _pkt$decoded4;

    var k = (_pkt$decoded4 = pkt.decoded) === null || _pkt$decoded4 === void 0 ? void 0 : _pkt$decoded4.info.kind;
    return !!k && flags.indexOf(k) > -1;
  }
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/trace/traceview.ts








var TRACE_MAX_ITEMS = 1000;
var FILTERED_TRACE_MAX_ITEMS = 100;
var DUPLICATE_PACKET_MERGE_HORIZON_MAX_DISTANCE = 10;
var DUPLICATE_PACKET_MERGE_HORIZON_MAX_TIME = 5000;
/**
 * A grouped packet
 * @category Trace
 */

/**
 * A filtered view over a packet trace
 * @category Trace
 */
var TraceView = /*#__PURE__*/function (_JDClient) {
  (0,inheritsLoose/* default */.Z)(TraceView, _JDClient);

  function TraceView(bus, filter, throttleDelay) {
    var _this;

    if (throttleDelay === void 0) {
      throttleDelay = 200;
    }

    _this = _JDClient.call(this) || this;
    _this.id = "v" + Math.random();
    _this._maxFilteredLength = FILTERED_TRACE_MAX_ITEMS;
    _this._paused = false;
    _this._packetFilter = undefined;
    _this._filteredPackets = [];
    _this.silent = false;
    _this.bus = bus;
    _this._trace = new trace/* default */.ZP([], {
      maxLength: TRACE_MAX_ITEMS
    });
    _this.handlePacket = _this.handlePacket.bind((0,assertThisInitialized/* default */.Z)(_this));
    _this.handleFilterUpdate = _this.handleFilterUpdate.bind((0,assertThisInitialized/* default */.Z)(_this));
    _this.notifyPacketsChanged = (0,utils/* throttle */.P2)(() => {
      if (!_this.silent) _this.setFilteredPackets();
    }, throttleDelay);

    _this.mount(_this.bus.subscribe([constants/* PACKET_PROCESS */.wY8, constants/* PACKET_SEND */.RaS], _this.handlePacket));

    _this.mount(_this.bus.subscribe(constants/* DEVICE_ANNOUNCE */.Hob, _this.handleFilterUpdate));

    _this.filter = filter;
    return _this;
  }
  /**
   * No new packet is added to the filtered view
   */


  var _proto = TraceView.prototype;

  _proto.setFilteredPackets = function setFilteredPackets() {
    // always clone for React
    this._filteredPackets = this._filteredPackets.slice(0, this._filteredPackets.length > this.maxFilteredLength * 1.1 ? this.maxFilteredLength : this._filteredPackets.length);
    this.emit(constants/* CHANGE */.Ver);
  };

  _proto.clear = function clear() {
    this.trace = new trace/* default */.ZP([], {
      maxLength: TRACE_MAX_ITEMS
    });
    this._filteredPackets = [];
    this.setFilteredPackets();
    this.emit(constants/* CHANGE */.Ver);
  };

  _proto.handleFilterUpdate = function handleFilterUpdate() {
    this.refreshFilter();
  };

  _proto.refreshFilter = function refreshFilter() {
    var _this$notifyPacketsCh;

    this.id = "view" + Math.random();
    this._packetFilter = parsePacketFilter(this.bus, this._filter);
    this._filteredPackets = [];
    var packets = this.trace.packets; // reapply filter to existing trace

    for (var i = packets.length - 1; i >= 0 && this._filteredPackets.length < this.maxFilteredLength; --i) {
      var _this$_packetFilter;

      var pkt = packets[i];

      if ((_this$_packetFilter = this._packetFilter) !== null && _this$_packetFilter !== void 0 && _this$_packetFilter.filter(pkt)) {
        this.addFilteredPacket(pkt);
      }
    }

    this._filteredPackets = this._filteredPackets.reverse();
    (_this$notifyPacketsCh = this.notifyPacketsChanged) === null || _this$notifyPacketsCh === void 0 ? void 0 : _this$notifyPacketsCh.call(this);
  };

  _proto.handlePacket = function handlePacket(pkt) {
    var _this$_packetFilter2;

    if (this._paused) return; // remember packet

    this._trace.addPacket(pkt); // add packet to live list


    if ((_this$_packetFilter2 = this._packetFilter) !== null && _this$_packetFilter2 !== void 0 && _this$_packetFilter2.filter(pkt)) {
      var _this$notifyPacketsCh2;

      this.addFilteredPacket(pkt); // debounced notification of changes

      (_this$notifyPacketsCh2 = this.notifyPacketsChanged) === null || _this$notifyPacketsCh2 === void 0 ? void 0 : _this$notifyPacketsCh2.call(this);
    }
  };

  _proto.addFilteredPacket = function addFilteredPacket(packet) {
    var _this$_packetFilter3, _this$_packetFilter7;

    if (packet.meta[this.id]) return;
    packet.meta[this.id] = true; // resolve packet device for pretty name

    if (!packet.isMultiCommand && !packet.device) packet.device = this.bus.device(packet.deviceIdentifier, false, packet); // keep in filtered view

    var filtered = true;
    var hash = (0,utils/* toHex */.NC)(packet.toBuffer());

    if ((_this$_packetFilter3 = this._packetFilter) !== null && _this$_packetFilter3 !== void 0 && _this$_packetFilter3.props.grouping) {
      var old = this._filteredPackets.slice(0, DUPLICATE_PACKET_MERGE_HORIZON_MAX_DISTANCE).find(p => packet.timestamp - p.packet.timestamp < DUPLICATE_PACKET_MERGE_HORIZON_MAX_TIME && p.hash === hash);

      if (old) {
        old.count++;
        filtered = false;
      }
    } // collapse acks


    if (packet.isCRCAck) {
      var pkts = this.trace.packets;
      var crc = packet.serviceCommand;
      var did = packet.deviceIdentifier;
      var m = Math.max(0, pkts.length - constants/* TRACE_FILTER_HORIZON */.DnH); // max scan 100 packets back

      for (var i = pkts.length - 1; i >= m; i--) {
        var _old = pkts[i];

        if (_old.requiresAck && _old.deviceIdentifier === did && _old.crc === crc) {
          var _this$_packetFilter4;

          _old.meta[constants/* META_ACK */.K3O] = packet;
          if ((_this$_packetFilter4 = this._packetFilter) !== null && _this$_packetFilter4 !== void 0 && _this$_packetFilter4.props.collapseAck) filtered = false;
          break;
        }
      }
    } // track command not supported


    if (packet.serviceCommand === constants/* SystemCmd.CommandNotImplemented */.xSq.CommandNotImplemented) {
      var _pkts = this.trace.packets;
      var [sc, _crc] = packet.jdunpack("u16 u16");

      var _m = Math.max(0, _pkts.length - constants/* TRACE_FILTER_HORIZON */.DnH); // max scan 100 packets back


      for (var _i = _pkts.length - 1; _i >= _m; _i--) {
        var _old2 = _pkts[_i];

        if (_old2.crc === _crc && _old2.serviceCommand === sc) {
          var _this$_packetFilter5;

          _old2.meta[constants/* META_NOT_IMPLEMENTED */.EZK] = packet;
          if ((_this$_packetFilter5 = this._packetFilter) !== null && _this$_packetFilter5 !== void 0 && _this$_packetFilter5.props.collapseNotImplemented) filtered = false;
          break;
        }
      }
    } // report coming back


    if (packet.isRegisterGet && packet.isReport && !packet.meta[constants/* META_GET */.cWR]) {
      var _pkts2 = this.trace.packets;
      var _did = packet.deviceIdentifier;
      var si = packet.serviceIndex;
      var rid = packet.registerIdentifier;

      var _m2 = Math.max(0, _pkts2.length - constants/* TRACE_FILTER_HORIZON */.DnH); // max scan 100 packets back


      for (var _i2 = _pkts2.length - 1; _i2 >= _m2; _i2--) {
        var _old3 = _pkts2[_i2];

        if (_old3.isRegisterGet && _old3.isCommand && _old3.deviceIdentifier === _did && _old3.serviceIndex === si && _old3.registerIdentifier === rid) {
          var _this$_packetFilter6;

          // response from a get command
          packet.meta[constants/* META_GET */.cWR] = _old3;

          if ((_this$_packetFilter6 = this._packetFilter) !== null && _this$_packetFilter6 !== void 0 && _this$_packetFilter6.props.collapseGets) {
            // remove old
            this._filteredPackets.splice(_i2, 1); // keep new

          }

          break;
        }
      }
    } // collapse pipes


    if ((_this$_packetFilter7 = this._packetFilter) !== null && _this$_packetFilter7 !== void 0 && _this$_packetFilter7.props.collapsePipes && packet.isPipe && packet.isCommand) {
      var _pkts3 = this._filteredPackets;

      var _m3 = Math.min(_pkts3.length, constants/* TRACE_FILTER_HORIZON */.DnH); // max scan 100 packets back


      var port = packet.pipePort;
      var _did2 = packet.deviceIdentifier;

      for (var _i3 = 0; _i3 < _m3; ++_i3) {
        var _old4 = _pkts3[_i3].packet;

        if (_old4.deviceIdentifier === _did2 && _old4.pipePort === port) {
          var pipePackets = _old4.meta[constants/* META_PIPE */.YHR];
          if (!pipePackets) pipePackets = _old4.meta[constants/* META_PIPE */.YHR] = [];
          pipePackets[packet.pipeCount] = packet;
          filtered = false;
          break;
        }
      }
    }

    if (filtered) {
      var key = packet.timestamp + hash;

      this._filteredPackets.unshift({
        key,
        hash,
        packet,
        count: 1
      });
    }
  };

  (0,createClass/* default */.Z)(TraceView, [{
    key: "paused",
    get: function get() {
      return this._paused;
    },
    set: function set(v) {
      if (v !== this._paused) {
        this._paused = v;

        if (!this._paused) {
          this.refreshFilter();
          this.emit(constants/* CHANGE */.Ver);
        }
      }
    }
  }, {
    key: "trace",
    get: function get() {
      return this._trace;
    },
    set: function set(t) {
      if (t !== this._trace) {
        this._trace = t;
        this.refreshFilter();
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }, {
    key: "filteredPackets",
    get: function get() {
      return this._filteredPackets;
    }
  }, {
    key: "filter",
    get: function get() {
      return this._filter;
    },
    set: function set(f) {
      if (f !== this._filter) {
        this._filter = f;
        this.refreshFilter();
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }, {
    key: "maxFilteredLength",
    get: function get() {
      return this._maxFilteredLength;
    },
    set: function set(v) {
      if (this._maxFilteredLength !== v) {
        this._maxFilteredLength = v;
        this.refreshFilter();
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }]);

  return TraceView;
}(client/* JDClient */.z);
/* harmony default export */ var traceview = (TraceView);
// EXTERNAL MODULE: ./src/components/hooks/useLocalStorage.ts
var useLocalStorage = __webpack_require__(34093);
;// CONCATENATED MODULE: ./src/components/PacketsContext.tsx








var PacketsContext = /*#__PURE__*/(0,react.createContext)({
  view: undefined,
  clearPackets: () => {},
  clearBus: () => {},
  filter: "",
  setFilter: () => {},
  replayTrace: undefined,
  setReplayTrace: () => {},
  recording: false,
  toggleRecording: () => {},
  tracing: false,
  toggleTracing: () => {},
  paused: false,
  setPaused: () => {},
  setSilent: () => {},
  progress: undefined,
  timeRange: undefined,
  toggleTimeRange: () => {},
  setTimeRange: () => {}
});
PacketsContext.displayName = "packets";
/* harmony default export */ var components_PacketsContext = (PacketsContext);
var DEFAULT_PACKET_FILTER = "announce:false reset-in:false min-priority:false"; // eslint-disable-next-line react/prop-types

var PacketsProvider = _ref => {
  var {
    children
  } = _ref;
  var {
    bus
  } = (0,react.useContext)(Context/* default */.Z);
  var [filter, _setFilter] = (0,useLocalStorage/* default */.Z)("packetfilter", DEFAULT_PACKET_FILTER);
  var recorder = (0,react.useRef)(new tracerecorder(bus));
  var view = (0,react.useRef)(new traceview(bus, filter));
  var player = (0,react.useRef)(new traceplayer/* default */.Z(bus));
  var {
    0: progress,
    1: setProgress
  } = (0,react.useState)(0);
  var {
    0: timeRange,
    1: setTimeRange
  } = (0,react.useState)(undefined);
  var {
    0: recording,
    1: setRecording
  } = (0,react.useState)(false);
  var {
    0: replayTrace,
    1: _setReplayTrace
  } = (0,react.useState)(undefined);
  var {
    0: tracing,
    1: setTracing
  } = (0,react.useState)(false);
  var {
    0: paused,
    1: _setPaused
  } = (0,react.useState)(false);
  var {
    0: silent,
    1: _setSilent
  } = (0,react.useState)(false);

  var clearPackets = () => {
    setProgress(undefined);
    setTimeRange(undefined);
    player.current.stop();
    recorder.current.stop();
    view.current.clear(); // don't clear the bus, it's too disrupting
    //bus.clear();
  };

  var clearBus = () => {
    clearPackets();
    bus.clear();
  };

  var setReplayTrace = /*#__PURE__*/function () {
    var _ref2 = (0,asyncToGenerator/* default */.Z)(function* (trace) {
      clearPackets();
      player.current.trace = trace;
    });

    return function setReplayTrace(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  var toggleRecording = () => {
    if (recorder.current.recording) {
      player.current.trace = recorder.current.stop();
    } else {
      recorder.current.start();
      player.current.trace = undefined;
      setProgress(undefined);
    }
  };

  var toggleTracing = /*#__PURE__*/function () {
    var _ref3 = (0,asyncToGenerator/* default */.Z)(function* () {
      console.log("player toggle running " + player.current.running);

      if (player.current.running) {
        player.current.stop();
      } else {
        clearPackets();
        bus.clear(); // clear all devices

        player.current.start();
      }
    });

    return function toggleTracing() {
      return _ref3.apply(this, arguments);
    };
  }();

  var toggleTimeRange = () => {
    if (timeRange) {
      setTimeRange(undefined);
    } else {
      setTimeRange([view.current.trace.startTimestamp, view.current.trace.endTimestamp]);
    }
  };

  var setFilter = f => {
    _setFilter(f);
  };

  var setPaused = p => {
    if (p !== paused) {
      _setPaused(p);

      view.current.paused = p;
    }
  };

  var setSilent = p => {
    if (p !== silent) {
      _setSilent(p);

      view.current.silent = p;
    }
  }; // views


  (0,react.useEffect)(() => {
    recorder.current.mount(recorder.current.subscribe(constants/* CHANGE */.Ver, () => {
      setRecording(recorder.current.recording);
    }));
    player.current.mount(player.current.subscribe(constants/* CHANGE */.Ver, /*#__PURE__*/(0,asyncToGenerator/* default */.Z)(function* () {
      setTracing(player.current.running);

      _setReplayTrace(player.current.trace);

      if (player.current.trace) yield bus.stop();else {
        if (!recorder.current.trace) bus.clear();
        yield bus.start();
      }
    })));
    player.current.mount(player.current.subscribe(constants/* PROGRESS */.ad7, () => setProgress(player.current.progress)));
    return () => {
      recorder.current.unmount();
      view.current.unmount();
      player.current.unmount();
    };
  }, []); // update filter in the view

  (0,react.useEffect)(() => {
    var f = filter;
    if ((timeRange === null || timeRange === void 0 ? void 0 : timeRange[0]) !== undefined) f += " after:" + timeRange[0];
    if ((timeRange === null || timeRange === void 0 ? void 0 : timeRange[1]) !== undefined) f += " before:" + timeRange[1];
    view.current.filter = f;
  }, [filter, timeRange]);
  return /*#__PURE__*/react.createElement(PacketsContext.Provider, {
    value: {
      view: view.current,
      clearPackets,
      clearBus,
      filter,
      setFilter,
      replayTrace,
      setReplayTrace,
      recording,
      toggleRecording,
      tracing,
      toggleTracing,
      paused,
      setPaused,
      setSilent,
      progress,
      timeRange,
      setTimeRange,
      toggleTimeRange
    }
  }, children);
};

/***/ }),

/***/ 24162:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ RegisterInput; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/material/Box/Box.js + 1 modules
var Box = __webpack_require__(39211);
// EXTERNAL MODULE: ./src/components/devices/DeviceName.tsx
var DeviceName = __webpack_require__(26390);
// EXTERNAL MODULE: ./src/components/ui/Alert.tsx
var Alert = __webpack_require__(95453);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./src/components/AppContext.tsx
var AppContext = __webpack_require__(84377);
// EXTERNAL MODULE: ./src/components/fields/MembersInput.tsx + 3 modules
var MembersInput = __webpack_require__(29085);
// EXTERNAL MODULE: ./src/components/RegisterTrend.tsx
var RegisterTrend = __webpack_require__(88251);
// EXTERNAL MODULE: ./src/components/ui/IconButtonWithProgress.tsx + 1 modules
var IconButtonWithProgress = __webpack_require__(16845);
// EXTERNAL MODULE: ./src/components/hooks/useServiceServer.ts
var useServiceServer = __webpack_require__(49013);
;// CONCATENATED MODULE: ./src/components/hooks/useRegisterServer.ts

function useRegisterServer(register) {
  var server = (0,useServiceServer/* default */.Z)(register === null || register === void 0 ? void 0 : register.service);
  return server === null || server === void 0 ? void 0 : server.register(register === null || register === void 0 ? void 0 : register.code);
}
;// CONCATENATED MODULE: ./src/components/hooks/useReadingAuxilliaryValue.ts


function useReadingAuxilliaryValue(register, identifier, options) {
  if (identifier === void 0) {
    identifier = constants/* SystemReg.ReadingError */.ZJq.ReadingError | constants/* SystemReg.ReadingResolution */.ZJq.ReadingResolution | constants/* SystemReg.MaxReading */.ZJq.MaxReading | constants/* SystemReg.MinReading */.ZJq.MinReading | constants/* SystemReg.MinValue */.ZJq.MinValue | constants/* SystemReg.MaxValue */.ZJq.MaxValue | constants/* SystemReg.StreamingInterval */.ZJq.StreamingInterval | constants/* SystemReg.StreamingPreferredInterval */.ZJq.StreamingPreferredInterval;
  }

  var {
    service,
    code
  } = register || {};
  var {
    visible
  } = options || {
    visible: true
  };
  var reading = code === constants/* SystemReg.Reading */.ZJq.Reading || code === constants/* SystemReg.Value */.ZJq.Value;
  var auxilliaryRegister = reading && identifier ? service.register(identifier) : undefined;
  var {
    0: value,
    1: setValue
  } = (0,react.useState)(auxilliaryRegister === null || auxilliaryRegister === void 0 ? void 0 : auxilliaryRegister.unpackedValue);
  (0,react.useEffect)(() => {
    setValue(auxilliaryRegister === null || auxilliaryRegister === void 0 ? void 0 : auxilliaryRegister.unpackedValue);
    return visible && (auxilliaryRegister === null || auxilliaryRegister === void 0 ? void 0 : auxilliaryRegister.subscribe(constants/* REPORT_UPDATE */.rGZ, () => {
      setValue(auxilliaryRegister === null || auxilliaryRegister === void 0 ? void 0 : auxilliaryRegister.unpackedValue);
    }));
  }, [register, auxilliaryRegister, visible]);
  return value;
}
// EXTERNAL MODULE: ./src/jacdac/useChange.ts
var useChange = __webpack_require__(54774);
;// CONCATENATED MODULE: ./src/components/RegisterInput.tsx




 // tslint:disable-next-line: no-submodule-imports









function RegisterInput(props) {
  var {
    register,
    showRegisterName,
    showDeviceName,
    showServiceName,
    hideMissingValues,
    showTrend,
    showDataType,
    variant,
    off,
    toggleOff,
    visible
  } = props;
  var {
    service,
    specification
  } = register;
  var {
    device
  } = service;
  var {
    fields,
    code
  } = register;
  var {
    setError: setAppError
  } = (0,react.useContext)(AppContext/* default */.ZP);
  var {
    0: working,
    1: setWorking
  } = (0,react.useState)(false); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var {
    0: args,
    1: setArgs
  } = (0,react.useState)(register.unpackedValue || []);
  var server = useRegisterServer(register);
  var hasSet = specification.kind === "rw" || server && specification.kind !== "const";
  var hasData = (0,useChange/* default */.Z)(register, _ => !!_.data);
  var color = hasSet ? "secondary" : "primary";
  var regProps = visible !== undefined ? {
    visible
  } : undefined;
  var isReading = code === constants/* SystemReg.Reading */.ZJq.Reading;
  var isValue = !isReading && code === constants/* SystemReg.Value */.ZJq.Value;
  var min = useReadingAuxilliaryValue(register, isReading ? constants/* SystemReg.MinReading */.ZJq.MinReading : isValue ? constants/* SystemReg.MinValue */.ZJq.MinValue : undefined, regProps);
  var max = useReadingAuxilliaryValue(register, isReading ? constants/* SystemReg.MaxReading */.ZJq.MaxReading : isValue ? constants/* SystemReg.MaxValue */.ZJq.MaxValue : undefined, regProps);
  var readingError = useReadingAuxilliaryValue(register, constants/* SystemReg.ReadingError */.ZJq.ReadingError, regProps);
  var resolution = useReadingAuxilliaryValue(register, constants/* SystemReg.ReadingResolution */.ZJq.ReadingResolution, regProps);
  (0,react.useEffect)(() => {
    var vs = register.unpackedValue;
    if (vs !== undefined) setArgs(vs);
    return visible && register.subscribe(constants/* REPORT_UPDATE */.rGZ, () => {
      var vs = register.unpackedValue;
      if (vs !== undefined) setArgs(vs);
    });
  }, [register, visible]);

  var handleRefresh = () => {
    register.refresh(true);
  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any


  var sendArgs = /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* (values) {
      if (working) return;

      try {
        setWorking(true);
        if (server) server.setValues(values);
        yield register.sendSetPackedAsync(values, true);
      } catch (e) {
        setAppError(e);
      } finally {
        setWorking(false);
      }
    });

    return function sendArgs(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  if (!specification) return /*#__PURE__*/react.createElement(Alert/* default */.Z, {
    severity: "error"
  }, "Unknown member " + register.service + ":" + register.code);
  if (!fields.length) return null; // nothing to see here

  if (hideMissingValues && !hasData) return null;
  var serviceName = register.service.name.toLocaleLowerCase().replace(/_/g, " ");
  var registerName = specification.name.replace(/_/g, " ");
  return /*#__PURE__*/react.createElement(react.Fragment, null, showDeviceName && /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    component: "span",
    key: "devicenamename"
  }, /*#__PURE__*/react.createElement(DeviceName/* default */.Z, {
    device: device
  }), "/"), showServiceName && specification && /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    variant: "caption",
    key: "servicename",
    "aria-label": serviceName
  }, serviceName), showRegisterName && specification && serviceName !== registerName && /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    variant: "caption",
    key: "registername",
    "aria-label": registerName
  }, " " + registerName), !hasData && /*#__PURE__*/react.createElement(Box/* default */.Z, null, /*#__PURE__*/react.createElement(IconButtonWithProgress/* default */.Z, {
    title: "refresh",
    indeterminate: true,
    onClick: handleRefresh
  })), showTrend && hasData && /*#__PURE__*/react.createElement(RegisterTrend/* default */.Z, {
    register: register,
    mini: false,
    horizon: 24
  }), hasData && /*#__PURE__*/react.createElement(MembersInput/* default */.Z, {
    color: color,
    serviceSpecification: service.specification,
    serviceMemberSpecification: specification,
    specifications: fields.map(f => f.specification),
    values: args,
    setValues: hasSet && sendArgs,
    showDataType: showDataType,
    variant: variant,
    min: min,
    max: max,
    resolution: resolution,
    error: readingError,
    off: off,
    toggleOff: toggleOff
  }));
}

/***/ }),

/***/ 88251:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ RegisterTrend; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20392);
/* harmony import */ var _FieldDataSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64616);
/* harmony import */ var _Trend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(25090);
/* harmony import */ var _useChartPalette__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74039);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(54774);
/* harmony import */ var _hooks_useInterval__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63944);








var DEFAULT_HORIZON = 255;
var DEFAULT_HEIGHT = 12;
function RegisterTrend(props) {
  var {
    register,
    mini,
    horizon = DEFAULT_HORIZON,
    height,
    interval
  } = props;
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);
  var palette = (0,_useChartPalette__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
  var dataSet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => _FieldDataSet__WEBPACK_IMPORTED_MODULE_3__/* ["default"].create */ .ZP.create(bus, [register], "output", palette, horizon * 1.2), [register, palette]);
  (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(dataSet);

  var addRow = () => dataSet.addRow(); // register on change if no intervals


  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => interval ? undefined : register === null || register === void 0 ? void 0 : register.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_RECEIVE */ .Gb8, addRow), [interval, register, dataSet]);
  (0,_hooks_useInterval__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(!!interval, addRow, interval, [dataSet]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Trend__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    dataSet: dataSet,
    horizon: horizon,
    gradient: true,
    height: height || DEFAULT_HEIGHT,
    mini: mini
  });
}

/***/ }),

/***/ 99808:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Aq": function() { return /* binding */ ServiceManagerProvider; },
  "ZP": function() { return /* binding */ components_ServiceManagerContext; }
});

// UNUSED EXPORTS: LocalStorageSettings

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
;// CONCATENATED MODULE: ./jacdac-ts/src/embed/filestorage.ts

var BrowserFileStorage = /*#__PURE__*/function () {
  function BrowserFileStorage() {}

  var _proto = BrowserFileStorage.prototype;

  _proto.saveText = function saveText(name, data, mimeType) {
    if (!mimeType) {
      if (/\.(csv|txt)/i.test(name)) mimeType = "text/plain";else if (/\.json/i.test(name)) mimeType = "application/json";
    }

    var url = "data:" + (mimeType || "text/plain") + ";charset=utf-8," + encodeURIComponent(data);
    return this.downloadUrl(name, url);
  };

  _proto.downloadUrl = function downloadUrl(name, url) {
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style.display = "none";
    a.href = url;
    a.download = name;
    a.click();
    return (0,utils/* delay */.gw)(100);
  };

  return BrowserFileStorage;
}();
var HostedFileStorage = /*#__PURE__*/function () {
  function HostedFileStorage(transport) {
    this.transport = transport;
  }

  var _proto2 = HostedFileStorage.prototype;

  _proto2.saveText = function saveText(name, data) {
    return this.transport.postMessage({
      type: "save-text",
      data: {
        name,
        data
      }
    }).then(resp => {});
  };

  return HostedFileStorage;
}();
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/eventsource.ts
var eventsource = __webpack_require__(45484);
;// CONCATENATED MODULE: ./jacdac-ts/src/embed/modelstore.ts





var ModelStore = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_JDEventSource) {
  _inheritsLoose(ModelStore, _JDEventSource);

  function ModelStore() {
    return _JDEventSource.apply(this, arguments) || this;
  }

  return ModelStore;
}(JDEventSource)));
var HostedModelStore = /*#__PURE__*/function (_JDEventSource2) {
  (0,inheritsLoose/* default */.Z)(HostedModelStore, _JDEventSource2);

  function HostedModelStore(transport) {
    var _this;

    _this = _JDEventSource2.call(this) || this;
    _this.transport = transport;
    _this.handleModelList = _this.handleModelList.bind((0,assertThisInitialized/* default */.Z)(_this));

    _this.transport.onMessage("model-list", _this.handleModelList);

    return _this;
  }

  var _proto = HostedModelStore.prototype;

  _proto.handleModelList = function handleModelList(msg) {
    this._models = msg;
    this.emit(constants/* CHANGE */.Ver);
  };

  _proto.models = function models() {
    var _this$_models, _this$_models$data$mo;

    return (_this$_models = this._models) === null || _this$_models === void 0 ? void 0 : (_this$_models$data$mo = _this$_models.data.models) === null || _this$_models$data$mo === void 0 ? void 0 : _this$_models$data$mo.slice(0);
  };

  _proto.inputConfigurations = function inputConfigurations() {
    var _this$_models2, _this$_models2$data$i;

    return (_this$_models2 = this._models) === null || _this$_models2 === void 0 ? void 0 : (_this$_models2$data$i = _this$_models2.data.inputConfigurations) === null || _this$_models2$data$i === void 0 ? void 0 : _this$_models2$data$i.slice(0);
  };

  _proto.loadFile = /*#__PURE__*/function () {
    var _loadFile = (0,asyncToGenerator/* default */.Z)(function* (model) {
      var _ack$data;

      var {
        path
      } = model;
      var ack = yield this.transport.postMessage({
        type: "file-load",
        requireAck: true,
        data: {
          path
        }
      });
      var data = ack === null || ack === void 0 ? void 0 : (_ack$data = ack.data) === null || _ack$data === void 0 ? void 0 : _ack$data.data;
      if (!data) return undefined;
      var base64 = data.mimetype === "application/octet-stream";
      var buffer = Buffer.from(data.content, base64 ? "base64" : undefined);
      return new Blob([buffer], {
        type: data.mimetype
      });
    });

    function loadFile(_x) {
      return _loadFile.apply(this, arguments);
    }

    return loadFile;
  }();

  return HostedModelStore;
}(eventsource/* default */.ZP);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/client.ts
var client = __webpack_require__(47235);
;// CONCATENATED MODULE: ./jacdac-ts/src/embed/transport.ts




/**
 * @internal
 */
var IFrameTransport = /*#__PURE__*/function (_JDClient) {
  (0,inheritsLoose/* default */.Z)(IFrameTransport, _JDClient);

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  function IFrameTransport(origin) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this.ackAwaiters = {};
    _this.origin = origin;
    _this.handleMessage = _this.handleMessage.bind((0,assertThisInitialized/* default */.Z)(_this));
    window.addEventListener("message", _this.handleMessage, false);

    _this.mount(() => window.removeEventListener("message", _this.handleMessage, false));

    return _this;
  }

  var _proto = IFrameTransport.prototype;

  _proto.isOriginValid = function isOriginValid(msg) {
    return this.origin === "*" || msg.origin === this.origin;
  }
  /**
   * @internal
   */
  ;

  _proto.postReady = function postReady() {
    this.postMessage({
      type: "status",
      data: {
        status: "ready"
      }
    });
  }
  /**
   * Post message to client and awaits for ack if needed
   * @internal
   */
  ;

  _proto.postMessage = function postMessage(msg) {
    var p;
    msg.id = "jd:" + Math.random();
    msg.source = "jacdac";

    if (msg.requireAck) {
      p = new Promise(resolve => {
        this.ackAwaiters[msg.id] = msg => {
          resolve(msg);
        };
      });
    }

    window.parent.postMessage(msg, this.origin);
    return p || Promise.resolve(undefined);
  };

  _proto.onMessage = function onMessage(type, handler) {
    this.on("message:" + type, handler);
  };

  _proto.handleMessage = function handleMessage(event) {
    if (!this.isOriginValid(event)) return;
    var msg = event.data;
    if (!msg || msg.source !== "jacdac") return; // handle acks separately

    if (msg.type === "ack") {
      var ack = msg;
      var awaiter = this.ackAwaiters[ack.ackId];
      delete this.ackAwaiters[ack.ackId];
      if (awaiter) awaiter(msg);
    } else {
      this.emit("message:" + msg.type, msg);
    }
  };

  return IFrameTransport;
}(client/* default */.Z);
// EXTERNAL MODULE: ./src/components/ui/DarkModeContext.tsx
var DarkModeContext = __webpack_require__(91350);
// EXTERNAL MODULE: ./src/jacdac/Context.tsx
var Context = __webpack_require__(20392);
// EXTERNAL MODULE: ./src/jacdac/providerbus.ts + 19 modules
var providerbus = __webpack_require__(24725);
;// CONCATENATED MODULE: ./src/components/ServiceManagerContext.tsx








var LocalStorageSettings = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function LocalStorageSettings(key) {
    this.key = key;
    this.live = JSONTryParse(typeof window !== "undefined" && window.localStorage.getItem(key)) || {};
  }

  var _proto = LocalStorageSettings.prototype;

  _proto.get = function get(key) {
    return this.live[key];
  };

  _proto.set = function set(key, value) {
    if (value === undefined || value === null) delete this.live[key];else this.live[key] = value;
    if (typeof window !== "undefined") window.localStorage.setItem(this.key, JSON.stringify(this.live, null, 2));
  };

  _proto.clear = function clear() {
    this.live = {};
    if (typeof window !== "undefined") window.localStorage.removeItem(this.key);
  };

  return LocalStorageSettings;
}()));
var ServiceManagerContext = /*#__PURE__*/(0,react.createContext)({
  isHosted: false,
  fileStorage: null,
  modelStore: null
});
ServiceManagerContext.displayName = "Services";
/* harmony default export */ var components_ServiceManagerContext = (ServiceManagerContext); // eslint-disable-next-line react/prop-types

var ServiceManagerProvider = _ref => {
  var {
    children
  } = _ref;
  var {
    toggleDarkMode
  } = (0,react.useContext)(DarkModeContext/* default */.Z);
  var {
    bus
  } = (0,react.useContext)(Context/* default */.Z);
  var propsRef = (0,react.useRef)(createProps()); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var handleMessage = ev => {
    var msg = ev.data;
    if ((msg === null || msg === void 0 ? void 0 : msg.source) !== "jacdac") return;

    switch (msg.type) {
      case "theme":
        {
          var themeMsg = msg;
          toggleDarkMode(themeMsg.data.type);
          break;
        }
    }
  }; // receiving messages


  (0,react.useEffect)(() => {
    if (typeof window !== "undefined") {
      window.addEventListener("message", handleMessage, false);
      return () => window.removeEventListener("message", handleMessage);
    }

    return () => {};
  }, []);
  return /*#__PURE__*/react.createElement(ServiceManagerContext.Provider, {
    value: propsRef.current
  }, children);

  function createProps() {
    var isHosted = providerbus/* UIFlags.hosted */.A.hosted;
    var fileStorage = new BrowserFileStorage();
    var modelStore = undefined;

    if (isHosted) {
      console.log("starting hosted services");
      var transport = new IFrameTransport(bus.parentOrigin);
      fileStorage = new HostedFileStorage(transport);
      modelStore = new HostedModelStore(transport); // notify host that we are ready

      transport.postReady();
    }

    return {
      isHosted,
      fileStorage,
      modelStore
    };
  }
};

/***/ }),

/***/ 25090:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Trend; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(98348);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81794);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(98953);
/* harmony import */ var _widgets_useWidgetTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60650);
/* harmony import */ var _ui_useUnitConverter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(44111);






var PREFIX = "Trend";
var classes = {
  graph: PREFIX + "-graph",
  mini: PREFIX + "-mini"
};
var Root = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP)("div")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + classes.graph]: {
      marginTop: theme.spacing(1),
      marginBottom: theme.spacing(1)
    },
    ["& ." + classes.mini]: {
      display: "inline-block",
      width: "10rem"
    }
  };
});

function UnitTrendChart(props) {
  var {
    dataSet,
    useGradient,
    data,
    unit,
    vpw,
    vph,
    dot,
    yAxis
  } = props;
  var {
    name: unitName,
    converter: unitConverter
  } = (0,_ui_useUnitConverter__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(unit);
  var {
    textPrimary
  } = (0,_widgets_useWidgetTheme__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)("primary");
  var shape = unit == "#" ? "step" : "line";
  var symmetric = unit == "g" ? true : false;
  var indexes = dataSet.units.map((u, index) => (u || "/") === unit ? index : undefined).filter(index => index !== undefined);
  var colors = indexes.map(i => dataSet.colors[i]);
  var times = data.map(ex => ex.timestamp);
  var maxt = Math.max.apply(null, times);
  var mint = Math.min.apply(null, times);
  var minv = unitConverter(unit == "/" ? 0 : Math.min.apply(null, indexes.map(i => dataSet.mins[i])));
  var maxv = unitConverter(unit == "/" ? 1 : Math.max.apply(null, indexes.map(i => dataSet.maxs[i])));
  var opposite = unit != "/" && Math.sign(minv) != Math.sign(maxv);

  if (isNaN(minv) && isNaN(maxv)) {
    minv = 0;
    maxv = 1;
  }

  if (symmetric) {
    maxv = Math.max(Math.abs(minv), Math.abs(maxv));
    minv = -maxv;
  }

  var step = undefined;
  var precision = step === undefined ? 1 : step < 1 ? Math.ceil(-Math.log10(step)) : 0;
  minv = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(minv, precision, Math.floor);
  maxv = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_1__/* .roundWithPrecision */ .JI)(maxv, precision, Math.ceil);
  var rv = maxv - minv;
  var margin = 2;
  var h = maxv - minv || 10;
  var w = maxt - mint || 10;
  var strokeWidth = 0.25;
  var axisWidth = 0.2;
  var axisColor = "#ccc";
  var pointRadius = strokeWidth * 1.5;
  var toffset = -pointRadius * 3;
  var fontSize = "0.3rem";

  var x = t => {
    return (t - mint) / w * vpw;
  };

  var y = v => {
    if (v === undefined || isNaN(v)) v = minv; // adding random for lineragradient bug workaround
    // which does not render perfectly
    // horizontal lines

    return (Math.random() * 0.0001 * rv - (unitConverter(v) - minv)) / h * (vph - 2 * margin);
  };

  var lastRow = data[data.length - 1];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, useGradient && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    key: "gradaxis",
    id: "gradientaxis",
    x1: "0%",
    y1: "0%",
    x2: "100%",
    y2: "0%"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "0%",
    stopOpacity: "0",
    stopColor: axisColor
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "5%",
    stopOpacity: "0",
    stopColor: axisColor
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "40%",
    stopOpacity: "1",
    stopColor: axisColor
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "100%",
    stopOpacity: "1",
    stopColor: axisColor
  })), indexes.map((index, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    key: "grad" + i,
    id: "gradient" + index,
    x1: "0%",
    y1: "0%",
    x2: "100%",
    y2: "0%"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "0%",
    stopOpacity: "0",
    stopColor: colors[i]
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "5%",
    stopOpacity: "0",
    stopColor: colors[i]
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "40%",
    stopOpacity: "1",
    stopColor: colors[i]
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: "100%",
    stopOpacity: "1",
    stopColor: colors[i]
  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    transform: "translate(" + toffset + ", " + (vph - margin) + ")"
  }, yAxis && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("text", {
    x: margin,
    y: -vph + margin + margin / 2,
    dominantBaseline: "hanging",
    fontSize: fontSize,
    fill: textPrimary
  }, maxv, unitName), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("text", {
    x: margin,
    y: margin,
    fontSize: fontSize,
    fill: textPrimary
  }, minv, unitName)), opposite && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("line", {
    x1: x(mint),
    x2: x(maxt),
    y1: y(0),
    y2: y(0),
    strokeWidth: axisWidth,
    stroke: useGradient ? "url(#gradientaxis)" : axisColor
  }), indexes.map((index, i) => {
    var color = colors[i];
    var path = shape == "step" ? data.map((row, ri) => ri == 0 ? "M " + x(row.timestamp) + " " + y(row.data[index]) : "H " + x(row.timestamp) + " V " + y(row.data[index])).join(" ") : data.map((row, ri) => (ri == 0 ? "M" : "L") + " " + x(row.timestamp) + " " + y(row.data[index])).join(" ");
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
      key: "line" + index
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
      d: path,
      fill: "none",
      stroke: useGradient ? "url(#gradient" + index + ")" : color,
      strokeWidth: strokeWidth,
      strokeLinejoin: "round"
    }), dot && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
      cx: x(lastRow.timestamp),
      cy: y(lastRow.data[index]),
      r: pointRadius,
      fill: color
    }));
  })));
}

function UnitTrend(props) {
  var {
    dataSet,
    horizon,
    width,
    height,
    mini,
    gradient
  } = props;
  var {
    rows
  } = dataSet;
  var vpw = width || 80;
  var vph = height || 15;
  var data = rows.slice(-horizon);
  var useGradient = gradient || data.length < rows.length;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
    className: classes.graph,
    variant: "outlined",
    elevation: 0,
    square: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", {
    viewBox: "0 0 " + vpw + " " + vph,
    style: {
      maxHeight: mini ? "5vh" : "10vh",
      maxWidth: "100%"
    }
  }, data.length > 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(UnitTrendChart, Object.assign({
    data: data,
    useGradient: useGradient,
    vpw: vpw,
    vph: vph,
    dot: true,
    yAxis: !mini
  }, props))));
}

function Trend(props) {
  var {
    dataSet,
    mini
  } = props;
  var units = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_1__/* .unique */ .Tw)(dataSet.units.map(unit => unit || "/"));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root, {
    className: mini ? classes.mini : undefined
  }, units.map(unit => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(UnitTrend, Object.assign({
    key: "graph" + unit,
    mini: mini,
    unit: unit
  }, props))));
}

/***/ }),

/***/ 60145:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "M": function() { return /* binding */ DeviceLostAlert; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_useEventRaised__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28417);
/* harmony import */ var _ui_Alert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(95453);




function DeviceLostAlert(props) {
  var {
    device
  } = props;
  var lost = (0,_jacdac_useEventRaised__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)([_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .LOST */ .XWw, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .FOUND */ .a6y], device, dev => !!(dev !== null && dev !== void 0 && dev.lost));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, lost && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Alert__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    severity: "info"
  }, "Device lost..."));
}

/***/ }),

/***/ 84125:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ConnectButton; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15861);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ui_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2636);
/* harmony import */ var _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27591);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(97321);
/* harmony import */ var _ui_IconButtonWithProgress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16845);
/* harmony import */ var _icons_TransportIcon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37564);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(54774);
/* harmony import */ var _hooks_useMediaQueries__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20509);









function ConnectButton(props) {
  var {
    full,
    className,
    transparent,
    transport,
    onClick,
    specification,
    typeInTitle
  } = props;
  var {
    type
  } = transport;
  var connectionState = (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(transport, t => t.connectionState);
  var showDisconnect = connectionState == _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__/* .ConnectionState.Connected */ .em.Connected || connectionState == _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__/* .ConnectionState.Disconnecting */ .em.Disconnecting;
  var inProgress = connectionState == _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__/* .ConnectionState.Connecting */ .em.Connecting || connectionState == _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__/* .ConnectionState.Disconnecting */ .em.Disconnecting;
  var {
    mobile
  } = (0,_hooks_useMediaQueries__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)();
  var small = full !== true && (!full || mobile);
  var disabled = connectionState != _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__/* .ConnectionState.Connected */ .em.Connected && connectionState != _jacdac_ts_src_jdom_transport_transport__WEBPACK_IMPORTED_MODULE_2__/* .ConnectionState.Disconnected */ .em.Disconnected;
  var handleClick = showDisconnect ? /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
    onClick === null || onClick === void 0 ? void 0 : onClick();
    yield transport.disconnect();
  }) : /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(function* () {
    onClick === null || onClick === void 0 ? void 0 : onClick();
    yield transport.connect();
  });
  var icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
    color: "primary",
    variant: "dot",
    invisible: !showDisconnect
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_TransportIcon__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    type: transport.type
  }));
  var label = showDisconnect ? "disconnect from " + type : "connect to " + ((specification === null || specification === void 0 ? void 0 : specification.name) || type);
  var title = showDisconnect ? typeInTitle ? "disconnect " + type : "disconnect" : typeInTitle ? "connect " + type : "connect";
  var trackName = "transport.connect." + type;
  var trackProperties = {
    transport: type
  };
  if (small) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_IconButtonWithProgress__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    "aria-label": label,
    title: label,
    color: transparent ? "inherit" : "primary",
    className: className,
    disabled: disabled,
    indeterminate: inProgress,
    onClick: handleClick
  }, icon));else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Button__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    trackName: trackName,
    trackProperties: trackProperties,
    "aria-label": label,
    title: label,
    size: "small",
    variant: transparent ? "outlined" : "contained",
    color: transparent ? "inherit" : "primary",
    className: className,
    startIcon: icon,
    disabled: disabled,
    onClick: handleClick
  }, title);
}

/***/ }),

/***/ 45608:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ConnectButtons; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(45987);
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(15861);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ConnectButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84125);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20392);
/* harmony import */ var _ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71973);
/* harmony import */ var _hooks_useMediaQueries__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20509);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(54774);
/* harmony import */ var _ui_Button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2636);
/* harmony import */ var _AppContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(84377);
/* harmony import */ var _icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(36656);


var _excluded = ["full"];










function DisconnectedButton(props) {
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);
  var {
    mobile
  } = (0,_hooks_useMediaQueries__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)();
  var {
    toggleShowConnectTransportDialog
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_AppContext__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP);
  var {
    full,
    transparent,
    className
  } = props;
  var {
    0: working,
    1: setWorking
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  var small = !full || mobile;
  var trackName = "transport.connect.start";

  var handleConnect = /*#__PURE__*/function () {
    var _ref = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(function* () {
      try {
        setWorking(true);
        yield bus.connect(true);
        if (!bus.connected) toggleShowConnectTransportDialog();
      } finally {
        setWorking(false);
      }
    });

    return function handleConnect() {
      return _ref.apply(this, arguments);
    };
  }();

  if (small) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    title: "Connect to a physical device",
    color: transparent ? "inherit" : "primary",
    className: className,
    onClick: handleConnect,
    disabled: working
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, null)));else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Button__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    trackName: trackName,
    title: "Connect to a physical device",
    size: "small",
    variant: transparent ? "outlined" : "contained",
    color: transparent ? "inherit" : "primary",
    className: className,
    onClick: handleConnect,
    disabled: working
  }, "Connect");
}

function ConnectButtons(props) {
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);

  var {
    full
  } = props,
      rest = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(props, _excluded);

  var {
    transports
  } = bus;
  var disconnected = (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(bus, _ => _.disconnected);
  if (!(transports !== null && transports !== void 0 && transports.length)) return null;
  return disconnected ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DisconnectedButton, props) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, transports.filter(tr => !tr.disconnected).map(transport => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ConnectButton__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, Object.assign({
    key: transport.type,
    transport: transport
  }, rest, {
    full: full === "always"
  }))));
}

/***/ }),

/***/ 25212:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "BV": function() { return /* binding */ ConsoleProvider; },
  "ZP": function() { return /* binding */ console_ConsoleContext; },
  "mJ": function() { return /* binding */ serializeLogs; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules
var toConsumableArray = __webpack_require__(15785);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim-end.js
var es_string_trim_end = __webpack_require__(48702);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/dist/specconstants.ts
var specconstants = __webpack_require__(73512);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./src/jacdac/Context.tsx
var Context = __webpack_require__(20392);
// EXTERNAL MODULE: ./src/jacdac/useChange.ts
var useChange = __webpack_require__(54774);
// EXTERNAL MODULE: ./src/components/AppContext.tsx
var AppContext = __webpack_require__(84377);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/webserial.ts + 1 modules
var webserial = __webpack_require__(74278);
;// CONCATENATED MODULE: ./src/components/console/useConsoleSerial.ts





function resolveAddr(sourceMap, addr) {
  var offsets = [-2, -4, 0];
  var hit = "";
  var bestOffset = undefined;
  if (addr == 2) return "<bottom>";

  for (var fn of Object.keys(sourceMap)) {
    var vals = sourceMap[fn];

    for (var i = 0; i < vals.length; i += 3) {
      var lineNo = vals[i];
      var startA = vals[i + 1];
      var endA = startA + vals[i + 2];

      if (addr + 10 >= startA && addr - 10 <= endA) {
        for (var off of offsets) {
          if (startA <= addr + off && addr + off <= endA) {
            if (!hit || offsets.indexOf(off) < offsets.indexOf(bestOffset)) {
              hit = fn + "(" + lineNo + ")";
              bestOffset = off;
            }
          }
        }
      }
    }
  }

  return hit;
}

function expandStackTrace(sourceMap, stackTrace) {
  return stackTrace.replace(/(^| )PC:0x([A-F0-9]+)/g, (full, space, num) => {
    var n = resolveAddr(sourceMap, parseInt(num, 16)) || "???";
    return " " + n + " (0x" + num + ")";
  });
}

function useConsoleSerial(sourceMap) {
  var supported = (0,webserial/* isWebSerialSupported */.es)();
  var {
    setError
  } = (0,react.useContext)(AppContext/* default */.ZP);
  var {
    0: port,
    1: setPort
  } = (0,react.useState)();
  var connected = !!port; // register disconnect

  (0,react.useEffect)(() => {
    if (!supported) return;

    var handleDisconnect = ev => {
      var other = ev.target;

      if (port === other) {
        console.debug("serial console: disconnected");
        setPort(undefined);
      }
    };

    navigator.serial.addEventListener("disconnect", handleDisconnect, false);
    return () => navigator.serial.removeEventListener("disconnect", handleDisconnect);
  }); // request device

  var connect = /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* () {
      try {
        var _port = yield navigator.serial.requestPort({});

        yield _port.open({
          baudRate: 115200
        });
        var lastChunk = "";
        var appendStream = new WritableStream({
          write(newChunk) {
            var chunk = // eslint-disable-next-line no-control-regex
            (lastChunk + newChunk).replace(/\x1b\[\d+(;\d+)?m/g, "");
            var lines = chunk.split("\n");
            lastChunk = lines.pop();
            lines.filter(l => !!l).map(l => l.replace(/DMESG:/g, "")).map(line => sourceMap ? expandStackTrace(sourceMap, line) : line).forEach(line => {
              var m = /^\s*(W|I|E)\s+\(\d+\)\s*/.exec(line);
              var level = m === null || m === void 0 ? void 0 : m[1];

              switch (level) {
                case "W":
                  console.warn(line.slice(m[0].length));
                  break;

                case "I":
                  console.info(line.slice(m[0].length));
                  break;

                case "E":
                  console.error(line.slice(m[0].length));
                  break;

                default:
                  console.log(line);
                  break;
              }
            });
          }

        });

        _port.readable.pipeThrough(new TextDecoderStream()).pipeTo(appendStream);

        setPort(_port);
        console.debug("serial console: connected");
      } catch (e) {
        setError(e);
        setPort(undefined);
      }
    });

    return function connect() {
      return _ref.apply(this, arguments);
    };
  }();

  var disconnect = /*#__PURE__*/function () {
    var _ref2 = (0,asyncToGenerator/* default */.Z)(function* () {
      var p = port;

      if (p) {
        console.log("serial console: disconnect");

        try {
          yield p.close();
        } catch (e) {
          setError(e);
        }
      }

      setPort(undefined);
    });

    return function disconnect() {
      return _ref2.apply(this, arguments);
    };
  }(); // clean up always


  (0,react.useEffect)(() => {
    if (port) return () => {
      disconnect();
    };
  }, [port]);
  if (!supported) return {};
  return {
    connected,
    connect,
    disconnect
  };
}
;// CONCATENATED MODULE: ./src/components/console/ConsoleContext.tsx









var ConsoleContext = /*#__PURE__*/(0,react.createContext)({
  logs: [],
  appendLog: () => {},
  clear: () => {},
  setSourceMap: () => {},
  setSearchKeywords: () => {},
  connect: function () {
    var _connect = (0,asyncToGenerator/* default */.Z)(function* () {});

    function connect() {
      return _connect.apply(this, arguments);
    }

    return connect;
  }(),
  disconnect: function () {
    var _disconnect = (0,asyncToGenerator/* default */.Z)(function* () {});

    function disconnect() {
      return _disconnect.apply(this, arguments);
    }

    return disconnect;
  }(),
  setAutoScroll: () => {}
});
ConsoleContext.displayName = "console";
/* harmony default export */ var console_ConsoleContext = (ConsoleContext);
var MAX_MESSAGES = 5000;
var MAX_MESSAGES_SPILL = 500;

function useJacdacLogger() {
  var {
    bus
  } = (0,react.useContext)(Context/* default */.Z);
  (0,react.useEffect)(() => bus.subscribe(constants/* PACKET_REPORT */.deN, pkt => {
    if (pkt.serviceClass === specconstants/* SRV_LOGGER */.w9j && pkt.isReport) {
      var priority = specconstants/* LoggerPriority.Debug */.qit.Debug + (pkt.serviceCommand - specconstants/* LoggerCmd.Debug */.eQc.Debug);
      var {
        device
      } = pkt;
      var {
        shortId
      } = device;
      var content = pkt.jdunpack("s")[0];
      var prefix = content.startsWith(shortId + ".") ? "" : shortId + "> ";
      var message = "" + prefix + content.trimEnd();

      switch (priority) {
        case specconstants/* LoggerPriority.Debug */.qit.Debug:
          console.debug(message);
          break;

        case specconstants/* LoggerPriority.Log */.qit.Log:
          console.log(message);
          break;

        case specconstants/* LoggerPriority.Warning */.qit.Warning:
          console.warn(message);
          break;

        case specconstants/* LoggerPriority.Error */.qit.Error:
          console.error(message);
          break;
      }
    }
  }), []);
}

function useFilter() {
  var {
    bus
  } = (0,react.useContext)(Context/* default */.Z);
  var minLoggerPriority = (0,useChange/* default */.Z)(bus, _ => _.minLoggerPriority);
  return (0,react.useMemo)(() => {
    var filter = [];

    if (minLoggerPriority <= specconstants/* LoggerPriority.Debug */.qit.Debug) {
      filter.push("debug");
      filter.push("clear");
    }

    if (minLoggerPriority <= specconstants/* LoggerPriority.Log */.qit.Log) {
      filter.push("log");
      filter.push("info");
      filter.push("result");
      filter.push("table");
      filter.push("time");
      filter.push("timeEnd");
      filter.push("count");
    }

    if (minLoggerPriority <= specconstants/* LoggerPriority.Warning */.qit.Warning) {
      filter.push("warn");
      filter.push("assert");
      filter.push("command");
    }

    if (minLoggerPriority <= specconstants/* LoggerPriority.Error */.qit.Error) filter.push("error");
    if (minLoggerPriority > specconstants/* LoggerPriority.Error */.qit.Error) filter.push("clear");
    return filter;
  }, [minLoggerPriority]);
}

function serializeLogs(logs) {
  return logs === null || logs === void 0 ? void 0 : logs.map(_ref => {
    var {
      method,
      data
    } = _ref;
    return (method !== "log" ? method : "") + " " + data[0] + data.slice(1).map(d => "\n" + JSON.stringify(d)).join("");
  }).join("\n");
} // eslint-disable-next-line react/prop-types

var ConsoleProvider = _ref2 => {
  var {
    children
  } = _ref2;
  var {
    0: searchKeywords,
    1: setSearchKeywords
  } = (0,react.useState)();
  var {
    0: logs,
    1: setLogs
  } = (0,react.useState)([]);
  var {
    0: autoScroll,
    1: setAutoScroll
  } = (0,react.useState)(true);
  var {
    0: sourceMap,
    1: setSourceMap
  } = (0,react.useState)();
  var {
    connected,
    connect,
    disconnect
  } = useConsoleSerial(sourceMap);
  var filter = useFilter();
  useJacdacLogger();

  var appendLog = log => setLogs(currLogs => [].concat((0,toConsumableArray/* default */.Z)(currLogs.length > MAX_MESSAGES ? currLogs.slice(-MAX_MESSAGES_SPILL) : currLogs), [log]));

  var clear = () => {
    setLogs([]);
    setAutoScroll(true);
  };

  return /*#__PURE__*/react.createElement(ConsoleContext.Provider, {
    value: {
      logs,
      appendLog,
      clear,
      sourceMap,
      setSourceMap,
      filter,
      searchKeywords,
      setSearchKeywords,
      connected,
      connect,
      disconnect,
      autoScroll,
      setAutoScroll
    }
  }, children);
};

/***/ }),

/***/ 32465:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ DashboardDevice; }
});

// EXTERNAL MODULE: ./node_modules/@mui/material/Grid/Grid.js + 2 modules
var Grid = __webpack_require__(4320);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/material/Card/Card.js + 1 modules
var Card = __webpack_require__(30664);
// EXTERNAL MODULE: ./node_modules/@mui/material/CardHeader/CardHeader.js + 1 modules
var CardHeader = __webpack_require__(5234);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/material/CardContent/CardContent.js + 1 modules
var CardContent = __webpack_require__(75510);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./src/jacdac/useChange.ts
var useChange = __webpack_require__(54774);
// EXTERNAL MODULE: ./src/components/devices/DeviceName.tsx
var DeviceName = __webpack_require__(26390);
// EXTERNAL MODULE: ./src/jacdac/useDeviceSpecification.ts + 1 modules
var useDeviceSpecification = __webpack_require__(34246);
// EXTERNAL MODULE: ./src/components/devices/DeviceAvatar.tsx + 5 modules
var DeviceAvatar = __webpack_require__(64178);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(45987);
// EXTERNAL MODULE: ./src/components/dashboard/DashboardServiceWidget.tsx + 3 modules
var DashboardServiceWidget = __webpack_require__(34941);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/Button/Button.js + 2 modules
var Button = __webpack_require__(76968);
// EXTERNAL MODULE: ./src/components/AppContext.tsx
var AppContext = __webpack_require__(84377);
// EXTERNAL MODULE: ./src/components/services/useRoleManagerClient.ts
var useRoleManagerClient = __webpack_require__(39922);
;// CONCATENATED MODULE: ./src/components/services/useServiceRole.ts


function useServiceRole(service) {
  var {
    0: role,
    1: setRole
  } = (0,react.useState)(service === null || service === void 0 ? void 0 : service.role);
  (0,react.useEffect)(() => service === null || service === void 0 ? void 0 : service.subscribe(constants/* ROLE_CHANGE */.X5h, () => {
    setRole(service.role);
  }), [service]);
  return role;
}
;// CONCATENATED MODULE: ./src/components/services/ServiceRole.tsx






var RoleButton = (0,styled/* default */.ZP)(Button/* default */.Z)({
  textTransform: "none"
});
function ServiceRole(props) {
  var {
    service
  } = props;
  var {
    showSelectRoleDialog
  } = (0,react.useContext)(AppContext/* default */.ZP);
  var roleManager = (0,useRoleManagerClient/* default */.Z)();
  var role = useServiceRole(service);

  var handleClick = () => showSelectRoleDialog(service);

  var hasRoleForService = (0,useChange/* default */.Z)(roleManager, _ => _ === null || _ === void 0 ? void 0 : _.hasRoleForService(service), [service]); // hide if no role manager or role not compatible with required roles

  if (!hasRoleForService) return null;
  return /*#__PURE__*/react.createElement(RoleButton, {
    size: "small",
    onClick: handleClick
  }, role || "...");
}
// EXTERNAL MODULE: ./src/components/services/useInstanceName.ts
var useInstanceName = __webpack_require__(20563);
// EXTERNAL MODULE: ./src/components/RegisterTrend.tsx
var RegisterTrend = __webpack_require__(88251);
;// CONCATENATED MODULE: ./src/components/dashboard/DashboardServiceWidgetItem.tsx

var _excluded = ["service", "charts"];







function DashboardServiceWidgetItem(props) {
  var {
    service,
    charts
  } = props,
      rest = (0,objectWithoutProperties/* default */.Z)(props, _excluded);

  var instanceName = (0,useInstanceName/* default */.Z)(service, rest);
  var reading = (0,useChange/* default */.Z)(service, srv => srv === null || srv === void 0 ? void 0 : srv.readingRegister);
  return /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    spacing: 1,
    alignItems: "center"
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: true
  }, /*#__PURE__*/react.createElement(ServiceRole, {
    service: service
  })), instanceName && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    className: "no-pointer-events",
    variant: "caption",
    component: "span",
    style: {
      float: "right"
    }
  }, instanceName))), /*#__PURE__*/react.createElement(DashboardServiceWidget/* default */.ZP, props), charts && reading && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react.createElement(RegisterTrend/* default */.Z, {
    register: reading,
    mini: false,
    height: 18
  })));
}
// EXTERNAL MODULE: ./src/components/devices/DeviceActions.tsx
var DeviceActions = __webpack_require__(89001);
// EXTERNAL MODULE: ./src/components/devices/useDeviceName.ts
var useDeviceName = __webpack_require__(5738);
;// CONCATENATED MODULE: ./src/components/hooks/useIntersectionObserver.ts

function useIntersectionObserver(elementRef, options) {
  var {
    0: entry,
    1: setEntry
  } = (0,react.useState)();
  var {
    threshold = 0,
    root = null,
    rootMargin = "0%",
    freezeOnceVisible
  } = options || {};
  var frozen = (entry === null || entry === void 0 ? void 0 : entry.isIntersecting) && freezeOnceVisible;

  var updateEntry = _ref => {
    var [entry] = _ref;
    setEntry(entry);
  };

  (0,react.useEffect)(() => {
    var node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current; // DOM Ref

    var hasIOSupport = !!window.IntersectionObserver;
    if (!hasIOSupport || frozen || !node) return;
    var observerParams = {
      threshold,
      root,
      rootMargin
    };
    var observer = new IntersectionObserver(updateEntry, observerParams); //console.log(`observe`, { node })

    observer.observe(node);
    return () => observer.disconnect();
  }, [elementRef, threshold, root, rootMargin, frozen]);
  return entry;
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/eventsource.ts
var eventsource = __webpack_require__(45484);
// EXTERNAL MODULE: ./src/components/hooks/useMediaQueries.tsx
var useMediaQueries = __webpack_require__(20509);
// EXTERNAL MODULE: ./src/components/alert/DeviceLostAlert.tsx
var DeviceLostAlert = __webpack_require__(60145);
// EXTERNAL MODULE: ./node_modules/@mui/material/AlertTitle/AlertTitle.js + 1 modules
var AlertTitle = __webpack_require__(89132);
// EXTERNAL MODULE: ./node_modules/gatsby-theme-material-ui/index.js
var gatsby_theme_material_ui = __webpack_require__(36176);
// EXTERNAL MODULE: ./src/components/ui/Alert.tsx
var Alert = __webpack_require__(95453);
;// CONCATENATED MODULE: ./src/components/alert/DeviceProxyAlert.tsx





function DeviceProxyAlert(props) {
  var {
    device
  } = props;
  var proxy = (0,useChange/* default */.Z)(device, _ => _ === null || _ === void 0 ? void 0 : _.proxy);

  var handleReset = () => device === null || device === void 0 ? void 0 : device.reset();

  return /*#__PURE__*/react.createElement(react.Fragment, null, proxy && /*#__PURE__*/react.createElement(Alert/* default */.Z, {
    severity: "info"
  }, /*#__PURE__*/react.createElement(AlertTitle/* default */.Z, null, "Dongle mode"), "Device transfers Jacdac packets but does not run other code.", /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Button */.zx, {
    style: {
      display: "block"
    },
    title: "reset device",
    variant: "outlined",
    onClick: handleReset
  }, "Reset to Application mode")));
}
// EXTERNAL MODULE: ./src/components/ui/IconButtonWithTooltip.tsx + 1 modules
var IconButtonWithTooltip = __webpack_require__(71973);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/BarChart.js
var BarChart = __webpack_require__(81098);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var spec = __webpack_require__(26799);
;// CONCATENATED MODULE: ./src/components/dashboard/DashboardDevice.tsx




 // tslint:disable-next-line: no-submodule-imports match-default-export-name
// tslint:disable-next-line: no-submodule-imports match-default-export-name














var ignoredServices = [constants/* SRV_CONTROL */.gm9, constants/* SRV_LOGGER */.w9j, constants/* SRV_SETTINGS */.B9b, constants/* SRV_PROTO_TEST */.$Bn, constants/* SRV_PROXY */.Ahc, constants/* SRV_UNIQUE_BRAIN */.U9t];
function DashboardDevice(props) {
  var {
    device,
    serviceFilter,
    variant,
    showAvatar,
    showHeader,
    charts,
    setCharts
  } = props;
  var {
    xs: mobile
  } = (0,useMediaQueries/* default */.Z)();
  var name = (0,useDeviceName/* default */.Z)(device);
  var specification = (0,useDeviceSpecification/* default */.Z)(device);
  var services = (0,useChange/* default */.Z)(device, _ => _ === null || _ === void 0 ? void 0 : _.services({
    specification: true
  }).filter(service => ignoredServices.indexOf(service.serviceClass) < 0 && !service.isMixin && (!serviceFilter || serviceFilter(service))));
  var sensors = services.filter(srv => (0,spec/* isSensor */.rq)(srv.specification));
  var showChart = !!setCharts && !!sensors.length;

  var handleChartChanged = () => setCharts(!charts); // refresh when visible


  var serviceGridRef = (0,react.useRef)();
  var intersection = useIntersectionObserver(serviceGridRef);
  var visible = !!(intersection !== null && intersection !== void 0 && intersection.isIntersecting);
  var ServiceWidgets = (0,react.useCallback)(() => /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    ref: serviceGridRef,
    component: "div",
    container: true,
    spacing: 2,
    justifyContent: "center",
    alignItems: "flex-end",
    alignContent: "space-between"
  }, services === null || services === void 0 ? void 0 : services.map(service => /*#__PURE__*/react.createElement(DashboardServiceWidgetItem, {
    key: service.id,
    service: service,
    services: services,
    variant: variant,
    visible: visible,
    charts: charts
  }))), [(0,eventsource/* dependencyId */.BX)(services), variant, visible, charts]);
  if (!showHeader) return /*#__PURE__*/react.createElement(Paper/* default */.Z, {
    style: {
      padding: "0.25em"
    },
    variant: "outlined"
  }, /*#__PURE__*/react.createElement(ServiceWidgets, null));
  return /*#__PURE__*/react.createElement(Card/* default */.Z, {
    "aria-live": "polite",
    "aria-label": "device " + name + " started"
  }, /*#__PURE__*/react.createElement(CardHeader/* default */.Z, {
    style: {
      paddingBottom: 0
    },
    avatar: showAvatar && /*#__PURE__*/react.createElement(DeviceAvatar/* default */.Z, {
      device: device
    }),
    action: /*#__PURE__*/react.createElement(DeviceActions/* default */.Z, {
      device: device,
      showStop: true,
      hideIdentity: true,
      showReset: false,
      showSettings: false
    }, showChart && /*#__PURE__*/react.createElement(IconButtonWithTooltip/* default */.Z, {
      title: charts ? "chart visible" : "chart hidden",
      onClick: handleChartChanged
    }, /*#__PURE__*/react.createElement(BarChart/* default */.Z, null))),
    title: /*#__PURE__*/react.createElement(DeviceName/* default */.Z, {
      showShortId: false,
      device: device
    }),
    subheader: /*#__PURE__*/react.createElement(react.Fragment, null, !mobile && specification && /*#__PURE__*/react.createElement(Typography/* default */.Z, {
      variant: "caption",
      gutterBottom: true
    }, specification.name))
  }), /*#__PURE__*/react.createElement(CardContent/* default */.Z, {
    style: {
      paddingTop: 0
    }
  }, /*#__PURE__*/react.createElement(DeviceLostAlert/* DeviceLostAlert */.M, {
    device: device
  }), /*#__PURE__*/react.createElement(DeviceProxyAlert, {
    device: device
  }), /*#__PURE__*/react.createElement(ServiceWidgets, null)));
}

/***/ }),

/***/ 34941:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "o2": function() { return /* binding */ dashboardServiceWeight; },
  "ZP": function() { return /* binding */ DashboardServiceWidget; },
  "iW": function() { return /* binding */ hasServiceView; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(45987);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var spec = __webpack_require__(26799);
// EXTERNAL MODULE: ./src/components/RegisterInput.tsx + 2 modules
var RegisterInput = __webpack_require__(24162);
// EXTERNAL MODULE: ./src/jacdac/useRegisterValue.ts
var useRegisterValue = __webpack_require__(89196);
// EXTERNAL MODULE: ./node_modules/@mui/base/NoSsr/NoSsr.js
var NoSsr = __webpack_require__(5061);
// EXTERNAL MODULE: ./node_modules/@mui/material/CircularProgress/CircularProgress.js + 1 modules
var CircularProgress = __webpack_require__(82374);
// EXTERNAL MODULE: ./src/components/widgets/ButtonWidget.tsx
var ButtonWidget = __webpack_require__(43746);
// EXTERNAL MODULE: ./src/components/hooks/useServiceServer.ts
var useServiceServer = __webpack_require__(49013);
// EXTERNAL MODULE: ./src/components/widgets/SvgWidget.tsx
var SvgWidget = __webpack_require__(48059);
// EXTERNAL MODULE: ./src/components/hooks/useSvgButtonProps.ts
var useSvgButtonProps = __webpack_require__(30833);
// EXTERNAL MODULE: ./src/components/widgets/useWidgetTheme.ts
var useWidgetTheme = __webpack_require__(60650);
// EXTERNAL MODULE: ./src/components/widgets/svgutils.ts
var svgutils = __webpack_require__(92526);
// EXTERNAL MODULE: ./src/components/hooks/useAnimationFrame.ts
var useAnimationFrame = __webpack_require__(17368);
// EXTERNAL MODULE: ./src/components/hooks/useRegister.ts
var useRegister = __webpack_require__(82677);
// EXTERNAL MODULE: ./src/components/hooks/useEvent.ts
var useEvent = __webpack_require__(59626);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./src/components/widgets/OptionalTooltip.tsx
var OptionalTooltip = __webpack_require__(40062);
;// CONCATENATED MODULE: ./src/components/dashboard/DashboardButton.tsx














function DashboardButton(props) {
  var {
    service
  } = props;
  var {
    0: pressed,
    1: setPressed
  } = (0,react.useState)(false);
  var analogRegister = (0,useRegister/* default */.Z)(service, constants/* ButtonReg.Analog */.CP7.Analog);
  var analog = (0,useRegisterValue/* useRegisterBoolValue */.I8)(analogRegister); // don't track reading, use events only

  var downEvent = (0,useEvent/* default */.Z)(service, constants/* ButtonEvent.Down */.XKP.Down);
  var upEvent = (0,useEvent/* default */.Z)(service, constants/* ButtonEvent.Up */.XKP.Up);
  (0,react.useEffect)(() => downEvent.subscribe(constants/* EVENT */.Ks0, () => setPressed(true)), [downEvent]);
  (0,react.useEffect)(() => upEvent.subscribe(constants/* EVENT */.Ks0, () => setPressed(false)), [upEvent]);
  if (!analog) return /*#__PURE__*/react.createElement(BinaryButton, Object.assign({}, props, {
    pressed: pressed
  }));else return /*#__PURE__*/react.createElement(AnalogButton, Object.assign({}, props, {
    pressed: pressed
  }));
}

function BinaryButton(props) {
  var {
    service,
    pressed
  } = props;
  var server = (0,useServiceServer/* default */.Z)(service);
  var color = server ? "secondary" : "primary";
  var label = "button " + (pressed ? "down" : "up");

  var handleDown = () => server === null || server === void 0 ? void 0 : server.down();

  var handleUp = () => server === null || server === void 0 ? void 0 : server.up();

  var widgetSize = "clamp(3rem, 10vw, 10vh)";
  return /*#__PURE__*/react.createElement(OptionalTooltip/* default */.Z, {
    title: !server ? "Use the physical button!" : undefined
  }, /*#__PURE__*/react.createElement(ButtonWidget/* default */.Z, {
    checked: !!pressed,
    color: color,
    onDown: server ? handleDown : undefined,
    onUp: server ? handleUp : undefined,
    label: label,
    size: widgetSize
  }));
}

var ACTIVE_SPEED = 0.05;
var INACTIVE_SPEED = 0.1;
var LABEL_PRECISION = 2;

function AnalogButton(props) {
  var {
    service,
    pressed,
    visible
  } = props;
  var {
    mixins
  } = service;
  var pressureRegister = (0,useRegister/* default */.Z)(service, constants/* ButtonReg.Pressure */.CP7.Pressure);
  var [pressure] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(pressureRegister, {
    visible
  }); // find threshold if any

  var thresholdRegister = (0,react.useMemo)(() => {
    var _mixins$find;

    return (_mixins$find = mixins.find(cfg => !!cfg.register(constants/* SystemReg.ActiveThreshold */.ZJq.ActiveThreshold))) === null || _mixins$find === void 0 ? void 0 : _mixins$find.register(constants/* SystemReg.ActiveThreshold */.ZJq.ActiveThreshold);
  }, [service]);
  var [threshold] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(thresholdRegister, {
    visible
  });
  var widgetSize = "clamp(3rem, 10vw, 10vh)";
  var server = (0,useServiceServer/* default */.Z)(service);
  var color = server ? "secondary" : "primary";
  var label = "button pressure " + (0,utils/* roundWithPrecision */.JI)(pressure, LABEL_PRECISION);
  var {
    background,
    controlBackground,
    active
  } = (0,useWidgetTheme/* default */.Z)(color);
  var {
    0: down,
    1: setDown
  } = (0,react.useState)(false);

  var handleDown = () => {
    setDown(true);
  };

  var handleUp = () => {
    setDown(false);
  };

  var buttonProps = (0,useSvgButtonProps/* default */.Z)(label, server && handleDown, server && handleUp);
  (0,useAnimationFrame/* default */.Z)(() => {
    if (!server) return false;
    var [p] = server.reading.values();
    var keepAnimating = true;

    if (down) {
      if (p > 1 - ACTIVE_SPEED) {
        server.reading.setValues([1]);
        keepAnimating = false;
      } else server.reading.setValues([p + ACTIVE_SPEED]);
    } else {
      if (p < INACTIVE_SPEED) {
        server.reading.setValues([0]);
        keepAnimating = false;
      } else server.reading.setValues([p - INACTIVE_SPEED]);
    }

    server.reading.sendGetAsync(); // refresh ui

    return keepAnimating;
  }, [down]);
  var w = 64;
  var mo = pressed ? 3 : 5;
  var r = w / 2;
  var cx = r;
  var cy = r;
  var rp = r - mo;
  var ri = rp - mo;
  var ps = mo;
  var range = 360;
  /*
      {buttonVariant === AnalogButtonVariant.Capacitive && <path transform={`translate(20,20)`} aria-hidden={true}
          pointerEvents="none"
          style={{ userSelect: "none" }}
          fill={background}
          d="M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z"></path>}
          */

  return /*#__PURE__*/react.createElement(SvgWidget/* default */.Z, {
    width: w,
    size: widgetSize
  }, /*#__PURE__*/react.createElement("rect", {
    x: 0,
    y: 0,
    rx: 2,
    ry: 2,
    width: w,
    height: w,
    fill: background
  }), pressure && /*#__PURE__*/react.createElement("path", {
    d: (0,svgutils/* describeArc */.x8)(cx, cy, rp, 0, pressure * range),
    stroke: active,
    strokeLinecap: "round",
    strokeWidth: ps
  }), threshold !== undefined && /*#__PURE__*/react.createElement("circle", {
    cx: cx,
    cy: mo,
    r: mo / 3,
    "aria-label": "active threshold " + (0,utils/* roundWithPrecision */.JI)(threshold, LABEL_PRECISION),
    fill: controlBackground,
    transform: "rotate(" + range * threshold + ", " + cx + ", " + cy + ")"
  }), /*#__PURE__*/react.createElement("circle", Object.assign({
    cx: cx,
    cy: cy,
    r: ri,
    fill: pressed ? active : controlBackground
  }, buttonProps)));
}
// EXTERNAL MODULE: ./node_modules/@mui/material/Grid/Grid.js + 2 modules
var Grid = __webpack_require__(4320);
// EXTERNAL MODULE: ./node_modules/@mui/material/Slider/Slider.js + 4 modules
var Slider = __webpack_require__(879);
// EXTERNAL MODULE: ./src/components/hooks/useThrottledValue.ts
var useThrottledValue = __webpack_require__(72901);
;// CONCATENATED MODULE: ./src/components/dashboard/DashboardRotaryEncoder.tsx










function DashboardRotaryEncoder(props) {
  var {
    service
  } = props;
  var positionRegister = (0,useRegister/* default */.Z)(service, constants/* RotaryEncoderReg.Position */.$v5.Position);
  var [position = 0] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(positionRegister, props);
  var clicksPerTurnRegister = (0,useRegister/* default */.Z)(service, constants/* RotaryEncoderReg.ClicksPerTurn */.$v5.ClicksPerTurn);
  var [clicksPerTurn = 12] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(clicksPerTurnRegister, props);
  var server = (0,useServiceServer/* default */.Z)(service);
  var color = server ? "secondary" : "primary";
  var {
    background,
    controlBackground,
    active,
    textProps
  } = (0,useWidgetTheme/* default */.Z)(color);
  var label = "" + position;
  var widgetSize = "clamp(6rem, 15vw, 15vh)";
  var w = 37.794;
  var r = 0.06;
  var fs = Math.max(0.2, 0.5 - label.length * 0.1);

  var handleChange = /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* (ev, newValue) {
      server === null || server === void 0 ? void 0 : server.reading.setValues([newValue]);
      positionRegister.refresh();
      clicksPerTurnRegister.refresh();
    });

    return function handleChange(_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();

  var throttled = (0,useThrottledValue/* default */.Z)(position, clicksPerTurn, 1.5);
  var angle = throttled / clicksPerTurn * 360;
  var range = Math.abs(Math.round(position / clicksPerTurn));
  var min = (-range - 1) * clicksPerTurn;
  var max = (range + 1) * clicksPerTurn;
  var marks = [{
    value: 0
  }];
  return /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    direction: "column"
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(SvgWidget/* default */.Z, {
    title: "rotary encoder at position " + position,
    size: widgetSize,
    width: w,
    height: w,
    viewBox: "0 0 1 1"
  }, /*#__PURE__*/react.createElement("g", {
    transform: "rotate(" + angle + ", 0.5, 0.5)"
  }, /*#__PURE__*/react.createElement("path", {
    fill: background,
    d: "M.67.029a.037.037 0 01-.072-.02A.5.5 0 00.538 0a.037.037 0 01-.075 0 .5.5 0 00-.061.008.038.038 0 01-.073.02.5.5 0 00-.056.025.037.037 0 01-.064.04A.5.5 0 00.16.13.037.037 0 01.11.186a.5.5 0 00-.035.05.037.037 0 01-.035.066.5.5 0 00-.02.058.037.037 0 01-.016.074A.5.5 0 000 .495.037.037 0 01.005.57a.5.5 0 00.013.06.038.038 0 01.025.07.5.5 0 00.028.056.037.037 0 01.043.06.5.5 0 00.042.046.037.037 0 01.058.047.5.5 0 00.053.032.037.037 0 01.069.03.5.5 0 00.059.016.037.037 0 01.074.01.5.5 0 00.062 0 .037.037 0 01.074-.01.5.5 0 00.06-.016.037.037 0 01.068-.03.5.5 0 00.053-.032.037.037 0 01.058-.047.5.5 0 00.042-.045.037.037 0 01.043-.061A.5.5 0 00.957.7.037.037 0 01.982.63.5.5 0 00.995.57.037.037 0 011 .495.5.5 0 00.996.434.038.038 0 01.98.36.5.5 0 00.96.302.037.037 0 01.925.236.5.5 0 00.89.186.037.037 0 01.839.13.5.5 0 00.79.092.037.037 0 01.727.053.5.5 0 00.671.03z"
  }), /*#__PURE__*/react.createElement("path", {
    fill: controlBackground,
    d: "M.1.499a.4.4 0 10.8 0 .4.4 0 10-.8 0z"
  }), /*#__PURE__*/react.createElement("circle", {
    cx: 0.5,
    cy: 0.19,
    r: r,
    fill: active
  })), /*#__PURE__*/react.createElement("text", Object.assign({
    x: 0.5,
    y: 0.5,
    fontSize: fs
  }, textProps), label))), server && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Slider/* default */.ZP, {
    color: color,
    min: min,
    max: max,
    step: 1,
    value: position,
    valueLabelDisplay: "off",
    onChange: handleChange,
    marks: marks
  })));
}
// EXTERNAL MODULE: ./node_modules/@mui/material/Switch/Switch.js + 1 modules
var Switch = __webpack_require__(94548);
// EXTERNAL MODULE: ./node_modules/react-use-id-hook/dist/react-use-id-hook.esm.js
var react_use_id_hook_esm = __webpack_require__(19640);
// EXTERNAL MODULE: ./src/components/ui/LoadingProgress.tsx
var LoadingProgress = __webpack_require__(2285);
;// CONCATENATED MODULE: ./src/components/dashboard/DashboardSwitch.tsx









function DashboardSwitch(props) {
  var {
    service
  } = props;
  var labelId = (0,react_use_id_hook_esm/* useId */.Me)();
  var activeRegister = (0,useRegister/* default */.Z)(service, constants/* SwitchReg.Active */.FNv.Active);
  var variantRegister = (0,useRegister/* default */.Z)(service, constants/* SwitchReg.Variant */.FNv.Variant);
  var on = (0,useRegisterValue/* useRegisterBoolValue */.I8)(activeRegister, props);
  var [switchVariant] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(variantRegister, props);
  var server = (0,useServiceServer/* default */.Z)(service);
  var color = server ? "secondary" : "primary";
  var widgetSize = "clamp(5em, 25vw, 100%)";

  var handleToggle = () => {
    var _server$toggle;

    return server === null || server === void 0 ? void 0 : (_server$toggle = server.toggle) === null || _server$toggle === void 0 ? void 0 : _server$toggle.call(server);
  };

  if (on === undefined) return /*#__PURE__*/react.createElement(LoadingProgress/* default */.Z, null);

  switch (switchVariant) {
    case constants/* SwitchVariant.PushButton */.fhu.PushButton:
      return /*#__PURE__*/react.createElement(ButtonWidget/* default */.Z, {
        checked: on,
        color: color,
        label: on ? "on" : "off",
        onDown: server && handleToggle,
        size: widgetSize
      });

    default:
      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Switch/* default */.Z, {
        "aria-labelledby": labelId,
        color: color,
        checked: on,
        onChange: server && handleToggle
      }), /*#__PURE__*/react.createElement("label", {
        id: labelId
      }, on ? "on" : "off"));
  }
}
;// CONCATENATED MODULE: ./src/components/dashboard/DashboardServiceWidget.tsx


var _excluded = ["valueRegister", "intensityRegister"],
    _excluded2 = ["intensityRegister"];





 // bundled





 // lazy devices

var DashboardServo = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(3291)]).then(__webpack_require__.bind(__webpack_require__, 93291)));
var DashboardAccelerometer = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(7470)]).then(__webpack_require__.bind(__webpack_require__, 67470)));
var DashboardBuzzer = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 1171).then(__webpack_require__.bind(__webpack_require__, 51171)));
var DashboardLEDPixel = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 5403).then(__webpack_require__.bind(__webpack_require__, 15403)));
var DashboardRoleManager = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(571)]).then(__webpack_require__.bind(__webpack_require__, 20571)));
var DashboardTrafficLight = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 8847).then(__webpack_require__.bind(__webpack_require__, 18847)));
var DashboardCharacterScreen = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(7787)]).then(__webpack_require__.bind(__webpack_require__, 7787)));
var DashboardBrailleDisplay = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(3717)]).then(__webpack_require__.bind(__webpack_require__, 43717)));
var DashboardRainGauge = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 6214).then(__webpack_require__.bind(__webpack_require__, 46214)));
var DashboardDotMatrix = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(3695)]).then(__webpack_require__.bind(__webpack_require__, 40591)));
var DashboardWindDirection = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 6902).then(__webpack_require__.bind(__webpack_require__, 26902)));
var DashboardMatrixKeypad = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 7859).then(__webpack_require__.bind(__webpack_require__, 7859)));
var DashboardReflectedLight = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 5149).then(__webpack_require__.bind(__webpack_require__, 65149)));
var DashboardPower = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 1576).then(__webpack_require__.bind(__webpack_require__, 21576)));
var DashboardSpeechSynthesis = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 3887).then(__webpack_require__.bind(__webpack_require__, 83887)));
var DashboardSoilMoisture = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 2459).then(__webpack_require__.bind(__webpack_require__, 72459)));
var DashboardRealTimeClock = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 360).then(__webpack_require__.bind(__webpack_require__, 80360)));
var DashboardLED = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(8282)]).then(__webpack_require__.bind(__webpack_require__, 68282)));
var DashboardJoystick = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 7809).then(__webpack_require__.bind(__webpack_require__, 77809)));
var DashboardSevenSegmentDisplay = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 353).then(__webpack_require__.bind(__webpack_require__, 50353)));
var DashboardMotion = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 6861).then(__webpack_require__.bind(__webpack_require__, 66861)));
var DashboardWaterLevel = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 193).then(__webpack_require__.bind(__webpack_require__, 40193)));
var DashboardColor = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 1253).then(__webpack_require__.bind(__webpack_require__, 81253)));
var DashboardSoundPlayer = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 9082).then(__webpack_require__.bind(__webpack_require__, 59082)));
var DashboardSoundLevel = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(2921)]).then(__webpack_require__.bind(__webpack_require__, 82921)));
var DashboardSoundSpectrum = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(4666)]).then(__webpack_require__.bind(__webpack_require__, 24666)));
var DashboardRandomNumberGenerator = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 9989).then(__webpack_require__.bind(__webpack_require__, 29989)));
var DashboardCompass = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 1025).then(__webpack_require__.bind(__webpack_require__, 51025)));
var DashboardGyroscope = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(3737), __webpack_require__.e(317), __webpack_require__.e(5754)]).then(__webpack_require__.bind(__webpack_require__, 95754)));
var DashboardSolenoid = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 3356).then(__webpack_require__.bind(__webpack_require__, 73356)));
var DashboardBitRadio = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 8743).then(__webpack_require__.bind(__webpack_require__, 58743)));
var DashboardHIDKeyboard = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(532), __webpack_require__.e(7919), __webpack_require__.e(5969)]).then(__webpack_require__.bind(__webpack_require__, 25969)));
var DashboardHIDMouse = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 5233).then(__webpack_require__.bind(__webpack_require__, 45233))); //const DashboardAzureIoTHub = lazy(() => import("./DashboardAzureIoTHub"))

var DashboardAzureIoTHubHealth = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(1931)]).then(__webpack_require__.bind(__webpack_require__, 31931)));
var DashboardWifi = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(7767)]).then(__webpack_require__.bind(__webpack_require__, 67767)));
var DashboardVibrationMotor = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 2439).then(__webpack_require__.bind(__webpack_require__, 62439)));
var DashboardCODALMessageBus = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 171).then(__webpack_require__.bind(__webpack_require__, 30171)));
var DashboardRelay = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 5726).then(__webpack_require__.bind(__webpack_require__, 85726)));
var DashboardLightBulb = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 876).then(__webpack_require__.bind(__webpack_require__, 40876)));
var serviceViews = {
  [constants/* SRV_ROLE_MANAGER */.igi]: {
    component: DashboardRoleManager,
    weight: () => 2
  },
  [constants/* SRV_BUZZER */.J1$]: {
    component: DashboardBuzzer,
    weight: () => 6
  },
  [constants/* SRV_LED_PIXEL */.zEX]: {
    component: DashboardLEDPixel,
    weight: () => 3
  },
  [constants/* SRV_ACCELEROMETER */.QF7]: {
    component: DashboardAccelerometer,
    weight: () => 3
  },
  [constants/* SRV_ROTARY_ENCODER */.lNp]: {
    component: DashboardRotaryEncoder,
    bundled: true,
    weight: () => 2
  },
  [constants/* SRV_BUTTON */.XJR]: {
    component: DashboardButton,
    bundled: true
  },
  [constants/* SRV_SERVO */.$X_]: {
    component: DashboardServo
  },
  [constants/* SRV_SWITCH */.Crg]: {
    component: DashboardSwitch,
    bundled: true
  },
  [constants/* SRV_TRAFFIC_LIGHT */.jHN]: {
    component: DashboardTrafficLight
  },
  [constants/* SRV_CHARACTER_SCREEN */.IB4]: {
    component: DashboardCharacterScreen,
    weight: () => 3
  },
  [constants/* SRV_BRAILLE_DISPLAY */.IvW]: {
    component: DashboardBrailleDisplay,
    weight: () => 3
  },
  [constants/* SRV_RAIN_GAUGE */.NnQ]: {
    component: DashboardRainGauge
  },
  [constants/* SRV_DOT_MATRIX */.GDq]: {
    component: DashboardDotMatrix,
    weight: () => 3
  },
  [constants/* SRV_WIND_DIRECTION */.M$m]: {
    component: DashboardWindDirection
  },
  [constants/* SRV_MATRIX_KEYPAD */.UB9]: {
    component: DashboardMatrixKeypad
  },
  [constants/* SRV_REFLECTED_LIGHT */.tky]: {
    component: DashboardReflectedLight
  },
  [constants/* SRV_POWER */.mQG]: {
    component: DashboardPower
  },
  [constants/* SRV_SPEECH_SYNTHESIS */.ydR]: {
    component: DashboardSpeechSynthesis
  },
  [constants/* SRV_SOIL_MOISTURE */.Bj3]: {
    component: DashboardSoilMoisture
  },
  [constants/* SRV_REAL_TIME_CLOCK */.XXX]: {
    component: DashboardRealTimeClock
  },
  [constants/* SRV_LED */.i04]: {
    component: DashboardLED
  },
  [constants/* SRV_JOYSTICK */.vRO]: {
    component: DashboardJoystick,
    weight: () => 3
  },
  [constants/* SRV_SEVEN_SEGMENT_DISPLAY */.hvg]: {
    component: DashboardSevenSegmentDisplay
  },
  [constants/* SRV_MOTION */.yRl]: {
    component: DashboardMotion
  },
  [constants/* SRV_WATER_LEVEL */.Szz]: {
    component: DashboardWaterLevel
  },
  [constants/* SRV_COLOR */.Coy]: {
    component: DashboardColor,
    weight: () => 2
  },
  [constants/* SRV_SOUND_PLAYER */.OrM]: {
    component: DashboardSoundPlayer,
    weight: () => 2
  },
  [constants/* SRV_SOUND_LEVEL */.GvX]: {
    component: DashboardSoundLevel,
    weight: () => 2
  },
  [constants/* SRV_RNG */.NMZ]: {
    component: DashboardRandomNumberGenerator
  },
  [constants/* SRV_COMPASS */.JTB]: {
    component: DashboardCompass
  },
  [constants/* SRV_GYROSCOPE */.R0$]: {
    component: DashboardGyroscope,
    weight: () => 3
  },
  [constants/* SRV_SOUND_SPECTRUM */.vsp]: {
    component: DashboardSoundSpectrum,
    weight: () => 2
  },
  [constants/* SRV_SOLENOID */.b68]: {
    component: DashboardSolenoid
  },
  [constants/* SRV_BIT_RADIO */.BYF]: {
    component: DashboardBitRadio,
    weight: () => 4
  },
  [constants/* SRV_HID_KEYBOARD */.Hg9]: {
    component: DashboardHIDKeyboard,
    weight: () => 4
  },
  [constants/* SRV_HID_MOUSE */.Eef]: {
    component: DashboardHIDMouse,
    weight: () => 2
  },

  /*
  [SRV_AZURE_IOT_HUB]: {
      component: DashboardAzureIoTHub,
      weight: () => 3,
  },
  */
  [constants/* SRV_AZURE_IOT_HUB_HEALTH */.tOR]: {
    component: DashboardAzureIoTHubHealth,
    weight: () => 2
  },
  [constants/* SRV_WIFI */.zti]: {
    component: DashboardWifi,
    weight: () => 4
  },
  [constants/* SRV_VIBRATION_MOTOR */.X8d]: {
    component: DashboardVibrationMotor,
    weight: () => 3
  },
  [constants/* SRV_CODAL_MESSAGE_BUS */.$6j]: {
    component: DashboardCODALMessageBus,
    weight: () => 2
  },
  [constants/* SRV_RELAY */.E4D]: {
    component: DashboardRelay
  },
  [constants/* SRV_LIGHT_BULB */.yWt]: {
    component: DashboardLightBulb
  }
};
var collapsedRegisters = [constants/* SystemReg.Reading */.ZJq.Reading, constants/* SystemReg.Value */.ZJq.Value, constants/* SystemReg.Intensity */.ZJq.Intensity];

function ValueWidget(props) {
  var _intensityRegister$sp, _intensityRegister$sp2;

  var {
    valueRegister,
    intensityRegister
  } = props,
      others = (0,objectWithoutProperties/* default */.Z)(props, _excluded);

  var {
    visible
  } = others;
  var hasIntensityBool = (intensityRegister === null || intensityRegister === void 0 ? void 0 : (_intensityRegister$sp = intensityRegister.specification) === null || _intensityRegister$sp === void 0 ? void 0 : (_intensityRegister$sp2 = _intensityRegister$sp.fields[0]) === null || _intensityRegister$sp2 === void 0 ? void 0 : _intensityRegister$sp2.type) === "bool";
  var intensity = (0,useRegisterValue/* useRegisterBoolValue */.I8)(hasIntensityBool && intensityRegister, others);
  var off = hasIntensityBool ? !intensity : undefined;

  var toggleOff = /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* () {
      yield intensityRegister.sendSetBoolAsync(off, true);
    });

    return function toggleOff() {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react.createElement(RegisterInput/* default */.Z, {
    register: valueRegister,
    variant: "widget",
    showServiceName: false,
    showRegisterName: false,
    hideMissingValues: true,
    off: off,
    toggleOff: hasIntensityBool ? toggleOff : undefined,
    visible: visible
  });
}

function IntensityWidget(props) {
  var _intensityRegister$sp3, _intensityRegister$sp4;

  var {
    intensityRegister
  } = props,
      others = (0,objectWithoutProperties/* default */.Z)(props, _excluded2);

  var {
    visible
  } = others;
  var hasIntensityBool = (intensityRegister === null || intensityRegister === void 0 ? void 0 : (_intensityRegister$sp3 = intensityRegister.specification) === null || _intensityRegister$sp3 === void 0 ? void 0 : (_intensityRegister$sp4 = _intensityRegister$sp3.fields[0]) === null || _intensityRegister$sp4 === void 0 ? void 0 : _intensityRegister$sp4.type) === "bool";
  var [intensity] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(intensityRegister, others);
  var off = hasIntensityBool ? !intensity : undefined;
  return /*#__PURE__*/react.createElement(RegisterInput/* default */.Z, {
    register: intensityRegister,
    variant: "widget",
    showServiceName: false,
    showRegisterName: false,
    hideMissingValues: true,
    off: off,
    visible: visible
  });
}

function DefaultWidget(props) {
  var {
    service,
    visible
  } = props;
  var {
    specification
  } = service;
  var register = (0,react.useMemo)(() => {
    var rspec = specification === null || specification === void 0 ? void 0 : specification.packets.find(pkt => (0,spec/* isRegister */.x5)(pkt) && collapsedRegisters.indexOf(pkt.identifier) > -1);
    return service.register(rspec === null || rspec === void 0 ? void 0 : rspec.identifier);
  }, [service]);
  if (!register) // nothing to see here
    return null; // if register is value, disable if enabled is 0.

  if (register.specification.identifier == constants/* SystemReg.Value */.ZJq.Value) {
    var intensityRegister = (0,useRegister/* default */.Z)(register.service, constants/* SystemReg.Intensity */.ZJq.Intensity);
    return /*#__PURE__*/react.createElement(ValueWidget, Object.assign({
      valueRegister: register,
      intensityRegister: intensityRegister
    }, props));
  } // case of no streaming,value just intensity, like a relay


  if (register.specification.identifier === constants/* SystemReg.Intensity */.ZJq.Intensity) return /*#__PURE__*/react.createElement(IntensityWidget, Object.assign({
    intensityRegister: register
  }, props));
  return /*#__PURE__*/react.createElement(RegisterInput/* default */.Z, {
    register: register,
    variant: "widget",
    showServiceName: false,
    showRegisterName: false,
    hideMissingValues: true,
    visible: visible
  });
}

function hasServiceView(serviceClass) {
  return !!serviceViews[serviceClass];
}
function DashboardServiceWidget(props) {
  var {
    service
  } = props;
  var {
    specification
  } = service;
  var {
    component,
    bundled
  } = serviceViews[specification.classIdentifier] || {};
  var server = (0,useServiceServer/* default */.Z)(service);
  var color = server ? "secondary" : "primary"; // no special support

  if (!component) return /*#__PURE__*/(0,react.createElement)(DefaultWidget, props); // precompiled

  if (bundled) return /*#__PURE__*/(0,react.createElement)(component, props); // lazy loading

  return /*#__PURE__*/react.createElement(NoSsr/* default */.Z, null, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(CircularProgress/* default */.Z, {
      color: color,
      disableShrink: true,
      variant: "indeterminate",
      size: "3em"
    })
  }, /*#__PURE__*/(0,react.createElement)(component, props)));
}
function dashboardServiceWeight(service) {
  var _view$weight;

  var view = serviceViews[service.serviceClass];
  return view === null || view === void 0 ? void 0 : (_view$weight = view.weight) === null || _view$weight === void 0 ? void 0 : _view$weight.call(view, service);
}

/***/ }),

/***/ 89001:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ DeviceActions; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(15861);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_icons_material_Fingerprint__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(21860);
/* harmony import */ var _mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(80766);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20392);
/* harmony import */ var _CmdButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50092);
/* harmony import */ var _hooks_useServiceProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63793);
/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35902);
/* harmony import */ var _mui_icons_material_Settings__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(64726);
/* harmony import */ var _jacdac_ts_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73512);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(54774);
/* harmony import */ var gatsby_link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(38037);
/* harmony import */ var _HostedSimulatorsContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43830);


// tslint:disable-next-line: no-submodule-imports match-default-export-name
 // tslint:disable-next-line: no-submodule-imports match-default-export-name











function DeviceActions(props) {
  var {
    device,
    showSettings,
    showReset,
    children,
    hideIdentity,
    showStop
  } = props;
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var {
    removeHostedSimulator,
    isHostedSimulator
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_HostedSimulatorsContext__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP);
  var {
    deviceId
  } = device;
  var provider = (0,_hooks_useServiceProvider__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(device);
  var settings = (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(device, _ => {
    var _$services;

    return (_$services = _.services({
      serviceClass: _jacdac_ts_jacdac_spec_dist_specconstants__WEBPACK_IMPORTED_MODULE_4__/* .SRV_SETTINGS */ .B9b
    })) === null || _$services === void 0 ? void 0 : _$services[0];
  });

  var handleIdentify = /*#__PURE__*/function () {
    var _ref = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* () {
      return yield device.identify();
    });

    return function handleIdentify() {
      return _ref.apply(this, arguments);
    };
  }();

  var handleReset = /*#__PURE__*/function () {
    var _ref2 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* () {
      return yield device.reset();
    });

    return function handleReset() {
      return _ref2.apply(this, arguments);
    };
  }();

  var handleStop = /*#__PURE__*/function () {
    var _ref3 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* () {
      removeHostedSimulator(deviceId);
      bus.removeServiceProvider(provider);
      bus.removeDevice(deviceId);
    });

    return function handleStop() {
      return _ref3.apply(this, arguments);
    };
  }();

  var handleSettings = /*#__PURE__*/function () {
    var _ref4 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(function* () {
      (0,gatsby_link__WEBPACK_IMPORTED_MODULE_6__/* .navigate */ .c4)("/tools/settings");
    });

    return function handleSettings() {
      return _ref4.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children, showStop && (provider || isHostedSimulator(deviceId)) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CmdButton__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    trackName: "device.stop",
    size: "small",
    title: "stop simulator",
    onClick: handleStop,
    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, null)
  }), !hideIdentity && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CmdButton__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    trackName: "device.identify",
    size: "small",
    title: "identify",
    onClick: handleIdentify,
    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Fingerprint__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, null)
  }), showSettings && settings && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CmdButton__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    trackName: "device.settings",
    size: "small",
    title: "settings",
    onClick: handleSettings,
    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Settings__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, null)
  }), showReset && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CmdButton__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    trackName: "device.reset",
    size: "small",
    title: "reset",
    onClick: handleReset,
    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, null)
  }));
}

/***/ }),

/***/ 64178:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ DeviceAvatar; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./src/components/CmdButton.tsx
var CmdButton = __webpack_require__(50092);
// EXTERNAL MODULE: ./src/components/hooks/useServiceProvider.ts
var useServiceProvider = __webpack_require__(63793);
// EXTERNAL MODULE: ./src/components/devices/useDeviceName.ts
var useDeviceName = __webpack_require__(5738);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./src/jacdac/useChange.ts
var useChange = __webpack_require__(54774);
// EXTERNAL MODULE: ./node_modules/@mui/material/Dialog/Dialog.js + 1 modules
var Dialog = __webpack_require__(61359);
// EXTERNAL MODULE: ./node_modules/@mui/material/DialogContent/DialogContent.js + 1 modules
var DialogContent = __webpack_require__(86763);
// EXTERNAL MODULE: ./node_modules/@mui/material/Grid/Grid.js + 2 modules
var Grid = __webpack_require__(4320);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/dist/specconstants.ts
var specconstants = __webpack_require__(73512);
// EXTERNAL MODULE: ./src/jacdac/useDeviceSpecification.ts + 1 modules
var useDeviceSpecification = __webpack_require__(34246);
// EXTERNAL MODULE: ./src/components/devices/DeviceName.tsx
var DeviceName = __webpack_require__(26390);
// EXTERNAL MODULE: ./src/components/devices/useDeviceImage.ts
var useDeviceImage = __webpack_require__(81546);
// EXTERNAL MODULE: ./src/components/hooks/useInterval.ts
var useInterval = __webpack_require__(63944);
// EXTERNAL MODULE: ./src/components/ui/Alert.tsx
var Alert = __webpack_require__(95453);
// EXTERNAL MODULE: ./src/components/ui/DialogTitleWithClose.tsx + 1 modules
var DialogTitleWithClose = __webpack_require__(54266);
;// CONCATENATED MODULE: ./src/components/dialogs/IdentifyDialog.tsx











function LazyDeviceImage(props) {
  var {
    device
  } = props;
  var specification = (0,useDeviceSpecification/* default */.Z)(device);
  var imageUrl = (0,useDeviceImage/* default */.Z)(specification, "lazy");
  var largeImageUrl = (0,useDeviceImage/* default */.Z)(specification, "catalog");
  var {
    0: showLarge,
    1: setShowLarge
  } = (0,react.useState)(false);
  if (!imageUrl) return null;

  var handleLargeLoaded = () => setShowLarge(true);

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("img", {
    alt: "photograph of the device",
    style: {
      width: "100%",
      display: showLarge ? undefined : "none"
    },
    src: largeImageUrl,
    onLoad: handleLargeLoaded
  }), !showLarge && /*#__PURE__*/react.createElement("img", {
    alt: "large photograph of the device",
    style: {
      minHeight: "18rem",
      width: "100%",
      filter: "blur"
    },
    src: imageUrl
  }));
}

function IdentifyDialog(props) {
  var {
    device,
    open,
    onClose
  } = props;

  var handleSendIdentify = /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* () {
      return yield device.identify();
    });

    return function handleSendIdentify() {
      return _ref.apply(this, arguments);
    };
  }();

  var handleCloseIdentify = () => onClose();

  var {
    statusLightFlags
  } = device;
  var blue = statusLightFlags === specconstants/* ControlAnnounceFlags.StatusLightRgbFade */.P99.StatusLightRgbFade || statusLightFlags === specconstants/* ControlAnnounceFlags.StatusLightRgbNoFade */.P99.StatusLightRgbNoFade;
  (0,useInterval/* default */.Z)(open, handleSendIdentify, 5000, [device]);
  return /*#__PURE__*/react.createElement(Dialog/* default */.Z, {
    open: open,
    onClose: handleCloseIdentify
  }, /*#__PURE__*/react.createElement(DialogTitleWithClose/* default */.Z, {
    onClose: handleCloseIdentify
  }, "Identifying", " ", /*#__PURE__*/react.createElement(DeviceName/* default */.Z, {
    device: device,
    linkToSpecification: true,
    onLinkClick: handleCloseIdentify
  }), "..."), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    alignItems: "center",
    alignContent: "center"
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react.createElement(LazyDeviceImage, {
    device: device
  })), /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: true
  }, /*#__PURE__*/react.createElement(Alert/* default */.Z, {
    severity: "info"
  }, "Look for four blinks in around 2 seconds with the", blue ? " blue" : " ", " LED.")))));
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js
var createSvgIcon = __webpack_require__(25833);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/Person.js


/**
 * @ignore - internal component.
 */


/* harmony default export */ var Person = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), 'Person'));
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Avatar/avatarClasses.js

function getAvatarUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiAvatar', slot);
}
var avatarClasses = (0,generateUtilityClasses/* default */.Z)('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);
/* harmony default export */ var Avatar_avatarClasses = ((/* unused pure expression or super */ null && (avatarClasses)));
;// CONCATENATED MODULE: ./node_modules/@mui/material/Avatar/Avatar.js


var _excluded = ["alt", "children", "className", "component", "imgProps", "sizes", "src", "srcSet", "variant"];









var useUtilityClasses = ownerState => {
  var {
    classes,
    variant,
    colorDefault
  } = ownerState;
  var slots = {
    root: ['root', variant, colorDefault && 'colorDefault'],
    img: ['img'],
    fallback: ['fallback']
  };
  return (0,composeClasses/* default */.Z)(slots, getAvatarUtilityClass, classes);
};

var AvatarRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiAvatar',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    position: 'relative',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    flexShrink: 0,
    width: 40,
    height: 40,
    fontFamily: theme.typography.fontFamily,
    fontSize: theme.typography.pxToRem(20),
    lineHeight: 1,
    borderRadius: '50%',
    overflow: 'hidden',
    userSelect: 'none'
  }, ownerState.variant === 'rounded' && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === 'square' && {
    borderRadius: 0
  }, ownerState.colorDefault && {
    color: theme.palette.background.default,
    backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]
  });
});
var AvatarImg = (0,styled/* default */.ZP)('img', {
  name: 'MuiAvatar',
  slot: 'Img',
  overridesResolver: (props, styles) => styles.img
})({
  width: '100%',
  height: '100%',
  textAlign: 'center',
  // Handle non-square image. The property isn't supported by IE11.
  objectFit: 'cover',
  // Hide alt text.
  color: 'transparent',
  // Hide the image broken icon, only works on Chrome.
  textIndent: 10000
});
var AvatarFallback = (0,styled/* default */.ZP)(Person, {
  name: 'MuiAvatar',
  slot: 'Fallback',
  overridesResolver: (props, styles) => styles.fallback
})({
  width: '75%',
  height: '75%'
});

function useLoaded(_ref2) {
  var {
    crossOrigin,
    referrerPolicy,
    src,
    srcSet
  } = _ref2;
  var [loaded, setLoaded] = react.useState(false);
  react.useEffect(() => {
    if (!src && !srcSet) {
      return undefined;
    }

    setLoaded(false);
    var active = true;
    var image = new Image();

    image.onload = () => {
      if (!active) {
        return;
      }

      setLoaded('loaded');
    };

    image.onerror = () => {
      if (!active) {
        return;
      }

      setLoaded('error');
    };

    image.crossOrigin = crossOrigin;
    image.referrerPolicy = referrerPolicy;
    image.src = src;

    if (srcSet) {
      image.srcset = srcSet;
    }

    return () => {
      active = false;
    };
  }, [crossOrigin, referrerPolicy, src, srcSet]);
  return loaded;
}

var Avatar = /*#__PURE__*/react.forwardRef(function Avatar(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiAvatar'
  });

  var {
    alt,
    children: childrenProp,
    className,
    component = 'div',
    imgProps,
    sizes,
    src,
    srcSet,
    variant = 'circular'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.

  var loaded = useLoaded((0,esm_extends/* default */.Z)({}, imgProps, {
    src,
    srcSet
  }));
  var hasImg = src || srcSet;
  var hasImgNotFailing = hasImg && loaded !== 'error';

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    colorDefault: !hasImgNotFailing,
    component,
    variant
  });

  var classes = useUtilityClasses(ownerState);

  if (hasImgNotFailing) {
    children = /*#__PURE__*/(0,jsx_runtime.jsx)(AvatarImg, (0,esm_extends/* default */.Z)({
      alt: alt,
      src: src,
      srcSet: srcSet,
      sizes: sizes,
      ownerState: ownerState,
      className: classes.img
    }, imgProps));
  } else if (childrenProp != null) {
    children = childrenProp;
  } else if (hasImg && alt) {
    children = alt[0];
  } else {
    children = /*#__PURE__*/(0,jsx_runtime.jsx)(AvatarFallback, {
      className: classes.fallback
    });
  }

  return /*#__PURE__*/(0,jsx_runtime.jsx)(AvatarRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className),
    ref: ref
  }, other, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Avatar_Avatar = (Avatar);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./src/components/KindIcon.tsx
var KindIcon = __webpack_require__(50048);
// EXTERNAL MODULE: ./src/components/icons/JacdacIcon.tsx
var JacdacIcon = __webpack_require__(36656);
;// CONCATENATED MODULE: ./src/components/devices/DeviceIcon.tsx









var PREFIX = "DeviceIcon";
var classes = {
  img: PREFIX + "-img",
  small: PREFIX + "-small",
  large: PREFIX + "-large"
};
var StyledAvatar = (0,styled/* default */.ZP)("span")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + classes.img]: {
      marginTop: "58%"
    },
    ["& ." + classes.small]: {
      width: theme.spacing(3),
      height: theme.spacing(3),
      marginRight: theme.spacing(0.5)
    },
    ["& ." + classes.large]: {
      width: theme.spacing(7),
      height: theme.spacing(7),
      marginRight: theme.spacing(1)
    }
  };
});
function DeviceIcon(props) {
  var {
    device,
    size,
    avatar
  } = props;
  var specification = (0,useDeviceSpecification/* default */.Z)(device);
  var imageUrl = (0,useDeviceImage/* default */.Z)(specification, "avatar");
  var sizeClassName = size === "small" ? classes.small : size === "large" ? classes.large : undefined;
  var server = (0,useServiceProvider/* default */.Z)(device);
  return server ? /*#__PURE__*/react.createElement(KindIcon/* default */.ZP, {
    kind: constants/* VIRTUAL_DEVICE_NODE_NAME */.UX7
  }) : !imageUrl ? /*#__PURE__*/react.createElement(JacdacIcon/* default */.Z, null) : /*#__PURE__*/react.createElement(StyledAvatar, null, /*#__PURE__*/react.createElement(Avatar_Avatar, {
    className: sizeClassName,
    alt: (specification === null || specification === void 0 ? void 0 : specification.name) || "Image of the device",
    src: imageUrl,
    classes: {
      img: avatar ? classes.img : undefined
    }
  }));
}
;// CONCATENATED MODULE: ./src/components/devices/DeviceAvatar.tsx









function DeviceAvatar(props) {
  var {
    device,
    size,
    center
  } = props;
  var {
    0: identifyDialog,
    1: setIdentifyDialog
  } = (0,react.useState)(false);
  var name = (0,useDeviceName/* default */.Z)(device);
  var server = (0,useServiceProvider/* default */.Z)(device);
  var ctrl = server === null || server === void 0 ? void 0 : server.controlService;
  var color = (0,useChange/* default */.Z)(ctrl, _ => _ === null || _ === void 0 ? void 0 : _.statusLightColor);
  var style = color ? {
    color: (0,utils/* rgbToHtmlColor */.b)(color)
  } : undefined;

  var handleOpenIdentify = /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* () {
      return setIdentifyDialog(true);
    });

    return function handleOpenIdentify() {
      return _ref.apply(this, arguments);
    };
  }();

  var handleCloseIdentify = () => setIdentifyDialog(false);

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(CmdButton/* default */.Z, {
    trackName: "device.identify",
    style: style,
    size: "small",
    title: "identify " + (server ? "simulator" : "device") + " " + name,
    onClick: handleOpenIdentify,
    icon: /*#__PURE__*/react.createElement(DeviceIcon, {
      device: device,
      size: size,
      avatar: center !== false
    })
  }), identifyDialog && /*#__PURE__*/react.createElement(IdentifyDialog, {
    device: device,
    open: identifyDialog,
    onClose: handleCloseIdentify
  }));
}

/***/ }),

/***/ 26390:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ DeviceName; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(49308);
/* harmony import */ var gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13883);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_spec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26799);
/* harmony import */ var _jacdac_useDeviceSpecification__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(34246);
/* harmony import */ var _useDeviceName__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5738);






function DeviceName(props) {
  var {
    device,
    serviceIndex,
    showShortId,
    linkToSpecification,
    onLinkClick
  } = props;
  var specification = (0,_jacdac_useDeviceSpecification__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(device);
  var name = (0,_useDeviceName__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(device) || "";
  var {
    shortId
  } = device;

  var Name = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", null, name), !name && showShortId && shortId, showShortId && name && name !== shortId && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
    component: "span",
    variant: "body2",
    spellCheck: false
  }, " ", shortId), serviceIndex !== undefined && "[" + serviceIndex + "]");

  if (linkToSpecification && specification) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__/* .Link */ .rU, {
    onClick: onLinkClick,
    color: "textPrimary",
    to: "/devices/" + (0,_jacdac_ts_src_jdom_spec__WEBPACK_IMPORTED_MODULE_2__/* .identifierToUrlPath */ .uM)(specification.id),
    underline: "hover"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Name, null));else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Name, null);
}

/***/ }),

/***/ 97685:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useDeviceCatalog; }
/* harmony export */ });
/* harmony import */ var _jacdac_useBus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56289);

/**
 * Gets the device catalog from the current bus
 * @returns
 */

function useDeviceCatalog() {
  var bus = (0,_jacdac_useBus__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
  return bus.deviceCatalog;
}

/***/ }),

/***/ 81546:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useDeviceImage; }
/* harmony export */ });
/* harmony import */ var gatsby_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38037);
/* harmony import */ var _jacdac_ts_src_jdom_spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26799);


function useDeviceImage(specification, size) {
  var sz = size || "full";
  return specification && (0,gatsby_link__WEBPACK_IMPORTED_MODULE_0__/* .withPrefix */ .dq)("images/devices/" + (0,_jacdac_ts_src_jdom_spec__WEBPACK_IMPORTED_MODULE_1__/* .identifierToUrlPath */ .uM)(specification.id) + "." + sz + ".jpg");
}

/***/ }),

/***/ 5738:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useDeviceName; }
/* harmony export */ });
function useDeviceName(device, includeShortId) {
  var name = device.friendlyName;
  var r = name;
  if (includeShortId && name && name !== device.shortId) r += " (" + device.shortId + ")";
  return r;
}

/***/ }),

/***/ 74450:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useDeviceSpecifications; }
/* harmony export */ });
/* harmony import */ var _jacdac_ts_src_jdom_catalog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24739);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54774);


function useDeviceSpecifications(options) {
  var specifications = (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_catalog__WEBPACK_IMPORTED_MODULE_0__/* .deviceCatalog */ .U, _ => _.specifications(options), [JSON.stringify(options)]);
  return specifications;
}

/***/ }),

/***/ 29085:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ MembersInput; }
});

// EXTERNAL MODULE: ./node_modules/@mui/material/Grid/Grid.js + 2 modules
var Grid = __webpack_require__(4320);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/material/FormControlLabel/FormControlLabel.js + 1 modules
var FormControlLabel = __webpack_require__(91570);
// EXTERNAL MODULE: ./node_modules/@mui/material/Slider/Slider.js + 4 modules
var Slider = __webpack_require__(879);
// EXTERNAL MODULE: ./node_modules/@mui/material/Switch/Switch.js + 1 modules
var Switch = __webpack_require__(94548);
// EXTERNAL MODULE: ./node_modules/@mui/material/Select/Select.js + 4 modules
var Select = __webpack_require__(67486);
// EXTERNAL MODULE: ./node_modules/@mui/material/MenuItem/MenuItem.js + 1 modules
var MenuItem = __webpack_require__(87122);
// EXTERNAL MODULE: ./node_modules/@mui/material/TextField/TextField.js + 1 modules
var TextField = __webpack_require__(65970);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pretty.ts
var pretty = __webpack_require__(10913);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var spec = __webpack_require__(26799);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./src/components/widgets/ButtonWidget.tsx
var ButtonWidget = __webpack_require__(43746);
// EXTERNAL MODULE: ./src/components/widgets/GaugeWidget.tsx
var GaugeWidget = __webpack_require__(10719);
// EXTERNAL MODULE: ./src/components/widgets/useWidgetSize.ts
var useWidgetSize = __webpack_require__(8584);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./src/components/widgets/useWidgetTheme.ts
var useWidgetTheme = __webpack_require__(60650);
// EXTERNAL MODULE: ./src/components/ui/useUnitConverter.ts
var useUnitConverter = __webpack_require__(44111);
;// CONCATENATED MODULE: ./src/components/widgets/ValueWithUnitWidget.tsx




 /// <reference path="../../../jacdac-ts/jacdac-spec/spectool/jdspec.d.ts" />

function ValueWithUnitWidget(props) {
  var {
    step,
    secondaryLabel,
    icon,
    unit,
    tabIndex,
    color,
    onChange
  } = props;
  var {
    name: unitName,
    converter: unitConverter,
    inverter: unitInverter
  } = (0,useUnitConverter/* default */.Z)(unit); // map all values with unit converters

  var {
    value,
    min,
    max
  } = {
    value: unitConverter(props.value),
    min: unitConverter(props.min),
    max: unitConverter(props.max)
  };
  var precision = step === undefined ? 1 : step < 1 ? Math.ceil(-Math.log10(step)) : 0;
  var hasValue = !isNaN(value);
  var valueText = hasValue ? (0,utils/* roundWithPrecision */.JI)(value, precision).toLocaleString() : "--";
  var valueTextLength = (0,utils/* isSet */.DM)(min) && (0,utils/* isSet */.DM)(max) ? [min, max, min + (min + max) / 3].map(v => (0,utils/* roundWithPrecision */.JI)(v, precision).toLocaleString().replace(/[,.]/, "").length).reduce((l, r) => Math.max(l, r), 0) + precision : valueText.length;
  var {
    textPrimary
  } = (0,useWidgetTheme/* default */.Z)(color); //console.log({ min, max, step, precision })

  var valueVariant = valueTextLength < 4 ? "h1" : valueTextLength < 7 ? "h2" : valueTextLength < 9 ? "h3" : valueTextLength < 12 ? "h4" : "h6";
  var valueStyle = {
    color: textPrimary,
    minWidth: Math.max(2, valueTextLength - 1) + "em"
  };
  var unitStyle = {
    color: textPrimary
  };
  var captionStyle = {
    color: textPrimary
  };

  var handleChange = (event, newValue) => {
    var v = newValue;
    var iv = unitInverter(v);
    onChange(iv);
  };

  return /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    direction: "column",
    tabIndex: tabIndex,
    "aria-label": valueText + " " + (unitName || "")
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    direction: "row",
    alignContent: "flex-end"
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    role: "timer",
    align: "right",
    variant: valueVariant,
    style: valueStyle
  }, icon, valueText)), /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    direction: "column",
    alignContent: "space-between"
  }, unitName && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    style: unitStyle,
    variant: "caption"
  }, unitName)), secondaryLabel && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    style: captionStyle,
    variant: "caption"
  }, secondaryLabel)))))), onChange && value !== undefined && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react.createElement(Slider/* default */.ZP, {
    valueLabelDisplay: "off",
    color: "secondary",
    min: min,
    max: max,
    step: step,
    value: value,
    onChange: handleChange,
    "aria-label": unitName || secondaryLabel
  })));
}
// EXTERNAL MODULE: ./src/components/icons/HumidityIcon.tsx
var HumidityIcon = __webpack_require__(37557);
// EXTERNAL MODULE: ./src/components/icons/TemperatureIcon.tsx
var TemperatureIcon = __webpack_require__(74741);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/spectool/jdspec.ts
var jdspec = __webpack_require__(13996);
;// CONCATENATED MODULE: ./src/components/hooks/useUnitIcon.tsx




/* harmony default export */ var useUnitIcon = ((unit, props) => {
  var {
    unit: runit
  } = (0,jdspec/* resolveUnit */.bM)(unit) || {};

  switch (runit) {
    case "%RH":
      return /*#__PURE__*/react.createElement(HumidityIcon/* default */.Z, props);

    case "°C":
    case "K":
      return /*#__PURE__*/react.createElement(TemperatureIcon/* default */.Z, props);

    default:
      return null;
  }
});
// EXTERNAL MODULE: ./node_modules/react-use-id-hook/dist/react-use-id-hook.esm.js
var react_use_id_hook_esm = __webpack_require__(19640);
// EXTERNAL MODULE: ./src/components/ui/LoadingProgress.tsx
var LoadingProgress = __webpack_require__(2285);
;// CONCATENATED MODULE: ./src/components/fields/MemberInput.tsx
 // tslint:disable-next-line: no-submodule-imports














function MemberInput(props) {
  var _serviceSpecification;

  var {
    specification,
    serviceSpecification,
    serviceMemberSpecification,
    value,
    setValue,
    showDataType,
    color,
    variant,
    min,
    max,
    resolution,
    error,
    showLoading,
    off,
    toggleOff
  } = props;
  var {
    typicalMin,
    typicalMax,
    absoluteMin,
    absoluteMax,
    type
  } = specification;
  var enumInfo = (_serviceSpecification = serviceSpecification.enums) === null || _serviceSpecification === void 0 ? void 0 : _serviceSpecification[specification.type];
  var disabled = !setValue;
  var {
    0: errorText,
    1: setErrorText
  } = (0,react.useState)("");
  var {
    0: textValue,
    1: setTextValue
  } = (0,react.useState)("");
  var valueString = (0,spec/* memberValueToString */.Mn)(value, specification);
  var name = specification.name === "_" ? serviceMemberSpecification.name : specification.name;
  var label = name;
  var isWidget = variant === "widget";
  var widgetSize = (0,useWidgetSize/* default */.Z)();
  var unitIcon = useUnitIcon(specification.unit, {
    "aria-label": label
  });
  var {
    textPrimary
  } = (0,useWidgetTheme/* default */.Z)(color);
  var minValue = (0,utils/* pick */.ei)(min, typicalMin, absoluteMin, /^u/.test(type) ? 0 : undefined);
  var maxValue = (0,utils/* pick */.ei)(max, typicalMax, absoluteMax);
  var errorValue = error ? "±" + (0,utils/* roundWithPrecision */.JI)(error, 1 - Math.floor(Math.log10(error))).toLocaleString() : undefined;
  var unit = (0,pretty/* prettyUnit */.QP)(specification.unit);
  var helperText = errorText || [(0,pretty/* prettyMemberUnit */.Zn)(specification, showDataType), errorValue].filter(v => v !== undefined).join(", ");
  var inputId = (0,react_use_id_hook_esm/* useId */.Me)();
  var inputType = specification.type === "string" || specification.type === "string0" ? "string" : specification.isSimpleType || (0,spec/* isIntegerType */.YF)(specification.type) ? "number" : ""; // update coming from device

  (0,react.useEffect)(() => {
    setTextValue(valueString);
  }, [valueString]);

  var handleChecked = (ev, checked) => {
    setValue(checked);
  };

  var handleChange = ev => {
    var newValue = ev.target.value;
    setTextValue(newValue);
    var r = (0,spec/* tryParseMemberValue */.Xg)(newValue, specification);
    if (r.value !== undefined) setValue(r.value);
    setErrorText(r.error);
  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any


  var handleEnumChange = event => {
    var v = enumInfo.isFlags ? (0,pretty/* flagsToValue */.zi)(event.target.value) : event.target.value;
    setValue(v);
  };

  var handleSliderChange = (ev, newValue) => setValue(newValue);

  var handleSliderWidgetChange = newValue => setValue(newValue);

  var percentValueFormat = value => {
    // avoid super long floats
    return (value * 100 >> 0) + "%";
  };

  var valueLabelFormat = value => {
    // avoid super long floats
    return (0,utils/* roundWithPrecision */.JI)(value, 1) + (unit || "");
  };

  var percentValueLabelFormat = v => {
    return Math.round(v * 100) + "%";
  };

  var offFormat = () => "off"; // value hasn't been loaded yet


  if (serviceMemberSpecification.kind !== "command" && value === undefined) {
    if (showLoading) return /*#__PURE__*/react.createElement(LoadingProgress/* default */.Z, null);else return null;
  } //


  if (specification.type === "pipe") {
    return /*#__PURE__*/react.createElement(react.Fragment, null, "pipe ", /*#__PURE__*/react.createElement("code", null, specification.name));
  } else if (specification.type === "bool") {
    if (isWidget && !(0,spec/* isValueOrIntensity */.sX)(serviceMemberSpecification)) {
      return /*#__PURE__*/react.createElement(ButtonWidget/* default */.Z, {
        label: !isWidget && label,
        checked: !!value,
        color: color,
        size: widgetSize
      });
    }

    return /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {
      control: /*#__PURE__*/react.createElement(Switch/* default */.Z, {
        checked: !!value,
        onChange: disabled ? undefined : handleChecked,
        color: color
      }),
      label: /*#__PURE__*/react.createElement("span", {
        style: {
          color: textPrimary
        }
      }, label)
    });
  } else if (enumInfo !== undefined) {
    return /*#__PURE__*/react.createElement(Select/* default */.Z, {
      "aria-label": label,
      disabled: disabled,
      multiple: enumInfo.isFlags,
      value: enumInfo.isFlags ? (0,pretty/* valueToFlags */.Cg)(enumInfo, value) : value,
      onChange: handleEnumChange
    }, Object.keys(enumInfo.members).map(n => /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {
      key: n,
      value: enumInfo.members[n]
    }, n)));
  } else if (specification.unit === "/") {
    var signed = specification.storage < 0;

    var _min = signed ? -1 : 0;

    var _max = 1;
    var step = resolution !== undefined ? resolution : 0.01;
    if (isWidget) return /*#__PURE__*/react.createElement(GaugeWidget["default"], {
      tabIndex: 0,
      label: label,
      value: value,
      color: color,
      variant: signed ? "fountain" : undefined,
      min: _min,
      max: _max,
      step: step,
      valueLabel: percentValueLabelFormat,
      onChange: disabled ? undefined : handleSliderWidgetChange,
      off: off,
      toggleOff: toggleOff
    });
    return /*#__PURE__*/react.createElement(Slider/* default */.ZP, {
      "aria-label": label,
      color: color,
      value: value,
      valueLabelFormat: percentValueFormat,
      onChange: disabled ? undefined : handleSliderChange,
      min: _min,
      max: _max,
      step: step,
      valueLabelDisplay: "auto"
    });
  } else if ((0,utils/* isSet */.DM)(minValue) && (0,utils/* isSet */.DM)(maxValue)) {
    var hasTypicalRange = (0,utils/* isSet */.DM)(typicalMin) && (0,utils/* isSet */.DM)(typicalMax);

    var _step = resolution !== undefined ? resolution : hasTypicalRange ? (specification.typicalMax - specification.typicalMin) / 100 : (maxValue - minValue) / 100;

    if (_step === 0 || isNaN(_step)) // edge case
      _step = undefined;
    var marks = hasTypicalRange && (typicalMin !== minValue || typicalMax !== maxValue) ? [{
      value: typicalMin
    }, {
      value: typicalMax
    }] : undefined;
    if (isWidget) return /*#__PURE__*/react.createElement(ValueWithUnitWidget, {
      tabIndex: 0,
      unit: specification.unit,
      value: value,
      min: minValue,
      max: maxValue,
      icon: unitIcon,
      step: _step,
      secondaryLabel: errorValue,
      color: color,
      onChange: disabled ? undefined : handleSliderWidgetChange
    });
    return /*#__PURE__*/react.createElement(Slider/* default */.ZP, {
      value: value,
      color: color,
      valueLabelFormat: off ? offFormat : valueLabelFormat,
      onChange: disabled ? undefined : handleSliderChange,
      min: minValue,
      max: maxValue,
      step: _step,
      marks: marks,
      valueLabelDisplay: "auto"
    });
  } else if (specification.type === "bytes") {
    return /*#__PURE__*/react.createElement(TextField/* default */.Z, {
      id: inputId,
      spellCheck: false,
      value: textValue,
      label: label,
      inputProps: {
        ["aria-label"]: label,
        ["aria-readonly"]: disabled,
        readOnly: disabled
      },
      helperText: helperText,
      onChange: disabled ? undefined : handleChange,
      required: value === undefined,
      error: !!errorText,
      type: "text"
    });
  } else {
    // numbers or string or uintarrays
    if (isWidget) // we need min/max to support a slider
      return /*#__PURE__*/react.createElement(ValueWithUnitWidget, {
        tabIndex: 0,
        value: (0,utils/* roundWithPrecision */.JI)(value, 1),
        unit: specification.unit,
        color: color,
        size: widgetSize
      });
    return /*#__PURE__*/react.createElement(TextField/* default */.Z, {
      id: inputId,
      spellCheck: false,
      value: textValue,
      label: label,
      inputProps: {
        "aria-label": label,
        "aria-readonly": disabled,
        readOnly: disabled
      },
      helperText: helperText,
      onChange: disabled ? undefined : handleChange,
      required: value === undefined,
      error: !!errorText,
      type: inputType
    });
  }
}
;// CONCATENATED MODULE: ./src/components/fields/MembersInput.tsx



function MembersInput(props) {
  var {
    serviceSpecification,
    serviceMemberSpecification,
    specifications,
    values,
    setValues,
    showDataType,
    color,
    variant,
    min,
    max,
    resolution,
    error,
    off,
    toggleOff
  } = props;

  var setValue = index => value => {
    var c = values.slice(0);
    c[index] = value;
    setValues(c);
  };

  return /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    spacing: 1
  }, specifications.map((field, fieldi) => {
    var value = values === null || values === void 0 ? void 0 : values[fieldi];
    return /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
      item: true,
      key: fieldi,
      xs: 12
    }, /*#__PURE__*/react.createElement(MemberInput, {
      serviceSpecification: serviceSpecification,
      serviceMemberSpecification: serviceMemberSpecification,
      specification: field,
      showDataType: showDataType,
      value: value,
      color: color,
      setValue: values && setValues && setValue(fieldi),
      variant: variant,
      min: min === null || min === void 0 ? void 0 : min[fieldi],
      max: max === null || max === void 0 ? void 0 : max[fieldi],
      resolution: resolution === null || resolution === void 0 ? void 0 : resolution[fieldi],
      error: error === null || error === void 0 ? void 0 : error[fieldi],
      off: off,
      toggleOff: toggleOff
    }));
  }));
}

/***/ }),

/***/ 31396:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ou": function() { return /* binding */ fileSystemHandleSupported; },
/* harmony export */   "$8": function() { return /* binding */ writeFileText; },
/* harmony export */   "ue": function() { return /* binding */ readFileText; },
/* harmony export */   "U5": function() { return /* binding */ importCSVFilesIntoWorkspace; },
/* harmony export */   "cr": function() { return /* binding */ importModelJSONIntoWorkspace; }
/* harmony export */ });
/* unused harmony exports listDirectories, listFiles, fileOpen, importFiles */
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15861);
/* harmony import */ var _jacdac_ts_src_jdom_iframeclient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9809);
/* harmony import */ var _jacdac_providerbus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(24725);




function fileSystemHandleSupported() {
  return typeof window !== "undefined" && !!window.showDirectoryPicker && !(0,_jacdac_ts_src_jdom_iframeclient__WEBPACK_IMPORTED_MODULE_1__/* .inIFrame */ .H)() && !_jacdac_providerbus__WEBPACK_IMPORTED_MODULE_0__/* .UIFlags.hosted */ .A.hosted;
}
function writeFileText(_x, _x2) {
  return _writeFileText.apply(this, arguments);
}

function _writeFileText() {
  _writeFileText = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(function* (fileHandle, content) {
    var file = yield fileHandle.createWritable({
      keepExistingData: false
    });

    try {
      yield file.write(content);
    } finally {
      try {
        yield file.close();
      } catch (e) {
        console.debug("file close error", {
          e
        });
      }
    }
  });
  return _writeFileText.apply(this, arguments);
}

function readFileText(_x3) {
  return _readFileText.apply(this, arguments);
}

function _readFileText() {
  _readFileText = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(function* (fileHandle) {
    var file = yield fileHandle.getFile();

    try {
      return yield file.text();
    } catch (e) {
      console.debug("file read error", {
        e
      });
      return undefined;
    }
  });
  return _readFileText.apply(this, arguments);
}

function listDirectories(_x4) {
  return _listDirectories.apply(this, arguments);
}

function _listDirectories() {
  _listDirectories = _asyncToGenerator(function* (directory) {
    var values = directory === null || directory === void 0 ? void 0 : directory.values();
    var r = [];

    if (values) {
      var _iteratorAbruptCompletion = false;
      var _didIteratorError = false;

      var _iteratorError;

      try {
        for (var _iterator = _asyncIterator(values), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {
          var entry = _step.value;
          if (entry.kind === "directory") r.push(entry);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (_iteratorAbruptCompletion && _iterator.return != null) {
            yield _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }

    return r;
  });
  return _listDirectories.apply(this, arguments);
}

function listFiles(_x5, _x6) {
  return _listFiles.apply(this, arguments);
}

function _listFiles() {
  _listFiles = _asyncToGenerator(function* (directory, extension) {
    var values = directory === null || directory === void 0 ? void 0 : directory.values();
    var r = [];

    if (values) {
      var _iteratorAbruptCompletion2 = false;
      var _didIteratorError2 = false;

      var _iteratorError2;

      try {
        for (var _iterator2 = _asyncIterator(values), _step2; _iteratorAbruptCompletion2 = !(_step2 = yield _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {
          var entry = _step2.value;
          if (entry.kind === "file") r.push(entry);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (_iteratorAbruptCompletion2 && _iterator2.return != null) {
            yield _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }

    if (extension) r = r.filter(f => f.name.endsWith(extension));
    return r;
  });
  return _listFiles.apply(this, arguments);
}

function fileOpen(_x7) {
  return _fileOpen.apply(this, arguments);
}

function _fileOpen() {
  _fileOpen = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(function* (options) {
    if (options === void 0) {
      options = {};
    }

    var accept = {};

    if (options.mimeTypes) {
      Object.keys(options.mimeTypes).map(mimeType => {
        accept[mimeType] = options.mimeTypes[mimeType];
      });
    } else {
      accept["*/*"] = options.extensions || [];
    }

    var files = yield window.showOpenFilePicker({
      types: [{
        description: options.description || "",
        accept: accept
      }],
      multiple: options.multiple || false,
      excludeAcceptAllOption: true
    });
    console.debug("open file picker", {
      files
    });
    return files;
  });
  return _fileOpen.apply(this, arguments);
}

function importFiles(_x8, _x9) {
  return _importFiles.apply(this, arguments);
}

function _importFiles() {
  _importFiles = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(function* (directory, files) {
    if (!directory || !(files !== null && files !== void 0 && files.length)) return;

    for (var file of files) {
      console.debug("importing " + file.name + " -> " + directory.name);
      var content = yield readFileText(file);
      var to = yield directory.getFileHandle(file.name, {
        create: true
      });
      yield writeFileText(to, content);
    }
  });
  return _importFiles.apply(this, arguments);
}

function importCSVFilesIntoWorkspace(_x10) {
  return _importCSVFilesIntoWorkspace.apply(this, arguments);
}

function _importCSVFilesIntoWorkspace() {
  _importCSVFilesIntoWorkspace = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(function* (directory) {
    var files = yield fileOpen({
      multiple: true,
      mimeTypes: {
        ["text/csv"]: [".csv"]
      }
    });
    yield importFiles(directory, files);
  });
  return _importCSVFilesIntoWorkspace.apply(this, arguments);
}

function importModelJSONIntoWorkspace(_x11) {
  return _importModelJSONIntoWorkspace.apply(this, arguments);
}

function _importModelJSONIntoWorkspace() {
  _importModelJSONIntoWorkspace = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(function* (directory) {
    var files = yield fileOpen({
      multiple: true,
      mimeTypes: {
        ["text/json"]: [".json"]
      }
    });
    yield importFiles(directory, files);
  });
  return _importModelJSONIntoWorkspace.apply(this, arguments);
}

/***/ }),

/***/ 30043:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ CarouselGrid; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4320);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


function CarouselGrid(props) {
  var {
    children
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP, {
    item: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP, {
    container: true,
    justifyContent: "center",
    direction: "row",
    spacing: 2,
    alignContent: "center",
    alignItems: "flex-start"
  }, children));
}

/***/ }),

/***/ 83580:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ CenterGrid; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4320);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19586);



function CenterGrid(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 8
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP, {
    container: true,
    spacing: 2,
    direction: "column",
    justifyContent: "center",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, Object.assign({}, props, {
    centered: true
  }))));
}

/***/ }),

/***/ 83357:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Clients; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83580);
/* harmony import */ var _HTML5Image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59248);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(72587);






function Clients() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    title: "Client SDKs",
    subtitle3: "Integrate Jacdac with JavaScript, Node.JS, Python or MakeCode.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./dashboard.png",
      alt: "Dashboard",
      __imageData: __webpack_require__(42951)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: true,
    subtitle: "JavaScript and TypeScript",
    description: "From the browser or Node.JS, use our JavaScript/TypeScript library to interact with physical Jacdac devices. If you can build a web page, you can program Jacdac.",
    buttonText: "JavaScript/TypeScript library",
    buttonVariant: "link",
    buttonUrl: "/clients/javascript",
    imageColumns: 4,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_HTML5Image__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: false,
    subtitle: "MakeCode",
    description: "Code Jacdac using a micro:bit V2, Arcade or Maker board.",
    buttonText: "MakeCode extension",
    buttonVariant: "link",
    buttonUrl: "/clients/makecode",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./makecode.png",
      alt: "Block code to swipe a servo",
      __imageData: __webpack_require__(77042)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: true,
    imageColumns: 8,
    subtitle: "Node-RED",
    description: "Add Jacdac to your Node-RED flows.",
    buttonText: "Jacdac node",
    buttonVariant: "link",
    buttonUrl: "https://flows.nodered.org/node/node-red-contrib-jacdac",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./nodered.png",
      alt: "Jacdac nodes for Node-RED",
      __imageData: __webpack_require__(24347)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: false,
    subtitle: "p5*js",
    imageColumns: 8,
    description: "Physical Creative Coding.",
    buttonText: "p5.jacdac library",
    buttonVariant: "link",
    buttonUrl: "/clients/p5js",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./p5js.jpg",
      alt: "A p5js program that controls color with sliders.",
      __imageData: __webpack_require__(74971)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: true,
    subtitle: "React",
    imageColumns: 7,
    description: "Context and Hooks for your React apps.",
    buttonText: "react-jacdac documentation",
    buttonVariant: "link",
    buttonUrl: "/clients/react",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./react.png",
      alt: "React logo.",
      __imageData: __webpack_require__(53134)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: false,
    subtitle: "A-Frame",
    imageColumns: 7,
    description: "Put Reality back into Virtual Reality.",
    buttonText: "A-Frame demo",
    buttonVariant: "link",
    buttonUrl: "/clients/a-frame",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./a-frame.jpg",
      alt: "Control the radius of a sphere using a slider using our Javascript SDK.",
      __imageData: __webpack_require__(27645)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Python",
    description: "Control hardware from your computer or your Raspberry Pi using Python.",
    buttonText: "Python library",
    buttonVariant: "link",
    buttonUrl: "/clients/python",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "https://www.python.org/static/community_logos/python-logo-master-v3-TM.png",
      alt: "Python Foundation Logo",
      __imageData: __webpack_require__(33588)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    subtitle2: "Can I embed the dashboard in my web pages?",
    description: "Absolutely! With a few lines of HTML, you'll get a dashboard in your web pages.",
    buttonText: "Copy HTML code to add Jacdac to your web site.",
    buttonVariant: "link",
    buttonUrl: "/clients/embed/"
  }));
}

/***/ }),

/***/ 89088:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Connector; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CarouselGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30043);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83580);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19586);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72587);







function Connector() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center",
    style: {
      marginTop: 0
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    style: {
      paddingTop: 0
    },
    title: "Connector",
    description: "Jacdac uses 3-pin custom-designed connectors to quickly interface development boards with sensors, relays and more.",
    buttonText: "Go to specification",
    buttonUrl: "https://github.com/microsoft/jacdac-ddk/tree/main/connector",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./tangled.png",
      alt: "Tangled cable",
      __imageData: __webpack_require__(7826)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    description: "A custom cable connector designed to work in both orientations, to provide a haptic \u201Cclick\u201D when it plugs in, and to feel nice in your hand.",
    caption: "Reversible, clickable and ergonomic."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./competitors.png",
    alt: "Comparing existing cables to Jacdac",
    __imageData: __webpack_require__(91848)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./mechanicalclickconnector.png",
    alt: "A split view of the cable going into the PCB",
    __imageData: __webpack_require__(61413)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./hub.png",
    alt: "A hub PCB",
    __imageData: __webpack_require__(94856)
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Reversible.",
    description: "There's no need to worry about accidentally swapping the Power and Data wires on your breadboard. The Jacdac connector is engineered to be completely reversible, so you won't even have to think about the right orientation as you plug the cable.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./buttoncable.png",
      alt: "A cable plugin into a humidity sensor.",
      __imageData: __webpack_require__(91241)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Mechanical feedback.",
    description: "Jacdac's state-of-the-art hook design delivers an impeccably fluid plug/unplug motion. Plugging the cable and experiencing a snap-fit feeling gives confidence that the connection has been made. This is achieved by two metallic hooks that snap into two slots on the board, always ensuring a robust link.",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./fullassembly.png",
      alt: "Close up on cable",
      __imageData: __webpack_require__(82668)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Ergonomic.",
    description: " Regardless being extremely compact (only 9.5x18.5mm), it provides an unprecedented experience in terms of comfort and ergonomic in its everyday use. This makes connecting microcontrollers and peripherals as simple as plugging a USB device into your personal computer.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./ucable.png",
      alt: "Short cable",
      __imageData: __webpack_require__(31327)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Discover the benefits of Jacdac custom connector.",
    description: "There are plenty of prototyping cables on the market. The issue is that there are also plenty of compromises that come with using them. They are fiddly, require high dexterity, and are easy to damage."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "How does it work?",
    description: "The PCB edge connector is made of 3 gold fingers on both sides of the PCB, with two slots on the outer edges for mechanical hooking. The cable connector is made of 3 electrical contact pins and 2 mechanical hooks.",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./rhtemp.png",
      alt: "A Jacdac humidity module plugging into a Jacdac cable",
      __imageData: __webpack_require__(18780)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Minimum effort. Maximum flexibility.",
    description: "The cable has been designed to make it extremely easy to plug in to connect modules together. While at the same time it provides a robust and reliable connection that\u2019s difficult to unplug unvoluntarily. Bring your prototypes to the next level.",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./rotary.png",
      alt: "A Jacdac rotary encoder module plugging into a Jacdac cable",
      __imageData: __webpack_require__(92438)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Lower costs. Higher efficiency.",
    description: "Not requiring a female port mounted on the Jacdac modules means less sourcing and assembly costs. On top of that, our PCB edge and cable connector have been tested extensively to ensure a consistent experience up to 1500 cycles.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./forces.png",
      alt: "The cable insertion and simulated forces.",
      __imageData: __webpack_require__(54529)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Three length.",
    description: "The device catalog lists the registered Jacdac devices that can be automatically detected on the bus. The catalog information provides vendor information, the services supported by a device, firmware, and pictures.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./1500mm.png",
      alt: "A rolled up 1500mm Jacdac cable",
      __imageData: __webpack_require__(10103)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      width: 64,
      src: "./hotplugicon.svg",
      alt: "Icon of two plugs connecting",
      __imageData: __webpack_require__(27580)
    }),
    description: "Hot plug discovery",
    caption: "The device catalog lists the registered Jacdac devices that can be automatically detected on the bus. The catalog information provides vendor information, the services supported by a device, firmware, and pictures."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      width: 64,
      src: "./threepins.png",
      alt: "3 bars",
      __imageData: __webpack_require__(6929)
    }),
    description: "Three pins.",
    caption: "The packets are transmitted serially on hardware using a 3-wire cable."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      width: 64,
      src: "./pcbicon.png",
      alt: "PCB icon",
      __imageData: __webpack_require__(24502)
    }),
    description: "Accepts 1.6mm PCBs.",
    caption: "Integrate Jacdac into your web site or node.js application using out TypeScript/JavaScript npm library."
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "More cables. More ideas.",
    description: "Become a Jacdac partner by developing and selling your own ideas of what the cables should look like. As long as they plug into the PCB edge connector on the modules, they are good to go!",
    buttonText: "View PCB footprint",
    buttonVariant: "link",
    buttonUrl: "https://github.com/microsoft/jacdac-ddk/blob/main/connector/JACDAC_PCB_Edge_Connector_Drawing_JD-PEC-01_rev_01.pdf",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./pcbfootprint.png",
      alt: "Connector PCB footprint.",
      __imageData: __webpack_require__(49895)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Can I add Jacdac to my PCB?",
    description: "Absolutely. We would be thrilled if you used a Jacdac PCB connector on your board or product! You can use the name Jacdac without royalties or attribution.",
    buttonText: "Integrate Jacdac into your hardware",
    buttonVariant: "link",
    buttonUrl: "https://github.com/microsoft/jacdac-ddk/tree/main/connector"
  }));
}

/***/ }),

/***/ 19586:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ FeatureItem; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4320);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39211);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(49308);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(98348);
/* harmony import */ var gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36176);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(85505);
/* harmony import */ var _icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36656);






var PREFIX = "FeatureItem";
var classes = {
  centered: PREFIX + "-centered",
  description: PREFIX + "-description",
  caption: PREFIX + "-caption",
  button: PREFIX + "-button"
}; // TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.

var Root = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP)("div")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + classes.centered]: {
      textAlign: "center"
    },
    ["& ." + classes.description]: {
      fontSize: theme.typography.fontSize * 1.8
    },
    ["& ." + classes.caption]: {
      fontSize: theme.typography.fontSize
    },
    ["& ." + classes.button]: {
      fontSize: theme.typography.fontSize * 1.5
    }
  };
});
function FeatureItem(props) {
  var {
    title,
    subtitle,
    subtitle2,
    subtitle3,
    description,
    buttonText,
    buttonUrl,
    buttonColor = "primary",
    buttonVariant = "contained",
    startImage,
    caption,
    image,
    centered,
    onButtonClick,
    hideJacdacIcon
  } = props;
  var centeredCls = centered && classes.centered;
  var cls = centeredCls;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Root, null, startImage && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
    mb: 2
  }, startImage)), title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "h1",
    className: cls
  }, !hideJacdacIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    fontSize: "large",
    style: {
      fontSize: "4rem",
      verticalAlign: "middle"
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
    style: {
      fontWeight: "bold"
    }
  }, title))), subtitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "h2",
    className: cls
  }, subtitle)), subtitle2 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "h3",
    className: cls
  }, subtitle2)), subtitle3 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "h4",
    className: cls
  }, subtitle3)), description && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "body1",
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_7__["default"])(cls, classes.description)
  }, description)), caption && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "subtitle2",
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_7__["default"])(cls, classes.caption)
  }, caption)), (buttonUrl || onButtonClick) && buttonText && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_7__["default"])(cls, classes.button)
  }, buttonVariant === "link" ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_0__/* .Link */ .rU, {
    style: {
      cursor: "pointer"
    },
    to: buttonUrl,
    onClick: onButtonClick
  }, buttonText, " >") : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
    mt: 2
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_0__/* .Button */ .zx, {
    variant: "contained",
    color: buttonColor,
    to: buttonUrl,
    onClick: onButtonClick
  }, buttonText))), image && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    className: cls
  }, image));
}

/***/ }),

/***/ 59248:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ HTML5Image; }
/* harmony export */ });
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91350);



function HTML5Image(props) {
  var {
    darkMode
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var {
    icon
  } = props;
  if (icon) {
    if (darkMode === "dark") return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_2__.S, {
      width: 64,
      src: "./html5-white.png",
      alt: "A Jacdac humidity module plugging into a Jacdac cable",
      __imageData: __webpack_require__(28924)
    });else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_2__.S, {
      width: 64,
      src: "./html5-dark.png",
      alt: "A Jacdac humidity module plugging into a Jacdac cable",
      __imageData: __webpack_require__(1572)
    });
  } else if (darkMode === "dark") return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_2__.S, {
    src: "./html5-white.png",
    alt: "A Jacdac humidity module plugging into a Jacdac cable",
    __imageData: __webpack_require__(27103)
  });else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_2__.S, {
    src: "./html5-dark.png",
    alt: "A Jacdac humidity module plugging into a Jacdac cable",
    __imageData: __webpack_require__(78809)
  });
}

/***/ }),

/***/ 27005:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Hardware; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CarouselGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30043);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83580);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19586);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72587);
/* harmony import */ var _mui_icons_material_PowerSettingsNew__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(38043);
/* harmony import */ var _mui_icons_material_Camera__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(3084);
/* harmony import */ var _mui_icons_material_Telegram__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(60489);
/* harmony import */ var _hooks_useMediaQueries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20509);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6890);












var DeviceSpecificationList = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => __webpack_require__.e(/* import() */ 3909).then(__webpack_require__.bind(__webpack_require__, 93909)));
/*
const ModelViewer = lazy(() => import("./models/ModelViewer"))
const GLBModel = lazy(() => import("./models/GLBModel"))
<Grid item xs={12}>
<Suspense>
    <ModelViewer responsive={true}>
        <GLBModel name={"jmhidserversf441v03"} />
    </ModelViewer>
</Suspense>
</Grid>
*/

function Hardware() {
  var {
    mobile,
    medium
  } = (0,_hooks_useMediaQueries__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
  var cols = mobile ? 1 : medium ? 3 : 4;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    title: "Hardware",
    subtitle3: "Integrate Jacdac into your devices.",
    imageColumns: 6,
    buttonText: "Hardware Specification",
    buttonUrl: "/reference/hardware-specification/",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./pcbfootprint.png",
      alt: "PCB connector footprint",
      __imageData: __webpack_require__(49895)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Plug-and-play",
    description: "Every Jacdac device has a tiny micro-controller that runs the Jacdac protocol and communicates over the bus.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./rhtempvertical.png",
      alt: "A Jacdac humidity module plugging into a Jacdac cable",
      __imageData: __webpack_require__(92859)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "3-wire serial",
    description: "Jacdac packets are sent serially among physical devices over a single data line along with a regulated power line.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./bustopology.png",
      alt: "Bus topology",
      __imageData: __webpack_require__(91798)
    }),
    buttonText: "Learn more",
    buttonVariant: "link",
    buttonUrl: "/protocol/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "8-bit and up",
    description: "Firmware fits on 8-bit micro-controllers to minimize costs",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./jacdacsinglergbledmodule.png",
      alt: "A LED module",
      __imageData: __webpack_require__(65091)
    }),
    buttonText: "Device Development Kit",
    buttonVariant: "link",
    buttonUrl: "https://github.com/microsoft/jacdac-ddk"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "PCB Connector",
    description: "A PCB edge connector is robust and adds no cost to a product.",
    buttonText: "Physical connector",
    buttonVariant: "link",
    buttonUrl: "/hardware/connector/",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./mechanicalclickconnector.png",
      alt: "Cable and connector",
      __imageData: __webpack_require__(61413)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Power... negotiated",
    description: "Power is regulated and negotiated on the bus to minimize brown-outs, etc.",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./rotary.png",
      alt: "A Jacdac rotary encoder module plugging into a Jacdac cable",
      __imageData: __webpack_require__(92438)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Firmware Updates",
    description: "Jacdac scans for registered devices and can upgrade firmware over the bus.",
    imageColumns: 4,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./firmwareupdate.png",
      alt: "A device with firmware up-to-date",
      __imageData: __webpack_require__(96936)
    }),
    buttonText: "Register device",
    buttonVariant: "link",
    buttonUrl: "/tools/device-registration/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DeviceSpecificationList, {
    count: cols,
    shuffle: true
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Telegram__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Cheap.",
    caption: "Add Jacdac to your PCB for a few cents."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Camera__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Flexible.",
    caption: "Hot swap plug-and-play with extensive web tooling."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_PowerSettingsNew__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Extensible.",
    caption: "Specify your own services and deploy them on your devices."
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "For Manufacturers",
    description: "Create Jacdac devices.",
    imageColumns: 8,
    centered: true,
    buttonText: "Hardware Specification",
    buttonUrl: "/reference/hardware-specification/",
    buttonVariant: "link",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./beautifysimple.png",
      alt: "An array of Jacdac modules",
      __imageData: __webpack_require__(54423)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Can I add Jacdac to my PCB?",
    description: "Absolutely. We would be thrilled if you used a Jacdac PCB connector on your board or product! You can use the name Jacdac without royalties or attribution.",
    buttonText: "Integrate Jacdac into your hardware",
    buttonVariant: "link",
    buttonUrl: "/hardware/connector"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    subtitle: "Kit",
    subtitle3: "Hardware Module Kit",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./kittop.jpg",
      alt: "Kit cardboard view from top",
      __imageData: __webpack_require__(60707)
    }),
    buttonText: "Unbox",
    buttonUrl: "/hardware/kit/"
  }));
}

/***/ }),

/***/ 96497:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Home; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CarouselGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30043);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83580);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19586);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72587);
/* harmony import */ var _mui_icons_material_DirectionsBus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(65207);
/* harmony import */ var _mui_icons_material_PlaylistAddCheck__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(15316);
/* harmony import */ var _mui_icons_material_FindReplace__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(95698);
/* harmony import */ var _mui_icons_material_Subscriptions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(76354);
/* harmony import */ var _HTML5Image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59248);












function Home() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    title: "Jacdac",
    subtitle: "plug-and-play for microcontrollers",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./manymodules2.png",
      alt: "Many Modules Together",
      __imageData: __webpack_require__(42600)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle3: "A hardware/software stack that bridges the world of low-cost microcontrollers to the web browser and beyond.",
    description: "Cheap, flexible and extensible."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Hardware",
    description: "Jacdac uses a 3-wire bus for power delivery and data transfer. A purpose-built connector is used to interface with the Jacdac PCB edge connector.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./rotarycable.png",
      alt: "A rotary encoder module with a Jacdac cable attached.",
      __imageData: __webpack_require__(53300)
    }),
    buttonText: "Physical interconnect",
    buttonVariant: "link",
    buttonUrl: "/hardware/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Protocol",
    description: "Bus topology, dynamic discovery, services designed for micro-controllers.",
    buttonText: "Learn more",
    buttonVariant: "link",
    buttonUrl: "/protocol/",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./bustopology.png",
      alt: "Four cables joining into a hub",
      __imageData: __webpack_require__(91798)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "'Nano' Services",
    description: "Jacdac services provide software an abstract view of the hardware. Services are defined in terms of registers, commands and events.",
    buttonText: "Explore services",
    buttonVariant: "link",
    buttonUrl: "/services/",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./dashboard.png",
      alt: "Dashboard of devices",
      __imageData: __webpack_require__(42951)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Client SDKs",
    description: "Integrate Jacdac into your Web pages, Node.JS apps or Python scripts.",
    buttonText: "Use Jacdac",
    buttonVariant: "link",
    buttonUrl: "/software/",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_HTML5Image__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Tools",
    description: "Visualize, debug, sniff, track, record, replay, update... from your browser.",
    buttonText: "Get productive with Jacdac",
    buttonVariant: "link",
    buttonUrl: "/tools/",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./devicetree.png",
      alt: "Device tree",
      __imageData: __webpack_require__(68553)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Discover the benefits of Jacdac protocol",
    description: "Jacdac devices communicate using packets over a bus, where each device advertises itself and its set of services.",
    buttonText: "Protocol specification",
    buttonVariant: "link",
    buttonUrl: "/protocol/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_DirectionsBus__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Bus topology",
    caption: "Jacdac packets are sent among devices on the Jacdac bus and may also be sent over WebUSB/WebBLE, providing connectivity to web-based tooling and services."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_PlaylistAddCheck__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Device discovery and service advertisement",
    caption: "Any device that hosts a service must also run the control service, which is responsible for advertising any services a device is running every 500 milliseconds."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_FindReplace__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Standardized service abstraction",
    caption: "Services allow devices with different hardware, but the same functionality, to replace one another - no need to recompile user applications."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Subscriptions__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Full stack from 8bit MCU to web development",
    caption: "The physical protocol layer sends/receives a byte buffer (representing a Jacdac frame): Single Wire Serial connects MCUs to each other using UART."
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Enabling a cheaper ecosystem.",
    description: "A PCB edge connector was chosen for Jacdac as it adds no cost to a product.  A module is a small PCB that includes an MCU connected to an on-board sensor or actuator.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./beautifysimple.png",
      alt: "An array of Jacdac modules",
      __imageData: __webpack_require__(54423)
    }),
    buttonText: "Devices",
    buttonVariant: "link",
    buttonUrl: "/devices/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: true,
    subtitle: "For Manufacturers",
    description: "Create Jacdac devices.",
    imageColumns: 6,
    centered: true,
    buttonText: "Hardware Specification",
    buttonUrl: "/reference/hardware-specification/",
    buttonVariant: "link",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./pcbfootprint.png",
      alt: "PCB connector footprint",
      __imageData: __webpack_require__(49895)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "How does it work?",
    description: "Jacdac packets are sent serially among physical devices on the Jacdac bus and may also be sent over WebUSB/WebBLE, providing connectivity to web-based tooling and services running in the web browser.",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      src: "./buttoncable.png",
      alt: "A Jacdac humidity module plugging into a Jacdac cable",
      __imageData: __webpack_require__(91241)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      width: 64,
      src: "./hotplugicon.svg",
      alt: "Icon of two plugs connecting",
      __imageData: __webpack_require__(27580)
    }),
    description: "Hot plug discovery",
    caption: "The device catalog lists the registered Jacdac devices that can be automatically detected on the bus, and their services. The catalog information also provides vendor information."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_7__.S, {
      width: 64,
      src: "./firmwareupdateicon.svg",
      alt: "Firmware icon",
      __imageData: __webpack_require__(60094)
    }),
    description: "Firmware updates",
    caption: "The device catalog enables the automatic detection, download and flashing of firmware onto devices."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_HTML5Image__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
      icon: true
    }),
    description: "JavaScript package",
    caption: "Integrate Jacdac into your web site or node.js application using our TypeScript/JavaScript npm package.",
    buttonText: "Learn more",
    buttonUrl: "/software/",
    buttonVariant: "link"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Can I add Jacdac to my PCB?",
    description: "Absolutely. We would be thrilled if you used a Jacdac PCB connector on your board or product! You can use the name Jacdac without royalties or attribution.",
    buttonText: "Integrate Jacdac into your hardware",
    buttonVariant: "link",
    buttonUrl: "/hardware/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle: "Can I add Jacdac to my app?",
    description: "Absolutely! Use our client software to integrate into your apps.",
    buttonText: "Integrate Jacdac into your apps",
    buttonVariant: "link",
    buttonUrl: "/clients/"
  }));
}

/***/ }),

/***/ 88862:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Kit; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CarouselGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30043);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83580);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19586);






function Kit() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    title: "Hardware Kit",
    subtitle3: "Start experimenting with Jacdac and the Hardware module kit."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./kit/opentopside.jpg",
      alt: "Hardware kit box opened with contents on a table",
      __imageData: __webpack_require__(71958)
    }),
    subtitle2: "Unbox",
    description: "Power up the micro:bit and plug the cables and modules!",
    buttonText: "Unbox your kit",
    buttonUrl: "/hardware/kit/unbox"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./kit/dashboard.jpg",
      alt: "Jacdac devices connected to a computer with a dashboard",
      __imageData: __webpack_require__(14781)
    }),
    subtitle2: "Explore",
    description: "Use the dashboard to interact with modules in the browser.",
    buttonText: "Explore the dashboard",
    buttonUrl: "/dashboard"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_5__.S, {
      src: "./kit/makecode.jpg",
      alt: "Block code to swipe a servo",
      __imageData: __webpack_require__(44133)
    }),
    subtitle2: "Build",
    description: "Code Jacdac into your micro:bit V2.",
    buttonText: "Build with MakeCode",
    buttonUrl: "/clients/makecode"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle2: "Is there an update available?",
    description: "Jacdac modules can be updated from this web site.",
    buttonText: "Check for firmware updates",
    buttonVariant: "link",
    buttonUrl: "/tools/updater/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    subtitle2: "Can I add Jacdac to my app?",
    description: "Absolutely! Use our client software to integrate into your apps.",
    buttonText: "Integrate Jacdac into your apps",
    buttonVariant: "link",
    buttonUrl: "/clients/"
  }));
}

/***/ }),

/***/ 38329:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ KitModules; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _devices_useDeviceSpecifications__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74450);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6890);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(83580);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72587);







var DeviceSpecificationList = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => __webpack_require__.e(/* import() */ 3909).then(__webpack_require__.bind(__webpack_require__, 93909)));
function KitModules() {
  var specifications = (0,_devices_useDeviceSpecifications__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)();
  var modules = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => specifications.filter(spec => {
    var _spec$tags;

    return ((_spec$tags = spec.tags) === null || _spec$tags === void 0 ? void 0 : _spec$tags.indexOf("kit")) > -1;
  }), [specifications]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center",
    style: {
      marginTop: 0
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    style: {
      paddingTop: 0
    },
    title: "Kit Modules",
    subtitle3: "Explore the contents of the kit.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./kit/contents.jpg",
      alt: "All the contents of the hardware kit",
      __imageData: __webpack_require__(12277)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Plug and Play",
    description: "The micro:bit V2 from the Kit comes with firmware that will automatically use any of the modules in your kit.",
    caption: "Slot the micro:bit in the Jacdapter then try to connect various modules to see what happens.",
    buttonUrl: "/hardware/kit/oob/",
    buttonVariant: "link",
    buttonText: "Download again",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
      src: "./kit/opentopside.jpg",
      alt: "Kit opened with micro:bit visible",
      __imageData: __webpack_require__(71958)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    subtitle: "Modules",
    caption: "Your kit may contain some but not all of these modules."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DeviceSpecificationList, {
    devices: modules
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    container: true,
    spacing: 1
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6,
    md: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./kit/opentop.jpg",
    alt: "Kit opened with micro:bit",
    __imageData: __webpack_require__(31999)
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6,
    md: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./kit/sidetop.jpg",
    alt: "Side top image of the kit",
    __imageData: __webpack_require__(55603)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6,
    md: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./kit/sidetop2.jpg",
    alt: "Reverse side top image of the kit",
    __imageData: __webpack_require__(74004)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6,
    md: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./kit/top.jpg",
    alt: "Top image of the kit",
    __imageData: __webpack_require__(43281)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6,
    md: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./kit/topfront.jpg",
    alt: "top front image of the kit",
    __imageData: __webpack_require__(24678)
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 6,
    md: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_6__.S, {
    src: "./kit/bottom.jpg",
    alt: "bottom of the kit",
    __imageData: __webpack_require__(71086)
  }))))));
}

/***/ }),

/***/ 77851:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Protocol; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6890);
/* harmony import */ var _CarouselGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30043);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(83580);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(19586);
/* harmony import */ var _HTML5Image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59248);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72587);









var DeviceSpecificationList = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => __webpack_require__.e(/* import() */ 3909).then(__webpack_require__.bind(__webpack_require__, 93909)));
function Protocol() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    title: "Protocol",
    subtitle3: "Bus topology, dynamic discovery, standardized services for micro-controllers",
    imageColumns: 6,
    buttonText: "Specification",
    buttonUrl: "/reference/protocol",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./manymodules2.png",
      alt: "Many Modules Together",
      __imageData: __webpack_require__(42600)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    description: "Jacdac is a bus-based plug-and-play hardware/software stack for microcontrollers and their peripherals (sensors/actuators), with applications to rapid prototyping, making, and physical computing."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Bus topology.",
    description: "Jacdac packets are sent serially among physical devices on the Jacdac bus and may also be sent over WebUSB/WebBLE, providing connectivity to web-based tooling and services running in the web browser.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./bustopology.png",
      alt: "Bus topology",
      __imageData: __webpack_require__(91798)
    }),
    buttonText: "Learn more",
    buttonVariant: "link",
    buttonUrl: "/reference/protocol/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Dynamic discovery.",
    description: "Jacdac devices advertise their services over the bus every half second.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./rotary.png",
      alt: "A rotary encoder",
      __imageData: __webpack_require__(92438)
    }),
    buttonText: "Learn more",
    buttonVariant: "link",
    buttonUrl: "/reference/protocol/#service-layer"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    right: false,
    subtitle: "'Nano' services.",
    description: "Jacdac services are specified to abstract the hardware device from the software implementation. The services are comprised of registers, commands and events, along with precise data layout information for each packet.",
    imageColumns: 8,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./dashboardtemp.png",
      alt: "A view of a temperature humidity sensor",
      __imageData: __webpack_require__(22206)
    }),
    buttonText: "Explore services",
    buttonVariant: "link",
    buttonUrl: "/services"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    subtitle: "How does it work?",
    description: "Every Jacdac device has a micro-controller to run the Jacdac protocol and communicate over the bus.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./rhtempvertical.png",
      alt: "A Jacdac humidity module plugging into a Jacdac cable",
      __imageData: __webpack_require__(92859)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      width: 64,
      src: "./hotplugicon.svg",
      alt: "Icon of two plugs connecting",
      __imageData: __webpack_require__(27580)
    }),
    description: "Hot plug discovery",
    caption: "The device catalog lists the registered Jacdac devices that can be automatically detected on the bus. The catalog information provides vendor information, the service."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      width: 64,
      src: "./firmwareupdateicon.svg",
      alt: "Firmware icon",
      __imageData: __webpack_require__(60094)
    }),
    description: "Firmware updates",
    caption: "The device catalog can automatically detect, download and flash firmware onto devices."
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_HTML5Image__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, null),
    description: "JavaScript package",
    caption: "Integrate Jacdac into your web site or node.js application using our TypeScript/JavaScript npm package.",
    buttonText: "Learn more",
    buttonVariant: "link",
    buttonUrl: "/software"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Device Catalog.",
    description: "Jacdac identifies registered devices on the bus and can automatically find and upload the latest firmware for them.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DeviceSpecificationList, {
      count: 6
    })),
    buttonText: "Explore devices",
    buttonVariant: "link",
    buttonUrl: "/devices/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    subtitle: "Can I add Jacdac to my PCB?",
    description: "Absolutely. We would be thrilled if you used a Jacdac PCB connector on your board or product! You can use the name Jacdac without royalties or attribution.",
    buttonText: "Integrate Jacdac into your hardware",
    buttonVariant: "link",
    buttonUrl: "/hardware/"
  }));
}

/***/ }),

/***/ 18325:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Software; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83580);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72587);
/* harmony import */ var _CarouselGrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30043);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(19586);
/* harmony import */ var _mui_icons_material_AccountTree__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(99107);
/* harmony import */ var _icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(36656);
/* harmony import */ var _mui_icons_material_History__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(52861);
/* harmony import */ var _HTML5Image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59248);






 // tslint:disable-next-line: no-submodule-imports match-default-export-name





function Software() {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    title: "Software",
    subtitle3: "Integrate Jacdac into your web, Node.JS or embedded apps.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./dashboard.png",
      alt: "Dashboard",
      __imageData: __webpack_require__(42951)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    subtitle2: "Low-Code Hardware.",
    description: "Jacdac client libraries empower developers without embedded or event coding experience."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: true,
    subtitle: "JavaScript and TypeScript.",
    description: "From the browser or Node.JS, use our JavaScript/TypeScript library to interact with physical Jacdac devices. If you can build a web page, you can program Jacdac.",
    buttonText: "JavaScript library",
    buttonVariant: "link",
    buttonUrl: "/clients/javascript",
    imageColumns: 4,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_HTML5Image__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: false,
    subtitle: "No drivers needed",
    subtitle3: "WebUSB, WebSerial, WebBluetooth",
    description: "Access physical devices with builtin browser features, no installation needed.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./bustopology.png",
      alt: "Bus topology",
      __imageData: __webpack_require__(91798)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: true,
    subtitle: "MakeCode",
    description: "Add Jacdac to your micro:bit V2, Arcade or Maker board.",
    buttonText: "MakeCode library",
    buttonVariant: "link",
    buttonUrl: "/clients/makecode",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./makecode.png",
      alt: "Block code to swipe a servo",
      __imageData: __webpack_require__(77042)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Node-RED",
    description: "Add Jacdac to your Node-RED flows.",
    buttonText: "Jacdac node",
    buttonVariant: "link",
    buttonUrl: "https://flows.nodered.org/node/node-red-contrib-jacdac",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./nodered.png",
      alt: "Jacdac nodes for Node-RED",
      __imageData: __webpack_require__(24347)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: true,
    subtitle: "p5*js",
    description: "Physical Creative Coding.",
    buttonText: "p5.jacdac library",
    buttonVariant: "link",
    buttonUrl: "/clients/p5js",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_8__.S, {
      src: "./p5js.jpg",
      alt: "A p5js program that controls color with potentiometers",
      __imageData: __webpack_require__(74971)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    subtitle2: "Developer tools.",
    description: "Investigate and diagnose issues through our debugging tools.",
    buttonText: "More tools...",
    buttonVariant: "link",
    buttonUrl: "/tools/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CarouselGrid__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_JacdacIcon__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Dashboard",
    caption: "Visualize and interact with physical or simulated devices in the dashboard.",
    buttonText: "Try the dashboard",
    buttonVariant: "link",
    buttonUrl: "/dashboard/"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_AccountTree__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Device Tree",
    caption: "Inspect devices, services, registers and events in the device tree.",
    buttonText: "Open Device Tree",
    buttonVariant: "link",
    buttonUrl: "/software/device-tree"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    sm: 4
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    startImage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_History__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {
      fontSize: "large"
    }),
    description: "Packet console",
    caption: "Inspect every packet moving on the bus, save and reload traces from the web or your logic analyzer.",
    buttonText: "Show packets",
    buttonVariant: "link",
    buttonUrl: "/software/packet-console"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    subtitle2: "Can I add Jacdac to my web app?",
    description: "Absolutely! You can embed our dashboard or add our JavaScript package.",
    buttonText: "Integrate Jacdac into your web app",
    buttonVariant: "link",
    buttonUrl: "/clients/embed/"
  }));
}
/*


            
*/

/***/ }),

/***/ 72587:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ SplitGrid; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45987);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4320);
/* harmony import */ var _FeatureItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19586);

var _excluded = ["right", "image", "centered", "imageColumns", "style"];



function SplitGrid(props) {
  var {
    right,
    image,
    centered,
    imageColumns = 5,
    style
  } = props,
      others = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(props, _excluded);

  var textItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP, {
    item: true,
    xs: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP, {
    container: true,
    spacing: 2,
    direction: "column",
    alignContent: "flex-start",
    alignItems: centered ? "center" : "flex-start"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FeatureItem__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, others)));
  var imageItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    md: imageColumns
  }, image);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP, {
    item: true,
    xs: 12,
    style: style
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP, {
    container: true,
    direction: "row",
    alignContent: "flex-start",
    alignItems: "flex-start",
    spacing: 4
  }, right ? imageItem : textItem, right ? textItem : imageItem));
}

/***/ }),

/***/ 55789:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Tools; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(4320);
/* harmony import */ var gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(6125);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _CenterGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83580);
/* harmony import */ var _SplitGrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72587);
/* harmony import */ var _AppContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84377);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6890);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(71815);
/* harmony import */ var _hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(36134);
/* harmony import */ var _hooks_useDevices__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(53074);
/* harmony import */ var _dashboard_DashboardDevice__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(32465);











var JDomTreeView = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(188)]).then(__webpack_require__.bind(__webpack_require__, 10188)));
var PacketView = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => __webpack_require__.e(/* import() */ 317).then(__webpack_require__.bind(__webpack_require__, 20133)));
function Tools() {
  var _useDevices;

  (0,_hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_BUTTON */ .XJR);
  (0,_hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_JOYSTICK */ .vRO);
  (0,_hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_SERVO */ .$X_);
  (0,_hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_POTENTIOMETER */ .GQv);
  (0,_hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_LED_PIXEL */ .zEX);
  (0,_hooks_useServiceProviderFromServiceClass__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_DOT_MATRIX */ .GDq);
  var {
    setDrawerType
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_AppContext__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP);

  var handleShowDeviceTree = () => setDrawerType(_AppContext__WEBPACK_IMPORTED_MODULE_3__/* .DrawerType.Dom */ .jw.Dom);

  var handleShowPacketConsole = () => setDrawerType(_AppContext__WEBPACK_IMPORTED_MODULE_3__/* .DrawerType.Packets */ .jw.Packets);

  var simulatorClass = _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_DOT_MATRIX */ .GDq;
  var dashboards = (0,_hooks_useDevices__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
    ignoreInfrastructure: true,
    announced: true
  }).filter(dev => !dev.hasService(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_5__/* .SRV_ROLE_MANAGER */ .igi) && !dev.hasService(simulatorClass)).slice(0, 4);
  var simulator = (_useDevices = (0,_hooks_useDevices__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({
    ignoreInfrastructure: true,
    announced: true,
    serviceClass: simulatorClass
  })) === null || _useDevices === void 0 ? void 0 : _useDevices[0];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    container: true,
    spacing: 10,
    direction: "column",
    alignContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    title: "Tools",
    subtitle3: "Visualize, debug, sniff, track, record, replay, update... from your browser.",
    imageColumns: 6,
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_10__.S, {
      src: "./dashboard.png",
      alt: "Dashboard",
      __imageData: __webpack_require__(42951)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Dashboard",
    description: "Visualize and interact with physical or simulated devices in the dashboard.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
      container: true,
      spacing: 1
    }, dashboards.map(device => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
      item: true,
      key: device.id,
      xs: 12,
      sm: 6
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_dashboard_DashboardDevice__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
      device: device
    }))))),
    buttonText: "Try the dashboard",
    buttonVariant: "link",
    buttonUrl: "/dashboard/"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Simulators.",
    description: "Spin up virtual device and services to test your client software. Both physical and simulated devices can interact together.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, simulator && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_dashboard_DashboardDevice__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
      device: simulator
    })))
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: true,
    subtitle: "Device Tree",
    description: "Inspect devices, services, registers and events in the device tree.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(JDomTreeView, null)),
    buttonText: "Open Device Tree",
    buttonVariant: "link",
    onButtonClick: handleShowDeviceTree
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Packet Console",
    description: "Sniff the packet traffic, record and replay traces in the packet console.",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      style: {
        height: "14rem"
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PacketView, null))),
    buttonText: "Open Packet Console",
    buttonVariant: "link",
    onButtonClick: handleShowPacketConsole
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    subtitle2: "Data Science tools.",
    description: "Collect data, train and push models."
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: false,
    subtitle: "Data collector.",
    description: "Record any register data into a CSV file.",
    buttonText: "Collect data",
    buttonVariant: "link",
    buttonUrl: "/tools/collector",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_10__.S, {
      src: "./recordit.png",
      alt: "Data collector user interface",
      __imageData: __webpack_require__(72891)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SplitGrid__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    right: true,
    subtitle: "JupyterLab 2.0.",
    description: "Collect data from your JupyterLab notebooks.",
    buttonText: "Collect data",
    buttonVariant: "link",
    buttonUrl: "/tools/jupyterlab/",
    image: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_plugin_image__WEBPACK_IMPORTED_MODULE_10__.S, {
      src: "./jupyterlab.png",
      alt: "Screenshot of Jupyter lab",
      __imageData: __webpack_require__(55414)
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CenterGrid__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    subtitle2: "Can I build my own tools?",
    description: "Absolutely! You can our JavaScript package to build your own Jacdac tooling.",
    buttonText: "Integrate Jacdac into your web app",
    buttonVariant: "link",
    buttonUrl: "/clients/javascript/"
  }));
}

/***/ }),

/***/ 72513:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Nh": function() { return /* binding */ AppInsightsErrorBoundary; },
  "co": function() { return /* binding */ analytics; },
  "ZP": function() { return /* binding */ useAnalytics; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-shims/dist-esm/Constants.js
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var Constants_strShimFunction = "function";
var strShimObject = "object";
var Constants_strShimUndefined = "undefined";
var Constants_strShimPrototype = "prototype";
var strShimHasOwnProperty = "hasOwnProperty";
var Constants_strDefault = "default";
var Constants_ObjClass = Object;
var Constants_ObjProto = Constants_ObjClass[Constants_strShimPrototype];
var ObjAssign = Constants_ObjClass["assign"];
var Constants_ObjCreate = Constants_ObjClass["create"];
var Constants_ObjDefineProperty = Constants_ObjClass["defineProperty"];
var Constants_ObjHasOwnProperty = Constants_ObjProto[strShimHasOwnProperty];
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-shims/dist-esm/Helpers.js
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

/**
 * Returns the current global scope object, for a normal web page this will be the current
 * window, for a Web Worker this will be current worker global scope via "self". The internal
 * implementation returns the first available instance object in the following order
 * - globalThis (New standard)
 * - self (Will return the current window instance for supported browsers)
 * - window (fallback for older browser implementations)
 * - global (NodeJS standard)
 * - <null> (When all else fails)
 * While the return type is a Window for the normal case, not all environments will support all
 * of the properties or functions.
 */

function getGlobal() {
  if (typeof globalThis !== Constants_strShimUndefined && globalThis) {
    return globalThis;
  }

  if (typeof self !== Constants_strShimUndefined && self) {
    return self;
  }

  if (typeof window !== Constants_strShimUndefined && window) {
    return window;
  }

  if (typeof __webpack_require__.g !== Constants_strShimUndefined && __webpack_require__.g) {
    return __webpack_require__.g;
  }

  return null;
}
function Helpers_throwTypeError(message) {
  throw new TypeError(message);
}
/**
 * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil
 * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.
 * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations
 * @param obj Object to use as a prototype. May be null
 */

function objCreateFn(obj) {
  var func = Constants_ObjCreate; // Use build in Object.create

  if (func) {
    // Use Object create method if it exists
    return func(obj);
  }

  if (obj == null) {
    return {};
  }

  var type = typeof obj;

  if (type !== strShimObject && type !== Constants_strShimFunction) {
    Helpers_throwTypeError('Object prototype may only be an Object:' + obj);
  }

  function tmpFunc() {}

  tmpFunc[Constants_strShimPrototype] = obj;
  return new tmpFunc();
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-shims/dist-esm/TsLibShims.js
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

 // Most of these functions have been directly shamelessly "lifted" from the https://github.com/@microsoft/tslib and
// modified to be ES3 compatible and applying several minification and tree-shaking techniques so that Application Insights
// can successfully use TypeScript "importHelpers" which imports tslib during compilation but it will use these at runtime
// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require
// them.

var SymbolObj = (getGlobal() || {})["Symbol"];
var ReflectObj = (getGlobal() || {})["Reflect"];
var __hasSymbol = !!SymbolObj;
var __hasReflect = !!ReflectObj;
var strDecorate = "decorate";
var strMetadata = "metadata";
var strGetOwnPropertySymbols = "getOwnPropertySymbols";
var strIterator = "iterator";
var __objAssignFnImpl = function __objAssignFnImpl(t) {
  // tslint:disable-next-line: ban-comma-operator
  for (var s, i = 1, n = arguments.length; i < n; i++) {
    s = arguments[i];

    for (var p in s) {
      if (Constants_ObjProto[strShimHasOwnProperty].call(s, p)) {
        t[p] = s[p];
      }
    }
  }

  return t;
};
var __assignFn = ObjAssign || __objAssignFnImpl; // tslint:disable-next-line: only-arrow-functions

var _extendStaticsFn = function extendStaticsFn(d, b) {
  _extendStaticsFn = Constants_ObjClass.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || // tslint:disable-next-line: only-arrow-functions
  function (d, b) {
    for (var p in b) {
      if (b[strShimHasOwnProperty](p)) {
        d[p] = b[p];
      }
    }
  };

  return _extendStaticsFn(d, b);
};

function __extendsFn(d, b) {
  if (typeof b !== Constants_strShimFunction && b !== null) {
    Helpers_throwTypeError("Class extends value " + String(b) + " is not a constructor or null");
  }

  _extendStaticsFn(d, b);

  function __() {
    this.constructor = d;
  } // tslint:disable-next-line: ban-comma-operator


  d[Constants_strShimPrototype] = b === null ? objCreateFn(b) : (__[Constants_strShimPrototype] = b[Constants_strShimPrototype], new __());
}
function __restFn(s, e) {
  var t = {};

  for (var k in s) {
    if (ObjHasOwnProperty.call(s, k) && e.indexOf(k) < 0) {
      t[k] = s[k];
    }
  }

  if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {
    for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && ObjProto["propertyIsEnumerable"].call(s, p[i])) {
        t[p[i]] = s[p[i]];
      }
    }
  }

  return t;
}
function __decorateFn(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = ObjClass["getOwnPropertyDescriptor"](target, key) : desc,
      d;

  if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {
    r = ReflectObj[strDecorate](decorators, target, key, desc);
  } else {
    for (var i = decorators.length - 1; i >= 0; i--) {
      // tslint:disable-next-line:no-conditional-assignment
      if (d = decorators[i]) {
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
    }
  } // tslint:disable-next-line:ban-comma-operator


  return c > 3 && r && ObjDefineProperty(target, key, r), r;
}
function __paramFn(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadataFn(metadataKey, metadataValue) {
  if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {
    return ReflectObj[strMetadata](metadataKey, metadataValue);
  }
}
function __exportStarFn(m, o) {
  for (var p in m) {
    if (p !== strDefault && !ObjHasOwnProperty.call(o, p)) {
      __createBindingFn(o, m, p);
    }
  }
}
function __createBindingFn(o, m, k, k2) {
  if (k2 === undefined) {
    k2 = k;
  }

  if (ObjCreate) {
    ObjDefineProperty(o, k2, {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    });
  } else {
    o[k2] = m[k];
  }
}
function __valuesFn(o) {
  var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator],
      m = s && o[s],
      i = 0;

  if (m) {
    return m.call(o);
  }

  if (o && typeof o.length === "number") {
    return {
      next: function next() {
        if (o && i >= o.length) {
          o = void 0;
        }

        return {
          value: o && o[i++],
          done: !o
        };
      }
    };
  }

  throwTypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __readFn(o, n) {
  var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];

  if (!m) {
    return o;
  }

  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      // tslint:disable-next-line:no-conditional-assignment
      if (r && !r.done && (m = i["return"])) {
        m.call(i);
      }
    } finally {
      if (e) {
        // tslint:disable-next-line:no-unsafe-finally
        throw e.error;
      }
    }
  }

  return ar;
}
/** @deprecated */

function __spreadArraysFn() {
  var theArgs = arguments; // Calculate new total size

  for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {
    s += theArgs[i].length;
  } // Create new full array


  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
function __spreadArrayFn(to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
}
function __makeTemplateObjectFn(cooked, raw) {
  if (ObjDefineProperty) {
    ObjDefineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;
function __importStarFn(mod) {
  if (mod && mod.__esModule) {
    return mod;
  }

  var result = {};

  if (mod != null) {
    for (var k in mod) {
      if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {
        __createBindingFn(result, mod, k);
      }
    }
  } // Set default module


  if (ObjCreate) {
    ObjDefineProperty(result, strDefault, {
      enumerable: true,
      value: mod
    });
  } else {
    result[strDefault] = mod;
  }

  return result;
}
;
function __importDefaultFn(mod) {
  return mod && mod.__esModule ? mod : {
    strDefault: mod
  };
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/dynamicproto-js/lib/dist/esm/dynamicproto-js.js
/*!
 * Microsoft Dynamic Proto Utility, 1.1.4
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * Constant string defined to support minimization
 * @ignore
 */
var Constructor = 'constructor';
/**
 * Constant string defined to support minimization
 * @ignore
 */

var Prototype = 'prototype';
/**
 * Constant string defined to support minimization
 * @ignore
 */

var strFunction = 'function';
/**
 * Used to define the name of the instance function lookup table
 * @ignore
 */

var DynInstFuncTable = '_dynInstFuncs';
/**
 * Name used to tag the dynamic prototype function
 * @ignore
 */

var DynProxyTag = '_isDynProxy';
/**
 * Name added to a prototype to define the dynamic prototype "class" name used to lookup the function table
 * @ignore
 */

var DynClassName = '_dynClass';
/**
 * Prefix added to the classname to avoid any name clashes with other instance level properties
 * @ignore
 */

var DynClassNamePrefix = '_dynCls$';
/**
 * A tag which is used to check if we have already to attempted to set the instance function if one is not present
 * @ignore
 */

var DynInstChkTag = '_dynInstChk';
/**
 * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same
 * tag name as the function level but a different const name for readability only.
 */

var DynAllowInstChkTag = DynInstChkTag;
/**
 * The global (imported) instances where the global performance options are stored
 */

var DynProtoDefaultOptions = '_dfOpts';
/**
 * Value used as the name of a class when it cannot be determined
 * @ignore
 */

var UnknownValue = '_unknown_';
/**
 * Constant string defined to support minimization
 * @ignore
 */

var str__Proto = "__proto__";
/**
 * Constant string defined to support minimization
 * @ignore
 */

var strUseBaseInst = 'useBaseInst';
/**
 * Constant string defined to support minimization
 * @ignore
 */

var strSetInstFuncs = 'setInstFuncs';
var Obj = Object;
/**
 * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)
 * @ignore
 */

var _objGetPrototypeOf = Obj["getPrototypeOf"];
/**
 * Internal Global used to generate a unique dynamic class name, every new class will increase this value
 * @ignore
 */

var _dynamicNames = 0;
/**
 * Helper to check if the object contains a property of the name
 * @ignore
 */

function _hasOwnProperty(obj, prop) {
  return obj && Obj[Prototype].hasOwnProperty.call(obj, prop);
}
/**
 * Helper used to check whether the target is an Object prototype or Array prototype
 * @ignore
 */


function _isObjectOrArrayPrototype(target) {
  return target && (target === Obj[Prototype] || target === Array[Prototype]);
}
/**
 * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype
 * @ignore
 */


function _isObjectArrayOrFunctionPrototype(target) {
  return _isObjectOrArrayPrototype(target) || target === Function[Prototype];
}
/**
 * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.
 * @ignore
 */


function _getObjProto(target) {
  if (target) {
    // This method doesn't existing in older browsers (e.g. IE8)
    if (_objGetPrototypeOf) {
      return _objGetPrototypeOf(target);
    } // target[Constructor] May break if the constructor has been changed or removed


    var newProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);

    if (newProto) {
      return newProto;
    }
  }

  return null;
}
/**
 * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6
 * are not enumerable.
 * @param target
 */


function _forEachProp(target, func) {
  var props = [];
  var getOwnProps = Obj["getOwnPropertyNames"];

  if (getOwnProps) {
    props = getOwnProps(target);
  } else {
    for (var name_1 in target) {
      if (typeof name_1 === "string" && _hasOwnProperty(target, name_1)) {
        props.push(name_1);
      }
    }
  }

  if (props && props.length > 0) {
    for (var lp = 0; lp < props.length; lp++) {
      func(props[lp]);
    }
  }
}
/**
 * Helper function to check whether the provided function name is a potential candidate for dynamic
 * callback and prototype generation.
 * @param target The target object, may be a prototype or class object
 * @param funcName The function name
 * @param skipOwn Skips the check for own property
 * @ignore
 */


function _isDynamicCandidate(target, funcName, skipOwn) {
  return funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || _hasOwnProperty(target, funcName));
}
/**
 * Helper to throw a TypeError exception
 * @param message the message
 * @ignore
 */


function _throwTypeError(message) {
  throw new TypeError("DynamicProto: " + message);
}
/**
 * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does
 * not return any inherited functions
 * @param thisTarget The object to get the instance functions from
 * @ignore
 */


function _getInstanceFuncs(thisTarget) {
  // Get the base proto
  var instFuncs = {}; // Save any existing instance functions

  _forEachProp(thisTarget, function (name) {
    // Don't include any dynamic prototype instances - as we only want the real functions
    if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {
      // Create an instance callback for passing the base function to the caller
      instFuncs[name] = thisTarget[name];
    }
  });

  return instFuncs;
}
/**
 * Returns whether the value is included in the array
 * @param values The array of values
 * @param value  The value
 */


function _hasVisited(values, value) {
  for (var lp = values.length - 1; lp >= 0; lp--) {
    if (values[lp] === value) {
      return true;
    }
  }

  return false;
}
/**
 * Returns an object that contains callback functions for all "base/super" functions, this is used to "save"
 * enabling calling super.xxx() functions without requiring that the base "class" has defined a prototype references
 * @param target The current instance
 * @ignore
 */


function _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {
  function _instFuncProxy(target, funcHost, funcName) {
    var theFunc = funcHost[funcName];

    if (theFunc[DynProxyTag] && useBaseInst) {
      // grab and reuse the hosted looking function (if available) otherwise the original passed function
      var instFuncTable = target[DynInstFuncTable] || {};

      if (instFuncTable[DynAllowInstChkTag] !== false) {
        theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;
      }
    }

    return function () {
      return theFunc.apply(target, arguments);
    };
  } // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)


  var baseFuncs = {};

  _forEachProp(instFuncs, function (name) {
    // Create an instance callback for passing the base function to the caller
    baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);
  }); // Get the base prototype functions


  var baseProto = _getObjProto(classProto);

  var visited = []; // Don't include base object functions for Object, Array or Function

  while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {
    // look for prototype functions
    _forEachProp(baseProto, function (name) {
      // Don't include any dynamic prototype instances - as we only want the real functions
      // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the 
      // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return
      // the Object prototype methods while bypassing the check
      if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {
        // Create an instance callback for passing the base function to the caller
        baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);
      }
    }); // We need to find all possible functions that might be overloaded by walking the entire prototype chain
    // This avoids the caller from needing to check whether it's direct base class implements the function or not
    // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.


    visited.push(baseProto);
    baseProto = _getObjProto(baseProto);
  }

  return baseFuncs;
}

function _getInstFunc(target, funcName, proto, currentDynProtoProxy) {
  var instFunc = null; // We need to check whether the class name is defined directly on this prototype otherwise
  // it will walk the proto chain and return any parent proto classname.

  if (target && _hasOwnProperty(proto, DynClassName)) {
    var instFuncTable = target[DynInstFuncTable] || {};
    instFunc = (instFuncTable[proto[DynClassName]] || {})[funcName];

    if (!instFunc) {
      // Avoid stack overflow from recursive calling the same function
      _throwTypeError("Missing [" + funcName + "] " + strFunction);
    } // We have the instance function, lets check it we can speed up further calls
    // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)


    if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {
      // If the instance already has an instance function we can't replace it
      var canAddInst = !_hasOwnProperty(target, funcName); // Get current prototype

      var objProto = _getObjProto(target);

      var visited = []; // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function
      // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut

      while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {
        var protoFunc = objProto[funcName];

        if (protoFunc) {
          canAddInst = protoFunc === currentDynProtoProxy;
          break;
        } // We need to find all possible initial functions to ensure that we don't bypass a valid override function


        visited.push(objProto);
        objProto = _getObjProto(objProto);
      }

      try {
        if (canAddInst) {
          // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version
          // so it's safe to directly assign for any subsequent calls (for better performance)
          target[funcName] = instFunc;
        } // Block further attempts to set the instance function for any


        instFunc[DynInstChkTag] = 1;
      } catch (e) {
        // Don't crash if the object is readonly or the runtime doesn't allow changing this
        // And set a flag so we don't try again for any function
        instFuncTable[DynAllowInstChkTag] = false;
      }
    }
  }

  return instFunc;
}

function _getProtoFunc(funcName, proto, currentDynProtoProxy) {
  var protoFunc = proto[funcName]; // Check that the prototype function is not a self reference -- try to avoid stack overflow!

  if (protoFunc === currentDynProtoProxy) {
    // It is so lookup the base prototype
    protoFunc = _getObjProto(proto)[funcName];
  }

  if (typeof protoFunc !== strFunction) {
    _throwTypeError("[" + funcName + "] is not a " + strFunction);
  }

  return protoFunc;
}
/**
 * Add the required dynamic prototype methods to the the class prototype
 * @param proto - The class prototype
 * @param className - The instance classname
 * @param target - The target instance
 * @param baseInstFuncs - The base instance functions
 * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist
 * @ignore
 */


function _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {
  function _createDynamicPrototype(proto, funcName) {
    var dynProtoProxy = function dynProtoProxy() {
      // Use the instance or prototype function
      var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);

      return instFunc.apply(this, arguments);
    }; // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing
    // via which can dynamically replace the prototype function reference)


    dynProtoProxy[DynProxyTag] = 1;
    return dynProtoProxy;
  }

  if (!_isObjectOrArrayPrototype(proto)) {
    var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || {};
    var instFuncs_1 = instFuncTable[className] = instFuncTable[className] || {}; // fetch and assign if as it may not exist yet
    // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable

    if (instFuncTable[DynAllowInstChkTag] !== false) {
      instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;
    }

    _forEachProp(target, function (name) {
      // Only add overridden functions
      if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {
        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function
        instFuncs_1[name] = target[name];
        delete target[name]; // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one

        if (!_hasOwnProperty(proto, name) || proto[name] && !proto[name][DynProxyTag]) {
          proto[name] = _createDynamicPrototype(proto, name);
        }
      }
    });
  }
}
/**
 * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance
 * @param classProto The class prototype instance
 * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy
 * @ignore
 */


function _checkPrototype(classProto, thisTarget) {
  // This method doesn't existing in older browsers (e.g. IE8)
  if (_objGetPrototypeOf) {
    // As this is primarily a coding time check, don't bother checking if running in IE8 or lower
    var visited = [];

    var thisProto = _getObjProto(thisTarget);

    while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {
      if (thisProto === classProto) {
        return true;
      } // This avoids the caller from needing to check whether it's direct base class implements the function or not
      // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.


      visited.push(thisProto);
      thisProto = _getObjProto(thisProto);
    }
  }

  return false;
}
/**
 * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.
 * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.
 * @param target
 * @param unknownValue
 * @ignore
 */


function _getObjName(target, unknownValue) {
  if (_hasOwnProperty(target, Prototype)) {
    // Look like a prototype
    return target.name || unknownValue || UnknownValue;
  }

  return ((target || {})[Constructor] || {}).name || unknownValue || UnknownValue;
}
/**
 * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-
 * - Saves references to all defined base class functions
 * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all "super" functions.
 * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.
 * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is
 * passed both the target "this" and an object that can be used to call any base (super) functions, using this based object in place of
 * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct "this"
 * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions
 * defined in the constructor or some other function (rather than declared as complete typescript functions).
 * ### Usage
 * ```typescript
 * import dynamicProto from "@microsoft/dynamicproto-js";
 * class ExampleClass extends BaseClass {
 *     constructor() {
 *         dynamicProto(ExampleClass, this, (_self, base) => {
 *             // This will define a function that will be converted to a prototype function
 *             _self.newFunc = () => {
 *                 // Access any "this" instance property
 *                 if (_self.someProperty) {
 *                     ...
 *                 }
 *             }
 *             // This will define a function that will be converted to a prototype function
 *             _self.myFunction = () => {
 *                 // Access any "this" instance property
 *                 if (_self.someProperty) {
 *                     // Call the base version of the function that we are overriding
 *                     base.myFunction();
 *                 }
 *                 ...
 *             }
 *             _self.initialize = () => {
 *                 ...
 *             }
 *             // Warnings: While the following will work as _self is simply a reference to
 *             // this, if anyone overrides myFunction() the overridden will be called first
 *             // as the normal JavaScript method resolution will occur and the defined
 *             // _self.initialize() function is actually gets removed from the instance and
 *             // a proxy prototype version is created to reference the created method.
 *             _self.initialize();
 *         });
 *     }
 * }
 * ```
 * @typeparam DPType This is the generic type of the class, used to keep intellisense valid
 * @typeparam DPCls The type that contains the prototype of the current class
 * @param theClass - This is the current class instance which contains the prototype for the current class
 * @param target - The current "this" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.
 * @param delegateFunc - The callback function (closure) that will create the dynamic function
 * @param options - Additional options to configure how the dynamic prototype operates
 */


function dynamicProto(theClass, target, delegateFunc, options) {
  // Make sure that the passed theClass argument looks correct
  if (!_hasOwnProperty(theClass, Prototype)) {
    _throwTypeError("theClass is an invalid class definition.");
  } // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)


  var classProto = theClass[Prototype];

  if (!_checkPrototype(classProto, target)) {
    _throwTypeError("[" + _getObjName(theClass) + "] is not in class hierarchy of [" + _getObjName(target) + "]");
  }

  var className = null;

  if (_hasOwnProperty(classProto, DynClassName)) {
    // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)
    className = classProto[DynClassName];
  } else {
    // As not all browser support name on the prototype creating a unique dynamic one if we have not already
    // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance
    // function table lookup.
    className = DynClassNamePrefix + _getObjName(theClass, "_") + "$" + _dynamicNames;
    _dynamicNames++;
    classProto[DynClassName] = className;
  }

  var perfOptions = dynamicProto[DynProtoDefaultOptions];
  var useBaseInst = !!perfOptions[strUseBaseInst];

  if (useBaseInst && options && options[strUseBaseInst] !== undefined) {
    useBaseInst = !!options[strUseBaseInst];
  } // Get the current instance functions


  var instFuncs = _getInstanceFuncs(target); // Get all of the functions for any base instance (before they are potentially overridden)


  var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst); // Execute the delegate passing in both the current target "this" and "base" function references
  // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support


  delegateFunc(target, baseFuncs); // Don't allow setting instance functions for older IE instances

  var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];

  if (setInstanceFunc && options) {
    setInstanceFunc = !!options[strSetInstFuncs];
  } // Populate the Prototype for any overridden instance functions


  _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);
}
/**
 * Exposes the default global options to allow global configuration, if the global values are disabled these will override
 * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose
 * their internal usage of dynamic proto.
 */


var perfDefaults = {
  setInstFuncs: true,
  useBaseInst: true
}; // And expose for testing

dynamicProto[DynProtoDefaultOptions] = perfDefaults;
/* harmony default export */ var dynamicproto_js = (dynamicProto);
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var LoggingSeverity;

(function (LoggingSeverity) {
  /**
   * Error will be sent as internal telemetry
   */
  LoggingSeverity[LoggingSeverity["CRITICAL"] = 1] = "CRITICAL";
  /**
   * Error will NOT be sent as internal telemetry, and will only be shown in browser console
   */

  LoggingSeverity[LoggingSeverity["WARNING"] = 2] = "WARNING";
})(LoggingSeverity || (LoggingSeverity = {}));
/**
 * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered
 */


var _InternalMessageId = {
  // Non user actionable
  BrowserDoesNotSupportLocalStorage: 0,
  BrowserCannotReadLocalStorage: 1,
  BrowserCannotReadSessionStorage: 2,
  BrowserCannotWriteLocalStorage: 3,
  BrowserCannotWriteSessionStorage: 4,
  BrowserFailedRemovalFromLocalStorage: 5,
  BrowserFailedRemovalFromSessionStorage: 6,
  CannotSendEmptyTelemetry: 7,
  ClientPerformanceMathError: 8,
  ErrorParsingAISessionCookie: 9,
  ErrorPVCalc: 10,
  ExceptionWhileLoggingError: 11,
  FailedAddingTelemetryToBuffer: 12,
  FailedMonitorAjaxAbort: 13,
  FailedMonitorAjaxDur: 14,
  FailedMonitorAjaxOpen: 15,
  FailedMonitorAjaxRSC: 16,
  FailedMonitorAjaxSend: 17,
  FailedMonitorAjaxGetCorrelationHeader: 18,
  FailedToAddHandlerForOnBeforeUnload: 19,
  FailedToSendQueuedTelemetry: 20,
  FailedToReportDataLoss: 21,
  FlushFailed: 22,
  MessageLimitPerPVExceeded: 23,
  MissingRequiredFieldSpecification: 24,
  NavigationTimingNotSupported: 25,
  OnError: 26,
  SessionRenewalDateIsZero: 27,
  SenderNotInitialized: 28,
  StartTrackEventFailed: 29,
  StopTrackEventFailed: 30,
  StartTrackFailed: 31,
  StopTrackFailed: 32,
  TelemetrySampledAndNotSent: 33,
  TrackEventFailed: 34,
  TrackExceptionFailed: 35,
  TrackMetricFailed: 36,
  TrackPVFailed: 37,
  TrackPVFailedCalc: 38,
  TrackTraceFailed: 39,
  TransmissionFailed: 40,
  FailedToSetStorageBuffer: 41,
  FailedToRestoreStorageBuffer: 42,
  InvalidBackendResponse: 43,
  FailedToFixDepricatedValues: 44,
  InvalidDurationValue: 45,
  TelemetryEnvelopeInvalid: 46,
  CreateEnvelopeError: 47,
  // User actionable
  CannotSerializeObject: 48,
  CannotSerializeObjectNonSerializable: 49,
  CircularReferenceDetected: 50,
  ClearAuthContextFailed: 51,
  ExceptionTruncated: 52,
  IllegalCharsInName: 53,
  ItemNotInArray: 54,
  MaxAjaxPerPVExceeded: 55,
  MessageTruncated: 56,
  NameTooLong: 57,
  SampleRateOutOfRange: 58,
  SetAuthContextFailed: 59,
  SetAuthContextFailedAccountName: 60,
  StringValueTooLong: 61,
  StartCalledMoreThanOnce: 62,
  StopCalledWithoutStart: 63,
  TelemetryInitializerFailed: 64,
  TrackArgumentsNotSpecified: 65,
  UrlTooLong: 66,
  SessionStorageBufferFull: 67,
  CannotAccessCookie: 68,
  IdTooLong: 69,
  InvalidEvent: 70,
  FailedMonitorAjaxSetRequestHeader: 71,
  SendBrowserInfoOnUserInit: 72,
  PluginException: 73,
  NotificationException: 74,
  SnippetScriptLoadFailure: 99,
  InvalidInstrumentationKey: 100,
  CannotParseAiBlobValue: 101,
  InvalidContentBlob: 102,
  TrackPageActionEventFailed: 103,
  FailedAddingCustomDefinedRequestContext: 104,
  InMemoryStorageBufferFull: 105
};
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/HelperFuncs.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
 // RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly
// Added to help with minfication

var strOnPrefix = "on";
var strAttachEvent = "attachEvent";
var strAddEventHelper = "addEventListener";
var strDetachEvent = "detachEvent";
var strRemoveEventListener = "removeEventListener";
var _objDefineProperty = Constants_ObjDefineProperty;
var _objFreeze = Constants_ObjClass.freeze;
var _objSeal = Constants_ObjClass.seal;
function objToString(obj) {
  return Constants_ObjProto.toString.call(obj);
}
function isTypeof(value, theType) {
  return typeof value === theType;
}
function isUndefined(value) {
  return value === undefined || typeof value === Constants_strShimUndefined;
}
function isNotUndefined(value) {
  return !isUndefined(value);
}
function isNullOrUndefined(value) {
  return value === null || isUndefined(value);
}
function isNotNullOrUndefined(value) {
  return !isNullOrUndefined(value);
}
function HelperFuncs_hasOwnProperty(obj, prop) {
  return obj && Constants_ObjHasOwnProperty.call(obj, prop);
}
function isObject(value) {
  // Changing to inline for performance
  return typeof value === strShimObject;
}
function isFunction(value) {
  // Changing to inline for performance
  return typeof value === Constants_strShimFunction;
}
/**
 * Binds the specified function to an event, so that the function gets called whenever the event fires on the object
 * @param obj Object to add the event too.
 * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without "on" prefix
 * @param handlerRef Pointer that specifies the function to call when event fires
 * @param useCapture [Optional] Defaults to false
 * @returns True if the function was bound successfully to the event, otherwise false
 */

function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {
  if (useCapture === void 0) {
    useCapture = false;
  }

  var result = false;

  if (!isNullOrUndefined(obj)) {
    try {
      if (!isNullOrUndefined(obj[strAddEventHelper])) {
        // all browsers except IE before version 9
        obj[strAddEventHelper](eventNameWithoutOn, handlerRef, useCapture);
        result = true;
      } else if (!isNullOrUndefined(obj[strAttachEvent])) {
        // IE before version 9
        obj[strAttachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);
        result = true;
      }
    } catch (e) {// Just Ignore any error so that we don't break any execution path
    }
  }

  return result;
}
/**
 * Removes an event handler for the specified event
 * @param Object to remove the event from
 * @param eventNameWithoutOn {string} - The name of the event
 * @param handlerRef {any} - The callback function that needs to be executed for the given event
 * @param useCapture [Optional] Defaults to false
 */

function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {
  if (useCapture === void 0) {
    useCapture = false;
  }

  if (!isNullOrUndefined(obj)) {
    try {
      if (!isNullOrUndefined(obj[strRemoveEventListener])) {
        obj[strRemoveEventListener](eventNameWithoutOn, handlerRef, useCapture);
      } else if (!isNullOrUndefined(obj[strDetachEvent])) {
        obj[strDetachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);
      }
    } catch (e) {// Just Ignore any error so that we don't break any execution path
    }
  }
}
/**
 * Validates that the string name conforms to the JS IdentifierName specification and if not
 * normalizes the name so that it would. This method does not identify or change any keywords
 * meaning that if you pass in a known keyword the same value will be returned.
 * This is a simplified version
 * @param name The name to validate
 */

function normalizeJsName(name) {
  var value = name;
  var match = /([^\w\d_$])/g;

  if (match.test(name)) {
    value = name.replace(match, "_");
  }

  return value;
}
/**
 * This is a helper function for the equivalent of arForEach(objKeys(target), callbackFn), this is a
 * performance optimization to avoid the creation of a new array for large objects
 * @param target The target object to find and process the keys
 * @param callbackfn The function to call with the details
 */

function objForEachKey(target, callbackfn) {
  if (target) {
    for (var prop in target) {
      if (Constants_ObjHasOwnProperty.call(target, prop)) {
        callbackfn.call(target, prop, target[prop]);
      }
    }
  }
}
/**
 * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.
 * @param value - The value to check whether it ends with the search value.
 * @param search - The characters to be searched for at the end of the value.
 * @returns true if the given search value is found at the end of the string, otherwise false.
 */

function strEndsWith(value, search) {
  if (value && search) {
    var searchLen = search.length;
    var valLen = value.length;

    if (value === search) {
      return true;
    } else if (valLen >= searchLen) {
      var pos = valLen - 1;

      for (var lp = searchLen - 1; lp >= 0; lp--) {
        if (value[pos] != search[lp]) {
          return false;
        }

        pos--;
      }

      return true;
    }
  }

  return false;
}
/**
 * The strStartsWith() method determines whether a string starts with the characters of the specified string, returning true or false as appropriate.
 * @param value - The value to check whether it ends with the search value.
 * @param checkValue - The characters to be searched for at the start of the value.
 * @returns true if the given search value is found at the start of the string, otherwise false.
 */

function strStartsWith(value, checkValue) {
  // Using helper for performance and because string startsWith() is not available on IE
  var result = false;

  if (value && checkValue) {
    var chkLen = checkValue.length;

    if (value === checkValue) {
      return true;
    } else if (value.length >= chkLen) {
      for (var lp = 0; lp < chkLen; lp++) {
        if (value[lp] !== checkValue[lp]) {
          return false;
        }
      }

      result = true;
    }
  }

  return result;
}
/**
 * A simple wrapper (for minification support) to check if the value contains the search string.
 * @param value - The string value to check for the existence of the search value
 * @param search - The value search within the value
 */

function strContains(value, search) {
  if (value && search) {
    return value.indexOf(search) !== -1;
  }

  return false;
}
/**
 * Check if an object is of type Date
 */

function isDate(obj) {
  return objToString(obj) === "[object Date]";
}
/**
 * Check if an object is of type Array
 */

function isArray(obj) {
  return objToString(obj) === "[object Array]";
}
/**
 * Check if an object is of type Error
 */

function isError(obj) {
  return objToString(obj) === "[object Error]";
}
/**
 * Checks if the type of value is a string.
 * @param {any} value - Value to be checked.
 * @return {boolean} True if the value is a string, false otherwise.
 */

function HelperFuncs_isString(value) {
  // Changing to inline for performance
  return typeof value === "string";
}
/**
 * Checks if the type of value is a number.
 * @param {any} value - Value to be checked.
 * @return {boolean} True if the value is a number, false otherwise.
 */

function isNumber(value) {
  // Changing to inline for performance
  return typeof value === "number";
}
/**
 * Checks if the type of value is a boolean.
 * @param {any} value - Value to be checked.
 * @return {boolean} True if the value is a boolean, false otherwise.
 */

function isBoolean(value) {
  // Changing to inline for performance
  return typeof value === "boolean";
}
/**
 * Checks if the type of value is a Symbol.
 * This only returns a boolean as returning value is Symbol will cause issues for older TypeScript consumers
 * @param {any} value - Value to be checked.
 * @return {boolean} True if the value is a Symbol, false otherwise.
 */

function isSymbol(value) {
  return typeof value === "symbol";
}
/**
 * Convert a date to I.S.O. format in IE8
 */

function toISOString(date) {
  if (isDate(date)) {
    var pad = function pad(num) {
      var r = String(num);

      if (r.length === 1) {
        r = "0" + r;
      }

      return r;
    };

    return date.getUTCFullYear() + "-" + pad(date.getUTCMonth() + 1) + "-" + pad(date.getUTCDate()) + "T" + pad(date.getUTCHours()) + ":" + pad(date.getUTCMinutes()) + ":" + pad(date.getUTCSeconds()) + "." + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5) + "Z";
  }
}
/**
 * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers
 * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype
 * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would
 * cause a testing requirement to test with and without the implementations
 * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop
 * @param thisArg  [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
 */

function arrForEach(arr, callbackfn, thisArg) {
  var len = arr.length;

  try {
    for (var idx = 0; idx < len; idx++) {
      if (idx in arr) {
        if (callbackfn.call(thisArg || arr, arr[idx], idx, arr) === -1) {
          break;
        }
      }
    }
  } catch (e) {// This can happen with some native browser objects, but should not happen for the type we are checking for
  }
}
/**
 * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers
 * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype
 * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would
 * cause a testing requirement to test with and without the implementations
 * @param searchElement The value to locate in the array.
 * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.
 */

function HelperFuncs_arrIndexOf(arr, searchElement, fromIndex) {
  var len = arr.length;
  var from = fromIndex || 0;

  try {
    for (var lp = Math.max(from >= 0 ? from : len - Math.abs(from), 0); lp < len; lp++) {
      if (lp in arr && arr[lp] === searchElement) {
        return lp;
      }
    }
  } catch (e) {// This can happen with some native browser objects, but should not happen for the type we are checking for
  }

  return -1;
}
/**
 * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists
 * to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page
 * checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx
 * implementation if it exists as this would cause a testing requirement to test with and without the implementations
 * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.
 * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
 */

function arrMap(arr, callbackfn, thisArg) {
  var len = arr.length;

  var _this = thisArg || arr;

  var results = new Array(len);

  try {
    for (var lp = 0; lp < len; lp++) {
      if (lp in arr) {
        results[lp] = callbackfn.call(_this, arr[lp], arr);
      }
    }
  } catch (e) {// This can happen with some native browser objects, but should not happen for the type we are checking for
  }

  return results;
}
/**
 * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is
 * provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define
 * Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency
 * this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations
 * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.
 * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
 */

function arrReduce(arr, callbackfn, initialValue) {
  var len = arr.length;
  var lp = 0;
  var value; // Specifically checking the number of passed arguments as the value could be anything

  if (arguments.length >= 3) {
    value = arguments[2];
  } else {
    while (lp < len && !(lp in arr)) {
      lp++;
    }

    value = arr[lp++];
  }

  while (lp < len) {
    if (lp in arr) {
      value = callbackfn(value, arr[lp], lp, arr);
    }

    lp++;
  }

  return value;
}
/**
 * helper method to trim strings (IE8 does not implement String.prototype.trim)
 */

function strTrim(str) {
  if (typeof str !== "string") {
    return str;
  }

  return str.replace(/^\s+|\s+$/g, "");
}

var _objKeysHasDontEnumBug = !{
  toString: null
}.propertyIsEnumerable("toString");

var _objKeysDontEnums = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"];
/**
 * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers
 * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.
 * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations
 * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
 */

function objKeys(obj) {
  var objType = typeof obj;

  if (objType !== Constants_strShimFunction && (objType !== strShimObject || obj === null)) {
    Helpers_throwTypeError("objKeys called on non-object");
  }

  var result = [];

  for (var prop in obj) {
    if (obj && Constants_ObjHasOwnProperty.call(obj, prop)) {
      result.push(prop);
    }
  }

  if (_objKeysHasDontEnumBug) {
    var dontEnumsLength = _objKeysDontEnums.length;

    for (var lp = 0; lp < dontEnumsLength; lp++) {
      if (obj && Constants_ObjHasOwnProperty.call(obj, _objKeysDontEnums[lp])) {
        result.push(_objKeysDontEnums[lp]);
      }
    }
  }

  return result;
}
/**
 * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with
 * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded
 * and executed in an ES3 container, providing basic IE8 compatibility.
 * @param target The object on which to define the property.
 * @param prop The name of the property to be defined or modified.
 * @param getProp The getter function to wire against the getter.
 * @param setProp The setter function to wire against the setter.
 * @returns True if it was able to create the accessors otherwise false
 */

function objDefineAccessors(target, prop, getProp, setProp) {
  if (_objDefineProperty) {
    try {
      var descriptor = {
        enumerable: true,
        configurable: true
      };

      if (getProp) {
        descriptor.get = getProp;
      }

      if (setProp) {
        descriptor.set = setProp;
      }

      _objDefineProperty(target, prop, descriptor);

      return true;
    } catch (e) {// IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw
      // We will just ignore this here.
    }
  }

  return false;
}
function objFreeze(value) {
  if (_objFreeze) {
    value = _objFreeze(value);
  }

  return value;
}
function objSeal(value) {
  if (_objSeal) {
    value = _objSeal(value);
  }

  return value;
}
/**
 * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less)
 * https://caniuse.com/#search=Date.now
 */

function dateNow() {
  var dt = Date;

  if (dt.now) {
    return dt.now();
  }

  return new dt().getTime();
}
/**
 * Returns the name of object if it's an Error. Otherwise, returns empty string.
 */

function getExceptionName(object) {
  if (isError(object)) {
    return object.name;
  }

  return "";
}
/**
 * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk
 * function will only be called if the new value is no equal to the original value.
 * @param target - The target object
 * @param field - The key of the target
 * @param value - The value to set
 * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set
 * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)
 * @returns The existing or new value, depending what was set
 */

function setValue(target, field, value, valChk, srcChk) {
  var theValue = value;

  if (target) {
    theValue = target[field];

    if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {
      theValue = value;
      target[field] = theValue;
    }
  }

  return theValue;
}
/**
 * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it
 * @param target - The target object to return or set the default value
 * @param field - The key for the field to set on the target
 * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added
 */

function getSetValue(target, field, defValue) {
  var theValue;

  if (target) {
    theValue = target[field];

    if (!theValue && isNullOrUndefined(theValue)) {
      // Supports having the default as null
      theValue = !isUndefined(defValue) ? defValue : {};
      target[field] = theValue;
    }
  } else {
    // Expanded for performance so we only check defValue if required
    theValue = !isUndefined(defValue) ? defValue : {};
  }

  return theValue;
}
function isNotTruthy(value) {
  return !value;
}
function isTruthy(value) {
  return !!value;
}
function throwError(message) {
  throw new Error(message);
}
/**
 * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from
 * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential
 * implementation issues by assigning prototype functions as instance ones
 *
 * This method is the primary method used to "update" the snippet proxy with the ultimate implementations.
 *
 * Special ES3 Notes:
 * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the
 * properties of "referenced" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the
 * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.
 * @param target - The target object to be assigned with the source properties and functions
 * @param source - The source object which will be assigned / called by setting / calling the targets proxies
 * @param chkSet - An optional callback to determine whether a specific property/function should be proxied
 * @memberof Initialization
 */

function proxyAssign(target, source, chkSet) {
  if (target && source && target !== source && isObject(target) && isObject(source)) {
    var _loop_1 = function _loop_1(field) {
      if (HelperFuncs_isString(field)) {
        var value = source[field];

        if (isFunction(value)) {
          if (!chkSet || chkSet(field, true, source, target)) {
            // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function
            target[field] = function (funcName) {
              return function () {
                // Capture the original arguments passed to the method
                var originalArguments = arguments;
                return source[funcName].apply(source, originalArguments);
              };
            }(field);
          }
        } else if (!chkSet || chkSet(field, false, source, target)) {
          if (HelperFuncs_hasOwnProperty(target, field)) {
            // Remove any previous instance property
            delete target[field];
          }

          if (!objDefineAccessors(target, field, function () {
            return source[field];
          }, function (theValue) {
            source[field] = theValue;
          })) {
            // Unable to create an accessor, so just assign the values as a fallback
            // -- this will (mostly) work for objects
            // -- but will fail for accessing primitives (if the source changes it) and all types of "setters" as the source won't be modified
            target[field] = value;
          }
        }
      }
    }; // effectively apply/proxy full source to the target instance


    for (var field in source) {
      _loop_1(field);
    }
  }

  return target;
}
/**
 * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.
 * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance
 * @param defaults Simple helper
 */

function createClassFromInterface(defaults) {
  return function () {
    function class_1() {
      var _this_1 = this;

      if (defaults) {
        objForEachKey(defaults, function (field, value) {
          _this_1[field] = value;
        });
      }
    }

    return class_1;
  }();
}
/**
 * A helper function to assist with JIT performance for objects that have properties added / removed dynamically
 * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this
 * function after you have finished "updating" the object, calling this within loops reduces or defeats the benefits.
 * This helps when iterating using for..in, objKeys() and objForEach()
 * @param theObject - The object to be optimized if possible
 */

function optimizeObject(theObject) {
  // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties
  // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent
  if (theObject) {
    theObject = Constants_ObjClass(ObjAssign ? ObjAssign({}, theObject) : theObject);
  }

  return theObject;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/EnvUtils.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */




/**
 * This file exists to hold environment utilities that are required to check and
 * validate the current operating environment. Unless otherwise required, please
 * only use defined methods (functions) in this class so that users of these
 * functions/properties only need to include those that are used within their own modules.
 */

var strWindow = "window";
var strDocument = "document";
var strNavigator = "navigator";
var strHistory = "history";
var strLocation = "location";
var strConsole = "console";
var strPerformance = "performance";
var strJSON = "JSON";
var strCrypto = "crypto";
var strMsCrypto = "msCrypto";
var strReactNative = "ReactNative";
var strMsie = "msie";
var strTrident = "trident/";
var _isTrident = null;
var _navUserAgentCheck = null;
var _enableMocks = false;
var _useXDomainRequest = null;
var _beaconsSupported = null;

function _hasProperty(theClass, property) {
  var supported = false;

  if (theClass) {
    try {
      supported = property in theClass;

      if (!supported) {
        var proto = theClass[Constants_strShimPrototype];

        if (proto) {
          supported = property in proto;
        }
      }
    } catch (e) {// Do Nothing
    }

    if (!supported) {
      try {
        var tmp = new theClass();
        supported = !isUndefined(tmp[property]);
      } catch (e) {// Do Nothing
      }
    }
  }

  return supported;
}
/**
 * Enable the lookup of test mock objects if requested
 * @param enabled
 */


function setEnableEnvMocks(enabled) {
  _enableMocks = enabled;
}
/**
 * Return the named global object if available, will return null if the object is not available.
 * @param name The globally named object
 */

function getGlobalInst(name) {
  var gbl = getGlobal();

  if (gbl && gbl[name]) {
    return gbl[name];
  } // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window


  if (name === strWindow && hasWindow()) {
    // tslint:disable-next-line: no-angle-bracket-type-assertion
    return window;
  }

  return null;
}
/**
 * Checks if window object is available, this is required as we support the API running without a
 * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window
 * object to a local variable or pass as an argument an "Uncaught ReferenceError: window is not defined"
 * exception will be thrown.
 * Defined as a function to support lazy / late binding environments.
 */

function hasWindow() {
  return Boolean(typeof window === strShimObject && window);
}
/**
 * Returns the global window object if it is present otherwise null.
 * This helper is used to access the window object without causing an exception
 * "Uncaught ReferenceError: window is not defined"
 */

function getWindow() {
  if (hasWindow()) {
    return window;
  } // Return the global instance or null


  return getGlobalInst(strWindow);
}
/**
 * Checks if document object is available, this is required as we support the API running without a
 * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document
 * object to a local variable or pass as an argument an "Uncaught ReferenceError: document is not defined"
 * exception will be thrown.
 * Defined as a function to support lazy / late binding environments.
 */

function hasDocument() {
  return Boolean(typeof document === strShimObject && document);
}
/**
 * Returns the global document object if it is present otherwise null.
 * This helper is used to access the document object without causing an exception
 * "Uncaught ReferenceError: document is not defined"
 */

function EnvUtils_getDocument() {
  if (hasDocument()) {
    return document;
  }

  return getGlobalInst(strDocument);
}
/**
 * Checks if navigator object is available, this is required as we support the API running without a
 * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator
 * object to a local variable or pass as an argument an "Uncaught ReferenceError: navigator is not defined"
 * exception will be thrown.
 * Defined as a function to support lazy / late binding environments.
 */

function hasNavigator() {
  return Boolean(typeof navigator === strShimObject && navigator);
}
/**
 * Returns the global navigator object if it is present otherwise null.
 * This helper is used to access the navigator object without causing an exception
 * "Uncaught ReferenceError: navigator is not defined"
 */

function getNavigator() {
  if (hasNavigator()) {
    return navigator;
  }

  return getGlobalInst(strNavigator);
}
/**
 * Checks if history object is available, this is required as we support the API running without a
 * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history
 * object to a local variable or pass as an argument an "Uncaught ReferenceError: history is not defined"
 * exception will be thrown.
 * Defined as a function to support lazy / late binding environments.
 */

function hasHistory() {
  return Boolean(typeof history === strShimObject && history);
}
/**
 * Returns the global history object if it is present otherwise null.
 * This helper is used to access the history object without causing an exception
 * "Uncaught ReferenceError: history is not defined"
 */

function getHistory() {
  if (hasHistory()) {
    return history;
  }

  return getGlobalInst(strHistory);
}
/**
 * Returns the global location object if it is present otherwise null.
 * This helper is used to access the location object without causing an exception
 * "Uncaught ReferenceError: location is not defined"
 */

function getLocation(checkForMock) {
  if (checkForMock && _enableMocks) {
    var mockLocation = getGlobalInst("__mockLocation");

    if (mockLocation) {
      return mockLocation;
    }
  }

  if (typeof location === strShimObject && location) {
    return location;
  }

  return getGlobalInst(strLocation);
}
/**
 * Returns the global console object
 */

function getConsole() {
  if (typeof console !== Constants_strShimUndefined) {
    return console;
  }

  return getGlobalInst(strConsole);
}
/**
 * Returns the performance object if it is present otherwise null.
 * This helper is used to access the performance object from the current
 * global instance which could be window or globalThis for a web worker
 */

function getPerformance() {
  return getGlobalInst(strPerformance);
}
/**
 * Checks if JSON object is available, this is required as we support the API running without a
 * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history
 * object to a local variable or pass as an argument an "Uncaught ReferenceError: JSON is not defined"
 * exception will be thrown.
 * Defined as a function to support lazy / late binding environments.
 */

function hasJSON() {
  return Boolean(typeof JSON === strShimObject && JSON || getGlobalInst(strJSON) !== null);
}
/**
 * Returns the global JSON object if it is present otherwise null.
 * This helper is used to access the JSON object without causing an exception
 * "Uncaught ReferenceError: JSON is not defined"
 */

function getJSON() {
  if (hasJSON()) {
    return JSON || getGlobalInst(strJSON);
  }

  return null;
}
/**
 * Returns the crypto object if it is present otherwise null.
 * This helper is used to access the crypto object from the current
 * global instance which could be window or globalThis for a web worker
 */

function getCrypto() {
  return getGlobalInst(strCrypto);
}
/**
 * Returns the crypto object if it is present otherwise null.
 * This helper is used to access the crypto object from the current
 * global instance which could be window or globalThis for a web worker
 */

function getMsCrypto() {
  return getGlobalInst(strMsCrypto);
}
/**
 * Returns whether the environment is reporting that we are running in a React Native Environment
 */

function isReactNative() {
  // If running in React Native, navigator.product will be populated
  var nav = getNavigator();

  if (nav && nav.product) {
    return nav.product === strReactNative;
  }

  return false;
}
/**
 * Identifies whether the current environment appears to be IE
 */

function isIE() {
  var nav = getNavigator();

  if (nav && (nav.userAgent !== _navUserAgentCheck || _isTrident === null)) {
    // Added to support test mocking of the user agent
    _navUserAgentCheck = nav.userAgent;

    var userAgent = (_navUserAgentCheck || "").toLowerCase();

    _isTrident = strContains(userAgent, strMsie) || strContains(userAgent, strTrident);
  }

  return _isTrident;
}
/**
 * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise
 */

function getIEVersion(userAgentStr) {
  if (userAgentStr === void 0) {
    userAgentStr = null;
  }

  if (!userAgentStr) {
    var navigator_1 = getNavigator() || {};
    userAgentStr = navigator_1 ? (navigator_1.userAgent || "").toLowerCase() : "";
  }

  var ua = (userAgentStr || "").toLowerCase();

  if (strContains(ua, strMsie)) {
    return parseInt(ua.split(strMsie)[1]);
  } else if (strContains(ua, strTrident)) {
    var tridentVer = parseInt(ua.split(strTrident)[1]);

    if (tridentVer) {
      return tridentVer + 4;
    }
  }

  return null;
}
/**
 * Returns string representation of an object suitable for diagnostics logging.
 */

function dumpObj(object) {
  var objectTypeDump = Object[Constants_strShimPrototype].toString.call(object);
  var propertyValueDump = "";

  if (objectTypeDump === "[object Error]") {
    propertyValueDump = "{ stack: '" + object.stack + "', message: '" + object.message + "', name: '" + object.name + "'";
  } else if (hasJSON()) {
    propertyValueDump = getJSON().stringify(object);
  }

  return objectTypeDump + propertyValueDump;
}
function isSafari(userAgentStr) {
  if (!userAgentStr || !isString(userAgentStr)) {
    var navigator_2 = getNavigator() || {};
    userAgentStr = navigator_2 ? (navigator_2.userAgent || "").toLowerCase() : "";
  }

  var ua = (userAgentStr || "").toLowerCase();
  return ua.indexOf("safari") >= 0;
}
/**
 * Checks if HTML5 Beacons are supported in the current environment.
 * @returns True if supported, false otherwise.
 */

function isBeaconsSupported() {
  if (_beaconsSupported === null) {
    _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);
  }

  return _beaconsSupported;
}
/**
 * Checks if the Fetch API is supported in the current environment.
 * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported
 * @returns True if supported, otherwise false
 */

function isFetchSupported(withKeepAlive) {
  var isSupported = false;

  try {
    var fetchApi = getGlobalInst("fetch");
    isSupported = !!fetchApi;
    var request = getGlobalInst("Request");

    if (isSupported && withKeepAlive && request) {
      isSupported = _hasProperty(request, "keepalive");
    }
  } catch (e) {// Just Swallow any failure during availability checks
  }

  return isSupported;
}
function useXDomainRequest() {
  if (_useXDomainRequest === null) {
    _useXDomainRequest = typeof XDomainRequest !== undefined;

    if (_useXDomainRequest && isXhrSupported()) {
      _useXDomainRequest = _useXDomainRequest && !_hasProperty(getGlobalInst("XMLHttpRequest"), "withCredentials");
    }
  }

  return _useXDomainRequest;
}
/**
 * Checks if XMLHttpRequest is supported
 * @returns True if supported, otherwise false
 */

function isXhrSupported() {
  var isSupported = false;

  try {
    var xmlHttpRequest = getGlobalInst("XMLHttpRequest");
    isSupported = !!xmlHttpRequest;
  } catch (e) {// Just Swallow any failure during availability checks
  }

  return isSupported;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






/**
 * For user non actionable traces use AI Internal prefix.
 */

var AiNonUserActionablePrefix = "AI (Internal): ";
/**
 * Prefix of the traces in portal.
 */

var AiUserActionablePrefix = "AI: ";
/**
 *  Session storage key for the prefix for the key indicating message type already logged
 */

var AIInternalMessagePrefix = "AITR_";
var strErrorToConsole = "errorToConsole";
var strWarnToConsole = "warnToConsole";

function _sanitizeDiagnosticText(text) {
  if (text) {
    return "\"" + text.replace(/\"/g, "") + "\"";
  }

  return "";
}

function _logToConsole(func, message) {
  var theConsole = getConsole();

  if (!!theConsole) {
    var logFunc = "log";

    if (theConsole[func]) {
      logFunc = func;
    }

    if (isFunction(theConsole[logFunc])) {
      theConsole[logFunc](message);
    }
  }
}

var _InternalLogMessage = function () {
  function _InternalLogMessage(msgId, msg, isUserAct, properties) {
    if (isUserAct === void 0) {
      isUserAct = false;
    }

    var _self = this;

    _self.messageId = msgId;
    _self.message = (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) + msgId;
    var strProps = "";

    if (hasJSON()) {
      strProps = getJSON().stringify(properties);
    }

    var diagnosticText = (msg ? " message:" + _sanitizeDiagnosticText(msg) : "") + (properties ? " props:" + _sanitizeDiagnosticText(strProps) : "");
    _self.message += diagnosticText;
  }

  _InternalLogMessage.dataType = "MessageData";
  return _InternalLogMessage;
}();


function safeGetLogger(core, config) {
  return (core || {}).logger || new DiagnosticLogger(config);
}

var DiagnosticLogger = function () {
  function DiagnosticLogger(config) {
    this.identifier = "DiagnosticLogger";
    /**
     * The internal logging queue
     */

    this.queue = [];
    /**
     * Count of internal messages sent
     */

    var _messageCount = 0;
    /**
     * Holds information about what message types were already logged to console or sent to server.
     */

    var _messageLogged = {};
    dynamicproto_js(DiagnosticLogger, this, function (_self) {
      if (isNullOrUndefined(config)) {
        config = {};
      }

      _self.consoleLoggingLevel = function () {
        return _getConfigValue("loggingLevelConsole", 0);
      };

      _self.telemetryLoggingLevel = function () {
        return _getConfigValue("loggingLevelTelemetry", 1);
      };

      _self.maxInternalMessageLimit = function () {
        return _getConfigValue("maxMessageLimit", 25);
      };

      _self.enableDebugExceptions = function () {
        return _getConfigValue("enableDebugExceptions", false);
      };
      /**
       * This method will throw exceptions in debug mode or attempt to log the error as a console warning.
       * @param severity {LoggingSeverity} - The severity of the log message
       * @param message {_InternalLogMessage} - The log message.
       */


      _self.throwInternal = function (severity, msgId, msg, properties, isUserAct) {
        if (isUserAct === void 0) {
          isUserAct = false;
        }

        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);

        if (_self.enableDebugExceptions()) {
          throw message;
        } else {
          // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist
          var logFunc = severity === LoggingSeverity.CRITICAL ? strErrorToConsole : strWarnToConsole;

          if (!isUndefined(message.message)) {
            var logLevel = _self.consoleLoggingLevel();

            if (isUserAct) {
              // check if this message type was already logged to console for this page view and if so, don't log it again
              var messageKey = +message.messageId;

              if (!_messageLogged[messageKey] && logLevel >= severity) {
                _self[logFunc](message.message);

                _messageLogged[messageKey] = true;
              }
            } else {
              // Only log traces if the console Logging Level is >= the throwInternal severity level
              if (logLevel >= severity) {
                _self[logFunc](message.message);
              }
            }

            _self.logInternalMessage(severity, message);
          }
        }
      };
      /**
       * This will write a warning to the console if possible
       * @param message {string} - The warning message
       */


      _self.warnToConsole = function (message) {
        _logToConsole("warn", message);
      };
      /**
       * This will write an error to the console if possible
       * @param message {string} - The error message
       */


      _self.errorToConsole = function (message) {
        _logToConsole("error", message);
      };
      /**
       * Resets the internal message count
       */


      _self.resetInternalMessageCount = function () {
        _messageCount = 0;
        _messageLogged = {};
      };
      /**
       * Logs a message to the internal queue.
       * @param severity {LoggingSeverity} - The severity of the log message
       * @param message {_InternalLogMessage} - The message to log.
       */


      _self.logInternalMessage = function (severity, message) {
        if (_areInternalMessagesThrottled()) {
          return;
        } // check if this message type was already logged for this session and if so, don't log it again


        var logMessage = true;
        var messageKey = AIInternalMessagePrefix + message.messageId; // if the session storage is not available, limit to only one message type per page view

        if (_messageLogged[messageKey]) {
          logMessage = false;
        } else {
          _messageLogged[messageKey] = true;
        }

        if (logMessage) {
          // Push the event in the internal queue
          if (severity <= _self.telemetryLoggingLevel()) {
            _self.queue.push(message);

            _messageCount++;
          } // When throttle limit reached, send a special event


          if (_messageCount === _self.maxInternalMessageLimit()) {
            var throttleLimitMessage = "Internal events throttle limit per PageView reached for this app.";
            var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);

            _self.queue.push(throttleMessage);

            _self.warnToConsole(throttleLimitMessage);
          }
        }
      };

      function _getConfigValue(name, defValue) {
        var value = config[name];

        if (!isNullOrUndefined(value)) {
          return value;
        }

        return defValue;
      }

      function _areInternalMessagesThrottled() {
        return _messageCount >= _self.maxInternalMessageLimit();
      }
    });
  } // Removed Stub for DiagnosticLogger.prototype.enableDebugExceptions.
  // Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.
  // Removed Stub for DiagnosticLogger.prototype.telemetryLoggingLevel.
  // Removed Stub for DiagnosticLogger.prototype.maxInternalMessageLimit.
  // Removed Stub for DiagnosticLogger.prototype.throwInternal.
  // Removed Stub for DiagnosticLogger.prototype.warnToConsole.
  // Removed Stub for DiagnosticLogger.prototype.errorToConsole.
  // Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.
  // Removed Stub for DiagnosticLogger.prototype.logInternalMessage.


  return DiagnosticLogger;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/PerfManager.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var strExecutionContextKey = "ctx";
var _defaultPerfManager = null;

var PerfEvent = function () {
  function PerfEvent(name, payloadDetails, isAsync) {
    var _self = this;

    var accessorDefined = false;
    _self.start = dateNow();
    _self.name = name;
    _self.isAsync = isAsync;

    _self.isChildEvt = function () {
      return false;
    };

    if (isFunction(payloadDetails)) {
      // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback
      var theDetails_1;
      accessorDefined = objDefineAccessors(_self, "payload", function () {
        // Delay the execution of the payloadDetails until needed
        if (!theDetails_1 && isFunction(payloadDetails)) {
          theDetails_1 = payloadDetails(); // clear it out now so the referenced objects can be garbage collected

          payloadDetails = null;
        }

        return theDetails_1;
      });
    }

    _self.getCtx = function (key) {
      if (key) {
        // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)
        if (key === PerfEvent.ParentContextKey || key === PerfEvent.ChildrenContextKey) {
          return _self[key];
        }

        return (_self[strExecutionContextKey] || {})[key];
      }

      return null;
    };

    _self.setCtx = function (key, value) {
      if (key) {
        // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)
        if (key === PerfEvent.ParentContextKey) {
          // Simple assumption, if we are setting a parent then we must be a child
          if (!_self[key]) {
            _self.isChildEvt = function () {
              return true;
            };
          }

          _self[key] = value;
        } else if (key === PerfEvent.ChildrenContextKey) {
          _self[key] = value;
        } else {
          var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};
          ctx[key] = value;
        }
      }
    };

    _self.complete = function () {
      var childTime = 0;

      var childEvts = _self.getCtx(PerfEvent.ChildrenContextKey);

      if (isArray(childEvts)) {
        for (var lp = 0; lp < childEvts.length; lp++) {
          var childEvt = childEvts[lp];

          if (childEvt) {
            childTime += childEvt.time;
          }
        }
      }

      _self.time = dateNow() - _self.start;
      _self.exTime = _self.time - childTime;

      _self.complete = function () {};

      if (!accessorDefined && isFunction(payloadDetails)) {
        // If we couldn't define the property set during complete -- to minimize the perf impact until after the time
        _self.payload = payloadDetails();
      }
    };
  }

  PerfEvent.ParentContextKey = "parent";
  PerfEvent.ChildrenContextKey = "childEvts";
  return PerfEvent;
}();



var PerfManager = function () {
  function PerfManager(manager) {
    /**
     * General bucket used for execution context set and retrieved via setCtx() and getCtx.
     * Defined as private so it can be visualized via the DebugPlugin
     */
    this.ctx = {};
    dynamicproto_js(PerfManager, this, function (_self) {
      _self.create = function (src, payloadDetails, isAsync) {
        // TODO (@MSNev): at some point we will want to add additional configuration to "select" which events to instrument
        // for now this is just a simple do everything.
        return new PerfEvent(src, payloadDetails, isAsync);
      };

      _self.fire = function (perfEvent) {
        if (perfEvent) {
          perfEvent.complete();

          if (manager && isFunction(manager.perfEvent)) {
            manager.perfEvent(perfEvent);
          }
        }
      };

      _self.setCtx = function (key, value) {
        if (key) {
          var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};
          ctx[key] = value;
        }
      };

      _self.getCtx = function (key) {
        return (_self[strExecutionContextKey] || {})[key];
      };
    });
  } // Removed Stub for PerfManager.prototype.create.
  // Removed Stub for PerfManager.prototype.fire.
  // Removed Stub for PerfManager.prototype.setCtx.
  // Removed Stub for PerfManager.prototype.getCtx.


  return PerfManager;
}();


var doPerfActiveKey = "CoreUtils.doPerf";
/**
 * Helper function to wrap a function with a perf event
 * @param mgrSource - The Performance Manager or a Performance provider source (may be null)
 * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)
 * @param func - The function to call and measure
 * @param details - A function to return the payload details
 * @param isAsync - Is the event / function being call asynchronously or synchronously
 */

function doPerf(mgrSource, getSource, func, details, isAsync) {
  if (mgrSource) {
    var perfMgr = mgrSource;

    if (isFunction(perfMgr["getPerfMgr"])) {
      // Looks like a perf manager provider object
      perfMgr = perfMgr["getPerfMgr"]();
    }

    if (perfMgr) {
      var perfEvt = void 0;
      var currentActive = perfMgr.getCtx(doPerfActiveKey);

      try {
        perfEvt = perfMgr.create(getSource(), details, isAsync);

        if (perfEvt) {
          if (currentActive && perfEvt.setCtx) {
            perfEvt.setCtx(PerfEvent.ParentContextKey, currentActive);

            if (currentActive.getCtx && currentActive.setCtx) {
              var children = currentActive.getCtx(PerfEvent.ChildrenContextKey);

              if (!children) {
                children = [];
                currentActive.setCtx(PerfEvent.ChildrenContextKey, children);
              }

              children.push(perfEvt);
            }
          } // Set this event as the active event now


          perfMgr.setCtx(doPerfActiveKey, perfEvt);
          return func(perfEvt);
        }
      } catch (ex) {
        if (perfEvt && perfEvt.setCtx) {
          perfEvt.setCtx("exception", ex);
        }
      } finally {
        // fire the perf event
        if (perfEvt) {
          perfMgr.fire(perfEvt);
        } // Reset the active event to the previous value


        perfMgr.setCtx(doPerfActiveKey, currentActive);
      }
    }
  }

  return func();
}
/**
 * Set the global performance manager to use when there is no core instance or it has not been initialized yet.
 * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.
 */

function setGblPerfMgr(perfManager) {
  _defaultPerfManager = perfManager;
}
/**
 * Get the current global performance manager that will be used with no performance manager is supplied.
 * @returns - The current default manager
 */

function getGblPerfMgr() {
  return _defaultPerfManager;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryPluginChain.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */







var TelemetryPluginChain = function () {
  function TelemetryPluginChain(plugin, defItemCtx) {
    var _self = this;

    var _nextProxy = null;

    var _hasProcessTelemetry = isFunction(plugin.processTelemetry);

    var _hasSetNext = isFunction(plugin.setNextPlugin);

    _self._hasRun = false;

    _self.getPlugin = function () {
      return plugin;
    };

    _self.getNext = function () {
      return _nextProxy;
    };

    _self.setNext = function (nextPlugin) {
      _nextProxy = nextPlugin;
    };

    _self.processTelemetry = function (env, itemCtx) {
      if (!itemCtx) {
        // Looks like a plugin didn't pass the (optional) context, so restore to the default
        itemCtx = defItemCtx;
      }

      var identifier = plugin ? plugin.identifier : "TelemetryPluginChain";
      doPerf(itemCtx ? itemCtx.core() : null, function () {
        return identifier + ":processTelemetry";
      }, function () {
        if (plugin && _hasProcessTelemetry) {
          _self._hasRun = true;

          try {
            // Ensure that we keep the context in sync (for processNext()), just in case a plugin
            // doesn't calls processTelemetry() instead of itemContext.processNext() or some
            // other form of error occurred
            itemCtx.setNext(_nextProxy);

            if (_hasSetNext) {
              // Backward compatibility setting the next plugin on the instance
              plugin.setNextPlugin(_nextProxy);
            } // Set a flag on the next plugin so we know if it was attempted to be executed


            _nextProxy && (_nextProxy._hasRun = false);
            plugin.processTelemetry(env, itemCtx);
          } catch (error) {
            var hasRun = _nextProxy && _nextProxy._hasRun;

            if (!_nextProxy || !hasRun) {
              // Either we have no next plugin or the current one did not attempt to call the next plugin
              // Which means the current one is the root of the failure so log/report this failure
              itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.PluginException, "Plugin [" + plugin.identifier + "] failed during processTelemetry - " + dumpObj(error));
            }

            if (_nextProxy && !hasRun) {
              // As part of the failure the current plugin did not attempt to call the next plugin in the cahin
              // So rather than leave the pipeline dead in the water we call the next plugin
              _nextProxy.processTelemetry(env, itemCtx);
            }
          }
        } else if (_nextProxy) {
          _self._hasRun = true; // The underlying plugin is either not defined or does not have a processTelemetry implementation
          // so we still want the next plugin to be executed.

          _nextProxy.processTelemetry(env, itemCtx);
        }
      }, function () {
        return {
          item: env
        };
      }, !env.sync);
    };
  }

  return TelemetryPluginChain;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ProcessTelemetryContext.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */





/**
 * Creates the instance execution chain for the plugins
 */

function _createProxyChain(plugins, itemCtx) {
  var proxies = [];

  if (plugins && plugins.length > 0) {
    // Create the proxies and wire up the next plugin chain
    var lastProxy = null;

    for (var idx = 0; idx < plugins.length; idx++) {
      var thePlugin = plugins[idx];

      if (thePlugin && isFunction(thePlugin.processTelemetry)) {
        // Only add plugins that are processors
        var newProxy = new TelemetryPluginChain(thePlugin, itemCtx);
        proxies.push(newProxy);

        if (lastProxy) {
          // Set this new proxy as the next for the previous one
          lastProxy.setNext(newProxy);
        }

        lastProxy = newProxy;
      }
    }
  }

  return proxies.length > 0 ? proxies[0] : null;
}

function _copyProxyChain(proxy, itemCtx, startAt) {
  var plugins = [];
  var add = startAt ? false : true;

  if (proxy) {
    while (proxy) {
      var thePlugin = proxy.getPlugin();

      if (add || thePlugin === startAt) {
        add = true;
        plugins.push(thePlugin);
      }

      proxy = proxy.getNext();
    }
  }

  if (!add) {
    plugins.push(startAt);
  }

  return _createProxyChain(plugins, itemCtx);
}

function _copyPluginChain(srcPlugins, itemCtx, startAt) {
  var plugins = srcPlugins;
  var add = false;

  if (startAt && srcPlugins) {
    plugins = [];
    arrForEach(srcPlugins, function (thePlugin) {
      if (add || thePlugin === startAt) {
        add = true;
        plugins.push(thePlugin);
      }
    });
  }

  if (startAt && !add) {
    if (!plugins) {
      plugins = [];
    }

    plugins.push(startAt);
  }

  return _createProxyChain(plugins, itemCtx);
}

var ProcessTelemetryContext = function () {
  /**
   * Creates a new Telemetry Item context with the current config, core and plugin execution chain
   * @param plugins - The plugin instances that will be executed
   * @param config - The current config
   * @param core - The current core instance
   */
  function ProcessTelemetryContext(plugins, config, core, startAt) {
    var _self = this;

    var _nextProxy = null; // Null == No next plugin
    // There is no next element (null) vs not defined (undefined)

    if (startAt !== null) {
      if (plugins && isFunction(plugins.getPlugin)) {
        // We have a proxy chain object
        _nextProxy = _copyProxyChain(plugins, _self, startAt || plugins.getPlugin());
      } else {
        // We just have an array
        if (startAt) {
          _nextProxy = _copyPluginChain(plugins, _self, startAt);
        } else if (isUndefined(startAt)) {
          // Undefined means copy the existing chain
          _nextProxy = _createProxyChain(plugins, _self);
        }
      }
    }

    _self.core = function () {
      return core;
    };

    _self.diagLog = function () {
      return safeGetLogger(core, config);
    };

    _self.getCfg = function () {
      return config;
    };

    _self.getExtCfg = function (identifier, defaultValue) {
      if (defaultValue === void 0) {
        defaultValue = {};
      }

      var theConfig;

      if (config) {
        var extConfig = config.extensionConfig;

        if (extConfig && identifier) {
          theConfig = extConfig[identifier];
        }
      }

      return theConfig ? theConfig : defaultValue;
    };

    _self.getConfig = function (identifier, field, defaultValue) {
      if (defaultValue === void 0) {
        defaultValue = false;
      }

      var theValue;

      var extConfig = _self.getExtCfg(identifier, null);

      if (extConfig && !isNullOrUndefined(extConfig[field])) {
        theValue = extConfig[field];
      } else if (config && !isNullOrUndefined(config[field])) {
        theValue = config[field];
      }

      return !isNullOrUndefined(theValue) ? theValue : defaultValue;
    };

    _self.hasNext = function () {
      return _nextProxy != null;
    };

    _self.getNext = function () {
      return _nextProxy;
    };

    _self.setNext = function (nextPlugin) {
      _nextProxy = nextPlugin;
    };

    _self.processNext = function (env) {
      var nextPlugin = _nextProxy;

      if (nextPlugin) {
        // Automatically move to the next plugin
        _nextProxy = nextPlugin.getNext();
        nextPlugin.processTelemetry(env, _self);
      }
    };

    _self.createNew = function (plugins, startAt) {
      if (plugins === void 0) {
        plugins = null;
      }

      return new ProcessTelemetryContext(plugins || _nextProxy, config, core, startAt);
    };
  }

  return ProcessTelemetryContext;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/Constants.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var strIKey = "iKey";
var strExtensionConfig = "extensionConfig";
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/BaseTelemetryPlugin.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */





var strGetPlugin = "getPlugin";
/**
 * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins
 * can avoid implementation the same set of boiler plate code as well as provide a base
 * implementation so that new default implementations can be added without breaking all plugins.
 */

var BaseTelemetryPlugin = function () {
  function BaseTelemetryPlugin() {
    var _self = this;

    var _isinitialized = false;
    var _rootCtx = null; // Used as the root context, holding the current config and initialized core

    var _nextPlugin = null; // Used for backward compatibility where plugins don't call the main pipeline

    _self.core = null;

    _self.diagLog = function (itemCtx) {
      return _self._getTelCtx(itemCtx).diagLog();
    };

    _self.isInitialized = function () {
      return _isinitialized;
    };

    _self.setInitialized = function (isInitialized) {
      _isinitialized = isInitialized;
    }; // _self.getNextPlugin = () => DO NOT IMPLEMENT
    // Sub-classes of this base class *should* not be relying on this value and instead
    // should use processNext() function. If you require access to the plugin use the
    // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.


    _self.setNextPlugin = function (next) {
      _nextPlugin = next;
    };

    _self.processNext = function (env, itemCtx) {
      if (itemCtx) {
        // Normal core execution sequence
        itemCtx.processNext(env);
      } else if (_nextPlugin && isFunction(_nextPlugin.processTelemetry)) {
        // Looks like backward compatibility or out of band processing. And as it looks
        // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry
        _nextPlugin.processTelemetry(env, null);
      }
    };

    _self._getTelCtx = function (currentCtx) {
      if (currentCtx === void 0) {
        currentCtx = null;
      }

      var itemCtx = currentCtx;

      if (!itemCtx) {
        var rootCtx = _rootCtx || new ProcessTelemetryContext(null, {}, _self.core); // tslint:disable-next-line: prefer-conditional-expression

        if (_nextPlugin && _nextPlugin[strGetPlugin]) {
          // Looks like a chain object
          itemCtx = rootCtx.createNew(null, _nextPlugin[strGetPlugin]);
        } else {
          itemCtx = rootCtx.createNew(null, _nextPlugin);
        }
      }

      return itemCtx;
    };

    _self._baseTelInit = function (config, core, extensions, pluginChain) {
      if (config) {
        // Make sure the extensionConfig exists
        setValue(config, strExtensionConfig, [], null, isNullOrUndefined);
      }

      if (!pluginChain && core) {
        // Get the first plugin from the core
        pluginChain = core.getProcessTelContext().getNext();
      }

      var nextPlugin = _nextPlugin;

      if (_nextPlugin && _nextPlugin[strGetPlugin]) {
        // If it looks like a proxy/chain then get the plugin
        nextPlugin = _nextPlugin[strGetPlugin]();
      } // Support legacy plugins where core was defined as a property


      _self.core = core;
      _rootCtx = new ProcessTelemetryContext(pluginChain, config, core, nextPlugin);
      _isinitialized = true;
    };
  }

  BaseTelemetryPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {
    this._baseTelInit(config, core, extensions, pluginChain);
  };

  return BaseTelemetryPlugin;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryHelpers.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var processTelemetry = "processTelemetry";
var priority = "priority";
var setNextPlugin = "setNextPlugin";
var isInitialized = "isInitialized";
/**
 * Initialize the queue of plugins
 * @param plugins - The array of plugins to initialize and setting of the next plugin
 * @param config The current config for the instance
 * @param core THe current core instance
 * @param extensions The extensions
 */

function initializePlugins(processContext, extensions) {
  // Set the next plugin and identified the uninitialized plugins
  var initPlugins = [];
  var lastPlugin = null;
  var proxy = processContext.getNext();

  while (proxy) {
    var thePlugin = proxy.getPlugin();

    if (thePlugin) {
      if (lastPlugin && isFunction(lastPlugin[setNextPlugin]) && isFunction(thePlugin[processTelemetry])) {
        // Set this plugin as the next for the previous one
        lastPlugin[setNextPlugin](thePlugin);
      }

      if (!isFunction(thePlugin[isInitialized]) || !thePlugin[isInitialized]()) {
        initPlugins.push(thePlugin);
      }

      lastPlugin = thePlugin;
      proxy = proxy.getNext();
    }
  } // Now initiatilize the plugins


  arrForEach(initPlugins, function (thePlugin) {
    thePlugin.initialize(processContext.getCfg(), processContext.core(), extensions, processContext.getNext());
  });
}
function sortPlugins(plugins) {
  // Sort by priority
  return plugins.sort(function (extA, extB) {
    var result = 0;
    var bHasProcess = isFunction(extB[processTelemetry]);

    if (isFunction(extA[processTelemetry])) {
      result = bHasProcess ? extA[priority] - extB[priority] : 1;
    } else if (bHasProcess) {
      result = -1;
    }

    return result;
  }); // sort complete
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */








var ChannelControllerPriority = 500;
var ChannelValidationMessage = "Channel has invalid priority";

var ChannelController = function (_super) {
  __extendsFn(ChannelController, _super);

  function ChannelController() {
    var _this = _super.call(this) || this;

    _this.identifier = "ChannelControllerPlugin";
    _this.priority = ChannelControllerPriority; // in reserved range 100 to 200

    var _channelQueue;

    dynamicproto_js(ChannelController, _this, function (_self, _base) {
      _self.setNextPlugin = function (next) {// The Channel controller is last in pipeline
      };

      _self.processTelemetry = function (item, itemCtx) {
        if (_channelQueue) {
          arrForEach(_channelQueue, function (queues) {
            // pass on to first item in queue
            if (queues.length > 0) {
              // Copying the item context as we could have mutiple chains that are executing asynchronously
              // and calling _getDefTelCtx as it's possible that the caller doesn't pass any context
              var chainCtx = _this._getTelCtx(itemCtx).createNew(queues);

              chainCtx.processNext(item);
            }
          });
        }
      };

      _self.getChannelControls = function () {
        return _channelQueue;
      };

      _self.initialize = function (config, core, extensions) {
        if (_self.isInitialized()) {
          // already initialized
          return;
        }

        _base.initialize(config, core, extensions);

        _createChannelQueues((config || {}).channels, extensions); // Initialize the Queues


        arrForEach(_channelQueue, function (queue) {
          return initializePlugins(new ProcessTelemetryContext(queue, config, core), extensions);
        });
      };
    });

    function _checkQueuePriority(queue) {
      arrForEach(queue, function (queueItem) {
        if (queueItem.priority < ChannelControllerPriority) {
          throwError(ChannelValidationMessage + queueItem.identifier);
        }
      });
    }

    function _addChannelQueue(queue) {
      if (queue && queue.length > 0) {
        queue = queue.sort(function (a, b) {
          return a.priority - b.priority;
        });

        _checkQueuePriority(queue);

        _channelQueue.push(queue);
      }
    }

    function _createChannelQueues(channels, extensions) {
      _channelQueue = [];

      if (channels) {
        // Add and sort the configuration channel queues
        arrForEach(channels, function (queue) {
          return _addChannelQueue(queue);
        });
      }

      if (extensions) {
        // Create a new channel queue for any extensions with a priority > the ChannelControllerPriority
        var extensionQueue_1 = [];
        arrForEach(extensions, function (plugin) {
          if (plugin.priority > ChannelControllerPriority) {
            extensionQueue_1.push(plugin);
          }
        });

        _addChannelQueue(extensionQueue_1);
      }
    }

    return _this;
  } // Removed Stub for ChannelController.prototype.processTelemetry.
  // Removed Stub for ChannelController.prototype.getChannelControls.
  // Removed Stub for ChannelController.prototype.initialize.

  /**
   * Static constructor, attempt to create accessors
   */
  // tslint:disable-next-line


  ChannelController._staticInit = function () {
    var proto = ChannelController.prototype; // Dynamically create get/set property accessors

    objDefineAccessors(proto, "ChannelControls", proto.getChannelControls);
    objDefineAccessors(proto, "channelQueue", proto.getChannelControls);
  }();

  return ChannelController;
}(BaseTelemetryPlugin);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CookieMgr.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var strToGMTString = "toGMTString";
var strToUTCString = "toUTCString";
var strCookie = "cookie";
var strExpires = "expires";
var strEnabled = "enabled";
var strIsCookieUseDisabled = "isCookieUseDisabled";
var strDisableCookiesUsage = "disableCookiesUsage";
var strConfigCookieMgr = "_ckMgr";
var strEmpty = "";
var _supportsCookies = null;
var _allowUaSameSite = null;
var _parsedCookieValue = null;

var _doc = EnvUtils_getDocument();

var _cookieCache = {};
var _globalCookieConfig = {};
/**
 * @ignore
 * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.
 * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create
 * your own instance of the CookieMgr and use that.
 * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.
 * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.
 * @param logger - The DiagnosticLogger to use for reporting errors.
 */

function _gblCookieMgr(config, logger) {
  // Stash the global instance against the BaseCookieMgr class
  var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];

  if (!inst) {
    // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr
    // that ultimately is never used
    inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);
    _globalCookieConfig[strConfigCookieMgr] = inst;
  }

  return inst;
}

function _isMgrEnabled(cookieMgr) {
  if (cookieMgr) {
    return cookieMgr.isEnabled();
  }

  return true;
}

function _createCookieMgrConfig(rootConfig) {
  var cookieMgrCfg = rootConfig.cookieCfg = rootConfig.cookieCfg || {}; // Sets the values from the root config if not already present on the cookieMgrCfg

  setValue(cookieMgrCfg, "domain", rootConfig.cookieDomain, isNotNullOrUndefined, isNullOrUndefined);
  setValue(cookieMgrCfg, "path", rootConfig.cookiePath || "/", null, isNullOrUndefined);

  if (isNullOrUndefined(cookieMgrCfg[strEnabled])) {
    // Set the enabled from the provided setting or the legacy root values
    var cookieEnabled = void 0;

    if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {
      cookieEnabled = !rootConfig[strIsCookieUseDisabled];
    }

    if (!isUndefined(rootConfig[strDisableCookiesUsage])) {
      cookieEnabled = !rootConfig[strDisableCookiesUsage];
    }

    cookieMgrCfg[strEnabled] = cookieEnabled;
  }

  return cookieMgrCfg;
}
/**
 * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation
 * associated with the configuration or a legacy default.
 * @param core
 * @param config
 * @returns
 */


function safeGetCookieMgr(core, config) {
  var cookieMgr;

  if (core) {
    // Always returns an instance
    cookieMgr = core.getCookieMgr();
  } else if (config) {
    var cookieCfg = config.cookieCfg;

    if (cookieCfg[strConfigCookieMgr]) {
      cookieMgr = cookieCfg[strConfigCookieMgr];
    } else {
      cookieMgr = createCookieMgr(config);
    }
  }

  if (!cookieMgr) {
    // Get or initialize the default global (legacy) cookie manager if we couldn't find one
    cookieMgr = _gblCookieMgr(config, (core || {}).logger);
  }

  return cookieMgr;
}
function createCookieMgr(rootConfig, logger) {
  var cookieMgrConfig = _createCookieMgrConfig(rootConfig || _globalCookieConfig);

  var _path = cookieMgrConfig.path || "/";

  var _domain = cookieMgrConfig.domain; // Explicitly checking against false, so that setting to undefined will === true

  var _enabled = cookieMgrConfig[strEnabled] !== false;

  var cookieMgr = {
    isEnabled: function isEnabled() {
      var enabled = _enabled && areCookiesSupported(logger); // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's
      // that don't use the "applicationinsights-core" version of the default cookie function


      var gblManager = _globalCookieConfig[strConfigCookieMgr];

      if (enabled && gblManager && cookieMgr !== gblManager) {
        // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.
        // As the global (deprecated) functions may have been called (for backward compatibility)
        enabled = _isMgrEnabled(gblManager);
      }

      return enabled;
    },
    setEnabled: function setEnabled(value) {
      // Explicitly checking against false, so that setting to undefined will === true
      _enabled = value !== false;
    },
    set: function set(name, value, maxAgeSec, domain, path) {
      var result = false;

      if (_isMgrEnabled(cookieMgr)) {
        var values = {};
        var theValue = strTrim(value || strEmpty);
        var idx = theValue.indexOf(";");

        if (idx !== -1) {
          theValue = strTrim(value.substring(0, idx));
          values = _extractParts(value.substring(idx + 1));
        } // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)


        setValue(values, "domain", domain || _domain, isTruthy, isUndefined);

        if (!isNullOrUndefined(maxAgeSec)) {
          var _isIE = isIE();

          if (isUndefined(values[strExpires])) {
            var nowMs = dateNow(); // Only add expires if not already present

            var expireMs = nowMs + maxAgeSec * 1000; // Sanity check, if zero or -ve then ignore

            if (expireMs > 0) {
              var expiry = new Date();
              expiry.setTime(expireMs);
              setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || strEmpty, isTruthy);
            }
          }

          if (!_isIE) {
            // Only replace if not already present
            setValue(values, "max-age", strEmpty + maxAgeSec, null, isUndefined);
          }
        }

        var location_1 = getLocation();

        if (location_1 && location_1.protocol === "https:") {
          setValue(values, "secure", null, null, isUndefined); // Only set same site if not also secure

          if (_allowUaSameSite === null) {
            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {}).userAgent);
          }

          if (_allowUaSameSite) {
            setValue(values, "SameSite", "None", null, isUndefined);
          }
        }

        setValue(values, "path", path || _path, null, isUndefined);
        var setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;
        setCookieFn(name, _formatCookieValue(theValue, values));
        result = true;
      }

      return result;
    },
    get: function get(name) {
      var value = strEmpty;

      if (_isMgrEnabled(cookieMgr)) {
        value = (cookieMgrConfig.getCookie || _getCookieValue)(name);
      }

      return value;
    },
    del: function del(name, path) {
      var result = false;

      if (_isMgrEnabled(cookieMgr)) {
        // Only remove the cookie if the manager and cookie support has not been disabled
        result = cookieMgr.purge(name, path);
      }

      return result;
    },
    purge: function purge(name, path) {
      var _a;

      var result = false;

      if (areCookiesSupported(logger)) {
        // Setting the expiration date in the past immediately removes the cookie
        var values = (_a = {}, _a["path"] = path ? path : "/", _a[strExpires] = "Thu, 01 Jan 1970 00:00:01 GMT", _a);

        if (!isIE()) {
          // Set max age to expire now
          values["max-age"] = "0";
        }

        var delCookie = cookieMgrConfig.delCookie || _setCookieValue;
        delCookie(name, _formatCookieValue(strEmpty, values));
        result = true;
      }

      return result;
    }
  }; // Associated this cookie manager with the config

  cookieMgr[strConfigCookieMgr] = cookieMgr;
  return cookieMgr;
}
/*
* Helper method to tell if document.cookie object is supported by the runtime
*/

function areCookiesSupported(logger) {
  if (_supportsCookies === null) {
    _supportsCookies = false;

    try {
      var doc = _doc || {};
      _supportsCookies = doc[strCookie] !== undefined;
    } catch (e) {
      logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, "Cannot access document.cookie - " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return _supportsCookies;
}

function _extractParts(theValue) {
  var values = {};

  if (theValue && theValue.length) {
    var parts = strTrim(theValue).split(";");
    arrForEach(parts, function (thePart) {
      thePart = strTrim(thePart || strEmpty);

      if (thePart) {
        var idx = thePart.indexOf("=");

        if (idx === -1) {
          values[thePart] = null;
        } else {
          values[strTrim(thePart.substring(0, idx))] = strTrim(thePart.substring(idx + 1));
        }
      }
    });
  }

  return values;
}

function _formatDate(theDate, func) {
  if (isFunction(theDate[func])) {
    return theDate[func]();
  }

  return null;
}

function _formatCookieValue(value, values) {
  var cookieValue = value || strEmpty;
  objForEachKey(values, function (name, theValue) {
    cookieValue += "; " + name + (!isNullOrUndefined(theValue) ? "=" + theValue : strEmpty);
  });
  return cookieValue;
}

function _getCookieValue(name) {
  var cookieValue = strEmpty;

  if (_doc) {
    var theCookie = _doc[strCookie] || strEmpty;

    if (_parsedCookieValue !== theCookie) {
      _cookieCache = _extractParts(theCookie);
      _parsedCookieValue = theCookie;
    }

    cookieValue = strTrim(_cookieCache[name] || strEmpty);
  }

  return cookieValue;
}

function _setCookieValue(name, cookieValue) {
  if (_doc) {
    _doc[strCookie] = name + "=" + cookieValue;
  }
}

function uaDisallowsSameSiteNone(userAgent) {
  if (!HelperFuncs_isString(userAgent)) {
    return false;
  } // Cover all iOS based browsers here. This includes:
  // - Safari on iOS 12 for iPhone, iPod Touch, iPad
  // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad
  // - Chrome on iOS 12 for iPhone, iPod Touch, iPad
  // All of which are broken by SameSite=None, because they use the iOS networking stack


  if (strContains(userAgent, "CPU iPhone OS 12") || strContains(userAgent, "iPad; CPU OS 12")) {
    return true;
  } // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:
  // - Safari on Mac OS X
  // This does not include:
  // - Internal browser on Mac OS X
  // - Chrome on Mac OS X
  // - Chromium on Mac OS X
  // Because they do not use the Mac OS networking stack.


  if (strContains(userAgent, "Macintosh; Intel Mac OS X 10_14") && strContains(userAgent, "Version/") && strContains(userAgent, "Safari")) {
    return true;
  } // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:
  // - Internal browser on Mac OS X
  // This does not include:
  // - Safari on Mac OS X
  // - Chrome on Mac OS X
  // - Chromium on Mac OS X
  // Because they do not use the Mac OS networking stack.


  if (strContains(userAgent, "Macintosh; Intel Mac OS X 10_14") && strEndsWith(userAgent, "AppleWebKit/605.1.15 (KHTML, like Gecko)")) {
    return true;
  } // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.
  // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.
  // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.


  if (strContains(userAgent, "Chrome/5") || strContains(userAgent, "Chrome/6")) {
    return true;
  } // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal
  // that don't specify their Chrome version as lacking support for SameSite=None.


  if (strContains(userAgent, "UnrealEngine") && !strContains(userAgent, "Chrome")) {
    return true;
  } // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None
  // NB: this rule isn't complete - you need regex to make a complete rule.
  // See: https://www.chromium.org/updates/same-site/incompatible-clients


  if (strContains(userAgent, "UCBrowser/12") || strContains(userAgent, "UCBrowser/11")) {
    return true;
  }

  return false;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/BaseCore.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */














var validationError = "Extensions must provide callback to initialize";
var strNotificationManager = "_notificationManager";
/**
 * Helper to create the default performance manager
 * @param core
 * @param notificationMgr
 */

function _createPerfManager(core, notificationMgr) {
  return new PerfManager(notificationMgr);
}

var BaseCore = function () {
  function BaseCore() {
    var _isInitialized = false;

    var _eventQueue;

    var _channelController;

    var _notificationManager;

    var _perfManager;

    var _cookieManager;

    dynamicproto_js(BaseCore, this, function (_self) {
      _self._extensions = new Array();
      _channelController = new ChannelController(); // Use a default logger so initialization errors are not dropped on the floor with full logging

      _self.logger = new DiagnosticLogger({
        loggingLevelConsole: LoggingSeverity.CRITICAL
      });
      _eventQueue = [];

      _self.isInitialized = function () {
        return _isInitialized;
      };

      _self.initialize = function (config, extensions, logger, notificationManager) {
        // Make sure core is only initialized once
        if (_self.isInitialized()) {
          throwError("Core should not be initialized more than once");
        }

        if (!config || isNullOrUndefined(config.instrumentationKey)) {
          throwError("Please provide instrumentation key");
        }

        _notificationManager = notificationManager; // For backward compatibility only

        _self[strNotificationManager] = notificationManager;
        _self.config = config || {};

        if (_self.config.enablePerfMgr) {
          // Set the performance manager creation function if not defined
          setValue(_self.config, "createPerfMgr", _createPerfManager);
        }

        config.extensions = isNullOrUndefined(config.extensions) ? [] : config.extensions; // add notification to the extensions in the config so other plugins can access it

        var extConfig = getSetValue(config, strExtensionConfig);
        extConfig.NotificationManager = notificationManager;

        if (logger) {
          _self.logger = logger;
        } // Concat all available extensions


        var allExtensions = [];
        allExtensions.push.apply(allExtensions, __spreadArrayFn(__spreadArrayFn([], extensions, false), config.extensions, false));
        allExtensions = sortPlugins(allExtensions);
        var coreExtensions = [];
        var channelExtensions = []; // Check if any two extensions have the same priority, then warn to console
        // And extract the local extensions from the

        var extPriorities = {}; // Extension validation

        arrForEach(allExtensions, function (ext) {
          if (isNullOrUndefined(ext) || isNullOrUndefined(ext.initialize)) {
            throwError(validationError);
          }

          var extPriority = ext.priority;
          var identifier = ext.identifier;

          if (ext && extPriority) {
            if (!isNullOrUndefined(extPriorities[extPriority])) {
              logger.warnToConsole("Two extensions have same priority #" + extPriority + " - " + extPriorities[extPriority] + ", " + identifier);
            } else {
              // set a value
              extPriorities[extPriority] = identifier;
            }
          } // Split extensions to core and channelController


          if (!extPriority || extPriority < _channelController.priority) {
            // Add to core extension that will be managed by BaseCore
            coreExtensions.push(ext);
          } else {
            // Add all other extensions to be managed by the channel controller
            channelExtensions.push(ext);
          }
        }); // Validation complete
        // Add the channelController to the complete extension collection and
        // to the end of the core extensions

        allExtensions.push(_channelController);
        coreExtensions.push(_channelController); // Sort the complete set of extensions by priority

        allExtensions = sortPlugins(allExtensions);
        _self._extensions = allExtensions; // initialize channel controller first, this will initialize all channel plugins

        initializePlugins(new ProcessTelemetryContext([_channelController], config, _self), allExtensions);
        initializePlugins(new ProcessTelemetryContext(coreExtensions, config, _self), allExtensions); // Now reset the extensions to just those being managed by Basecore

        _self._extensions = coreExtensions;

        if (_self.getTransmissionControls().length === 0) {
          throwError("No channels available");
        }

        _isInitialized = true;

        _self.releaseQueue();
      };

      _self.getTransmissionControls = function () {
        return _channelController.getChannelControls();
      };

      _self.track = function (telemetryItem) {
        // setup default iKey if not passed in
        setValue(telemetryItem, strIKey, _self.config.instrumentationKey, null, isNotTruthy); // add default timestamp if not passed in

        setValue(telemetryItem, "time", toISOString(new Date()), null, isNotTruthy); // Common Schema 4.0

        setValue(telemetryItem, "ver", "4.0", null, isNullOrUndefined);

        if (_self.isInitialized()) {
          // Process the telemetry plugin chain
          _self.getProcessTelContext().processNext(telemetryItem);
        } else {
          // Queue events until all extensions are initialized
          _eventQueue.push(telemetryItem);
        }
      };

      _self.getProcessTelContext = function () {
        var extensions = _self._extensions;
        var thePlugins = extensions; // invoke any common telemetry processors before sending through pipeline

        if (!extensions || extensions.length === 0) {
          // Pass to Channel controller so data is sent to correct channel queues
          thePlugins = [_channelController];
        }

        return new ProcessTelemetryContext(thePlugins, _self.config, _self);
      };

      _self.getNotifyMgr = function () {
        if (!_notificationManager) {
          // Create Dummy notification manager
          _notificationManager = objCreateFn({
            addNotificationListener: function addNotificationListener(listener) {},
            removeNotificationListener: function removeNotificationListener(listener) {},
            eventsSent: function eventsSent(events) {},
            eventsDiscarded: function eventsDiscarded(events, reason) {},
            eventsSendRequest: function eventsSendRequest(sendReason, isAsync) {}
          }); // For backward compatibility only

          _self[strNotificationManager] = _notificationManager;
        }

        return _notificationManager;
      };

      _self.getCookieMgr = function () {
        if (!_cookieManager) {
          _cookieManager = createCookieMgr(_self.config, _self.logger);
        }

        return _cookieManager;
      };

      _self.setCookieMgr = function (cookieMgr) {
        _cookieManager = cookieMgr;
      };

      _self.getPerfMgr = function () {
        if (!_perfManager) {
          if (_self.config && _self.config.enablePerfMgr && isFunction(_self.config.createPerfMgr)) {
            _perfManager = _self.config.createPerfMgr(_self, _self.getNotifyMgr());
          }
        }

        return _perfManager || getGblPerfMgr();
      };

      _self.setPerfMgr = function (perfMgr) {
        _perfManager = perfMgr;
      };

      _self.eventCnt = function () {
        return _eventQueue.length;
      };

      _self.releaseQueue = function () {
        if (_eventQueue.length > 0) {
          arrForEach(_eventQueue, function (event) {
            _self.getProcessTelContext().processNext(event);
          });
          _eventQueue = [];
        }
      };
    });
  } // Removed Stub for BaseCore.prototype.initialize.
  // Removed Stub for BaseCore.prototype.getTransmissionControls.
  // Removed Stub for BaseCore.prototype.track.
  // Removed Stub for BaseCore.prototype.getProcessTelContext.
  // Removed Stub for BaseCore.prototype.getNotifyMgr.
  // Removed Stub for BaseCore.prototype.getCookieMgr.
  // Removed Stub for BaseCore.prototype.setCookieMgr.
  // Removed Stub for BaseCore.prototype.getPerfMgr.
  // Removed Stub for BaseCore.prototype.setPerfMgr.
  // Removed Stub for BaseCore.prototype.eventCnt.
  // Removed Stub for BaseCore.prototype.releaseQueue.


  return BaseCore;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.
 */
var EventsDiscardedReason = {
  /**
   * Unknown.
   */
  Unknown: 0,

  /**
   * Status set to non-retryable.
   */
  NonRetryableStatus: 1,

  /**
   * The event is invalid.
   */
  InvalidEvent: 2,

  /**
   * The size of the event is too large.
   */
  SizeLimitExceeded: 3,

  /**
   * The server is not accepting events from this instrumentation key.
   */
  KillSwitch: 4,

  /**
   * The event queue is full.
   */
  QueueFull: 5
};
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


/**
 * Class to manage sending notifications to all the listeners.
 */

var NotificationManager = function () {
  function NotificationManager(config) {
    this.listeners = [];
    var perfEvtsSendAll = !!(config || {}).perfEvtsSendAll;
    dynamicproto_js(NotificationManager, this, function (_self) {
      _self.addNotificationListener = function (listener) {
        _self.listeners.push(listener);
      };
      /**
       * Removes all instances of the listener.
       * @param {INotificationListener} listener - AWTNotificationListener to remove.
       */


      _self.removeNotificationListener = function (listener) {
        var index = HelperFuncs_arrIndexOf(_self.listeners, listener);

        while (index > -1) {
          _self.listeners.splice(index, 1);

          index = HelperFuncs_arrIndexOf(_self.listeners, listener);
        }
      };
      /**
       * Notification for events sent.
       * @param {ITelemetryItem[]} events - The array of events that have been sent.
       */


      _self.eventsSent = function (events) {
        arrForEach(_self.listeners, function (listener) {
          if (listener && listener.eventsSent) {
            setTimeout(function () {
              return listener.eventsSent(events);
            }, 0);
          }
        });
      };
      /**
       * Notification for events being discarded.
       * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.
       * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason
       * constant should be used to check the different values.
       */


      _self.eventsDiscarded = function (events, reason) {
        arrForEach(_self.listeners, function (listener) {
          if (listener && listener.eventsDiscarded) {
            setTimeout(function () {
              return listener.eventsDiscarded(events, reason);
            }, 0);
          }
        });
      };
      /**
       * [Optional] A function called when the events have been requested to be sent to the sever.
       * @param {number} sendReason - The reason why the event batch is being sent.
       * @param {boolean} isAsync   - A flag which identifies whether the requests are being sent in an async or sync manner.
       */


      _self.eventsSendRequest = function (sendReason, isAsync) {
        arrForEach(_self.listeners, function (listener) {
          if (listener && listener.eventsSendRequest) {
            if (isAsync) {
              setTimeout(function () {
                return listener.eventsSendRequest(sendReason, isAsync);
              }, 0);
            } else {
              try {
                listener.eventsSendRequest(sendReason, isAsync);
              } catch (e) {// Catch errors to ensure we don't block sending the requests
              }
            }
          }
        });
      };

      _self.perfEvent = function (perfEvent) {
        if (perfEvent) {
          // Send all events or only parent events
          if (perfEvtsSendAll || !perfEvent.isChildEvt()) {
            arrForEach(_self.listeners, function (listener) {
              if (listener && listener.perfEvent) {
                if (perfEvent.isAsync) {
                  setTimeout(function () {
                    return listener.perfEvent(perfEvent);
                  }, 0);
                } else {
                  try {
                    listener.perfEvent(perfEvent);
                  } catch (e) {// Catch errors to ensure we don't block sending the requests
                  }
                }
              }
            });
          }
        }
      };
    });
  } // Removed Stub for NotificationManager.prototype.addNotificationListener.
  // Removed Stub for NotificationManager.prototype.removeNotificationListener.
  // Removed Stub for NotificationManager.prototype.eventsSent.
  // Removed Stub for NotificationManager.prototype.eventsDiscarded.
  // Removed Stub for NotificationManager.prototype.eventsSendRequest.


  return NotificationManager;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */








"use strict";

var AppInsightsCore = function (_super) {
  __extendsFn(AppInsightsCore, _super);

  function AppInsightsCore() {
    var _this = _super.call(this) || this;
    /**
     * Internal log poller
     */


    var _internalLogPoller = 0;
    dynamicproto_js(AppInsightsCore, _this, function (_self, _base) {
      _self.initialize = function (config, extensions, logger, notificationManager) {
        _base.initialize(config, extensions, logger || new DiagnosticLogger(config), notificationManager || new NotificationManager(config));
      };

      _self.track = function (telemetryItem) {
        doPerf(_self.getPerfMgr(), function () {
          return "AppInsightsCore:track";
        }, function () {
          if (telemetryItem === null) {
            _notifyInvalidEvent(telemetryItem); // throw error


            throwError("Invalid telemetry item");
          } // do basic validation before sending it through the pipeline


          _validateTelemetryItem(telemetryItem);

          _base.track(telemetryItem);
        }, function () {
          return {
            item: telemetryItem
          };
        }, !telemetryItem.sync);
      };
      /**
       * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.
       * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be
       * called.
       * @param {INotificationListener} listener - An INotificationListener object.
       */


      _self.addNotificationListener = function (listener) {
        var manager = _self.getNotifyMgr();

        if (manager) {
          manager.addNotificationListener(listener);
        }
      };
      /**
       * Removes all instances of the listener.
       * @param {INotificationListener} listener - INotificationListener to remove.
       */


      _self.removeNotificationListener = function (listener) {
        var manager = _self.getNotifyMgr();

        if (manager) {
          manager.removeNotificationListener(listener);
        }
      };
      /**
       * Periodically check logger.queue for log messages to be flushed
       */


      _self.pollInternalLogs = function (eventName) {
        var interval = _self.config.diagnosticLogInterval;

        if (!interval || !(interval > 0)) {
          interval = 10000;
        }

        if (_internalLogPoller) {
          _self.stopPollingInternalLogs();
        }

        _internalLogPoller = setInterval(function () {
          var queue = _self.logger ? _self.logger.queue : [];
          arrForEach(queue, function (logMessage) {
            var item = {
              name: eventName ? eventName : "InternalMessageId: " + logMessage.messageId,
              iKey: _self.config.instrumentationKey,
              time: toISOString(new Date()),
              baseType: _InternalLogMessage.dataType,
              baseData: {
                message: logMessage.message
              }
            };

            _self.track(item);
          });
          queue.length = 0;
        }, interval);
        return _internalLogPoller;
      };
      /**
       * Stop polling log messages from logger.queue
       */


      _self.stopPollingInternalLogs = function () {
        if (!_internalLogPoller) return;
        clearInterval(_internalLogPoller);
        _internalLogPoller = 0;
      };

      function _validateTelemetryItem(telemetryItem) {
        if (isNullOrUndefined(telemetryItem.name)) {
          _notifyInvalidEvent(telemetryItem);

          throw Error("telemetry name required");
        }
      }

      function _notifyInvalidEvent(telemetryItem) {
        var manager = _self.getNotifyMgr();

        if (manager) {
          manager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);
        }
      }
    });
    return _this;
  } // Removed Stub for AppInsightsCore.prototype.initialize.
  // Removed Stub for AppInsightsCore.prototype.track.
  // Removed Stub for AppInsightsCore.prototype.addNotificationListener.
  // Removed Stub for AppInsightsCore.prototype.removeNotificationListener.
  // Removed Stub for AppInsightsCore.prototype.pollInternalLogs.
  // Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.


  return AppInsightsCore;
}(BaseCore);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/RandomHelper.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var UInt32Mask = 0x100000000;
var MaxUInt32 = 0xffffffff; // MWC based Random generator (for IE)

var _mwcSeeded = false;
var _mwcW = 123456789;
var _mwcZ = 987654321; // Takes any integer

function _mwcSeed(seedValue) {
  if (seedValue < 0) {
    // Make sure we end up with a positive number and not -ve one.
    seedValue >>>= 0;
  }

  _mwcW = 123456789 + seedValue & MaxUInt32;
  _mwcZ = 987654321 - seedValue & MaxUInt32;
  _mwcSeeded = true;
}

function _autoSeedMwc() {
  // Simple initialization using default Math.random() - So we inherit any entropy from the browser
  // and bitwise XOR with the current milliseconds
  try {
    var now = dateNow() & 0x7fffffff;

    _mwcSeed((Math.random() * UInt32Mask ^ now) + now);
  } catch (e) {// Don't crash if something goes wrong
  }
}
/**
 * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.
 * So maxValue(16) will produce a number from 0..16 (range of 17)
 * @param maxValue
 */


function randomValue(maxValue) {
  if (maxValue > 0) {
    return Math.floor(RandomHelper_random32() / MaxUInt32 * (maxValue + 1)) >>> 0;
  }

  return 0;
}
/**
 * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.
 * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)
 */

function RandomHelper_random32(signed) {
  var value;
  var c = getCrypto() || getMsCrypto();

  if (c && c.getRandomValues) {
    // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)
    value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;
  } else if (isIE()) {
    // For IE 6, 7, 8 (especially on XP) Math.random is not very random
    if (!_mwcSeeded) {
      // Set the seed for the Mwc algorithm
      _autoSeedMwc();
    } // Don't use Math.random for IE
    // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)


    value = mwcRandom32() & MaxUInt32;
  } else {
    // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)
    value = Math.floor(UInt32Mask * Math.random() | 0);
  }

  if (!signed) {
    // Make sure we end up with a positive number and not -ve one.
    value >>>= 0;
  }

  return value;
}
/**
 * Seed the MWC random number generator with the specified seed or a random value
 * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen
 */

function mwcRandomSeed(value) {
  if (!value) {
    _autoSeedMwc();
  } else {
    _mwcSeed(value);
  }
}
/**
 * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)
 * instead of Math.random() defaults to un-signed.
 * Used as a replacement random generator for IE to avoid issues with older IE instances.
 * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)
 */

function mwcRandom32(signed) {
  _mwcZ = 36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16) & MaxUInt32;
  _mwcW = 18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16) & MaxUInt32;
  var value = (_mwcZ << 16) + (_mwcW & 0xFFFF) >>> 0 & MaxUInt32 | 0;

  if (!signed) {
    // Make sure we end up with a positive number and not -ve one.
    value >>>= 0;
  }

  return value;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */







var strVisibilityChangeEvt = "visibilitychange";
var strPageHide = "pagehide";
var strPageShow = "pageshow";
var _cookieMgrs = null;

var _canUseCookies; // legacy supported config
// Added to help with minfication


var Undefined = (/* unused pure expression or super */ null && (strShimUndefined));
/**
 * Trys to add an event handler for the specified event to the window, body and document
 * @param eventName {string} - The name of the event
 * @param callback {any} - The callback function that needs to be executed for the given event
 * @return {boolean} - true if the handler was successfully added
 */

function addEventHandler(eventName, callback) {
  var result = false;
  var w = getWindow();

  if (w) {
    result = attachEvent(w, eventName, callback);
    result = attachEvent(w["body"], eventName, callback) || result;
  }

  var doc = EnvUtils_getDocument();

  if (doc) {
    result = attachEvent(doc, eventName, callback) || result;
  }

  return result;
}
/**
 * Bind the listener to the array of events
 * @param events An string array of event names to bind the listener to
 * @param listener The event callback to call when the event is triggered
 * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.
 * @returns true - when at least one of the events was registered otherwise false
 */

function addEventListeners(events, listener, excludeEvents) {
  var added = false;

  if (listener && events && isArray(events)) {
    var excluded_1 = [];
    arrForEach(events, function (name) {
      if (HelperFuncs_isString(name)) {
        if (!excludeEvents || HelperFuncs_arrIndexOf(excludeEvents, name) === -1) {
          added = addEventHandler(name, listener) || added;
        } else {
          excluded_1.push(name);
        }
      }
    });

    if (!added && excluded_1.length > 0) {
      // Failed to add any listeners and we excluded some, so just attempt to add the excluded events
      added = addEventListeners(excluded_1, listener);
    }
  }

  return added;
}
/**
 * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,
 * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden
 * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is
 * just navigating to a different Tab and may come back (without unloading the page). As such you may also
 * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.
 * @param listener - The event callback to call when a page unload event is triggered
 * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.
 * @returns true - when at least one of the events was registered otherwise false
 */

function addPageUnloadEventListener(listener, excludeEvents) {
  // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server
  // As just hooking the window does not always fire (on chrome) for page navigation's.
  return addEventListeners(["beforeunload", "unload", "pagehide"], listener, excludeEvents);
}
/**
 * Listen to the pagehide and visibility changing to 'hidden' events
 * @param listener - The event callback to call when a page hide event is triggered
 * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.
 * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide
 * @returns true - when at least one of the events was registered otherwise false
 */

function addPageHideEventListener(listener, excludeEvents) {
  function _handlePageVisibility(evt) {
    var doc = EnvUtils_getDocument();

    if (listener && doc && doc.visibilityState === "hidden") {
      listener(evt);
    }
  }

  var pageUnloadAdded = false;

  if (!excludeEvents || HelperFuncs_arrIndexOf(excludeEvents, strPageHide) === -1) {
    pageUnloadAdded = addEventHandler(strPageHide, listener);
  }

  if (!excludeEvents || HelperFuncs_arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {
    pageUnloadAdded = addEventHandler(strVisibilityChangeEvt, _handlePageVisibility) || pageUnloadAdded;
  }

  if (!pageUnloadAdded && excludeEvents) {
    // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything
    pageUnloadAdded = addPageHideEventListener(listener);
  }

  return pageUnloadAdded;
}
/**
 * Listen to the pageshow and visibility changing to 'visible' events
 * @param listener - The event callback to call when a page is show event is triggered
 * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.
 * @returns true - when at least one of the events was registered otherwise false
 */

function addPageShowEventListener(listener, excludeEvents) {
  function _handlePageVisibility(evt) {
    var doc = getDocument();

    if (listener && doc && doc.visibilityState === "visible") {
      listener(evt);
    }
  }

  var pageShowAdded = false;

  if (!excludeEvents || arrIndexOf(excludeEvents, strPageShow) === -1) {
    pageShowAdded = addEventHandler(strPageShow, listener);
  }

  if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {
    pageShowAdded = addEventHandler(strVisibilityChangeEvt, _handlePageVisibility) || pageShowAdded;
  }

  if (!pageShowAdded && excludeEvents) {
    // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything
    pageShowAdded = addPageShowEventListener(listener);
  }

  return pageShowAdded;
}
function newGuid() {
  function randomHexDigit() {
    return randomValue(15); // Get a random value from 0..15
  }

  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(GuidRegex, function (c) {
    var r = randomHexDigit() | 0,
        v = c === "x" ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
}
/**
 * Return the current value of the Performance Api now() function (if available) and fallback to dateNow() if it is unavailable (IE9 or less)
 * https://caniuse.com/#search=performance.now
 */

function perfNow() {
  var perf = getPerformance();

  if (perf && perf.now) {
    return perf.now();
  }

  return dateNow();
}
/**
 * Generate random base64 id string.
 * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)
 * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22
 */

function newId(maxLength) {
  if (maxLength === void 0) {
    maxLength = 22;
  }

  var base64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; // Start with an initial random number, consuming the value in reverse byte order

  var number = RandomHelper_random32() >>> 0; // Make sure it's a +ve number

  var chars = 0;
  var result = "";

  while (result.length < maxLength) {
    chars++;
    result += base64chars.charAt(number & 0x3F);
    number >>>= 6; // Zero fill with right shift

    if (chars === 5) {
      // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char
      // So add on another 30 bits and make sure it's +ve
      number = (RandomHelper_random32() << 2 & 0xFFFFFFFF | number & 0x03) >>> 0;
      chars = 0; // We need to reset the number every 5 chars (30 bits)
    }
  }

  return result;
}
/**
 * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.
 * @param value - The value to check whether it ends with the search value.
 * @param search - The characters to be searched for at the end of the value.
 * @returns true if the given search value is found at the end of the string, otherwise false.
 */

function CoreUtils_strEndsWith(value, search) {
  if (value && search) {
    var len = value.length;
    var start = len - search.length;
    return value.substring(start >= 0 ? start : 0, len) === search;
  }

  return false;
}
/**
 * generate W3C trace id
 */

function generateW3CId() {
  var hexValues = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"]; // rfc4122 version 4 UUID without dashes and with lowercase letters

  var oct = "",
      tmp;

  for (var a = 0; a < 4; a++) {
    tmp = RandomHelper_random32();
    oct += hexValues[tmp & 0xF] + hexValues[tmp >> 4 & 0xF] + hexValues[tmp >> 8 & 0xF] + hexValues[tmp >> 12 & 0xF] + hexValues[tmp >> 16 & 0xF] + hexValues[tmp >> 20 & 0xF] + hexValues[tmp >> 24 & 0xF] + hexValues[tmp >> 28 & 0xF];
  } // "Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively"


  var clockSequenceHi = hexValues[8 + (RandomHelper_random32() & 0x03) | 0];
  return oct.substr(0, 8) + oct.substr(9, 4) + "4" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);
}
/**
 * Provides a collection of utility functions, included for backward compatibility with previous releases.
 * @deprecated Marking this instance as deprecated in favor of direct usage of the helper functions
 * as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items
 * in your resulting code.
 */

var CoreUtils = {
  _canUseCookies: undefined,
  isTypeof: isTypeof,
  isUndefined: isUndefined,
  isNullOrUndefined: isNullOrUndefined,
  hasOwnProperty: HelperFuncs_hasOwnProperty,
  isFunction: isFunction,
  isObject: isObject,
  isDate: isDate,
  isArray: isArray,
  isError: isError,
  isString: HelperFuncs_isString,
  isNumber: isNumber,
  isBoolean: isBoolean,
  toISOString: toISOString,
  arrForEach: arrForEach,
  arrIndexOf: HelperFuncs_arrIndexOf,
  arrMap: arrMap,
  arrReduce: arrReduce,
  strTrim: strTrim,
  objCreate: objCreateFn,
  objKeys: objKeys,
  objDefineAccessors: objDefineAccessors,
  addEventHandler: addEventHandler,
  dateNow: dateNow,
  isIE: isIE,
  disableCookies: disableCookies,
  newGuid: newGuid,
  perfNow: perfNow,
  newId: newId,
  randomValue: randomValue,
  random32: RandomHelper_random32,
  mwcRandomSeed: mwcRandomSeed,
  mwcRandom32: mwcRandom32,
  generateW3CId: generateW3CId
};
var GuidRegex = /[xy]/g;
var EventHelper = {
  Attach: attachEvent,
  AttachEvent: attachEvent,
  Detach: detachEvent,
  DetachEvent: detachEvent
};
/**
 * Helper to support backward compatibility for users that use the legacy cookie handling functions and the use the internal
 * CoreUtils._canUseCookies global flag to enable/disable cookies usage.
 * Note: This has the following deliberate side-effects
 * - Creates the global (legacy) cookie manager if it does not already exist
 * - Attempts to add "listeners" to the CoreUtils._canUseCookies property to support the legacy usage
 * @param config
 * @param logger
 * @returns
 */

function _legacyCookieMgr(config, logger) {
  var cookieMgr = _gblCookieMgr(config, logger);

  var legacyCanUseCookies = CoreUtils._canUseCookies;

  if (_cookieMgrs === null) {
    _cookieMgrs = [];
    _canUseCookies = legacyCanUseCookies; // Dynamically create get/set property accessors for backward compatibility for enabling / disabling cookies
    // this WILL NOT work for ES3 browsers (< IE8)

    objDefineAccessors(CoreUtils, "_canUseCookies", function () {
      return _canUseCookies;
    }, function (value) {
      _canUseCookies = value;
      arrForEach(_cookieMgrs, function (mgr) {
        mgr.setEnabled(value);
      });
    });
  }

  if (HelperFuncs_arrIndexOf(_cookieMgrs, cookieMgr) === -1) {
    _cookieMgrs.push(cookieMgr);
  }

  if (isBoolean(legacyCanUseCookies)) {
    cookieMgr.setEnabled(legacyCanUseCookies);
  }

  if (isBoolean(_canUseCookies)) {
    cookieMgr.setEnabled(_canUseCookies);
  }

  return cookieMgr;
}
/**
 * @deprecated - Use the core.getCookieMgr().disable()
 * Force the SDK not to store and read any data from cookies.
 */

function disableCookies() {
  _legacyCookieMgr().setEnabled(false);
}
/**
 * @deprecated - Use the core.getCookieMgr().isEnabled()
 * Helper method to tell if document.cookie object is available and whether it can be used.
 */

function canUseCookies(logger) {
  return _legacyCookieMgr(null, logger).isEnabled();
}
/**
 * @deprecated - Use the core.getCookieMgr().get()
 * helper method to access userId and sessionId cookie
 */

function getCookie(logger, name) {
  return _legacyCookieMgr(null, logger).get(name);
}
/**
 * @deprecated - Use the core.getCookieMgr().set()
 * helper method to set userId and sessionId cookie
 */

function setCookie(logger, name, value, domain) {
  _legacyCookieMgr(null, logger).set(name, value, null, domain);
}
/**
 * @deprecated - Use the core.getCookieMgr().del()
 * Deletes a cookie by setting it's expiration time in the past.
 * @param name - The name of the cookie to delete.
 */

function deleteCookie(logger, name) {
  return _legacyCookieMgr(null, logger).del(name);
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
// Licensed under the




























var PropertiesPluginIdentifier = "AppInsightsPropertiesPlugin";
var BreezeChannelIdentifier = "AppInsightsChannelPlugin";
var AnalyticsPluginIdentifier = "ApplicationInsightsAnalytics";
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

function dataSanitizeKeyAndAddUniqueness(logger, key, map) {
  var origLength = key.length;
  var field = dataSanitizeKey(logger, key); // validation truncated the length.  We need to add uniqueness

  if (field.length !== origLength) {
    var i = 0;
    var uniqueField = field;

    while (map[uniqueField] !== undefined) {
      i++;
      uniqueField = field.substring(0, 150
      /* MAX_NAME_LENGTH */
      - 3) + dsPadNumber(i);
    }

    field = uniqueField;
  }

  return field;
}
function dataSanitizeKey(logger, name) {
  var nameTrunc;

  if (name) {
    // Remove any leading or trailing whitespace
    name = strTrim(name.toString()); // truncate the string to 150 chars

    if (name.length > 150
    /* MAX_NAME_LENGTH */
    ) {
      nameTrunc = name.substring(0, 150
      /* MAX_NAME_LENGTH */
      );
      logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, "name is too long.  It has been truncated to " + 150
      /* MAX_NAME_LENGTH */
      + " characters.", {
        name: name
      }, true);
    }
  }

  return nameTrunc || name;
}
function dataSanitizeString(logger, value, maxLength) {
  if (maxLength === void 0) {
    maxLength = 1024
    /* MAX_STRING_LENGTH */
    ;
  }

  var valueTrunc;

  if (value) {
    maxLength = maxLength ? maxLength : 1024
    /* MAX_STRING_LENGTH */
    ; // in case default parameters dont work

    value = strTrim(value);

    if (value.toString().length > maxLength) {
      valueTrunc = value.toString().substring(0, maxLength);
      logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, "string value is too long. It has been truncated to " + maxLength + " characters.", {
        value: value
      }, true);
    }
  }

  return valueTrunc || value;
}
function dataSanitizeUrl(logger, url) {
  return dataSanitizeInput(logger, url, 2048
  /* MAX_URL_LENGTH */
  , _InternalMessageId.UrlTooLong);
}
function dataSanitizeMessage(logger, message) {
  var messageTrunc;

  if (message) {
    if (message.length > 32768
    /* MAX_MESSAGE_LENGTH */
    ) {
      messageTrunc = message.substring(0, 32768
      /* MAX_MESSAGE_LENGTH */
      );
      logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, "message is too long, it has been truncated to " + 32768
      /* MAX_MESSAGE_LENGTH */
      + " characters.", {
        message: message
      }, true);
    }
  }

  return messageTrunc || message;
}
function dataSanitizeException(logger, exception) {
  var exceptionTrunc;

  if (exception) {
    // Make surte its a string
    var value = "" + exception;

    if (value.length > 32768
    /* MAX_EXCEPTION_LENGTH */
    ) {
      exceptionTrunc = value.substring(0, 32768
      /* MAX_EXCEPTION_LENGTH */
      );
      logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, "exception is too long, it has been truncated to " + 32768
      /* MAX_EXCEPTION_LENGTH */
      + " characters.", {
        exception: exception
      }, true);
    }
  }

  return exceptionTrunc || exception;
}
function dataSanitizeProperties(logger, properties) {
  if (properties) {
    var tempProps_1 = {};
    objForEachKey(properties, function (prop, value) {
      if (isObject(value) && hasJSON()) {
        // Stringify any part C properties
        try {
          value = getJSON().stringify(value);
        } catch (e) {
          logger && logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, "custom property is not valid", {
            exception: e
          }, true);
        }
      }

      value = dataSanitizeString(logger, value, 8192
      /* MAX_PROPERTY_LENGTH */
      );
      prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);
      tempProps_1[prop] = value;
    });
    properties = tempProps_1;
  }

  return properties;
}
function dataSanitizeMeasurements(logger, measurements) {
  if (measurements) {
    var tempMeasurements_1 = {};
    objForEachKey(measurements, function (measure, value) {
      measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);
      tempMeasurements_1[measure] = value;
    });
    measurements = tempMeasurements_1;
  }

  return measurements;
}
function dataSanitizeId(logger, id) {
  return id ? dataSanitizeInput(logger, id, 128
  /* MAX_ID_LENGTH */
  , _InternalMessageId.IdTooLong).toString() : id;
}
function dataSanitizeInput(logger, input, maxLength, _msgId) {
  var inputTrunc;

  if (input) {
    input = strTrim(input);

    if (input.length > maxLength) {
      inputTrunc = input.substring(0, maxLength);
      logger && logger.throwInternal(LoggingSeverity.WARNING, _msgId, "input is too long, it has been truncated to " + maxLength + " characters.", {
        data: input
      }, true);
    }
  }

  return inputTrunc || input;
}
function dsPadNumber(num) {
  var s = "00" + num;
  return s.substr(s.length - 3);
}
/**
 * Provides the DataSanitizer functions within the previous namespace.
 */

var DataSanitizer = {
  MAX_NAME_LENGTH: 150
  /* MAX_NAME_LENGTH */
  ,
  MAX_ID_LENGTH: 128
  /* MAX_ID_LENGTH */
  ,
  MAX_PROPERTY_LENGTH: 8192
  /* MAX_PROPERTY_LENGTH */
  ,
  MAX_STRING_LENGTH: 1024
  /* MAX_STRING_LENGTH */
  ,
  MAX_URL_LENGTH: 2048
  /* MAX_URL_LENGTH */
  ,
  MAX_MESSAGE_LENGTH: 32768
  /* MAX_MESSAGE_LENGTH */
  ,
  MAX_EXCEPTION_LENGTH: 32768
  /* MAX_EXCEPTION_LENGTH */
  ,
  sanitizeKeyAndAddUniqueness: dataSanitizeKeyAndAddUniqueness,
  sanitizeKey: dataSanitizeKey,
  sanitizeString: dataSanitizeString,
  sanitizeUrl: dataSanitizeUrl,
  sanitizeMessage: dataSanitizeMessage,
  sanitizeException: dataSanitizeException,
  sanitizeProperties: dataSanitizeProperties,
  sanitizeMeasurements: dataSanitizeMeasurements,
  sanitizeId: dataSanitizeId,
  sanitizeInput: dataSanitizeInput,
  padNumber: dsPadNumber,
  trim: strTrim
};
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * This is an internal property used to cause internal (reporting) requests to be ignored from reporting
 * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will
 * also be ignored for future requests even when this property is not provided.
 * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK
 * @ignore
 */
var DisabledPropertyName = "Microsoft_ApplicationInsights_BypassAjaxInstrumentation";
var SampleRate = "sampleRate";
var ProcessLegacy = "ProcessLegacy";
var HttpMethod = "http.method";
var DEFAULT_BREEZE_ENDPOINT = "https://dc.services.visualstudio.com";
var strNotSpecified = "not_specified";
var strIkey = "iKey";
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */




var TelemetryItemCreator = function () {
  function TelemetryItemCreator() {}
  /**
   * Create a telemetry item that the 1DS channel understands
   * @param item domain specific properties; part B
   * @param baseType telemetry item type. ie PageViewData
   * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView
   * @param customProperties user defined custom properties; part C
   * @param systemProperties system properties that are added to the context; part A
   * @returns ITelemetryItem that is sent to channel
   */


  TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {
    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;

    if (isNullOrUndefined(item) || isNullOrUndefined(baseType) || isNullOrUndefined(envelopeName)) {
      throw Error("Input doesn't contain all required fields");
    }

    var iKey = "";

    if (item[strIkey]) {
      iKey = item[strIkey];
      delete item[strIkey];
    }

    var telemetryItem = {
      name: envelopeName,
      time: toISOString(new Date()),
      iKey: iKey,
      ext: systemProperties ? systemProperties : {},
      tags: [],
      data: {},
      baseType: baseType,
      baseData: item // Part B

    }; // Part C

    if (!isNullOrUndefined(customProperties)) {
      objForEachKey(customProperties, function (prop, value) {
        telemetryItem.data[prop] = value;
      });
    }

    return telemetryItem;
  };

  return TelemetryItemCreator;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.
 */
var EventData = function () {
  function EventData() {
    /**
     * Schema version
     */
    this.ver = 2;
    /**
     * Collection of custom properties.
     */

    this.properties = {};
    /**
     * Collection of custom measurements.
     */

    this.measurements = {};
  }

  return EventData;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */





var Event_Event = function (_super) {
  __extendsFn(Event, _super);
  /**
   * Constructs a new instance of the EventTelemetry object
   */


  function Event(logger, name, properties, measurements) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      ver: 1
      /* Required */
      ,
      name: 1
      /* Required */
      ,
      properties: 0
      /* Default */
      ,
      measurements: 0
      /* Default */

    };
    _this.name = dataSanitizeString(logger, name) || strNotSpecified;
    _this.properties = dataSanitizeProperties(logger, properties);
    _this.measurements = dataSanitizeMeasurements(logger, measurements);
    return _this;
  }

  Event.envelopeType = "Microsoft.ApplicationInsights.{0}.Event";
  Event.dataType = "EventData";
  return Event;
}(EventData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.
 */
var MessageData = function () {
  function MessageData() {
    /**
     * Schema version
     */
    this.ver = 2;
    /**
     * Collection of custom properties.
     */

    this.properties = {};
    /**
     * Collection of custom measurements.
     */

    this.measurements = {};
  }

  return MessageData;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */





var Trace = function (_super) {
  __extendsFn(Trace, _super);
  /**
   * Constructs a new instance of the TraceTelemetry object
   */


  function Trace(logger, message, severityLevel, properties, measurements) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      ver: 1
      /* Required */
      ,
      message: 1
      /* Required */
      ,
      severityLevel: 0
      /* Default */
      ,
      properties: 0
      /* Default */

    };
    message = message || strNotSpecified;
    _this.message = dataSanitizeMessage(logger, message);
    _this.properties = dataSanitizeProperties(logger, properties);
    _this.measurements = dataSanitizeMeasurements(logger, measurements);

    if (severityLevel) {
      _this.severityLevel = severityLevel;
    }

    return _this;
  }

  Trace.envelopeType = "Microsoft.ApplicationInsights.{0}.Message";
  Trace.dataType = "MessageData";
  return Trace;
}(MessageData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.
 */
var MetricData = function () {
  function MetricData() {
    /**
     * Schema version
     */
    this.ver = 2;
    /**
     * List of metrics. Only one metric in the list is currently supported by Application Insights storage. If multiple data points were sent only the first one will be used.
     */

    this.metrics = [];
    /**
     * Collection of custom properties.
     */

    this.properties = {};
    /**
     * Collection of custom measurements.
     */

    this.measurements = {};
  }

  return MetricData;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
// THIS FILE WAS AUTOGENERATED

/**
 * Type of the metric data measurement.
 */
var DataPointType;

(function (DataPointType) {
  DataPointType[DataPointType["Measurement"] = 0] = "Measurement";
  DataPointType[DataPointType["Aggregation"] = 1] = "Aggregation";
})(DataPointType || (DataPointType = {}));
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * Metric data single measurement.
 */

var DataPoint = function () {
  function DataPoint() {
    /**
     * Metric type. Single measurement or the aggregated value.
     */
    this.kind = DataPointType.Measurement;
  }

  return DataPoint;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var DataPoint_DataPoint = function (_super) {
  __extendsFn(DataPoint, _super);

  function DataPoint() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /**
     * The data contract for serializing this object.
     */


    _this.aiDataContract = {
      name: 1
      /* Required */
      ,
      kind: 0
      /* Default */
      ,
      value: 1
      /* Required */
      ,
      count: 0
      /* Default */
      ,
      min: 0
      /* Default */
      ,
      max: 0
      /* Default */
      ,
      stdDev: 0
      /* Default */

    };
    return _this;
  }

  return DataPoint;
}(DataPoint);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






var Metric = function (_super) {
  __extendsFn(Metric, _super);
  /**
   * Constructs a new instance of the MetricTelemetry object
   */


  function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      ver: 1
      /* Required */
      ,
      metrics: 1
      /* Required */
      ,
      properties: 0
      /* Default */

    };
    var dataPoint = new DataPoint_DataPoint();
    dataPoint.count = count > 0 ? count : undefined;
    dataPoint.max = isNaN(max) || max === null ? undefined : max;
    dataPoint.min = isNaN(min) || min === null ? undefined : min;
    dataPoint.name = dataSanitizeString(logger, name) || strNotSpecified;
    dataPoint.value = value;
    dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;
    _this.metrics = [dataPoint];
    _this.properties = dataSanitizeProperties(logger, properties);
    _this.measurements = dataSanitizeMeasurements(logger, measurements);
    return _this;
  }

  Metric.envelopeType = "Microsoft.ApplicationInsights.{0}.Metric";
  Metric.dataType = "MetricData";
  return Metric;
}(MetricData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
 // THIS FILE WAS AUTOGENERATED


/**
 * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.
 */

var PageViewData = function (_super) {
  __extendsFn(PageViewData, _super);

  function PageViewData() {
    var _this = _super.call(this) || this;
    /**
     * Schema version
     */


    _this.ver = 2;
    /**
     * Collection of custom properties.
     */

    _this.properties = {};
    /**
     * Collection of custom measurements.
     */

    _this.measurements = {};
    return _this;
  }

  return PageViewData;
}(EventData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/HelperFuncs.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

function stringToBoolOrDefault(str, defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = false;
  }

  if (str === undefined || str === null) {
    return defaultValue;
  }

  return str.toString().toLowerCase() === "true";
}
/**
 * Convert ms to c# time span format
 */

function msToTimeSpan(totalms) {
  if (isNaN(totalms) || totalms < 0) {
    totalms = 0;
  }

  totalms = Math.round(totalms);
  var ms = "" + totalms % 1000;
  var sec = "" + Math.floor(totalms / 1000) % 60;
  var min = "" + Math.floor(totalms / (1000 * 60)) % 60;
  var hour = "" + Math.floor(totalms / (1000 * 60 * 60)) % 24;
  var days = Math.floor(totalms / (1000 * 60 * 60 * 24));
  ms = ms.length === 1 ? "00" + ms : ms.length === 2 ? "0" + ms : ms;
  sec = sec.length < 2 ? "0" + sec : sec;
  min = min.length < 2 ? "0" + min : min;
  hour = hour.length < 2 ? "0" + hour : hour;
  return (days > 0 ? days + "." : "") + hour + ":" + min + ":" + sec + "." + ms;
}
function getExtensionByName(extensions, identifier) {
  var extension = null;
  arrForEach(extensions, function (value) {
    if (value.identifier === identifier) {
      extension = value;
      return -1;
    }
  });
  return extension;
}
function isCrossOriginError(message, url, lineNumber, columnNumber, error) {
  return !error && HelperFuncs_isString(message) && (message === "Script error." || message === "Script error");
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






var PageView = function (_super) {
  __extendsFn(PageView, _super);
  /**
   * Constructs a new instance of the PageEventTelemetry object
   */


  function PageView(logger, name, url, durationMs, properties, measurements, id) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      ver: 1
      /* Required */
      ,
      name: 0
      /* Default */
      ,
      url: 0
      /* Default */
      ,
      duration: 0
      /* Default */
      ,
      properties: 0
      /* Default */
      ,
      measurements: 0
      /* Default */
      ,
      id: 0
      /* Default */

    };
    _this.id = dataSanitizeId(logger, id);
    _this.url = dataSanitizeUrl(logger, url);
    _this.name = dataSanitizeString(logger, name) || strNotSpecified;

    if (!isNaN(durationMs)) {
      _this.duration = msToTimeSpan(durationMs);
    }

    _this.properties = dataSanitizeProperties(logger, properties);
    _this.measurements = dataSanitizeMeasurements(logger, measurements);
    return _this;
  }

  PageView.envelopeType = "Microsoft.ApplicationInsights.{0}.Pageview";
  PageView.dataType = "PageviewData";
  return PageView;
}(PageViewData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
 // THIS FILE WAS AUTOGENERATED


/**
 * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.
 */

var PageViewPerfData = function (_super) {
  __extendsFn(PageViewPerfData, _super);

  function PageViewPerfData() {
    var _this = _super.call(this) || this;
    /**
     * Schema version
     */


    _this.ver = 2;
    /**
     * Collection of custom properties.
     */

    _this.properties = {};
    /**
     * Collection of custom measurements.
     */

    _this.measurements = {};
    return _this;
  }

  return PageViewPerfData;
}(PageViewData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */





var PageViewPerformance = function (_super) {
  __extendsFn(PageViewPerformance, _super);
  /**
   * Constructs a new instance of the PageEventTelemetry object
   */


  function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      ver: 1
      /* Required */
      ,
      name: 0
      /* Default */
      ,
      url: 0
      /* Default */
      ,
      duration: 0
      /* Default */
      ,
      perfTotal: 0
      /* Default */
      ,
      networkConnect: 0
      /* Default */
      ,
      sentRequest: 0
      /* Default */
      ,
      receivedResponse: 0
      /* Default */
      ,
      domProcessing: 0
      /* Default */
      ,
      properties: 0
      /* Default */
      ,
      measurements: 0
      /* Default */

    };
    _this.url = dataSanitizeUrl(logger, url);
    _this.name = dataSanitizeString(logger, name) || strNotSpecified;
    _this.properties = dataSanitizeProperties(logger, properties);
    _this.measurements = dataSanitizeMeasurements(logger, measurements);

    if (cs4BaseData) {
      _this.domProcessing = cs4BaseData.domProcessing;
      _this.duration = cs4BaseData.duration;
      _this.networkConnect = cs4BaseData.networkConnect;
      _this.perfTotal = cs4BaseData.perfTotal;
      _this.receivedResponse = cs4BaseData.receivedResponse;
      _this.sentRequest = cs4BaseData.sentRequest;
    }

    return _this;
  }

  PageViewPerformance.envelopeType = "Microsoft.ApplicationInsights.{0}.PageviewPerformance";
  PageViewPerformance.dataType = "PageviewPerformanceData";
  return PageViewPerformance;
}(PageViewPerfData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
// THIS FILE WAS AUTOGENERATED

/**
 * Stack frame information.
 */
var StackFrame = function () {
  function StackFrame() {}

  return StackFrame;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.
 */
var ExceptionData = function () {
  function ExceptionData() {
    /**
     * Schema version
     */
    this.ver = 2;
    /**
     * Exception chain - list of inner exceptions.
     */

    this.exceptions = [];
    /**
     * Collection of custom properties.
     */

    this.properties = {};
    /**
     * Collection of custom measurements.
     */

    this.measurements = {};
  }

  return ExceptionData;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * Exception details of the exception in a chain.
 */
var ExceptionDetails = function () {
  function ExceptionDetails() {
    /**
     * Indicates if full exception stack is provided in the exception. The stack may be trimmed, such as in the case of a StackOverflow exception.
     */
    this.hasFullStack = true;
    /**
     * List of stack frames. Either stack or parsedStack should have a value.
     */

    this.parsedStack = [];
  }

  return ExceptionDetails;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */







var NoMethod = "<no_method>";
var strError = "error";
var strStack = "stack";
var strStackDetails = "stackDetails";
var strErrorSrc = "errorSrc";
var strMessage = "message";
var strDescription = "description";

function _stringify(value, convertToString) {
  var result = value;

  if (result && !HelperFuncs_isString(result)) {
    if (JSON && JSON.stringify) {
      result = JSON.stringify(value);

      if (convertToString && (!result || result === "{}")) {
        if (isFunction(value.toString)) {
          result = value.toString();
        } else {
          result = "" + value;
        }
      }
    } else {
      result = "" + value + " - (Missing JSON.stringify)";
    }
  }

  return result || "";
}

function _formatMessage(theEvent, errorType) {
  var evtMessage = theEvent;

  if (theEvent) {
    if (evtMessage && !HelperFuncs_isString(evtMessage)) {
      evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;
    } // Make sure the message is a string


    if (evtMessage && !HelperFuncs_isString(evtMessage)) {
      // tslint:disable-next-line: prefer-conditional-expression
      evtMessage = _stringify(evtMessage, true);
    }

    if (theEvent["filename"]) {
      // Looks like an event object with filename
      evtMessage = evtMessage + " @" + (theEvent["filename"] || "") + ":" + (theEvent["lineno"] || "?") + ":" + (theEvent["colno"] || "?");
    }
  } // Automatically add the error type to the message if it does already appear to be present


  if (errorType && errorType !== "String" && errorType !== "Object" && errorType !== "Error" && (evtMessage || "").indexOf(errorType) === -1) {
    evtMessage = errorType + ": " + evtMessage;
  }

  return evtMessage || "";
}

function _isExceptionDetailsInternal(value) {
  try {
    if (isObject(value)) {
      return "hasFullStack" in value && "typeName" in value;
    }
  } catch (e) {// This can happen with some native browser objects, but should not happen for the type we are checking for
  }

  return false;
}

function _isExceptionInternal(value) {
  try {
    if (isObject(value)) {
      return "ver" in value && "exceptions" in value && "properties" in value;
    }
  } catch (e) {// This can happen with some native browser objects, but should not happen for the type we are checking for
  }

  return false;
}

function _isStackDetails(details) {
  return details && details.src && HelperFuncs_isString(details.src) && details.obj && isArray(details.obj);
}

function _convertStackObj(errorStack) {
  var src = errorStack || "";

  if (!HelperFuncs_isString(src)) {
    if (HelperFuncs_isString(src[strStack])) {
      src = src[strStack];
    } else {
      src = "" + src;
    }
  }

  var items = src.split("\n");
  return {
    src: src,
    obj: items
  };
}

function _getOperaStack(errorMessage) {
  var stack = [];
  var lines = errorMessage.split("\n");

  for (var lp = 0; lp < lines.length; lp++) {
    var entry = lines[lp];

    if (lines[lp + 1]) {
      entry += "@" + lines[lp + 1];
      lp++;
    }

    stack.push(entry);
  }

  return {
    src: errorMessage,
    obj: stack
  };
}

function _getStackFromErrorObj(errorObj) {
  var details = null;

  if (errorObj) {
    try {
      /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot
      notation for undefined objects and we don't want to loose the error from being reported */
      if (errorObj[strStack]) {
        // Chrome/Firefox
        details = _convertStackObj(errorObj[strStack]);
      } else if (errorObj[strError] && errorObj[strError][strStack]) {
        // Edge error event provides the stack and error object
        details = _convertStackObj(errorObj[strError][strStack]);
      } else if (errorObj["exception"] && errorObj.exception[strStack]) {
        details = _convertStackObj(errorObj.exception[strStack]);
      } else if (_isStackDetails(errorObj)) {
        details = errorObj;
      } else if (_isStackDetails(errorObj[strStackDetails])) {
        details = errorObj[strStackDetails];
      } else if (window["opera"] && errorObj[strMessage]) {
        // Opera
        details = _getOperaStack(errorObj.message);
      } else if (HelperFuncs_isString(errorObj)) {
        details = _convertStackObj(errorObj);
      } else {
        var evtMessage = errorObj[strMessage] || errorObj[strDescription] || "";

        if (HelperFuncs_isString(errorObj[strErrorSrc])) {
          if (evtMessage) {
            evtMessage += "\n";
          }

          evtMessage += " from " + errorObj[strErrorSrc];
        }

        if (evtMessage) {
          details = _convertStackObj(evtMessage);
        }
      }
    } catch (e) {
      // something unexpected happened so to avoid failing to report any error lets swallow the exception
      // and fallback to the callee/caller method
      details = _convertStackObj(e);
    }
  }

  return details || {
    src: "",
    obj: null
  };
}

function _formatStackTrace(stackDetails) {
  var stack = "";

  if (stackDetails) {
    if (stackDetails.obj) {
      arrForEach(stackDetails.obj, function (entry) {
        stack += entry + "\n";
      });
    } else {
      stack = stackDetails.src || "";
    }
  }

  return stack;
}

function _parseStack(stack) {
  var parsedStack;
  var frames = stack.obj;

  if (frames && frames.length > 0) {
    parsedStack = [];
    var level_1 = 0;
    var totalSizeInBytes_1 = 0;
    arrForEach(frames, function (frame) {
      var theFrame = frame.toString();

      if (_StackFrame.regex.test(theFrame)) {
        var parsedFrame = new _StackFrame(theFrame, level_1++);
        totalSizeInBytes_1 += parsedFrame.sizeInBytes;
        parsedStack.push(parsedFrame);
      }
    }); // DP Constraint - exception parsed stack must be < 32KB
    // remove frames from the middle to meet the threshold

    var exceptionParsedStackThreshold = 32 * 1024;

    if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {
      var left = 0;
      var right = parsedStack.length - 1;
      var size = 0;
      var acceptedLeft = left;
      var acceptedRight = right;

      while (left < right) {
        // check size
        var lSize = parsedStack[left].sizeInBytes;
        var rSize = parsedStack[right].sizeInBytes;
        size += lSize + rSize;

        if (size > exceptionParsedStackThreshold) {
          // remove extra frames from the middle
          var howMany = acceptedRight - acceptedLeft + 1;
          parsedStack.splice(acceptedLeft, howMany);
          break;
        } // update pointers


        acceptedLeft = left;
        acceptedRight = right;
        left++;
        right--;
      }
    }
  }

  return parsedStack;
}

function _getErrorType(errorType) {
  // Gets the Error Type by passing the constructor (used to get the true type of native error object).
  var typeName = "";

  if (errorType) {
    typeName = errorType.typeName || errorType.name || "";

    if (!typeName) {
      try {
        var funcNameRegex = /function (.{1,200})\(/;
        var results = funcNameRegex.exec(errorType.constructor.toString());
        typeName = results && results.length > 1 ? results[1] : "";
      } catch (e) {// eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do
      }
    }
  }

  return typeName;
}
/**
 * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.
 * @param errorObj The supplied errorObj
 */


function _formatErrorCode(errorObj) {
  if (errorObj) {
    try {
      if (!HelperFuncs_isString(errorObj)) {
        var errorType = _getErrorType(errorObj);

        var result = _stringify(errorObj, false);

        if (!result || result === "{}") {
          if (errorObj[strError]) {
            // Looks like an MS Error Event
            errorObj = errorObj[strError];
            errorType = _getErrorType(errorObj);
          }

          result = _stringify(errorObj, true);
        }

        if (result.indexOf(errorType) !== 0 && errorType !== "String") {
          return errorType + ":" + result;
        }

        return result;
      }
    } catch (e) {// eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do
    }
  } // Fallback to just letting the object format itself into a string


  return "" + (errorObj || "");
}

var Exception = function (_super) {
  __extendsFn(Exception, _super);
  /**
   * Constructs a new instance of the ExceptionTelemetry object
   */


  function Exception(logger, exception, properties, measurements, severityLevel, id) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      ver: 1
      /* Required */
      ,
      exceptions: 1
      /* Required */
      ,
      severityLevel: 0
      /* Default */
      ,
      properties: 0
      /* Default */
      ,
      measurements: 0
      /* Default */

    };

    if (!_isExceptionInternal(exception)) {
      if (!properties) {
        properties = {};
      }

      _this.exceptions = [new _ExceptionDetails(logger, exception, properties)];
      _this.properties = dataSanitizeProperties(logger, properties);
      _this.measurements = dataSanitizeMeasurements(logger, measurements);

      if (severityLevel) {
        _this.severityLevel = severityLevel;
      }

      if (id) {
        _this.id = id;
      }
    } else {
      _this.exceptions = exception.exceptions;
      _this.properties = exception.properties;
      _this.measurements = exception.measurements;

      if (exception.severityLevel) {
        _this.severityLevel = exception.severityLevel;
      }

      if (exception.id) {
        _this.id = exception.id;
      }

      if (exception.problemGroup) {
        _this.problemGroup = exception.problemGroup;
      } // bool/int types, use isNullOrUndefined


      _this.ver = 2; // TODO: handle the CS"4.0" ==> breeze 2 conversion in a better way

      if (!isNullOrUndefined(exception.isManual)) {
        _this.isManual = exception.isManual;
      }
    }

    return _this;
  }

  Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {
    var errorType = _getErrorType(error || evt || message);

    return {
      message: _formatMessage(message, errorType),
      url: url,
      lineNumber: lineNumber,
      columnNumber: columnNumber,
      error: _formatErrorCode(error || evt || message),
      evt: _formatErrorCode(evt || message),
      typeName: errorType,
      stackDetails: _getStackFromErrorObj(stack || error || evt),
      errorSrc: errorSrc
    };
  };

  Exception.CreateFromInterface = function (logger, exception, properties, measurements) {
    var exceptions = exception.exceptions && arrMap(exception.exceptions, function (ex) {
      return _ExceptionDetails.CreateFromInterface(logger, ex);
    });
    var exceptionData = new Exception(logger, __assignFn(__assignFn({}, exception), {
      exceptions: exceptions
    }), properties, measurements);
    return exceptionData;
  };

  Exception.prototype.toInterface = function () {
    var _a = this,
        exceptions = _a.exceptions,
        properties = _a.properties,
        measurements = _a.measurements,
        severityLevel = _a.severityLevel,
        ver = _a.ver,
        problemGroup = _a.problemGroup,
        id = _a.id,
        isManual = _a.isManual;

    var exceptionDetailsInterface = exceptions instanceof Array && arrMap(exceptions, function (exception) {
      return exception.toInterface();
    }) || undefined;
    return {
      ver: "4.0",
      exceptions: exceptionDetailsInterface,
      severityLevel: severityLevel,
      properties: properties,
      measurements: measurements,
      problemGroup: problemGroup,
      id: id,
      isManual: isManual
    };
  };
  /**
   * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.
   */


  Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {
    return {
      exceptions: [{
        hasFullStack: true,
        message: message,
        stack: details,
        typeName: typeName
      }]
    };
  };

  Exception.envelopeType = "Microsoft.ApplicationInsights.{0}.Exception";
  Exception.dataType = "ExceptionData";
  Exception.formatError = _formatErrorCode;
  return Exception;
}(ExceptionData);



var _ExceptionDetails = function (_super) {
  __extendsFn(_ExceptionDetails, _super);

  function _ExceptionDetails(logger, exception, properties) {
    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      id: 0
      /* Default */
      ,
      outerId: 0
      /* Default */
      ,
      typeName: 1
      /* Required */
      ,
      message: 1
      /* Required */
      ,
      hasFullStack: 0
      /* Default */
      ,
      stack: 0
      /* Default */
      ,
      parsedStack: 2
      /* Array */

    };

    if (!_isExceptionDetailsInternal(exception)) {
      var error = exception;
      var evt = error && error.evt;

      if (!isError(error)) {
        error = error[strError] || evt || error;
      }

      _this.typeName = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;
      _this.message = dataSanitizeMessage(logger, _formatMessage(exception || error, _this.typeName)) || strNotSpecified;

      var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);

      _this.parsedStack = _parseStack(stack);
      _this[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));
      _this.hasFullStack = isArray(_this.parsedStack) && _this.parsedStack.length > 0;

      if (properties) {
        properties.typeName = properties.typeName || _this.typeName;
      }
    } else {
      _this.typeName = exception.typeName;
      _this.message = exception.message;
      _this[strStack] = exception[strStack];
      _this.parsedStack = exception.parsedStack;
      _this.hasFullStack = exception.hasFullStack;
    }

    return _this;
  }

  _ExceptionDetails.prototype.toInterface = function () {
    var parsedStack = this.parsedStack instanceof Array && arrMap(this.parsedStack, function (frame) {
      return frame.toInterface();
    });
    var exceptionDetailsInterface = {
      id: this.id,
      outerId: this.outerId,
      typeName: this.typeName,
      message: this.message,
      hasFullStack: this.hasFullStack,
      stack: this[strStack],
      parsedStack: parsedStack || undefined
    };
    return exceptionDetailsInterface;
  };

  _ExceptionDetails.CreateFromInterface = function (logger, exception) {
    var parsedStack = exception.parsedStack instanceof Array && arrMap(exception.parsedStack, function (frame) {
      return _StackFrame.CreateFromInterface(frame);
    }) || exception.parsedStack;
    var exceptionDetails = new _ExceptionDetails(logger, __assignFn(__assignFn({}, exception), {
      parsedStack: parsedStack
    }));
    return exceptionDetails;
  };

  return _ExceptionDetails;
}(ExceptionDetails);



var _StackFrame = function (_super) {
  __extendsFn(_StackFrame, _super);

  function _StackFrame(sourceFrame, level) {
    var _this = _super.call(this) || this;

    _this.sizeInBytes = 0;
    _this.aiDataContract = {
      level: 1
      /* Required */
      ,
      method: 1
      /* Required */
      ,
      assembly: 0
      /* Default */
      ,
      fileName: 0
      /* Default */
      ,
      line: 0
      /* Default */

    }; // Not converting this to isString() as typescript uses this logic to "understand" the different
    // types for the 2 different code paths

    if (typeof sourceFrame === "string") {
      var frame = sourceFrame;
      _this.level = level;
      _this.method = NoMethod;
      _this.assembly = strTrim(frame);
      _this.fileName = "";
      _this.line = 0;
      var matches = frame.match(_StackFrame.regex);

      if (matches && matches.length >= 5) {
        _this.method = strTrim(matches[2]) || _this.method;
        _this.fileName = strTrim(matches[4]);
        _this.line = parseInt(matches[5]) || 0;
      }
    } else {
      _this.level = sourceFrame.level;
      _this.method = sourceFrame.method;
      _this.assembly = sourceFrame.assembly;
      _this.fileName = sourceFrame.fileName;
      _this.line = sourceFrame.line;
      _this.sizeInBytes = 0;
    }

    _this.sizeInBytes += _this.method.length;
    _this.sizeInBytes += _this.fileName.length;
    _this.sizeInBytes += _this.assembly.length; // todo: these might need to be removed depending on how the back-end settles on their size calculation

    _this.sizeInBytes += _StackFrame.baseSize;
    _this.sizeInBytes += _this.level.toString().length;
    _this.sizeInBytes += _this.line.toString().length;
    return _this;
  }

  _StackFrame.CreateFromInterface = function (frame) {
    return new _StackFrame(frame, null
    /* level is available in frame interface */
    );
  };

  _StackFrame.prototype.toInterface = function () {
    return {
      level: this.level,
      method: this.method,
      assembly: this.assembly,
      fileName: this.fileName,
      line: this.line
    };
  }; // regex to match stack frames from ie/chrome/ff
  // methodName=$2, fileName=$4, lineNo=$5, column=$6


  _StackFrame.regex = /^([\s]+at)?[\s]{0,50}([^\@\()]+?)[\s]{0,50}(\@|\()([^\(\n]+):([0-9]+):([0-9]+)(\)?)$/;
  _StackFrame.baseSize = 58; // '{"method":"","level":,"assembly":"","fileName":"","line":}'.length

  return _StackFrame;
}(StackFrame);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
// THIS FILE WAS AUTOGENERATED

/**
 * Defines the level of severity for the event.
 */
var SeverityLevel;

(function (SeverityLevel) {
  SeverityLevel[SeverityLevel["Verbose"] = 0] = "Verbose";
  SeverityLevel[SeverityLevel["Information"] = 1] = "Information";
  SeverityLevel[SeverityLevel["Warning"] = 2] = "Warning";
  SeverityLevel[SeverityLevel["Error"] = 3] = "Error";
  SeverityLevel[SeverityLevel["Critical"] = 4] = "Critical";
})(SeverityLevel || (SeverityLevel = {}));
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * Type of storage to differentiate between local storage and session storage
 */
var StorageType;

(function (StorageType) {
  StorageType[StorageType["LocalStorage"] = 0] = "LocalStorage";
  StorageType[StorageType["SessionStorage"] = 1] = "SessionStorage";
})(StorageType || (StorageType = {}));

var DistributedTracingModes;

(function (DistributedTracingModes) {
  /**
   * (Default) Send Application Insights correlation headers
   */
  DistributedTracingModes[DistributedTracingModes["AI"] = 0] = "AI";
  /**
   * Send both W3C Trace Context headers and back-compatibility Application Insights headers
   */

  DistributedTracingModes[DistributedTracingModes["AI_AND_W3C"] = 1] = "AI_AND_W3C";
  /**
   * Send W3C Trace Context headers
   */

  DistributedTracingModes[DistributedTracingModes["W3C"] = 2] = "W3C";
})(DistributedTracingModes || (DistributedTracingModes = {}));
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/StorageHelperFuncs.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var _canUseLocalStorage = undefined;
var _canUseSessionStorage = undefined;
/**
 * Gets the localStorage object if available
 * @return {Storage} - Returns the storage object if available else returns null
 */

function _getLocalStorageObject() {
  if (utlCanUseLocalStorage()) {
    return _getVerifiedStorageObject(StorageType.LocalStorage);
  }

  return null;
}
/**
 * Tests storage object (localStorage or sessionStorage) to verify that it is usable
 * More details here: https://mathiasbynens.be/notes/localstorage-pattern
 * @param storageType Type of storage
 * @return {Storage} Returns storage object verified that it is usable
 */


function _getVerifiedStorageObject(storageType) {
  try {
    if (isNullOrUndefined(getGlobal())) {
      return null;
    }

    var uid = new Date();
    var storage = getGlobalInst(storageType === StorageType.LocalStorage ? "localStorage" : "sessionStorage");
    storage.setItem(uid.toString(), uid.toString());
    var fail = storage.getItem(uid.toString()) !== uid.toString();
    storage.removeItem(uid.toString());

    if (!fail) {
      return storage;
    }
  } catch (exception) {// eslint-disable-next-line no-empty
  }

  return null;
}
/**
 * Gets the sessionStorage object if available
 * @return {Storage} - Returns the storage object if available else returns null
 */


function _getSessionStorageObject() {
  if (utlCanUseSessionStorage()) {
    return _getVerifiedStorageObject(StorageType.SessionStorage);
  }

  return null;
}

function utlDisableStorage() {
  _canUseLocalStorage = false;
  _canUseSessionStorage = false;
}
function utlCanUseLocalStorage() {
  if (_canUseLocalStorage === undefined) {
    _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);
  }

  return _canUseLocalStorage;
}
function utlGetLocalStorage(logger, name) {
  var storage = _getLocalStorageObject();

  if (storage !== null) {
    try {
      return storage.getItem(name);
    } catch (e) {
      _canUseLocalStorage = false;
      logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, "Browser failed read of local storage. " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return null;
}
function utlSetLocalStorage(logger, name, data) {
  var storage = _getLocalStorageObject();

  if (storage !== null) {
    try {
      storage.setItem(name, data);
      return true;
    } catch (e) {
      _canUseLocalStorage = false;
      logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, "Browser failed write to local storage. " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return false;
}
function utlRemoveStorage(logger, name) {
  var storage = _getLocalStorageObject();

  if (storage !== null) {
    try {
      storage.removeItem(name);
      return true;
    } catch (e) {
      _canUseLocalStorage = false;
      logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, "Browser failed removal of local storage item. " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return false;
}
function utlCanUseSessionStorage() {
  if (_canUseSessionStorage === undefined) {
    _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);
  }

  return _canUseSessionStorage;
}
function utlGetSessionStorageKeys() {
  var keys = [];

  if (utlCanUseSessionStorage()) {
    objForEachKey(getGlobalInst("sessionStorage"), function (key) {
      keys.push(key);
    });
  }

  return keys;
}
function utlGetSessionStorage(logger, name) {
  var storage = _getSessionStorageObject();

  if (storage !== null) {
    try {
      return storage.getItem(name);
    } catch (e) {
      _canUseSessionStorage = false;
      logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, "Browser failed read of session storage. " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return null;
}
function utlSetSessionStorage(logger, name, data) {
  var storage = _getSessionStorageObject();

  if (storage !== null) {
    try {
      storage.setItem(name, data);
      return true;
    } catch (e) {
      _canUseSessionStorage = false;
      logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, "Browser failed write to session storage. " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return false;
}
function utlRemoveSessionStorage(logger, name) {
  var storage = _getSessionStorageObject();

  if (storage !== null) {
    try {
      storage.removeItem(name);
      return true;
    } catch (e) {
      _canUseSessionStorage = false;
      logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, "Browser failed removal of session storage item. " + getExceptionName(e), {
        exception: dumpObj(e)
      });
    }
  }

  return false;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/DomHelperFuncs.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

function createDomEvent(eventName) {
  var event = null;

  if (isFunction(Event)) {
    // Use Event constructor when available
    event = new Event(eventName);
  } else {
    // Event has no constructor in IE
    var doc = EnvUtils_getDocument();

    if (doc && doc.createEvent) {
      event = doc.createEvent("Event");
      event.initEvent(eventName, true, true);
    }
  }

  return event;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var RequestHeaders = {
  requestContextHeader: "Request-Context",
  requestContextTargetKey: "appId",
  requestContextAppIdFormat: "appId=cid-v1:",
  requestIdHeader: "Request-Id",
  traceParentHeader: "traceparent",
  traceStateHeader: "tracestate",
  sdkContextHeader: "Sdk-Context",
  sdkContextHeaderAppIdRequest: "appId",
  requestContextHeaderLowerCase: "request-context"
};
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/UrlHelperFuncs.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var _document = EnvUtils_getDocument() || {};

var _htmlAnchorIdx = 0; // Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs
// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates

var _htmlAnchorElement = [null, null, null, null, null];
function urlParseUrl(url) {
  var anchorIdx = _htmlAnchorIdx;
  var anchorCache = _htmlAnchorElement;
  var tempAnchor = anchorCache[anchorIdx];

  if (!_document.createElement) {
    // Always create the temp instance if createElement is not available
    tempAnchor = {
      host: urlParseHost(url, true)
    };
  } else if (!anchorCache[anchorIdx]) {
    // Create and cache the unattached anchor instance
    tempAnchor = anchorCache[anchorIdx] = _document.createElement("a");
  }

  tempAnchor.href = url; // Move the cache index forward

  anchorIdx++;

  if (anchorIdx >= anchorCache.length) {
    anchorIdx = 0;
  }

  _htmlAnchorIdx = anchorIdx;
  return tempAnchor;
}
function urlGetAbsoluteUrl(url) {
  var result;
  var a = urlParseUrl(url);

  if (a) {
    result = a.href;
  }

  return result;
}
function urlGetPathName(url) {
  var result;
  var a = urlParseUrl(url);

  if (a) {
    result = a.pathname;
  }

  return result;
}
function urlGetCompleteUrl(method, absoluteUrl) {
  if (method) {
    return method.toUpperCase() + " " + absoluteUrl;
  }

  return absoluteUrl;
} // Fallback method to grab host from url if document.createElement method is not available

function urlParseHost(url, inclPort) {
  var fullHost = urlParseFullHost(url, inclPort) || "";

  if (fullHost) {
    var match = fullHost.match(/(www[0-9]?\.)?(.[^/:]+)(\:[\d]+)?/i);

    if (match != null && match.length > 3 && HelperFuncs_isString(match[2]) && match[2].length > 0) {
      return match[2] + (match[3] || "");
    }
  }

  return fullHost;
}
function urlParseFullHost(url, inclPort) {
  var result = null;

  if (url) {
    var match = url.match(/(\w*):\/\/(.[^/:]+)(\:[\d]+)?/i);

    if (match != null && match.length > 2 && HelperFuncs_isString(match[2]) && match[2].length > 0) {
      result = match[2] || "";

      if (inclPort && match.length > 2) {
        var protocol = (match[1] || "").toLowerCase();
        var port = match[3] || ""; // IE includes the standard port so pass it off if it's the same as the protocol

        if (protocol === "http" && port === ":80") {
          port = "";
        } else if (protocol === "https" && port === ":443") {
          port = "";
        }

        result += port;
      }
    }
  }

  return result;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */







 // listing only non-geo specific locations

var _internalEndpoints = ["https://dc.services.visualstudio.com/v2/track", "https://breeze.aimon.applicationinsights.io/v2/track", "https://dc-int.services.visualstudio.com/v2/track"];
function isInternalApplicationInsightsEndpoint(endpointUrl) {
  return _internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;
}
var Util = {
  NotSpecified: strNotSpecified,
  createDomEvent: createDomEvent,
  disableStorage: utlDisableStorage,
  isInternalApplicationInsightsEndpoint: isInternalApplicationInsightsEndpoint,
  canUseLocalStorage: utlCanUseLocalStorage,
  getStorage: utlGetLocalStorage,
  setStorage: utlSetLocalStorage,
  removeStorage: utlRemoveStorage,
  canUseSessionStorage: utlCanUseSessionStorage,
  getSessionStorageKeys: utlGetSessionStorageKeys,
  getSessionStorage: utlGetSessionStorage,
  setSessionStorage: utlSetSessionStorage,
  removeSessionStorage: utlRemoveSessionStorage,
  disableCookies: disableCookies,
  canUseCookies: canUseCookies,
  disallowsSameSiteNone: uaDisallowsSameSiteNone,
  setCookie: setCookie,
  stringToBoolOrDefault: stringToBoolOrDefault,
  getCookie: getCookie,
  deleteCookie: deleteCookie,
  trim: strTrim,
  newId: newId,
  random32: function random32() {
    return RandomHelper_random32(true);
  },
  generateW3CId: generateW3CId,
  isArray: isArray,
  isError: isError,
  isDate: isDate,
  toISOStringForIE8: toISOString,
  getIEVersion: getIEVersion,
  msToTimeSpan: msToTimeSpan,
  isCrossOriginError: isCrossOriginError,
  dump: dumpObj,
  getExceptionName: getExceptionName,
  addEventHandler: attachEvent,
  IsBeaconApiSupported: isBeaconsSupported,
  getExtension: getExtensionByName
};
var UrlHelper = {
  parseUrl: urlParseUrl,
  getAbsoluteUrl: urlGetAbsoluteUrl,
  getPathName: urlGetPathName,
  getCompleteUrl: urlGetCompleteUrl,
  parseHost: urlParseHost,
  parseFullHost: urlParseFullHost
};
var CorrelationIdHelper = {
  correlationIdPrefix: "cid-v1:",

  /**
   * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.
   * Headers are always included if the current domain matches the request domain. If they do not match (CORS),
   * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.
   * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must
   * manually supply domains to include correlation headers on. Else, no headers will be included at all.
   */
  canIncludeCorrelationHeader: function canIncludeCorrelationHeader(config, requestUrl, currentHost) {
    if (!requestUrl || config && config.disableCorrelationHeaders) {
      return false;
    }

    if (config && config.correlationHeaderExcludePatterns) {
      for (var i = 0; i < config.correlationHeaderExcludePatterns.length; i++) {
        if (config.correlationHeaderExcludePatterns[i].test(requestUrl)) {
          return false;
        }
      }
    }

    var requestHost = urlParseUrl(requestUrl).host.toLowerCase();

    if (requestHost && (requestHost.indexOf(":443") !== -1 || requestHost.indexOf(":80") !== -1)) {
      // [Bug #1260] IE can include the port even for http and https URLs so if present
      // try and parse it to remove if it matches the default protocol port
      requestHost = (urlParseFullHost(requestUrl, true) || "").toLowerCase();
    }

    if ((!config || !config.enableCorsCorrelation) && requestHost && requestHost !== currentHost) {
      return false;
    }

    var includedDomains = config && config.correlationHeaderDomains;

    if (includedDomains) {
      var matchExists_1;
      arrForEach(includedDomains, function (domain) {
        var regex = new RegExp(domain.toLowerCase().replace(/\\/g, "\\\\").replace(/\./g, "\\.").replace(/\*/g, ".*"));
        matchExists_1 = matchExists_1 || regex.test(requestHost);
      });

      if (!matchExists_1) {
        return false;
      }
    }

    var excludedDomains = config && config.correlationHeaderExcludedDomains;

    if (!excludedDomains || excludedDomains.length === 0) {
      return true;
    }

    for (var i = 0; i < excludedDomains.length; i++) {
      var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\/g, "\\\\").replace(/\./g, "\\.").replace(/\*/g, ".*"));

      if (regex.test(requestHost)) {
        return false;
      }
    } // if we don't know anything about the requestHost, require the user to use included/excludedDomains.
    // Previously we always returned false for a falsy requestHost


    return requestHost && requestHost.length > 0;
  },

  /**
   * Combines target appId and target role name from response header.
   */
  getCorrelationContext: function getCorrelationContext(responseHeader) {
    if (responseHeader) {
      var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);

      if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {
        return correlationId;
      }
    }
  },

  /**
   * Gets key from correlation response header
   */
  getCorrelationContextValue: function getCorrelationContextValue(responseHeader, key) {
    if (responseHeader) {
      var keyValues = responseHeader.split(",");

      for (var i = 0; i < keyValues.length; ++i) {
        var keyValue = keyValues[i].split("=");

        if (keyValue.length === 2 && keyValue[0] === key) {
          return keyValue[1];
        }
      }
    }
  }
};
function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {
  var target,
      name = commandName,
      data = commandName;

  if (absoluteUrl && absoluteUrl.length > 0) {
    var parsedUrl = urlParseUrl(absoluteUrl);
    target = parsedUrl.host;

    if (!name) {
      if (parsedUrl.pathname != null) {
        var pathName = parsedUrl.pathname.length === 0 ? "/" : parsedUrl.pathname;

        if (pathName.charAt(0) !== "/") {
          pathName = "/" + pathName;
        }

        data = parsedUrl.pathname;
        name = dataSanitizeString(logger, method ? method + " " + pathName : pathName);
      } else {
        name = dataSanitizeString(logger, absoluteUrl);
      }
    }
  } else {
    target = commandName;
    name = commandName;
  }

  return {
    target: target,
    name: name,
    data: data
  };
}
function dateTimeUtilsNow() {
  // returns the window or webworker performance object
  var perf = getPerformance();

  if (perf && perf.now && perf.timing) {
    var now = perf.now() + perf.timing.navigationStart; // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback

    if (now > 0) {
      return now;
    }
  }

  return dateNow();
}
function dateTimeUtilsDuration(start, end) {
  var result = null;

  if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {
    result = end - start;
  }

  return result;
}
/**
 * A utility class that helps getting time related parameters
 */

var DateTimeUtils = {
  Now: dateTimeUtilsNow,
  GetDuration: dateTimeUtilsDuration
};
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.
 */
var RemoteDependencyData = function () {
  function RemoteDependencyData() {
    /**
     * Schema version
     */
    this.ver = 2;
    /**
     * Indication of successful or unsuccessful call.
     */

    this.success = true;
    /**
     * Collection of custom properties.
     */

    this.properties = {};
    /**
     * Collection of custom measurements.
     */

    this.measurements = {};
  }

  return RemoteDependencyData;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






var RemoteDependencyData_RemoteDependencyData = function (_super) {
  __extendsFn(RemoteDependencyData, _super);
  /**
   * Constructs a new instance of the RemoteDependencyData object
   */


  function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {
    if (requestAPI === void 0) {
      requestAPI = "Ajax";
    }

    var _this = _super.call(this) || this;

    _this.aiDataContract = {
      id: 1
      /* Required */
      ,
      ver: 1
      /* Required */
      ,
      name: 0
      /* Default */
      ,
      resultCode: 0
      /* Default */
      ,
      duration: 0
      /* Default */
      ,
      success: 0
      /* Default */
      ,
      data: 0
      /* Default */
      ,
      target: 0
      /* Default */
      ,
      type: 0
      /* Default */
      ,
      properties: 0
      /* Default */
      ,
      measurements: 0
      /* Default */
      ,
      kind: 0
      /* Default */
      ,
      value: 0
      /* Default */
      ,
      count: 0
      /* Default */
      ,
      min: 0
      /* Default */
      ,
      max: 0
      /* Default */
      ,
      stdDev: 0
      /* Default */
      ,
      dependencyKind: 0
      /* Default */
      ,
      dependencySource: 0
      /* Default */
      ,
      commandName: 0
      /* Default */
      ,
      dependencyTypeName: 0
      /* Default */

    };
    _this.id = id;
    _this.duration = msToTimeSpan(value);
    _this.success = success;
    _this.resultCode = resultCode + "";
    _this.type = dataSanitizeString(logger, requestAPI);
    var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);
    _this.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available

    _this.target = dataSanitizeString(logger, dependencyFields.target);

    if (correlationContext) {
      _this.target = _this.target + " | " + correlationContext;
    }

    _this.name = dataSanitizeString(logger, dependencyFields.name);
    _this.properties = dataSanitizeProperties(logger, properties);
    _this.measurements = dataSanitizeMeasurements(logger, measurements);
    return _this;
  }

  RemoteDependencyData.envelopeType = "Microsoft.ApplicationInsights.{0}.RemoteDependency";
  RemoteDependencyData.dataType = "RemoteDependencyData";
  return RemoteDependencyData;
}(RemoteDependencyData);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js
/*
 * Application Insights JavaScript SDK - Web Analytics, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



/**
 * Class encapsulates sending page views and page view performance telemetry.
 */

var PageViewManager = function () {
  function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {
    dynamicproto_js(PageViewManager, this, function (_self) {
      var intervalHandle = null;
      var itemQueue = [];
      var pageViewPerformanceSent = false;

      var _logger;

      if (core) {
        _logger = core.logger;
      }

      function _flushChannels() {
        if (core) {
          arrForEach(core.getTransmissionControls(), function (queues) {
            arrForEach(queues, function (q) {
              return q.flush(true);
            });
          });
        }
      }

      function _addQueue(cb) {
        itemQueue.push(cb);

        if (!intervalHandle) {
          intervalHandle = setInterval(function () {
            var allItems = itemQueue.slice(0);
            var doFlush = false;
            itemQueue = [];
            arrForEach(allItems, function (item) {
              if (!item()) {
                // Not processed so rescheduled
                itemQueue.push(item);
              } else {
                doFlush = true;
              }
            });

            if (itemQueue.length === 0) {
              clearInterval(intervalHandle);
              intervalHandle = null;
            }

            if (doFlush) {
              // We process at least one item so flush the queue
              _flushChannels();
            }
          }, 100);
        }
      }

      _self.trackPageView = function (pageView, customProperties) {
        var name = pageView.name;

        if (isNullOrUndefined(name) || typeof name !== "string") {
          var doc = EnvUtils_getDocument();
          name = pageView.name = doc && doc.title || "";
        }

        var uri = pageView.uri;

        if (isNullOrUndefined(uri) || typeof uri !== "string") {
          var location_1 = getLocation();
          uri = pageView.uri = location_1 && location_1.href || "";
        } // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user
        // do not provide the duration, set duration to undefined
        // Also this is case 4


        if (!pageViewPerformanceManager.isPerformanceTimingSupported()) {
          appInsights.sendPageViewInternal(pageView, customProperties);

          _flushChannels(); // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)


          _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, "trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.");

          return;
        }

        var pageViewSent = false;
        var customDuration; // if the performance timing is supported by the browser, calculate the custom duration

        var start = pageViewPerformanceManager.getPerformanceTiming().navigationStart;

        if (start > 0) {
          customDuration = dateTimeUtilsDuration(start, +new Date());

          if (!pageViewPerformanceManager.shouldCollectDuration(customDuration)) {
            customDuration = undefined;
          }
        } // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if
        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier


        var duration;

        if (!isNullOrUndefined(customProperties) && !isNullOrUndefined(customProperties.duration)) {
          duration = customProperties.duration;
        }

        if (overridePageViewDuration || !isNaN(duration)) {
          if (isNaN(duration)) {
            // case 3
            if (!customProperties) {
              customProperties = {};
            }

            customProperties["duration"] = customDuration;
          } // case 2


          appInsights.sendPageViewInternal(pageView, customProperties);

          _flushChannels();

          pageViewSent = true;
        } // now try to send the page view performance telemetry


        var maxDurationLimit = 60000;

        if (!customProperties) {
          customProperties = {};
        } // Queue the event for processing


        _addQueue(function () {
          var processed = false;

          try {
            if (pageViewPerformanceManager.isPerformanceTimingDataReady()) {
              processed = true;
              var pageViewPerformance = {
                name: name,
                uri: uri
              };
              pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);

              if (!pageViewPerformance.isValid && !pageViewSent) {
                // If navigation timing gives invalid numbers, then go back to "override page view duration" mode.
                // That's the best value we can get that makes sense.
                customProperties["duration"] = customDuration;
                appInsights.sendPageViewInternal(pageView, customProperties);
              } else {
                if (!pageViewSent) {
                  customProperties["duration"] = pageViewPerformance.durationMs;
                  appInsights.sendPageViewInternal(pageView, customProperties);
                }

                if (!pageViewPerformanceSent) {
                  appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);
                  pageViewPerformanceSent = true;
                }
              }
            } else if (start > 0 && dateTimeUtilsDuration(start, +new Date()) > maxDurationLimit) {
              // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry
              // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready
              processed = true;

              if (!pageViewSent) {
                customProperties["duration"] = maxDurationLimit;
                appInsights.sendPageViewInternal(pageView, customProperties);
              }
            }
          } catch (e) {
            _logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, "trackPageView failed on page load calculation: " + getExceptionName(e), {
              exception: dumpObj(e)
            });
          }

          return processed;
        });
      };
    });
  } // Removed Stub for PageViewManager.prototype.trackPageView.


  return PageViewManager;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js
/*
 * Application Insights JavaScript SDK - Web Analytics, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


/**
 * Used to track page visit durations
 */

var PageVisitTimeManager = function () {
  /**
   * Creates a new instance of PageVisitTimeManager
   * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)
   * @returns {}
   */
  function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {
    this.prevPageVisitDataKeyName = "prevPageVisitData";
    this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;
    this._logger = logger;
  }
  /**
   * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time
   * @param currentPageName Name of page to begin timing for visit duration
   * @param currentPageUrl Url of page to begin timing for visit duration
   */


  PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {
    try {
      // Restart timer for new page view
      var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl); // If there was a page already being timed, track the visit time for it now.

      if (prevPageVisitTimeData) {
        this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);
      }
    } catch (e) {
      this._logger.warnToConsole("Auto track page visit time failed, metric will not be collected: " + dumpObj(e));
    }
  };
  /**
   * Stops timing of current page (if exists) and starts timing for duration of visit to pageName
   * @param pageName Name of page to begin timing visit duration
   * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.
   */


  PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {
    try {
      var prevPageVisitData = this.stopPageVisitTimer();
      this.startPageVisitTimer(pageName, pageUrl);
      return prevPageVisitData;
    } catch (e) {
      this._logger.warnToConsole("Call to restart failed: " + dumpObj(e));

      return null;
    }
  };
  /**
   * Starts timing visit duration of pageName
   * @param pageName
   * @returns {}
   */


  PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {
    try {
      if (utlCanUseSessionStorage()) {
        if (utlGetSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {
          throwError("Cannot call startPageVisit consecutively without first calling stopPageVisit");
        }

        var currPageVisitData = new PageVisitData(pageName, pageUrl);
        var currPageVisitDataStr = getJSON().stringify(currPageVisitData);
        utlSetSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);
      }
    } catch (e) {
      // TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out
      this._logger.warnToConsole("Call to start failed: " + dumpObj(e));
    }
  };
  /**
   * Stops timing of current page, if exists.
   * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.
   */


  PageVisitTimeManager.prototype.stopPageVisitTimer = function () {
    try {
      if (utlCanUseSessionStorage()) {
        // Define end time of page's visit
        var pageVisitEndTime = dateNow(); // Try to retrieve  page name and start time from session storage

        var pageVisitDataJsonStr = utlGetSessionStorage(this._logger, this.prevPageVisitDataKeyName);

        if (pageVisitDataJsonStr && hasJSON()) {
          // if previous page data exists, set end time of visit
          var prevPageVisitData = getJSON().parse(pageVisitDataJsonStr);
          prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime; // Remove data from storage since we already used it

          utlRemoveSessionStorage(this._logger, this.prevPageVisitDataKeyName); // Return page visit data

          return prevPageVisitData;
        } else {
          return null;
        }
      }

      return null;
    } catch (e) {
      this._logger.warnToConsole("Stop page visit timer failed: " + dumpObj(e));

      return null;
    }
  };

  return PageVisitTimeManager;
}();



var PageVisitData = function () {
  function PageVisitData(pageName, pageUrl) {
    this.pageVisitStartTime = dateNow();
    this.pageName = pageName;
    this.pageUrl = pageUrl;
  }

  return PageVisitData;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js
/*
 * Application Insights JavaScript SDK - Web Analytics, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


/**
 * Class encapsulates sending page view performance telemetry.
 */

var PageViewPerformanceManager = function () {
  function PageViewPerformanceManager(core) {
    this.MAX_DURATION_ALLOWED = 3600000; // 1h

    if (core) {
      this._logger = core.logger;
    }
  }

  PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {
    pageViewPerformance.isValid = false;
    /*
     * http://www.w3.org/TR/navigation-timing/#processing-model
     *  |-navigationStart
     *  |             |-connectEnd
     *  |             ||-requestStart
     *  |             ||             |-responseStart
     *  |             ||             |              |-responseEnd
     *  |             ||             |              |
     *  |             ||             |              |         |-loadEventEnd
     *  |---network---||---request---|---response---|---dom---|
     *  |--------------------------total----------------------|
     *
     *  total = The difference between the load event of the current document is completed and the first recorded timestamp of the performance entry : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#duration
     *  network = Redirect time + App Cache + DNS lookup time + TCP connection time
     *  request = Request time : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#request_time
     *  response = Response time
     *  dom = Document load time : https://html.spec.whatwg.org/multipage/dom.html#document-load-timing-info
     *      = Document processing time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#document_processing
     *      + Loading time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#loading
     */

    var navigationTiming = this.getPerformanceNavigationTiming();
    var timing = this.getPerformanceTiming();
    var total = 0;
    var network = 0;
    var request = 0;
    var response = 0;
    var dom = 0;

    if (navigationTiming || timing) {
      if (navigationTiming) {
        total = navigationTiming.duration;
        /**
         * support both cases:
         * - startTime is always zero: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming
         * - for older browsers where the startTime is not zero
         */

        network = navigationTiming.startTime === 0 ? navigationTiming.connectEnd : dateTimeUtilsDuration(navigationTiming.startTime, navigationTiming.connectEnd);
        request = dateTimeUtilsDuration(navigationTiming.requestStart, navigationTiming.responseStart);
        response = dateTimeUtilsDuration(navigationTiming.responseStart, navigationTiming.responseEnd);
        dom = dateTimeUtilsDuration(navigationTiming.responseEnd, navigationTiming.loadEventEnd);
      } else {
        total = dateTimeUtilsDuration(timing.navigationStart, timing.loadEventEnd);
        network = dateTimeUtilsDuration(timing.navigationStart, timing.connectEnd);
        request = dateTimeUtilsDuration(timing.requestStart, timing.responseStart);
        response = dateTimeUtilsDuration(timing.responseStart, timing.responseEnd);
        dom = dateTimeUtilsDuration(timing.responseEnd, timing.loadEventEnd);
      }

      if (total === 0) {
        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, "error calculating page view performance.", {
          total: total,
          network: network,
          request: request,
          response: response,
          dom: dom
        });
      } else if (!this.shouldCollectDuration(total, network, request, response, dom)) {
        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, "Invalid page load duration value. Browser perf data won't be sent.", {
          total: total,
          network: network,
          request: request,
          response: response,
          dom: dom
        });
      } else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {
        // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT
        // in this case, don't report client performance from this page
        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, "client performance math error.", {
          total: total,
          network: network,
          request: request,
          response: response,
          dom: dom
        });
      } else {
        pageViewPerformance.durationMs = total; // // convert to timespans

        pageViewPerformance.perfTotal = pageViewPerformance.duration = msToTimeSpan(total);
        pageViewPerformance.networkConnect = msToTimeSpan(network);
        pageViewPerformance.sentRequest = msToTimeSpan(request);
        pageViewPerformance.receivedResponse = msToTimeSpan(response);
        pageViewPerformance.domProcessing = msToTimeSpan(dom);
        pageViewPerformance.isValid = true;
      }
    }
  };

  PageViewPerformanceManager.prototype.getPerformanceTiming = function () {
    if (this.isPerformanceTimingSupported()) {
      return getPerformance().timing;
    }

    return null;
  };

  PageViewPerformanceManager.prototype.getPerformanceNavigationTiming = function () {
    if (this.isPerformanceNavigationTimingSupported()) {
      return getPerformance().getEntriesByType("navigation")[0];
    }

    return null;
  };
  /**
   * Returns true is window PerformanceNavigationTiming API is supported, false otherwise.
   */


  PageViewPerformanceManager.prototype.isPerformanceNavigationTimingSupported = function () {
    var perf = getPerformance();
    return perf && perf.getEntriesByType && perf.getEntriesByType("navigation").length > 0;
  };
  /**
   * Returns true is window performance timing API is supported, false otherwise.
   */


  PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {
    var perf = getPerformance();
    return perf && perf.timing;
  };
  /**
   * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.
   * Returns true if ready, false otherwise.
   */


  PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {
    var perf = getPerformance();
    var timing = perf ? perf.timing : 0;
    return timing && timing.domainLookupStart > 0 && timing.navigationStart > 0 && timing.responseStart > 0 && timing.requestStart > 0 && timing.loadEventEnd > 0 && timing.responseEnd > 0 && timing.connectEnd > 0 && timing.domLoading > 0;
  };
  /**
   * This method tells if given durations should be excluded from collection.
   */


  PageViewPerformanceManager.prototype.shouldCollectDuration = function () {
    var durations = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      durations[_i] = arguments[_i];
    }

    var _navigator = getNavigator() || {}; // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en


    var botAgentNames = ["googlebot", "adsbot-google", "apis-google", "mediapartners-google"];
    var userAgent = _navigator.userAgent;
    var isGoogleBot = false;

    if (userAgent) {
      for (var i = 0; i < botAgentNames.length; i++) {
        isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;
      }
    }

    if (isGoogleBot) {
      // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.
      return false;
    } else {
      // for other page views, don't report if it's outside of a reasonable range
      for (var i = 0; i < durations.length; i++) {
        if (durations[i] < 0 || durations[i] >= this.MAX_DURATION_ALLOWED) {
          return false;
        }
      }
    }

    return true;
  };

  return PageViewPerformanceManager;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js
/*
 * Application Insights JavaScript SDK - Web Analytics, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * ApplicationInsights.ts
 * @copyright Microsoft 2018
 */







"use strict";

var durationProperty = "duration";
var strEvent = "event";

function _dispatchEvent(target, evnt) {
  if (target && target.dispatchEvent && evnt) {
    target.dispatchEvent(evnt);
  }
}

function _getReason(error) {
  if (error && error.reason) {
    var reason = error.reason;

    if (!HelperFuncs_isString(reason) && isFunction(reason.toString)) {
      return reason.toString();
    }

    return dumpObj(reason);
  } // Pass the original object down which will eventually get evaluated for any message or description


  return error || "";
}

var ApplicationInsights = function (_super) {
  __extendsFn(ApplicationInsights, _super);

  function ApplicationInsights() {
    var _this = _super.call(this) || this;

    _this.identifier = AnalyticsPluginIdentifier; // do not change name or priority

    _this.priority = 180; // take from reserved priority range 100- 200

    _this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place

    var _eventTracking;

    var _pageTracking;

    var _properties; // Counts number of trackAjax invocations.
    // By default we only monitor X ajax call per view to avoid too much load.
    // Default value is set in config.
    // This counter keeps increasing even after the limit is reached.


    var _trackAjaxAttempts = 0; // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.

    var _prevUri; // Assigned in the constructor


    var _currUri;

    dynamicproto_js(ApplicationInsights, _this, function (_self, _base) {
      var location = getLocation(true);
      _prevUri = location && location.href || "";

      _self.getCookieMgr = function () {
        return safeGetCookieMgr(_self.core);
      };

      _self.processTelemetry = function (env, itemCtx) {
        doPerf(_self.core, function () {
          return _self.identifier + ":processTelemetry";
        }, function () {
          var doNotSendItem = false;
          var telemetryInitializersCount = _self._telemetryInitializers.length;
          itemCtx = _self._getTelCtx(itemCtx);

          for (var i = 0; i < telemetryInitializersCount; ++i) {
            var telemetryInitializer = _self._telemetryInitializers[i];

            if (telemetryInitializer) {
              try {
                if (telemetryInitializer.apply(null, [env]) === false) {
                  doNotSendItem = true;
                  break;
                }
              } catch (e) {
                // log error but dont stop executing rest of the telemetry initializers
                // doNotSendItem = true;
                itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, "One of telemetry initializers failed, telemetry item will not be sent: " + getExceptionName(e), {
                  exception: dumpObj(e)
                }, true);
              }
            }
          }

          if (!doNotSendItem) {
            _self.processNext(env, itemCtx);
          }
        }, function () {
          return {
            item: env
          };
        }, !env.sync);
      };

      _self.trackEvent = function (event, customProperties) {
        try {
          var telemetryItem = TelemetryItemCreator.create(event, Event_Event.dataType, Event_Event.envelopeType, _self.diagLog(), customProperties);

          _self.core.track(telemetryItem);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, "trackTrace failed, trace will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.
       * @param   name    A string that identifies this event uniquely within the document.
       */


      _self.startTrackEvent = function (name) {
        try {
          _eventTracking.start(name);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, "startTrackEvent failed, event will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * Log an extended event that you started timing with `startTrackEvent`.
       * @param   name    The string you used to identify this event in `startTrackEvent`.
       * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.
       * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.
       */


      _self.stopTrackEvent = function (name, properties, measurements) {
        try {
          _eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated

        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, "stopTrackEvent failed, event will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * @description Log a diagnostic message
       * @param {ITraceTelemetry} trace
       * @param ICustomProperties.
       * @memberof ApplicationInsights
       */


      _self.trackTrace = function (trace, customProperties) {
        try {
          var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, _self.diagLog(), customProperties);

          _self.core.track(telemetryItem);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, "trackTrace failed, trace will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * @description Log a numeric value that is not associated with a specific event. Typically
       * used to send regular reports of performance indicators. To send single measurement, just
       * use the name and average fields of {@link IMetricTelemetry}. If you take measurements
       * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements
       * and sending the resulting average at intervals
       * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.
       * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the
       * portal. Defaults to empty.
       * @memberof ApplicationInsights
       */


      _self.trackMetric = function (metric, customProperties) {
        try {
          var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, _self.diagLog(), customProperties);

          _self.core.track(telemetryItem);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, "trackMetric failed, metric will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * Logs that a page or other item was viewed.
       * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.
       * @param customProperties Additional data used to filter events and metrics. Defaults to empty.
       * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration
       */


      _self.trackPageView = function (pageView, customProperties) {
        try {
          var inPv = pageView || {};

          _self._pageViewManager.trackPageView(inPv, __assignFn(__assignFn(__assignFn({}, inPv.properties), inPv.measurements), customProperties));

          if (_self.config.autoTrackPageVisitTime) {
            _self._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);
          }
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, "trackPageView failed, page view will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * Create a page view telemetry item and send it to the SDK pipeline through the core.track API
       * @param pageView Page view item to be sent
       * @param properties Custom properties (Part C) that a user can add to the telemetry item
       * @param systemProperties System level properties (Part A) that a user can add to the telemetry item
       */


      _self.sendPageViewInternal = function (pageView, properties, systemProperties) {
        var doc = EnvUtils_getDocument();

        if (doc) {
          pageView.refUri = pageView.refUri === undefined ? doc.referrer : pageView.refUri;
        }

        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, _self.diagLog(), properties, systemProperties);

        _self.core.track(telemetryItem); // reset ajaxes counter


        _trackAjaxAttempts = 0;
      };
      /**
       * @ignore INTERNAL ONLY
       * @param pageViewPerformance
       * @param properties
       */


      _self.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {
        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, _self.diagLog(), properties, systemProperties);

        _self.core.track(telemetryItem);
      };
      /**
       * Send browser performance metrics.
       * @param pageViewPerformance
       * @param customProperties
       */


      _self.trackPageViewPerformance = function (pageViewPerformance, customProperties) {
        try {
          _self._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);

          _self.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, "trackPageViewPerformance failed, page view will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,
       * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view
       * and send the event.
       * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.
       */


      _self.startTrackPage = function (name) {
        try {
          if (typeof name !== "string") {
            var doc = EnvUtils_getDocument();
            name = doc && doc.title || "";
          }

          _pageTracking.start(name);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, "startTrackPage failed, page view may not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.
       * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.
       * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.
       * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.
       * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.
       * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.
       */


      _self.stopTrackPage = function (name, url, properties, measurement) {
        try {
          if (typeof name !== "string") {
            var doc = EnvUtils_getDocument();
            name = doc && doc.title || "";
          }

          if (typeof url !== "string") {
            var loc = getLocation();
            url = loc && loc.href || "";
          }

          _pageTracking.stop(name, url, properties, measurement);

          if (_self.config.autoTrackPageVisitTime) {
            _self._pageVisitTimeManager.trackPreviousPageVisit(name, url);
          }
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, "stopTrackPage failed, page view will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * @ignore INTERNAL ONLY
       * @param exception
       * @param properties
       * @param systemProperties
       */


      _self.sendExceptionInternal = function (exception, customProperties, systemProperties) {
        var theError = exception.exception || exception.error || new Error(strNotSpecified);
        var exceptionPartB = new Exception(_self.diagLog(), theError, exception.properties || customProperties, exception.measurements, exception.severityLevel, exception.id).toInterface();
        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, _self.diagLog(), customProperties, systemProperties);

        _self.core.track(telemetryItem);
      };
      /**
       * Log an exception you have caught.
       *
       * @param {IExceptionTelemetry} exception   Object which contains exception to be sent
       * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.
       *
       * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.
       * @memberof ApplicationInsights
       */


      _self.trackException = function (exception, customProperties) {
        try {
          _self.sendExceptionInternal(exception, customProperties);
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, "trackException failed, exception will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }
      };
      /**
       * @description Custom error handler for Application Insights Analytics
       * @param {IAutoExceptionTelemetry} exception
       * @memberof ApplicationInsights
       */


      _self._onerror = function (exception) {
        var error = exception && exception.error;
        var evt = exception && exception.evt;

        try {
          if (!evt) {
            var _window = getWindow();

            if (_window) {
              evt = _window[strEvent];
            }
          }

          var url = exception && exception.url || (EnvUtils_getDocument() || {}).URL; // If no error source is provided assume the default window.onerror handler

          var errorSrc = exception.errorSrc || "window.onerror@" + url + ":" + (exception.lineNumber || 0) + ":" + (exception.columnNumber || 0);
          var properties = {
            errorSrc: errorSrc,
            url: url,
            lineNumber: exception.lineNumber || 0,
            columnNumber: exception.columnNumber || 0,
            message: exception.message
          };

          if (isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {
            _sendCORSException(Exception.CreateAutoException("Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.", url, exception.lineNumber || 0, exception.columnNumber || 0, error, evt, null, errorSrc), properties);
          } else {
            if (!exception.errorSrc) {
              exception.errorSrc = errorSrc;
            }

            _self.trackException({
              exception: exception,
              severityLevel: SeverityLevel.Error
            }, properties);
          }
        } catch (e) {
          var errorString = error ? error.name + ", " + error.message : "null";

          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, "_onError threw exception while logging error, error will not be collected: " + getExceptionName(e), {
            exception: dumpObj(e),
            errorString: errorString
          });
        }
      };

      _self.addTelemetryInitializer = function (telemetryInitializer) {
        _self._telemetryInitializers.push(telemetryInitializer);
      };

      _self.initialize = function (config, core, extensions, pluginChain) {
        if (_self.isInitialized()) {
          return;
        }

        if (isNullOrUndefined(core)) {
          throw Error("Error initializing");
        }

        _base.initialize(config, core, extensions, pluginChain);

        _self.setInitialized(false); // resetting the initialized state, just in case the following fails


        var ctx = _self._getTelCtx();

        var identifier = _self.identifier;
        _self.config = ctx.getExtCfg(identifier); // load default values if specified

        var defaults = ApplicationInsights.getDefaultConfig(config);

        if (defaults !== undefined) {
          objForEachKey(defaults, function (field, value) {
            // for each unspecified field, set the default value
            _self.config[field] = ctx.getConfig(identifier, field, value);

            if (_self.config[field] === undefined) {
              _self.config[field] = value;
            }
          });
        } // Todo: move this out of static state


        if (_self.config.isStorageUseDisabled) {
          utlDisableStorage();
        }

        var configGetters = {
          instrumentationKey: function instrumentationKey() {
            return config.instrumentationKey;
          },
          accountId: function accountId() {
            return _self.config.accountId || config.accountId;
          },
          sessionRenewalMs: function sessionRenewalMs() {
            return _self.config.sessionRenewalMs || config.sessionRenewalMs;
          },
          sessionExpirationMs: function sessionExpirationMs() {
            return _self.config.sessionExpirationMs || config.sessionExpirationMs;
          },
          sampleRate: function sampleRate() {
            return _self.config.samplingPercentage || config.samplingPercentage;
          },
          sdkExtension: function sdkExtension() {
            return _self.config.sdkExtension || config.sdkExtension;
          },
          isBrowserLinkTrackingEnabled: function isBrowserLinkTrackingEnabled() {
            return _self.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled;
          },
          appId: function appId() {
            return _self.config.appId || config.appId;
          }
        };
        _self._pageViewPerformanceManager = new PageViewPerformanceManager(_self.core);
        _self._pageViewManager = new PageViewManager(_this, _self.config.overridePageViewDuration, _self.core, _self._pageViewPerformanceManager);
        _self._pageVisitTimeManager = new PageVisitTimeManager(_self.diagLog(), function (pageName, pageUrl, pageVisitTime) {
          return trackPageVisitTime(pageName, pageUrl, pageVisitTime);
        });
        _self._telemetryInitializers = _self._telemetryInitializers || [];

        _addDefaultTelemetryInitializers(configGetters);

        _eventTracking = new Timing(_self.diagLog(), "trackEvent");

        _eventTracking.action = function (name, url, duration, properties) {
          if (!properties) {
            properties = {};
          }

          properties[durationProperty] = duration.toString();

          _self.trackEvent({
            name: name,
            properties: properties
          });
        }; // initialize page view timing


        _pageTracking = new Timing(_self.diagLog(), "trackPageView");

        _pageTracking.action = function (name, url, duration, properties, measurements) {
          // duration must be a custom property in order for the collector to extract it
          if (isNullOrUndefined(properties)) {
            properties = {};
          }

          properties[durationProperty] = duration.toString();
          var pageViewItem = {
            name: name,
            uri: url,
            properties: properties,
            measurements: measurements
          };

          _self.sendPageViewInternal(pageViewItem, properties);
        };

        var _window = getWindow();

        var _history = getHistory();

        var _location = getLocation(true);

        var instance = _this;

        if (_self.config.disableExceptionTracking === false && !_self.config.autoExceptionInstrumented && _window) {
          // We want to enable exception auto collection and it has not been done so yet
          var onerror_1 = "onerror";
          var originalOnError_1 = _window[onerror_1];

          _window.onerror = function (message, url, lineNumber, columnNumber, error) {
            var evt = _window[strEvent];
            var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);

            if (handled !== true) {
              // handled could be typeof function
              instance._onerror(Exception.CreateAutoException(message, url, lineNumber, columnNumber, error, evt));
            }

            return handled;
          };

          _self.config.autoExceptionInstrumented = true;
        }

        if (_self.config.disableExceptionTracking === false && _self.config.enableUnhandledPromiseRejectionTracking === true && !_self.config.autoUnhandledPromiseInstrumented && _window) {
          // We want to enable exception auto collection and it has not been done so yet
          var onunhandledrejection_1 = "onunhandledrejection";
          var originalOnUnhandledRejection_1 = _window[onunhandledrejection_1];

          _window[onunhandledrejection_1] = function (error) {
            var evt = _window[strEvent];
            var handled = originalOnUnhandledRejection_1 && originalOnUnhandledRejection_1.call(_window, error);

            if (handled !== true) {
              // handled could be typeof function
              instance._onerror(Exception.CreateAutoException(_getReason(error), _location ? _location.href : "", 0, 0, error, evt));
            }

            return handled;
          };

          _self.config.autoUnhandledPromiseInstrumented = true;
        }
        /**
         * Create a custom "locationchange" event which is triggered each time the history object is changed
         */


        if (_self.config.enableAutoRouteTracking === true && _history && isFunction(_history.pushState) && isFunction(_history.replaceState) && _window && typeof Event !== "undefined") {
          var _self_1 = _this; // Find the properties plugin

          arrForEach(extensions, function (extension) {
            if (extension.identifier === PropertiesPluginIdentifier) {
              _properties = extension;
            }
          });

          _history.pushState = function (f) {
            return function pushState() {
              var ret = f.apply(this, arguments);

              _dispatchEvent(_window, createDomEvent(_self_1.config.namePrefix + "pushState"));

              _dispatchEvent(_window, createDomEvent(_self_1.config.namePrefix + "locationchange"));

              return ret;
            };
          }(_history.pushState);

          _history.replaceState = function (f) {
            return function replaceState() {
              var ret = f.apply(this, arguments);

              _dispatchEvent(_window, createDomEvent(_self_1.config.namePrefix + "replaceState"));

              _dispatchEvent(_window, createDomEvent(_self_1.config.namePrefix + "locationchange"));

              return ret;
            };
          }(_history.replaceState);

          if (_window.addEventListener) {
            _window.addEventListener(_self_1.config.namePrefix + "popstate", function () {
              _dispatchEvent(_window, createDomEvent(_self_1.config.namePrefix + "locationchange"));
            });

            _window.addEventListener(_self_1.config.namePrefix + "locationchange", function () {
              if (_properties && _properties.context && _properties.context.telemetryTrace) {
                _properties.context.telemetryTrace.traceID = generateW3CId();
                var traceLocationName = "_unknown_";

                if (_location && _location.pathname) {
                  traceLocationName = _location.pathname + (_location.hash || "");
                } // This populates the ai.operation.name which has a maximum size of 1024 so we need to sanitize it


                _properties.context.telemetryTrace.name = dataSanitizeString(_self_1.diagLog(), traceLocationName);
              }

              if (_currUri) {
                _prevUri = _currUri;
                _currUri = _location && _location.href || "";
              } else {
                _currUri = _location && _location.href || "";
              }

              setTimeout(function (uri) {
                // todo: override start time so that it is not affected by autoRoutePVDelay
                _self_1.trackPageView({
                  refUri: uri,
                  properties: {
                    duration: 0
                  }
                }); // SPA route change loading durations are undefined, so send 0

              }.bind(_this, _prevUri), _self_1.autoRoutePVDelay);
            });
          }
        }

        _self.setInitialized(true);
      };
      /**
       * Log a page visit time
       * @param    pageName    Name of page
       * @param    pageVisitDuration Duration of visit to the page in milleseconds
       */


      function trackPageVisitTime(pageName, pageUrl, pageVisitTime) {
        var properties = {
          PageName: pageName,
          PageUrl: pageUrl
        };

        _self.trackMetric({
          name: "PageVisitTime",
          average: pageVisitTime,
          max: pageVisitTime,
          min: pageVisitTime,
          sampleCount: 1
        }, properties);
      }

      function _addDefaultTelemetryInitializers(configGetters) {
        if (!configGetters.isBrowserLinkTrackingEnabled()) {
          var browserLinkPaths_1 = ["/browserLinkSignalR/", "/__browserLink/"];

          var dropBrowserLinkRequests = function dropBrowserLinkRequests(envelope) {
            if (envelope.baseType === RemoteDependencyData_RemoteDependencyData.dataType) {
              var remoteData = envelope.baseData;

              if (remoteData) {
                for (var i = 0; i < browserLinkPaths_1.length; i++) {
                  if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {
                    return false;
                  }
                }
              }
            }

            return true;
          };

          _addTelemetryInitializer(dropBrowserLinkRequests);
        }
      }

      function _addTelemetryInitializer(telemetryInitializer) {
        _self._telemetryInitializers.push(telemetryInitializer);
      }

      function _sendCORSException(exception, properties) {
        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, _self.diagLog(), properties);

        _self.core.track(telemetryItem);
      }
    });
    return _this;
  }

  ApplicationInsights.getDefaultConfig = function (config) {
    if (!config) {
      config = {};
    } // set default values


    config.sessionRenewalMs = 30 * 60 * 1000;
    config.sessionExpirationMs = 24 * 60 * 60 * 1000;
    config.disableExceptionTracking = stringToBoolOrDefault(config.disableExceptionTracking);
    config.autoTrackPageVisitTime = stringToBoolOrDefault(config.autoTrackPageVisitTime);
    config.overridePageViewDuration = stringToBoolOrDefault(config.overridePageViewDuration);
    config.enableUnhandledPromiseRejectionTracking = stringToBoolOrDefault(config.enableUnhandledPromiseRejectionTracking);

    if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {
      config.samplingPercentage = 100;
    }

    config.isStorageUseDisabled = stringToBoolOrDefault(config.isStorageUseDisabled);
    config.isBrowserLinkTrackingEnabled = stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);
    config.enableAutoRouteTracking = stringToBoolOrDefault(config.enableAutoRouteTracking);
    config.namePrefix = config.namePrefix || "";
    config.enableDebug = stringToBoolOrDefault(config.enableDebug);
    config.disableFlushOnBeforeUnload = stringToBoolOrDefault(config.disableFlushOnBeforeUnload);
    config.disableFlushOnUnload = stringToBoolOrDefault(config.disableFlushOnUnload, config.disableFlushOnBeforeUnload);
    return config;
  }; // Removed Stub for ApplicationInsights.prototype.getCookieMgr.
  // Removed Stub for ApplicationInsights.prototype.processTelemetry.
  // Removed Stub for ApplicationInsights.prototype.trackEvent.
  // Removed Stub for ApplicationInsights.prototype.startTrackEvent.
  // Removed Stub for ApplicationInsights.prototype.stopTrackEvent.
  // Removed Stub for ApplicationInsights.prototype.trackTrace.
  // Removed Stub for ApplicationInsights.prototype.trackMetric.
  // Removed Stub for ApplicationInsights.prototype.trackPageView.
  // Removed Stub for ApplicationInsights.prototype.sendPageViewInternal.
  // Removed Stub for ApplicationInsights.prototype.sendPageViewPerformanceInternal.
  // Removed Stub for ApplicationInsights.prototype.trackPageViewPerformance.
  // Removed Stub for ApplicationInsights.prototype.startTrackPage.
  // Removed Stub for ApplicationInsights.prototype.stopTrackPage.
  // Removed Stub for ApplicationInsights.prototype.sendExceptionInternal.
  // Removed Stub for ApplicationInsights.prototype.trackException.
  // Removed Stub for ApplicationInsights.prototype._onerror.
  // Removed Stub for ApplicationInsights.prototype.addTelemetryInitializer.
  // Removed Stub for ApplicationInsights.prototype.initialize.


  ApplicationInsights.Version = "2.7.1"; // Not currently used anywhere

  return ApplicationInsights;
}(BaseTelemetryPlugin);


/**
 * Used to record timed events and page views.
 */

var Timing = function () {
  function Timing(logger, name) {
    var _self = this;

    var _events = {};

    _self.start = function (name) {
      if (typeof _events[name] !== "undefined") {
        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, "start was called more than once for this event without calling stop.", {
          name: name,
          key: name
        }, true);
      }

      _events[name] = +new Date();
    };

    _self.stop = function (name, url, properties, measurements) {
      var start = _events[name];

      if (isNaN(start)) {
        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, "stop was called without a corresponding start.", {
          name: name,
          key: name
        }, true);
      } else {
        var end = +new Date();
        var duration = dateTimeUtilsDuration(start, end);

        _self.action(name, url, duration, properties, measurements);
      }

      delete _events[name];
      _events[name] = undefined;
    };
  }

  return Timing;
}();
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/SendBuffer.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */





var BaseSendBuffer = function () {
  function BaseSendBuffer(logger, config) {
    var _buffer = [];
    var _bufferFullMessageSent = false;

    this._get = function () {
      return _buffer;
    };

    this._set = function (buffer) {
      _buffer = buffer;
      return _buffer;
    };

    dynamicproto_js(BaseSendBuffer, this, function (_self) {
      _self.enqueue = function (payload) {
        if (_self.count() >= config.eventsLimitInMem()) {
          // sent internal log only once per page view
          if (!_bufferFullMessageSent) {
            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InMemoryStorageBufferFull, "Maximum in-memory buffer size reached: " + _self.count(), true);
            _bufferFullMessageSent = true;
          }

          return;
        }

        _buffer.push(payload);
      };

      _self.count = function () {
        return _buffer.length;
      };

      _self.size = function () {
        var size = _buffer.length;

        for (var lp = 0; lp < _buffer.length; lp++) {
          size += _buffer[lp].length;
        }

        if (!config.emitLineDelimitedJson()) {
          size += 2;
        }

        return size;
      };

      _self.clear = function () {
        _buffer = [];
        _bufferFullMessageSent = false;
      };

      _self.getItems = function () {
        return _buffer.slice(0);
      };

      _self.batchPayloads = function (payload) {
        if (payload && payload.length > 0) {
          var batch = config.emitLineDelimitedJson() ? payload.join("\n") : "[" + payload.join(",") + "]";
          return batch;
        }

        return null;
      };
    });
  } // Removed Stub for BaseSendBuffer.prototype.enqueue.
  // Removed Stub for BaseSendBuffer.prototype.count.
  // Removed Stub for BaseSendBuffer.prototype.size.
  // Removed Stub for BaseSendBuffer.prototype.clear.
  // Removed Stub for BaseSendBuffer.prototype.getItems.
  // Removed Stub for BaseSendBuffer.prototype.batchPayloads.


  return BaseSendBuffer;
}();
/*
 * An array based send buffer.
 */


var ArraySendBuffer = function (_super) {
  __extendsFn(ArraySendBuffer, _super);

  function ArraySendBuffer(logger, config) {
    var _this = _super.call(this, logger, config) || this;

    dynamicproto_js(ArraySendBuffer, _this, function (_self, _base) {
      _self.markAsSent = function (payload) {
        _base.clear();
      };

      _self.clearSent = function (payload) {// not supported
      };
    });
    return _this;
  } // Removed Stub for ArraySendBuffer.prototype.markAsSent.
  // Removed Stub for ArraySendBuffer.prototype.clearSent.


  return ArraySendBuffer;
}(BaseSendBuffer);


/*
 * Session storage buffer holds a copy of all unsent items in the browser session storage.
 */

var SessionStorageSendBuffer = function (_super) {
  __extendsFn(SessionStorageSendBuffer, _super);

  function SessionStorageSendBuffer(logger, config) {
    var _this = _super.call(this, logger, config) || this;

    var _bufferFullMessageSent = false;
    dynamicproto_js(SessionStorageSendBuffer, _this, function (_self, _base) {
      var bufferItems = _getBuffer(SessionStorageSendBuffer.BUFFER_KEY);

      var notDeliveredItems = _getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);

      var buffer = _self._set(bufferItems.concat(notDeliveredItems)); // If the buffer has too many items, drop items from the end.


      if (buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {
        buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;
      }

      _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);

      _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, buffer);

      _self.enqueue = function (payload) {
        if (_self.count() >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {
          // sent internal log only once per page view
          if (!_bufferFullMessageSent) {
            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, "Maximum buffer size reached: " + _self.count(), true);
            _bufferFullMessageSent = true;
          }

          return;
        }

        _base.enqueue(payload);

        _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self._get());
      };

      _self.clear = function () {
        _base.clear();

        _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self._get());

        _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);

        _bufferFullMessageSent = false;
      };

      _self.markAsSent = function (payload) {
        _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self._set(_removePayloadsFromBuffer(payload, _self._get())));

        var sentElements = _getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);

        if (sentElements instanceof Array && payload instanceof Array) {
          sentElements = sentElements.concat(payload);

          if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {
            // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements
            // until we receive a response from the backend and the buffer has free space again (see clearSent method)
            logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, "Sent buffer reached its maximum size: " + sentElements.length, true);
            sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;
          }

          _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);
        }
      };

      _self.clearSent = function (payload) {
        var sentElements = _getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);

        sentElements = _removePayloadsFromBuffer(payload, sentElements);

        _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);
      };

      function _removePayloadsFromBuffer(payloads, buffer) {
        var remaining = [];
        arrForEach(buffer, function (value) {
          if (!isFunction(value) && HelperFuncs_arrIndexOf(payloads, value) === -1) {
            remaining.push(value);
          }
        });
        return remaining;
      }

      function _getBuffer(key) {
        var prefixedKey = key;

        try {
          prefixedKey = config.namePrefix && config.namePrefix() ? config.namePrefix() + "_" + prefixedKey : prefixedKey;
          var bufferJson = utlGetSessionStorage(logger, prefixedKey);

          if (bufferJson) {
            var buffer_1 = getJSON().parse(bufferJson);

            if (HelperFuncs_isString(buffer_1)) {
              // When using some version prototype.js the stringify / parse cycle does not decode array's correctly
              buffer_1 = getJSON().parse(buffer_1);
            }

            if (buffer_1 && isArray(buffer_1)) {
              return buffer_1;
            }
          }
        } catch (e) {
          logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, " storage key: " + prefixedKey + ", " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        }

        return [];
      }

      function _setBuffer(key, buffer) {
        var prefixedKey = key;

        try {
          prefixedKey = config.namePrefix && config.namePrefix() ? config.namePrefix() + "_" + prefixedKey : prefixedKey;
          var bufferJson = JSON.stringify(buffer);
          utlSetSessionStorage(logger, prefixedKey, bufferJson);
        } catch (e) {
          // if there was an error, clear the buffer
          // telemetry is stored in the _buffer array so we won't loose any items
          utlSetSessionStorage(logger, prefixedKey, JSON.stringify([]));
          logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, " storage key: " + prefixedKey + ", " + getExceptionName(e) + ". Buffer cleared", {
            exception: dumpObj(e)
          });
        }
      }
    });
    return _this;
  } // Removed Stub for SessionStorageSendBuffer.prototype.enqueue.
  // Removed Stub for SessionStorageSendBuffer.prototype.clear.
  // Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.
  // Removed Stub for SessionStorageSendBuffer.prototype.clearSent.


  SessionStorageSendBuffer.BUFFER_KEY = "AI_buffer";
  SessionStorageSendBuffer.SENT_BUFFER_KEY = "AI_sentBuffer"; // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.

  SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;
  return SessionStorageSendBuffer;
}(BaseSendBuffer);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



function _aiNameFunc(baseName) {
  var aiName = "ai." + baseName + ".";
  return function (name) {
    return aiName + name;
  };
}

var _aiApplication = _aiNameFunc("application");

var _aiDevice = _aiNameFunc("device");

var _aiLocation = _aiNameFunc("location");

var _aiOperation = _aiNameFunc("operation");

var _aiSession = _aiNameFunc("session");

var _aiUser = _aiNameFunc("user");

var _aiCloud = _aiNameFunc("cloud");

var _aiInternal = _aiNameFunc("internal");

var ContextTagKeys = function (_super) {
  __extendsFn(ContextTagKeys, _super);

  function ContextTagKeys() {
    return _super.call(this) || this;
  }

  return ContextTagKeys;
}(createClassFromInterface({
  applicationVersion: _aiApplication("ver"),
  applicationBuild: _aiApplication("build"),
  applicationTypeId: _aiApplication("typeId"),
  applicationId: _aiApplication("applicationId"),
  applicationLayer: _aiApplication("layer"),
  deviceId: _aiDevice("id"),
  deviceIp: _aiDevice("ip"),
  deviceLanguage: _aiDevice("language"),
  deviceLocale: _aiDevice("locale"),
  deviceModel: _aiDevice("model"),
  deviceFriendlyName: _aiDevice("friendlyName"),
  deviceNetwork: _aiDevice("network"),
  deviceNetworkName: _aiDevice("networkName"),
  deviceOEMName: _aiDevice("oemName"),
  deviceOS: _aiDevice("os"),
  deviceOSVersion: _aiDevice("osVersion"),
  deviceRoleInstance: _aiDevice("roleInstance"),
  deviceRoleName: _aiDevice("roleName"),
  deviceScreenResolution: _aiDevice("screenResolution"),
  deviceType: _aiDevice("type"),
  deviceMachineName: _aiDevice("machineName"),
  deviceVMName: _aiDevice("vmName"),
  deviceBrowser: _aiDevice("browser"),
  deviceBrowserVersion: _aiDevice("browserVersion"),
  locationIp: _aiLocation("ip"),
  locationCountry: _aiLocation("country"),
  locationProvince: _aiLocation("province"),
  locationCity: _aiLocation("city"),
  operationId: _aiOperation("id"),
  operationName: _aiOperation("name"),
  operationParentId: _aiOperation("parentId"),
  operationRootId: _aiOperation("rootId"),
  operationSyntheticSource: _aiOperation("syntheticSource"),
  operationCorrelationVector: _aiOperation("correlationVector"),
  sessionId: _aiSession("id"),
  sessionIsFirst: _aiSession("isFirst"),
  sessionIsNew: _aiSession("isNew"),
  userAccountAcquisitionDate: _aiUser("accountAcquisitionDate"),
  userAccountId: _aiUser("accountId"),
  userAgent: _aiUser("userAgent"),
  userId: _aiUser("id"),
  userStoreRegion: _aiUser("storeRegion"),
  userAuthUserId: _aiUser("authUserId"),
  userAnonymousUserAcquisitionDate: _aiUser("anonUserAcquisitionDate"),
  userAuthenticatedUserAcquisitionDate: _aiUser("authUserAcquisitionDate"),
  cloudName: _aiCloud("name"),
  cloudRole: _aiCloud("role"),
  cloudRoleVer: _aiCloud("roleVer"),
  cloudRoleInstance: _aiCloud("roleInstance"),
  cloudEnvironment: _aiCloud("environment"),
  cloudLocation: _aiCloud("location"),
  cloudDeploymentUnit: _aiCloud("deploymentUnit"),
  internalNodeName: _aiInternal("nodeName"),
  internalSdkVersion: _aiInternal("sdkVersion"),
  internalAgentVersion: _aiInternal("agentVersion"),
  internalSnippet: _aiInternal("snippet"),
  internalSdkSrc: _aiInternal("sdkSrc")
}));


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/PartAExtensions.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

var Extensions = {
  UserExt: "user",
  DeviceExt: "device",
  TraceExt: "trace",
  WebExt: "web",
  AppExt: "app",
  OSExt: "os",
  SessionExt: "ses",
  SDKExt: "sdk"
};
var CtxTagKeys = new ContextTagKeys();
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * System variables for a telemetry item.
 */
var Envelope = function () {
  function Envelope() {
    /**
     * Envelope version. For internal use only. By assigning this the default, it will not be serialized within the payload unless changed to a value other than #1.
     */
    this.ver = 1;
    /**
     * Sampling rate used in application. This telemetry item represents 1 / sampleRate actual telemetry items.
     */

    this.sampleRate = 100.0;
    /**
     * Key/value collection of context properties. See ContextTagKeys for information on available properties.
     */

    this.tags = {};
  }

  return Envelope;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






var Envelope_Envelope = function (_super) {
  __extendsFn(Envelope, _super);
  /**
   * Constructs a new instance of telemetry data.
   */


  function Envelope(logger, data, name) {
    var _this = _super.call(this) || this;

    _this.name = dataSanitizeString(logger, name) || strNotSpecified;
    _this.data = data;
    _this.time = toISOString(new Date());
    _this.aiDataContract = {
      time: 1
      /* Required */
      ,
      iKey: 1
      /* Required */
      ,
      name: 1
      /* Required */
      ,
      sampleRate: function sampleRate() {
        return _this.sampleRate === 100 ? 4
        /* Hidden */
        : 1
        /* Required */
        ;
      },
      tags: 1
      /* Required */
      ,
      data: 1
      /* Required */

    };
    return _this;
  }

  return Envelope;
}(Envelope);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
// THIS FILE WAS AUTOGENERATED

/**
 * Data struct to contain only C section with custom fields.
 */
var Base = function () {
  function Base() {}

  return Base;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
 // THIS FILE WAS AUTOGENERATED


/**
 * Data struct to contain both B and C sections.
 */

var Data = function (_super) {
  __extendsFn(Data, _super);

  function Data() {
    return _super.call(this) || this;
  }

  return Data;
}(Base);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var Data_Data = function (_super) {
  __extendsFn(Data, _super);
  /**
   * Constructs a new instance of telemetry data.
   */


  function Data(baseType, data) {
    var _this = _super.call(this) || this;
    /**
     * The data contract for serializing this object.
     */


    _this.aiDataContract = {
      baseType: 1
      /* Required */
      ,
      baseData: 1
      /* Required */

    };
    _this.baseType = baseType;
    _this.baseData = data;
    return _this;
  }

  return Data;
}(Data);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


 // these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload

var strBaseType = "baseType";
var strBaseData = "baseData";
var strProperties = "properties";
var strTrue = "true";

function _setValueIf(target, field, value) {
  return setValue(target, field, value, isTruthy);
}
/*
 * Maps Part A data from CS 4.0
 */


function _extractPartAExtensions(logger, item, env) {
  // todo: switch to keys from common in this method
  var envTags = env.tags = env.tags || {};
  var itmExt = item.ext = item.ext || {};
  var itmTags = item.tags = item.tags || [];
  var extUser = itmExt.user;

  if (extUser) {
    _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);

    _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);
  }

  var extApp = itmExt.app;

  if (extApp) {
    _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);
  }

  var extDevice = itmExt.device;

  if (extDevice) {
    _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);

    _setValueIf(envTags, CtxTagKeys.deviceType, extDevice.deviceClass);

    _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);

    _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);

    _setValueIf(envTags, CtxTagKeys.deviceType, extDevice.deviceType);
  }

  var web = item.ext.web;

  if (web) {
    _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);

    _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);

    _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);

    var envData = env.data = env.data || {};
    var envBaseData = envData[strBaseData] = envData[strBaseData] || {};
    var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};

    _setValueIf(envProps, "domain", web.domain);

    _setValueIf(envProps, "isManual", web.isManual ? strTrue : null);

    _setValueIf(envProps, "screenRes", web.screenRes);

    _setValueIf(envProps, "userConsent", web.userConsent ? strTrue : null);
  }

  var extOs = itmExt.os;

  if (extOs) {
    _setValueIf(envTags, CtxTagKeys.deviceOS, extOs.name);
  } // No support for mapping Trace.traceState to 2.0 as it is currently empty


  var extTrace = itmExt.trace;

  if (extTrace) {
    _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);

    _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace.name));

    _setValueIf(envTags, CtxTagKeys.operationId, extTrace.traceID);
  } // Sample 4.0 schema
  //  {
  //     "time" : "2018-09-05T22:51:22.4936Z",
  //     "name" : "MetricWithNamespace",
  //     "iKey" : "ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e",
  //     "ext": {  "cloud": {
  //          "role": "WATSON3",
  //          "roleInstance": "CO4AEAP00000260"
  //      },
  //      "device": {}, "correlation": {} },
  //      "tags": [
  //        { "amazon.region" : "east2" },
  //        { "os.expid" : "wp:02df239" }
  //     ]
  //   }


  var tgs = {}; // deals with tags.push({object})

  for (var i = itmTags.length - 1; i >= 0; i--) {
    var tg = itmTags[i];
    objForEachKey(tg, function (key, value) {
      tgs[key] = value;
    });
    itmTags.splice(i, 1);
  } // deals with tags[key]=value (and handles hasOwnProperty)


  objForEachKey(itmTags, function (tg, value) {
    tgs[tg] = value;
  });

  var theTags = __assignFn(__assignFn({}, envTags), tgs);

  if (!theTags[CtxTagKeys.internalSdkVersion]) {
    // Append a version in case it is not already set
    theTags[CtxTagKeys.internalSdkVersion] = "javascript:" + EnvelopeCreator.Version;
  }

  env.tags = optimizeObject(theTags);
}

function _extractPropsAndMeasurements(data, properties, measurements) {
  if (!isNullOrUndefined(data)) {
    objForEachKey(data, function (key, value) {
      if (isNumber(value)) {
        measurements[key] = value;
      } else if (HelperFuncs_isString(value)) {
        properties[key] = value;
      } else if (hasJSON()) {
        properties[key] = getJSON().stringify(value);
      }
    });
  }
}

function _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {
  if (!isNullOrUndefined(properties)) {
    objForEachKey(properties, function (key, value) {
      properties[key] = value || customUndefinedValue;
    });
  }
} // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?


function _createEnvelope(logger, envelopeType, telemetryItem, data) {
  var envelope = new Envelope_Envelope(logger, data, envelopeType);

  _setValueIf(envelope, "sampleRate", telemetryItem[SampleRate]);

  if ((telemetryItem[strBaseData] || {}).startTime) {
    envelope.time = toISOString(telemetryItem[strBaseData].startTime);
  }

  envelope.iKey = telemetryItem.iKey;
  var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, "");
  envelope.name = envelope.name.replace("{0}", iKeyNoDashes); // extract all extensions from ctx

  _extractPartAExtensions(logger, telemetryItem, envelope); // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags


  telemetryItem.tags = telemetryItem.tags || [];
  return optimizeObject(envelope);
}

function EnvelopeCreatorInit(logger, telemetryItem) {
  if (isNullOrUndefined(telemetryItem[strBaseData])) {
    logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");
  }
}

var EnvelopeCreator = {
  Version: "2.7.1"
};
function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem);
  var customMeasurements = telemetryItem[strBaseData].measurements || {};
  var customProperties = telemetryItem[strBaseData][strProperties] || {};

  _extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);
  }

  var bd = telemetryItem[strBaseData];

  if (isNullOrUndefined(bd)) {
    logger.warnToConsole("Invalid input for dependency data");
    return null;
  }

  var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : "GET";
  var remoteDepData = new RemoteDependencyData_RemoteDependencyData(logger, bd.id, bd.target, bd.name, bd.duration, bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);
  var data = new Data_Data(RemoteDependencyData_RemoteDependencyData.dataType, remoteDepData);
  return _createEnvelope(logger, RemoteDependencyData_RemoteDependencyData.envelopeType, telemetryItem, data);
}
function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem);
  var customProperties = {};
  var customMeasurements = {};

  if (telemetryItem[strBaseType] !== Event_Event.dataType) {
    customProperties["baseTypeSource"] = telemetryItem[strBaseType]; // save the passed in base type as a property
  }

  if (telemetryItem[strBaseType] === Event_Event.dataType) {
    // take collection
    customProperties = telemetryItem[strBaseData][strProperties] || {};
    customMeasurements = telemetryItem[strBaseData].measurements || {};
  } else {
    // if its not a known type, convert to custom event
    if (telemetryItem[strBaseData]) {
      _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);
    }
  } // Extract root level properties from part C telemetryItem.data


  _extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);
  }

  var eventName = telemetryItem[strBaseData].name;
  var eventData = new Event_Event(logger, eventName, customProperties, customMeasurements);
  var data = new Data_Data(Event_Event.dataType, eventData);
  return _createEnvelope(logger, Event_Event.envelopeType, telemetryItem, data);
}
function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem); // Extract root level properties from part C telemetryItem.data

  var customMeasurements = telemetryItem[strBaseData].measurements || {};
  var customProperties = telemetryItem[strBaseData][strProperties] || {};

  _extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);
  }

  var bd = telemetryItem[strBaseData];
  var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);
  var data = new Data_Data(Exception.dataType, exData);
  return _createEnvelope(logger, Exception.envelopeType, telemetryItem, data);
}
function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem);
  var baseData = telemetryItem[strBaseData];
  var props = baseData[strProperties] || {};
  var measurements = baseData.measurements || {};

  _extractPropsAndMeasurements(telemetryItem.data, props, measurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);
  }

  var baseMetricData = new Metric(logger, baseData.name, baseData.average, baseData.sampleCount, baseData.min, baseData.max, props, measurements);
  var data = new Data_Data(Metric.dataType, baseMetricData);
  return _createEnvelope(logger, Metric.envelopeType, telemetryItem, data);
}
function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem); // Since duration is not part of the domain properties in Common Schema, extract it from part C

  var strDuration = "duration";
  var duration;
  var baseData = telemetryItem[strBaseData];

  if (!isNullOrUndefined(baseData) && !isNullOrUndefined(baseData[strProperties]) && !isNullOrUndefined(baseData[strProperties][strDuration])) {
    // from part B properties
    duration = baseData[strProperties][strDuration];
    delete baseData[strProperties][strDuration];
  } else if (!isNullOrUndefined(telemetryItem.data) && !isNullOrUndefined(telemetryItem.data[strDuration])) {
    // from custom properties
    duration = telemetryItem.data[strDuration];
    delete telemetryItem.data[strDuration];
  }

  var bd = telemetryItem[strBaseData]; // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel

  var currentContextId;

  if (((telemetryItem.ext || {}).trace || {}).traceID) {
    currentContextId = telemetryItem.ext.trace.traceID;
  }

  var id = bd.id || currentContextId;
  var name = bd.name;
  var url = bd.uri;
  var properties = bd[strProperties] || {};
  var measurements = bd.measurements || {}; // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property

  if (!isNullOrUndefined(bd.refUri)) {
    properties["refUri"] = bd.refUri;
  } // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property


  if (!isNullOrUndefined(bd.pageType)) {
    properties["pageType"] = bd.pageType;
  } // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property


  if (!isNullOrUndefined(bd.isLoggedIn)) {
    properties["isLoggedIn"] = bd.isLoggedIn.toString();
  } // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property


  if (!isNullOrUndefined(bd[strProperties])) {
    var pageTags = bd[strProperties];
    objForEachKey(pageTags, function (key, value) {
      properties[key] = value;
    });
  }

  _extractPropsAndMeasurements(telemetryItem.data, properties, measurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);
  }

  var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);
  var data = new Data_Data(PageView.dataType, pageViewData);
  return _createEnvelope(logger, PageView.envelopeType, telemetryItem, data);
}
function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem);
  var bd = telemetryItem[strBaseData];
  var name = bd.name;
  var url = bd.uri || bd.url;
  var properties = bd[strProperties] || {};
  var measurements = bd.measurements || {};

  _extractPropsAndMeasurements(telemetryItem.data, properties, measurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);
  }

  var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);
  var data = new Data_Data(PageViewPerformance.dataType, baseData);
  return _createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);
}
function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {
  EnvelopeCreatorInit(logger, telemetryItem);
  var message = telemetryItem[strBaseData].message;
  var severityLevel = telemetryItem[strBaseData].severityLevel;
  var props = telemetryItem[strBaseData][strProperties] || {};
  var measurements = telemetryItem[strBaseData].measurements || {};

  _extractPropsAndMeasurements(telemetryItem.data, props, measurements);

  if (!isNullOrUndefined(customUndefinedValue)) {
    _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);
  }

  var baseData = new Trace(logger, message, severityLevel, props, measurements);
  var data = new Data_Data(Trace.dataType, baseData);
  return _createEnvelope(logger, Trace.envelopeType, telemetryItem, data);
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Serializer.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var Serializer = function () {
  function Serializer(logger) {
    dynamicproto_js(Serializer, this, function (_self) {
      /**
       * Serializes the current object to a JSON string.
       */
      _self.serialize = function (input) {
        var output = _serializeObject(input, "root");

        try {
          return getJSON().stringify(output);
        } catch (e) {
          // if serialization fails return an empty string
          logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, e && isFunction(e.toString) ? e.toString() : "Error serializing object", null, true);
        }
      };

      function _serializeObject(source, name) {
        var circularReferenceCheck = "__aiCircularRefCheck";
        var output = {};

        if (!source) {
          logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, "cannot serialize object because it is null or undefined", {
            name: name
          }, true);
          return output;
        }

        if (source[circularReferenceCheck]) {
          logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, "Circular reference detected while serializing object", {
            name: name
          }, true);
          return output;
        }

        if (!source.aiDataContract) {
          // special case for measurements/properties/tags
          if (name === "measurements") {
            output = _serializeStringMap(source, "number", name);
          } else if (name === "properties") {
            output = _serializeStringMap(source, "string", name);
          } else if (name === "tags") {
            output = _serializeStringMap(source, "string", name);
          } else if (isArray(source)) {
            output = _serializeArray(source, name);
          } else {
            logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, "Attempting to serialize an object which does not implement ISerializable", {
              name: name
            }, true);

            try {
              // verify that the object can be stringified
              getJSON().stringify(source);
              output = source;
            } catch (e) {
              // if serialization fails return an empty string
              logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, e && isFunction(e.toString) ? e.toString() : "Error serializing object", null, true);
            }
          }

          return output;
        }

        source[circularReferenceCheck] = true;
        objForEachKey(source.aiDataContract, function (field, contract) {
          var isRequired = isFunction(contract) ? contract() & 1
          /* Required */
          : contract & 1
          /* Required */
          ;
          var isHidden = isFunction(contract) ? contract() & 4
          /* Hidden */
          : contract & 4
          /* Hidden */
          ;
          var isArray = contract & 2
          /* Array */
          ;
          var isPresent = source[field] !== undefined;
          var isObj = isObject(source[field]) && source[field] !== null;

          if (isRequired && !isPresent && !isArray) {
            logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, "Missing required field specification. The field is required but not present on source", {
              field: field,
              name: name
            }); // If not in debug mode, continue and hope the error is permissible
          } else if (!isHidden) {
            // Don't serialize hidden fields
            var value = void 0;

            if (isObj) {
              if (isArray) {
                // special case; recurse on each object in the source array
                value = _serializeArray(source[field], field);
              } else {
                // recurse on the source object in this field
                value = _serializeObject(source[field], field);
              }
            } else {
              // assign the source field to the output even if undefined or required
              value = source[field];
            } // only emit this field if the value is defined


            if (value !== undefined) {
              output[field] = value;
            }
          }
        });
        delete source[circularReferenceCheck];
        return output;
      }

      function _serializeArray(sources, name) {
        var output;

        if (!!sources) {
          if (!isArray(sources)) {
            logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, "This field was specified as an array in the contract but the item is not an array.\r\n", {
              name: name
            }, true);
          } else {
            output = [];

            for (var i = 0; i < sources.length; i++) {
              var source = sources[i];

              var item = _serializeObject(source, name + "[" + i + "]");

              output.push(item);
            }
          }
        }

        return output;
      }

      function _serializeStringMap(map, expectedType, name) {
        var output;

        if (map) {
          output = {};
          objForEachKey(map, function (field, value) {
            if (expectedType === "string") {
              if (value === undefined) {
                output[field] = "undefined";
              } else if (value === null) {
                output[field] = "null";
              } else if (!value.toString) {
                output[field] = "invalid field: toString() is not defined.";
              } else {
                output[field] = value.toString();
              }
            } else if (expectedType === "number") {
              if (value === undefined) {
                output[field] = "undefined";
              } else if (value === null) {
                output[field] = "null";
              } else {
                var num = parseFloat(value);

                if (isNaN(num)) {
                  output[field] = "NaN";
                } else {
                  output[field] = num;
                }
              }
            } else {
              output[field] = "invalid field: " + name + " is of unknown type.";
              logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);
            }
          });
        }

        return output;
      }
    });
  } // Removed Stub for Serializer.prototype.serialize.


  return Serializer;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


/**
 * @description Monitors browser for offline events
 * @export default - Offline: Static instance of OfflineListener
 * @class OfflineListener
 */

var OfflineListener = function () {
  function OfflineListener() {
    var _window = getWindow();

    var _document = EnvUtils_getDocument();

    var isListening = false;
    var _onlineStatus = true;
    dynamicproto_js(OfflineListener, this, function (_self) {
      try {
        if (_window) {
          if (attachEvent(_window, "online", _setOnline)) {
            attachEvent(_window, "offline", _setOffline);
            isListening = true;
          }
        }

        if (_document) {
          // Also attach to the document.body or document
          var target = _document.body || _document;

          if (!isUndefined(target.ononline)) {
            target.ononline = _setOnline;
            target.onoffline = _setOffline;
            isListening = true;
          }
        }

        if (isListening) {
          // We are listening to events so lets set the current status rather than assuming we are online #1538
          var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global


          if (_navigator && !isNullOrUndefined(_navigator.onLine)) {
            // navigator.onLine is undefined in react-native
            _onlineStatus = _navigator.onLine;
          }
        }
      } catch (e) {
        // this makes react-native less angry
        isListening = false;
      }

      _self.isListening = isListening;

      _self.isOnline = function () {
        var result = true;

        var _navigator = getNavigator();

        if (isListening) {
          result = _onlineStatus;
        } else if (_navigator && !isNullOrUndefined(_navigator.onLine)) {
          // navigator.onLine is undefined in react-native
          result = _navigator.onLine;
        }

        return result;
      };

      _self.isOffline = function () {
        return !_self.isOnline();
      };

      function _setOnline() {
        _onlineStatus = true;
      }

      function _setOffline() {
        _onlineStatus = false;
      }
    });
  } // Removed Stub for OfflineListener.prototype.isOnline.
  // Removed Stub for OfflineListener.prototype.isOffline.


  OfflineListener.Offline = new OfflineListener();
  return OfflineListener;
}();


var Offline = OfflineListener.Offline;
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution
var MIN_INPUT_LENGTH = 8;

var HashCodeScoreGenerator = function () {
  function HashCodeScoreGenerator() {}

  HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {
    var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;
    return score * 100;
  };

  HashCodeScoreGenerator.prototype.getHashCode = function (input) {
    if (input === "") {
      return 0;
    }

    while (input.length < MIN_INPUT_LENGTH) {
      input = input.concat(input);
    } // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function


    var hash = 5381;

    for (var i = 0; i < input.length; ++i) {
      hash = (hash << 5) + hash + input.charCodeAt(i); // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)
      // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.

      hash = hash & hash;
    }

    return Math.abs(hash);
  }; // We're using 32 bit math, hence max value is (2^31 - 1)


  HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;
  return HashCodeScoreGenerator;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var SamplingScoreGenerator = function () {
  function SamplingScoreGenerator() {
    var _self = this;

    var hashCodeGenerator = new HashCodeScoreGenerator();
    var keys = new ContextTagKeys();

    _self.getSamplingScore = function (item) {
      var score = 0;

      if (item.tags && item.tags[keys.userId]) {
        // search in tags first, then ext
        score = hashCodeGenerator.getHashCodeScore(item.tags[keys.userId]);
      } else if (item.ext && item.ext.user && item.ext.user.id) {
        score = hashCodeGenerator.getHashCodeScore(item.ext.user.id);
      } else if (item.tags && item.tags[keys.operationId]) {
        // search in tags first, then ext
        score = hashCodeGenerator.getHashCodeScore(item.tags[keys.operationId]);
      } else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {
        score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace.traceID);
      } else {
        // tslint:disable-next-line:insecure-random
        score = Math.random() * 100;
      }

      return score;
    };
  }

  return SamplingScoreGenerator;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */




var Sample = function () {
  function Sample(sampleRate, logger) {
    // We're using 32 bit math, hence max value is (2^31 - 1)
    this.INT_MAX_VALUE = 2147483647;

    var _logger = logger || safeGetLogger(null);

    if (sampleRate > 100 || sampleRate < 0) {
      _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, "Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.", {
        samplingRate: sampleRate
      }, true);

      sampleRate = 100;
    }

    this.sampleRate = sampleRate;
    this.samplingScoreGenerator = new SamplingScoreGenerator();
  }
  /**
   * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).
   */


  Sample.prototype.isSampledIn = function (envelope) {
    var samplingPercentage = this.sampleRate; // 0 - 100

    var isSampledIn = false;

    if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {
      return true;
    } else if (envelope.baseType === Metric.dataType) {
      // exclude MetricData telemetry from sampling
      return true;
    }

    isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;
    return isSampledIn;
  };

  return Sample;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Sender.js
/*
 * Application Insights JavaScript SDK - Channel, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var _a;




 // todo move to channel






var FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)

function _getResponseText(xhr) {
  try {
    return xhr.responseText;
  } catch (e) {// Best effort, as XHR may throw while XDR wont so just ignore
  }

  return null;
}

function _getDefaultAppInsightsChannelConfig() {
  // set default values
  return {
    endpointUrl: function endpointUrl() {
      return "https://dc.services.visualstudio.com/v2/track";
    },
    emitLineDelimitedJson: function emitLineDelimitedJson() {
      return false;
    },
    maxBatchInterval: function maxBatchInterval() {
      return 15000;
    },
    maxBatchSizeInBytes: function maxBatchSizeInBytes() {
      return 102400;
    },
    disableTelemetry: function disableTelemetry() {
      return false;
    },
    enableSessionStorageBuffer: function enableSessionStorageBuffer() {
      return true;
    },
    isRetryDisabled: function isRetryDisabled() {
      return false;
    },
    isBeaconApiDisabled: function isBeaconApiDisabled() {
      return true;
    },
    disableXhr: function disableXhr() {
      return false;
    },
    onunloadDisableFetch: function onunloadDisableFetch() {
      return false;
    },
    onunloadDisableBeacon: function onunloadDisableBeacon() {
      return false;
    },
    instrumentationKey: function instrumentationKey() {
      return undefined;
    },
    namePrefix: function namePrefix() {
      return undefined;
    },
    samplingPercentage: function samplingPercentage() {
      return 100;
    },
    customHeaders: function customHeaders() {
      return undefined;
    },
    convertUndefined: function convertUndefined() {
      return undefined;
    },
    eventsLimitInMem: function eventsLimitInMem() {
      return 10000;
    }
  };
}

var EnvelopeTypeCreator = (_a = {}, _a[Event_Event.dataType] = EventEnvelopeCreator, _a[Trace.dataType] = TraceEnvelopeCreator, _a[PageView.dataType] = PageViewEnvelopeCreator, _a[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator, _a[Exception.dataType] = ExceptionEnvelopeCreator, _a[Metric.dataType] = MetricEnvelopeCreator, _a[RemoteDependencyData_RemoteDependencyData.dataType] = DependencyEnvelopeCreator, _a);

var Sender = function (_super) {
  __extendsFn(Sender, _super);

  function Sender() {
    var _this = _super.call(this) || this;

    _this.priority = 1001;
    _this.identifier = BreezeChannelIdentifier;
    /**
     * How many times in a row a retryable error condition has occurred.
     */

    var _consecutiveErrors;
    /**
     * The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).
     */


    var _retryAt;
    /**
     * The time of the last send operation.
     */


    var _lastSend;
    /**
     * Flag indicating that the sending should be paused
     */


    var _paused = false;
    /**
     * Handle to the timer for delayed sending of batches of data.
     */

    var _timeoutHandle;

    var _serializer;

    var _stamp_specific_redirects;

    var _headers = {}; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)

    var _syncFetchPayload = 0;
    /**
     * The sender to use if the payload size is too large
     */

    var _fallbackSender;
    /**
     * The identified sender to use for the synchronous unload stage
     */


    var _syncUnloadSender;

    _this._senderConfig = _getDefaultAppInsightsChannelConfig();
    dynamicproto_js(Sender, _this, function (_self, _base) {
      function _notImplemented() {
        throwError("Method not implemented.");
      }

      _self.pause = function () {
        _clearScheduledTimer();

        _paused = true;
      };

      _self.resume = function () {
        if (_paused) {
          _paused = false;
          _retryAt = null; // flush if we have exceeded the max-size already

          if (_self._buffer.size() > _self._senderConfig.maxBatchSizeInBytes()) {
            _self.triggerSend(true, null, 10
            /* MaxBatchSize */
            );
          }

          _setupTimer();
        }
      };

      _self.flush = function () {
        if (!_paused) {
          // Clear the normal schedule timer as we are going to try and flush ASAP
          _clearScheduledTimer();

          try {
            _self.triggerSend(true, null, 1
            /* ManualFlush */
            );
          } catch (e) {
            _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, "flush failed, telemetry will not be collected: " + getExceptionName(e), {
              exception: dumpObj(e)
            });
          }
        }
      };

      _self.onunloadFlush = function () {
        if (!_paused) {
          if ((_self._senderConfig.onunloadDisableBeacon() === false || _self._senderConfig.isBeaconApiDisabled() === false) && isBeaconsSupported()) {
            try {
              _self.triggerSend(true, _doUnloadSend, 2
              /* Unload */
              );
            } catch (e) {
              _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToSendQueuedTelemetry, "failed to flush with beacon sender on page unload, telemetry will not be collected: " + getExceptionName(e), {
                exception: dumpObj(e)
              });
            }
          } else {
            _self.flush();
          }
        }
      };

      _self.teardown = _notImplemented;

      _self.addHeader = function (name, value) {
        _headers[name] = value;
      };

      _self.initialize = function (config, core, extensions, pluginChain) {
        _base.initialize(config, core, extensions, pluginChain);

        var ctx = _self._getTelCtx();

        var identifier = _self.identifier;
        _serializer = new Serializer(core.logger);
        _consecutiveErrors = 0;
        _retryAt = null;
        _lastSend = 0;
        _self._sender = null;
        _stamp_specific_redirects = 0;

        var diagLog = _self.diagLog();

        var defaultConfig = _getDefaultAppInsightsChannelConfig();

        objForEachKey(defaultConfig, function (field, value) {
          _self._senderConfig[field] = function () {
            return ctx.getConfig(identifier, field, value());
          };
        });
        _self._buffer = _self._senderConfig.enableSessionStorageBuffer() && utlCanUseSessionStorage() ? new SessionStorageSendBuffer(diagLog, _self._senderConfig) : new ArraySendBuffer(diagLog, _self._senderConfig);
        _self._sample = new Sample(_self._senderConfig.samplingPercentage(), diagLog);

        if (!_validateInstrumentationKey(config)) {
          diagLog.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidInstrumentationKey, "Invalid Instrumentation key " + config.instrumentationKey);
        }

        if (!isInternalApplicationInsightsEndpoint(_self._senderConfig.endpointUrl()) && _self._senderConfig.customHeaders() && _self._senderConfig.customHeaders().length > 0) {
          arrForEach(_self._senderConfig.customHeaders(), function (customHeader) {
            _this.addHeader(customHeader.header, customHeader.value);
          });
        }

        var senderConfig = _self._senderConfig;
        var sendPostFunc = null;

        if (!senderConfig.disableXhr() && useXDomainRequest()) {
          sendPostFunc = _xdrSender; // IE 8 and 9
        } else if (!senderConfig.disableXhr() && isXhrSupported()) {
          sendPostFunc = _xhrSender;
        }

        if (!sendPostFunc && isFetchSupported()) {
          sendPostFunc = _fetchSender;
        } // always fallback to XHR


        _fallbackSender = sendPostFunc || _xhrSender;

        if (!senderConfig.isBeaconApiDisabled() && isBeaconsSupported()) {
          // Config is set to always used beacon sending
          sendPostFunc = _beaconSender;
        }

        _self._sender = sendPostFunc || _xhrSender;

        if (!senderConfig.onunloadDisableFetch() && isFetchSupported(true)) {
          // Try and use the fetch with keepalive
          _syncUnloadSender = _fetchKeepAliveSender;
        } else if (isBeaconsSupported()) {
          // Try and use sendBeacon
          _syncUnloadSender = _beaconSender;
        } else if (!senderConfig.disableXhr() && useXDomainRequest()) {
          _syncUnloadSender = _xdrSender; // IE 8 and 9
        } else if (!senderConfig.disableXhr() && isXhrSupported()) {
          _syncUnloadSender = _xhrSender;
        } else {
          _syncUnloadSender = _fallbackSender;
        }
      };

      _self.processTelemetry = function (telemetryItem, itemCtx) {
        itemCtx = _self._getTelCtx(itemCtx);

        try {
          // if master off switch is set, don't send any data
          if (_self._senderConfig.disableTelemetry()) {
            // Do not send/save data
            return;
          } // validate input


          if (!telemetryItem) {
            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, "Cannot send empty telemetry");
            return;
          } // validate event


          if (telemetryItem.baseData && !telemetryItem.baseType) {
            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, "Cannot send telemetry without baseData and baseType");
            return;
          }

          if (!telemetryItem.baseType) {
            // Default
            telemetryItem.baseType = "EventData";
          } // ensure a sender was constructed


          if (!_self._sender) {
            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, "Sender was not initialized");
            return;
          } // check if this item should be sampled in, else add sampleRate tag


          if (!_isSampledIn(telemetryItem)) {
            // Item is sampled out, do not send it
            itemCtx.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, "Telemetry item was sampled out and not sent", {
              SampleRate: _self._sample.sampleRate
            });
            return;
          } else {
            telemetryItem[SampleRate] = _self._sample.sampleRate;
          }

          var convertUndefined = _self._senderConfig.convertUndefined() || undefined; // construct an envelope that Application Insights endpoint can understand
          // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey

          var defaultEnvelopeIkey = telemetryItem.iKey || _self._senderConfig.instrumentationKey();

          var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, itemCtx.diagLog(), convertUndefined);

          if (!aiEnvelope_1) {
            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, "Unable to create an AppInsights envelope");
            return;
          }

          var doNotSendItem_1 = false; // this is for running in legacy mode, where customer may already have a custom initializer present

          if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {
            arrForEach(telemetryItem.tags[ProcessLegacy], function (callBack) {
              try {
                if (callBack && callBack(aiEnvelope_1) === false) {
                  doNotSendItem_1 = true;
                  itemCtx.diagLog().warnToConsole("Telemetry processor check returns false");
                }
              } catch (e) {
                // log error but dont stop executing rest of the telemetry initializers
                // doNotSendItem = true;
                itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, "One of telemetry initializers failed, telemetry item will not be sent: " + getExceptionName(e), {
                  exception: dumpObj(e)
                }, true);
              }
            });
            delete telemetryItem.tags[ProcessLegacy];
          }

          if (doNotSendItem_1) {
            return; // do not send, no need to execute next plugin
          } // check if the incoming payload is too large, truncate if necessary


          var payload = _serializer.serialize(aiEnvelope_1); // flush if we would exceed the max-size limit by adding this item


          var buffer = _self._buffer;
          var bufferSize = buffer.size();

          if (bufferSize + payload.length > _self._senderConfig.maxBatchSizeInBytes()) {
            _self.triggerSend(true, null, 10
            /* MaxBatchSize */
            );
          } // enqueue the payload


          buffer.enqueue(payload); // ensure an invocation timeout is set

          _setupTimer();
        } catch (e) {
          itemCtx.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, "Failed adding telemetry to the sender's buffer, some telemetry will be lost: " + getExceptionName(e), {
            exception: dumpObj(e)
          });
        } // hand off the telemetry item to the next plugin


        _self.processNext(telemetryItem, itemCtx);
      };
      /**
       * xhr state changes
       */


      _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {
        if (xhr.readyState === 4) {
          _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, _formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);
        }
      };
      /**
       * Immediately send buffered data
       * @param async {boolean} - Indicates if the events should be sent asynchronously
       * @param forcedSender {SenderFunction} - Indicates the forcedSender, undefined if not passed
       */


      _self.triggerSend = function (async, forcedSender, sendReason) {
        if (async === void 0) {
          async = true;
        }

        if (!_paused) {
          try {
            var buffer = _self._buffer; // Send data only if disableTelemetry is false

            if (!_self._senderConfig.disableTelemetry()) {
              if (buffer.count() > 0) {
                var payload = buffer.getItems();

                _notifySendRequest(sendReason || 0
                /* Undefined */
                , async); // invoke send


                if (forcedSender) {
                  forcedSender.call(_this, payload, async);
                } else {
                  _self._sender(payload, async);
                }
              } // update lastSend time to enable throttling


              _lastSend = +new Date();
            } else {
              buffer.clear();
            }

            _clearScheduledTimer();
          } catch (e) {
            /* Ignore this error for IE under v10 */
            var ieVer = getIEVersion();

            if (!ieVer || ieVer > 9) {
              _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, "Telemetry transmission failed, some telemetry will be lost: " + getExceptionName(e), {
                exception: dumpObj(e)
              });
            }
          }
        }
      };
      /**
       * error handler
       */


      _self._onError = function (payload, message, event) {
        _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, "Failed to send telemetry.", {
          message: message
        });

        _self._buffer.clearSent(payload);
      };
      /**
       * partial success handler
       */


      _self._onPartialSuccess = function (payload, results) {
        var failed = [];
        var retry = []; // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.

        var errors = results.errors.reverse();

        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {
          var error = errors_1[_i];
          var extracted = payload.splice(error.index, 1)[0];

          if (_isRetriable(error.statusCode)) {
            retry.push(extracted);
          } else {
            // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).
            failed.push(extracted);
          }
        }

        if (payload.length > 0) {
          _self._onSuccess(payload, results.itemsAccepted);
        }

        if (failed.length > 0) {
          _self._onError(failed, _formatErrorMessageXhr(null, ["partial success", results.itemsAccepted, "of", results.itemsReceived].join(" ")));
        }

        if (retry.length > 0) {
          _resendPayload(retry);

          _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, "Partial success. " + "Delivered: " + payload.length + ", Failed: " + failed.length + ". Will retry to send " + retry.length + " our of " + results.itemsReceived + " items");
        }
      };
      /**
       * success handler
       */


      _self._onSuccess = function (payload, countOfItemsInPayload) {
        _self._buffer.clearSent(payload);
      };
      /**
       * xdr state changes
       */


      _self._xdrOnLoad = function (xdr, payload) {
        var responseText = _getResponseText(xdr);

        if (xdr && (responseText + "" === "200" || responseText === "")) {
          _consecutiveErrors = 0;

          _self._onSuccess(payload, 0);
        } else {
          var results = _parseResponse(responseText);

          if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted && !_self._senderConfig.isRetryDisabled()) {
            _self._onPartialSuccess(payload, results);
          } else {
            _self._onError(payload, _formatErrorMessageXdr(xdr));
          }
        }
      };

      function _isSampledIn(envelope) {
        return _self._sample.isSampledIn(envelope);
      }

      function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {
        var response = null;

        if (!_self._appId) {
          response = _parseResponse(res);

          if (response && response.appId) {
            _self._appId = response.appId;
          }
        }

        if ((status < 200 || status >= 300) && status !== 0) {
          // Update End Point url if permanent redirect or moved permanently
          // Updates the end point url before retry
          if (status === 301 || status === 307 || status === 308) {
            if (!_checkAndUpdateEndPointUrl(responseUrl)) {
              _self._onError(payload, errorMessage);

              return;
            }
          }

          if (!_self._senderConfig.isRetryDisabled() && _isRetriable(status)) {
            _resendPayload(payload);

            _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, ". " + "Response code " + status + ". Will retry to send " + payload.length + " items.");
          } else {
            _self._onError(payload, errorMessage);
          }
        } else if (Offline.isOffline()) {
          // offline
          // Note: Don't check for status == 0, since adblock gives this code
          if (!_self._senderConfig.isRetryDisabled()) {
            var offlineBackOffMultiplier = 10; // arbritrary number

            _resendPayload(payload, offlineBackOffMultiplier);

            _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, ". Offline - Response Code: " + status + ". Offline status: " + Offline.isOffline() + ". Will retry to send " + payload.length + " items.");
          }
        } else {
          // check if the xhr's responseURL or fetch's response.url is same as endpoint url
          // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.
          _checkAndUpdateEndPointUrl(responseUrl);

          if (status === 206) {
            if (!response) {
              response = _parseResponse(res);
            }

            if (response && !_self._senderConfig.isRetryDisabled()) {
              _self._onPartialSuccess(payload, response);
            } else {
              _self._onError(payload, errorMessage);
            }
          } else {
            _consecutiveErrors = 0;

            _self._onSuccess(payload, countOfItemsInPayload);
          }
        }
      }

      function _checkAndUpdateEndPointUrl(responseUrl) {
        // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)
        if (_stamp_specific_redirects >= 10) {
          //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+"/?redirect=false";
          //  _stamp_specific_redirects = 0;
          return false;
        }

        if (!isNullOrUndefined(responseUrl) && responseUrl !== "") {
          if (responseUrl !== _self._senderConfig.endpointUrl()) {
            _self._senderConfig.endpointUrl = function () {
              return responseUrl;
            };

            ++_stamp_specific_redirects;
            return true;
          }
        }

        return false;
      }

      function _doUnloadSend(payload, isAsync) {
        if (_syncUnloadSender) {
          // We are unloading so always call the sender with sync set to false
          _syncUnloadSender(payload, false);
        } else {
          // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)
          _beaconSender(payload, isAsync);
        }
      }

      function _doBeaconSend(payload) {
        var nav = getNavigator();
        var buffer = _self._buffer;

        var url = _self._senderConfig.endpointUrl();

        var batch = _self._buffer.batchPayloads(payload); // Chrome only allows CORS-safelisted values for the sendBeacon data argument
        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283


        var plainTextBatch = new Blob([batch], {
          type: "text/plain;charset=UTF-8"
        }); // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.

        var queued = nav.sendBeacon(url, plainTextBatch);

        if (queued) {
          buffer.markAsSent(payload); // no response from beaconSender, clear buffer

          _self._onSuccess(payload, payload.length);
        }

        return queued;
      }
      /**
       * Send Beacon API request
       * @param payload {string} - The data payload to be sent.
       * @param isAsync {boolean} - not used
       * Note: Beacon API does not support custom headers and we are not able to get
       * appId from the backend for the correct correlation.
       */


      function _beaconSender(payload, isAsync) {
        if (isArray(payload) && payload.length > 0) {
          // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.
          if (!_doBeaconSend(payload)) {
            // Failed to send entire payload so try and split data and try to send as much events as possible
            var droppedPayload = [];

            for (var lp = 0; lp < payload.length; lp++) {
              var thePayload = payload[lp];

              if (!_doBeaconSend([thePayload])) {
                // Can't send anymore, so split the batch and drop the rest
                droppedPayload.push(thePayload);
              }
            }

            if (droppedPayload.length > 0) {
              _fallbackSender(droppedPayload, true);

              _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, ". " + "Failed to send telemetry with Beacon API, retried with normal sender.");
            }
          }
        }
      }
      /**
       * Send XMLHttpRequest
       * @param payload {string} - The data payload to be sent.
       * @param isAsync {boolean} - Indicates if the request should be sent asynchronously
       */


      function _xhrSender(payload, isAsync) {
        var xhr = new XMLHttpRequest();

        var endPointUrl = _self._senderConfig.endpointUrl();

        try {
          xhr[DisabledPropertyName] = true;
        } catch (e) {// If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would
          // cause the request to fail and we no telemetry would be sent
        }

        xhr.open("POST", endPointUrl, isAsync);
        xhr.setRequestHeader("Content-type", "application/json"); // append Sdk-Context request header only in case of breeze endpoint

        if (isInternalApplicationInsightsEndpoint(endPointUrl)) {
          xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);
        }

        arrForEach(objKeys(_headers), function (headerName) {
          xhr.setRequestHeader(headerName, _headers[headerName]);
        });

        xhr.onreadystatechange = function () {
          return _self._xhrReadyStateChange(xhr, payload, payload.length);
        };

        xhr.onerror = function (event) {
          return _self._onError(payload, _formatErrorMessageXhr(xhr), event);
        }; // compose an array of payloads


        var batch = _self._buffer.batchPayloads(payload);

        xhr.send(batch);

        _self._buffer.markAsSent(payload);
      }

      function _fetchKeepAliveSender(payload, isAsync) {
        if (isArray(payload)) {
          var payloadSize = payload.length;

          for (var lp = 0; lp < payload.length; lp++) {
            payloadSize += payload[lp].length;
          }

          if (_syncFetchPayload + payloadSize <= FetchSyncRequestSizeLimitBytes) {
            _doFetchSender(payload, false);
          } else if (isBeaconsSupported()) {
            // Fallback to beacon sender as we at least get told which events can't be scheduled
            _beaconSender(payload, isAsync);
          } else {
            // Payload is going to be too big so just try and send via XHR
            _fallbackSender && _fallbackSender(payload, true);

            _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, ". " + "Failed to send telemetry with Beacon API, retried with xhrSender.");
          }
        }
      }
      /**
       * Send fetch API request
       * @param payload {string} - The data payload to be sent.
       * @param isAsync {boolean} - not used
       */


      function _fetchSender(payload, isAsync) {
        _doFetchSender(payload, true);
      }
      /**
       * Send fetch API request
       * @param payload {string} - The data payload to be sent.
       * @param isAsync {boolean} - not used
       */


      function _doFetchSender(payload, isAsync) {
        var _a;

        var endPointUrl = _self._senderConfig.endpointUrl();

        var batch = _self._buffer.batchPayloads(payload);

        var plainTextBatch = new Blob([batch], {
          type: "application/json"
        });
        var requestHeaders = new Headers();
        var batchLength = batch.length; // append Sdk-Context request header only in case of breeze endpoint

        if (isInternalApplicationInsightsEndpoint(endPointUrl)) {
          requestHeaders.append(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);
        }

        arrForEach(objKeys(_headers), function (headerName) {
          requestHeaders.append(headerName, _headers[headerName]);
        });
        var init = (_a = {
          method: "POST",
          headers: requestHeaders,
          body: plainTextBatch
        }, _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request
        , _a);

        if (!isAsync) {
          init.keepalive = true;
          _syncFetchPayload += batchLength;
        }

        var request = new Request(endPointUrl, init);

        try {
          // Also try and tag the request (just in case the value in init is not copied over)
          request[DisabledPropertyName] = true;
        } catch (e) {// If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would
          // cause the request to fail and we no telemetry would be sent
        }

        fetch(request).then(function (response) {
          if (!isAsync) {
            _syncFetchPayload -= batchLength;
            batchLength = 0;
          }
          /**
           * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.
           * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure
           * or if anything prevented the request from completing.
           */


          if (!response.ok) {
            _self._onError(payload, response.statusText);
          } else {
            response.text().then(function (text) {
              _checkResponsStatus(response.status, payload, response.url, payload.length, response.statusText, text);
            });
          }
        })["catch"](function (error) {
          if (!isAsync) {
            _syncFetchPayload -= batchLength;
            batchLength = 0;
          }

          _self._onError(payload, error.message);
        });

        _self._buffer.markAsSent(payload);
      }
      /**
       * Parses the response from the backend.
       * @param response - XMLHttpRequest or XDomainRequest response
       */


      function _parseResponse(response) {
        try {
          if (response && response !== "") {
            var result = getJSON().parse(response);

            if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted && result.itemsReceived - result.itemsAccepted === result.errors.length) {
              return result;
            }
          }
        } catch (e) {
          _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, "Cannot parse the response. " + getExceptionName(e), {
            response: response
          });
        }

        return null;
      }
      /**
       * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).
       * @param payload
       */


      function _resendPayload(payload, linearFactor) {
        if (linearFactor === void 0) {
          linearFactor = 1;
        }

        if (!payload || payload.length === 0) {
          return;
        }

        var buffer = _self._buffer;
        buffer.clearSent(payload);
        _consecutiveErrors++;

        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {
          var item = payload_1[_i];
          buffer.enqueue(item);
        } // setup timer


        _setRetryTime(linearFactor);

        _setupTimer();
      }
      /**
       * Calculates the time to wait before retrying in case of an error based on
       * http://en.wikipedia.org/wiki/Exponential_backoff
       */


      function _setRetryTime(linearFactor) {
        var SlotDelayInSeconds = 10;
        var delayInSeconds;

        if (_consecutiveErrors <= 1) {
          delayInSeconds = SlotDelayInSeconds;
        } else {
          var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2; // tslint:disable-next-line:insecure-random

          var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;
          backOffDelay = linearFactor * backOffDelay;
          delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);
        } // TODO: Log the backoff time like the C# version does.


        var retryAfterTimeSpan = dateNow() + delayInSeconds * 1000; // TODO: Log the retry at time like the C# version does.

        _retryAt = retryAfterTimeSpan;
      }
      /**
       * Sets up the timer which triggers actually sending the data.
       */


      function _setupTimer() {
        if (!_timeoutHandle && !_paused) {
          var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;
          var timerValue = Math.max(_self._senderConfig.maxBatchInterval(), retryInterval);
          _timeoutHandle = setTimeout(function () {
            _timeoutHandle = null;

            _self.triggerSend(true, null, 1
            /* NormalSchedule */
            );
          }, timerValue);
        }
      }

      function _clearScheduledTimer() {
        clearTimeout(_timeoutHandle);
        _timeoutHandle = null;
        _retryAt = null;
      }
      /**
       * Checks if the SDK should resend the payload after receiving this status code from the backend.
       * @param statusCode
       */


      function _isRetriable(statusCode) {
        return statusCode === 408 // Timeout
        || statusCode === 429 // Too many requests.
        || statusCode === 500 // Internal server error.
        || statusCode === 503; // Service unavailable.
      }

      function _formatErrorMessageXhr(xhr, message) {
        if (xhr) {
          return "XMLHttpRequest,Status:" + xhr.status + ",Response:" + _getResponseText(xhr) || 0 || 0;
        }

        return message;
      }
      /**
       * Send XDomainRequest
       * @param payload {string} - The data payload to be sent.
       * @param isAsync {boolean} - Indicates if the request should be sent asynchronously
       *
       * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added
       * to maintain consistency with the xhrSender's contract
       * Note: XDomainRequest does not support custom headers and we are not able to get
       * appId from the backend for the correct correlation.
       */


      function _xdrSender(payload, isAsync) {
        var buffer = _self._buffer;

        var _window = getWindow();

        var xdr = new XDomainRequest();

        xdr.onload = function () {
          return _self._xdrOnLoad(xdr, payload);
        };

        xdr.onerror = function (event) {
          return _self._onError(payload, _formatErrorMessageXdr(xdr), event);
        }; // XDomainRequest requires the same protocol as the hosting page.
        // If the protocol doesn't match, we can't send the telemetry :(.


        var hostingProtocol = _window && _window.location && _window.location.protocol || "";

        if (_self._senderConfig.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {
          _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, ". " + "Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.");

          buffer.clear();
          return;
        }

        var endpointUrl = _self._senderConfig.endpointUrl().replace(/^(https?:)/, "");

        xdr.open("POST", endpointUrl); // compose an array of payloads

        var batch = buffer.batchPayloads(payload);
        xdr.send(batch);
        buffer.markAsSent(payload);
      }

      function _formatErrorMessageXdr(xdr, message) {
        if (xdr) {
          return "XDomainRequest,Response:" + _getResponseText(xdr) || 0;
        }

        return message;
      } // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6


      function _getNotifyMgr() {
        var func = "getNotifyMgr";

        if (_self.core[func]) {
          return _self.core[func]();
        } // using _self.core['_notificationManager'] for backward compatibility


        return _self.core["_notificationManager"];
      }

      function _notifySendRequest(sendRequest, isAsync) {
        var manager = _getNotifyMgr();

        if (manager && manager.eventsSendRequest) {
          try {
            manager.eventsSendRequest(sendRequest, isAsync);
          } catch (e) {
            _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.NotificationException, "send request notification failed: " + getExceptionName(e), {
              exception: dumpObj(e)
            });
          }
        }
      }
      /**
       * Validate UUID Format
       * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo
       */


      function _validateInstrumentationKey(config) {
        var disableIKeyValidationFlag = isNullOrUndefined(config.disableInstrumentationKeyValidation) ? false : config.disableInstrumentationKeyValidation;

        if (disableIKeyValidationFlag) {
          return true;
        }

        var UUID_Regex = "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$";
        var regexp = new RegExp(UUID_Regex);
        return regexp.test(config.instrumentationKey);
      }
    });
    return _this;
  }

  Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {
    var envelope;

    if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {
      envelope = __assignFn(__assignFn({}, orig), {
        iKey: iKey
      });
    } else {
      envelope = orig;
    }

    var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;
    return creator(logger, envelope, convertUndefined);
  }; // Removed Stub for Sender.prototype.pause.
  // Removed Stub for Sender.prototype.resume.
  // Removed Stub for Sender.prototype.flush.
  // Removed Stub for Sender.prototype.onunloadFlush.
  // Removed Stub for Sender.prototype.teardown.
  // Removed Stub for Sender.prototype.initialize.
  // Removed Stub for Sender.prototype.processTelemetry.
  // Removed Stub for Sender.prototype._xhrReadyStateChange.
  // Removed Stub for Sender.prototype.triggerSend.
  // Removed Stub for Sender.prototype._onError.
  // Removed Stub for Sender.prototype._onPartialSuccess.
  // Removed Stub for Sender.prototype._onSuccess.
  // Removed Stub for Sender.prototype._xdrOnLoad.
  // Removed Stub for Sender.prototype.addHeader.


  return Sender;
}(BaseTelemetryPlugin);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var cookieNameConst = "ai_session";

var Session = function () {
  function Session() {}

  return Session;
}();



var _SessionManager = function () {
  function _SessionManager(config, core) {
    var self = this;

    var _storageNamePrefix;

    var _cookieUpdatedTimestamp;

    var _logger = safeGetLogger(core);

    var _cookieManager = safeGetCookieMgr(core);

    dynamicproto_js(_SessionManager, self, function (_self) {
      if (!config) {
        config = {};
      }

      if (!isFunction(config.sessionExpirationMs)) {
        config.sessionExpirationMs = function () {
          return _SessionManager.acquisitionSpan;
        };
      }

      if (!isFunction(config.sessionRenewalMs)) {
        config.sessionRenewalMs = function () {
          return _SessionManager.renewalSpan;
        };
      }

      _self.config = config; // sessionCookiePostfix takes the preference if it is configured, otherwise takes namePrefix if configured.

      var sessionCookiePostfix = _self.config.sessionCookiePostfix && _self.config.sessionCookiePostfix() ? _self.config.sessionCookiePostfix() : _self.config.namePrefix && _self.config.namePrefix() ? _self.config.namePrefix() : "";

      _storageNamePrefix = function _storageNamePrefix() {
        return cookieNameConst + sessionCookiePostfix;
      };

      _self.automaticSession = new Session();

      _self.update = function () {
        // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing
        // the number to be incorrect.
        var nowMs = dateNow();
        var isExpired = false;
        var session = _self.automaticSession;

        if (!session.id) {
          isExpired = !_initializeAutomaticSession(session, nowMs);
        }

        var sessionExpirationMs = _self.config.sessionExpirationMs();

        if (!isExpired && sessionExpirationMs > 0) {
          var sessionRenewalMs = _self.config.sessionRenewalMs();

          var timeSinceAcqMs = nowMs - session.acquisitionDate;
          var timeSinceRenewalMs = nowMs - session.renewalDate;
          isExpired = timeSinceAcqMs < 0 || timeSinceRenewalMs < 0; // expired if the acquisition or last renewal are in the future

          isExpired = isExpired || timeSinceAcqMs > sessionExpirationMs; // expired if the time since acquisition is more than session Expiration

          isExpired = isExpired || timeSinceRenewalMs > sessionRenewalMs; // expired if the time since last renewal is more than renewal period
        } // renew if acquisitionSpan or renewalSpan has elapsed


        if (isExpired) {
          // update automaticSession so session state has correct id
          _renew(nowMs);
        } else {
          // do not update the cookie more often than cookieUpdateInterval
          if (!_cookieUpdatedTimestamp || nowMs - _cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {
            _setCookie(session, nowMs);
          }
        }
      };
      /**
       *  Record the current state of the automatic session and store it in our cookie string format
       *  into the browser's local storage. This is used to restore the session data when the cookie
       *  expires.
       */


      _self.backup = function () {
        var session = _self.automaticSession;

        _setStorage(session.id, session.acquisitionDate, session.renewalDate);
      };
      /**
       * Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to
       * initialize the automatic session.
       * @returns true if values set otherwise false
       */


      function _initializeAutomaticSession(session, now) {
        var isValid = false;

        var cookieValue = _cookieManager.get(_storageNamePrefix());

        if (cookieValue && isFunction(cookieValue.split)) {
          isValid = _initializeAutomaticSessionWithData(session, cookieValue);
        } else {
          // There's no cookie, but we might have session data in local storage
          // This can happen if the session expired or the user actively deleted the cookie
          // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.
          // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.
          var storageValue = utlGetLocalStorage(_logger, _storageNamePrefix());

          if (storageValue) {
            isValid = _initializeAutomaticSessionWithData(session, storageValue);
          }
        }

        return isValid || !!session.id;
      }
      /**
       * Extract id, acquisitionDate, and renewalDate from an ai_session payload string and
       * use this data to initialize automaticSession.
       *
       * @param {string} sessionData - The string stored in an ai_session cookie or local storage backup
       * @returns true if values set otherwise false
       */


      function _initializeAutomaticSessionWithData(session, sessionData) {
        var isValid = false;
        var sessionReset = ", session will be reset";
        var tokens = sessionData.split("|");

        if (tokens.length >= 2) {
          try {
            var acqMs = +tokens[1] || 0;
            var renewalMs = +tokens[2] || 0;

            if (isNaN(acqMs) || acqMs <= 0) {
              _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, "AI session acquisition date is 0" + sessionReset);
            } else if (isNaN(renewalMs) || renewalMs <= 0) {
              _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, "AI session renewal date is 0" + sessionReset);
            } else if (tokens[0]) {
              // Everything looks valid so set the values
              session.id = tokens[0];
              session.acquisitionDate = acqMs;
              session.renewalDate = renewalMs;
              isValid = true;
            }
          } catch (e) {
            _logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, "Error parsing ai_session value [" + (sessionData || "") + "]" + sessionReset + " - " + getExceptionName(e), {
              exception: dumpObj(e)
            });
          }
        }

        return isValid;
      }

      function _renew(nowMs) {
        var theConfig = _self.config || {};
        var getNewId = (theConfig.getNewId ? theConfig.getNewId() : null) || newId;
        _self.automaticSession.id = getNewId(theConfig.idLength ? theConfig.idLength() : 22);
        _self.automaticSession.acquisitionDate = nowMs;

        _setCookie(_self.automaticSession, nowMs); // If this browser does not support local storage, fire an internal log to keep track of it at this point


        if (!utlCanUseLocalStorage()) {
          _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, "Browser does not support local storage. Session durations will be inaccurate.");
        }
      }

      function _setCookie(session, nowMs) {
        var acq = session.acquisitionDate;
        session.renewalDate = nowMs;
        var config = _self.config;
        var renewalPeriodMs = config.sessionRenewalMs(); // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner
        // Expiring the cookie will cause the session to expire even if the user isn't on the page

        var acqTimeLeftMs = acq + config.sessionExpirationMs() - nowMs;
        var cookie = [session.id, acq, nowMs];
        var maxAgeSec = 0;

        if (acqTimeLeftMs < renewalPeriodMs) {
          maxAgeSec = acqTimeLeftMs / 1000;
        } else {
          maxAgeSec = renewalPeriodMs / 1000;
        }

        var cookieDomain = config.cookieDomain ? config.cookieDomain() : null; // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie
        // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.
        // Depending on the browser, another instance does not inherit this cookie, however, another tab will

        _cookieManager.set(_storageNamePrefix(), cookie.join("|"), config.sessionExpirationMs() > 0 ? maxAgeSec : null, cookieDomain);

        _cookieUpdatedTimestamp = nowMs;
      }

      function _setStorage(guid, acq, renewal) {
        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires
        // Browsers that don't support local storage won't be able to end sessions cleanly from the client
        // The server will notice this and end the sessions itself, with loss of accurate session duration
        utlSetLocalStorage(_logger, _storageNamePrefix(), [guid, acq, renewal].join("|"));
      }
    });
  } // Removed Stub for _SessionManager.prototype.update.
  // Removed Stub for _SessionManager.prototype.backup.


  _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms

  _SessionManager.renewalSpan = 1800000; // 30 minutes in ms

  _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms

  return _SessionManager;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var Application = function () {
  function Application() {}

  return Application;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var Device = function () {
  /**
   * Constructs a new instance of the Device class
   */
  function Device() {
    // don't attempt to fingerprint browsers
    this.id = "browser"; // Device type is a dimension in our data platform
    // Setting it to 'Browser' allows to separate client and server dependencies/exceptions

    this.deviceClass = "Browser";
  }

  return Device;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var Version = "2.7.1";

var Internal = function () {
  /**
   * Constructs a new instance of the internal telemetry data class.
   */
  function Internal(config) {
    this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + "_" : "") + "javascript:" + Version;
  }

  return Internal;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */




function _validateUserInput(id) {
  // Validate:
  // 1. Id is a non-empty string.
  // 2. It does not contain special characters for cookies.
  if (typeof id !== "string" || !id || id.match(/,|;|=| |\|/)) {
    return false;
  }

  return true;
}

var User = function () {
  function User(config, core) {
    /**
     * A flag indicating whether this represents a new user
     */
    this.isNewUser = false;
    /**
     * A flag indicating whether the user cookie has been set
     */

    this.isUserCookieSet = false;

    var _logger = safeGetLogger(core);

    var _cookieManager = safeGetCookieMgr(core);

    var _storageNamePrefix;

    dynamicproto_js(User, this, function (_self) {
      _self.config = config;
      var userCookiePostfix = _self.config.userCookiePostfix && _self.config.userCookiePostfix() ? _self.config.userCookiePostfix() : "";

      _storageNamePrefix = function _storageNamePrefix() {
        return User.userCookieName + userCookiePostfix;
      }; // get userId or create new one if none exists


      var cookie = _cookieManager.get(_storageNamePrefix());

      if (cookie) {
        _self.isNewUser = false;
        var params = cookie.split(User.cookieSeparator);

        if (params.length > 0) {
          _self.id = params[0]; // we already have a cookie

          _self.isUserCookieSet = !!_self.id;
        }
      }

      function _generateNewId() {
        var theConfig = config || {};
        var getNewId = (theConfig.getNewId ? theConfig.getNewId() : null) || newId;
        var id = getNewId(theConfig.idLength ? config.idLength() : 22);
        return id;
      }

      function _generateNewCookie(userId) {
        var acqStr = toISOString(new Date());
        _self.accountAcquisitionDate = acqStr;
        _self.isNewUser = true;
        var newCookie = [userId, acqStr];
        return newCookie;
      }

      function _setUserCookie(cookie) {
        // without expiration, cookies expire at the end of the session
        // set it to 365 days from now
        // 365 * 24 * 60 * 60 = 31536000
        var oneYear = 31536000;
        _self.isUserCookieSet = _cookieManager.set(_storageNamePrefix(), cookie, oneYear);
      }

      if (!_self.id) {
        _self.id = _generateNewId();

        var newCookie = _generateNewCookie(_self.id);

        _setUserCookie(newCookie.join(User.cookieSeparator)); // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.
        // We should respect their wishes and clear ourselves from local storage


        var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + "ai_session" : "ai_session";
        utlRemoveStorage(_logger, name_1);
      } // We still take the account id from the ctor param for backward compatibility.
      // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.


      _self.accountId = config.accountId ? config.accountId() : undefined; // Get the auth user id and account id from the cookie if exists
      // Cookie is in the pattern: <authenticatedId>|<accountId>

      var authCookie = _cookieManager.get(User.authUserCookieName);

      if (authCookie) {
        authCookie = decodeURI(authCookie);
        var authCookieString = authCookie.split(User.cookieSeparator);

        if (authCookieString[0]) {
          _self.authenticatedId = authCookieString[0];
        }

        if (authCookieString.length > 1 && authCookieString[1]) {
          _self.accountId = authCookieString[1];
        }
      }

      _self.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {
        if (storeInCookie === void 0) {
          storeInCookie = false;
        } // Validate inputs to ensure no cookie control characters.


        var isInvalidInput = !_validateUserInput(authenticatedUserId) || accountId && !_validateUserInput(accountId);

        if (isInvalidInput) {
          _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, "Setting auth user context failed. " + "User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.", true);

          return;
        } // Create cookie string.


        _self.authenticatedId = authenticatedUserId;
        var authCookie = _self.authenticatedId;

        if (accountId) {
          _self.accountId = accountId;
          authCookie = [_self.authenticatedId, _self.accountId].join(User.cookieSeparator);
        }

        if (storeInCookie) {
          // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).
          // Encoding the cookie to handle unexpected unicode characters.
          _cookieManager.set(User.authUserCookieName, encodeURI(authCookie));
        }
      };
      /**
       * Clears the authenticated user id and the account id from the user context.
       * @returns {}
       */


      _self.clearAuthenticatedUserContext = function () {
        _self.authenticatedId = null;
        _self.accountId = null;

        _cookieManager.del(User.authUserCookieName);
      };

      _self.update = function (userId) {
        // Optimizations to avoid setting and processing the cookie when not needed
        if (_self.id !== userId || !_self.isUserCookieSet) {
          var user_id = userId ? userId : _generateNewId();

          var user_cookie = _generateNewCookie(user_id);

          _setUserCookie(user_cookie.join(User.cookieSeparator));
        }
      };
    });
  } // Removed Stub for User.prototype.setAuthenticatedUserContext.
  // Removed Stub for User.prototype.clearAuthenticatedUserContext.
  // Removed Stub for User.prototype.update.


  User.cookieSeparator = "|";
  User.userCookieName = "ai_user";
  User.authUserCookieName = "ai_authUser";
  return User;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */
var Location = function () {
  function Location() {}

  return Location;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var TelemetryTrace = function () {
  function TelemetryTrace(id, parentId, name, logger) {
    var _self = this;

    _self.traceID = id || generateW3CId();
    _self.parentID = parentId;
    _self.name = name;
    var location = getLocation();

    if (!name && location && location.pathname) {
      _self.name = location.pathname;
    }

    _self.name = dataSanitizeString(logger, _self.name);
  }

  return TelemetryTrace;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * TelemetryContext.ts
 * @copyright Microsoft 2018
 */










var strExt = "ext";
var strTags = "tags";

function _removeEmpty(target, name) {
  if (target && target[name] && objKeys(target[name]).length === 0) {
    delete target[name];
  }
}

var TelemetryContext = function () {
  function TelemetryContext(core, defaultConfig) {
    var _this = this;

    var logger = core.logger;

    this.appId = function () {
      return null;
    };

    this.getSessionId = function () {
      return null;
    };

    dynamicproto_js(TelemetryContext, this, function (_self) {
      _self.application = new Application();
      _self.internal = new Internal(defaultConfig);

      if (hasWindow()) {
        _self.sessionManager = new _SessionManager(defaultConfig, core);
        _self.device = new Device();
        _self.location = new Location();
        _self.user = new User(defaultConfig, core);
        _self.telemetryTrace = new TelemetryTrace(undefined, undefined, undefined, logger);
        _self.session = new Session();
      }

      _self.getSessionId = function () {
        var session = _self.session;
        var sesId = null; // If customer set session info, apply their context; otherwise apply context automatically generated

        if (session && HelperFuncs_isString(session.id)) {
          sesId = session.id;
        } else {
          // Gets the automatic session if it exists or an empty object
          var autoSession = (_self.sessionManager || {}).automaticSession;
          sesId = autoSession && HelperFuncs_isString(autoSession.id) ? autoSession.id : null;
        }

        return sesId;
      };

      _self.applySessionContext = function (evt, itemCtx) {
        setValue(getSetValue(evt.ext, Extensions.AppExt), "sesId", _self.getSessionId(), HelperFuncs_isString);
      };

      _self.applyOperatingSystemContxt = function (evt, itemCtx) {
        setValue(evt.ext, Extensions.OSExt, _self.os);
      };

      _self.applyApplicationContext = function (evt, itemCtx) {
        var application = _self.application;

        if (application) {
          // evt.ext.app
          var tags = getSetValue(evt, strTags);
          setValue(tags, CtxTagKeys.applicationVersion, application.ver, HelperFuncs_isString);
          setValue(tags, CtxTagKeys.applicationBuild, application.build, HelperFuncs_isString);
        }
      };

      _self.applyDeviceContext = function (evt, itemCtx) {
        var device = _self.device;

        if (device) {
          // evt.ext.device
          var extDevice = getSetValue(getSetValue(evt, strExt), Extensions.DeviceExt);
          setValue(extDevice, "localId", device.id, HelperFuncs_isString);
          setValue(extDevice, "ip", device.ip, HelperFuncs_isString);
          setValue(extDevice, "model", device.model, HelperFuncs_isString);
          setValue(extDevice, "deviceClass", device.deviceClass, HelperFuncs_isString);
        }
      };

      _self.applyInternalContext = function (evt, itemCtx) {
        var internal = _self.internal;

        if (internal) {
          var tags = getSetValue(evt, strTags);
          setValue(tags, CtxTagKeys.internalAgentVersion, internal.agentVersion, HelperFuncs_isString); // not mapped in CS 4.0

          setValue(tags, CtxTagKeys.internalSdkVersion, internal.sdkVersion, HelperFuncs_isString);

          if (evt.baseType === _InternalLogMessage.dataType || evt.baseType === PageView.dataType) {
            setValue(tags, CtxTagKeys.internalSnippet, internal.snippetVer, HelperFuncs_isString);
            setValue(tags, CtxTagKeys.internalSdkSrc, internal.sdkSrc, HelperFuncs_isString);
          }
        }
      };

      _self.applyLocationContext = function (evt, itemCtx) {
        var location = _this.location;

        if (location) {
          setValue(getSetValue(evt, strTags, []), CtxTagKeys.locationIp, location.ip, HelperFuncs_isString);
        }
      };

      _self.applyOperationContext = function (evt, itemCtx) {
        var telemetryTrace = _self.telemetryTrace;

        if (telemetryTrace) {
          var extTrace = getSetValue(getSetValue(evt, strExt), Extensions.TraceExt, {
            traceID: undefined,
            parentID: undefined
          });
          setValue(extTrace, "traceID", telemetryTrace.traceID, HelperFuncs_isString);
          setValue(extTrace, "name", telemetryTrace.name, HelperFuncs_isString);
          setValue(extTrace, "parentID", telemetryTrace.parentID, HelperFuncs_isString);
        }
      };

      _self.applyWebContext = function (evt, itemCtx) {
        var web = _this.web;

        if (web) {
          setValue(getSetValue(evt, strExt), Extensions.WebExt, web);
        }
      };

      _self.applyUserContext = function (evt, itemCtx) {
        var user = _self.user;

        if (user) {
          var tags = getSetValue(evt, strTags, []); // stays in tags

          setValue(tags, CtxTagKeys.userAccountId, user.accountId, HelperFuncs_isString); // CS 4.0

          var extUser = getSetValue(getSetValue(evt, strExt), Extensions.UserExt);
          setValue(extUser, "id", user.id, HelperFuncs_isString);
          setValue(extUser, "authId", user.authenticatedId, HelperFuncs_isString);
        }
      };

      _self.cleanUp = function (evt, itemCtx) {
        var ext = evt.ext;

        if (ext) {
          _removeEmpty(ext, Extensions.DeviceExt);

          _removeEmpty(ext, Extensions.UserExt);

          _removeEmpty(ext, Extensions.WebExt);

          _removeEmpty(ext, Extensions.OSExt);

          _removeEmpty(ext, Extensions.AppExt);

          _removeEmpty(ext, Extensions.TraceExt);
        }
      };
    });
  } // Removed Stub for TelemetryContext.prototype.applySessionContext.
  // Removed Stub for TelemetryContext.prototype.applyOperatingSystemContxt.
  // Removed Stub for TelemetryContext.prototype.applyApplicationContext.
  // Removed Stub for TelemetryContext.prototype.applyDeviceContext.
  // Removed Stub for TelemetryContext.prototype.applyInternalContext.
  // Removed Stub for TelemetryContext.prototype.applyLocationContext.
  // Removed Stub for TelemetryContext.prototype.applyOperationContext.
  // Removed Stub for TelemetryContext.prototype.applyWebContext.
  // Removed Stub for TelemetryContext.prototype.applyUserContext.
  // Removed Stub for TelemetryContext.prototype.cleanUp.


  return TelemetryContext;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js
/*
 * Application Insights JavaScript SDK - Properties Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */

/**
 * PropertiesPlugin.ts
 * @copyright Microsoft 2018
 */






var PropertiesPlugin = function (_super) {
  __extendsFn(PropertiesPlugin, _super);

  function PropertiesPlugin() {
    var _this = _super.call(this) || this;

    _this.priority = 110;
    _this.identifier = PropertiesPluginIdentifier;

    var _breezeChannel; // optional. If exists, grab appId from it


    var _extensionConfig;

    dynamicproto_js(PropertiesPlugin, _this, function (_self, _base) {
      _self.initialize = function (config, core, extensions, pluginChain) {
        _base.initialize(config, core, extensions, pluginChain);

        var ctx = _self._getTelCtx();

        var identifier = _self.identifier;
        var defaultConfig = PropertiesPlugin.getDefaultConfig();
        _extensionConfig = _extensionConfig || {};
        objForEachKey(defaultConfig, function (field, value) {
          _extensionConfig[field] = function () {
            return ctx.getConfig(identifier, field, value());
          };
        });
        _self.context = new TelemetryContext(core, _extensionConfig);
        _breezeChannel = getExtensionByName(extensions, BreezeChannelIdentifier);

        _self.context.appId = function () {
          return _breezeChannel ? _breezeChannel["_appId"] : null;
        }; // Test hook to allow accessing the internal values -- explicitly not defined as an available property on the class


        _self["_extConfig"] = _extensionConfig;
      };
      /**
       * Add Part A fields to the event
       * @param event The event that needs to be processed
       */


      _self.processTelemetry = function (event, itemCtx) {
        if (isNullOrUndefined(event)) {// TODO(barustum): throw an internal event once we have support for internal logging
        } else {
          itemCtx = _self._getTelCtx(itemCtx); // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.

          if (event.name === PageView.envelopeType) {
            itemCtx.diagLog().resetInternalMessageCount();
          }

          var theContext = _self.context || {};

          if (theContext.session) {
            // If customer did not provide custom session id update the session manager
            if (typeof _self.context.session.id !== "string" && theContext.sessionManager) {
              theContext.sessionManager.update();
            }
          }

          var userCtx = theContext.user;

          if (userCtx && !userCtx.isUserCookieSet) {
            userCtx.update(theContext.user.id);
          }

          _processTelemetryInternal(event, itemCtx);

          if (userCtx && userCtx.isNewUser) {
            userCtx.isNewUser = false;
            var message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, (getNavigator() || {}).userAgent || "");
            itemCtx.diagLog().logInternalMessage(LoggingSeverity.CRITICAL, message);
          }

          _self.processNext(event, itemCtx);
        }
      };

      function _processTelemetryInternal(evt, itemCtx) {
        // Set Part A fields
        getSetValue(evt, "tags", []);
        getSetValue(evt, "ext", {});
        var ctx = _self.context;
        ctx.applySessionContext(evt, itemCtx);
        ctx.applyApplicationContext(evt, itemCtx);
        ctx.applyDeviceContext(evt, itemCtx);
        ctx.applyOperationContext(evt, itemCtx);
        ctx.applyUserContext(evt, itemCtx);
        ctx.applyOperatingSystemContxt(evt, itemCtx);
        ctx.applyWebContext(evt, itemCtx);
        ctx.applyLocationContext(evt, itemCtx); // legacy tags

        ctx.applyInternalContext(evt, itemCtx); // legacy tags

        ctx.cleanUp(evt, itemCtx);
      }
    });
    return _this;
  }

  PropertiesPlugin.getDefaultConfig = function () {
    var defaultConfig = {
      instrumentationKey: function instrumentationKey() {
        return undefined;
      },
      accountId: function accountId() {
        return null;
      },
      sessionRenewalMs: function sessionRenewalMs() {
        return 30 * 60 * 1000;
      },
      samplingPercentage: function samplingPercentage() {
        return 100;
      },
      sessionExpirationMs: function sessionExpirationMs() {
        return 24 * 60 * 60 * 1000;
      },
      cookieDomain: function cookieDomain() {
        return null;
      },
      sdkExtension: function sdkExtension() {
        return null;
      },
      isBrowserLinkTrackingEnabled: function isBrowserLinkTrackingEnabled() {
        return false;
      },
      appId: function appId() {
        return null;
      },
      getSessionId: function getSessionId() {
        return null;
      },
      namePrefix: function namePrefix() {
        return undefined;
      },
      sessionCookiePostfix: function sessionCookiePostfix() {
        return undefined;
      },
      userCookiePostfix: function userCookiePostfix() {
        return undefined;
      },
      idLength: function idLength() {
        return 22;
      },
      getNewId: function getNewId() {
        return null;
      }
    };
    return defaultConfig;
  }; // Removed Stub for PropertiesPlugin.prototype.initialize.
  // Removed Stub for PropertiesPlugin.prototype.processTelemetry.


  return PropertiesPlugin;
}(BaseTelemetryPlugin);

/* harmony default export */ var dist_esm_PropertiesPlugin = (PropertiesPlugin);
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/InstrumentHooks.js
/*
 * Application Insights JavaScript SDK - Core, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var aiInstrumentHooks = "_aiHooks";
var cbNames = ["req", "rsp", "hkErr", "fnErr"];
/**
 * Constant string defined to support minimization
 * @ignore
 */

var InstrumentHooks_str_Proto = "__proto__";
/**
 * Constant string defined to support minimization
 * @ignore
 */

var strConstructor = "constructor";
/** @ignore */

function _arrLoop(arr, fn) {
  if (arr) {
    for (var lp = 0; lp < arr.length; lp++) {
      if (fn(arr[lp], lp)) {
        break;
      }
    }
  }
}
/** @ignore */


function _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {
  if (type >= 0
  /* Request */
  && type <= 2
  /* HookError */
  ) {
    _arrLoop(hooks, function (hook, idx) {
      var cbks = hook.cbks;
      var cb = cbks[cbNames[type]];

      if (cb) {
        // Set the specific hook context implementation using a lazy creation pattern
        callDetails.ctx = function () {
          var ctx = hookCtx[idx] = hookCtx[idx] || {};
          return ctx;
        };

        try {
          cb.apply(callDetails.inst, cbArgs);
        } catch (err) {
          var orgEx = callDetails.err;

          try {
            // Report Hook error via the callback
            var hookErrorCb = cbks[cbNames[2
            /* HookError */
            ]];

            if (hookErrorCb) {
              callDetails.err = err;
              hookErrorCb.apply(callDetails.inst, cbArgs);
            }
          } catch (e) {// Not much we can do here -- swallowing the exception to avoid crashing the hosting app
          } finally {
            // restore the original exception (if any)
            callDetails.err = orgEx;
          }
        }
      }
    });
  }
}
/** @ignore */


function _createFunctionHook(aiHook) {
  // Define a temporary method that queues-up a the real method call
  return function () {
    var funcThis = this; // Capture the original arguments passed to the method

    var orgArgs = arguments;
    var hooks = aiHook.h;
    var funcArgs = {
      name: aiHook.n,
      inst: funcThis,
      ctx: null,
      set: _replaceArg
    };
    var hookCtx = [];

    var cbArgs = _createArgs([funcArgs], orgArgs);

    function _createArgs(target, theArgs) {
      _arrLoop(theArgs, function (arg) {
        target.push(arg);
      });

      return target;
    }

    function _replaceArg(idx, value) {
      orgArgs = _createArgs([], orgArgs);
      orgArgs[idx] = value;
      cbArgs = _createArgs([funcArgs], orgArgs);
    } // Call the pre-request hooks


    _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0
    /* Request */
    ); // Call the original function was called


    var theFunc = aiHook.f;

    try {
      funcArgs.rslt = theFunc.apply(funcThis, orgArgs);
    } catch (err) {
      // Report the request callback
      funcArgs.err = err;

      _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3
      /* FunctionError */
      ); // rethrow the original exception so anyone listening for it can catch the exception


      throw err;
    } // Call the post-request hooks


    _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1
    /* Response */
    );

    return funcArgs.rslt;
  };
}
/**
 * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)
 * @ignore
 */


var InstrumentHooks_objGetPrototypeOf = Object["getPrototypeOf"];
/**
 * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.
 * @ignore
 */

function InstrumentHooks_getObjProto(target) {
  if (target) {
    // This method doesn't existing in older browsers (e.g. IE8)
    if (InstrumentHooks_objGetPrototypeOf) {
      return InstrumentHooks_objGetPrototypeOf(target);
    } // target[Constructor] May break if the constructor has been changed or removed


    var newProto = target[InstrumentHooks_str_Proto] || target[Constants_strShimPrototype] || target[strConstructor];

    if (newProto) {
      return newProto;
    }
  }

  return null;
}
/** @ignore */


function _getOwner(target, name, checkPrototype) {
  var owner = null;

  if (target) {
    if (HelperFuncs_hasOwnProperty(target, name)) {
      owner = target;
    } else if (checkPrototype) {
      owner = _getOwner(InstrumentHooks_getObjProto(target), name, false);
    }
  }

  return owner;
}
/**
 * Intercept the named prototype functions for the target class / object
 * @param target - The target object
 * @param funcName - The function name
 * @param callbacks - The callbacks to configure and call whenever the function is called
 */


function InstrumentProto(target, funcName, callbacks) {
  if (target) {
    return InstrumentFunc(target[Constants_strShimPrototype], funcName, callbacks, false);
  }

  return null;
}
/**
 * Intercept the named prototype functions for the target class / object
 * @param target - The target object
 * @param funcNames - The function names to intercept and call
 * @param callbacks - The callbacks to configure and call whenever the function is called
 */

function InstrumentProtos(target, funcNames, callbacks) {
  if (target) {
    return InstrumentFuncs(target[strShimPrototype], funcNames, callbacks, false);
  }

  return null;
}
/**
 * Intercept the named prototype functions for the target class / object
 * @param target - The target object
 * @param funcName - The function name
 * @param callbacks - The callbacks to configure and call whenever the function is called
 * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function
 */

function InstrumentFunc(target, funcName, callbacks, checkPrototype) {
  if (checkPrototype === void 0) {
    checkPrototype = true;
  }

  if (target && funcName && callbacks) {
    var owner = _getOwner(target, funcName, checkPrototype);

    if (owner) {
      var fn = owner[funcName];

      if (typeof fn === Constants_strShimFunction) {
        var aiHook_1 = fn[aiInstrumentHooks];

        if (!aiHook_1) {
          // Only hook the function once
          aiHook_1 = {
            i: 0,
            n: funcName,
            f: fn,
            h: []
          }; // Override (hook) the original function

          var newFunc = _createFunctionHook(aiHook_1);

          newFunc[aiInstrumentHooks] = aiHook_1; // Tag and store the function hooks

          owner[funcName] = newFunc;
        }

        var theHook = {
          // tslint:disable:object-literal-shorthand
          id: aiHook_1.i,
          cbks: callbacks,
          rm: function rm() {
            // DO NOT Use () => { shorthand for the function as the this gets replaced
            // with the outer this and not the this for theHook instance.
            var id = this.id;

            _arrLoop(aiHook_1.h, function (hook, idx) {
              if (hook.id === id) {
                aiHook_1.h.splice(idx, 1);
                return 1;
              }
            });
          } // tslint:enable:object-literal-shorthand

        };
        aiHook_1.i++;
        aiHook_1.h.push(theHook);
        return theHook;
      }
    }
  }

  return null;
}
/**
 * Intercept the named functions for the target class / object
 * @param target - The target object
 * @param funcNames - The function names to intercept and call
 * @param callbacks - The callbacks to configure and call whenever the function is called
 * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function
 */

function InstrumentFuncs(target, funcNames, callbacks, checkPrototype) {
  if (checkPrototype === void 0) {
    checkPrototype = true;
  }

  var hooks = null;

  _arrLoop(funcNames, function (funcName) {
    var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype);

    if (hook) {
      if (!hooks) {
        hooks = [];
      }

      hooks.push(hook);
    }
  });

  return hooks;
}
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js
/*
 * Application Insights JavaScript SDK - Dependencies Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */



var ajaxRecord_strProperties = "properties";
/** @ignore */

function _calcPerfDuration(resourceEntry, start, end) {
  var result = 0;
  var from = resourceEntry[start];
  var to = resourceEntry[end];

  if (from && to) {
    result = dateTimeUtilsDuration(from, to);
  }

  return result;
}
/** @ignore */


function _setPerfDuration(props, name, resourceEntry, start, end) {
  var result = 0;

  var value = _calcPerfDuration(resourceEntry, start, end);

  if (value) {
    result = _setPerfValue(props, name, msToTimeSpan(value));
  }

  return result;
}
/** @ignore */


function _setPerfValue(props, name, value) {
  var strPerf = "ajaxPerf";
  var result = 0;

  if (props && name && value) {
    var perfData = props[strPerf] = props[strPerf] || {};
    perfData[name] = value;
    result = 1;
  }

  return result;
}
/** @ignore */


function _populatePerfData(ajaxData, dependency) {
  /*
  * https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API
  *  | -startTime
  *  | -redirectStart
  *  |            | -redirectEnd
  *  |            | | -fetchStart
  *  |            | |   | -domainLookupStart
  *  |            | |   |                |- domainLookupEnd
  *  |            | |   |                | | -connectStart
  *  |            | |   |                | |  | -secureConnectionStart
  *  |            | |   |                | |  |        | -connectEnd
  *  |            | |   |                | |  |        | | -requestStart
  *  |            | |   |                | |  |        | |           | | -responseStart
  *  |            | |   |                | |  |        | |           | |            | | -responseEnd
  *  +------------+-+---+----------------+-+--+--------+-+-----------+-+------------+-+
  *  |--redirect--| |---|--domainLookup--| |--connect--| |--request--| |--response--| |
  *  |-------------------networkConnect----------------|
  *  |                                                   |---------sentRequest--------|
  *  |------------------------------------perfTotal-----------------------------------|
  */
  var resourceEntry = ajaxData.perfTiming;
  var props = dependency[ajaxRecord_strProperties] || {};
  var propsSet = 0;
  var strName = "name";
  var strStart = "Start";
  var strEnd = "End";
  var strDomainLookup = "domainLookup";
  var strConnect = "connect";
  var strRedirect = "redirect";
  var strRequest = "request";
  var strResponse = "response";
  var strDuration = "duration";
  var strStartTime = "startTime";
  var strDomainLookupStart = strDomainLookup + strStart;
  var strDomainLookupEnd = strDomainLookup + strEnd;
  var strConnectStart = strConnect + strStart;
  var strConnectEnd = strConnect + strEnd;
  var strRequestStart = strRequest + strStart;
  var strRequestEnd = strRequest + strEnd;
  var strResponseStart = strResponse + strStart;
  var strResponseEnd = strResponse + strEnd;
  var strRedirectStart = strRedirect + strStart;
  var strRedirectEnd = strRedirect = strEnd;
  var strTransferSize = "transferSize";
  var strEncodedBodySize = "encodedBodySize";
  var strDecodedBodySize = "decodedBodySize";
  var strServerTiming = "serverTiming";

  if (resourceEntry) {
    // redirect
    propsSet |= _setPerfDuration(props, strRedirect, resourceEntry, strRedirectStart, strRedirectEnd); // domainLookup

    propsSet |= _setPerfDuration(props, strDomainLookup, resourceEntry, strDomainLookupStart, strDomainLookupEnd); // connect

    propsSet |= _setPerfDuration(props, strConnect, resourceEntry, strConnectStart, strConnectEnd); // request

    propsSet |= _setPerfDuration(props, strRequest, resourceEntry, strRequestStart, strRequestEnd); // response

    propsSet |= _setPerfDuration(props, strResponse, resourceEntry, strResponseStart, strResponseEnd); // Network connection time

    propsSet |= _setPerfDuration(props, "networkConnect", resourceEntry, strStartTime, strConnectEnd); // Sent Request

    propsSet |= _setPerfDuration(props, "sentRequest", resourceEntry, strRequestStart, strResponseEnd); // PerfTotal / Duration

    var duration = resourceEntry[strDuration];

    if (!duration) {
      duration = _calcPerfDuration(resourceEntry, strStartTime, strResponseEnd) || 0;
    }

    propsSet |= _setPerfValue(props, strDuration, duration);
    propsSet |= _setPerfValue(props, "perfTotal", duration);
    var serverTiming = resourceEntry[strServerTiming];

    if (serverTiming) {
      var server_1 = {};
      arrForEach(serverTiming, function (value, idx) {
        var name = normalizeJsName(value[strName] || "" + idx);
        var newValue = server_1[name] || {};
        objForEachKey(value, function (key, val) {
          if (key !== strName && HelperFuncs_isString(val) || isNumber(val)) {
            if (newValue[key]) {
              val = newValue[key] + ";" + val;
            }

            if (val || !HelperFuncs_isString(val)) {
              // Only set the value if it has a value and it's not an empty string
              newValue[key] = val;
            }
          }
        });
        server_1[name] = newValue;
      });
      propsSet |= _setPerfValue(props, strServerTiming, server_1);
    }

    propsSet |= _setPerfValue(props, strTransferSize, resourceEntry[strTransferSize]);
    propsSet |= _setPerfValue(props, strEncodedBodySize, resourceEntry[strEncodedBodySize]);
    propsSet |= _setPerfValue(props, strDecodedBodySize, resourceEntry[strDecodedBodySize]);
  } else {
    if (ajaxData.perfMark) {
      propsSet |= _setPerfValue(props, "missing", ajaxData.perfAttempts);
    }
  }

  if (propsSet) {
    dependency[ajaxRecord_strProperties] = props;
  }
}

var XHRMonitoringState = function () {
  function XHRMonitoringState() {
    var self = this;
    self.openDone = false;
    self.setRequestHeaderDone = false;
    self.sendDone = false;
    self.abortDone = false; // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>

    self.stateChangeAttached = false;
  }

  return XHRMonitoringState;
}();



var ajaxRecord = function () {
  function ajaxRecord(traceID, spanID, logger) {
    var self = this;
    var _logger = logger;
    var strResponseText = "responseText"; // Assigning the initial/default values within the constructor to avoid typescript from creating a bunch of
    // this.XXXX = null

    self.perfMark = null;
    self.completed = false;
    self.requestHeadersSize = null;
    self.requestHeaders = null;
    self.responseReceivingDuration = null;
    self.callbackDuration = null;
    self.ajaxTotalDuration = null;
    self.aborted = 0;
    self.pageUrl = null;
    self.requestUrl = null;
    self.requestSize = 0;
    self.method = null;
    self.status = null;
    self.requestSentTime = null;
    self.responseStartedTime = null;
    self.responseFinishedTime = null;
    self.callbackFinishedTime = null;
    self.endTime = null;
    self.xhrMonitoringState = new XHRMonitoringState();
    self.clientFailure = 0;
    self.traceID = traceID;
    self.spanID = spanID;
    dynamicproto_js(ajaxRecord, self, function (self) {
      self.getAbsoluteUrl = function () {
        return self.requestUrl ? urlGetAbsoluteUrl(self.requestUrl) : null;
      };

      self.getPathName = function () {
        return self.requestUrl ? dataSanitizeUrl(_logger, urlGetCompleteUrl(self.method, self.requestUrl)) : null;
      };

      self.CreateTrackItem = function (ajaxType, enableRequestHeaderTracking, getResponse) {
        var _a; // round to 3 decimal points


        self.ajaxTotalDuration = Math.round(dateTimeUtilsDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;

        if (self.ajaxTotalDuration < 0) {
          return null;
        }

        var dependency = (_a = {
          id: "|" + self.traceID + "." + self.spanID,
          target: self.getAbsoluteUrl(),
          name: self.getPathName(),
          type: ajaxType,
          startTime: null,
          duration: self.ajaxTotalDuration,
          success: +self.status >= 200 && +self.status < 400,
          responseCode: +self.status,
          method: self.method
        }, _a[ajaxRecord_strProperties] = {
          HttpMethod: self.method
        }, _a);

        if (self.requestSentTime) {
          // Set the correct dependency start time
          dependency.startTime = new Date();
          dependency.startTime.setTime(self.requestSentTime);
        } // Add Ajax perf details if available


        _populatePerfData(self, dependency);

        if (enableRequestHeaderTracking) {
          if (objKeys(self.requestHeaders).length > 0) {
            dependency[ajaxRecord_strProperties] = dependency[ajaxRecord_strProperties] || {};
            dependency[ajaxRecord_strProperties].requestHeaders = self.requestHeaders;
          }
        }

        if (getResponse) {
          var response = getResponse();

          if (response) {
            // enrich dependency target with correlation context from the server
            var correlationContext = response.correlationContext;

            if (correlationContext) {
              dependency.correlationContext =
              /* dependency.target + " | " + */
              correlationContext;
            }

            if (response.headerMap) {
              if (objKeys(response.headerMap).length > 0) {
                dependency[ajaxRecord_strProperties] = dependency[ajaxRecord_strProperties] || {};
                dependency[ajaxRecord_strProperties].responseHeaders = response.headerMap;
              }
            }

            if (self.errorStatusText && self.status >= 400) {
              var responseType = response.type;
              dependency[ajaxRecord_strProperties] = dependency[ajaxRecord_strProperties] || {};

              if (responseType === "" || responseType === "text") {
                dependency[ajaxRecord_strProperties][strResponseText] = response[strResponseText] ? response.statusText + " - " + response[strResponseText] : response.statusText;
              }

              if (responseType === "json") {
                dependency[ajaxRecord_strProperties][strResponseText] = response.response ? response.statusText + " - " + JSON.stringify(response.response) : response.statusText;
              }
            }
          }
        }

        return dependency;
      };
    });
  } // Removed Stub for ajaxRecord.prototype.getAbsoluteUrl.
  // Removed Stub for ajaxRecord.prototype.getPathName.
  // Removed Stub for ajaxRecord.prototype.CreateTrackItem.


  return ajaxRecord;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/TraceParent.js
/*
 * Application Insights JavaScript SDK - Dependencies Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var Traceparent = function () {
  function Traceparent(traceId, spanId) {
    var self = this;
    self.traceFlag = Traceparent.DEFAULT_TRACE_FLAG;
    self.version = Traceparent.DEFAULT_VERSION;

    if (traceId && Traceparent.isValidTraceId(traceId)) {
      self.traceId = traceId;
    } else {
      self.traceId = generateW3CId();
    }

    if (spanId && Traceparent.isValidSpanId(spanId)) {
      self.spanId = spanId;
    } else {
      self.spanId = generateW3CId().substr(0, 16);
    }
  }

  Traceparent.isValidTraceId = function (id) {
    return id.match(/^[0-9a-f]{32}$/) && id !== "00000000000000000000000000000000";
  };

  Traceparent.isValidSpanId = function (id) {
    return id.match(/^[0-9a-f]{16}$/) && id !== "0000000000000000";
  };

  Traceparent.prototype.toString = function () {
    var self = this;
    return self.version + "-" + self.traceId + "-" + self.spanId + "-" + self.traceFlag;
  };

  Traceparent.DEFAULT_TRACE_FLAG = "01";
  Traceparent.DEFAULT_VERSION = "00";
  return Traceparent;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajax.js
/*
 * Application Insights JavaScript SDK - Dependencies Plugin, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






var AJAX_MONITOR_PREFIX = "ai.ajxmn.";
var strDiagLog = "diagLog";
var strAjaxData = "ajaxData";
var strThrowInternal = "throwInternal";
var strFetch = "fetch"; // Using a global value so that to handle same iKey with multiple app insights instances (mostly for testing)

var _markCount = 0;
/** @Ignore */

function _supportsFetch() {
  var _global = getGlobal();

  if (!_global || isNullOrUndefined(_global.Request) || isNullOrUndefined(_global.Request[Constants_strShimPrototype]) || isNullOrUndefined(_global[strFetch])) {
    return null;
  }

  return _global[strFetch];
}
/**
 * Determines whether ajax monitoring can be enabled on this document
 * @returns True if Ajax monitoring is supported on this page, otherwise false
 * @ignore
 */


function _supportsAjaxMonitoring(ajaxMonitorInstance) {
  var result = false;

  if (isXhrSupported()) {
    var proto = XMLHttpRequest[Constants_strShimPrototype];
    result = !isNullOrUndefined(proto) && !isNullOrUndefined(proto.open) && // eslint-disable-line security/detect-non-literal-fs-filename -- false positive
    !isNullOrUndefined(proto.send) && !isNullOrUndefined(proto.abort);
  }

  var ieVer = getIEVersion();

  if (ieVer && ieVer < 9) {
    result = false;
  }

  if (result) {
    // Disable if the XmlHttpRequest can't be extended or hooked
    try {
      var xhr = new XMLHttpRequest();
      xhr[strAjaxData] = {}; // Check that we can update the prototype

      var theOpen = XMLHttpRequest[Constants_strShimPrototype].open;
      XMLHttpRequest[Constants_strShimPrototype].open = theOpen;
    } catch (e) {
      // We can't decorate the xhr object so disable monitoring
      result = false;

      _throwInternalCritical(ajaxMonitorInstance, _InternalMessageId.FailedMonitorAjaxOpen, "Failed to enable XMLHttpRequest monitoring, extension is not supported", {
        exception: dumpObj(e)
      });
    }
  }

  return result;
}
/** @Ignore */


function _getFailedAjaxDiagnosticsMessage(xhr) {
  var result = "";

  try {
    if (!isNullOrUndefined(xhr) && !isNullOrUndefined(xhr[strAjaxData]) && !isNullOrUndefined(xhr[strAjaxData].requestUrl)) {
      result += "(url: '" + xhr[strAjaxData].requestUrl + "')";
    }
  } catch (e) {// eslint-disable-next-line no-empty
  }

  return result;
}
/** @ignore */


function _throwInternalCritical(ajaxMonitorInstance, msgId, message, properties, isUserAct) {
  ajaxMonitorInstance[strDiagLog]()[strThrowInternal](LoggingSeverity.CRITICAL, msgId, message, properties, isUserAct);
}
/** @ignore */


function _throwInternalWarning(ajaxMonitorInstance, msgId, message, properties, isUserAct) {
  ajaxMonitorInstance[strDiagLog]()[strThrowInternal](LoggingSeverity.WARNING, msgId, message, properties, isUserAct);
}
/** @Ignore */


function _createErrorCallbackFunc(ajaxMonitorInstance, internalMessage, message) {
  // tslint:disable-next-line
  return function (args) {
    _throwInternalCritical(ajaxMonitorInstance, internalMessage, message, {
      ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(args.inst),
      exception: dumpObj(args.err)
    });
  };
}

function _indexOf(value, match) {
  if (value && match) {
    return value.indexOf(match);
  }

  return -1;
}

var AjaxMonitor = function (_super) {
  __extendsFn(AjaxMonitor, _super);

  function AjaxMonitor() {
    var _this = _super.call(this) || this;

    _this.identifier = AjaxMonitor.identifier;
    _this.priority = 120;
    var strTrackDependencyDataInternal = "trackDependencyDataInternal"; // Using string to help with minification

    var location = getLocation();
    var _fetchInitialized = false; // fetch monitoring initialized

    var _xhrInitialized = false; // XHR monitoring initialized

    var _currentWindowHost = location && location.host && location.host.toLowerCase();

    var _config = AjaxMonitor.getEmptyConfig();

    var _enableRequestHeaderTracking = false;
    var _enableAjaxErrorStatusText = false;
    var _trackAjaxAttempts = 0;

    var _context;

    var _isUsingW3CHeaders;

    var _isUsingAIHeaders;

    var _markPrefix;

    var _enableAjaxPerfTracking = false;
    var _maxAjaxCallsPerView = 0;
    var _enableResponseHeaderTracking = false;
    var _hooks = [];
    var _disabledUrls = {};

    var _excludeRequestFromAutoTrackingPatterns;

    var _addRequestContext;

    dynamicproto_js(AjaxMonitor, _this, function (_self, base) {
      _self.initialize = function (config, core, extensions, pluginChain) {
        if (!_self.isInitialized()) {
          base.initialize(config, core, extensions, pluginChain);

          var ctx_1 = _self._getTelCtx();

          var defaultConfig = AjaxMonitor.getDefaultConfig();
          objForEachKey(defaultConfig, function (field, value) {
            _config[field] = ctx_1.getConfig(AjaxMonitor.identifier, field, value);
          });
          var distributedTracingMode = _config.distributedTracingMode;
          _enableRequestHeaderTracking = _config.enableRequestHeaderTracking;
          _enableAjaxErrorStatusText = _config.enableAjaxErrorStatusText;
          _enableAjaxPerfTracking = _config.enableAjaxPerfTracking;
          _maxAjaxCallsPerView = _config.maxAjaxCallsPerView;
          _enableResponseHeaderTracking = _config.enableResponseHeaderTracking;
          _excludeRequestFromAutoTrackingPatterns = _config.excludeRequestFromAutoTrackingPatterns;
          _addRequestContext = _config.addRequestContext;
          _isUsingAIHeaders = distributedTracingMode === DistributedTracingModes.AI || distributedTracingMode === DistributedTracingModes.AI_AND_W3C;
          _isUsingW3CHeaders = distributedTracingMode === DistributedTracingModes.AI_AND_W3C || distributedTracingMode === DistributedTracingModes.W3C;

          if (_enableAjaxPerfTracking) {
            var iKey = config.instrumentationKey || "unkwn";

            if (iKey.length > 5) {
              _markPrefix = AJAX_MONITOR_PREFIX + iKey.substring(iKey.length - 5) + ".";
            } else {
              _markPrefix = AJAX_MONITOR_PREFIX + iKey + ".";
            }
          }

          if (_config.disableAjaxTracking === false) {
            _instrumentXhr();
          }

          _instrumentFetch();

          if (extensions.length > 0 && extensions) {
            var propExt = void 0,
                extIx = 0;

            while (!propExt && extIx < extensions.length) {
              if (extensions[extIx] && extensions[extIx].identifier === PropertiesPluginIdentifier) {
                propExt = extensions[extIx];
              }

              extIx++;
            }

            if (propExt) {
              _context = propExt.context; // we could move IPropertiesPlugin to common as well
            }
          }
        }
      };

      _self.teardown = function () {
        // Remove all instrumentation hooks
        arrForEach(_hooks, function (fn) {
          fn.rm();
        });
        _hooks = [];
        _fetchInitialized = false;
        _xhrInitialized = false;

        _self.setInitialized(false);
      };

      _self.trackDependencyData = function (dependency, properties) {
        _self[strTrackDependencyDataInternal](dependency, properties);
      };

      _self.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {
        // Test Hook to allow the overriding of the location host
        var currentWindowHost = _self["_currentWindowHost"] || _currentWindowHost;

        if (input) {
          // Fetch
          if (CorrelationIdHelper.canIncludeCorrelationHeader(_config, ajaxData.getAbsoluteUrl(), currentWindowHost)) {
            if (!init) {
              init = {};
            } // init headers override original request headers
            // so, if they exist use only them, otherwise use request's because they should have been applied in the first place
            // not using original request headers will result in them being lost


            init.headers = new Headers(init.headers || (input instanceof Request ? input.headers || {} : {}));

            if (_isUsingAIHeaders) {
              var id = "|" + ajaxData.traceID + "." + ajaxData.spanID;
              init.headers.set(RequestHeaders.requestIdHeader, id);

              if (_enableRequestHeaderTracking) {
                ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;
              }
            }

            var appId = _config.appId || _context && _context.appId();

            if (appId) {
              init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);

              if (_enableRequestHeaderTracking) {
                ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;
              }
            }

            if (_isUsingW3CHeaders) {
              var traceparent = new Traceparent(ajaxData.traceID, ajaxData.spanID);
              init.headers.set(RequestHeaders.traceParentHeader, traceparent.toString());

              if (_enableRequestHeaderTracking) {
                ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();
              }
            }
          }

          return init;
        } else if (xhr) {
          // XHR
          if (CorrelationIdHelper.canIncludeCorrelationHeader(_config, ajaxData.getAbsoluteUrl(), currentWindowHost)) {
            if (_isUsingAIHeaders) {
              var id = "|" + ajaxData.traceID + "." + ajaxData.spanID;
              xhr.setRequestHeader(RequestHeaders.requestIdHeader, id);

              if (_enableRequestHeaderTracking) {
                ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;
              }
            }

            var appId = _config.appId || _context && _context.appId();

            if (appId) {
              xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);

              if (_enableRequestHeaderTracking) {
                ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;
              }
            }

            if (_isUsingW3CHeaders) {
              var traceparent = new Traceparent(ajaxData.traceID, ajaxData.spanID);
              xhr.setRequestHeader(RequestHeaders.traceParentHeader, traceparent.toString());

              if (_enableRequestHeaderTracking) {
                ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();
              }
            }
          }

          return xhr;
        }

        return undefined;
      };

      _self[strTrackDependencyDataInternal] = function (dependency, properties, systemProperties) {
        if (_maxAjaxCallsPerView === -1 || _trackAjaxAttempts < _maxAjaxCallsPerView) {
          // Hack since expected format in w3c mode is |abc.def.
          // Non-w3c format is |abc.def
          // @todo Remove if better solution is available, e.g. handle in portal
          if ((_config.distributedTracingMode === DistributedTracingModes.W3C || _config.distributedTracingMode === DistributedTracingModes.AI_AND_W3C) && typeof dependency.id === "string" && dependency.id[dependency.id.length - 1] !== ".") {
            dependency.id += ".";
          }

          if (isNullOrUndefined(dependency.startTime)) {
            dependency.startTime = new Date();
          }

          var item = TelemetryItemCreator.create(dependency, RemoteDependencyData_RemoteDependencyData.dataType, RemoteDependencyData_RemoteDependencyData.envelopeType, _self[strDiagLog](), properties, systemProperties);

          _self.core.track(item);
        } else if (_trackAjaxAttempts === _maxAjaxCallsPerView) {
          _throwInternalCritical(_self, _InternalMessageId.MaxAjaxPerPVExceeded, "Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.", true);
        }

        ++_trackAjaxAttempts;
      }; // discard the header if it's defined as ignoreHeaders in ICorrelationConfig


      function _canIncludeHeaders(header) {
        var rlt = true;

        if (header || _config.ignoreHeaders) {
          arrForEach(_config.ignoreHeaders, function (key) {
            if (key.toLowerCase() === header.toLowerCase()) {
              rlt = false;
              return -1;
            }
          });
        }

        return rlt;
      } // Fetch Stuff


      function _instrumentFetch() {
        var fetch = _supportsFetch();

        if (!fetch) {
          return;
        }

        var global = getGlobal();
        var isPolyfill = fetch.polyfill;

        if (_config.disableFetchTracking === false) {
          _hooks.push(InstrumentFunc(global, strFetch, {
            // Add request hook
            req: function req(callDetails, input, init) {
              var fetchData;

              if (_fetchInitialized && !_isDisabledRequest(null, input, init) && // If we have a polyfil and XHR instrumented then let XHR report otherwise we get duplicates
              !(isPolyfill && _xhrInitialized)) {
                var ctx = callDetails.ctx();
                fetchData = _createFetchRecord(input, init);

                var newInit = _self.includeCorrelationHeaders(fetchData, input, init);

                if (newInit !== init) {
                  callDetails.set(1, newInit);
                }

                ctx.data = fetchData;
              }
            },
            rsp: function rsp(callDetails, input) {
              var fetchData = callDetails.ctx().data;

              if (fetchData) {
                // Replace the result with the new promise from this code
                callDetails.rslt = callDetails.rslt.then(function (response) {
                  _reportFetchMetrics(callDetails, (response || {}).status, input, response, fetchData, function () {
                    var ajaxResponse = {
                      statusText: response.statusText,
                      headerMap: null,
                      correlationContext: _getFetchCorrelationContext(response)
                    };

                    if (_enableResponseHeaderTracking) {
                      var responseHeaderMap_1 = {};
                      response.headers.forEach(function (value, name) {
                        if (_canIncludeHeaders(name)) {
                          responseHeaderMap_1[name] = value;
                        }
                      });
                      ajaxResponse.headerMap = responseHeaderMap_1;
                    }

                    return ajaxResponse;
                  });

                  return response;
                })["catch"](function (reason) {
                  _reportFetchMetrics(callDetails, 0, input, null, fetchData, null, {
                    error: reason.message
                  });

                  throw reason;
                });
              }
            },
            // Create an error callback to report any hook errors
            hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxOpen, "Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.")
          }));

          _fetchInitialized = true;
        } else if (isPolyfill) {
          // If fetch is a polyfill we need to capture the request to ensure that we correctly track
          // disabled request URLS (i.e. internal urls) to ensure we don't end up in a constant loop
          // of reporting ourselves, for example React Native uses a polyfill for fetch
          // Note: Polyfill implementations that don't support the "poyyfill" tag are not supported
          // the workaround is to add a polyfill property to your fetch implementation before initializing
          // App Insights
          _hooks.push(InstrumentFunc(global, strFetch, {
            req: function req(callDetails, input, init) {
              // Just call so that we record any disabled URL
              _isDisabledRequest(null, input, init);
            }
          }));
        }

        if (isPolyfill) {
          // retag the instrumented fetch with the same polyfill settings this is mostly for testing
          // But also supports multiple App Insights usages
          global[strFetch].polyfill = isPolyfill;
        }
      }

      function _hookProto(target, funcName, callbacks) {
        _hooks.push(InstrumentProto(target, funcName, callbacks));
      }

      function _instrumentXhr() {
        if (_supportsAjaxMonitoring(_self) && !_xhrInitialized) {
          // Instrument open
          _hookProto(XMLHttpRequest, "open", {
            req: function req(args, method, url, async) {
              var xhr = args.inst;
              var ajaxData = xhr[strAjaxData];

              if (!_isDisabledRequest(xhr, url) && _isMonitoredXhrInstance(xhr, true)) {
                if (!ajaxData || !ajaxData.xhrMonitoringState.openDone) {
                  // Only create a single ajaxData (even when multiple AI instances are running)
                  _openHandler(xhr, method, url, async);
                } // always attach to the on ready state change (required for handling multiple instances)


                _attachToOnReadyStateChange(xhr);
              }
            },
            hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxOpen, "Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.")
          }); // Instrument send


          _hookProto(XMLHttpRequest, "send", {
            req: function req(args, context) {
              var xhr = args.inst;
              var ajaxData = xhr[strAjaxData];

              if (_isMonitoredXhrInstance(xhr) && !ajaxData.xhrMonitoringState.sendDone) {
                _createMarkId("xhr", ajaxData);

                ajaxData.requestSentTime = dateTimeUtilsNow();

                _self.includeCorrelationHeaders(ajaxData, undefined, undefined, xhr);

                ajaxData.xhrMonitoringState.sendDone = true;
              }
            },
            hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxSend, "Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.")
          }); // Instrument abort


          _hookProto(XMLHttpRequest, "abort", {
            req: function req(args) {
              var xhr = args.inst;
              var ajaxData = xhr[strAjaxData];

              if (_isMonitoredXhrInstance(xhr) && !ajaxData.xhrMonitoringState.abortDone) {
                ajaxData.aborted = 1;
                ajaxData.xhrMonitoringState.abortDone = true;
              }
            },
            hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxAbort, "Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.")
          }); // Instrument setRequestHeader


          if (_enableRequestHeaderTracking) {
            _hookProto(XMLHttpRequest, "setRequestHeader", {
              req: function req(args, header, value) {
                var xhr = args.inst;

                if (_isMonitoredXhrInstance(xhr) && _canIncludeHeaders(header)) {
                  xhr[strAjaxData].requestHeaders[header] = value;
                }
              },
              hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxSetRequestHeader, "Failed to monitor XMLHttpRequest.setRequestHeader, monitoring data for this ajax call may be incorrect.")
            });
          }

          _xhrInitialized = true;
        }
      }

      function _isDisabledRequest(xhr, request, init) {
        var isDisabled = false;
        var theUrl = ((!HelperFuncs_isString(request) ? (request || {}).url || "" : request) || "").toLowerCase(); // check excludeRequestFromAutoTrackingPatterns before stripping off any query string

        arrForEach(_excludeRequestFromAutoTrackingPatterns, function (regex) {
          var theRegex = regex;

          if (HelperFuncs_isString(regex)) {
            theRegex = new RegExp(regex);
          }

          if (!isDisabled) {
            isDisabled = theRegex.test(theUrl);
          }
        }); // if request url matches with exclude regex pattern, return true and no need to check for headers

        if (isDisabled) {
          return isDisabled;
        }

        var idx = _indexOf(theUrl, "?");

        var idx2 = _indexOf(theUrl, "#");

        if (idx === -1 || idx2 !== -1 && idx2 < idx) {
          idx = idx2;
        }

        if (idx !== -1) {
          // Strip off any Query string
          theUrl = theUrl.substring(0, idx);
        } // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector


        if (!isNullOrUndefined(xhr)) {
          // Look on the XMLHttpRequest of the URL string value
          isDisabled = xhr[DisabledPropertyName] === true || theUrl[DisabledPropertyName] === true;
        } else if (!isNullOrUndefined(request)) {
          // fetch
          // Look for DisabledPropertyName in either Request or RequestInit
          isDisabled = (typeof request === "object" ? request[DisabledPropertyName] === true : false) || (init ? init[DisabledPropertyName] === true : false);
        } // Also add extra check just in case the XHR or fetch objects where not decorated with the DisableProperty due to sealing or freezing


        if (!isDisabled && theUrl && isInternalApplicationInsightsEndpoint(theUrl)) {
          isDisabled = true;
        }

        if (isDisabled) {
          // Add the disabled url if not present
          if (!_disabledUrls[theUrl]) {
            _disabledUrls[theUrl] = 1;
          }
        } else {
          // Check to see if the url is listed as disabled
          if (_disabledUrls[theUrl]) {
            isDisabled = true;
          }
        }

        return isDisabled;
      } /// <summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>
      /// <param name="excludeAjaxDataValidation">Optional parameter. True if ajaxData must be excluded from verification</param>
      /// <returns type="bool">True if instance needs to be monitored, otherwise false</returns>


      function _isMonitoredXhrInstance(xhr, excludeAjaxDataValidation) {
        var ajaxValidation = true;
        var initialized = _xhrInitialized;

        if (!isNullOrUndefined(xhr)) {
          ajaxValidation = excludeAjaxDataValidation === true || !isNullOrUndefined(xhr[strAjaxData]);
        } // checking to see that all interested functions on xhr were instrumented


        return initialized // checking on ajaxData to see that it was not removed in user code
        && ajaxValidation;
      }

      function _openHandler(xhr, method, url, async) {
        var traceID = _context && _context.telemetryTrace && _context.telemetryTrace.traceID || generateW3CId();
        var spanID = generateW3CId().substr(0, 16);
        var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog]());
        ajaxData.method = method;
        ajaxData.requestUrl = url;
        ajaxData.xhrMonitoringState.openDone = true;
        ajaxData.requestHeaders = {};
        ajaxData.async = async;
        ajaxData.errorStatusText = _enableAjaxErrorStatusText;
        xhr[strAjaxData] = ajaxData;
      }

      function _attachToOnReadyStateChange(xhr) {
        xhr[strAjaxData].xhrMonitoringState.stateChangeAttached = attachEvent(xhr, "readystatechange", function () {
          try {
            if (xhr && xhr.readyState === 4 && _isMonitoredXhrInstance(xhr)) {
              _onAjaxComplete(xhr);
            }
          } catch (e) {
            var exceptionText = dumpObj(e); // ignore messages with c00c023f, as this a known IE9 XHR abort issue

            if (!exceptionText || _indexOf(exceptionText.toLowerCase(), "c00c023f") === -1) {
              _throwInternalCritical(_self, _InternalMessageId.FailedMonitorAjaxRSC, "Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.", {
                ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(xhr),
                exception: exceptionText
              });
            }
          }
        });
      }

      function _getResponseText(xhr) {
        try {
          var responseType = xhr.responseType;

          if (responseType === "" || responseType === "text") {
            // As per the specification responseText is only valid if the type is an empty string or "text"
            return xhr.responseText;
          }
        } catch (e) {// This shouldn't happen because of the above check -- but just in case, so just ignore
        }

        return null;
      }

      function _onAjaxComplete(xhr) {
        var ajaxData = xhr[strAjaxData];
        ajaxData.responseFinishedTime = dateTimeUtilsNow();
        ajaxData.status = xhr.status;

        function _reportXhrError(e, failedProps) {
          var errorProps = failedProps || {};
          errorProps["ajaxDiagnosticsMessage"] = _getFailedAjaxDiagnosticsMessage(xhr);

          if (e) {
            errorProps["exception"] = dumpObj(e);
          }

          _throwInternalWarning(_self, _InternalMessageId.FailedMonitorAjaxDur, "Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.", errorProps);
        }

        _findPerfResourceEntry("xmlhttprequest", ajaxData, function () {
          try {
            var dependency = ajaxData.CreateTrackItem("Ajax", _enableRequestHeaderTracking, function () {
              var ajaxResponse = {
                statusText: xhr.statusText,
                headerMap: null,
                correlationContext: _getAjaxCorrelationContext(xhr),
                type: xhr.responseType,
                responseText: _getResponseText(xhr),
                response: xhr.response
              };

              if (_enableResponseHeaderTracking) {
                var headers = xhr.getAllResponseHeaders();

                if (headers) {
                  // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null
                  // the regex converts the header string into an array of individual headers
                  var arr = strTrim(headers).split(/[\r\n]+/);
                  var responseHeaderMap_2 = {};
                  arrForEach(arr, function (line) {
                    var parts = line.split(": ");
                    var header = parts.shift();
                    var value = parts.join(": ");

                    if (_canIncludeHeaders(header)) {
                      responseHeaderMap_2[header] = value;
                    }
                  });
                  ajaxResponse.headerMap = responseHeaderMap_2;
                }
              }

              return ajaxResponse;
            });
            var properties = void 0;

            try {
              if (!!_addRequestContext) {
                properties = _addRequestContext({
                  status: xhr.status,
                  xhr: xhr
                });
              }
            } catch (e) {
              _throwInternalWarning(_self, _InternalMessageId.FailedAddingCustomDefinedRequestContext, "Failed to add custom defined request context as configured call back may missing a null check.");
            }

            if (dependency) {
              if (properties !== undefined) {
                dependency.properties = __assignFn(__assignFn({}, dependency.properties), properties);
              }

              _self[strTrackDependencyDataInternal](dependency);
            } else {
              _reportXhrError(null, {
                requestSentTime: ajaxData.requestSentTime,
                responseFinishedTime: ajaxData.responseFinishedTime
              });
            }
          } finally {
            // cleanup telemetry data
            try {
              xhr[strAjaxData] = null;
            } catch (e) {// May throw in environments that prevent extension or freeze xhr
            }
          }
        }, function (e) {
          _reportXhrError(e, null);
        });
      }

      function _getAjaxCorrelationContext(xhr) {
        try {
          var responseHeadersString = xhr.getAllResponseHeaders();

          if (responseHeadersString !== null) {
            var index = _indexOf(responseHeadersString.toLowerCase(), RequestHeaders.requestContextHeaderLowerCase);

            if (index !== -1) {
              var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);
              return CorrelationIdHelper.getCorrelationContext(responseHeader);
            }
          }
        } catch (e) {
          _throwInternalWarning(_self, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, "Failed to get Request-Context correlation header as it may be not included in the response or not accessible.", {
            ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(xhr),
            exception: dumpObj(e)
          });
        }
      }

      function _createMarkId(type, ajaxData) {
        if (ajaxData.requestUrl && _markPrefix && _enableAjaxPerfTracking) {
          var performance_1 = getPerformance();

          if (performance_1 && isFunction(performance_1.mark)) {
            _markCount++;
            var markId = _markPrefix + type + "#" + _markCount;
            performance_1.mark(markId);
            var entries = performance_1.getEntriesByName(markId);

            if (entries && entries.length === 1) {
              ajaxData.perfMark = entries[0];
            }
          }
        }
      }

      function _findPerfResourceEntry(initiatorType, ajaxData, trackCallback, reportError) {
        var perfMark = ajaxData.perfMark;
        var performance = getPerformance();
        var maxAttempts = _config.maxAjaxPerfLookupAttempts;
        var retryDelay = _config.ajaxPerfLookupDelay;
        var requestUrl = ajaxData.requestUrl;
        var attempt = 0;

        (function locateResourceTiming() {
          try {
            if (performance && perfMark) {
              attempt++;
              var perfTiming = null;
              var entries = performance.getEntries();

              for (var lp = entries.length - 1; lp >= 0; lp--) {
                var entry = entries[lp];

                if (entry) {
                  if (entry.entryType === "resource") {
                    if (entry.initiatorType === initiatorType && (_indexOf(entry.name, requestUrl) !== -1 || _indexOf(requestUrl, entry.name) !== -1)) {
                      perfTiming = entry;
                    }
                  } else if (entry.entryType === "mark" && entry.name === perfMark.name) {
                    // We hit the start event
                    ajaxData.perfTiming = perfTiming;
                    break;
                  }

                  if (entry.startTime < perfMark.startTime - 1000) {
                    // Fallback to try and reduce the time spent looking for the perf entry
                    break;
                  }
                }
              }
            }

            if (!perfMark || // - we don't have a perfMark or
            ajaxData.perfTiming || // - we have not found the perf entry or
            attempt >= maxAttempts || // - we have tried too many attempts or
            ajaxData.async === false) {
              // - this is a sync request
              if (perfMark && isFunction(performance.clearMarks)) {
                // Remove the mark so we don't fill up the performance resources too much
                performance.clearMarks(perfMark.name);
              }

              ajaxData.perfAttempts = attempt; // just continue and report the track event

              trackCallback();
            } else {
              // We need to wait for the browser to populate the window.performance entry
              // This needs to be at least 1ms as waiting <= 1 (on firefox) is not enough time for fetch or xhr,
              // this is a scheduling issue for the browser implementation
              setTimeout(locateResourceTiming, retryDelay);
            }
          } catch (e) {
            reportError(e);
          }
        })();
      }

      function _createFetchRecord(input, init) {
        var traceID = _context && _context.telemetryTrace && _context.telemetryTrace.traceID || generateW3CId();
        var spanID = generateW3CId().substr(0, 16);
        var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog]());
        ajaxData.requestSentTime = dateTimeUtilsNow();
        ajaxData.errorStatusText = _enableAjaxErrorStatusText;

        if (input instanceof Request) {
          ajaxData.requestUrl = input ? input.url : "";
        } else {
          ajaxData.requestUrl = input;
        }

        var method = "GET";

        if (init && init.method) {
          method = init.method;
        } else if (input && input instanceof Request) {
          method = input.method;
        }

        ajaxData.method = method;
        var requestHeaders = {};

        if (_enableRequestHeaderTracking) {
          var headers = new Headers((init ? init.headers : 0) || (input instanceof Request ? input.headers || {} : {}));
          headers.forEach(function (value, key) {
            if (_canIncludeHeaders(key)) {
              requestHeaders[key] = value;
            }
          });
        }

        ajaxData.requestHeaders = requestHeaders;

        _createMarkId("fetch", ajaxData);

        return ajaxData;
      }

      function _getFailedFetchDiagnosticsMessage(input) {
        var result = "";

        try {
          if (!isNullOrUndefined(input)) {
            if (typeof input === "string") {
              result += "(url: '" + input + "')";
            } else {
              result += "(url: '" + input.url + "')";
            }
          }
        } catch (e) {
          _throwInternalCritical(_self, _InternalMessageId.FailedMonitorAjaxOpen, "Failed to grab failed fetch diagnostics message", {
            exception: dumpObj(e)
          });
        }

        return result;
      }

      function _reportFetchMetrics(callDetails, status, input, response, ajaxData, getResponse, properties) {
        if (!ajaxData) {
          return;
        }

        function _reportFetchError(msgId, e, failedProps) {
          var errorProps = failedProps || {};
          errorProps["fetchDiagnosticsMessage"] = _getFailedFetchDiagnosticsMessage(input);

          if (e) {
            errorProps["exception"] = dumpObj(e);
          }

          _throwInternalWarning(_self, msgId, "Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.", errorProps);
        }

        ajaxData.responseFinishedTime = dateTimeUtilsNow();
        ajaxData.status = status;

        _findPerfResourceEntry("fetch", ajaxData, function () {
          var dependency = ajaxData.CreateTrackItem("Fetch", _enableRequestHeaderTracking, getResponse);
          var properties;

          try {
            if (!!_addRequestContext) {
              properties = _addRequestContext({
                status: status,
                request: input,
                response: response
              });
            }
          } catch (e) {
            _throwInternalWarning(_self, _InternalMessageId.FailedAddingCustomDefinedRequestContext, "Failed to add custom defined request context as configured call back may missing a null check.");
          }

          if (dependency) {
            if (properties !== undefined) {
              dependency.properties = __assignFn(__assignFn({}, dependency.properties), properties);
            }

            _self[strTrackDependencyDataInternal](dependency);
          } else {
            _reportFetchError(_InternalMessageId.FailedMonitorAjaxDur, null, {
              requestSentTime: ajaxData.requestSentTime,
              responseFinishedTime: ajaxData.responseFinishedTime
            });
          }
        }, function (e) {
          _reportFetchError(_InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, e, null);
        });
      }

      function _getFetchCorrelationContext(response) {
        if (response && response.headers) {
          try {
            var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);
            return CorrelationIdHelper.getCorrelationContext(responseHeader);
          } catch (e) {
            _throwInternalWarning(_self, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, "Failed to get Request-Context correlation header as it may be not included in the response or not accessible.", {
              fetchDiagnosticsMessage: _getFailedFetchDiagnosticsMessage(response),
              exception: dumpObj(e)
            });
          }
        }
      }
    });
    return _this;
  }

  AjaxMonitor.getDefaultConfig = function () {
    var config = {
      maxAjaxCallsPerView: 500,
      disableAjaxTracking: false,
      disableFetchTracking: true,
      excludeRequestFromAutoTrackingPatterns: undefined,
      disableCorrelationHeaders: false,
      distributedTracingMode: DistributedTracingModes.AI_AND_W3C,
      correlationHeaderExcludedDomains: ["*.blob.core.windows.net", "*.blob.core.chinacloudapi.cn", "*.blob.core.cloudapi.de", "*.blob.core.usgovcloudapi.net"],
      correlationHeaderDomains: undefined,
      correlationHeaderExcludePatterns: undefined,
      appId: undefined,
      enableCorsCorrelation: false,
      enableRequestHeaderTracking: false,
      enableResponseHeaderTracking: false,
      enableAjaxErrorStatusText: false,
      enableAjaxPerfTracking: false,
      maxAjaxPerfLookupAttempts: 3,
      ajaxPerfLookupDelay: 25,
      ignoreHeaders: ["Authorization", "X-API-Key", "WWW-Authenticate"],
      addRequestContext: undefined
    };
    return config;
  };

  AjaxMonitor.getEmptyConfig = function () {
    var emptyConfig = this.getDefaultConfig();
    objForEachKey(emptyConfig, function (value) {
      emptyConfig[value] = undefined;
    });
    return emptyConfig;
  }; // Removed Stub for AjaxMonitor.prototype.initialize.
  // Removed Stub for AjaxMonitor.prototype.teardown.


  AjaxMonitor.prototype.processTelemetry = function (item, itemCtx) {
    this.processNext(item, itemCtx);
  }; // Removed Stub for AjaxMonitor.prototype.trackDependencyData.
  // Removed Stub for AjaxMonitor.prototype.includeCorrelationHeaders.
  // Removed Stub for AjaxMonitor.prototype.trackDependencyDataInternal.


  AjaxMonitor.identifier = "AjaxDependencyPlugin";
  return AjaxMonitor;
}(BaseTelemetryPlugin);


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/ConnectionStringParser.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var _FIELDS_SEPARATOR = ";";
var _FIELD_KEY_VALUE_SEPARATOR = "=";
function parseConnectionString(connectionString) {
  if (!connectionString) {
    return {};
  }

  var kvPairs = connectionString.split(_FIELDS_SEPARATOR);
  var result = arrReduce(kvPairs, function (fields, kv) {
    var kvParts = kv.split(_FIELD_KEY_VALUE_SEPARATOR);

    if (kvParts.length === 2) {
      // only save fields with valid formats
      var key = kvParts[0].toLowerCase();
      var value = kvParts[1];
      fields[key] = value;
    }

    return fields;
  }, {});

  if (objKeys(result).length > 0) {
    // this is a valid connection string, so parse the results
    if (result.endpointsuffix) {
      // use endpoint suffix where overrides are not provided
      var locationPrefix = result.location ? result.location + "." : "";
      result.ingestionendpoint = result.ingestionendpoint || "https://" + locationPrefix + "dc." + result.endpointsuffix;
    } // apply the default endpoints


    result.ingestionendpoint = result.ingestionendpoint || DEFAULT_BREEZE_ENDPOINT;
  }

  return result;
}
var ConnectionStringParser = {
  parse: parseConnectionString
};
;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/IConfig.js
/*
 * Application Insights JavaScript SDK - Common, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */


var ConfigurationManager = function () {
  function ConfigurationManager() {}

  ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {
    if (defaultValue === void 0) {
      defaultValue = false;
    }

    var configValue;

    if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !isNullOrUndefined(config.extensionConfig[identifier][field])) {
      configValue = config.extensionConfig[identifier][field];
    } else {
      configValue = config[field];
    }

    return !isNullOrUndefined(configValue) ? configValue : defaultValue;
  };

  return ConfigurationManager;
}();


;// CONCATENATED MODULE: ./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js
/*
 * Application Insights JavaScript SDK - Web, 2.7.1
 * Copyright (c) Microsoft and contributors. All rights reserved.
 */






"use strict";

var _internalSdkSrc; // This is an exclude list of properties that should not be updated during initialization
// They include a combination of private and internal property names


var _ignoreUpdateSnippetProperties = ["snippet", "dependencies", "properties", "_snippetVersion", "appInsightsNew", "getSKUDefaults"]; // Re-exposing the Common classes as Telemetry, the list was taken by reviewing the generated code for the build while using
// the previous configuration :-
// import * as Common from "@microsoft/applicationinsights-common"
// export const Telemetry = Common;

var fieldType = {
  Default: 0
  /* Default */
  ,
  Required: 1
  /* Required */
  ,
  Array: 2
  /* Array */
  ,
  Hidden: 4
  /* Hidden */

};
/**
 * Telemetry type classes, e.g. PageView, Exception, etc
 */

var Telemetry = {
  __proto__: null,
  PropertiesPluginIdentifier: PropertiesPluginIdentifier,
  BreezeChannelIdentifier: BreezeChannelIdentifier,
  AnalyticsPluginIdentifier: AnalyticsPluginIdentifier,
  Util: Util,
  CorrelationIdHelper: CorrelationIdHelper,
  UrlHelper: UrlHelper,
  DateTimeUtils: DateTimeUtils,
  ConnectionStringParser: ConnectionStringParser,
  FieldType: fieldType,
  RequestHeaders: RequestHeaders,
  DisabledPropertyName: DisabledPropertyName,
  ProcessLegacy: ProcessLegacy,
  SampleRate: SampleRate,
  HttpMethod: HttpMethod,
  DEFAULT_BREEZE_ENDPOINT: DEFAULT_BREEZE_ENDPOINT,
  AIData: Data,
  AIBase: Base,
  Envelope: Envelope_Envelope,
  Event: Event_Event,
  Exception: Exception,
  Metric: Metric,
  PageView: PageView,
  PageViewData: PageViewData,
  RemoteDependencyData: RemoteDependencyData_RemoteDependencyData,
  Trace: Trace,
  PageViewPerformance: PageViewPerformance,
  Data: Data_Data,
  SeverityLevel: SeverityLevel,
  ConfigurationManager: ConfigurationManager,
  ContextTagKeys: ContextTagKeys,
  DataSanitizer: DataSanitizer,
  TelemetryItemCreator: TelemetryItemCreator,
  CtxTagKeys: CtxTagKeys,
  Extensions: Extensions,
  DistributedTracingModes: DistributedTracingModes
};
/**
 * Application Insights API
 * @class Initialization
 * @implements {IApplicationInsights}
 */

var Initialization = function () {
  function Initialization(snippet) {
    var _self = this; // initialize the queue and config in case they are undefined


    _self._snippetVersion = "" + (snippet.sv || snippet.version || "");
    snippet.queue = snippet.queue || [];
    snippet.version = snippet.version || 2.0; // Default to new version

    var config = snippet.config || {};

    if (config.connectionString) {
      var cs = parseConnectionString(config.connectionString);
      var ingest = cs.ingestionendpoint;
      config.endpointUrl = ingest ? ingest + "/v2/track" : config.endpointUrl; // only add /v2/track when from connectionstring

      config.instrumentationKey = cs.instrumentationkey || config.instrumentationKey;
    }

    _self.appInsights = new ApplicationInsights();
    _self.properties = new dist_esm_PropertiesPlugin();
    _self.dependencies = new AjaxMonitor();
    _self.core = new AppInsightsCore();
    _self._sender = new Sender();
    _self.snippet = snippet;
    _self.config = config;

    _self.getSKUDefaults();
  } // Analytics Plugin

  /**
   * Get the current cookie manager for this instance
   */


  Initialization.prototype.getCookieMgr = function () {
    return this.appInsights.getCookieMgr();
  };
  /**
   * Log a user action or other occurrence.
   * @param {IEventTelemetry} event
   * @param {ICustomProperties} [customProperties]
   * @memberof Initialization
   */


  Initialization.prototype.trackEvent = function (event, customProperties) {
    this.appInsights.trackEvent(event, customProperties);
  };
  /**
   * Logs that a page, or similar container was displayed to the user.
   * @param {IPageViewTelemetry} pageView
   * @memberof Initialization
   */


  Initialization.prototype.trackPageView = function (pageView) {
    var inPv = pageView || {};
    this.appInsights.trackPageView(inPv);
  };
  /**
   * Log a bag of performance information via the customProperties field.
   * @param {IPageViewPerformanceTelemetry} pageViewPerformance
   * @memberof Initialization
   */


  Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {
    var inPvp = pageViewPerformance || {};
    this.appInsights.trackPageViewPerformance(inPvp);
  };
  /**
   * Log an exception that you have caught.
   * @param {IExceptionTelemetry} exception
   * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.
   * @memberof Initialization
   */


  Initialization.prototype.trackException = function (exception, customProperties) {
    if (exception && !exception.exception && exception.error) {
      exception.exception = exception.error;
    }

    this.appInsights.trackException(exception, customProperties);
  };
  /**
   * Manually send uncaught exception telemetry. This method is automatically triggered
   * on a window.onerror event.
   * @param {IAutoExceptionTelemetry} exception
   * @memberof Initialization
   */


  Initialization.prototype._onerror = function (exception) {
    this.appInsights._onerror(exception);
  };
  /**
   * Log a diagnostic scenario such entering or leaving a function.
   * @param {ITraceTelemetry} trace
   * @param {ICustomProperties} [customProperties]
   * @memberof Initialization
   */


  Initialization.prototype.trackTrace = function (trace, customProperties) {
    this.appInsights.trackTrace(trace, customProperties);
  };
  /**
   * Log a numeric value that is not associated with a specific event. Typically used
   * to send regular reports of performance indicators.
   *
   * To send a single measurement, just use the `name` and `average` fields
   * of {@link IMetricTelemetry}.
   *
   * If you take measurements frequently, you can reduce the telemetry bandwidth by
   * aggregating multiple measurements and sending the resulting average and modifying
   * the `sampleCount` field of {@link IMetricTelemetry}.
   * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.
   * @param {ICustomProperties} [customProperties]
   * @memberof Initialization
   */


  Initialization.prototype.trackMetric = function (metric, customProperties) {
    this.appInsights.trackMetric(metric, customProperties);
  };
  /**
   * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,
   * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view
   * and send the event.
   * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.
   */


  Initialization.prototype.startTrackPage = function (name) {
    this.appInsights.startTrackPage(name);
  };
  /**
   * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.
   * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.
   * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.
   * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.
   * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.
   * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.
   */


  Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {
    this.appInsights.stopTrackPage(name, url, customProperties, measurements);
  };

  Initialization.prototype.startTrackEvent = function (name) {
    this.appInsights.startTrackEvent(name);
  };
  /**
   * Log an extended event that you started timing with `startTrackEvent`.
   * @param   name    The string you used to identify this event in `startTrackEvent`.
   * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.
   * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.
   */


  Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {
    this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated
  };

  Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {
    return this.appInsights.addTelemetryInitializer(telemetryInitializer);
  }; // Properties Plugin

  /**
   * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|
   *
   * The method will only set the `authenticatedUserId` and `accountId` in the current page view. To set them for the whole session, you should set `storeInCookie = true`
   * @param {string} authenticatedUserId
   * @param {string} [accountId]
   * @param {boolean} [storeInCookie=false]
   * @memberof Initialization
   */


  Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {
    if (storeInCookie === void 0) {
      storeInCookie = false;
    }

    this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);
  };
  /**
   * Clears the authenticated user id and account id. The associated cookie is cleared, if present.
   * @memberof Initialization
   */


  Initialization.prototype.clearAuthenticatedUserContext = function () {
    this.properties.context.user.clearAuthenticatedUserContext();
  }; // Dependencies Plugin

  /**
   * Log a dependency call (e.g. ajax)
   * @param {IDependencyTelemetry} dependency
   * @memberof Initialization
   */


  Initialization.prototype.trackDependencyData = function (dependency) {
    this.dependencies.trackDependencyData(dependency);
  }; // Misc

  /**
   * Manually trigger an immediate send of all telemetry still in the buffer.
   * @param {boolean} [async=true]
   * @memberof Initialization
   */


  Initialization.prototype.flush = function (async) {
    var _this = this;

    if (async === void 0) {
      async = true;
    }

    doPerf(this.core, function () {
      return "AISKU.flush";
    }, function () {
      arrForEach(_this.core.getTransmissionControls(), function (channels) {
        arrForEach(channels, function (channel) {
          channel.flush(async);
        });
      });
    }, null, async);
  };
  /**
   * Manually trigger an immediate send of all telemetry still in the buffer using beacon Sender.
   * Fall back to xhr sender if beacon is not supported.
   * @param {boolean} [async=true]
   * @memberof Initialization
   */


  Initialization.prototype.onunloadFlush = function (async) {
    if (async === void 0) {
      async = true;
    }

    arrForEach(this.core.getTransmissionControls(), function (channels) {
      arrForEach(channels, function (channel) {
        if (channel.onunloadFlush) {
          channel.onunloadFlush();
        } else {
          channel.flush(async);
        }
      });
    });
  };
  /**
   * Initialize this instance of ApplicationInsights
   * @returns {IApplicationInsights}
   * @memberof Initialization
   */


  Initialization.prototype.loadAppInsights = function (legacyMode, logger, notificationManager) {
    var _this = this;

    if (legacyMode === void 0) {
      legacyMode = false;
    }

    var _self = this;

    function _updateSnippetProperties(snippet) {
      if (snippet) {
        var snippetVer = "";

        if (!isNullOrUndefined(_self._snippetVersion)) {
          snippetVer += _self._snippetVersion;
        }

        if (legacyMode) {
          snippetVer += ".lg";
        }

        if (_self.context && _self.context.internal) {
          _self.context.internal.snippetVer = snippetVer || "-";
        } // apply updated properties to the global instance (snippet)


        objForEachKey(_self, function (field, value) {
          if (HelperFuncs_isString(field) && !isFunction(value) && field && field[0] !== "_" && // Don't copy "internal" values
          _ignoreUpdateSnippetProperties.indexOf(field) === -1) {
            snippet[field] = value;
          }
        });
      }
    } // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!


    if (legacyMode && _self.config.extensions && _self.config.extensions.length > 0) {
      throwError("Extensions not allowed in legacy mode");
    }

    doPerf(_self.core, function () {
      return "AISKU.loadAppInsights";
    }, function () {
      var extensions = [];
      extensions.push(_self._sender);
      extensions.push(_self.properties);
      extensions.push(_self.dependencies);
      extensions.push(_self.appInsights); // initialize core

      _self.core.initialize(_self.config, extensions, logger, notificationManager);

      _self.context = _self.properties.context;

      if (_internalSdkSrc && _self.context) {
        _self.context.internal.sdkSrc = _internalSdkSrc;
      }

      _updateSnippetProperties(_self.snippet); // Empty queue of all api calls logged prior to sdk download


      _self.emptyQueue();

      _self.pollInternalLogs();

      _self.addHousekeepingBeforeUnload(_this);
    });
    return _self;
  };
  /**
   * Overwrite the lazy loaded fields of global window snippet to contain the
   * actual initialized API methods
   * @param {Snippet} snippet
   * @memberof Initialization
   */


  Initialization.prototype.updateSnippetDefinitions = function (snippet) {
    // apply full appInsights to the global instance
    // Note: This must be called before loadAppInsights is called
    proxyAssign(snippet, this, function (name) {
      // Not excluding names prefixed with "_" as we need to proxy some functions like _onError
      return name && _ignoreUpdateSnippetProperties.indexOf(name) === -1;
    });
  };
  /**
   * Call any functions that were queued before the main script was loaded
   * @memberof Initialization
   */


  Initialization.prototype.emptyQueue = function () {
    var _self = this; // call functions that were queued before the main script was loaded


    try {
      if (isArray(_self.snippet.queue)) {
        // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.
        var length_1 = _self.snippet.queue.length;

        for (var i = 0; i < length_1; i++) {
          var call = _self.snippet.queue[i];
          call();
        }

        _self.snippet.queue = undefined;
        delete _self.snippet.queue;
      }
    } catch (exception) {
      var properties = {};

      if (exception && isFunction(exception.toString)) {
        properties.exception = exception.toString();
      } // need from core
      // Microsoft.ApplicationInsights._InternalLogging.throwInternal(
      //     LoggingSeverity.WARNING,
      //     _InternalMessageId.FailedToSendQueuedTelemetry,
      //     "Failed to send queued telemetry",
      //     properties);

    }
  };

  Initialization.prototype.pollInternalLogs = function () {
    this.core.pollInternalLogs();
  };

  Initialization.prototype.stopPollingInternalLogs = function () {
    this.core.stopPollingInternalLogs();
  };

  Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {
    // Add callback to push events when the user navigates away
    if (hasWindow() || hasDocument()) {
      var performHousekeeping = function performHousekeeping() {
        // Adds the ability to flush all data before the page unloads.
        // Note: This approach tries to push a sync request with all the pending events onbeforeunload.
        // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.
        // Telemetry here will help us analyze how effective this approach is.
        // Another approach would be to make this call sync with a acceptable timeout to reduce the
        // impact on user experience.
        // appInsightsInstance.context._sender.triggerSend();
        appInsightsInstance.onunloadFlush(false); // Back up the current session to local storage
        // This lets us close expired sessions after the cookies themselves expire

        arrForEach(appInsightsInstance.appInsights.core["_extensions"], function (ext) {
          if (ext.identifier === PropertiesPluginIdentifier) {
            if (ext && ext.context && ext.context._sessionManager) {
              ext.context._sessionManager.backup();
            }

            return -1;
          }
        });
      };

      var added = false;
      var excludePageUnloadEvents = appInsightsInstance.appInsights.config.disablePageUnloadEvents;

      if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload) {
        // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server
        // As just hooking the window does not always fire (on chrome) for page navigation's.
        added = addPageUnloadEventListener(performHousekeeping, excludePageUnloadEvents); // We also need to hook the pagehide and visibilitychange events as not all versions of Safari support load/unload events.

        added = addPageHideEventListener(performHousekeeping, excludePageUnloadEvents) || added; // A reactNative app may not have a window and therefore the beforeunload/pagehide events -- so don't
        // log the failure in this case

        if (!added && !isReactNative()) {
          appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, "Could not add handler for beforeunload and pagehide");
        }
      }

      if (!added && !appInsightsInstance.appInsights.config.disableFlushOnUnload) {
        // If we didn't add the normal set then attempt to add the pagehide and visibilitychange only
        addPageHideEventListener(performHousekeeping, excludePageUnloadEvents);
      }
    }
  };

  Initialization.prototype.getSender = function () {
    return this._sender;
  };

  Initialization.prototype.getSKUDefaults = function () {
    var _self = this;

    _self.config.diagnosticLogInterval = _self.config.diagnosticLogInterval && _self.config.diagnosticLogInterval > 0 ? _self.config.diagnosticLogInterval : 10000;
  };

  return Initialization;
}();

 // tslint:disable-next-line

(function () {
  var sdkSrc = null;
  var isModule = false;
  var cdns = ["://js.monitor.azure.com/", "://az416426.vo.msecnd.net/"];

  try {
    // Try and determine whether the sdk is being loaded from the CDN
    // currentScript is only valid during initial processing
    var scrpt = (document || {}).currentScript;

    if (scrpt) {
      sdkSrc = scrpt.src; // } else {
      //     // We need to update to at least typescript 2.9 for this to work :-(
      //     // Leaving as a stub for now so after we upgrade this breadcrumb is available
      //     let meta = import.meta;
      //     sdkSrc = (meta || {}).url;
      //     isModule = true;
    }
  } catch (e) {// eslint-disable-next-line no-empty
  }

  if (sdkSrc) {
    try {
      var url = sdkSrc.toLowerCase();

      if (url) {
        var src = "";

        for (var idx = 0; idx < cdns.length; idx++) {
          if (url.indexOf(cdns[idx]) !== -1) {
            src = "cdn" + (idx + 1);

            if (url.indexOf("/scripts/") === -1) {
              if (url.indexOf("/next/") !== -1) {
                src += "-next";
              } else if (url.indexOf("/beta/") !== -1) {
                src += "-beta";
              }
            }

            _internalSdkSrc = src + (isModule ? ".mod" : "");
            break;
          }
        }
      }
    } catch (e) {// eslint-disable-next-line no-empty
    }
  }
})();
;// CONCATENATED MODULE: ./src/components/hooks/useAnalytics.ts



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



var sha = "13be214dfb79e3fb364365c2884c67554af6cbf5";

function splitProperties(props) {
  if (!props) return {};
  var keys = Object.keys(props);
  if (!keys.length) return {};
  var measurements = {};
  var properties = {};

  for (var key of keys) {
    var value = props[key];
    if (typeof value === "number") measurements[key] = value;else if (typeof value === "boolean") properties[key] = value ? 1 : 0;else if (typeof value !== "undefined") properties[key] = value;
  }

  return {
    measurements,
    properties
  };
}

var INSTRUMENTATION_KEY = "81ad7468-8585-4970-b027-4f9e7c3eb191";
var appInsights = typeof window !== "undefined" && INSTRUMENTATION_KEY && // ignore dev environment
!/http:\/\/localhost/.test(window.location.href) && new Initialization({
  config: {
    instrumentationKey: INSTRUMENTATION_KEY,
    isStorageUseDisabled: true,
    isCookieUseDisabled: true,
    disableCookiesUsage: true,
    disableAjaxTracking: true,
    enableSessionStorageBuffer: false,
    autoTrackPageVisitTime: true
  }
});

if (appInsights) {
  appInsights.loadAppInsights();
  appInsights.addTelemetryInitializer(envelope => {
    if (envelope.data) envelope.data.sha = sha;
  });
  appInsights.trackPageView({
    name: window.location.href
  });
}

var page = appInsights ? () => appInsights.trackPageView({
  name: window.location.href
}) : () => {};
var trackEvent = appInsights ? (name, properties) => appInsights.trackEvent(_objectSpread({
  name
}, splitProperties(properties))) : () => {};
var trackError = appInsights ? (exception, properties) => appInsights.trackException(_objectSpread({
  exception
}, splitProperties(properties))) : () => {};
var analytics = {
  page,
  trackEvent,
  trackError,
  sha
}; // store instance

if (typeof window !== "undefined") {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  window["analytics"] = analytics;
}

function useAnalytics() {
  return analytics;
}
var AppInsightsErrorBoundary = /*#__PURE__*/function (_Component) {
  (0,inheritsLoose/* default */.Z)(AppInsightsErrorBoundary, _Component);

  function AppInsightsErrorBoundary() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.chunkLoadErrorCount = 0;
    _this.state = {
      hasError: false
    };
    return _this;
  }

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  AppInsightsErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(_) {
    return {
      hasError: true
    };
  };

  var _proto = AppInsightsErrorBoundary.prototype;

  _proto.componentDidCatch = function componentDidCatch(error, errorInfo) {
    trackError === null || trackError === void 0 ? void 0 : trackError(error, errorInfo);
    console.error("Uncaught error:", error, errorInfo);

    if (/ChunkLoadError/i.test(error.message)) {
      this.chunkLoadErrorCount++; // if online, and too many chunk errors reload

      if (this.chunkLoadErrorCount === 100 && typeof window !== "undefined" && !!navigator.onLine) {
        trackEvent("error.chunkload.reload");
        window.location.reload();
      }
    }
  };

  _proto.render = function render() {
    return this.props.children;
  };

  return AppInsightsErrorBoundary;
}(react.Component);

/***/ }),

/***/ 17368:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useAnimationFrame; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function useAnimationFrame(callback, deps) {
  var requestRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var previousTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();

  var animate = time => {
    var active = true;

    if (previousTimeRef.current != undefined) {
      var deltaTime = time - previousTimeRef.current;
      active = callback(deltaTime);
    }

    previousTimeRef.current = time;
    if (active) requestRef.current = requestAnimationFrame(animate); // we're done
    else requestRef.current = undefined;
  };

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    previousTimeRef.current = undefined;
    requestRef.current = requestAnimationFrame(animate);
    return () => requestRef.current !== undefined && cancelAnimationFrame(requestRef.current);
  }, deps || []);
}

/***/ }),

/***/ 53074:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useDevices; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15785);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20392);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(54774);




function useDevices(options, deps) {
  if (deps === void 0) {
    deps = [];
  }

  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var devices = (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(bus, _ => _.devices(options), [JSON.stringify(options)].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(deps)));
  return devices;
}

/***/ }),

/***/ 59626:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useEvent; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function useEvent(service, identifier) {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => service === null || service === void 0 ? void 0 : service.event(identifier), [service, identifier]);
}

/***/ }),

/***/ 8966:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$": function() { return /* binding */ keyCodeFromEvent; },
/* harmony export */   "Z": function() { return /* binding */ useFireKey; }
/* harmony export */ });
var ENTER_KEY = 13;
var SPACE_KEY = 32;
function keyCodeFromEvent(e) {
  return typeof e.which == "number" ? e.which : e.keyCode;
}
function useFireKey(handler) {
  if (!handler) return undefined;
  return e => {
    var charCode = keyCodeFromEvent(e);

    if (charCode === ENTER_KEY || charCode === SPACE_KEY) {
      e.preventDefault();
      handler();
    }
  };
}

/***/ }),

/***/ 63944:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useInterval; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15785);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


function useInterval(enabled, handler, delay, deps) {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (enabled && delay > 0) {
      var id = setInterval(handler, delay);
      handler();
      return () => clearInterval(id);
    }
  }, [enabled, delay].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(deps || [])));
}

/***/ }),

/***/ 34093:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useLocalStorage; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_providerbus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24725);

 // enabled when storage=0

var memStorage = {};
var PREFIX = "jacdac:";
function useLocalStorage(key, initialValue) {
  var pkey = PREFIX + key; // State to store our value
  // Pass initial state function to useState so logic is only executed once

  var {
    0: storedValue,
    1: setStoredValue
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {
    if (_jacdac_providerbus__WEBPACK_IMPORTED_MODULE_1__/* .UIFlags.storage */ .A.storage) {
      try {
        // Get from local storage by key
        var item = typeof window !== "undefined" && key && window.localStorage.getItem(pkey); // Parse stored json or if none return initialValue

        return item && JSON.parse(item) || initialValue;
      } catch (error) {
        // If error also return initialValue
        console.log(error);
        return initialValue;
      }
    } else {
      var v = memStorage[key];
      return v !== undefined ? v : initialValue;
    }
  }); // Return a wrapped version of useState's setter function that ...
  // ... persists the new value to localStorage.

  var setValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(value => {
    if (_jacdac_providerbus__WEBPACK_IMPORTED_MODULE_1__/* .UIFlags.storage */ .A.storage) {
      try {
        // Allow value to be a function so we have same API as useState
        var valueToStore = value; // Save state

        setStoredValue(valueToStore); // Save to local storage

        if (typeof window !== "undefined" && key) window.localStorage.setItem(pkey, JSON.stringify(valueToStore));
      } catch (error) {
        // A more advanced implementation would handle the error case
        console.log(error);
      }
    } else {
      memStorage[key] = value;
    }
  }, [key]);
  return [storedValue, setValue];
}

/***/ }),

/***/ 20509:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useMediaQueries; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66449);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22840);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12159);


function useMediaQueries() {
  var theme = (0,_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)();
  var xs = (0,_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(theme.breakpoints.down("sm"));
  var mobile = (0,_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(theme.breakpoints.down(_layout__WEBPACK_IMPORTED_MODULE_0__/* .MOBILE_BREAKPOINT */ .Gh));
  var medium = (0,_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(theme.breakpoints.down(_layout__WEBPACK_IMPORTED_MODULE_0__/* .MEDIUM_BREAKPOINT */ .qA));
  return {
    xs,
    mobile,
    medium
  };
}

/***/ }),

/***/ 72179:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useMounted; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function useMounted() {
  var mounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    mounted.current = true;
    return () => {
      mounted.current = false;
    };
  }, []);
  return () => mounted.current;
}

/***/ }),

/***/ 82677:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useRegister; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function useRegister(service, identifier) {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => service === null || service === void 0 ? void 0 : service.register(identifier), [service, identifier]);
}

/***/ }),

/***/ 63793:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useServiceProvider; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20392);
/* harmony import */ var _jacdac_useChange__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(54774);



/**
 * Mounts a service provider
 */

function useServiceProvider(device) {
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var provider = (0,_jacdac_useChange__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(bus, b => device && b.findServiceProvider(device.deviceId));
  return provider;
}

/***/ }),

/***/ 36134:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useServiceProviderFromServiceClass; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_servers_servers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50713);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20392);



function useServiceProviderFromServiceClass(serviceClass) {
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z); // run once

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    var devices = bus.devices({
      serviceClass
    });
    var def = !devices.length && (0,_jacdac_ts_src_servers_servers__WEBPACK_IMPORTED_MODULE_1__/* .serviceProviderDefinitionFromServiceClass */ .vd)(serviceClass);
    var provider = def && (0,_jacdac_ts_src_servers_servers__WEBPACK_IMPORTED_MODULE_1__/* .addServiceProvider */ .Q6)(bus, def);
    return () => bus.removeServiceProvider(provider);
  }, [serviceClass]);
}

/***/ }),

/***/ 49013:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useServiceServer; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _useServiceProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63793);


function useServiceServer(service, createTwin) {
  var provider = (0,_useServiceProvider__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(service === null || service === void 0 ? void 0 : service.device);
  var twin = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (provider) return undefined;
    var twin = service === null || service === void 0 ? void 0 : service.twin;

    if (!twin && service && createTwin) {
      twin = createTwin();
      if (twin) service.twin = twin;
    }

    return twin;
  }, [service, provider, service === null || service === void 0 ? void 0 : service.changeId]);
  return (provider === null || provider === void 0 ? void 0 : provider.service(service === null || service === void 0 ? void 0 : service.serviceIndex)) || twin;
}

/***/ }),

/***/ 30833:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useSvgButtonProps; }
/* harmony export */ });
/* harmony import */ var _useFireKey__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8966);

function useSvgButtonProps(label, onDown, onUp) {
  var disabled = !onDown && !onUp;
  var fireDownOnEnter = (0,_useFireKey__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(onDown);
  var fireUpOnEnter = (0,_useFireKey__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(onUp);

  var preventify = handler => {
    if (handler) return event => {
      event.preventDefault();
      handler(event);
    };else return undefined;
  };

  return {
    className: disabled ? undefined : "clickeable",
    role: disabled ? undefined : "button",
    tabIndex: disabled ? undefined : 0,
    ["aria-label"]: label,
    onPointerDown: preventify(onDown),
    onPointerUp: preventify(onUp),
    onPointerLeave: preventify(onUp),
    onKeyDown: fireDownOnEnter,
    onKeyUp: fireUpOnEnter
  };
}

/***/ }),

/***/ 72901:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useThrottledValue; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _useAnimationFrame__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17368);


function useThrottledValue(value, maxRate, maxCycles) {
  if (maxCycles === void 0) {
    maxCycles = 2;
  }

  var {
    0: actual,
    1: setActual
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);
  var animated = actual;
  (0,_useAnimationFrame__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(time => {
    // no valid rate
    if (isNaN(maxRate) || isNaN(animated)) {
      setActual(value);
      return false;
    } // increment towards value


    var dt = time / 1000; // s

    var error = value - animated;
    var maxError = maxRate * dt; // deg

    var active = true;
    animated += Math.sign(error) * Math.min(Math.abs(error), maxError); // close to goal, finish animation

    if (Math.abs(value - animated) / maxRate < 0.01) {
      animated = value;
      active = false;
    } // very far from goal, get closer immediately


    if (!isNaN(maxCycles)) {
      var maxErrorRange = maxRate * maxCycles;
      animated = Math.max(value - maxErrorRange, Math.min(value + maxErrorRange, animated));
    } // store and update ui


    setActual(animated);
    return active;
  }, [value, maxRate, maxCycles]);
  return actual;
}

/***/ }),

/***/ 72144:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useWindowEvent; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15785);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


function useWindowEvent(type, listener, passive, deps) {
  if (passive === void 0) {
    passive = false;
  }

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (typeof window === "undefined" || !listener) return undefined; // SSR
    // initiate the event handler

    window.addEventListener(type, listener, passive); // this will clean up the event every time the component is re-rendered

    return () => window.removeEventListener(type, listener);
  }, [type, listener, passive].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(deps || [])));
}

/***/ }),

/***/ 37557:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67648);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = (props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, Object.assign({
  titleAccess: "humidity logo"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
  d: "M8.8-.03A49.327 49.327 0 00.956 11.112a8.824 8.824 0 1015.693 0A49.327 49.327 0 008.801-.029zm0 3.132a47.244 47.244 0 015.995 8.962 6.74 6.74 0 11-11.986 0A47.243 47.243 0 018.8 3.102z"
})));

/***/ }),

/***/ 36656:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67648);


/* harmony default export */ __webpack_exports__["Z"] = (props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, Object.assign({
  titleAccess: "Jacdac logo"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
  d: "M22.369 14.045H4.037a2.618 2.618 0 0 1-2.656.173A2.493 2.493 0 0 1 0 12c0-.933.533-1.788 1.381-2.218a2.618 2.618 0 0 1 2.656.173h18.332c.9 0 1.631.712 1.631 1.59v.91c0 .878-.73 1.59-1.631 1.59zM4.124 12c0-.404-.164-.791-.457-1.077a1.581 1.581 0 0 0-1.104-.446c-.414 0-.811.16-1.104.446A1.504 1.504 0 0 0 1.002 12c0 .404.164.791.457 1.077.293.285.69.446 1.104.446.414 0 .811-.16 1.104-.446.293-.286.457-.673.457-1.077zM4.187 18c0-.404-.167-.791-.464-1.077a1.618 1.618 0 0 0-1.121-.446c-.42 0-.824.16-1.12.446A1.493 1.493 0 0 0 1.016 18c0 .404.167.791.464 1.077.297.285.7.446 1.121.446.42 0 .823-.16 1.12-.446.298-.286.465-.673.465-1.077zm16.157 2.045H4.098a2.692 2.692 0 0 1-2.695.173C.54 19.788 0 18.933 0 18s.54-1.788 1.403-2.218a2.692 2.692 0 0 1 2.695.173h16.246c.915 0 1.656.712 1.656 1.59v.91c0 .878-.741 1.59-1.656 1.59zM24 6.455c0 .878-.73 1.59-1.631 1.59H4.037a2.618 2.618 0 0 1-2.656.173A2.493 2.493 0 0 1 0 6c0-.933.533-1.788 1.381-2.218a2.618 2.618 0 0 1 2.65.168l.006.005h18.332c.9 0 1.631.712 1.631 1.59ZM4.124 6c0-.404-.164-.791-.457-1.077a1.581 1.581 0 0 0-1.104-.446c-.414 0-.811.16-1.104.446A1.504 1.504 0 0 0 1.002 6c0 .404.164.791.457 1.077.293.285.69.446 1.104.446.414 0 .811-.16 1.104-.446.293-.286.457-.673.457-1.077z"
})));

/***/ }),

/***/ 74741:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67648);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = (props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, Object.assign({
  titleAccess: "Temperature icon"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
  d: "M11.365 14.761a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 12.062a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 9.363a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 6.663a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM11.365 3.964a.635.635 0 000-1.27h-1.35a.635.635 0 000 1.27zM4.04 3.26v14.207a1.979 1.978 0 101.284-.004V3.26a.642.642 0 00-1.285 0z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
  d: "M4.699 0a3.302 3.301 0 00-3.323 3.3v12.726a4.668 4.666 0 106.605.022V3.3A3.302 3.301 0 004.7 0zm-.047 1.303a2.01 2.008 0 012.041 2.009v13.37a3.354 3.352 0 11-4.017-.027V3.312a2.01 2.008 0 011.976-2.01z"
})));

/***/ }),

/***/ 37564:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ TransportIcon; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Usb.js
var Usb = __webpack_require__(21898);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Bluetooth.js
var Bluetooth = __webpack_require__(27161);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Wifi.js
var Wifi = __webpack_require__(2930);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./src/components/KindIcon.tsx
var KindIcon = __webpack_require__(50048);
// EXTERNAL MODULE: ./node_modules/@mui/material/SvgIcon/SvgIcon.js + 1 modules
var SvgIcon = __webpack_require__(67648);
;// CONCATENATED MODULE: ./src/components/icons/SerialIcon.tsx


function SerialIcon(props) {
  return /*#__PURE__*/react.createElement(SvgIcon/* default */.Z, Object.assign({
    titleAccess: "Serial port"
  }, props), /*#__PURE__*/react.createElement("path", {
    d: "M20.605,7.172l-17.21,-0c0,-0 -0.299,0.052 -0.507,0.097c-0.993,0.213 -1.745,1.03 -1.873,2.039l-0.009,0.126c-0.03,0.586 0.059,1.173 0.261,1.724c0.47,1.283 1.396,3.811 1.489,4.066l0.083,0.187l-0.004,-0.009c0.371,0.802 1.174,1.315 2.057,1.315l14.216,-0c0.883,-0 1.686,-0.513 2.057,-1.315l0.079,-0.178c0.093,-0.255 1.02,-2.783 1.489,-4.066c0.201,-0.547 0.29,-1.129 0.262,-1.711l-0.009,-0.139c-0.129,-1.009 -0.88,-1.826 -1.874,-2.039l-0.397,-0.085c-0.035,-0.008 -0.072,-0.012 -0.11,-0.012Zm-17.156,1.023l17.102,-0l0.346,0.074c0.566,0.121 0.994,0.584 1.072,1.156l0.005,0.068c0.02,0.452 -0.048,0.896 -0.201,1.314l-1.483,4.049l-0.054,0.119c-0.204,0.439 -0.644,0.719 -1.128,0.719l-14.216,0c-0.484,0 -0.925,-0.281 -1.129,-0.72l-0.053,-0.118l-1.483,-4.049c-0.154,-0.422 -0.223,-0.871 -0.2,-1.32l0.004,-0.062c0.078,-0.572 0.506,-1.035 1.072,-1.156l0.346,-0.074Zm0.326,6.805l0.002,0.008l-0.002,-0.008Zm6.531,-2.571c0.47,-0 0.852,0.382 0.852,0.852c-0,0.47 -0.382,0.852 -0.852,0.852c-0.471,0 -0.853,-0.382 -0.853,-0.852c0,-0.47 0.382,-0.852 0.853,-0.852Zm-3.389,-0c0.47,-0 0.852,0.382 0.852,0.852c-0,0.47 -0.382,0.852 -0.852,0.852c-0.471,0 -0.853,-0.382 -0.853,-0.852c0,-0.47 0.382,-0.852 0.853,-0.852Zm6.777,-0c0.471,-0 0.853,0.382 0.853,0.852c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,0 -0.852,-0.382 -0.852,-0.852c0,-0.47 0.382,-0.852 0.852,-0.852Zm3.389,-0c0.471,-0 0.853,0.382 0.853,0.852c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,0 -0.852,-0.382 -0.852,-0.852c0,-0.47 0.382,-0.852 0.852,-0.852Zm-11.861,-2.674c0.471,0 0.853,0.382 0.853,0.853c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.471,0 0.852,0.382 0.852,0.853c0,0.47 -0.381,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.471,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.381,-0.853 0.852,-0.853Zm-16.752,-0.26l-0.003,0.029l0.003,-0.029Z"
  }));
}
;// CONCATENATED MODULE: ./src/components/icons/TransportIcon.tsx
 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name





function TransportIcon(props) {
  var {
    type,
    className
  } = props;

  switch (type) {
    case constants/* PACKETIO_TRANSPORT */.GII:
    case constants/* USB_TRANSPORT */.W3h:
      return /*#__PURE__*/react.createElement(Usb/* default */.Z, {
        className: className
      });

    case constants/* BLUETOOTH_TRANSPORT */.HZx:
      return /*#__PURE__*/react.createElement(Bluetooth/* default */.Z, {
        className: className
      });

    case constants/* SERIAL_TRANSPORT */.NbT:
      return /*#__PURE__*/react.createElement(SerialIcon, {
        className: className
      });

    case constants/* WEBSOCKET_TRANSPORT */.uJd:
      return /*#__PURE__*/react.createElement(Wifi/* default */.Z, {
        className: className
      });

    default:
      return /*#__PURE__*/react.createElement(KindIcon/* default */.ZP, {
        kind: constants/* VIRTUAL_DEVICE_NODE_NAME */.UX7,
        className: className
      });
  }
}

/***/ }),

/***/ 12159:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "pG": function() { return /* binding */ DRAWER_WIDTH; },
  "qA": function() { return /* binding */ MEDIUM_BREAKPOINT; },
  "Gh": function() { return /* binding */ MOBILE_BREAKPOINT; },
  "Wt": function() { return /* binding */ MOBILE_DRAWER_WIDTH; },
  "Po": function() { return /* binding */ MOBILE_TOOLS_DRAWER_WIDTH; },
  "a2": function() { return /* binding */ TOC_DRAWER_WIDTH; },
  "wW": function() { return /* binding */ TOOLS_DRAWER_WIDTH; },
  "ZP": function() { return /* binding */ Layout; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Container/containerClasses.js

function getContainerUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiContainer', slot);
}
var containerClasses = (0,generateUtilityClasses/* default */.Z)('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);
/* harmony default export */ var Container_containerClasses = ((/* unused pure expression or super */ null && (containerClasses)));
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Container/Container.js


var _excluded = ["className", "component", "disableGutters", "fixed", "maxWidth"];









var useUtilityClasses = ownerState => {
  var {
    classes,
    fixed,
    disableGutters,
    maxWidth
  } = ownerState;
  var slots = {
    root: ['root', maxWidth && "maxWidth".concat((0,capitalize/* default */.Z)(String(maxWidth))), fixed && 'fixed', disableGutters && 'disableGutters']
  };
  return (0,composeClasses/* default */.Z)(slots, getContainerUtilityClass, classes);
};

var ContainerRoot = (0,styled/* default */.ZP)('div', {
  name: 'MuiContainer',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles["maxWidth".concat((0,capitalize/* default */.Z)(String(ownerState.maxWidth)))], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    width: '100%',
    marginLeft: 'auto',
    boxSizing: 'border-box',
    marginRight: 'auto',
    display: 'block'
  }, !ownerState.disableGutters && {
    paddingLeft: theme.spacing(2),
    paddingRight: theme.spacing(2),
    [theme.breakpoints.up('sm')]: {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }
  });
}, _ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {
    var value = theme.breakpoints.values[breakpoint];

    if (value !== 0) {
      acc[theme.breakpoints.up(breakpoint)] = {
        maxWidth: "".concat(value).concat(theme.breakpoints.unit)
      };
    }

    return acc;
  }, {});
}, _ref3 => {
  var {
    theme,
    ownerState
  } = _ref3;
  return (0,esm_extends/* default */.Z)({}, ownerState.maxWidth === 'xs' && {
    [theme.breakpoints.up('xs')]: {
      maxWidth: Math.max(theme.breakpoints.values.xs, 444)
    }
  }, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {
    [theme.breakpoints.up(ownerState.maxWidth)]: {
      maxWidth: "".concat(theme.breakpoints.values[ownerState.maxWidth]).concat(theme.breakpoints.unit)
    }
  });
});
var Container = /*#__PURE__*/react.forwardRef(function Container(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiContainer'
  });

  var {
    className,
    component = 'div',
    disableGutters = false,
    fixed = false,
    maxWidth = 'lg'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    disableGutters,
    fixed,
    maxWidth
  });

  var classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ContainerRoot, (0,esm_extends/* default */.Z)({
    as: component,
    ownerState: ownerState,
    className: (0,clsx_m["default"])(classes.root, className),
    ref: ref
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var Container_Container = (Container);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules
var toConsumableArray = __webpack_require__(15785);
// EXTERNAL MODULE: ./node_modules/react-helmet/es/Helmet.js
var Helmet = __webpack_require__(35414);
// EXTERNAL MODULE: ./.cache/gatsby-browser-entry.js
var gatsby_browser_entry = __webpack_require__(35313);
;// CONCATENATED MODULE: ./src/components/shell/SEO.tsx


/**
 * SEO component that queries for data with
 *  Gatsby's useStaticQuery React hook
 *
 * See: https://www.gatsbyjs.org/docs/use-static-query/
 */



function SEO(props) {
  var {
    lang = "en",
    meta = [],
    description = "",
    title = ""
  } = props || {};
  var {
    site
  } = (0,gatsby_browser_entry.useStaticQuery)("63159454");
  var metaTitle = title || site.siteMetadata.title;
  var metaDescription = description || site.siteMetadata.description;
  return /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, {
    htmlAttributes: {
      lang
    },
    title: metaTitle,
    meta: [{
      name: "description",
      content: metaDescription
    }, {
      property: "og:title",
      content: metaTitle
    }, {
      property: "og:description",
      content: metaDescription
    }, {
      property: "og:type",
      content: "website"
    }, {
      name: "twitter:card",
      content: "summary"
    }, {
      name: "twitter:creator",
      content: site.siteMetadata.author
    }, {
      name: "twitter:title",
      content: title
    }, {
      name: "twitter:description",
      content: metaDescription
    }].concat((0,toConsumableArray/* default */.Z)(meta))
  });
}
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTheme.js + 13 modules
var createTheme = __webpack_require__(78790);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/responsiveFontSizes.js
var responsiveFontSizes = __webpack_require__(88887);
// EXTERNAL MODULE: ./src/components/AppContext.tsx
var AppContext = __webpack_require__(84377);
// EXTERNAL MODULE: ./src/components/ui/DarkModeProvider.tsx
var DarkModeProvider = __webpack_require__(7796);
// EXTERNAL MODULE: ./src/components/ui/DarkModeContext.tsx
var DarkModeContext = __webpack_require__(91350);
// EXTERNAL MODULE: ./src/components/ui/Alert.tsx
var Alert = __webpack_require__(95453);
// EXTERNAL MODULE: ./node_modules/gatsby-theme-material-ui/index.js
var gatsby_theme_material_ui = __webpack_require__(36176);
// EXTERNAL MODULE: ./src/components/trace/TraceSaveButton.tsx
var TraceSaveButton = __webpack_require__(34439);
;// CONCATENATED MODULE: ./src/components/shell/Footer.tsx





var PREFIX = "Footer";
var classes = {
  footer: PREFIX + "-footer"
};
var Root = (0,styled/* default */.ZP)("footer")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["&." + classes.footer]: {
      textAlign: "center",
      "& *": {
        fontSize: theme.typography.fontSize * 0.8 + "px",
        textDecoration: "none",
        color: theme.palette.text.primary
      },
      "& .note": {
        fontSize: theme.typography.fontSize * 0.9 + "px"
      },
      "& a:hover": {
        textDecoration: "underline"
      },
      "& a:visited": {
        color: theme.palette.grey[400]
      },
      "& a": {
        marginRight: theme.spacing(0.5)
      }
    }
  };
});
function Footer() {
  var repo = "microsoft/jacdac-docs";
  var sha = "13be214dfb79e3fb364365c2884c67554af6cbf5";
  return /*#__PURE__*/react.createElement(Root, {
    role: "contentinfo",
    className: classes.footer
  }, /*#__PURE__*/react.createElement("div", {
    className: "note"
  }, "This web site collects anonymous usage analytics.", " ", /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Link */.rU, {
    to: "/privacy/"
  }, "Learn more...")), /*#__PURE__*/react.createElement("a", {
    href: "https://github.com/microsoft/jacdac/discussions",
    target: "_blank",
    rel: "noopener noreferrer"
  }, "Contact Us"), "|", /*#__PURE__*/react.createElement("a", {
    href: "https://go.microsoft.com/fwlink/?LinkId=521839",
    target: "_blank",
    rel: "noopener noreferrer"
  }, "Privacy & Cookies"), "|", /*#__PURE__*/react.createElement("a", {
    href: "https://www.microsoft.com/en-us/legal/intellectualproperty/copyright",
    target: "_blank",
    rel: "noopener noreferrer"
  }, "Terms Of Use"), "|", /*#__PURE__*/react.createElement("a", {
    href: "https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general",
    target: "_blank",
    rel: "noopener noreferrer"
  }, "Trademarks"), repo && sha && /*#__PURE__*/react.createElement(react.Fragment, null, "|", /*#__PURE__*/react.createElement("a", {
    href: "https://github.com/" + repo + "/commit/" + sha,
    target: "_blank",
    rel: "noopener noreferrer"
  }, sha.slice(0, 8))), "| ", /*#__PURE__*/react.createElement(TraceSaveButton/* default */.Z, {
    variant: "link"
  }), "\xA0", /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    component: "span",
    variant: "inherit"
  }, "\xA9 ", new Date().getFullYear(), " Microsoft Corporation"));
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/flags.ts
var flags = __webpack_require__(21258);
// EXTERNAL MODULE: ./src/components/ui/Suspense.tsx + 2 modules
var Suspense = __webpack_require__(6890);
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__(64983);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/Box/Box.js + 1 modules
var Box = __webpack_require__(39211);
// EXTERNAL MODULE: ./node_modules/@mui/material/Paper/Paper.js + 1 modules
var Paper = __webpack_require__(98953);
// EXTERNAL MODULE: ./node_modules/@mui/material/TableContainer/TableContainer.js + 1 modules
var TableContainer = __webpack_require__(75319);
// EXTERNAL MODULE: ./node_modules/@mui/material/Table/Table.js + 1 modules
var Table = __webpack_require__(92664);
// EXTERNAL MODULE: ./node_modules/@mui/material/TableHead/TableHead.js + 1 modules
var TableHead = __webpack_require__(17708);
// EXTERNAL MODULE: ./node_modules/@mui/material/TableBody/TableBody.js + 1 modules
var TableBody = __webpack_require__(57783);
// EXTERNAL MODULE: ./node_modules/@mui/material/TableRow/TableRow.js + 1 modules
var TableRow = __webpack_require__(33182);
;// CONCATENATED MODULE: ./src/components/useMdxComponents.tsx




var CodeBlock = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(9191), __webpack_require__.e(1172)]).then(__webpack_require__.bind(__webpack_require__, 9433)));

var _RandomGenerator = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 2833).then(__webpack_require__.bind(__webpack_require__, 72833)));

var _TraceList = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 5604).then(__webpack_require__.bind(__webpack_require__, 65604)));

var _SpecificationUnitList = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 4181).then(__webpack_require__.bind(__webpack_require__, 54181)));

var _DeviceImage = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 8058).then(__webpack_require__.bind(__webpack_require__, 98058)));

function useMdxComponents() {
  var theme = (0,useTheme/* default */.Z)(); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var mdxComponents = (0,react.useMemo)(() => ({
    Link: props => /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Link */.rU, Object.assign({
      color: "textPrimary"
    }, props)),
    a: props => /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Link */.rU, Object.assign({
      color: "textPrimary"
    }, props, {
      rel: "noopener noreferrer"
    })),
    pre: props => /*#__PURE__*/react.createElement(Box/* default */.Z, {
      mb: theme.spacing(3)
    }, /*#__PURE__*/react.createElement(Paper/* default */.Z, null, /*#__PURE__*/react.createElement("div", props))),
    table: props => /*#__PURE__*/react.createElement(Box/* default */.Z, {
      mb: theme.spacing(0.5)
    }, /*#__PURE__*/react.createElement(TableContainer/* default */.Z, {
      component: Paper/* default */.Z
    }, /*#__PURE__*/react.createElement(Box/* default */.Z, {
      m: theme.spacing(0.5)
    }, /*#__PURE__*/react.createElement(Table/* default */.Z, Object.assign({
      size: "small"
    }, props))))),
    thead: props => /*#__PURE__*/react.createElement(TableHead/* default */.Z, props),
    tbody: props => /*#__PURE__*/react.createElement(TableBody/* default */.Z, props),
    tr: props => /*#__PURE__*/react.createElement(TableRow/* default */.Z, props),
    code: props => /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(CodeBlock, props)),
    RandomGenerator: props => /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(Box/* default */.Z, {
      displayPrint: "none"
    }, /*#__PURE__*/react.createElement(_RandomGenerator, props))),
    TraceList: props => /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(_TraceList, props)),
    SpecificationUnitList: props => /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(_SpecificationUnitList, props)),
    DeviceImage: props => /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(_DeviceImage, props))
  }), []);
  return mdxComponents;
}
// EXTERNAL MODULE: ./src/components/ui/ThemedLayout.tsx
var ThemedLayout = __webpack_require__(56251);
;// CONCATENATED MODULE: ./src/components/ui/ThemedMdxLayout.tsx




function ThemedMdxLayout(props) {
  var {
    theme,
    children
  } = props;
  var mdxComponents = useMdxComponents();
  return /*#__PURE__*/react.createElement(ThemedLayout/* default */.Z, {
    theme: theme
  }, /*#__PURE__*/react.createElement(esm.MDXProvider, {
    components: mdxComponents
  }, children));
}
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(8812);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/createSvgIcon.js
var createSvgIcon = __webpack_require__(25833);
;// CONCATENATED MODULE: ./node_modules/@mui/material/internal/svg-icons/MoreHoriz.js


/**
 * @ignore - internal component.
 */


/* harmony default export */ var MoreHoriz = ((0,createSvgIcon/* default */.Z)( /*#__PURE__*/(0,jsx_runtime.jsx)("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), 'MoreHoriz'));
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js








var BreadcrumbCollapsedButton = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  skipSx: true
})(_ref => {
  var {
    theme
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'flex',
    marginLeft: "calc(".concat(theme.spacing(1), " * 0.5)"),
    marginRight: "calc(".concat(theme.spacing(1), " * 0.5)")
  }, theme.palette.mode === 'light' ? {
    backgroundColor: theme.palette.grey[100],
    color: theme.palette.grey[700]
  } : {
    backgroundColor: theme.palette.grey[700],
    color: theme.palette.grey[100]
  }, {
    borderRadius: 2,
    '&:hover, &:focus': (0,esm_extends/* default */.Z)({}, theme.palette.mode === 'light' ? {
      backgroundColor: theme.palette.grey[200]
    } : {
      backgroundColor: theme.palette.grey[600]
    }),
    '&:active': (0,esm_extends/* default */.Z)({
      boxShadow: theme.shadows[0]
    }, theme.palette.mode === 'light' ? {
      backgroundColor: (0,colorManipulator/* emphasize */._4)(theme.palette.grey[200], 0.12)
    } : {
      backgroundColor: (0,colorManipulator/* emphasize */._4)(theme.palette.grey[600], 0.12)
    })
  });
});
var BreadcrumbCollapsedIcon = (0,styled/* default */.ZP)(MoreHoriz)({
  width: 24,
  height: 16
});
/**
 * @ignore - internal component.
 */

function BreadcrumbCollapsed(props) {
  var ownerState = props;
  return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(BreadcrumbCollapsedButton, (0,esm_extends/* default */.Z)({
      focusRipple: true
    }, props, {
      ownerState: ownerState,
      children: /*#__PURE__*/(0,jsx_runtime.jsx)(BreadcrumbCollapsedIcon, {
        ownerState: ownerState
      })
    }))
  });
}

 false ? 0 : void 0;
/* harmony default export */ var Breadcrumbs_BreadcrumbCollapsed = (BreadcrumbCollapsed);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js

function getBreadcrumbsUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiBreadcrumbs', slot);
}
var breadcrumbsClasses = (0,generateUtilityClasses/* default */.Z)('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);
/* harmony default export */ var Breadcrumbs_breadcrumbsClasses = (breadcrumbsClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js


var Breadcrumbs_excluded = ["children", "className", "component", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"];












var Breadcrumbs_useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    li: ['li'],
    ol: ['ol'],
    separator: ['separator']
  };
  return (0,composeClasses/* default */.Z)(slots, getBreadcrumbsUtilityClass, classes);
};

var BreadcrumbsRoot = (0,styled/* default */.ZP)(Typography/* default */.Z, {
  name: 'MuiBreadcrumbs',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    return [{
      ["& .".concat(Breadcrumbs_breadcrumbsClasses.li)]: styles.li
    }, styles.root];
  }
})({});
var BreadcrumbsOl = (0,styled/* default */.ZP)('ol', {
  name: 'MuiBreadcrumbs',
  slot: 'Ol',
  overridesResolver: (props, styles) => styles.ol
})({
  display: 'flex',
  flexWrap: 'wrap',
  alignItems: 'center',
  padding: 0,
  margin: 0,
  listStyle: 'none'
});
var BreadcrumbsSeparator = (0,styled/* default */.ZP)('li', {
  name: 'MuiBreadcrumbs',
  slot: 'Separator',
  overridesResolver: (props, styles) => styles.separator
})({
  display: 'flex',
  userSelect: 'none',
  marginLeft: 8,
  marginRight: 8
});

function insertSeparators(items, className, separator, ownerState) {
  return items.reduce((acc, current, index) => {
    if (index < items.length - 1) {
      acc = acc.concat(current, /*#__PURE__*/(0,jsx_runtime.jsx)(BreadcrumbsSeparator, {
        "aria-hidden": true,
        className: className,
        ownerState: ownerState,
        children: separator
      }, "separator-".concat(index)));
    } else {
      acc.push(current);
    }

    return acc;
  }, []);
}

var Breadcrumbs = /*#__PURE__*/react.forwardRef(function Breadcrumbs(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiBreadcrumbs'
  });

  var {
    children,
    className,
    component = 'nav',
    expandText = 'Show path',
    itemsAfterCollapse = 1,
    itemsBeforeCollapse = 1,
    maxItems = 8,
    separator = '/'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Breadcrumbs_excluded);

  var [expanded, setExpanded] = react.useState(false);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    component,
    expanded,
    expandText,
    itemsAfterCollapse,
    itemsBeforeCollapse,
    maxItems,
    separator
  });

  var classes = Breadcrumbs_useUtilityClasses(ownerState);
  var listRef = react.useRef(null);

  var renderItemsBeforeAndAfter = allItems => {
    var handleClickExpand = () => {
      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.
      // Let's keep the focus in the component after expanding.
      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.
      // By moving it to some link/button at least we have some announcement.

      var focusable = listRef.current.querySelector('a[href],button,[tabindex]');

      if (focusable) {
        focusable.focus();
      }
    }; // This defends against someone passing weird input, to ensure that if all
    // items would be shown anyway, we just show all items without the EllipsisItem


    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {
      if (false) {}

      return allItems;
    }

    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/(0,jsx_runtime.jsx)(Breadcrumbs_BreadcrumbCollapsed, {
      "aria-label": expandText,
      onClick: handleClickExpand
    }, "ellipsis"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];
  };

  var allItems = react.Children.toArray(children).filter(child => {
    if (false) {}

    return /*#__PURE__*/react.isValidElement(child);
  }).map((child, index) => /*#__PURE__*/(0,jsx_runtime.jsx)("li", {
    className: classes.li,
    children: child
  }, "child-".concat(index)));
  return /*#__PURE__*/(0,jsx_runtime.jsx)(BreadcrumbsRoot, (0,esm_extends/* default */.Z)({
    ref: ref,
    component: component,
    color: "text.secondary",
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(BreadcrumbsOl, {
      className: classes.ol,
      ref: listRef,
      ownerState: ownerState,
      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)
    })
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Breadcrumbs_Breadcrumbs = (Breadcrumbs);
// EXTERNAL MODULE: ./node_modules/gatsby-link/index.js
var gatsby_link = __webpack_require__(38037);
// EXTERNAL MODULE: ./src/components/ui/StructuredData.tsx
var StructuredData = __webpack_require__(97357);
;// CONCATENATED MODULE: ./src/components/ui/Breadcrumbs.tsx






function BreadcrumbsStructuredData(props) {
  var {
    parts
  } = props;
  var payload = (0,react.useMemo)(() => ({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: parts.map((part, i) => ({
      "@type": "ListItem",
      position: i + 1,
      name: part,
      item: (0,gatsby_link/* withPrefix */.dq)("/" + parts.slice(0, i + 1).join("/"))
    }))
  }), [parts]);
  return /*#__PURE__*/react.createElement(StructuredData/* default */.Z, {
    payload: payload
  });
}

function ui_Breadcrumbs_Breadcrumbs(props) {
  var {
    location
  } = props;
  var {
    pathname
  } = location;
  var parts = (0,react.useMemo)(() => pathname.split(/\//g).filter(p => !!p && p !== "jacdac-docs"), [pathname]);
  if (!parts.length) return null;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(BreadcrumbsStructuredData, {
    parts: parts
  }), /*#__PURE__*/react.createElement(Breadcrumbs_Breadcrumbs, {
    "aria-label": "breadcrumb"
  }, /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Link */.rU, {
    to: "/",
    underline: "hover"
  }, "Home"), parts.map((part, i) => /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Link */.rU, {
    key: i,
    color: i === parts.length - 1 ? "textPrimary" : undefined,
    "aria-current": i === parts.length - 1 ? "page" : undefined,
    to: "/" + parts.slice(0, i + 1).join("/"),
    underline: "hover"
  }, part))));
}
// EXTERNAL MODULE: ./src/components/hooks/useMediaQueries.tsx
var useMediaQueries = __webpack_require__(20509);
// EXTERNAL MODULE: ./node_modules/@mui/material/Hidden/Hidden.js + 4 modules
var Hidden = __webpack_require__(71027);
// EXTERNAL MODULE: ./node_modules/@mui/material/AppBar/AppBar.js + 1 modules
var AppBar = __webpack_require__(85190);
// EXTERNAL MODULE: ./node_modules/@mui/material/Toolbar/Toolbar.js + 1 modules
var Toolbar = __webpack_require__(97098);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/MoreVert.js
var MoreVert = __webpack_require__(37321);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/GitHub.js
var GitHub = __webpack_require__(90695);
// EXTERNAL MODULE: ./src/components/ui/IconButtonWithTooltip.tsx + 1 modules
var ui_IconButtonWithTooltip = __webpack_require__(71973);
;// CONCATENATED MODULE: ./src/components/buttons/GitHubButton.tsx
// tslint:disable-next-line: match-default-export-name no-submodule-imports



function GitHubButton(props) {
  var {
    repo,
    size,
    className
  } = props;
  var url = repo;

  if (!/^\//.test(url) && !/^https:\/\//.test(url) && !/^https:\/\/github.com\//.test(url)) {
    url = "https://github.com/" + url;
  }

  return /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    trackName: "github.open",
    title: "open " + url,
    className: className,
    to: url,
    size: size,
    color: "inherit",
    edge: "start"
  }, /*#__PURE__*/react.createElement(GitHub/* default */.Z, null));
}
// EXTERNAL MODULE: ./node_modules/@mui/material/Badge/Badge.js + 3 modules
var Badge = __webpack_require__(97321);
// EXTERNAL MODULE: ./src/components/icons/JacdacIcon.tsx
var JacdacIcon = __webpack_require__(36656);
// EXTERNAL MODULE: ./src/components/hooks/useDevices.ts
var useDevices = __webpack_require__(53074);
;// CONCATENATED MODULE: ./src/components/hooks/useDeviceCount.ts

function useDeviceCount(options, deps) {
  var devices = (0,useDevices/* default */.Z)(options, deps);
  return devices.length;
}
;// CONCATENATED MODULE: ./src/components/buttons/OpenDashboardButton.tsx





function OpenDashboardButton(props) {
  var {
    className
  } = props;
  var count = useDeviceCount({
    ignoreInfrastructure: true
  });
  return /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    trackName: "menu.dashboard",
    className: className,
    title: "Device Dashboard",
    edge: "start",
    color: "inherit",
    to: "/dashboard/"
  }, /*#__PURE__*/react.createElement(Badge/* default */.Z, {
    color: "secondary",
    badgeContent: count
  }, /*#__PURE__*/react.createElement(JacdacIcon/* default */.Z, null)));
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pretty.ts
var pretty = __webpack_require__(10913);
// EXTERNAL MODULE: ./src/jacdac/Context.tsx
var Context = __webpack_require__(20392);
// EXTERNAL MODULE: ./src/jacdac/useChange.ts
var useChange = __webpack_require__(54774);
;// CONCATENATED MODULE: ./src/components/shell/PacketStats.tsx







function PacketStats() {
  var {
    bus
  } = (0,react.useContext)(Context/* default */.Z);
  var {
    stats: packetStats
  } = bus;
  var {
    mobile
  } = (0,useMediaQueries/* default */.Z)();
  var current = (0,useChange/* default */.Z)(packetStats, _ => _.current);
  var {
    diagnostics
  } = flags/* default */.Z;
  if (mobile || !current.bytes) return null;
  var label = current.packets + " packets per second, " + (0,pretty/* prettySize */.or)(current.bytes) + " per second";
  var text = diagnostics ? (current.packets | 0) + "#, " + (0,pretty/* prettySize */.or)(current.bytes) + "/s" : (0,pretty/* prettySize */.or)(current.bytes) + "/s";
  return /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    variant: "caption",
    component: "span",
    "aria-label": label
  }, text);
}
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Forum.js
var Forum = __webpack_require__(57759);
// EXTERNAL MODULE: ./src/jacdac/providerbus.ts + 19 modules
var providerbus = __webpack_require__(24725);
// EXTERNAL MODULE: ./src/components/ui/HideOnScroll.tsx + 1 modules
var HideOnScroll = __webpack_require__(5590);
;// CONCATENATED MODULE: ./src/components/buttons/OpenVMEditorButton.tsx



function OpenVMEditorButton(props) {
  var {
    className
  } = props;
  return /*#__PURE__*/React.createElement(IconButtonWithTooltip, {
    trackName: "menu.vm",
    className: className,
    title: "Block Editor",
    edge: "start",
    color: "inherit",
    to: "/editors/vm/"
  }, /*#__PURE__*/React.createElement(ExtensionIcon, null));
}
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/DevicesOther.js
var DevicesOther = __webpack_require__(48888);
;// CONCATENATED MODULE: ./src/components/ui/BridgeButtons.tsx






function BridgeButton(props) {
  var {
    bridge,
    className
  } = props;

  var handleClick = () => bridge.bus = undefined;

  return /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    className: className,
    color: "inherit",
    title: "disconnect " + bridge.bridgeId,
    onClick: handleClick
  }, /*#__PURE__*/react.createElement(DevicesOther/* default */.Z, null));
}

function BridgeButtons(props) {
  var {
    className
  } = props;
  var {
    bus
  } = (0,react.useContext)(Context/* default */.Z);
  var bridges = (0,useChange/* default */.Z)(bus, _ => _ === null || _ === void 0 ? void 0 : _.bridges);
  if (!(bridges !== null && bridges !== void 0 && bridges.length)) return null;
  return /*#__PURE__*/react.createElement(react.Fragment, null, bridges.map(bridge => /*#__PURE__*/react.createElement(BridgeButton, {
    key: bridge.bridgeId,
    bridge: bridge,
    className: className
  })));
}
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Build.js
var Build = __webpack_require__(42324);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Menu.js
var Menu = __webpack_require__(47358);
;// CONCATENATED MODULE: ./src/components/shell/DrawerToolsButton.tsx
 // tslint:disable-next-line: no-submodule-imports





function DrawerToolsButton(props) {
  var {
    className
  } = props;
  var {
    setDrawerType
  } = (0,react.useContext)(AppContext/* default */.ZP);

  var handleDrawer = drawerType => () => setDrawerType(drawerType);

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    title: "Documentation",
    className: className,
    trackName: "menu.drawer.toc",
    color: "inherit",
    onClick: handleDrawer(AppContext/* DrawerType.Toc */.jw.Toc),
    edge: "start"
  }, /*#__PURE__*/react.createElement(Menu/* default */.Z, null)), /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    title: "Tools",
    className: className,
    trackName: "menu.drawer.tools",
    color: "inherit",
    onClick: handleDrawer(AppContext/* DrawerType.Dom */.jw.Dom),
    edge: "start"
  }, /*#__PURE__*/react.createElement(Build/* default */.Z, null)));
}
// EXTERNAL MODULE: ./src/components/buttons/ConnectButtons.tsx
var ConnectButtons = __webpack_require__(45608);
;// CONCATENATED MODULE: ./src/components/shell/MainAppBar.tsx







 // tslint:disable-next-line: no-submodule-imports

















var InstallPWAButton = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 8849).then(__webpack_require__.bind(__webpack_require__, 38849)));
var MainAppBar_PREFIX = "MainAppBar";
var MainAppBar_classes = {
  grow: MainAppBar_PREFIX + "-grow",
  appBar: MainAppBar_PREFIX + "-appBar",
  appBarShift: MainAppBar_PREFIX + "-appBarShift",
  tocBarShift: MainAppBar_PREFIX + "-tocBarShift",
  toolBarShift: MainAppBar_PREFIX + "-toolBarShift",
  menuButton: MainAppBar_PREFIX + "-menuButton",
  hideMobile: MainAppBar_PREFIX + "-hideMobile"
};
var MainAppBar_Root = (0,styled/* default */.ZP)("div")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + MainAppBar_classes.grow]: {
      flexGrow: 1
    },
    ["& ." + MainAppBar_classes.appBar]: {
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen
      })
    },
    ["& ." + MainAppBar_classes.appBarShift]: {
      width: "calc(100% - " + DRAWER_WIDTH + "rem)",
      marginLeft: DRAWER_WIDTH + "rem",
      [theme.breakpoints.down(MOBILE_BREAKPOINT)]: {
        width: "calc(100% - " + MOBILE_DRAWER_WIDTH + "rem)",
        marginLeft: MOBILE_DRAWER_WIDTH + "rem"
      },
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    },
    ["& ." + MainAppBar_classes.tocBarShift]: {
      width: "calc(100% - " + TOC_DRAWER_WIDTH + "rem)",
      marginLeft: TOC_DRAWER_WIDTH + "rem",
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    },
    ["& ." + MainAppBar_classes.toolBarShift]: {
      width: "calc(100% - " + TOOLS_DRAWER_WIDTH + "rem)",
      marginRight: TOOLS_DRAWER_WIDTH + "rem",
      [theme.breakpoints.down(MOBILE_BREAKPOINT)]: {
        width: "calc(100% - " + MOBILE_TOOLS_DRAWER_WIDTH + "rem)",
        marginRight: MOBILE_TOOLS_DRAWER_WIDTH + "rem"
      },
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    },
    ["& ." + MainAppBar_classes.menuButton]: {
      marginRight: theme.spacing(1)
    },
    ["& ." + MainAppBar_classes.hideMobile]: {
      [theme.breakpoints.down("lg")]: {
        display: "none"
      }
    }
  };
});

function MainToolbar() {
  var {
    drawerType,
    toolsMenu,
    setToolsMenu
  } = (0,react.useContext)(AppContext/* default */.ZP);
  var drawerOpen = drawerType !== AppContext/* DrawerType.None */.jw.None;

  var toggleToolsMenu = () => setToolsMenu(!toolsMenu);

  return /*#__PURE__*/react.createElement(Toolbar/* default */.Z, null, drawerType === AppContext/* DrawerType.None */.jw.None && /*#__PURE__*/react.createElement(DrawerToolsButton, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton, drawerOpen && MainAppBar_classes.hideMobile)
  }), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {
    implementation: "css",
    smDown: true
  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    component: "h1",
    variant: "h6"
  }, /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* Link */.rU, {
    style: {
      color: providerbus/* UIFlags.widget */.A.widget ? "black" : "white"
    },
    to: "/",
    underline: "hover"
  }, "Jacdac"))), /*#__PURE__*/react.createElement("div", {
    className: MainAppBar_classes.grow
  }), flags/* default.diagnostics */.Z.diagnostics && /*#__PURE__*/react.createElement(PacketStats, null), /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: null
  }, /*#__PURE__*/react.createElement(InstallPWAButton, {
    color: "inherit",
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton)
  })), /*#__PURE__*/react.createElement(BridgeButtons, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton)
  }), /*#__PURE__*/react.createElement(ConnectButtons/* default */.Z, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton),
    transparent: true,
    full: "disconnected"
  }), /*#__PURE__*/react.createElement(OpenDashboardButton, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton)
  }),  false && /*#__PURE__*/0, /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton, drawerOpen && MainAppBar_classes.hideMobile),
    "aria-label": "Discussions",
    title: "Discussions",
    edge: "start",
    color: "inherit",
    to: "https://github.com/microsoft/jacdac/discussions"
  }, /*#__PURE__*/react.createElement(Forum/* default */.Z, null)), /*#__PURE__*/react.createElement(GitHubButton, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton, drawerOpen && MainAppBar_classes.hideMobile),
    repo: "/github"
  }), /*#__PURE__*/react.createElement(ui_IconButtonWithTooltip/* default */.Z, {
    className: (0,clsx_m["default"])(MainAppBar_classes.menuButton, drawerOpen && MainAppBar_classes.hideMobile),
    "aria-label": "More tools",
    title: "More",
    edge: "start",
    color: "inherit",
    onClick: toggleToolsMenu
  }, /*#__PURE__*/react.createElement(MoreVert/* default */.Z, null)));
}

function MainAppBar() {
  var {
    drawerType,
    toolsMenu
  } = (0,react.useContext)(AppContext/* default */.ZP);
  var {
    darkMode
  } = (0,react.useContext)(DarkModeContext/* default */.Z);
  var drawerOpen = drawerType !== AppContext/* DrawerType.None */.jw.None;
  var appBarColor = darkMode === "dark" ? "inherit" : providerbus/* UIFlags.widget */.A.widget ? "default" : undefined;
  return /*#__PURE__*/react.createElement(MainAppBar_Root, null, /*#__PURE__*/react.createElement(Box/* default */.Z, {
    displayPrint: "none"
  }, /*#__PURE__*/react.createElement(HideOnScroll/* HideOnScroll */.F, null, /*#__PURE__*/react.createElement(AppBar/* default */.Z, {
    position: "fixed",
    color: appBarColor,
    className: (0,clsx_m["default"])(MainAppBar_classes.appBar, {
      [MainAppBar_classes.tocBarShift]: drawerType === AppContext/* DrawerType.Toc */.jw.Toc,
      [MainAppBar_classes.appBarShift]: drawerOpen && drawerType !== AppContext/* DrawerType.Toc */.jw.Toc,
      [MainAppBar_classes.toolBarShift]: toolsMenu
    })
  }, /*#__PURE__*/react.createElement(MainToolbar, null)))));
}
// EXTERNAL MODULE: ./src/components/shell/DataEditorAppBar.tsx
var DataEditorAppBar = __webpack_require__(3038);
// EXTERNAL MODULE: ./node_modules/@mui/material/AlertTitle/AlertTitle.js + 1 modules
var AlertTitle = __webpack_require__(89132);
;// CONCATENATED MODULE: ./src/components/layout.tsx


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }























var layout_PREFIX = "Layout";
var layout_classes = {
  root: layout_PREFIX + "-root",
  hideMobile: layout_PREFIX + "-hideMobile",
  drawerHeader: layout_PREFIX + "-drawerHeader",
  content: layout_PREFIX + "-content",
  contentPadding: layout_PREFIX + "-contentPadding",
  container: layout_PREFIX + "-container",
  mainContent: layout_PREFIX + "-mainContent",
  appBarShift: layout_PREFIX + "-appBarShift",
  tocBarShift: layout_PREFIX + "-tocBarShift",
  toolBarShift: layout_PREFIX + "-toolBarShift"
};
var layout_Root = (0,styled/* default */.ZP)("div")(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + layout_classes.root]: {
      display: "flex",
      flexGrow: 1
    },
    ["& ." + layout_classes.hideMobile]: {
      [theme.breakpoints.down("lg")]: {
        display: "none"
      }
    },
    ["& ." + layout_classes.drawerHeader]: _objectSpread(_objectSpread({
      display: "flex",
      alignItems: "center",
      padding: theme.spacing(0, 1)
    }, theme.mixins.toolbar), {}, {
      justifyContent: "flex-end"
    }),
    ["& ." + layout_classes.content]: {
      display: "flex",
      minHeight: "100vh",
      minWidth: "10rem",
      flexDirection: "column",
      transition: theme.transitions.create("margin", {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen
      }),
      flexGrow: 1,
      padding: theme.spacing(0.5)
    },
    ["& ." + layout_classes.contentPadding]: {
      padding: theme.spacing(3)
    },
    ["& ." + layout_classes.container]: {
      padding: theme.spacing(3)
    },
    ["& ." + layout_classes.mainContent]: {
      flexGrow: 1
    },
    ["& ." + layout_classes.appBarShift]: {
      width: "calc(100% - " + DRAWER_WIDTH + "rem)",
      marginLeft: DRAWER_WIDTH + "rem",
      [theme.breakpoints.down(MOBILE_BREAKPOINT)]: {
        width: "calc(100% - " + MOBILE_DRAWER_WIDTH + "rem)",
        marginLeft: MOBILE_DRAWER_WIDTH + "rem"
      },
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    },
    ["& ." + layout_classes.tocBarShift]: {
      width: "calc(100% - " + TOC_DRAWER_WIDTH + "rem)",
      marginLeft: TOC_DRAWER_WIDTH + "rem",
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    },
    ["& ." + layout_classes.toolBarShift]: {
      width: "calc(100% - " + TOOLS_DRAWER_WIDTH + "rem)",
      marginRight: TOOLS_DRAWER_WIDTH + "rem",
      marginLeft: "-" + TOOLS_DRAWER_WIDTH + "rem",
      [theme.breakpoints.down(MOBILE_BREAKPOINT)]: {
        width: "calc(100% - " + MOBILE_TOOLS_DRAWER_WIDTH + "rem)",
        marginRight: MOBILE_TOOLS_DRAWER_WIDTH + "rem"
      },
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen
      })
    }
  };
});
var TraceAlert = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(8809)]).then(__webpack_require__.bind(__webpack_require__, 88809)));
var WebDiagnostics = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 3828).then(__webpack_require__.bind(__webpack_require__, 3828)));
var AppDrawer = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(1367)]).then(__webpack_require__.bind(__webpack_require__, 41367)));
var ToolsDrawer = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(4986)]).then(__webpack_require__.bind(__webpack_require__, 74986)));
var WebCam = /*#__PURE__*/(0,react.lazy)(() => Promise.all(/* import() */[__webpack_require__.e(317), __webpack_require__.e(4203)]).then(__webpack_require__.bind(__webpack_require__, 74203)));
var TOC_DRAWER_WIDTH = 18;
var DRAWER_WIDTH = 40;
var TOOLS_DRAWER_WIDTH = 22;
var MOBILE_DRAWER_WIDTH = 20;
var MOBILE_TOOLS_DRAWER_WIDTH = 18;
var MOBILE_BREAKPOINT = "sm";
var MEDIUM_BREAKPOINT = "md";
function Layout(props) {
  return /*#__PURE__*/react.createElement(DarkModeProvider/* default */.Z, null, /*#__PURE__*/react.createElement(LayoutWithDarkMode, props));
}

function LayoutWithDarkMode(props) {
  var {
    element,
    props: pageProps
  } = props;
  var {
    pageContext,
    path
  } = pageProps;
  var {
    frontmatter
  } = pageContext || {};
  var makeCodeTool = /tools\/makecode-/.test(path);
  var {
    fullScreen
  } = frontmatter || {
    fullScreen: makeCodeTool
  };
  var {
    darkModeMounted
  } = (0,react.useContext)(DarkModeContext/* default */.Z);
  if (!darkModeMounted) return /*#__PURE__*/react.createElement("div", null);else if (fullScreen) return element;else return /*#__PURE__*/react.createElement(LayoutWithMdx, props);
}

function LayoutWithMdx(props) {
  var {
    darkMode
  } = (0,react.useContext)(DarkModeContext/* default */.Z);
  var isDark = darkMode === "dark";
  var themeDef = {
    palette: {
      primary: {
        main: isDark ? "#56d364" : "#2e7d32"
      },
      secondary: {
        main: "#ffc400"
      },
      contrastThreshold: isDark ? 5.1 : 3.1,
      mode: darkMode
    }
  };
  var rawTheme = (0,createTheme/* default */.Z)(themeDef);
  var theme = (0,responsiveFontSizes/* default */.Z)(rawTheme);
  return /*#__PURE__*/react.createElement(ThemedMdxLayout, {
    theme: theme
  }, /*#__PURE__*/react.createElement(LayoutWithContext, props));
}

var UNDER_CONSTRUCTION_BODY = "Jacdac is currently in preview. If you would like to join as a pre-release test partner, please email jacdac-tap@microsoft.com.";

function LayoutWithContext(props) {
  var {
    element,
    props: pageProps
  } = props;
  var {
    pageContext,
    path,
    location
  } = pageProps;
  var {
    frontmatter
  } = pageContext || {};
  var isHosted = providerbus/* UIFlags.hosted */.A.hosted;
  var tools = /^\/tools\//.test(path);
  var makeCodeTool = /tools\/makecode-/.test(path);
  var fullWidthTools = /^\/editors\/\w+\/$/.test(path) || /^\/(tools\/makecode-|dashboard)/.test(path) || !!(frontmatter !== null && frontmatter !== void 0 && frontmatter.fullWidth);
  var isDataEditor = /^\/editors\/data/.test(path);
  var {
    hideMainMenu = false,
    hideUnderConstruction = false,
    hideBreadcrumbs = false
  } = frontmatter || {
    hideMainMenu: isHosted || makeCodeTool,
    hideUnderConstruction: isDataEditor || makeCodeTool || fullWidthTools,
    hideBreadcrumbs: isDataEditor || tools || fullWidthTools
  };
  var appBar = hideMainMenu ? undefined : isDataEditor ? /*#__PURE__*/react.createElement(DataEditorAppBar/* default */.Z, null) : /*#__PURE__*/react.createElement(MainAppBar, null);
  var title = isDataEditor ? "Data Science Editor (Experimental)" : (pageContext === null || pageContext === void 0 ? void 0 : pageContext.title) || (frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.title) || undefined;
  var {
    darkMode
  } = (0,react.useContext)(DarkModeContext/* default */.Z);
  var {
    drawerType,
    toolsMenu,
    showWebCam
  } = (0,react.useContext)(AppContext/* default */.ZP);
  var drawerOpen = drawerType !== AppContext/* DrawerType.None */.jw.None;
  var {
    medium
  } = (0,useMediaQueries/* default */.Z)();
  var container = !medium && !fullWidthTools; // && path !== "/"

  var mainClasses = (0,clsx_m["default"])(layout_classes.content, {
    [layout_classes.container]: container,
    [layout_classes.contentPadding]: !fullWidthTools,
    [layout_classes.tocBarShift]: drawerType === AppContext/* DrawerType.Toc */.jw.Toc,
    [layout_classes.appBarShift]: drawerOpen && drawerType !== AppContext/* DrawerType.Toc */.jw.Toc,
    [layout_classes.toolBarShift]: toolsMenu
  });

  var InnerMainSection = () => /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(TraceAlert, null)), !hideUnderConstruction && /*#__PURE__*/react.createElement(Alert/* default */.Z, {
    closeable: true,
    severity: "warning"
  }, /*#__PURE__*/react.createElement(AlertTitle/* default */.Z, null, "Partner Preview"), UNDER_CONSTRUCTION_BODY), flags/* default.diagnostics */.Z.diagnostics && /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(WebDiagnostics, null)), !hideBreadcrumbs && location && /*#__PURE__*/react.createElement(ui_Breadcrumbs_Breadcrumbs, {
    location: location
  }), fullWidthTools ? element : /*#__PURE__*/react.createElement(Typography/* default */.Z, {
    className: "markdown",
    component: "span"
  }, element));

  var MainSection = () => /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("main", {
    className: layout_classes.mainContent
  }, !hideMainMenu && /*#__PURE__*/react.createElement("div", {
    className: layout_classes.drawerHeader
  }), container ? /*#__PURE__*/react.createElement(Container_Container, null, /*#__PURE__*/react.createElement(InnerMainSection, null)) : /*#__PURE__*/react.createElement(InnerMainSection, null)), /*#__PURE__*/react.createElement(Footer, null));

  return /*#__PURE__*/react.createElement(layout_Root, null, /*#__PURE__*/react.createElement("div", {
    className: (0,clsx_m["default"])(darkMode, layout_classes.root)
  }, /*#__PURE__*/react.createElement("header", null, /*#__PURE__*/react.createElement(SEO, {
    lang: "en",
    title: title
  })), !hideMainMenu && /*#__PURE__*/react.createElement("nav", null, appBar, drawerType !== AppContext/* DrawerType.None */.jw.None && /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(AppDrawer, {
    pagePath: path
  })), toolsMenu && /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(ToolsDrawer, null))), container ? /*#__PURE__*/react.createElement(Container_Container, {
    maxWidth: "xl",
    disableGutters: true,
    className: mainClasses
  }, /*#__PURE__*/react.createElement(MainSection, null)) : /*#__PURE__*/react.createElement("div", {
    className: mainClasses
  }, /*#__PURE__*/react.createElement(MainSection, null)), showWebCam && /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(WebCam, null))));
}

/***/ }),

/***/ 71003:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ MakeCodeExtensions; }
/* harmony export */ });
/* harmony import */ var gatsby__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35313);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _ui_PageLinkList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(85748);



function MakeCodeExtensions() {
  var query = (0,gatsby__WEBPACK_IMPORTED_MODULE_0__.useStaticQuery)("3823652713");
  var nodes = query.allMdx.edges.map(edge => edge.node).sort((l, r) => l.fields.slug.localeCompare(r.fields.slug));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ui_PageLinkList__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    nodes: nodes.map(_ref => {
      var _headings$;

      var {
        fields,
        frontmatter,
        headings
      } = _ref;
      return {
        slug: fields.slug,
        title: frontmatter.title || (headings === null || headings === void 0 ? void 0 : (_headings$ = headings[0]) === null || _headings$ === void 0 ? void 0 : _headings$.value)
      };
    })
  });
}

/***/ }),

/***/ 86206:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ MakeCodeProjects; }
/* harmony export */ });
/* harmony import */ var gatsby__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35313);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _ui_PageLinkList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(85748);



function MakeCodeProjects() {
  var query = (0,gatsby__WEBPACK_IMPORTED_MODULE_0__.useStaticQuery)("2648275777");
  var nodes = query.allMdx.edges.map(edge => edge.node).sort((l, r) => l.fields.slug.localeCompare(r.fields.slug));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ui_PageLinkList__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    nodes: nodes.map(_ref => {
      var _headings$;

      var {
        fields,
        frontmatter,
        headings
      } = _ref;
      return {
        slug: fields.slug,
        title: frontmatter.title || (headings === null || headings === void 0 ? void 0 : (_headings$ = headings[0]) === null || _headings$ === void 0 ? void 0 : _headings$.value)
      };
    })
  });
}

/***/ }),

/***/ 54888:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u": function() { return /* binding */ MakeCodeSnippetProvider; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34093);


var editors = {
  arcade: "https://arcade.makecode.com/",
  microbit: "https://makecode.microbit.org/",
  maker: "https://maker.makecode.com/"
};
var MakeCodeSnippetContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  editor: undefined,
  setEditor: () => {},
  rendererUrl: undefined,
  simUrl: undefined
});
MakeCodeSnippetContext.displayName = "MakeCode";
/* harmony default export */ __webpack_exports__["Z"] = (MakeCodeSnippetContext);
function MakeCodeSnippetProvider(props) {
  var [editor, setEditor] = (0,_hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)("mdcd:editor", "blocks");
  var {
    children
  } = props;
  var useLocalhost = typeof window !== "undefined" && /localhostmakecode=1/.test(window.location.search);
  var rendererUrl = useLocalhost ? "http://localhost:3232/--docs" : editors["microbit"] + "---docs";
  var simUrl = useLocalhost ? "http://localhost:3232/--run" : editors["microbit"] + "---run";
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MakeCodeSnippetContext.Provider, {
    value: {
      editor,
      setEditor,
      rendererUrl,
      simUrl
    }
  }, children);
}

/***/ }),

/***/ 43380:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Iy": function() { return /* binding */ decodePacketMessage; }
/* harmony export */ });
/* unused harmony export IFrameBridgeClient */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97326);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94578);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_ts_src_jdom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47235);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31028);
/* harmony import */ var _jacdac_ts_src_jdom_packet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57683);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81794);
/* harmony import */ var _jacdac_ts_src_jdom_iframeclient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9809);










function decodePacketMessage(bus, msg) {
  // try frame format (sent by hardware, hosts)
  var pkts = _jacdac_ts_src_jdom_packet__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromFrame */ .Z.fromFrame(msg.data, bus.timestamp);

  if (!pkts.length) {
    // try as a single packet (send by the MakeCode simulator)
    var pkt = _jacdac_ts_src_jdom_packet__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromBinary */ .Z.fromBinary(msg.data, bus.timestamp);
    pkts = pkt && [pkt];
  }

  return pkts;
}
var ignoredServices = [_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_CONTROL */ .gm9, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_LOGGER */ .w9j, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_SETTINGS */ .B9b, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_ROLE_MANAGER */ .igi, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_PROTO_TEST */ .$Bn, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_PROXY */ .Ahc, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_UNIQUE_BRAIN */ .U9t, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SRV_INFRASTRUCTURE */ .QWn];
/**
 * A client that bridges received and sent packets to a parent iframe
 * @internal
 */

var IFrameBridgeClient = /*#__PURE__*/function (_JDClient) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(IFrameBridgeClient, _JDClient);

  // this is a unique id used to trace packets sent by this bridge
  function IFrameBridgeClient(bus, frameId) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this.bridgeId = "bridge" + Math.random();
    _this.hosted = (0,_jacdac_ts_src_jdom_iframeclient__WEBPACK_IMPORTED_MODULE_6__/* .inIFrame */ .H)();
    _this.packetSent = 0;
    _this.packetProcessed = 0;
    _this._lastAspectRatio = 0;
    _this.bus = bus;
    _this.frameId = frameId;
    _this.postPacket = _this.postPacket.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_this));
    _this.handleMessage = _this.handleMessage.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_this));
    _this.handleResize = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__/* .debounce */ .Ds)(_this.handleResize.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_this)), 200);

    _this.registerEvents();

    _this.bus.nodeData[IFrameBridgeClient.DATA_ID] = (0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(_this);
    return _this;
  }

  var _proto = IFrameBridgeClient.prototype;

  _proto.isOriginValid = function isOriginValid(msg) {
    return this.origin === "*" || msg.origin === this.origin;
  };

  _proto.registerEvents = function registerEvents() {
    console.debug("jdiframe: listening for packets");
    this.mount(this.bus.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .PACKET_PROCESS */ .wY8, this.postPacket));
    this.mount(this.bus.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .PACKET_SEND */ .RaS, this.postPacket));
    this.mount(this.bus.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .DEVICE_ANNOUNCE */ .Hob, this.handleResize)); // force compute add blocks button

    this.mount(this.bus.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .DEVICE_ANNOUNCE */ .Hob, () => this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver)));
    window.addEventListener("message", this.handleMessage, false);
    this.mount(() => window.removeEventListener("message", this.handleMessage, false));

    if (this.hosted) {
      // periodically resize iframe to account for dashboard size changes
      // don't use bus.schedulere here
      var id = setInterval(this.handleResize, 1000);
      this.mount(() => clearInterval(id)); // handle received frame id

      var frameid = window.location.hash.slice(1);
      console.debug({
        frameid
      }); // notify makecode we are ready

      window.parent.postMessage({
        type: "ready",
        frameid
      }, "*");
    }
  };

  _proto.handleMessage = function handleMessage(event) {
    if (!this.isOriginValid(event)) return;
    var {
      data
    } = event;
    var msg = data;

    if (msg && msg.channel === "jacdac" && msg.type === "messagepacket") {
      this.handleMessageJacdac(msg);
    } else if ((data === null || data === void 0 ? void 0 : data.source) === "pxtdriver") {
      this.handleDriverMessage(data);
    } else {// unknown message
      // console.log({ data })
    }
  };

  _proto.handleDriverMessage = function handleDriverMessage(msg) {
    //console.log("pxt message", msg)
    switch (msg.type) {
      case "run":
        {
          // simulation is starting
          this._runOptions = msg;
          this.emit(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .CHANGE */ .Ver);
          break;
        }

      case "stop":
        // start again
        this._runOptions = undefined;
        break;
    }
  };

  _proto.handleResize = function handleResize() {
    var {
      body
    } = document;
    var size = body.getBoundingClientRect();
    var ar = size.width / (size.height + 12);
    var value = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__/* .roundWithPrecision */ .JI)(Math.min(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMBED_MIN_ASPECT_RATIO */ .rFG, size.width / size.height), 4);

    if (!isNaN(ar) && this._lastAspectRatio !== value) {
      window.parent.postMessage({
        type: "aspectratio",
        value,
        frameid: this.frameId,
        sender: this.bridgeId
      }, "*");
      this._lastAspectRatio = value;
    }
  };

  _proto.handleMessageJacdac = function handleMessageJacdac(msg) {
    if (msg.sender === this.bridgeId) // returning packet
      return;
    var pkts = decodePacketMessage(this.bus, msg); // bail out if unknown packet

    if (!pkts) return;
    this.packetProcessed += pkts.length;

    for (var pkt of pkts) {
      // we're adding a little trace to avoid resending our own packets
      pkt.sender = this.bridgeId; // send to native bus

      this.bus.sendPacketAsync(pkt); // send to javascript bus

      this.bus.processPacket(pkt);
    }
  };

  _proto.postPacket = function postPacket(pkt) {
    // check if this packet was already sent from another spot
    if (/^bridge/.test(pkt.sender) || !this.hosted) return;
    this.packetSent++;
    pkt.sender = this.bridgeId;
    var msg = {
      type: "messagepacket",
      channel: "jacdac",
      broadcast: true,
      data: pkt.toBuffer(),
      sender: this.bridgeId
    };
    window.parent.postMessage(msg, this.origin);
  };

  _proto.deviceFilter = function deviceFilter(device) {
    return device.services().some(srv => this.serviceFilter(srv));
  };

  _proto.serviceFilter = function serviceFilter(srv) {
    return ignoredServices.indexOf(srv.serviceClass) < 0;
  };

  _proto.postAddExtensions = function postAddExtensions() {
    var _this$_runOptions;

    if (!this.hosted) return;
    var extensions = this.candidateExtensions;
    console.log("addextensions", {
      extensions,
      deps: (_this$_runOptions = this._runOptions) === null || _this$_runOptions === void 0 ? void 0 : _this$_runOptions.dependencies
    }); // list all devices connected to the bus
    // and query for them, let makecode show the missing ones
    // send message to makecode

    window.parent.postMessage({
      type: "addextensions",
      extensions,
      broadcast: true
    }, "*");
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(IFrameBridgeClient, [{
    key: "origin",
    get: function get() {
      return this.bus.parentOrigin;
    }
  }, {
    key: "dependencies",
    get: function get() {
      var _this$_runOptions2;

      return (_this$_runOptions2 = this._runOptions) === null || _this$_runOptions2 === void 0 ? void 0 : _this$_runOptions2.dependencies;
    }
  }, {
    key: "candidateExtensions",
    get: function get() {
      var _this$_runOptions3;

      if (!this.packetProcessed && !this._runOptions) // bridge is not active
        return [];
      var devices = this.bus.devices({
        announced: true,
        ignoreInfrastructure: true
      }).filter(this.deviceFilter.bind(this));
      var extensions = (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__/* .unique */ .Tw)((0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_4__/* .arrayConcatMany */ .ue)(devices.map(device => device.services().map(srv => (0,_services__WEBPACK_IMPORTED_MODULE_2__/* .resolveMakecodeServiceFromClassIdentifier */ .WB)(srv.serviceClass)).map(info => info === null || info === void 0 ? void 0 : info.client.repo).filter(q => !!q))));
      var dependencies = Object.values(((_this$_runOptions3 = this._runOptions) === null || _this$_runOptions3 === void 0 ? void 0 : _this$_runOptions3.dependencies) || {}).filter(d => /^github:/.test(d)).map(d => /^github:([^#]+)(#.?)?/.exec(d)[1]);

      if ((dependencies === null || dependencies === void 0 ? void 0 : dependencies.length) > 0) {
        // remove all needed extenions that are already in the dependencies
        extensions = extensions.filter(extension => {
          //console.log(`check ext`, { extension })
          return dependencies.indexOf(extension) < 0;
        });
      }

      return extensions;
    }
  }]);

  return IFrameBridgeClient;
}(_jacdac_ts_src_jdom_client__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
IFrameBridgeClient.DATA_ID = "makecodeiframeclient";
/* harmony default export */ __webpack_exports__["ZP"] = (IFrameBridgeClient);

/***/ }),

/***/ 31028:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "qs": function() { return /* binding */ makeCodeServices; },
  "K9": function() { return /* binding */ resolveMakecodeService; },
  "WB": function() { return /* binding */ resolveMakecodeServiceFromClassIdentifier; }
});

;// CONCATENATED MODULE: ./jacdac-ts/jacdac-spec/services/makecode-extensions.json
var makecode_extensions_namespaceObject = JSON.parse('[{"service":"accelerometer","client":{"name":"jacdac-accelerometer","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/accelerometer","qName":"modules.AccelerometerClient","default":"modules.accelerometer"}},{"service":"azureiothubhealth","client":{"name":"jacdac-azure-iot-hub-health","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/azure-iot-hub-health","qName":"modules.AzureIotHubHealthClient","default":"modules.azureIotHubHealth"}},{"service":"barometer","client":{"name":"jacdac-barometer","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/barometer","qName":"modules.BarometerClient","default":"modules.barometer"}},{"service":"button","client":{"name":"jacdac-button","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/button","qName":"modules.ButtonClient","default":"modules.button"}},{"service":"buzzer","client":{"name":"jacdac-buzzer","targets":["arcade","maker"],"repo":"microsoft/pxt-jacdac/buzzer","qName":"modules.BuzzerClient","default":"modules.buzzer"}},{"service":"characterscreen","client":{"name":"jacdac-character-screen","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/character-screen","qName":"modules.CharacterScreenClient","default":"modules.characterScreen"}},{"service":"codalmessagebus","client":{"name":"jacdac-codal-message-bus","targets":["microbit","arcade","maker"],"repo":"microsoft/pxt-jacdac/codal-message-bus","qName":"modules.CodalMessageBusClient","default":"modules.codalMessageBus"}},{"service":"color","client":{"name":"jacdac-color","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/color","qName":"modules.ColorClient","default":"modules.color"}},{"service":"compass","client":{"name":"jacdac-compass","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/compass","qName":"modules.CompassClient","default":"modules.compass"}},{"service":"distance","client":{"name":"jacdac-distance","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/distance","qName":"modules.DistanceClient","default":"modules.distance"}},{"service":"dmx","client":{"name":"jacdac-dmx","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/dmx","qName":"modules.DmxClient","default":"modules.dmx"}},{"service":"dotmatrix","client":{"name":"jacdac-dot-matrix","targets":["microbit","arcade","maker"],"repo":"microsoft/pxt-jacdac/dot-matrix","qName":"modules.DotMatrixClient","default":"modules.dotMatrix"}},{"service":"eco2","client":{"name":"jacdac-e-co2","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/e-co2","qName":"modules.ECO2Client","default":"modules.eCO2"}},{"service":"flex","client":{"name":"jacdac-flex","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/flex","qName":"modules.FlexClient","default":"modules.flex"}},{"service":"gyroscope","client":{"name":"jacdac-gyroscope","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/gyroscope","qName":"modules.GyroscopeClient","default":"modules.gyroscope"}},{"service":"heartrate","client":{"name":"jacdac-heart-rate","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/heart-rate","qName":"modules.HeartRateClient","default":"modules.heartRate"}},{"service":"hidkeyboard","client":{"name":"jacdac-hid-keyboard","targets":["arcade","maker"],"repo":"microsoft/pxt-jacdac/hid-keyboard","qName":"modules.HidKeyboardClient","default":"modules.hidKeyboard"}},{"service":"hidmouse","client":{"name":"jacdac-hid-mouse","targets":["arcade","maker"],"repo":"microsoft/pxt-jacdac/hid-mouse","qName":"modules.HidMouseClient","default":"modules.hidMouse"}},{"service":"humidity","client":{"name":"jacdac-humidity","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/humidity","qName":"modules.HumidityClient","default":"modules.humidity"}},{"service":"illuminance","client":{"name":"jacdac-illuminance","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/illuminance","qName":"modules.IlluminanceClient","default":"modules.illuminance"}},{"service":"joystick","client":{"name":"jacdac-joystick","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/joystick","qName":"modules.JoystickClient","default":"modules.joystick"}},{"service":"led","client":{"name":"jacdac-led","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/led","qName":"modules.LedClient","default":"modules.led"}},{"service":"ledpixel","client":{"name":"jacdac-led-pixel","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/led-pixel","qName":"modules.LedPixelClient","default":"modules.ledPixel"}},{"service":"lightbulb","client":{"name":"jacdac-light-bulb","targets":["microbit","arcade","maker"],"repo":"microsoft/pxt-jacdac/light-bulb","qName":"modules.LightBulbClient","default":"modules.lightBulb"}},{"service":"lightlevel","client":{"name":"jacdac-light-level","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/light-level","qName":"modules.LightLevelClient","default":"modules.lightLevel"}},{"service":"magnetomer","client":{"name":"jacdac-magnetometer","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/magnetometer","qName":"modules.MagnetometerClient","default":"modules.magnetometer"}},{"service":"modelrunner","client":{"name":"jacdac-model-runner","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/model-runner","qName":"modules.ModelRunnerClient","default":"modules.modelRunner"}},{"service":"motion","client":{"name":"jacdac-motion","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/motion","qName":"modules.MotionClient","default":"modules.motion"}},{"service":"motor","client":{"name":"jacdac-motor","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/motor","qName":"modules.MotorClient","default":"modules.motor"}},{"service":"multitouch","client":{"name":"jacdac-multitouch","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/multitouch","qName":"modules.MultitouchClient","default":"modules.multitouch"}},{"service":"potentiometer","client":{"name":"jacdac-potentiometer","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/potentiometer","qName":"modules.PotentiometerClient","default":"modules.potentiometer"}},{"service":"power","client":{"name":"jacdac-power","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/power","qName":"modules.PowerClient","default":"modules.power"}},{"service":"pulseoximeter","client":{"name":"jacdac-pulse-oximeter","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/pulse-oximeter","qName":"modules.PulseOximeterClient","default":"modules.pulseOximeter"}},{"service":"raingauge","client":{"name":"jacdac-rain-gauge","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/rain-gauge","qName":"modules.RainGaugeClient","default":"modules.rainGauge"}},{"service":"realtimeclock","client":{"name":"jacdac-real-time-clock","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/real-time-clock","qName":"modules.RealTimeClockClient","default":"modules.realTimeClock"}},{"service":"reflectedlight","client":{"name":"jacdac-reflected-light","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/reflected-light","qName":"modules.ReflectedLightClient","default":"modules.reflectedLight"}},{"service":"relay","client":{"name":"jacdac-relay","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/relay","qName":"modules.RelayClient","default":"modules.relay"}},{"service":"rotaryencoder","client":{"name":"jacdac-rotary-encoder","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/rotary-encoder","qName":"modules.RotaryEncoderClient","default":"modules.rotaryEncoder"}},{"service":"sensoraggregator","client":{"name":"jacdac-sensor-aggregator","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/sensor-aggregator","qName":"modules.SensorAggregatorClient","default":"modules.sensorAggregator"}},{"service":"servo","client":{"name":"jacdac-servo","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/servo","qName":"modules.ServoClient","default":"modules.servo"}},{"service":"soilmoisture","client":{"name":"jacdac-soil-moisture","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/soil-moisture","qName":"modules.SoilMoistureClient","default":"modules.soilMoisture"}},{"service":"solenoid","client":{"name":"jacdac-solenoid","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/solenoid","qName":"modules.SolenoidClient","default":"modules.solenoid"}},{"service":"soundlevel","client":{"name":"jacdac-sound-level","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/sound-level","qName":"modules.SoundLevelClient","default":"modules.soundLevel"}},{"service":"speechsynthesis","client":{"name":"jacdac-speech-synthesis","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/speech-synthesis","qName":"modules.SpeechSynthesisClient","default":"modules.speechSynthesis"}},{"service":"tcp","client":{"name":"jacdac-tcp","targets":["arcade","maker"],"repo":"microsoft/pxt-jacdac/tcp","qName":"modules.TcpClient","default":"modules.tcp"}},{"service":"thermocouple","client":{"name":"jacdac-thermocouple","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/thermocouple","qName":"modules.ThermocoupleClient","default":"modules.thermocouple"}},{"service":"thermometer","client":{"name":"jacdac-thermometer","targets":["arcade","maker","microbit"],"repo":"microsoft/pxt-jacdac/thermometer","qName":"modules.ThermometerClient","default":"modules.thermometer"}},{"service":"tvoc","client":{"name":"jacdac-tvoc","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/tvoc","qName":"modules.TvocClient","default":"modules.tvoc"}},{"service":"uvindex","client":{"name":"jacdac-uv-index","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/uv-index","qName":"modules.UvIndexClient","default":"modules.uvIndex"}},{"service":"vibration","client":{"name":"jacdac-vibration-motor","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/vibration-motor","qName":"modules.VibrationMotorClient","default":"modules.vibrationMotor"}},{"service":"waterlevel","client":{"name":"jacdac-water-level","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/water-level","qName":"modules.WaterLevelClient","default":"modules.waterLevel"}},{"service":"weightscale","client":{"name":"jacdac-weight-scale","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/weight-scale","qName":"modules.WeightScaleClient","default":"modules.weightScale"}},{"service":"wifi","client":{"name":"jacdac-wifi","targets":["maker"],"repo":"microsoft/pxt-jacdac/wifi","qName":"modules.WifiClient","default":"modules.wifi"}},{"service":"winddirection","client":{"name":"jacdac-wind-direction","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/wind-direction","qName":"modules.WindDirectionClient","default":"modules.windDirection"}},{"service":"windspeed","client":{"name":"jacdac-wind-speed","targets":["arcade","microbit","maker"],"repo":"microsoft/pxt-jacdac/wind-speed","qName":"modules.WindSpeedClient","default":"modules.windSpeed"}}]');
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var spec = __webpack_require__(26799);
;// CONCATENATED MODULE: ./src/components/makecode/services.ts


function makeCodeServices() {
  return makecode_extensions_namespaceObject.slice(0);
}
function resolveMakecodeService(service) {
  return service && makecode_extensions_namespaceObject.find(mk => mk.service === service.shortId);
}
function resolveMakecodeServiceFromClassIdentifier(serviceClass) {
  var srv = (0,spec/* serviceSpecificationFromClassIdentifier */.d5)(serviceClass);
  return srv && resolveMakecodeService(srv);
}

/***/ }),

/***/ 20563:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useInstanceName; }
/* harmony export */ });
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_useRegisterValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89196);
/* harmony import */ var _hooks_useRegister__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82677);



function useInstanceName(service, options) {
  var instanceNameRegister = (0,_hooks_useRegister__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(service, _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_0__/* .SystemReg.InstanceName */ .ZJq.InstanceName);
  var [instanceName] = (0,_jacdac_useRegisterValue__WEBPACK_IMPORTED_MODULE_1__/* .useRegisterUnpackedValue */ .Pf)(instanceNameRegister, options);
  return instanceName;
}

/***/ }),

/***/ 39922:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useRoleManagerClient; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_useBus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56289);



function useRoleManagerClient() {
  var bus = (0,_jacdac_useBus__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)();
  var {
    0: mgr,
    1: setMgr
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(bus.roleManager);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => bus.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .ROLE_MANAGER_CHANGE */ .kqR, () => setMgr(bus.roleManager)), [bus]);
  return mgr;
}

/***/ }),

/***/ 3038:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "m": function() { return /* binding */ FEEDBACK_URL; },
/* harmony export */   "Z": function() { return /* binding */ DataEditorAppBar; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(98348);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39211);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(71027);
/* harmony import */ var _mui_material_AppBar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(85190);
/* harmony import */ var _mui_material_Toolbar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97098);
/* harmony import */ var _mui_material_Typography__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(49308);
/* harmony import */ var _ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91350);
/* harmony import */ var _ui_HideOnScroll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5590);
/* harmony import */ var gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(36176);





 // tslint:disable-next-line: no-submodule-imports




var PREFIX = "FEEDBACK_URL";
var classes = {
  grow: PREFIX + "-grow",
  appBar: PREFIX + "-appBar",
  menuButton: PREFIX + "-menuButton"
};
var StyledBox = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + classes.grow]: {
      flexGrow: 1
    },
    ["& ." + classes.appBar]: {
      transition: theme.transitions.create(["margin", "width"], {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen
      })
    },
    ["& ." + classes.menuButton]: {
      marginRight: theme.spacing(1)
    }
  };
});
var FEEDBACK_URL = "https://github.com/microsoft/jacdac/discussions/categories/data-editor";
function DataEditorAppBar() {
  var {
    darkMode
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var appBarColor = darkMode === "dark" ? "inherit" : undefined;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledBox, {
    displayPrint: "none"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_HideOnScroll__WEBPACK_IMPORTED_MODULE_2__/* .HideOnScroll */ .F, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_AppBar__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    position: "fixed",
    color: appBarColor,
    className: classes.appBar
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Toolbar__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
    implementation: "css",
    smDown: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
    component: "h1",
    variant: "h6"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_3__/* .Link */ .rU, {
    style: {
      color: "white"
    },
    to: "/editors/data/"
  }, "Data Science Editor (Experimental)"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: classes.grow
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_3__/* .Link */ .rU, {
    className: classes.menuButton,
    "aria-label": "Learn about the data editor",
    title: "Learn about the data editor",
    color: "inherit",
    to: "/editors/data/about"
  }, "About"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_3__/* .Link */ .rU, {
    className: classes.menuButton,
    "aria-label": "Send feedback in our forums",
    title: "Send feedback in our forums",
    color: "inherit",
    href: FEEDBACK_URL
  }, "Feedback")))));
}

/***/ }),

/***/ 46977:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ DevToolsLauncher; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4320);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(65970);
/* harmony import */ var gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36176);
/* harmony import */ var _mui_icons_material_Send__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73741);




function DevToolsLauncher() {
  var {
    0: text,
    1: setText
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");
  var url = "https://microsoft.github.io/jacdac-docs/clients/javascript/devtools#" + (text || "");

  var handleChange = ev => setText(ev.target.value);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP, {
    container: true,
    spacing: 1
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP, {
    item: true,
    xs: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    type: "url",
    label: "URL",
    fullWidth: true,
    helperText: "Enter the URL to your web page using Jacdac",
    value: text,
    onChange: handleChange
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP, {
    item: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx, {
    variant: "outlined",
    href: url,
    startIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Send__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, null)
  }, "Open")));
}

/***/ }),

/***/ 99713:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ EnclosureEditor; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(76968);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(42333);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(87122);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(4320);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(49308);
/* harmony import */ var _hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34093);
/* harmony import */ var _ui_HighlightTextField__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33024);
/* harmony import */ var _mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(80766);
/* harmony import */ var _ui_Suspense__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6890);
/* harmony import */ var _ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(71973);
/* harmony import */ var react_use_id_hook__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(19640);








var EnclosureGenerator = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.lazy)(() => __webpack_require__.e(/* import() */ 4556).then(__webpack_require__.bind(__webpack_require__, 54556)));
var STORAGE_KEY = "jacdac:enclosureeditorkey_source";
var OPTIONS_STORAGE_KEY = "jacdac:enclosureeditorkey_options";
var DEFAULT_OPTIONS = {
  legs: {
    type: "well"
  },
  cover: {
    mounts: {
      type: "ring"
    }
  }
};
var modules = [{
  name: "humidity",
  box: {
    width: 32.5,
    height: 20,
    depth: 5.5
  },
  rings: [{
    x: 10,
    y: 2.5
  }, {
    x: 10,
    y: -2.5
  }, {
    x: -7.5,
    y: 2.5
  }, {
    x: -7.5,
    y: -2.5
  }],
  components: [{
    x: -5,
    y: 0,
    type: "led"
  }, {
    x: 6,
    y: 2.4,
    type: "circle",
    radius: 2
  }],
  connectors: [{
    x: -20,
    y: 0,
    dir: "left",
    type: "jacdac"
  }]
}, {
  name: "accelerometer",
  box: {
    width: 29,
    height: 22,
    depth: 5.5
  },
  rings: [{
    x: 7.5,
    y: 7.5
  }, {
    x: -7.5,
    y: -7.5
  }, {
    x: -7.5,
    y: 7.5
  }, {
    x: 7.5,
    y: -7.5
  }],
  components: [{
    x: 0,
    y: 7,
    type: "led"
  }, {
    x: 7,
    y: 3,
    type: "circle",
    radius: 4
  }],
  connectors: [{
    x: 0,
    y: 7.5,
    dir: "top",
    type: "jacdac"
  }, {
    x: 0,
    y: -7.5,
    dir: "bottom",
    type: "jacdac"
  }]
}];

function ExampleMenu(props) {
  var {
    setSource
  } = props;
  var [anchorEl, setAnchorEl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  var open = Boolean(anchorEl);
  var id = (0,react_use_id_hook__WEBPACK_IMPORTED_MODULE_5__/* .useId */ .Me)();

  var handleClick = event => {
    setAnchorEl(event.currentTarget);
  };

  var handleClose = () => {
    setAnchorEl(null);
  };

  var handleModule = module => () => {
    setSource(JSON.stringify(module, null, 4));
    handleClose();
  };

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    id: id,
    variant: "outlined",
    "aria-controls": "basic-menu",
    "aria-haspopup": "true",
    "aria-expanded": open ? "true" : undefined,
    onClick: handleClick
  }, "Examples"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, {
    id: "basic-menu",
    anchorEl: anchorEl,
    open: open,
    onClose: handleClose,
    MenuListProps: {
      "aria-labelledby": "basic-button"
    }
  }, modules.map(module => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
    key: module.name,
    onClick: handleModule(module)
  }, module.name))));
}

function EnclosureEditor() {
  var [source, setSource] = (0,_hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(STORAGE_KEY, JSON.stringify(modules[0], null, 4));
  var [options, setOptions] = (0,_hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(OPTIONS_STORAGE_KEY, JSON.stringify(DEFAULT_OPTIONS, null, 4));
  var enclosure = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    try {
      return JSON.parse(source);
    } catch (e) {
      console.debug(e);
      return undefined;
    }
  }, [source]);
  var enclosureOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    try {
      return JSON.parse(options);
    } catch (e) {
      console.debug(e);
      return undefined;
    }
  }, [options]);

  var handleFormat = () => {
    setSource(JSON.stringify(enclosure, null, 4));
    setOptions(JSON.stringify(enclosureOptions, null, 4));
  };

  var handleRefreshSource = () => setSource(JSON.stringify(modules[0], null, 4));

  var handleRefreshOptions = () => setOptions(JSON.stringify(DEFAULT_OPTIONS, null, 4));

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    spacing: 1,
    container: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    item: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    variant: "outlined",
    onClick: handleFormat,
    disabled: !enclosure || !enclosureOptions
  }, "Format code")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    item: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ExampleMenu, {
    setSource: setSource
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {
    variant: "subtitle1",
    component: "span"
  }, "Model"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    title: "reset",
    size: "small",
    onClick: handleRefreshSource
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_HighlightTextField__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    code: source,
    language: "json",
    onChange: setSource
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {
    variant: "subtitle1",
    component: "span"
  }, "Options"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    title: "reset",
    size: "small",
    onClick: handleRefreshOptions
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_HighlightTextField__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    minHeight: "8rem",
    code: options,
    language: "json",
    onChange: setOptions
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_Suspense__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(EnclosureGenerator, {
    module: enclosure,
    options: enclosureOptions,
    color: "#888"
  }))));
}

/***/ }),

/***/ 34439:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ TraceSaveButton; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _mui_icons_material_Save__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43917);
/* harmony import */ var _ServiceManagerContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99808);
/* harmony import */ var _PacketsContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43226);
/* harmony import */ var _ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71973);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20392);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(36190);
/* harmony import */ var _console_ConsoleContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(25212);
 // tslint:disable-next-line: match-default-export-name no-submodule-imports








function TraceSaveButton(props) {
  var {
    variant
  } = props;
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z);
  var {
    logs
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_console_ConsoleContext__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP);
  var {
    replayTrace,
    view
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_PacketsContext__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);
  var {
    fileStorage
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ServiceManagerContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP);

  var saveTrace = () => {
    var repo = "microsoft/jacdac-docs";
    var sha = "13be214dfb79e3fb364365c2884c67554af6cbf5";
    var busText = bus.describe();
    var savedTrace = replayTrace || view.trace;
    var traceText = savedTrace.serializeToText();
    var text = "# Jacdac Trace \n        \nTo import, go to https://aka.ms/jacdac, open device tree and click import icon.\n\n## bus\n\n```yaml\n" + busText + "\n```\n\n## packets\n\n```\n" + traceText + "\n```\n\n## console\n\n```\n" + (0,_console_ConsoleContext__WEBPACK_IMPORTED_MODULE_5__/* .serializeLogs */ .mJ)(logs) + "\n```\n\n## environment\n\n```yaml\njacdac: https://github.com/" + repo + "/commit/" + sha + "\nuser-agent: " + (typeof window !== undefined && window.navigator.userAgent) + "\n```\n\n";
    fileStorage.saveText("trace.jd.txt", text);
  };

  return variant === "link" ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
    title: "save trace and environment information in a file",
    component: "button",
    onClick: saveTrace,
    underline: "hover"
  }, "Save trace") : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_IconButtonWithTooltip__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    title: "save trace",
    size: "small",
    key: "save",
    onClick: saveTrace
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Save__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, null));
}

/***/ }),

/***/ 95453:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Alert; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45987);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96037);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98348);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79764);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89132);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var _excluded = ["closeable", "title", "children"];




var PREFIX = "Alert";
var classes = {
  root: PREFIX + "-root",
  icon: PREFIX + "-icon"
};
var StyledCollapse = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& ." + classes.root]: {
      marginTop: theme.spacing(1),
      marginBottom: theme.spacing(2)
    },
    ["& ." + classes.icon]: {
      flexDirection: "column",
      justifyContent: "center"
    }
  };
});
function Alert(props) {
  var {
    closeable,
    title,
    children
  } = props,
      others = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(props, _excluded);

  var {
    0: open,
    1: setOpen
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);

  var handleClose = () => setOpen(false);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledCollapse, {
    in: open
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, Object.assign({
    className: classes.root,
    classes: {
      icon: !title && classes.icon
    },
    onClose: closeable && handleClose
  }, others), title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, null, title), children));
}

/***/ }),

/***/ 2636:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ Button; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45987);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36176);
/* harmony import */ var _hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72513);

var _excluded = ["trackName", "trackProperties", "onClick"];



function Button(props) {
  var {
    trackName,
    trackProperties,
    onClick
  } = props,
      rest = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(props, _excluded);

  var {
    trackEvent
  } = (0,_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP)();
  var handleClick = !trackName || !trackEvent || !onClick ? onClick : ev => {
    trackEvent(trackName, trackProperties);
    onClick(ev);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(gatsby_theme_material_ui__WEBPACK_IMPORTED_MODULE_1__/* .Button */ .zx, Object.assign({
    onClick: handleClick
  }, rest));
}

/***/ }),

/***/ 91350:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var DarkModeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  darkMode: "dark",
  toggleDarkMode: () => {},
  darkModeMounted: false
});
DarkModeContext.displayName = "DarkMode";
/* harmony default export */ __webpack_exports__["Z"] = (DarkModeContext);

/***/ }),

/***/ 7796:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ DarkModeProvider; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22840);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _DarkModeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91350);



function DarkModeProvider(props) {
  var {
    fixedDarkMode,
    children
  } = props;
  var KEY = "darkMode";
  var prefersDarkMode = (0,_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)("(prefers-color-scheme: dark)", {
    noSsr: true
  });

  var localTheme = () => !fixedDarkMode && typeof window !== "undefined" && window.localStorage.getItem(KEY);

  var {
    0: darkMode,
    1: setDarkMode
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(fixedDarkMode || localTheme() || (prefersDarkMode ? "dark" : "light"));
  var {
    0: darkModeMounted,
    1: setMounted
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);

  var setMode = mode => {
    if (mode === darkMode) return; // nothing to do

    if (!fixedDarkMode && typeof window !== "undefined") window.localStorage.setItem(KEY, mode);
    setDarkMode(mode);
  };

  var toggleDarkMode = mode => {
    mode = mode || (darkMode === "light" ? "dark" : "light");

    if (mode === "dark") {
      setMode("dark");
    } else {
      setMode("light");
    }
  };

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setMounted(true);
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"].Provider */ .Z.Provider, {
    value: {
      darkMode,
      toggleDarkMode,
      darkModeMounted
    }
  }, children);
}

/***/ }),

/***/ 54266:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ DialogTitleWithClose; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(45987);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules
var Typography = __webpack_require__(49308);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/DialogTitle/dialogTitleClasses.js
var dialogTitleClasses = __webpack_require__(14193);
// EXTERNAL MODULE: ./node_modules/@mui/material/Dialog/DialogContext.js
var DialogContext = __webpack_require__(69463);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/DialogTitle/DialogTitle.js


var _excluded = ["className", "id"];










var useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root']
  };
  return (0,composeClasses/* default */.Z)(slots, dialogTitleClasses/* getDialogTitleUtilityClass */.a, classes);
};

var DialogTitleRoot = (0,styled/* default */.ZP)(Typography/* default */.Z, {
  name: 'MuiDialogTitle',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  padding: '16px 24px',
  flex: '0 0 auto'
});
var DialogTitle = /*#__PURE__*/react.forwardRef(function DialogTitle(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiDialogTitle'
  });

  var {
    className,
    id: idProp
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var ownerState = props;
  var classes = useUtilityClasses(ownerState);
  var {
    titleId: id = idProp
  } = react.useContext(DialogContext/* default */.Z);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(DialogTitleRoot, (0,esm_extends/* default */.Z)({
    component: "h2",
    className: (0,clsx_m["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref,
    variant: "h6",
    id: id
  }, other));
});
 false ? 0 : void 0;
/* harmony default export */ var DialogTitle_DialogTitle = (DialogTitle);
// EXTERNAL MODULE: ./node_modules/@mui/material/IconButton/IconButton.js + 1 modules
var IconButton = __webpack_require__(90581);
// EXTERNAL MODULE: ./node_modules/@mui/icons-material/Close.js
var Close = __webpack_require__(35902);
;// CONCATENATED MODULE: ./src/components/ui/DialogTitleWithClose.tsx

var DialogTitleWithClose_excluded = ["onClose", "children"];



function DialogTitleWithClose(props) {
  var {
    onClose,
    children
  } = props,
      others = (0,objectWithoutProperties/* default */.Z)(props, DialogTitleWithClose_excluded);

  return /*#__PURE__*/react.createElement(DialogTitle_DialogTitle, others, children, /*#__PURE__*/react.createElement(IconButton/* default */.Z, {
    "aria-label": "close",
    title: "close",
    onClick: onClose,
    sx: {
      position: "absolute",
      right: 8,
      top: 8,
      color: theme => theme.palette.grey[500]
    }
  }, /*#__PURE__*/react.createElement(Close/* default */.Z, null)));
}

/***/ }),

/***/ 50192:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ DownloadFirmwareButton; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45987);
/* harmony import */ var gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13883);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20392);


var _excluded = ["url", "children"];



function DownloadFirmwareButton(props) {
  var {
    url,
    children
  } = props,
      rest = (0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(props, _excluded);

  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_jacdac_Context__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);

  var handleClick = /*#__PURE__*/function () {
    var _ref = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(function* () {
      return yield bus.disconnect();
    });

    return function handleClick() {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__/* .Button */ .zx, Object.assign({}, rest, {
    href: url,
    onClick: handleClick
  }), children || "Download");
}

/***/ }),

/***/ 5590:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "F": function() { return /* binding */ HideOnScroll; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
;// CONCATENATED MODULE: ./node_modules/@mui/material/useScrollTrigger/useScrollTrigger.js


var _excluded = ["getTrigger", "target"];


function defaultTrigger(store, options) {
  var {
    disableHysteresis = false,
    threshold = 100,
    target
  } = options;
  var previous = store.current;

  if (target) {
    // Get vertical scroll
    store.current = target.pageYOffset !== undefined ? target.pageYOffset : target.scrollTop;
  }

  if (!disableHysteresis && previous !== undefined) {
    if (store.current < previous) {
      return false;
    }
  }

  return store.current > threshold;
}

var defaultTarget = typeof window !== 'undefined' ? window : null;
function useScrollTrigger() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var {
    getTrigger = defaultTrigger,
    target = defaultTarget
  } = options,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, _excluded);

  var store = react.useRef();
  var [trigger, setTrigger] = react.useState(() => getTrigger(store, other));
  react.useEffect(() => {
    var handleScroll = () => {
      setTrigger(getTrigger(store, (0,esm_extends/* default */.Z)({
        target
      }, other)));
    };

    handleScroll(); // Re-evaluate trigger when dependencies change

    target.addEventListener('scroll', handleScroll);
    return () => {
      target.removeEventListener('scroll', handleScroll);
    }; // See Option 3. https://github.com/facebook/react/issues/14476#issuecomment-471199055
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [target, getTrigger, JSON.stringify(other)]);
  return trigger;
}
// EXTERNAL MODULE: ./node_modules/@mui/material/Slide/Slide.js
var Slide = __webpack_require__(57635);
;// CONCATENATED MODULE: ./src/components/ui/HideOnScroll.tsx


function HideOnScroll(props) {
  var {
    children,
    window
  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger
  // will default to window.
  // This is only being set here because the demo is in an iframe.

  var trigger = useScrollTrigger({
    target: window ? window() : undefined
  });
  return /*#__PURE__*/react.createElement(Slide/* default */.Z, {
    appear: false,
    direction: "down",
    in: !trigger
  }, children);
}

/***/ }),

/***/ 33024:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ HighlightTextField; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prism-react-renderer/dist/index.js + 2 modules
var dist = __webpack_require__(18328);
// EXTERNAL MODULE: ./node_modules/prism-react-renderer/themes/github/index.js
var github = __webpack_require__(13019);
// EXTERNAL MODULE: ./node_modules/prism-react-renderer/themes/vsDark/index.js
var vsDark = __webpack_require__(41194);
// EXTERNAL MODULE: ./src/components/ui/DarkModeContext.tsx
var DarkModeContext = __webpack_require__(91350);
;// CONCATENATED MODULE: ./node_modules/use-editable/dist/use-editable.es.js

var m = {
  characterData: !0,
  characterDataOldValue: !0,
  childList: !0,
  subtree: !0
};

function p(c) {
  var a = window.getSelection();
  a.empty();
  a.addRange(c);
}

function q(c) {
  return (c.metaKey || c.ctrlKey) && !c.altKey && "KeyZ" === c.code;
}

function r(c) {
  c = [c.firstChild];

  for (var b, a = ""; b = c.pop();) {
    b.nodeType === Node.TEXT_NODE ? a += b.textContent : b.nodeType === Node.ELEMENT_NODE && "BR" === b.nodeName && (a += "\n"), b.nextSibling && c.push(b.nextSibling), b.firstChild && c.push(b.firstChild);
  }

  "\n" !== a[a.length - 1] && (a += "\n");
  return a;
}

function w(c) {
  var a = window.getSelection().getRangeAt(0),
      b = a.collapsed ? 0 : a.toString().length,
      f = document.createRange();
  f.setStart(c, 0);
  f.setEnd(a.startContainer, a.startOffset);
  return {
    position: c = (f = f.toString()).length,
    extent: b,
    content: f = (f = f.split("\n"))[a = f.length - 1],
    line: a
  };
}

function C(c, a, b) {
  0 >= a && (a = 0);

  if (!b || 0 > b) {
    b = a;
  }

  var f = document.createRange();
  c = [c.firstChild];

  for (var d, l = 0, g = a; d = c[c.length - 1];) {
    if (d.nodeType === Node.TEXT_NODE) {
      if (l + d.textContent.length >= g) {
        var h = g - l;

        if (g === a) {
          if (g = f, h < d.textContent.length ? g.setStart(d, h) : g.setStartAfter(d), b !== a) {
            g = b;
            continue;
          } else {
            break;
          }
        } else {
          a = f;
          h < (b = d).textContent.length ? a.setEnd(b, h) : a.setEndAfter(b);
          break;
        }
      }

      l += d.textContent.length;
    } else if (d.nodeType === Node.ELEMENT_NODE && "BR" === d.nodeName) {
      if (l + 1 >= g) {
        if (g === a) {
          if (h = f, 0 < d.textContent.length ? h.setStart(d, 0) : h.setStartAfter(d), b !== a) {
            g = b;
            continue;
          } else {
            break;
          }
        } else {
          a = f;
          0 < (b = d).textContent.length ? a.setEnd(b, 0) : a.setEndAfter(b);
          break;
        }
      }

      l++;
    }

    c.pop();
    d.nextSibling && c.push(d.nextSibling);
    d.firstChild && c.push(d.firstChild);
  }

  return f;
}

function useEditable(c, a, b) {
  function f(k) {
    var b = c.current;

    if (b) {
      var a = w(b);
      b = r(b);
      a.position += k.length - b.length;
      e.position = a;
      e.onChange(k, a);
    }
  }

  function l(k, b) {
    var e = c.current;

    if (e) {
      var a = window.getSelection().getRangeAt(0);
      a.deleteContents();
      a.collapse();
      var d = b || 0;
      (a = C(e, b = (a = w(e)).position + (0 > d ? d : 0), a.position + (0 < d ? d : 0))).deleteContents();
      k && a.insertNode(document.createTextNode(k));
      p(C(e, b + k.length));
    }
  }

  function d(b) {
    var a = c.current;

    if (a) {
      a.focus();
      var e = 0;

      if ("number" == typeof b) {
        e = b;
      } else {
        var k = r(a).split("\n").slice(0, b.row);
        b.row && (e += k.join("\n").length + 1);
        e += b.column;
      }

      p(C(a, e));
    }
  }

  function g() {
    var b = c.current;
    return {
      text: r(b),
      position: b = w(b)
    };
  }

  function h() {
    e.observer.disconnect();
  }

  b || (b = {});
  var D = (0,react.useState)([])[1],
      e = (0,react.useState)(function () {
    var e = {
      observer: null,
      disconnected: !1,
      onChange: a,
      queue: [],
      history: [],
      historyAt: -1,
      position: null
    };
    "undefined" != typeof MutationObserver && (e.observer = new MutationObserver(function b(b) {
      var a;
      (a = e.queue).push.apply(a, b);
    }));
    return e;
  })[0],
      n = (0,react.useMemo)(function () {
    return {
      update: f,
      insert: l,
      move: d,
      getState: g
    };
  }, []);

  if ("object" != typeof navigator) {
    return n;
  }

  (0,react.useLayoutEffect)(function () {
    e.onChange = a;

    if (c.current && !b.disabled) {
      e.disconnected = !1;
      e.observer.observe(c.current, m);

      if (e.position) {
        var k = e.position,
            d = k.position;
        p(C(c.current, d, d + k.extent));
      }

      return h;
    }
  });
  (0,react.useLayoutEffect)(function () {
    if (!c.current || b.disabled) {
      e.history.length = 0, e.historyAt = -1;
    } else {
      var a = c.current;

      if (e.position) {
        a.focus();
        var d = e.position,
            f = d.position;
        p(C(a, f, f + d.extent));
      }

      var g = a.style.whiteSpace,
          h = a.contentEditable,
          l = !0;

      try {
        a.contentEditable = "plaintext-only";
      } catch (u) {
        a.contentEditable = "true", l = !1;
      }

      "pre" !== g && (a.style.whiteSpace = "pre-wrap");
      b.indentation && (a.style.tabSize = a.style.MozTabSize = "" + b.indentation);
      d = "" + " ".repeat(b.indentation || 0);

      var x,
          E = new RegExp("^(?:" + d + ")"),
          F = new RegExp("^(?:" + d + ")*(" + d + ")$"),
          t = function t(b) {
        if (c.current && e.position) {
          var u = r(a),
              d = w(a),
              f = new Date().valueOf(),
              g = e.history[e.historyAt];
          !b && 500 > f - x || g && g[1] === u ? x = f : (b = ++e.historyAt, e.history[b] = [d, u], e.history.splice(b + 1), 500 < b && (e.historyAt--, e.history.shift()));
        }
      },
          v = function v() {
        var b;
        (b = e.queue).push.apply(b, e.observer.takeRecords());
        b = w(a);

        if (e.queue.length) {
          e.observer.disconnect();
          e.disconnected = !0;
          var d = r(a);
          e.position = b;

          for (var c, f; c = e.queue.pop();) {
            null !== c.oldValue && (c.target.textContent = c.oldValue);

            for (f = c.removedNodes.length - 1; 0 <= f; f--) {
              c.target.insertBefore(c.removedNodes[f], c.nextSibling);
            }

            for (f = c.addedNodes.length - 1; 0 <= f; f--) {
              c.addedNodes[f].parentNode && c.target.removeChild(c.addedNodes[f]);
            }
          }

          e.onChange(d, b);
        }
      },
          y = function y(c) {
        if (!c.defaultPrevented && c.target === a) {
          if (e.disconnected) {
            return c.preventDefault(), D([]);
          }

          if (q(c)) {
            c.preventDefault(), c.shiftKey ? (c = ++e.historyAt, (c = e.history[c]) || (e.historyAt = e.history.length - 1)) : (c = --e.historyAt, (c = e.history[c]) || (e.historyAt = 0)), c && (e.observer.disconnect(), e.disconnected = !0, e.position = c[0], e.onChange(c[1], c[0]));
          } else {
            t();

            if ("Enter" === c.key) {
              c.preventDefault();
              var d = w(a),
                  f = /\S/g.exec(d.content);
              d = "\n" + d.content.slice(0, f ? f.index : d.content.length);
              n.insert(d);
            } else if ((!l || b.indentation) && "Backspace" === c.key) {
              c.preventDefault(), window.getSelection().getRangeAt(0).collapsed ? (d = w(a), d = F.exec(d.content), n.insert("", d ? -d[1].length : -1)) : n.insert("", 0);
            } else if (b.indentation && "Tab" === c.key) {
              c.preventDefault();
              f = (d = w(a)).position - d.content.length;
              var g = r(a);
              d = c.shiftKey ? g.slice(0, f) + d.content.replace(E, "") + g.slice(f + d.content.length) : g.slice(0, f) + (b.indentation ? " ".repeat(b.indentation) : "\t") + g.slice(f);
              n.update(d);
            }

            c.repeat && v();
          }
        }
      },
          z = function z(b) {
        b.defaultPrevented || b.isComposing || (q(b) || t(), v(), a.focus());
      },
          A = function A(b) {
        e.position = window.getSelection().rangeCount && b.target === a ? w(a) : null;
      },
          B = function B(a) {
        a.preventDefault();
        t(!0);
        n.insert(a.clipboardData.getData("text/plain"));
        t(!0);
        v();
      };

      document.addEventListener("selectstart", A);
      window.addEventListener("keydown", y);
      a.addEventListener("paste", B);
      a.addEventListener("keyup", z);
      return function () {
        document.removeEventListener("selectstart", A);
        window.removeEventListener("keydown", y);
        a.removeEventListener("paste", B);
        a.removeEventListener("keyup", z);
        a.style.whiteSpace = g;
        a.contentEditable = h;
      };
    }
  }, [c.current, b.disabled, b.indentation]);
  return n;
}
// EXTERNAL MODULE: ./node_modules/@mui/material/Alert/Alert.js + 5 modules
var Alert = __webpack_require__(79764);
// EXTERNAL MODULE: ./node_modules/@mui/material/Tooltip/Tooltip.js + 2 modules
var Tooltip = __webpack_require__(23961);
// EXTERNAL MODULE: ./node_modules/@mui/material/Grid/Grid.js + 2 modules
var Grid = __webpack_require__(4320);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./src/components/ui/Suspense.tsx + 2 modules
var Suspense = __webpack_require__(6890);
;// CONCATENATED MODULE: ./src/components/ui/HighlightTextField.tsx


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/* eslint-disable @typescript-eslint/no-unused-vars */

/* eslint-disable react/jsx-key */

 // tslint:disable-next-line: no-submodule-imports match-default-export-name

 // tslint:disable-next-line: no-submodule-imports match-default-export-name








var GithubPullRequestButton = /*#__PURE__*/(0,react.lazy)(() => __webpack_require__.e(/* import() */ 8831).then(__webpack_require__.bind(__webpack_require__, 78831)));
var AnnotationTooltip = (0,styled/* default */.ZP)(Tooltip/* default */.Z)(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& .arrow"]: {
      color: theme.palette.error.main
    },
    ["& .tooltip"]: {
      backgroundColor: theme.palette.error.main,
      color: theme.palette.common.white,
      boxShadow: theme.shadows[1],
      fontSize: theme.typography.body2.fontSize
    }
  };
});
function HighlightTextField(props) {
  var {
    code,
    onChange,
    language,
    annotations,
    pullRequestTitle,
    pullRequestPath,
    pullRequestDescription,
    minHeight
  } = props;
  var {
    darkMode
  } = (0,react.useContext)(DarkModeContext/* default */.Z);
  var theme = darkMode === "dark" ? vsDark/* default */.Z : github/* default */.Z;
  var editorRef = (0,react.useRef)(null);
  useEditable(editorRef, onChange, {
    disabled: false,
    indentation: 4
  });
  return /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    container: true,
    spacing: 1,
    direction: "row"
  }, /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react.createElement(dist/* default */.ZP, Object.assign({}, dist/* defaultProps */.lG, {
    code: code,
    language: language,
    theme: theme
  }), _ref2 => {
    var {
      className,
      style,
      tokens,
      getTokenProps
    } = _ref2;
    return /*#__PURE__*/react.createElement("pre", {
      ref: editorRef,
      className: className,
      spellCheck: false,
      style: _objectSpread(_objectSpread({}, style), {
        minHeight: minHeight || "12rem",
        whiteSpace: "pre-wrap",
        overflowWrap: "break-word"
      })
    }, tokens.map((line, i) => {
      var annotation = annotations === null || annotations === void 0 ? void 0 : annotations.find(a => a.line === i + 1);
      var title = annotation === null || annotation === void 0 ? void 0 : annotation.message;
      var el = /*#__PURE__*/react.createElement("span", {
        key: i,
        style: annotation && {
          borderBottom: "dashed 1px red"
        }
      }, line.filter(token => !token.empty).map((token, key) => /*#__PURE__*/react.createElement("span", getTokenProps({
        token,
        key
      }))), i < tokens.length - 1 ? "\n" : null);
      return title ? /*#__PURE__*/react.createElement(AnnotationTooltip, {
        title: title,
        arrow: true,
        key: i
      }, el) : el;
    }));
  })), !!(annotations !== null && annotations !== void 0 && annotations.length) && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true,
    xs: 12
  }, /*#__PURE__*/react.createElement(Alert/* default */.Z, {
    severity: "error"
  }, /*#__PURE__*/react.createElement("ul", null, annotations.map((a, i) => /*#__PURE__*/react.createElement("li", {
    key: i
  }, "line ", a.line, ": ", a.message))))), pullRequestTitle && pullRequestPath && /*#__PURE__*/react.createElement(Grid/* default */.ZP, {
    item: true
  }, /*#__PURE__*/react.createElement(Suspense/* default */.Z, null, /*#__PURE__*/react.createElement(GithubPullRequestButton, {
    title: pullRequestTitle,
    head: pullRequestPath,
    description: pullRequestDescription,
    files: {
      [pullRequestPath + ".md"]: code
    }
  }))));
}

/***/ }),

/***/ 16845:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ IconButtonWithProgress; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(45987);
// EXTERNAL MODULE: ./node_modules/@mui/material/Badge/Badge.js + 3 modules
var Badge = __webpack_require__(97321);
// EXTERNAL MODULE: ./node_modules/gatsby-theme-material-ui/index.js
var gatsby_theme_material_ui = __webpack_require__(36176);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/Box/Box.js + 1 modules
var Box = __webpack_require__(39211);
// EXTERNAL MODULE: ./node_modules/@mui/material/CircularProgress/CircularProgress.js + 1 modules
var CircularProgress = __webpack_require__(82374);
// EXTERNAL MODULE: ./node_modules/react-use-id-hook/dist/react-use-id-hook.esm.js
var react_use_id_hook_esm = __webpack_require__(19640);
;// CONCATENATED MODULE: ./src/components/ui/CircularProgressBox.tsx

var _excluded = ["progress", "progressColor", "progressStyle", "progressSize", "children"];



function CircularProgressBox(props) {
  var {
    progress,
    progressColor,
    progressStyle,
    progressSize,
    children
  } = props,
      others = (0,objectWithoutProperties/* default */.Z)(props, _excluded);

  var hasProgress = progress !== undefined;
  var theme = (0,useTheme/* default */.Z)();
  var id = (0,react_use_id_hook_esm/* useId */.Me)();
  return /*#__PURE__*/react.createElement(Box/* default */.Z, {
    position: "relative",
    display: "inline-flex"
  }, /*#__PURE__*/react.createElement(CircularProgress/* default */.Z, Object.assign({
    id: id,
    variant: hasProgress ? "determinate" : "indeterminate",
    disableShrink: !hasProgress,
    value: progress,
    size: progressSize || theme.spacing(3),
    color: progressColor,
    style: progressStyle
  }, others)), /*#__PURE__*/react.createElement(Box/* default */.Z, {
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    position: "absolute",
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }, children));
}
// EXTERNAL MODULE: ./src/components/ui/Tooltip.tsx
var Tooltip = __webpack_require__(60102);
;// CONCATENATED MODULE: ./src/components/ui/IconButtonWithProgress.tsx

var IconButtonWithProgress_excluded = ["indeterminate", "title", "children", "badgeCount", "badgeColor", "progress", "progressColor", "progressStyle", "progressSize"];





function IconButtonWithProgress(props) {
  var {
    indeterminate,
    title,
    children,
    badgeCount,
    badgeColor,
    progress,
    progressColor,
    progressStyle,
    progressSize
  } = props,
      others = (0,objectWithoutProperties/* default */.Z)(props, IconButtonWithProgress_excluded);

  var badge = /*#__PURE__*/react.createElement(Badge/* default */.Z, {
    color: badgeColor,
    badgeContent: badgeCount,
    invisible: !badgeCount
  }, children);
  return /*#__PURE__*/react.createElement(Tooltip/* default */.Z, {
    title: title,
    "aria-label": props["aria-label"]
  }, /*#__PURE__*/react.createElement("span", null, /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* IconButton */.hU, Object.assign({}, others, {
    size: "large"
  }), !indeterminate && badge, indeterminate && /*#__PURE__*/react.createElement(CircularProgressBox, {
    "aria-label": title,
    progress: progress,
    progressColor: progressColor,
    progressStyle: progressStyle,
    progressSize: progressSize
  }, badge))));
}

/***/ }),

/***/ 71973:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ IconButtonWithTooltip; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(45987);
// EXTERNAL MODULE: ./node_modules/gatsby-theme-material-ui/index.js
var gatsby_theme_material_ui = __webpack_require__(36176);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/Transition.js + 1 modules
var Transition = __webpack_require__(81423);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTransitions.js
var createTransitions = __webpack_require__(34584);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js
var useTheme = __webpack_require__(66449);
// EXTERNAL MODULE: ./node_modules/@mui/material/transitions/utils.js
var utils = __webpack_require__(40615);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Zoom/Zoom.js


var _excluded = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];








var styles = {
  entering: {
    transform: 'none'
  },
  entered: {
    transform: 'none'
  }
};
var defaultTimeout = {
  enter: createTransitions/* duration.enteringScreen */.x9.enteringScreen,
  exit: createTransitions/* duration.leavingScreen */.x9.leavingScreen
};
/**
 * The Zoom transition can be used for the floating variant of the
 * [Button](/components/buttons/#floating-action-buttons) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

var Zoom = /*#__PURE__*/react.forwardRef(function Zoom(props, ref) {
  var {
    addEndListener,
    appear = true,
    children: _children,
    easing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style,
    timeout = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition/* default */.ZP
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);

  var theme = (0,useTheme/* default */.Z)();
  var nodeRef = react.useRef(null);
  var foreignRef = (0,useForkRef/* default */.Z)(_children.ref, ref);
  var handleRef = (0,useForkRef/* default */.Z)(nodeRef, foreignRef);

  var normalizedTransitionCallback = callback => maybeIsAppearing => {
    if (callback) {
      var node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.

      if (maybeIsAppearing === undefined) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };

  var handleEntering = normalizedTransitionCallback(onEntering);
  var handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    (0,utils/* reflow */.n)(node); // So the animation always start from the start.

    var transitionProps = (0,utils/* getTransitionProps */.C)({
      style,
      timeout,
      easing
    }, {
      mode: 'enter'
    });
    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);
    node.style.transition = theme.transitions.create('transform', transitionProps);

    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(onEntered);
  var handleExiting = normalizedTransitionCallback(onExiting);
  var handleExit = normalizedTransitionCallback(node => {
    var transitionProps = (0,utils/* getTransitionProps */.C)({
      style,
      timeout,
      easing
    }, {
      mode: 'exit'
    });
    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);
    node.style.transition = theme.transitions.create('transform', transitionProps);

    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);

  var handleAddEndListener = next => {
    if (addEndListener) {
      // Old call signature before `react-transition-group` implemented `nodeRef`
      addEndListener(nodeRef.current, next);
    }
  };

  return /*#__PURE__*/(0,jsx_runtime.jsx)(TransitionComponent, (0,esm_extends/* default */.Z)({
    appear: appear,
    in: inProp,
    nodeRef: nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout: timeout
  }, other, {
    children: (state, childProps) => {
      return /*#__PURE__*/react.cloneElement(_children, (0,esm_extends/* default */.Z)({
        style: (0,esm_extends/* default */.Z)({
          transform: 'scale(0)',
          visibility: state === 'exited' && !inProp ? 'hidden' : undefined
        }, styles[state], style, _children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Zoom_Zoom = (Zoom);
// EXTERNAL MODULE: ./src/components/ui/Tooltip.tsx
var Tooltip = __webpack_require__(60102);
// EXTERNAL MODULE: ./src/components/hooks/useAnalytics.ts + 88 modules
var useAnalytics = __webpack_require__(72513);
;// CONCATENATED MODULE: ./src/components/ui/IconButtonWithTooltip.tsx

var IconButtonWithTooltip_excluded = ["title", "children", "disabled", "trackName", "trackProperties", "onClick"];





function IconButtonWithTooltip(props) {
  var {
    title,
    children,
    disabled,
    trackName,
    trackProperties,
    onClick
  } = props,
      others = (0,objectWithoutProperties/* default */.Z)(props, IconButtonWithTooltip_excluded);

  var {
    trackEvent
  } = (0,useAnalytics/* default */.ZP)();
  var handleClick = !trackName || !trackEvent || !onClick ? onClick : ev => {
    trackEvent(trackName, trackProperties);
    onClick(ev);
  };
  return /*#__PURE__*/react.createElement(Tooltip/* default */.Z, {
    TransitionComponent: Zoom_Zoom,
    title: title
  }, /*#__PURE__*/react.createElement("span", null, /*#__PURE__*/react.createElement(gatsby_theme_material_ui/* IconButton */.hU, Object.assign({
    "aria-label": title,
    disabled: disabled,
    onClick: handleClick
  }, others), children)));
}

/***/ }),

/***/ 2285:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ LoadingProgress; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82374);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


function LoadingProgress(props) {
  var {
    size
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    disableShrink: true,
    variant: "indeterminate",
    size: size || "1em",
    "aria-label": "loading"
  });
}

/***/ }),

/***/ 85748:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ PageLinkList; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59644);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(91263);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20171);
/* harmony import */ var gatsby__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35313);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);



function PageLinkList(props) {
  var {
    nodes
  } = props;
  return !!(nodes !== null && nodes !== void 0 && nodes.length) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    dense: true
  }, nodes === null || nodes === void 0 ? void 0 : nodes.map(_ref => {
    var {
      slug,
      title
    } = _ref;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP, {
      key: slug
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(gatsby__WEBPACK_IMPORTED_MODULE_0__.Link, {
      color: "textPrimary",
      rel: "noopener noreferrer",
      to: slug
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
      primary: title
    })));
  }));
}

/***/ }),

/***/ 97357:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ StructuredData; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_helmet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35414);


function StructuredData(props) {
  var {
    payload
  } = props;
  var rendered = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => JSON.stringify(payload), [payload]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_helmet__WEBPACK_IMPORTED_MODULE_1__/* .Helmet */ .q, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("script", {
    type: "application/ld+json"
  }, rendered));
}

/***/ }),

/***/ 6890:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ Suspense; }
});

// EXTERNAL MODULE: ./node_modules/@mui/base/NoSsr/NoSsr.js
var NoSsr = __webpack_require__(5061);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./src/components/useEffectAsync.ts
var useEffectAsync = __webpack_require__(7751);
;// CONCATENATED MODULE: ./src/components/ui/useProgress.ts



function useProgress() {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  var {
    0: instance,
    1: setInstance
  } = (0,react.useState)();
  (0,useEffectAsync/* default */.Z)( /*#__PURE__*/function () {
    var _ref = (0,asyncToGenerator/* default */.Z)(function* (mounted) {
      if (typeof self !== "undefined") {
        var i = yield __webpack_require__.e(/* import() */ 2735).then(__webpack_require__.t.bind(__webpack_require__, 72735, 23));
        if (mounted()) setInstance(i);
      }
    });

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), []);

  var start = () => instance === null || instance === void 0 ? void 0 : instance.start;

  var done = () => instance === null || instance === void 0 ? void 0 : instance.done;

  return {
    start,
    done
  };
}
;// CONCATENATED MODULE: ./src/components/ui/Progress.tsx


var PROGRESS_DELAY = 200;
function Progress(props) {
  var {
    delay,
    children
  } = props;
  var {
    start,
    done
  } = useProgress();
  (0,react.useEffect)(() => {
    var id = setTimeout(() => {
      id = undefined;
      start();
    }, delay || PROGRESS_DELAY);
    return () => {
      if (id) clearTimeout(id);else done();
    };
  }, [delay]);
  return children;
}
;// CONCATENATED MODULE: ./src/components/ui/Suspense.tsx



function Suspense(props) {
  var {
    children
  } = props;
  return /*#__PURE__*/react.createElement(NoSsr/* default */.Z, null, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: /*#__PURE__*/react.createElement(Progress, null, /*#__PURE__*/react.createElement("span", null))
  }, children));
}

/***/ }),

/***/ 56251:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ThemedLayout; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(38776);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(65668);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(10532);
/* harmony import */ var notistack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30255);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var react_use_id_hook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19640);
/* harmony import */ var react_aria_live__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49647);
/* harmony import */ var _jacdac_Provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(727);
/* harmony import */ var _AppContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84377);
/* harmony import */ var _DbContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94904);
/* harmony import */ var _PacketsContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(43226);
/* harmony import */ var _ServiceManagerContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99808);
/* harmony import */ var react_helmet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35414);
/* harmony import */ var _makecode_MakeCodeSnippetContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(54888);
/* harmony import */ var _WebAudioContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(94564);
/* harmony import */ var _FileSystemContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(48202);
/* harmony import */ var _hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(72513);
/* harmony import */ var _HostedSimulatorsContext__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(43830);
/* harmony import */ var _console_ConsoleContext__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(25212);

















function ThemedLayout(props) {
  var {
    theme,
    maxSnack,
    children
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z, {
    injectFirst: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z, {
    theme: theme
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_13__/* .AppInsightsErrorBoundary */ .Nh, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(notistack__WEBPACK_IMPORTED_MODULE_0__/* .SnackbarProvider */ .wT, {
    maxSnack: maxSnack || 1,
    dense: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react_use_id_hook__WEBPACK_IMPORTED_MODULE_2__/* .IdProvider */ .vc, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react_aria_live__WEBPACK_IMPORTED_MODULE_3__/* .LiveAnnouncer */ .Kd, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_DbContext__WEBPACK_IMPORTED_MODULE_6__/* .DbProvider */ .WQ, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_FileSystemContext__WEBPACK_IMPORTED_MODULE_12__/* .FileSystemProvider */ .P, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_WebAudioContext__WEBPACK_IMPORTED_MODULE_11__/* .WebAudioProvider */ .IH, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_jacdac_Provider__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    connectOnStart: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_HostedSimulatorsContext__WEBPACK_IMPORTED_MODULE_14__/* .HostedSimulatorsProvider */ .sr, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ServiceManagerContext__WEBPACK_IMPORTED_MODULE_8__/* .ServiceManagerProvider */ .Aq, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_PacketsContext__WEBPACK_IMPORTED_MODULE_7__/* .PacketsProvider */ .l, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_AppContext__WEBPACK_IMPORTED_MODULE_5__/* .AppProvider */ .wI, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_console_ConsoleContext__WEBPACK_IMPORTED_MODULE_15__/* .ConsoleProvider */ .BV, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_makecode_MakeCodeSnippetContext__WEBPACK_IMPORTED_MODULE_10__/* .MakeCodeSnippetProvider */ .u, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .ZP, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react_helmet__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("link", {
    rel: "preconnect",
    href: "https://fonts.googleapis.com",
    crossOrigin: "anonymous"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("link", {
    rel: "preconnect",
    href: "https://raw.githubusercontent.com",
    crossOrigin: "anonymous"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("meta", {
    name: "viewport",
    content: "minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no"
  })), children))))))))))))))));
}

/***/ }),

/***/ 60102:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23961);
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(98348);

 // fix for contrast issue

var Tooltip = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP)(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(_ref => {
  var {
    theme
  } = _ref;
  return {
    ["& .tooltip"]: {
      backgroundColor: theme.palette.background.default,
      color: theme.palette.text.primary
    }
  };
});
/* harmony default export */ __webpack_exports__["Z"] = (Tooltip);

/***/ }),

/***/ 94564:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WW": function() { return /* binding */ createToneContext; },
/* harmony export */   "IH": function() { return /* binding */ WebAudioProvider; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15861);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


var VOLUME_GAIN = 0.4;
var WebAudioContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  onClickActivateAudioContext: () => {},
  playTone: () => {},
  setVolume: () => {},
  activated: false
});
WebAudioContext.displayName = "WebAudio";
/* harmony default export */ __webpack_exports__["ZP"] = (WebAudioContext);

var _globalCtx;

function createToneContext() {
  if (_globalCtx) return _globalCtx;

  try {
    console.debug("create tone context");
    var ctx = new (window.AudioContext || // eslint-disable-next-line @typescript-eslint/no-explicit-any
    window.webkitAudioContext)(); // play silence sound within onlick to unlock it

    var buffer = ctx.createBuffer(1, 1, 22050);
    var source = ctx.createBufferSource();
    source.buffer = buffer;
    source.connect(ctx.destination);
    source.start(); // output node with volume

    var globalVolume = ctx.createGain();
    globalVolume.connect(ctx.destination);
    globalVolume.gain.value = VOLUME_GAIN;

    var setVolume = v => {
      if (globalVolume && !isNaN(v)) {
        globalVolume.gain.value = v * VOLUME_GAIN;
      }
    };

    var playTone = /*#__PURE__*/function () {
      var _ref = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(function* (frequency, duration, vol) {
        if (ctx.state === "suspended") yield ctx.resume();

        if (ctx.state !== "running") {
          console.debug("playTone on closed context", {
            ctx
          });
          return;
        }

        if (isNaN(frequency) || isNaN(vol) || isNaN(duration)) return;

        try {
          var tone = ctx.createOscillator();
          tone.type = "sawtooth";
          var toneVolume = ctx.createGain();
          tone.connect(toneVolume);
          toneVolume.connect(globalVolume);
          tone.frequency.value = frequency;
          toneVolume.gain.value = vol;
          tone.start(); // start and stop

          tone.stop(ctx.currentTime + duration / 1000);
        } catch (e) {
          console.debug(e);
        }
      });

      return function playTone(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    console.debug("tone context created");
    return _globalCtx = {
      setVolume,
      playTone
    };
  } catch (e) {
    return undefined;
  }
}
function WebAudioProvider(props) {
  var {
    children
  } = props;
  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);
  var {
    0: activated,
    1: setActivated
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!context.current); // needs to be initiated in onClick on safari mobile

  var onClickActivateAudioContext = () => {
    if (context.current) return;
    context.current = createToneContext();
    if (context.current) setActivated(true);
  };

  var setVolume = volume => {
    var _context$current;

    return (_context$current = context.current) === null || _context$current === void 0 ? void 0 : _context$current.setVolume(volume);
  };

  var playTone = (frequency, duration, volume) => {
    var _context$current2;

    return (_context$current2 = context.current) === null || _context$current2 === void 0 ? void 0 : _context$current2.playTone(frequency, duration, volume);
  };

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(WebAudioContext.Provider, {
    value: {
      onClickActivateAudioContext,
      setVolume,
      playTone,
      activated
    }
  }, children);
}

/***/ }),

/***/ 44111:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "O": function() { return /* binding */ useUnitConverters; },
/* harmony export */   "Z": function() { return /* binding */ useUnitConverter; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4942);
/* harmony import */ var _jacdac_ts_src_jdom_pretty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10913);
/* harmony import */ var _hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34093);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// eslint-disable-next-line @typescript-eslint/triple-slash-reference
/// <reference path="../../../jacdac-ts/jacdac-spec/spectool/jdspec.d.ts" />


var adapters = {
  "°C": {
    "°C": v => v,
    "°F": v => 9 / 5 * v + 32
  },
  "/": {
    "/": v => v,
    "%": v => v * 100
  }
};
var inverters = {
  "°F": {
    "°C": v => (v - 32) * 5 / 9
  },
  "%": {
    "/": v => v / 100
  }
};
function useUnitConverters() {
  var [settings, setSettings] = (0,_hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)("jacdac:unitconverters", {});
  return {
    converters: Object.keys(adapters).map(unit => ({
      unit,
      name: settings[unit] || unit,
      names: Object.keys(adapters[unit])
    })),
    setConverter: (unit, name) => {
      var newSettings = _objectSpread({}, settings);

      newSettings[unit] = name;
      setSettings(newSettings);
    }
  };
}

var identity = v => v;

function useUnitConverter(unit) {
  var _inverters$name;

  if (!unit) return {
    converter: v => v,
    inverter: v => v
  };
  var [settings] = (0,_hooks_useLocalStorage__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)("jacdac:unitconverters", {
    "/": "%"
  });
  var adapter = adapters[unit];
  if (!adapter) return {
    name: (0,_jacdac_ts_src_jdom_pretty__WEBPACK_IMPORTED_MODULE_1__/* .prettyUnit */ .QP)(unit),
    converter: v => v,
    inverter: v => v
  };
  var names = Object.keys(adapter);
  var name = settings[unit] || names[0];
  var converter = adapter[name] || identity;
  var inverter = ((_inverters$name = inverters[name]) === null || _inverters$name === void 0 ? void 0 : _inverters$name[unit]) || identity;
  return {
    name,
    converter,
    inverter,
    names
  };
}

/***/ }),

/***/ 74039:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useChartPalette; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91350);


function useChartPalette() {
  var {
    darkMode
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var palette = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (darkMode == "light") return ["#003f5c", "#ffa600", "#665191", "#a05195", "#ff7c43", "#d45087", "#f95d6a", "#2f4b7c"];else return ["#60ccfe", "#ffdd9e", "#c3b9d8", "#dcbbd7", "#fecdb7", "#eebcd1", "#fcc1c6", "#a1b6db"];
  }, [darkMode]);
  return palette;
}

/***/ }),

/***/ 7751:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useEffectAsync; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function useEffectAsync(effect, dependencies) {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    var mounted = true;
    effect(() => mounted);
    return () => {
      mounted = false;
    };
  }, dependencies);
}

/***/ }),

/***/ 43746:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ ButtonWidget; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _SvgWidget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48059);
/* harmony import */ var _useWidgetTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60650);
/* harmony import */ var _hooks_useSvgButtonProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30833);




function ButtonWidget(props) {
  var {
    checked,
    label,
    color,
    size,
    onDown,
    onUp
  } = props;
  var {
    background,
    controlBackground,
    active
  } = (0,_useWidgetTheme__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(color);
  var buttonProps = (0,_hooks_useSvgButtonProps__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(label, onDown, onUp);
  var w = 64;
  var mo = checked ? 3 : 5;
  var r = w / 2;
  var cx = r;
  var cy = r;
  var ri = r - mo;
  var rn = 8;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SvgWidget__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    width: w,
    size: size
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    x: 0,
    y: 0,
    rx: 2,
    ry: 2,
    width: w,
    height: w,
    fill: background
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: rn,
    cy: rn,
    r: rn >> 1,
    fill: controlBackground
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: w - rn,
    cy: rn,
    r: rn >> 1,
    fill: controlBackground
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: w - rn,
    cy: w - rn,
    r: rn >> 1,
    fill: controlBackground
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: rn,
    cy: w - rn,
    r: rn >> 1,
    fill: controlBackground
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", Object.assign({
    cx: cx,
    cy: cy,
    r: ri,
    fill: checked ? active : controlBackground
  }, buttonProps)));
}

/***/ }),

/***/ 10719:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ GaugeWidget; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _useWidgetTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60650);
/* harmony import */ var _SvgWidget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48059);
/* harmony import */ var _hooks_useThrottledValue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(72901);
/* harmony import */ var _svgutils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(92526);
/* harmony import */ var _PowerButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2250);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4320);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(879);







function GaugeWidget(props) {
  var {
    value,
    color,
    size,
    min,
    max,
    step,
    variant,
    valueLabel,
    off,
    toggleOff,
    onChange,
    tabIndex,
    label
  } = props;
  var {
    background,
    active,
    textProps
  } = (0,_useWidgetTheme__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(color);
  var sliderPathRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var w = 120;
  var h = 120;
  var m = 8;
  var roff = 30;
  var riff = 10;
  var sw = m << 1;
  var cx = w >> 1;
  var cy = h >> 1;
  var r = (w >> 1) - m;
  var sa = -135;
  var ea = 135;

  var _step = step || (max - min) / 10;

  var displayValue = (0,_hooks_useThrottledValue__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(value, (max - min) * 2);

  var computeArc = v => {
    if (variant === "fountain") {
      var mid = (ea + sa) / 2;
      var fraction = v / (max - min) * (ea - sa);
      if (fraction < 0) return (0,_svgutils__WEBPACK_IMPORTED_MODULE_5__/* .describeArc */ .x8)(cx, cy, r, mid + fraction, mid);else return (0,_svgutils__WEBPACK_IMPORTED_MODULE_5__/* .describeArc */ .x8)(cx, cy, r, mid, mid + fraction);
    } else {
      var _fraction = (v - min) / (max - min);

      var va = sa + _fraction * (ea - sa);
      return (0,_svgutils__WEBPACK_IMPORTED_MODULE_5__/* .describeArc */ .x8)(cx, cy, r, sa, va);
    }
  };

  var db = (0,_svgutils__WEBPACK_IMPORTED_MODULE_5__/* .describeArc */ .x8)(cx, cy, r, sa, ea);
  var dvalue = computeArc(value);
  var dactual = computeArc(displayValue);
  var lineCap = "round";
  var tvalue = valueLabel !== undefined ? valueLabel(value) : value === undefined ? "" : value + "";
  var clickeable = !!onChange;

  var handlePointerDown = ev => {
    ev.preventDefault();
    if (!ev.buttons) return;
    var svg = sliderPathRef.current.ownerSVGElement;
    var pos = (0,_svgutils__WEBPACK_IMPORTED_MODULE_5__/* .svgPointerPoint */ .PW)(svg, ev);
    var closest = (0,_svgutils__WEBPACK_IMPORTED_MODULE_5__/* .closestPoint */ .JI)(sliderPathRef.current, _step, pos);
    onChange(min + (1 - closest) * (max - min));
  };

  var pointerStyle = clickeable && {
    cursor: "pointer"
  };
  var pathProps = {
    onPointerDown: clickeable ? handlePointerDown : undefined,
    onPointerMove: clickeable ? handlePointerDown : undefined,
    style: clickeable ? pointerStyle : undefined
  };

  var handleSliderChange = (ev, newValue) => onChange(newValue);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    container: true,
    direction: "column"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SvgWidget__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
    tabIndex: tabIndex,
    width: w,
    height: h,
    size: size
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", Object.assign({
    ref: sliderPathRef,
    strokeWidth: sw,
    stroke: background,
    d: db,
    strokeLinecap: lineCap,
    fill: "transparent"
  }, pathProps)), !off && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", Object.assign({
    strokeWidth: sw,
    stroke: active,
    strokeLinecap: lineCap,
    d: dvalue,
    opacity: 0.2,
    fill: "transparent"
  }, pathProps)), !off && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", Object.assign({
    strokeWidth: sw,
    stroke: active,
    strokeLinecap: lineCap,
    d: dactual,
    fill: "transparent"
  }, pathProps)), off !== undefined ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PowerButton__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    off: off,
    label: tvalue,
    cx: cx,
    cy: cy,
    r: roff,
    ri: riff,
    color: color,
    onClick: toggleOff
  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("text", Object.assign({}, textProps, {
    x: cx,
    y: cy,
    "aria-label": tvalue
  }), tvalue))), clickeable && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP, {
    item: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, {
    "aria-label": label,
    disabled: off,
    color: color,
    min: min,
    max: max,
    step: _step,
    valueLabelDisplay: "off",
    value: value,
    onChange: onChange ? handleSliderChange : undefined
  })));
}

/***/ }),

/***/ 40062:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ OptionalTooltip; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23961);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);


function OptionalTooltip(props) {
  var {
    children,
    title
  } = props;
  if (!title) return children;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, {
    title: title
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, children));
}

/***/ }),

/***/ 2250:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ PowerButton; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _hooks_useSvgButtonProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30833);
/* harmony import */ var _svgutils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92526);
/* harmony import */ var _useWidgetTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60650);




function PowerButton(props) {
  var {
    cx,
    cy,
    r,
    ri,
    onClick,
    off,
    color,
    label,
    strokeWidth,
    borderStroke
  } = props;
  var {
    background,
    active,
    controlBackground,
    textProps
  } = (0,_useWidgetTheme__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(color);
  var a = 135;
  var d = (0,_svgutils__WEBPACK_IMPORTED_MODULE_2__/* .describeArc */ .x8)(cx, cy, ri, -a, a, true);
  var btnlabel = off ? "turn on" : "turn off";
  var buttonProps = (0,_hooks_useSvgButtonProps__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(btnlabel, onClick);
  var sw = strokeWidth || 3;
  var iconStroke = off ? background : active;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    "aria-label": label
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", null, btnlabel), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", Object.assign({
    cx: cx,
    cy: cy,
    r: r,
    fill: controlBackground,
    strokeWidth: sw,
    stroke: borderStroke || background
  }, buttonProps)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    transform: "rotate(180, " + cx + ", " + cy + ")"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: d,
    strokeLinecap: "round",
    fill: "none",
    strokeWidth: sw,
    stroke: iconStroke,
    style: {
      userSelect: "none",
      pointerEvents: "none"
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("line", {
    strokeLinecap: "round",
    x1: cx,
    y1: cy + ri / 4,
    x2: cx,
    y2: cy + ri,
    stroke: iconStroke,
    strokeWidth: sw,
    style: {
      userSelect: "none",
      pointerEvents: "none"
    }
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("text", Object.assign({
    "aria-label": label,
    x: cx,
    y: cy + r + 8
  }, textProps, {
    fontSize: "80%"
  }), label));
}

/***/ }),

/***/ 48059:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ SvgWidget; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function SvgWidget(props) {
  var {
    width,
    height,
    size = "100%",
    background,
    children,
    role,
    title,
    viewBox,
    tabIndex,
    svgRef
  } = props;
  var h = height || width;
  var aspectRatio = width / height;
  var vertical = aspectRatio < 1;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    style: {
      position: "relative",
      height: vertical ? size : undefined,
      width: vertical ? undefined : size
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", {
    ref: svgRef,
    xmlns: "http://www.w3.org/2000/svg",
    tabIndex: tabIndex,
    viewBox: viewBox || "0 0 " + width + " " + h,
    "aria-label": title,
    style: {
      height: vertical ? "100%" : undefined,
      width: vertical ? undefined : "100%"
    },
    role: role || "group"
  }, background && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    x: 0,
    y: 0,
    width: width,
    height: height,
    fill: background,
    rx: 1,
    ry: 1
  }), children));
}

/***/ }),

/***/ 92526:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PW": function() { return /* binding */ svgPointerPoint; },
/* harmony export */   "JI": function() { return /* binding */ closestPoint; },
/* harmony export */   "x8": function() { return /* binding */ describeArc; }
/* harmony export */ });
/* unused harmony export polarToCartesian */
function svgPointerPoint(svg, event) {
  var point = svg.createSVGPoint();
  point.x = event.clientX;
  point.y = event.clientY;
  var res = point.matrixTransform(svg.getScreenCTM().inverse());
  return res;
}
function closestPoint(pathNode, step, point) {
  var pathLength = pathNode.getTotalLength();

  var distance2 = p => {
    var dx = p.x - point.x;
    var dy = p.y - point.y;
    return dx * dx + dy * dy;
  };

  var bestLength = 0;
  var bestDistance = Infinity;

  for (var scanLength = 0; scanLength <= pathLength; scanLength += step) {
    var scan = pathNode.getPointAtLength(scanLength);
    var scanDistance = distance2(scan);

    if (scanDistance < bestDistance) {
      bestLength = scanLength;
      bestDistance = scanDistance;
    }
  }

  return bestLength / pathLength;
}
function polarToCartesian(centerX, centerY, radius, angleInDegrees) {
  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
  return {
    x: centerX + radius * Math.cos(angleInRadians),
    y: centerY + radius * Math.sin(angleInRadians)
  };
}
function describeArc(x, y, radius, startAngle, endAngle, large) {
  var start = polarToCartesian(x, y, radius, endAngle);
  var end = polarToCartesian(x, y, radius, startAngle);
  var largeArcFlag = large !== true && endAngle - startAngle <= 180 ? "0" : "1";
  var d = ["M", start.x, start.y, "A", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(" ");
  return d;
}

/***/ }),

/***/ 8584:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useWidgetSize; }
/* harmony export */ });
function useWidgetSize(variant, widgetCount) {
  var icon = variant === "icon";
  var mini = icon;
  var widgetSize;

  switch (widgetCount || 1) {
    case 1:
    case 2:
      widgetSize = mini ? "12em" : "16em";
      break;

    case 3:
    case 4:
    case 5:
    case 6:
      widgetSize = mini ? "10em" : "14em";
      break;

    default:
      widgetSize = mini ? "4em" : "5em";
      break;
  }

  return widgetSize;
}

/***/ }),

/***/ 60650:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useWidgetTheme; }
/* harmony export */ });
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66449);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91350);



function useWidgetTheme(color) {
  var theme = (0,_mui_material__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)();
  var {
    palette
  } = theme;
  var {
    background
  } = palette;
  var {
    darkMode
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ui_DarkModeContext__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  var active = color === "primary" ? palette.primary.main : color === "secondary" ? palette.secondary.main : palette.info.main;
  var backgroundColor = darkMode === "dark" ? background.default : palette.grey[800];
  var controlBackground = darkMode === "dark" ? palette.grey[800] : palette.grey[400];
  var textPrimary = palette.text.primary;
  var textProps = {
    fill: textPrimary,
    alignmentBaseline: "central",
    dominantBaseline: "middle",
    textAnchor: "middle",
    pointerEvents: "none",
    letterSpacing: 0,
    style: {
      userSelect: "none",
      pointerEvents: "none"
    }
  };
  return {
    background: backgroundColor,
    controlBackground,
    active,
    textPrimary,
    textProps
  };
}

/***/ }),

/***/ 20392:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var JacdacContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  bus: undefined
});
JacdacContext.displayName = "Jacdac";
/* harmony default export */ __webpack_exports__["Z"] = (JacdacContext);

/***/ }),

/***/ 727:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ JacdacProvider; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20392);
/* harmony import */ var _providerbus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24725);



function JacdacProvider(props) {
  var {
    connectOnStart,
    children
  } = props;
  var firstConnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false); // connect in background on first load.

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // bus live accross hot-reloads
    if (!firstConnect.current && connectOnStart && typeof document !== "undefined" && document.visibilityState === "visible") {
      firstConnect.current = true;
      _providerbus__WEBPACK_IMPORTED_MODULE_2__/* ["default"].connect */ .Z.connect(true);
    }
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Context__WEBPACK_IMPORTED_MODULE_1__/* ["default"].Provider */ .Z.Provider, {
    value: {
      bus: _providerbus__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z
    }
  }, children);
}

/***/ }),

/***/ 24725:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "A": function() { return /* binding */ UIFlags; },
  "Z": function() { return /* binding */ providerbus; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
var setPrototypeOf = __webpack_require__(89611);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) (0,setPrototypeOf/* default */.Z)(subClass, superClass);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules
var toConsumableArray = __webpack_require__(15785);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(43144);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/packet.ts
var packet = __webpack_require__(57683);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/constants.ts
var constants = __webpack_require__(71815);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/utils.ts
var utils = __webpack_require__(81794);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/buffer.ts
var buffer = __webpack_require__(3482);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pretty.ts
var pretty = __webpack_require__(10913);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/spec.ts + 1 modules
var jdom_spec = __webpack_require__(26799);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/node.ts
var node = __webpack_require__(60154);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/field.ts





/**
 * A Jacdac field.
 * @category JDOM
 */
var JDField = /*#__PURE__*/function (_JDNode) {
  (0,inheritsLoose/* default */.Z)(JDField, _JDNode);

  /**
   * Gets the parent JDOM member
   * @category JDOM
   */

  /**
   * Gets the index in the unpacked data payload
   * @category Specification
   */

  /**
   * Gets the field specification
   * @category Specification
   */

  /**
   * @internal
   */
  function JDField(member, index, specification) {
    var _this;

    _this = _JDNode.call(this) || this;
    _this.member = member;
    _this.index = index;
    _this.specification = specification;
    return _this;
  }
  /**
   * Gets the JDOM node identifier
   * @category JDOM
   */


  (0,createClass/* default */.Z)(JDField, [{
    key: "id",
    get: function get() {
      return this.nodeKind + ":" + this.member.service.device.deviceId + ":" + this.member.service.serviceIndex.toString(16) + ":" + this.member.code.toString(16) + ":" + this.index.toString(16);
    }
    /**
     * Gets the JDOM name
     * @category JDOM
     */

  }, {
    key: "name",
    get: function get() {
      return this.specification.name === "_" ? this.member.specification.name : this.specification.name;
    }
    /**
     * @internal
     */

  }, {
    key: "children",
    get: function get() {
      return [];
    }
    /**
     * Gets the JDOM qualified name
     * @category JDOM
     */

  }, {
    key: "qualifiedName",
    get: function get() {
      return this.member.qualifiedName + "." + this.name;
    }
    /**
     * Gets the JDOM parent
     * @category JDOM
     */

  }, {
    key: "parent",
    get: function get() {
      return this.member;
    }
    /**
     * Gets the JDOM friendly name
     * @category JDOM
     */

  }, {
    key: "friendlyName",
    get: function get() {
      var parts = [this.member.friendlyName];
      if (this.specification.name !== "_") parts.push(this.name);
      return parts.join(".");
    }
    /**
     * @internal
     */

  }, {
    key: "dataTypeName",
    get: function get() {
      var parts = [this.member.service.specification.shortName, this.name];
      return parts.join(".");
    }
    /**
     * Gets the unit of the data stored in the field
     * @category Data
     */

  }, {
    key: "unit",
    get: function get() {
      return this.specification.unit;
    }
    /**
     * Gets ``FIELD_NODE_NAME``
     * @category JDOM
     */

  }, {
    key: "nodeKind",
    get: function get() {
      return constants/* FIELD_NODE_NAME */.ygq;
    }
    /**
     * @internal
     */

  }, {
    key: "decoded",
    get: function get() {
      var decoded = this.member.decoded;
      return decoded === null || decoded === void 0 ? void 0 : decoded.decoded[this.index];
    }
    /**
     * Gets the decoded field value
     * @category Data
     */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any

  }, {
    key: "value",
    get: function get() {
      var _this$decoded;

      return (_this$decoded = this.decoded) === null || _this$decoded === void 0 ? void 0 : _this$decoded.value;
    }
  }]);

  return JDField;
}(node/* default */.Z);
/* harmony default export */ var jdom_field = (JDField);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/servicemembernode.ts




/**
 * Base class for JDOM service member classes.
 * @category JDOM
 */

var JDServiceMemberNode = /*#__PURE__*/function (_JDNode) {
  (0,inheritsLoose/* default */.Z)(JDServiceMemberNode, _JDNode);

  /**
   * @internal
   */
  function JDServiceMemberNode(service, code, isPacket) {
    var _this;

    _this = _JDNode.call(this) || this;
    _this._notImplemented = false;
    _this._specification = null;
    _this.service = service;
    _this.code = code;
    _this.isPacket = isPacket;
    return _this;
  }
  /**
   * Gets the node identifier in the JDOM tree
   * @category JDOM
   */


  var _proto = JDServiceMemberNode.prototype;

  /**
   * Internal
   * @internal
   */
  _proto.setNotImplemented = function setNotImplemented() {
    if (!this._notImplemented) {
      this._notImplemented = true;
      this.emit(constants/* CHANGE */.Ver);
    }
  }
  /**
   * @internal
   */
  ;

  (0,createClass/* default */.Z)(JDServiceMemberNode, [{
    key: "id",
    get: function get() {
      return this.nodeKind + ":" + this.service.device.deviceId + ":" + this.service.serviceIndex.toString(16) + ":" + this.code.toString(16);
    }
    /**
     * Gets the event name, if specified.
     * @category JDOM
     */

  }, {
    key: "name",
    get: function get() {
      var _this$specification;

      return ((_this$specification = this.specification) === null || _this$specification === void 0 ? void 0 : _this$specification.name) || this.code.toString(16);
    }
    /**
     * Gets the qualitified event name, if specified.
     * @category JDOM
     */

  }, {
    key: "qualifiedName",
    get: function get() {
      return this.service.qualifiedName + "." + this.name;
    }
    /**
     * Gets the event specification if known.
     * @category Specification
     */

  }, {
    key: "specification",
    get: function get() {
      var _this$service$specifi;

      if (this._specification === null) // lookup once
        this._specification = (_this$service$specifi = this.service.specification) === null || _this$service$specifi === void 0 ? void 0 : _this$service$specifi.packets.find(packet => this.isPacket(packet) && packet.identifier === this.code);
      return this._specification;
    }
    /**
     * Gets the parent service client instance.
     * @category JDOM
     */

  }, {
    key: "parent",
    get: function get() {
      return this.service;
    }
    /**
     * Gets the event friendly name.
     * @category JDOM
     */

  }, {
    key: "friendlyName",
    get: function get() {
      var parts = [this.service.friendlyName, this.name];
      return parts.join(".");
    }
    /**
     * Indicates if the member is not implemented on the server side
     * @category JDOM
     */

  }, {
    key: "notImplemented",
    get: function get() {
      return this._notImplemented;
    }
  }]);

  return JDServiceMemberNode;
}(node/* default */.Z);
/* harmony default export */ var servicemembernode = (JDServiceMemberNode);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pack.ts
var pack = __webpack_require__(91635);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/packobject.ts
var packobject = __webpack_require__(53616);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/register.ts












/**
 * A Jacdac register client.
 * @category JDOM
 */
var JDRegister = /*#__PURE__*/function (_JDServiceMemberNode) {
  (0,inheritsLoose/* default */.Z)(JDRegister, _JDServiceMemberNode);

  /**
   * @internal
   */
  function JDRegister(service, code) {
    var _this;

    _this = _JDServiceMemberNode.call(this, service, code, jdom_spec/* isRegister */.x5) || this;
    _this._lastSetTimestamp = -Infinity;
    _this._lastGetTimestamp = -Infinity;
    _this._lastGetAttempts = 0;
    _this._needsRefresh = false;
    return _this;
  }
  /**
   * Returns ``REGISTER_NODE_NAME``
   * @category JDOM
   */


  var _proto = JDRegister.prototype;

  /**
   * Clears the get timestamp
   * @internal
   * @category Packets
   */
  _proto.clearGetTimestamp = function clearGetTimestamp() {
    this._lastGetTimestamp = -Infinity;
  }
  /**
   * Number of attempts to send a ``get`` packet without response
   * @category Packets
   */
  ;

  /**
   * Send a message to set the register value
   * @param data packed data
   * @param autoRefresh immediately send a ``get`` packet
   * @returns
   * @category Packets
   */
  _proto.sendSetAsync = function sendSetAsync(data, autoRefresh) {
    if (this.notImplemented) return Promise.resolve();
    var cmd = constants/* CMD_SET_REG */.YUL | this.code;
    var pkt = packet/* default.from */.Z.from(cmd, data);
    this._lastSetTimestamp = this.service.device.bus.timestamp;
    var p = this.service.sendPacketAsync(pkt, this.service.registersUseAcks);
    if (autoRefresh) p = this.service.device.bus.delay(50).then(() => this.sendGetAsync());
    return p;
  }
  /**
   * Requests the value of the register by sending a ``get`` packet
   * @returns
   * @category Packets
   */
  ;

  _proto.sendGetAsync = function sendGetAsync() {
    if (this.notImplemented) return Promise.resolve();
    if ((0,jdom_spec/* isConstRegister */.n6)(this.specification) && !!this.data) return Promise.resolve();
    this._lastGetTimestamp = this.service.device.bus.timestamp;
    this._lastGetAttempts++;
    var cmd = constants/* CMD_GET_REG */.V4G | this.code;
    return this.service.sendCmdAsync(cmd, undefined, this.service.registersUseAcks).then(() => {
      this.emit(constants/* GET_ATTEMPT */.tDM);
    });
  }
  /**
   * Send a message to set the register value
   * @param values message to pack and send
   * @param autoRefresh immediately send a ``get`` packet
   * @category Packets
   */
  ;

  _proto.sendSetPackedAsync = function sendSetPackedAsync(values, autoRefresh) {
    var _this$specification;

    var fmt = (_this$specification = this.specification) === null || _this$specification === void 0 ? void 0 : _this$specification.packFormat;
    if (!fmt) throw new Error("unknown register data format");
    return this.sendSetAsync((0,pack/* jdpack */.AV)(fmt, values), autoRefresh);
  }
  /**
   * Sends a message to set the register value as a bpolean
   * @param value
   * @param autoRefresh
   * @param autoRefresh immediately send a ``get`` packet
   * @category Packets
   */
  ;

  _proto.sendSetBoolAsync = function sendSetBoolAsync(value, autoRefresh) {
    return this.sendSetPackedAsync([value ? 1 : 0], autoRefresh);
  }
  /**
   * Sends a message to set the register value as a string
   * @param value
   * @param autoRefresh
   * @param autoRefresh immediately send a ``get`` packet
   * @category Packets
   */
  ;

  _proto.sendSetStringAsync = function sendSetStringAsync(value, autoRefresh) {
    return this.sendSetPackedAsync([value || ""], autoRefresh);
  }
  /**
   * Gets the raw data from the last report packet
   * @category Data
   */
  ;

  /**
   * @internal
   */
  _proto.toString = function toString() {
    var d = this.data;
    return this.id + " " + (d ? (0,utils/* toHex */.NC)(d) : "");
  }
  /**
   * @internal
   */
  ;

  /**
   * Schedules to query the value for this register
   */
  _proto.scheduleRefresh = function scheduleRefresh() {
    if (this.notImplemented) return;
    this._needsRefresh = true;
  };

  /**
   * Refresh the value of the register within a timeout
   * @param skipIfValue don't refesh if any data if available
   * @returns
   * @category Data
   */
  _proto.refresh = function refresh(skipIfValue) {
    // don't refetch not implemented
    if (this.notImplemented) return; // don't refetch consts
    // don't refetch if already data

    if (!!this.data && (skipIfValue || (0,jdom_spec/* isConstRegister */.n6)(this.specification))) return;
    var bus = this.service.device.bus;
    return bus.withTimeout(constants/* REGISTER_REFRESH_TIMEOUT */.bh2, new Promise((resolve, reject) => {
      this.once(constants/* REPORT_RECEIVE */.Gb8, () => {
        var f = resolve;
        resolve = null;
        f();
      }); // re-send get if no answer within 40ms and 90ms

      this.sendGetAsync().then(() => bus.delay(constants/* REGISTER_REFRESH_RETRY_0 */.ZDL)).then(() => {
        if (resolve) return this.sendGetAsync().then(() => bus.delay(constants/* REGISTER_REFRESH_RETRY_1 */.K$p));
      }).then(() => {
        if (resolve) return this.sendGetAsync();
      }).catch(e => reject(e));
    }));
  }
  /**
   * @internal
   */
  ;

  _proto.processPacket = function processPacket(pkt) {
    // sanity check
    console.assert(!this.notImplemented, "register not implemented received packet", {
      pkt
    });
    if (pkt.isRegisterGet) this.processReport(pkt);else if (pkt.isRegisterSet) {
      // another device sent a set packet to this register
      // so most likely it's value changed
      // clear any data caching to force updating the value
      this.clearGetTimestamp();
    }
  };

  _proto.setNotImplemented = function setNotImplemented() {
    console.assert(!this._lastReportPkt, "register reported changed not implemented", {
      register: this
    });

    _JDServiceMemberNode.prototype.setNotImplemented.call(this);
  };

  _proto.processReport = function processReport(pkt) {
    var updated = !(0,utils/* bufferEq */.zo)(this.data, pkt.data) || this._needsRefresh;
    this._lastReportPkt = pkt;
    this._lastGetAttempts = 0; // reset counter

    this._lastGetTimestamp = this.service.device.bus.timestamp; // reset time counter too

    this._needsRefresh = false;
    this.emit(constants/* REPORT_RECEIVE */.Gb8, this);

    if (updated) {
      this.emitPropagated(constants/* REPORT_UPDATE */.rGZ, this);
      this.emit(constants/* CHANGE */.Ver);
    }
  }
  /**
   * @internal
   */
  ;

  _proto.compareTo = function compareTo(b) {
    return this.code - b.code || this.service.compareTo(b.service);
  };

  (0,createClass/* default */.Z)(JDRegister, [{
    key: "nodeKind",
    get: function get() {
      return constants/* REGISTER_NODE_NAME */.nJc;
    }
    /**
     * Gets the list of field, if the specification is known
     * @category JDOM
     */

  }, {
    key: "fields",
    get: function get() {
      var _this$specification2;

      if (!this._fields) this._fields = (_this$specification2 = this.specification) === null || _this$specification2 === void 0 ? void 0 : _this$specification2.fields.map((field, index) => new jdom_field(this, index, field));
      return this._fields.slice();
    }
    /**
     * Gets the list of fields
     * @category JDOM
     */

  }, {
    key: "children",
    get: function get() {
      return this.fields;
    }
    /**
     * Timestamp of the last ``register set`` packet
     * @category Packets
     */

  }, {
    key: "lastSetTimestamp",
    get: function get() {
      return this._lastSetTimestamp;
    }
    /**
     * Timestamp of the last ``register get`` packet
     * @category Packets
     */

  }, {
    key: "lastGetTimestamp",
    get: function get() {
      return this._lastGetTimestamp;
    }
  }, {
    key: "lastGetAttempts",
    get: function get() {
      return this._lastGetAttempts;
    }
  }, {
    key: "data",
    get: function get() {
      var _this$_lastReportPkt;

      return (_this$_lastReportPkt = this._lastReportPkt) === null || _this$_lastReportPkt === void 0 ? void 0 : _this$_lastReportPkt.data;
    }
    /**
     * Gets the timestamp when received the last report with data
     * @category Data
     */

  }, {
    key: "lastDataTimestamp",
    get: function get() {
      var _this$_lastReportPkt2;

      return (_this$_lastReportPkt2 = this._lastReportPkt) === null || _this$_lastReportPkt2 === void 0 ? void 0 : _this$_lastReportPkt2.timestamp;
    }
    /**
     * Get the data from the last report packet, unpacked according to the specification.
     * @category Data
     */

  }, {
    key: "unpackedValue",
    get: function get() {
      var _this$specification3;

      var d = this.data;
      var fmt = (_this$specification3 = this.specification) === null || _this$specification3 === void 0 ? void 0 : _this$specification3.packFormat;
      return d && fmt && (0,pack/* jdunpack */.TE)(this.data, fmt);
    }
    /**
     * Gets the data from the last report packet, unpacked and hydrated into an object.
     * @category Data
     */

  }, {
    key: "objectValue",
    get: function get() {
      var {
        specification
      } = this;
      return (0,packobject/* unpackedToObject */.f)(this.unpackedValue, specification === null || specification === void 0 ? void 0 : specification.fields, specification.name);
    }
    /**
     * Gets the data as a signed integer
     * @category Data
     */

  }, {
    key: "intValue",
    get: function get() {
      var d = this.data;
      return d && (0,buffer/* intOfBuffer */.wr)(d);
    }
    /**
     * Gets the data as a unsigned integer
     * @category Data
     */

  }, {
    key: "uintValue",
    get: function get() {
      var d = this.data;
      return d && (0,buffer/* uintOfBuffer */.zq)(d);
    }
    /**
     * Gets the data as a boolean
     * @category Data
     */

  }, {
    key: "boolValue",
    get: function get() {
      if (this.data === undefined) return undefined;
      return !!this.intValue;
    }
    /**
     * Gets the data as a string
     * @category Data
     */

  }, {
    key: "stringValue",
    get: function get() {
      var buf = this.data;
      if (buf === undefined) return undefined;
      var value;

      try {
        value = (0,utils/* fromUTF8 */.W_)((0,utils/* uint8ArrayToString */.DA)(buf));
      } catch (_unused) {
        // invalid UTF8
        value = (0,utils/* uint8ArrayToString */.DA)(buf);
      }

      return value;
    }
    /**
     * Gets a pretty printed represention of the data
     * @category Data
     */

  }, {
    key: "humanValue",
    get: function get() {
      var _this$decoded, _this$decoded$decoded;

      return (_this$decoded = this.decoded) === null || _this$decoded === void 0 ? void 0 : (_this$decoded$decoded = _this$decoded.decoded) === null || _this$decoded$decoded === void 0 ? void 0 : _this$decoded$decoded.map(field => field.humanValue).join(",");
    }
  }, {
    key: "decoded",
    get: function get() {
      var _this$_lastReportPkt3;

      return (_this$_lastReportPkt3 = this._lastReportPkt) === null || _this$_lastReportPkt3 === void 0 ? void 0 : _this$_lastReportPkt3.decoded;
    }
  }, {
    key: "needsRefresh",
    get: function get() {
      return this._needsRefresh;
    }
  }]);

  return JDRegister;
}(servicemembernode);
/* harmony default export */ var jdom_register = (JDRegister);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/event.ts






/**
 * A Jacdac event client.
 * @category JDOM
 */

var JDEvent = /*#__PURE__*/function (_JDServiceMemberNode) {
  (0,inheritsLoose/* default */.Z)(JDEvent, _JDServiceMemberNode);

  /**
   * @internal
   */
  function JDEvent(service, code) {
    var _this;

    _this = _JDServiceMemberNode.call(this, service, code, jdom_spec/* isEvent */.cO) || this;
    _this._count = 0;
    return _this;
  }
  /**
   * Returns the ``EVENT_NODE_NAME`` identifier
   * @category JDOM
   */


  var _proto = JDEvent.prototype;

  /**
   * @internal
   */
  _proto.processEvent = function processEvent(pkt) {
    var {
      device
    } = this.service;
    var ec = (device.eventCounter || 0) + 1; // how many packets ahead and behind current are we?

    var ahead = pkt.eventCounter - ec & constants/* CMD_EVENT_COUNTER_MASK */.EME;
    var behind = ec - pkt.eventCounter & constants/* CMD_EVENT_COUNTER_MASK */.EME; // ahead == behind == 0 is the usual case, otherwise
    // behind < 60 means this is an old event (or retransmission of something we already processed)

    var old = behind < 60;
    var missed5 = ahead < 5;
    var isahead = ahead > 0; // ahead < 5 means we missed at most 5 events,
    // so we ignore this one and rely on retransmission
    // of the missed events, and then eventually the current event

    if (isahead && (old || missed5)) return;
    this._lastReportPkt = pkt;
    this._count++;
    this.emitPropagated(constants/* EVENT */.Ks0, this);
    this.emit(constants/* CHANGE */.Ver); // update device counter

    device.eventCounter = pkt.eventCounter;
  };

  (0,createClass/* default */.Z)(JDEvent, [{
    key: "nodeKind",
    get: function get() {
      return constants/* EVENT_NODE_NAME */.Yuh;
    }
    /**
     * Gets the field node
     * @category Service Clients
     */

  }, {
    key: "fields",
    get: function get() {
      var _this$specification;

      if (!this._fields) this._fields = (_this$specification = this.specification) === null || _this$specification === void 0 ? void 0 : _this$specification.fields.map((field, index) => new jdom_field(this, index, field));
      return this._fields.slice();
    }
    /**
     * Gets the list of fields
     * @category JDOM
     */

  }, {
    key: "children",
    get: function get() {
      return this.fields;
    }
    /**
     * Gets the raw data attached to the last event packet
     * @category Data
     */

  }, {
    key: "data",
    get: function get() {
      var _this$_lastReportPkt;

      return (_this$_lastReportPkt = this._lastReportPkt) === null || _this$_lastReportPkt === void 0 ? void 0 : _this$_lastReportPkt.data;
    }
    /**
     * Gets the unpacked data attached to the last event packet, if the event specification is known.
     * @category Data
     */

  }, {
    key: "unpacked",
    get: function get() {
      var _this$_lastReportPkt2;

      var {
        packFormat
      } = this.specification || {};
      return packFormat && ((_this$_lastReportPkt2 = this._lastReportPkt) === null || _this$_lastReportPkt2 === void 0 ? void 0 : _this$_lastReportPkt2.jdunpack(packFormat));
    }
    /**
     * Gets a counter of occurences for this event.
     * @category Data
     */

  }, {
    key: "count",
    get: function get() {
      return this._count;
    }
    /**
     * Gets the timestamp of the last packet with data received for this event.
     * @category Data
     */

  }, {
    key: "lastDataTimestamp",
    get: function get() {
      var _this$_lastReportPkt3;

      return (_this$_lastReportPkt3 = this._lastReportPkt) === null || _this$_lastReportPkt3 === void 0 ? void 0 : _this$_lastReportPkt3.timestamp;
    }
    /**
     * @internal
     */

  }, {
    key: "decoded",
    get: function get() {
      var _this$_lastReportPkt4;

      return (_this$_lastReportPkt4 = this._lastReportPkt) === null || _this$_lastReportPkt4 === void 0 ? void 0 : _this$_lastReportPkt4.decoded;
    }
  }]);

  return JDEvent;
}(servicemembernode);
/* harmony default export */ var jdom_event = (JDEvent);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/dist/specconstants.ts
var specconstants = __webpack_require__(73512);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/pipes.ts
var pipes = __webpack_require__(93642);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/flags.ts
var flags = __webpack_require__(21258);
// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/spectool/jdutils.ts
var jdutils = __webpack_require__(30055);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/service.ts


















/**
 * A Jacdac service client hosting registers, events.
 * @category JDOM
 */
var JDService = /*#__PURE__*/function (_JDNode) {
  (0,inheritsLoose/* default */.Z)(JDService, _JDNode);

  /**
   * Gets the service class
   * @category Control
   */
  // packets received since last announce

  /**
   * @internal
   */
  function JDService(device, serviceIndex) {
    var _this;

    _this = _JDNode.call(this) || this;
    _this._reports = [];
    _this._specification = null;
    _this.registersUseAcks = false;
    _this._clients = [];
    _this.device = device;
    _this.serviceIndex = serviceIndex;
    _this.serviceClass = _this.device.serviceClassAt(_this.serviceIndex);

    var statusCodeChanged = _this.event(specconstants/* BaseEvent.StatusCodeChanged */.DVg.StatusCodeChanged);

    statusCodeChanged.on(constants/* CHANGE */.Ver, () => {
      // todo update status code with event payload
      var {
        data
      } = statusCodeChanged; //console.debug(`${this}: status code changed event`, { data })
      // schedule data update

      var statusCode = _this.register(specconstants/* BaseReg.StatusCode */.vCn.StatusCode);

      statusCode === null || statusCode === void 0 ? void 0 : statusCode.clearGetTimestamp();
    });
    return _this;
  }
  /**
   * Gets the node identifier
   * @category JDOM
   */


  var _proto = JDService.prototype;

  _proto.report = function report(identifier) {
    return this._reports.find(r => r.registerIdentifier === identifier);
  };

  /**
   * Resolves the service instance name, if resolved
   * @category Control
   */
  _proto.resolveInstanceName =
  /*#__PURE__*/
  function () {
    var _resolveInstanceName = (0,asyncToGenerator/* default */.Z)(function* () {
      var r = this.register(specconstants/* SystemReg.InstanceName */.ZJq.InstanceName);
      yield r === null || r === void 0 ? void 0 : r.refresh();
      return r === null || r === void 0 ? void 0 : r.stringValue;
    });

    function resolveInstanceName() {
      return _resolveInstanceName.apply(this, arguments);
    }

    return resolveInstanceName;
  }()
  /**
   * Gets the specification of the service. Undefined if unknown
   * @category Services
   */
  ;

  /**
   * Gets the list of registers in the service
   * @param options
   * @returns
   */
  _proto.registers = function registers(options) {
    if (!this._registers) {
      var spec = this.specification;
      this._registers = ((spec === null || spec === void 0 ? void 0 : spec.packets) || []).filter(jdom_spec/* isRegister */.x5).map(pkt => new jdom_register(this, pkt.identifier));
    }

    var regs = this._registers.slice(0);

    if (options !== null && options !== void 0 && options.ignoreNacks) regs = regs.filter(r => !r.notImplemented);
    return regs;
  }
  /**
   * Gets the registers and events
   * @category JDOM
   */
  ;

  /**
   * Gets a register for the given code
   * @param registerCode register identifier as found in the specification
   * @returns a register instance (if found in specifiaction)
   * @category Registers
   */
  _proto.register = function register(registerCode) {
    if (isNaN(registerCode)) return undefined; // cache known registers

    this.registers();

    var register = this._registers.find(reg => reg.code === registerCode); // we may not have a spec.


    if (!register) {
      var spec = this.specification;

      if (spec && !spec.packets.some(pkt => (0,jdom_spec/* isRegister */.x5)(pkt) && pkt.identifier === registerCode)) {
        if (flags/* default.diagnostics */.Z.diagnostics && !(0,jdom_spec/* isOptionalReadingRegisterCode */.cb)(registerCode)) console.debug("attempting to access register " + (specconstants/* SystemReg */.ZJq[registerCode] || "0x" + registerCode.toString(16)));
        return undefined;
      }

      this._registers.push(register = new jdom_register(this, registerCode));
    }

    return register;
  }
  /**
   * Gets an event for the given code
   * @param eventCode event identifier as found in the specification
   * @returns a event instance (if found in specifiaction)
   * @category Events
   */
  ;

  _proto.event = function event(eventCode) {
    if (isNaN(eventCode)) return undefined;
    if (!this._events) this._events = [];

    var event = this._events.find(ev => ev.code === eventCode);

    if (!event) {
      var spec = this.specification;

      if (spec && !spec.packets.some(pkt => (0,jdom_spec/* isEvent */.cO)(pkt) && pkt.identifier === eventCode)) {
        if (flags/* default.diagnostics */.Z.diagnostics) console.debug("attempting to access event " + (specconstants/* SystemEvent */.nSK[eventCode] || "0x" + eventCode.toString(16)));
        return undefined;
      }

      this._events.push(event = new jdom_event(this, eventCode));
    }

    return event;
  }
  /**
   * Send packet to the service server
   * @param pkt packet to send
   * @param ack acknolegment required
   * @category Packets
   */
  ;

  _proto.sendPacketAsync =
  /*#__PURE__*/
  function () {
    var _sendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (pkt, ack) {
      pkt.device = this.device;
      pkt.serviceIndex = this.serviceIndex;
      if (ack !== undefined) pkt.requiresAck = !!ack;
      if (pkt.requiresAck) yield this.device.sendPktWithAck(pkt);else yield pkt.sendCmdAsync(this.device);
      this.emit(constants/* PACKET_SEND */.RaS, pkt); // invalid register after a command call to refresh their values asap

      if (pkt.isCommand && !pkt.isRegisterGet && !pkt.isRegisterSet) this.invalidateRegisterValues(pkt);
    });

    function sendPacketAsync(_x, _x2) {
      return _sendPacketAsync.apply(this, arguments);
    }

    return sendPacketAsync;
  }()
  /**
   * Send a command to the service server
   * @param pkt packet to send
   * @param ack acknolegment required
   * @category Packets
   */
  ;

  _proto.sendCmdAsync = function sendCmdAsync(cmd, data, ack) {
    var pkt = data ? packet/* default.from */.Z.from(cmd, data) : packet/* default.onlyHeader */.Z.onlyHeader(cmd);
    return this.sendPacketAsync(pkt, ack);
  }
  /**
   * Packs values and sends command to the service server
   * @param cmd packet to send
   * @param values unpacked values, layed as specified
   * @param ack acknolegment required
   * @category Packets
   */
  ;

  _proto.sendCmdPackedAsync = function sendCmdPackedAsync(cmd, values, ack) {
    var spec = this.specification.packets.find(pkt => pkt.kind === "command" && pkt.identifier === cmd);
    var packFormat = spec === null || spec === void 0 ? void 0 : spec.packFormat;
    if (!packFormat) throw new Error("Unknown packing format");
    var data = values ? (0,pack/* jdpack */.AV)(packFormat, values) : undefined;
    return this.sendCmdAsync(cmd, data, ack);
  }
  /**
   * Send a command and await response to the service server
   * @param pkt packet to send
   * @param ack acknolegment required
   * @category Packets
   */
  ;

  _proto.sendCmdAwaitResponseAsync = function sendCmdAwaitResponseAsync(pkt, timeout) {
    if (timeout === void 0) {
      timeout = 500;
    }

    var {
      bus
    } = this.device;
    return new Promise((resolve, reject) => {
      var handleRes = resp => {
        if (resp.serviceCommand == pkt.serviceCommand) {
          this.off(constants/* REPORT_RECEIVE */.Gb8, handleRes);
          if (resolve) resolve(resp);
          resolve = null;
        }
      };

      bus.delay(timeout).then(() => {
        if (!resolve) return;
        resolve = null;
        this.off(constants/* REPORT_RECEIVE */.Gb8, handleRes);
        reject(new Error("timeout (" + timeout + "ms) waiting for response to " + pkt));
      });
      this.sendPacketAsync(pkt).then(() => {
        this.on(constants/* REPORT_RECEIVE */.Gb8, handleRes);
      }); // the handler remove either upon timeout,
      // or on first invocation of handleRes()
    });
  }
  /**
   * @internal
   */
  ;

  _proto.processPacket = function processPacket(pkt) {
    this.emit(constants/* PACKET_RECEIVE */.u_S, pkt);

    if (pkt.isReport) {
      this.emit(constants/* REPORT_RECEIVE */.Gb8, pkt);

      if (pkt.isRegisterGet) {
        var id = pkt.registerIdentifier;
        var reg = this.register(id);
        if (reg) reg.processPacket(pkt);
      } else if (pkt.isEvent) {
        var ev = this.event(pkt.eventCode);
        if (ev) ev.processEvent(pkt);
      } else if (pkt.serviceCommand === specconstants/* SystemCmd.CommandNotImplemented */.xSq.CommandNotImplemented) {
        var [serviceCommand, packetCrc] = pkt.jdunpack("u16 u16");

        if (serviceCommand >> 12 === constants/* CMD_GET_REG */.V4G >> 12 || serviceCommand >> 12 === constants/* CMD_SET_REG */.YUL >> 12) {
          var regCode = serviceCommand & constants/* CMD_REG_MASK */.Pbb;

          var _reg = this.registers().find(r => r.code === regCode);

          _reg === null || _reg === void 0 ? void 0 : _reg.setNotImplemented();
        }
      } else if (pkt.isCommand) {// this is a report...
        //console.log("cmd report", { pkt })
      }
    } else if (pkt.isRegisterSet) {
      var _id = pkt.registerIdentifier;

      var _reg2 = this.register(_id);

      if (_reg2) _reg2.processPacket(pkt);
    } else if (pkt.isCommand) {
      this.invalidateRegisterValues(pkt);
      this.emit(constants/* COMMAND_RECEIVE */.R76, pkt);
    }
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.invalidateRegisterValues = function invalidateRegisterValues(pkt) {
    //console.log(`clearing register get timestamp`, pkt)
    this.registers().filter(r => r.specification && !(0,jdom_spec/* isConstRegister */.n6)(r.specification)).forEach(r => r.clearGetTimestamp());
  }
  /**
   * @internal
   */
  ;

  _proto.compareTo = function compareTo(b) {
    return this.serviceClass - b.serviceClass || (0,utils/* strcmp */.eT)(this.device.deviceId, b.device.deviceId) || this.serviceIndex - b.serviceIndex;
  };

  _proto.addClient = function addClient(client) {
    if (client && this._clients.indexOf(client) < 0) {
      this._clients.push(client);

      this.emit(constants/* SERVICE_CLIENT_ADDED */.n5V, client);
    }
  };

  _proto.removeClient = function removeClient(client) {
    var i = this._clients.indexOf(client);

    if (i > -1) {
      this._clients.splice(i, 1);

      this.emit(constants/* SERVICE_CLIENT_REMOVED */.w1z, client);
    }
  };

  _proto.receiveWithInPipe = /*#__PURE__*/function () {
    var _receiveWithInPipe = (0,asyncToGenerator/* default */.Z)(function* (cmd, packFormat, timeout) {
      var inp = new pipes/* InPipeReader */.oI(this.device.bus);
      yield this.sendPacketAsync(inp.openCommand(cmd), true);
      var recv = [];

      for (var buf of yield inp.readData(timeout)) {
        var values = (0,pack/* jdunpack */.TE)(buf, packFormat);
        recv.push(values);
      }

      return recv;
    });

    function receiveWithInPipe(_x3, _x4, _x5) {
      return _receiveWithInPipe.apply(this, arguments);
    }

    return receiveWithInPipe;
  }();

  (0,createClass/* default */.Z)(JDService, [{
    key: "id",
    get: function get() {
      return this.nodeKind + ":" + this.device.deviceId + ":" + this.serviceIndex.toString(16);
    }
    /**
     * Gets the ``SERVICE_NODE_NAME`` identifier
     * @category JDOM
     */

  }, {
    key: "nodeKind",
    get: function get() {
      return constants/* SERVICE_NODE_NAME */.M_U;
    }
    /**
     * Gets the service name
     * @category JDOM
     */

  }, {
    key: "name",
    get: function get() {
      var _serviceName;

      return (_serviceName = (0,pretty/* serviceName */.HV)(this.serviceClass)) === null || _serviceName === void 0 ? void 0 : _serviceName.toLowerCase();
    }
    /**
     * Gets the service name and parent names
     * @category JDOM
     */

  }, {
    key: "friendlyName",
    get: function get() {
      var parts = [this.device.friendlyName];
      if (this.device.services({
        serviceClass: this.serviceClass
      }).length > 1) parts.push("[" + this.serviceIndex.toString(16) + "]");
      return parts.join(".");
    }
    /**
     * Gets the service qualified name
     * @category JDOM
     */

  }, {
    key: "qualifiedName",
    get: function get() {
      return this.device.qualifiedName + "[" + this.serviceIndex.toString(16) + "]";
    }
    /**
     * Gets the device holding the service
     * @category JDOM
     */

  }, {
    key: "parent",
    get: function get() {
      return this.device;
    }
  }, {
    key: "role",
    get: function get() {
      return this._role;
    },
    set: function set(value) {
      if (value !== this._role) {
        this._role = value;
        this.emit(constants/* ROLE_CHANGE */.X5h);
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }, {
    key: "reports",
    get: function get() {
      return this._reports.slice(0);
    }
  }, {
    key: "mixins",
    get: function get() {
      // find all 0x2 services follow this service
      var r = [];
      var {
        serviceClasses,
        serviceLength
      } = this.device;

      for (var i = this.serviceIndex + 1; i < serviceLength && (0,jdutils/* isMixinService */.fh)(serviceClasses[i]); ++i) {
        r.push(this.device.service(i));
      }

      return r;
    }
  }, {
    key: "isMixin",
    get: function get() {
      return (0,jdutils/* isMixinService */.fh)(this.serviceClass);
    }
  }, {
    key: "twin",
    get: function get() {
      return this._twin;
    },
    set: function set(server) {
      if (this._twin === server) return;
      if (this._twin) this._twin.twin = undefined;
      this._twin = server;
      server.twin = this;
      this.emit(constants/* CHANGE */.Ver);
    }
  }, {
    key: "readingRegister",
    get:
    /**
     * Gets the ``reading`` register associated to this service, if the specification supports it.
     * @category Registers
     */
    function get() {
      if (!this._readingRegister) {
        var _this$specification;

        var pkt = (_this$specification = this.specification) === null || _this$specification === void 0 ? void 0 : _this$specification.packets.find(pkt => (0,jdom_spec/* isReading */.vz)(pkt));
        this._readingRegister = pkt && this.register(pkt.identifier);
      }

      return this._readingRegister;
    }
  }, {
    key: "valueRegister",
    get:
    /**
     * Gets the ``value`` register associated to this service, if the specification supports it.
     * @category Registers
     */
    function get() {
      if (!this._valueRegister) {
        var _this$specification2;

        var pkt = (_this$specification2 = this.specification) === null || _this$specification2 === void 0 ? void 0 : _this$specification2.packets.find(pkt => (0,jdom_spec/* isValue */.wh)(pkt));
        this._valueRegister = pkt && this.register(pkt.identifier);
      }

      return this._valueRegister;
    }
  }, {
    key: "intensityRegister",
    get:
    /**
     * Gets the ``intensity`` register associated to this service, if the specification supports it.
     * @category Registers
     */
    function get() {
      if (!this._intensityRegister) {
        var _this$specification3;

        var pkt = (_this$specification3 = this.specification) === null || _this$specification3 === void 0 ? void 0 : _this$specification3.packets.find(pkt => (0,jdom_spec/* isIntensity */.tC)(pkt));
        this._intensityRegister = pkt && this.register(pkt.identifier);
      }

      return this._intensityRegister;
    }
  }, {
    key: "statusCodeRegister",
    get:
    /**
     * Gets the ``status_code`` register associated to this service, if the specification supports it.
     * @category Registers
     */
    function get() {
      if (!this._statusCodeRegister) {
        var _this$specification4;

        var pkt = (_this$specification4 = this.specification) === null || _this$specification4 === void 0 ? void 0 : _this$specification4.packets.find(pkt => pkt.identifier === specconstants/* SystemReg.StatusCode */.ZJq.StatusCode);
        this._statusCodeRegister = pkt && this.register(pkt.identifier);
      }

      return this._statusCodeRegister;
    }
    /**
     * Gets the service instance name, if resolved
     * @category Control
     */

  }, {
    key: "instanceName",
    get: function get() {
      var r = this.register(specconstants/* SystemReg.InstanceName */.ZJq.InstanceName);
      return r === null || r === void 0 ? void 0 : r.stringValue;
    }
  }, {
    key: "specification",
    get: function get() {
      if (this._specification === null) this._specification = (0,jdom_spec/* serviceSpecificationFromClassIdentifier */.d5)(this.serviceClass);
      return this._specification;
    }
  }, {
    key: "events",
    get: function get() {
      var _this$specification5;

      return ((_this$specification5 = this.specification) === null || _this$specification5 === void 0 ? void 0 : _this$specification5.packets.filter(jdom_spec/* isEvent */.cO).map(info => this.event(info.identifier))) || [];
    }
  }, {
    key: "children",
    get: function get() {
      return [].concat((0,toConsumableArray/* default */.Z)(this.registers()), (0,toConsumableArray/* default */.Z)(this.events));
    }
  }, {
    key: "clients",
    get: function get() {
      var _this$_clients;

      return ((_this$_clients = this._clients) === null || _this$_clients === void 0 ? void 0 : _this$_clients.slice(0)) || [];
    }
  }]);

  return JDService;
}(node/* default */.Z);
/* harmony default export */ var service = (JDService);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/eventsource.ts
var eventsource = __webpack_require__(45484);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/ledcontroller.ts





function trgbToValues(trgb) {
  return [trgb >> 16 & 0xff, trgb >> 8 & 0xff, trgb & 0xff, trgb >> 24 & 0xff];
}

var LEDController = /*#__PURE__*/function (_JDEventSource) {
  (0,inheritsLoose/* default */.Z)(LEDController, _JDEventSource);

  function LEDController(service, command) {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this.service = service;
    _this.command = command;
    return _this;
  }

  var _proto = LEDController.prototype;

  _proto.blink = /*#__PURE__*/function () {
    var _blink = (0,asyncToGenerator/* default */.Z)(function* (from, to, interval, repeat) {
      var on = (0,pack/* jdpack */.AV)("u8 u8 u8 u8", trgbToValues(from));
      var off = (0,pack/* jdpack */.AV)("u8 u8 u8 u8", trgbToValues(to));
      var {
        bus
      } = this.service.device;

      for (var i = 0; i < repeat; ++i) {
        yield this.service.sendCmdAsync(this.command, on);
        yield bus.delay(interval - 1);
        yield this.service.sendCmdAsync(this.command, off);
        yield bus.delay(interval - 1);
      }
    });

    function blink(_x, _x2, _x3, _x4) {
      return _blink.apply(this, arguments);
    }

    return blink;
  }();

  return LEDController;
}(eventsource/* default */.ZP);
/* harmony default export */ var ledcontroller = (LEDController);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/random.ts
var random = __webpack_require__(80303);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/device.ts















/**
 * Pipe information
 * @category Runtime
 */

/**
 * Collects packet statistics about the device
 * @category JDOM
 */
var DeviceStatsMonitor = /*#__PURE__*/function (_JDEventSource) {
  (0,inheritsLoose/* default */.Z)(DeviceStatsMonitor, _JDEventSource);

  // counter
  // horizon

  /**
   * @internal
   */
  function DeviceStatsMonitor() {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this._receivedPackets = 0;
    _this._restarts = 0;
    _this._announce = 0;
    _this._data = Array(0xf << 2).fill(0).map(() => ({
      received: 0,
      total: 0,
      restarts: 0
    }));
    _this._dataIndex = 0;
    return _this;
  }
  /**
   * Number of announce packets received by the device
   **/


  var _proto = DeviceStatsMonitor.prototype;

  /**
   * @internal
   */
  _proto.processAnnouncement = function processAnnouncement(pkt) {
    this._announce++;
    var {
      current: oldCurrent
    } = this; // collect metrics

    var received = this._receivedPackets;
    var total = pkt.data[2];
    var restarts = this._restarts;
    this._data[this._dataIndex] = {
      received,
      total,
      restarts
    };
    this._dataIndex = (this._dataIndex + 1) % this._data.length; // reset counter

    this._receivedPackets = 0;
    this._restarts = 0;
    var {
      current
    } = this;
    if (oldCurrent.dropped !== current.dropped || oldCurrent.restarts !== current.restarts) this.emit(constants/* CHANGE */.Ver);
  }
  /**
   * @internal
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.processPacket = function processPacket(pkt) {
    this._receivedPackets++;
  }
  /**
   * @internal
   */
  ;

  _proto.processRestart = function processRestart() {
    this._restarts++;
    this._announce = 0;
  };

  (0,createClass/* default */.Z)(DeviceStatsMonitor, [{
    key: "announce",
    get: function get() {
      return this._announce;
    }
    /**
     * Average packet dropped per announce period
     * @category Statistics
     */

  }, {
    key: "dropped",
    get: function get() {
      var r = this._data.filter(e => !!e.total) // ignore total 0
      .reduce((s, e) => s + (e.total - e.received), 0) / this._data.length || 0;
      return r;
    }
    /**
     * Number of restarts within the last 64 announce packets
     */

  }, {
    key: "restarts",
    get: function get() {
      var r = this._data.reduce((s, e) => s + e.restarts, 0);

      return r;
    }
    /**
     * Gets the current stats
     */

  }, {
    key: "current",
    get: function get() {
      var {
        dropped,
        restarts,
        announce
      } = this;
      return {
        dropped,
        restarts,
        announce
      };
    }
  }]);

  return DeviceStatsMonitor;
}(eventsource/* default */.ZP);
/**
 * A Jacdac device hosting services.
 * @category JDOM
 */

var JDDevice = /*#__PURE__*/function (_JDNode) {
  (0,inheritsLoose/* default */.Z)(JDDevice, _JDNode);

  /**
   * @internal
   */
  function JDDevice(bus, deviceId, pkt) {
    var _this2;

    _this2 = _JDNode.call(this) || this;
    _this2._flashing = false;
    _this2.stats = new DeviceStatsMonitor();
    _this2.bus = bus;
    _this2.deviceId = deviceId;
    _this2.connected = true;
    _this2._lost = false;
    _this2._identifying = false;
    _this2.lastSeen = bus.timestamp;
    _this2._source = pkt === null || pkt === void 0 ? void 0 : pkt.sender;
    _this2._replay = !!(pkt !== null && pkt !== void 0 && pkt.replay);
    return _this2;
  }
  /**
   * Quality of service statistics for this device
   * @category Diagnostics
   */


  var _proto2 = JDDevice.prototype;

  /**
   * Gets a description of the device.
   * @returns a descriptive string for this device
   * @category Diagnostics
   */
  _proto2.describe = function describe() {
    var ignoredServices = [constants/* SRV_CONTROL */.gm9, constants/* SRV_LOGGER */.w9j];
    return this.toString() + (this.isPhysical ? "" : " (sim)") + ": " + this.services().filter(srv => ignoredServices.indexOf(srv.serviceClass) < 0).map(s => {
      var _s$specification;

      return s.instanceName || ((_s$specification = s.specification) === null || _s$specification === void 0 ? void 0 : _s$specification.camelName) || s.serviceClass.toString(16);
    }).join(", ");
  }
  /**
   * Gets a unique identifier for this device in the bus
   * @category JDOM
   */
  ;

  _proto2.refreshFirmwareInfo = function refreshFirmwareInfo() {
    var _this$_services;

    var ctrl = (_this$_services = this._services) === null || _this$_services === void 0 ? void 0 : _this$_services[0];
    var firmwareRegs = [constants/* ControlReg.ProductIdentifier */.toU.ProductIdentifier, constants/* ControlReg.FirmwareVersion */.toU.FirmwareVersion, constants/* ControlReg.BootloaderProductIdentifier */.toU.BootloaderProductIdentifier, constants/* ControlReg.DeviceDescription */.toU.DeviceDescription];
    firmwareRegs.map(code => ctrl.register(code)).forEach(reg => reg.once(constants/* REPORT_UPDATE */.rGZ, () => {
      this.emitPropagated(constants/* DEVICE_FIRMWARE_INFO */.EGX);
      this.emitPropagated(constants/* CHANGE */.Ver);
    }));
  }
  /**
   * Indicates if no packet from this device has been observed in a while.
   * @category Lifecycle
   */
  ;

  /**
   * Indicates if the device contains at least one service matching the service class
   * @param serviceClass service class to match
   * @returns true if at least one service present
   * @category Services
   */
  _proto2.hasService = function hasService(serviceClass) {
    if (!this.announced) return false;
    if (serviceClass === 0) return true; // skip first 4 bytes

    for (var i = 4; i < this._servicesData.length; i += 4) {
      var sc = (0,buffer/* getNumber */.Dx)(this._servicesData, buffer/* NumberFormat.UInt32LE */.y4.UInt32LE, i);
      if ((0,jdom_spec/* isInstanceOf */.V9)(sc, serviceClass)) return true;
    }

    return false;
  }
  /**
   * Gets or allocates a pipe port
   * @param id identifier of the port
   * @returns a pipe port
   * @category Services
   */
  ;

  _proto2.port = function port(id) {
    if (!this._ports) this._ports = {};
    var key = id + "";
    var ex = this._ports[key];
    if (!ex) return this._ports[key] = {};
    return ex;
  }
  /**
   * Gets the number of services hosted by the device
   * @category Services
   */
  ;

  /**
   * Gets the service class at a given index
   * @param index index of the service
   * @returns service class
   * @category Services
   */
  _proto2.serviceClassAt = function serviceClassAt(index) {
    if (index == 0) return 0;
    index <<= 2;
    if (!this.announced || index + 4 > this._servicesData.length) return undefined;
    return (0,utils/* read32 */.Zy)(this._servicesData, index);
  }
  /**
   * Gets the list of service classes
   * @category Services
   */
  ;

  _proto2.initServices = function initServices(force) {
    if (force) this._services = undefined;

    if (!this._services && this._servicesData) {
      this._statusLight = undefined;
      var n = this.serviceLength;
      var s = [];

      for (var i = 0; i < n; ++i) {
        s.push(new service(this, i));
      }

      this._services = s;
      this.lastServiceUpdate = this.bus.timestamp;
      this.refreshFirmwareInfo();
      this.emitPropagated(constants/* CHANGE */.Ver);
    }
  }
  /**
   * Gets the service client at the given service index
   * @param serviceIndex index of the service client
   * @returns service client
   * @category Services
   */
  ;

  _proto2.service = function service(serviceIndex) {
    if (!this.announced) return undefined;
    this.initServices();
    serviceIndex = serviceIndex | 0;
    return this._services && this._services[serviceIndex];
  }
  /**
   * Gets a filtered list of service clients.
   * @param options filters for services
   * @returns services matching the filter
   * @category Services
   */
  ;

  _proto2.services = function services(options) {
    var _this$_services2;

    if (!this.announced) return [];
    if ((options === null || options === void 0 ? void 0 : options.serviceIndex) >= 0) return [this.service(options === null || options === void 0 ? void 0 : options.serviceIndex)];
    if (options !== null && options !== void 0 && options.serviceName && (options === null || options === void 0 ? void 0 : options.serviceClass) > -1) throw Error("serviceClass and serviceName cannot be used together");
    var sc = (0,pretty/* serviceClass */.Sm)(options === null || options === void 0 ? void 0 : options.serviceName);
    if (sc === undefined || sc < 0) sc = options === null || options === void 0 ? void 0 : options.serviceClass;
    if (sc === undefined) sc = -1;
    this.initServices();
    var r = ((_this$_services2 = this._services) === null || _this$_services2 === void 0 ? void 0 : _this$_services2.slice()) || [];
    if (sc > -1) r = r.filter(s => s.serviceClass == sc);
    if (options !== null && options !== void 0 && options.specification) r = r.filter(s => !!s.specification);
    if (options !== null && options !== void 0 && options.sensor) r = r.filter(s => (0,jdom_spec/* isSensor */.rq)(s.specification));
    var mixins = options === null || options === void 0 ? void 0 : options.mixins;
    if (mixins !== undefined) r = r.filter(s => s.isMixin === mixins);
    return r;
  }
  /**
   * Gets the list of child services.
   * @category JDOM
   */
  ;

  /**
   * @internal
   */
  _proto2.sendCtrlCommand = function sendCtrlCommand(cmd, payload) {
    if (payload === void 0) {
      payload = null;
    }

    var pkt = !payload ? packet/* default.onlyHeader */.Z.onlyHeader(cmd) : packet/* default.from */.Z.from(cmd, payload);
    pkt.serviceIndex = constants/* JD_SERVICE_INDEX_CTRL */.fey;
    return pkt.sendCmdAsync(this);
  }
  /**
   * @internal
   */
  ;

  _proto2.processAnnouncement = function processAnnouncement(pkt) {
    this.stats.processAnnouncement(pkt);
    var changed = false;
    var w0 = this._servicesData ? (0,buffer/* getNumber */.Dx)(this._servicesData, buffer/* NumberFormat.UInt32LE */.y4.UInt32LE, 0) : 0;
    var w1 = (0,buffer/* getNumber */.Dx)(pkt.data, buffer/* NumberFormat.UInt32LE */.y4.UInt32LE, 0); // compare service data

    var servicesChanged = !(0,utils/* bufferEq */.zo)(pkt.data, this._servicesData, 4);
    this._servicesData = pkt.data; // check for restart

    if (w1 && (w1 & constants/* JD_ADVERTISEMENT_0_COUNTER_MASK */.GJf) < (w0 & constants/* JD_ADVERTISEMENT_0_COUNTER_MASK */.GJf)) {
      this.stats.processRestart();
      this.initServices(true);
      this.bus.emit(constants/* DEVICE_RESTART */.eLF, this);
      this.emit(constants/* RESTART */.d0K);
      changed = true;
    } // notify that services got updated


    if (servicesChanged) {
      if (!changed) this.initServices(true);
      this.bus.emit(constants/* DEVICE_ANNOUNCE */.Hob, this);
      this.emit(constants/* ANNOUNCE */.oNX);
      changed = true;
    } // notify that we've received an announce packet


    this.bus.emit(constants/* DEVICE_PACKET_ANNOUNCE */.Jgq, this);
    this.emit(constants/* PACKET_ANNOUNCE */.T9O); // notify of any changes

    if (changed) {
      this.bus.emit(constants/* DEVICE_CHANGE */.RoP, this);
      this.bus.emit(constants/* CHANGE */.Ver);
      this.emit(constants/* CHANGE */.Ver);
    }
  }
  /**
   * @internal
   */
  ;

  _proto2.processPacket = function processPacket(pkt) {
    this.stats.processPacket(pkt);
    this.lost = false;
    this.emit(constants/* PACKET_RECEIVE */.u_S, pkt);
    if (pkt.isReport) this.emit(constants/* PACKET_REPORT */.deN, pkt);else if (pkt.isEvent) this.emit(constants/* PACKET_EVENT */.F5$, pkt);
    var service = this.service(pkt.serviceIndex);
    if (service) service.processPacket(pkt);
  }
  /**
   * @internal
   */
  ;

  _proto2.disconnect = function disconnect() {
    this.connected = false;
    this.emit(constants/* DISCONNECT */.PYu);
    this.emit(constants/* CHANGE */.Ver);
  }
  /**
   * Gets a controller for the status light. Returns undefined if the device does not support a status light.
   * @category Control
   */
  ;

  /**
   * Sends an ``identify`` command to the device
   * @category Lifecycle
   */
  _proto2.identify =
  /*#__PURE__*/
  function () {
    var _identify = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this._identifying) return;

      try {
        this._identifying = true;
        this.emit(constants/* CHANGE */.Ver);
        var statusLight = this.statusLight;
        if (statusLight) yield statusLight.blink(0x0000ff, 0, 262, 4);else {
          var ctrl = this.service(0);
          yield ctrl.sendCmdAsync(constants/* ControlCmd.Identify */.VSW.Identify, undefined, false);
          yield this.bus.delay(constants/* IDENTIFY_DURATION */.r2I);
        }
      } catch (e) {
        this.emit(constants/* ERROR */.pnR, e);
      } finally {
        this._identifying = false;
        this.emit(constants/* CHANGE */.Ver);
      }
    });

    function identify() {
      return _identify.apply(this, arguments);
    }

    return identify;
  }()
  /**
   * Indicates the device should be identifying.
   * @category Lifecycle
   */
  ;

  /**
   * Sends a ``reset`` command to the device
   * @category Lifecycle
   */
  _proto2.reset = function reset() {
    var _this$service;

    return (_this$service = this.service(0)) === null || _this$service === void 0 ? void 0 : _this$service.sendCmdAsync(constants/* ControlCmd.Reset */.VSW.Reset);
  }
  /**
   * Tries to retrive the product identifier from the device
   * @param retry number of devices
   * @returns promise that returns product identifier if received
   * @category Control
   */
  ;

  _proto2.resolveProductIdentifier =
  /*#__PURE__*/
  function () {
    var _resolveProductIdentifier = (0,asyncToGenerator/* default */.Z)(function* (retry) {
      var _this$service2;

      if (retry === void 0) {
        retry = 0;
      }

      var register = (_this$service2 = this.service(0)) === null || _this$service2 === void 0 ? void 0 : _this$service2.register(constants/* ControlReg.ProductIdentifier */.toU.ProductIdentifier);
      if (!register) return undefined;

      while (retry-- >= 0 && register.data === undefined) {
        yield register.refresh(true);
      }

      return register.uintValue;
    });

    function resolveProductIdentifier(_x) {
      return _resolveProductIdentifier.apply(this, arguments);
    }

    return resolveProductIdentifier;
  }()
  /**
   * Returns the product identifier synchronously. If needed, tries to refresh the value in the background.
   * @category Control
   */
  ;

  _proto2.initAcks = function initAcks() {
    if (this._ackAwaiting) return;
    var drops = 0;
    var resends = 0;
    this._ackAwaiting = [];
    var cleanUp = this.subscribe(constants/* PACKET_REPORT */.deN, rep => {
      if (!rep.isCRCAck) return;
      var numdone = 0;

      for (var aa of this._ackAwaiting) {
        if (aa.pkt && aa.pkt.crc == rep.serviceCommand) {
          //console.log(`ack`, aa.pkt)
          aa.pkt = null;
          numdone++;
          aa.okCb();
        }
      }

      if (numdone) this._ackAwaiting = this._ackAwaiting.filter(aa => !!aa.pkt);
    });

    var resend = () => {
      var numdrop = 0;

      for (var aa of this._ackAwaiting) {
        if (aa.pkt) {
          if (--aa.retriesLeft < 0) {
            drops++;
            aa.pkt.meta[constants/* META_ACK_FAILED */.GiR] = true;
            aa.pkt = null;
            aa.errCb();
            numdrop++;
            if (flags/* default.diagnostics */.Z.diagnostics) console.debug("ack: " + this.shortId + " drop " + aa.pkt + " (" + drops + " drops, " + resends + " resends)");
          } else {
            resends++;
            aa.pkt.sendCmdAsync(this);
            if (flags/* default.diagnostics */.Z.diagnostics) console.debug("ack: " + this.shortId + " resend " + aa.pkt + " (" + drops + " drops, " + resends + " resends)");
          }
        }
      }

      if (numdrop) this._ackAwaiting = this._ackAwaiting.filter(aa => !!aa.pkt);
      if (flags/* default.diagnostics */.Z.diagnostics) console.debug("ack: " + this.shortId + " awaits " + this._ackAwaiting.length);

      if (this._ackAwaiting.length > 0) {
        this.bus.scheduler.setTimeout(resend, Math.random() * (constants/* ACK_MAX_DELAY */.Iwd - constants/* ACK_MIN_DELAY */.V7w) + constants/* ACK_MIN_DELAY */.V7w);
      } else {
        this._ackAwaiting = undefined;
        cleanUp();
      }
    }; // start loop


    this.bus.scheduler.setTimeout(resend, 40);
  }
  /**
   * @internal
   */
  ;

  _proto2.sendPktWithAck = function sendPktWithAck(pkt) {
    // no acks possible when bus is passive
    pkt.requiresAck = !this.bus.passive;
    this.initAcks();
    return new Promise((resolve, reject) => {
      var ack = {
        pkt,
        retriesLeft: 4,
        okCb: resolve,
        errCb: () => {
          var e = new Error("No ACK for " + pkt.toString());
          (0,utils/* setAckError */.qc)(e);
          reject(e);
        }
      };

      this._ackAwaiting.push(ack);

      pkt.sendCmdAsync(this);
    });
  }
  /**
   * @internal
   */
  ;

  _proto2.floodPing =
  /*#__PURE__*/
  function () {
    var _floodPing = (0,asyncToGenerator/* default */.Z)(function* (numPkts, size) {
      if (numPkts === void 0) {
        numPkts = 100;
      }

      if (size === void 0) {
        size = 32;
      }

      var pkt = packet/* default.jdpacked */.Z.jdpacked(constants/* ControlCmd.FloodPing */.VSW.FloodPing, "u32 u32 u8", [numPkts, 0x1000, size]);
      pkt.serviceIndex = constants/* JD_SERVICE_INDEX_CTRL */.fey;
      yield this.sendPktWithAck(pkt);
    });

    function floodPing(_x2, _x3) {
      return _floodPing.apply(this, arguments);
    }

    return floodPing;
  }();

  (0,createClass/* default */.Z)(JDDevice, [{
    key: "anonymizedDeviceId",
    get:
    /**
     * Indicates if the device is connected to a bus
     * @category Lifecycle
     */

    /**
     * Timestamp of the last packet received from the device
     * @category Lifecycle
     */

    /**
     * Timestamp of the last service update packet received from the device
     * @category Lifecycle
     */

    /**
     * Gets a random device id for the lifetime of this object.
     */
    function get() {
      if (!this._anonymizedId) this._anonymizedId = (0,random/* randomDeviceId */.b_)();
      return this._anonymizedId;
    }
  }, {
    key: "id",
    get: function get() {
      return this.nodeKind + ":" + this.deviceId;
    }
    /**
     * Gets the short id of the device
     * @category JDOM
     */

  }, {
    key: "name",
    get: function get() {
      return this.shortId;
    }
    /**
     * Identifies node as a device
     * @category JDOM
     */

  }, {
    key: "nodeKind",
    get: function get() {
      return constants/* DEVICE_NODE_NAME */.tY6;
    }
    /**
     * Indicates if the devices is a physical device, not emulated.
     * @category Transport
     */

  }, {
    key: "isPhysical",
    get: function get() {
      return this._source === constants/* USB_TRANSPORT */.W3h || this._source === constants/* BLUETOOTH_TRANSPORT */.HZx || this._source === constants/* SERIAL_TRANSPORT */.NbT || this._source === constants/* PACKETIO_TRANSPORT */.GII || this._source === constants/* WEBSOCKET_TRANSPORT */.uJd;
    }
    /**
     * Indicates the source of packets
     * @category Transport
     */

  }, {
    key: "source",
    get: function get() {
      return this._source;
    }
    /**
     * Indicates if the device is part of a trace replay
     * @category Transport
     */

  }, {
    key: "replay",
    get: function get() {
      return this._replay;
    }
    /**
     * Gets the device short name
     * @category JDOM
     */

  }, {
    key: "friendlyName",
    get: function get() {
      return this.shortId;
    }
    /**
     * Gets the device short name
     * @category JDOM
     */

  }, {
    key: "qualifiedName",
    get: function get() {
      return this.shortId;
    }
    /**
     * Indicates if service information is available.
     * This happens after a announce packet has been received.
     * @category Lifecycle
     */

  }, {
    key: "announced",
    get: function get() {
      var _this$_servicesData;

      return !!((_this$_servicesData = this._servicesData) !== null && _this$_servicesData !== void 0 && _this$_servicesData.length);
    }
    /**
     * Gets the control announce flag from the annouce packet.
     * @category Control
     */

  }, {
    key: "announceFlags",
    get: function get() {
      return this._servicesData ? (0,utils/* read16 */.gI)(this._servicesData, 0) : 0;
    }
    /**
     * Gets the restart counter from the announce packet.
     * @category Control
     */

  }, {
    key: "restartCounter",
    get: function get() {
      return this.announceFlags & constants/* ControlAnnounceFlags.RestartCounterSteady */.P99.RestartCounterSteady;
    }
    /**
     * Gets the status light announce flags from the announce packet.
     * @category Control
     */

  }, {
    key: "statusLightFlags",
    get: function get() {
      return this.announceFlags & constants/* ControlAnnounceFlags.StatusLightRgbFade */.P99.StatusLightRgbFade;
    }
    /**
     * Indicates if the device is announced as a client
     * @category Control
     */

  }, {
    key: "isClient",
    get: function get() {
      return !!(this.announceFlags & constants/* ControlAnnounceFlags.IsClient */.P99.IsClient);
    }
    /**
     * Gets the number of packets sent since the last announce packet,
     * as read from the announce packet.
     * @category Control
     */

  }, {
    key: "packetCount",
    get: function get() {
      var _this$_servicesData2;

      return ((_this$_servicesData2 = this._servicesData) === null || _this$_servicesData2 === void 0 ? void 0 : _this$_servicesData2[2]) || 0;
    }
    /**
     * Gets the device short identifier
     * @category JDOM
     */

  }, {
    key: "shortId",
    get: function get() {
      // TODO measure if caching is worth it
      if (!this._shortId) this._shortId = (0,pretty/* shortDeviceId */.xV)(this.deviceId);
      return this._shortId;
    }
    /**
     * Gets the bus instance hosting this device.
     * @category JDOM
     */

  }, {
    key: "parent",
    get: function get() {
      return this.bus;
    }
    /**
     * Gets the firmware information if any.
     * @category Firmware
     */

  }, {
    key: "firmwareInfo",
    get: function get() {
      var _ctrl$register, _ctrl$register2, _ctrl$register3;

      var ctrl = this.service(0);
      var deviceId = this.deviceId;
      var name = ctrl === null || ctrl === void 0 ? void 0 : (_ctrl$register = ctrl.register(constants/* ControlReg.DeviceDescription */.toU.DeviceDescription)) === null || _ctrl$register === void 0 ? void 0 : _ctrl$register.stringValue;
      var version = this.firmwareVersion;
      var productIdentifier = ctrl === null || ctrl === void 0 ? void 0 : (_ctrl$register2 = ctrl.register(constants/* ControlReg.ProductIdentifier */.toU.ProductIdentifier)) === null || _ctrl$register2 === void 0 ? void 0 : _ctrl$register2.uintValue;
      var bootloaderProductIdentifier = ctrl === null || ctrl === void 0 ? void 0 : (_ctrl$register3 = ctrl.register(constants/* ControlReg.BootloaderProductIdentifier */.toU.BootloaderProductIdentifier)) === null || _ctrl$register3 === void 0 ? void 0 : _ctrl$register3.uintValue;
      var ready = productIdentifier !== undefined || bootloaderProductIdentifier !== undefined;
      return ready ? {
        deviceId,
        name,
        version,
        productIdentifier,
        bootloaderProductIdentifier
      } : undefined;
    }
  }, {
    key: "lost",
    get: function get() {
      return this._lost;
    }
    /**
     * Sets the lost status
     * @category Lifecycle
     * @internal
     */
    ,
    set: function set(v) {
      if (!!v === this._lost) return; // something changed

      this._lost = !!v;

      if (this.lost) {
        this.emit(constants/* LOST */.XWw);
        this.bus.emit(constants/* DEVICE_LOST */.vk6, this);
      } else {
        this.emit(constants/* FOUND */.a6y);
        this.bus.emit(constants/* DEVICE_FOUND */.Bun, this);
      }

      this.emit(constants/* CHANGE */.Ver);
      this.bus.emit(constants/* DEVICE_CHANGE */.RoP, this);
      this.bus.emit(constants/* CHANGE */.Ver);
    }
    /**
     * A flashing sequence is in progress
     * @category Firmware
     */

  }, {
    key: "flashing",
    get: function get() {
      return this._flashing;
    }
    /**
     * Sets the flashing sequence state
     * @category Firmware
     */
    ,
    set: function set(value) {
      if (value !== this._flashing) {
        this._flashing = value;
        this.emit(constants/* CHANGE */.Ver);
        this.bus.emit(constants/* DEVICE_CHANGE */.RoP, this);
        this.bus.emit(constants/* CHANGE */.Ver);
        if (this._flashing) this.bus.sendStopStreaming();
      }
    }
    /**
     * Gets the number of events received by the service clients in this device
     * @category Lifecycle
     */

  }, {
    key: "eventCounter",
    get: function get() {
      return this._eventCounter;
    }
    /**
     * @internal
     */
    ,
    set: function set(v) {
      this._eventCounter = v;
    }
  }, {
    key: "serviceLength",
    get: function get() {
      if (!this.announced) return 0;
      return this._servicesData.length >> 2;
    }
  }, {
    key: "serviceClasses",
    get: function get() {
      var r = [];
      var n = this.serviceLength;

      for (var i = 0; i < n; ++i) {
        r.push(this.serviceClassAt(i));
      }

      return r;
    }
  }, {
    key: "children",
    get: function get() {
      return this.services();
    }
  }, {
    key: "statusLight",
    get: function get() {
      if (!this._statusLight && this.statusLightFlags !== constants/* ControlAnnounceFlags.StatusLightNone */.P99.StatusLightNone) this._statusLight = new ledcontroller(this.service(0), constants/* ControlCmd.SetStatusLight */.VSW.SetStatusLight);
      return this._statusLight;
    }
  }, {
    key: "identifying",
    get: function get() {
      return this._identifying;
    }
  }, {
    key: "productIdentifier",
    get: function get() {
      var _this$service3;

      var reg = (_this$service3 = this.service(0)) === null || _this$service3 === void 0 ? void 0 : _this$service3.register(constants/* ControlReg.ProductIdentifier */.toU.ProductIdentifier);
      var v = reg === null || reg === void 0 ? void 0 : reg.uintValue;
      if (reg && v === undefined) reg.scheduleRefresh();
      return v;
    }
    /**
     * Gets the elapsed time since boot in milli-seconds
     * @category Control
     */

  }, {
    key: "uptime",
    get: function get() {
      var _this$service4, _reg$unpackedValue;

      var reg = (_this$service4 = this.service(0)) === null || _this$service4 === void 0 ? void 0 : _this$service4.register(constants/* ControlReg.Uptime */.toU.Uptime);
      var v = reg === null || reg === void 0 ? void 0 : (_reg$unpackedValue = reg.unpackedValue) === null || _reg$unpackedValue === void 0 ? void 0 : _reg$unpackedValue[0];
      if (reg && v === undefined) reg.scheduleRefresh();
      var uptime = undefined;

      if (v !== undefined) {
        // compute offset
        uptime = v / 1000 + this.bus.timestamp - reg.lastDataTimestamp;
      }

      return uptime;
    }
    /**
     * Returns the firmware version synchronously. If needed, tries to refresh the value in the background.
     * @category Control
     */

  }, {
    key: "firmwareVersion",
    get: function get() {
      var _this$service5;

      var reg = (_this$service5 = this.service(0)) === null || _this$service5 === void 0 ? void 0 : _this$service5.register(constants/* ControlReg.FirmwareVersion */.toU.FirmwareVersion);
      var v = reg === null || reg === void 0 ? void 0 : reg.stringValue;
      if (reg && v === undefined) reg.scheduleRefresh();
      return v;
    }
    /**
     * Indicates if the device is in proxy mode
     */

  }, {
    key: "proxy",
    get: function get() {
      return this.serviceClasses.indexOf(constants/* SRV_PROXY */.Ahc) > -1;
    }
    /**
     * Indicates if the device is a unique brain
     */

  }, {
    key: "brain",
    get: function get() {
      return this.serviceClasses.indexOf(constants/* SRV_UNIQUE_BRAIN */.U9t) > -1;
    }
  }]);

  return JDDevice;
}(node/* default */.Z);
/* harmony default export */ var jdom_device = (JDDevice);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/flashing.ts
var flashing = __webpack_require__(91758);
// EXTERNAL MODULE: ./jacdac-ts/src/servers/realtimeclockserver.ts
var realtimeclockserver = __webpack_require__(83090);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/transport.ts
var transport_transport = __webpack_require__(27591);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/busstats.ts





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



var BusStatsMonitor = /*#__PURE__*/function (_JDEventSource) {
  (0,inheritsLoose/* default */.Z)(BusStatsMonitor, _JDEventSource);

  /**
   * @internal
   */
  function BusStatsMonitor(bus) {
    var _this;

    _this = _JDEventSource.call(this) || this;
    _this._prev = Array(4).fill(0).map(() => ({
      packets: 0,
      announce: 0,
      acks: 0,
      bytes: 0
    }));
    _this._previ = 0;
    _this._temp = {
      packets: 0,
      announce: 0,
      acks: 0,
      bytes: 0
    };
    _this.bus = bus;
    bus.on(constants/* PACKET_SEND */.RaS, _this.handlePacketSend.bind((0,assertThisInitialized/* default */.Z)(_this)));
    bus.on(constants/* PACKET_PROCESS */.wY8, _this.handlePacketProcess.bind((0,assertThisInitialized/* default */.Z)(_this)));
    bus.on(constants/* SELF_ANNOUNCE */.Pbc, _this.handleSelfAnnounce.bind((0,assertThisInitialized/* default */.Z)(_this)));
    return _this;
  }
  /**
   * Computes the current packet statistics of the bus
   */


  var _proto = BusStatsMonitor.prototype;

  _proto.accumulate = function accumulate(pkt) {
    var _pkt$header, _pkt$data;

    this._temp.packets++;
    this._temp.bytes += (((_pkt$header = pkt.header) === null || _pkt$header === void 0 ? void 0 : _pkt$header.length) || 0) + (((_pkt$data = pkt.data) === null || _pkt$data === void 0 ? void 0 : _pkt$data.length) || 0);
    if (pkt.isAnnounce) this._temp.announce++;
    if (pkt.isCRCAck) this._temp.acks++;
  };

  _proto.handleSelfAnnounce = function handleSelfAnnounce() {
    var changed = JSON.stringify(this._prev) !== JSON.stringify(this._temp);
    this._prev[this._previ] = this._temp;
    this._previ = (this._previ + 1) % this._prev.length;
    this._temp = {
      packets: 0,
      announce: 0,
      acks: 0,
      bytes: 0
    };
    if (changed) this.emit(constants/* CHANGE */.Ver);
  };

  _proto.handlePacketSend = function handlePacketSend(pkt) {
    this.accumulate(pkt);
  };

  _proto.handlePacketProcess = function handlePacketProcess(pkt) {
    this.accumulate(pkt);
  };

  (0,createClass/* default */.Z)(BusStatsMonitor, [{
    key: "current",
    get: function get() {
      var _this$bus$transports$;

      var r = {
        packets: 0,
        announce: 0,
        acks: 0,
        bytes: 0
      };
      var n = this._prev.length;

      for (var i = 0; i < this._prev.length; ++i) {
        var p = this._prev[i];
        r.packets += p.packets;
        r.announce += p.announce;
        r.acks += p.acks;
        r.bytes += p.bytes;
      } // announce every 500ms


      var n2 = n / 2;
      r.packets /= n2;
      r.announce /= n2;
      r.acks /= n2;
      r.bytes /= n2;
      return _objectSpread({
        devices: this.bus.devices({
          ignoreInfrastructure: true
        }).length,
        simulators: this.bus.serviceProviders().length,
        transport: (_this$bus$transports$ = this.bus.transports.find(transport => transport.connected)) === null || _this$bus$transports$ === void 0 ? void 0 : _this$bus$transports$.type
      }, r);
    }
  }]);

  return BusStatsMonitor;
}(eventsource/* default */.ZP);
// EXTERNAL MODULE: ./jacdac-ts/src/servers/servers.ts + 28 modules
var servers = __webpack_require__(50713);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/serviceclient.ts
var serviceclient = __webpack_require__(56763);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/clients/rolemanagerclient.ts











/**
 * A service role assigment
 * @category Clients
 */

/**
 * A client for the role manager service
 * @category Clients
 */
var RoleManagerClient = /*#__PURE__*/function (_JDServiceClient) {
  (0,inheritsLoose/* default */.Z)(RoleManagerClient, _JDServiceClient);

  function RoleManagerClient(service) {
    var _this;

    _this = _JDServiceClient.call(this, service) || this;
    _this._roles = [];
    _this._needRefresh = true;
    _this._lastRefreshAttempt = 0;
    var changeEvent = service.event(constants/* SystemEvent.Change */.nSK.Change); // always debounce refresh roles

    _this.startRefreshRoles = (0,utils/* debounceAsync */.kl)(_this.refreshRoles.bind((0,assertThisInitialized/* default */.Z)(_this)), 200); // role manager emits change events

    _this.mount(changeEvent.subscribe(constants/* EVENT */.Ks0, _this.handleChange.bind((0,assertThisInitialized/* default */.Z)(_this)))); // assign roles when need device enter the bus


    _this.mount(_this.bus.subscribe(constants/* DEVICE_ANNOUNCE */.Hob, _this.assignRoles.bind((0,assertThisInitialized/* default */.Z)(_this)))); // clear on unmount


    _this.mount(_this.clearRoles.bind((0,assertThisInitialized/* default */.Z)(_this))); // retry to get roles on every self-announce


    _this.mount(_this.bus.subscribe(constants/* SELF_ANNOUNCE */.Pbc, _this.handleSelfAnnounce.bind((0,assertThisInitialized/* default */.Z)(_this))));

    return _this;
  }

  var _proto = RoleManagerClient.prototype;

  _proto.handleSelfAnnounce = function handleSelfAnnounce() {
    if (this._needRefresh && this.bus.timestamp - this._lastRefreshAttempt > constants/* ROLE_MANAGER_POLL */.k0Y) this.startRefreshRoles();
  };

  _proto.handleChange = /*#__PURE__*/function () {
    var _handleChange = (0,asyncToGenerator/* default */.Z)(function* () {
      this.startRefreshRoles();
    });

    function handleChange() {
      return _handleChange.apply(this, arguments);
    }

    return handleChange;
  }();

  _proto.refreshRoles = /*#__PURE__*/function () {
    var _refreshRoles = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this.unmounted) return;
      this._needRefresh = false;
      yield this.collectRoles();
      if (this.unmounted) return;
      this.assignRoles();
    });

    function refreshRoles() {
      return _refreshRoles.apply(this, arguments);
    }

    return refreshRoles;
  }();

  _proto.collectRoles = /*#__PURE__*/function () {
    var _collectRoles = (0,asyncToGenerator/* default */.Z)(function* () {
      this._lastRefreshAttempt = this.bus.timestamp;
      var previousRolesHash = JSON.stringify(this._roles);

      try {
        var inp = new pipes/* InPipeReader */.oI(this.bus);
        yield this.service.sendPacketAsync(inp.openCommand(constants/* RoleManagerCmd.ListRequiredRoles */.zGD.ListRequiredRoles), true); // collect all roles

        var roles = [];

        for (var buf of yield inp.readData(1000)) {
          var [devidbuf, serviceClass, serviceIndex, name] = (0,pack/* jdunpack */.TE)(buf, "b[8] u32 u8 s");
          var deviceId = (0,utils/* toHex */.NC)(devidbuf);
          var role = {
            deviceId,
            serviceClass,
            serviceIndex,
            name
          };
          roles.push(role);
        } // store result if changed


        if (JSON.stringify(roles) !== previousRolesHash) {
          this._roles = roles;
          this.emit(constants/* CHANGE */.Ver);
        }
      } catch (e) {
        this._needRefresh = true;
        this.emit(constants/* ERROR */.pnR, e);
      }
    });

    function collectRoles() {
      return _collectRoles.apply(this, arguments);
    }

    return collectRoles;
  }();

  _proto.assignRoles = function assignRoles() {
    this.bus.services().filter(srv => RoleManagerClient.unroledSrvs.indexOf(srv.serviceClass) < 0).forEach(srv => this.assignRole(srv));
  };

  _proto.assignRole = function assignRole(service) {
    var deviceId = service.device.deviceId;
    var serviceIndex = service.serviceIndex;

    var role = this._roles.find(r => r.deviceId === deviceId && r.serviceIndex === serviceIndex); //console.debug(`role ${service.id} -> ${role?.role}`, { service })


    service.role = role === null || role === void 0 ? void 0 : role.name;
  };

  _proto.clearRoles = function clearRoles() {
    this.bus.services().forEach(srv => srv.role = undefined);
  };

  _proto.hasRoleForService = function hasRoleForService(service) {
    var _this$_roles;

    var {
      serviceClass
    } = service;
    return !!((_this$_roles = this._roles) !== null && _this$_roles !== void 0 && _this$_roles.find(r => r.serviceClass === serviceClass));
  };

  _proto.compatibleRoles = function compatibleRoles(service) {
    var _this$_roles2;

    var {
      serviceClass
    } = service;
    return (_this$_roles2 = this._roles) === null || _this$_roles2 === void 0 ? void 0 : _this$_roles2.filter(r => r.serviceClass === serviceClass);
  };

  _proto.role = function role(name) {
    return this._roles.find(r => r.serviceIndex > 0 && r.name === name);
  };

  _proto.setRole = /*#__PURE__*/function () {
    var _setRole = (0,asyncToGenerator/* default */.Z)(function* (service, name) {
      var {
        device,
        serviceIndex
      } = service;
      var {
        deviceId
      } = device; //console.debug(`set role ${deviceId}:${serviceIndex} to ${role}`)

      var previous = name && this._roles.find(r => r.name === name);

      if (previous && previous.deviceId === deviceId && previous.serviceIndex === serviceIndex) {
        // nothing todo
        console.debug("role unmodified, skipping");
        return;
      } // set new role assignment


      {
        var data = (0,pack/* jdpack */.AV)("b[8] u8 s", [(0,utils/* fromHex */.H_)(deviceId), serviceIndex, name || ""]);
        yield this.service.sendPacketAsync(packet/* default.from */.Z.from(constants/* RoleManagerCmd.SetRole */.zGD.SetRole, data), true);
      } // clear previous role assignment

      if (previous) {
        console.debug("clear role " + previous.deviceId + ":" + previous.serviceIndex);

        var _data = (0,pack/* jdpack */.AV)("b[8] u8 s", [(0,utils/* fromHex */.H_)(previous.deviceId), previous.serviceIndex, ""]);

        yield this.service.sendPacketAsync(packet/* default.from */.Z.from(constants/* RoleManagerCmd.SetRole */.zGD.SetRole, _data), true);
      }
    });

    function setRole(_x, _x2) {
      return _setRole.apply(this, arguments);
    }

    return setRole;
  }();

  _proto.startSimulators = function startSimulators() {
    var _this$_roles3;

    if (!((_this$_roles3 = this._roles) !== null && _this$_roles3 !== void 0 && _this$_roles3.length)) return; // collect roles that need to be bound

    var todos = (0,utils/* groupBy */.vM)(this._roles.filter(role => !this.bus.device(role.deviceId, true)).map(role => ({
      role,
      hostDefinition: (0,servers/* serviceProviderDefinitionFromServiceClass */.vd)(role.serviceClass)
    })).filter(todo => !!todo.hostDefinition), todo => parentName(todo.role.name) || ""); // spawn devices with group of devices

    Object.keys(todos).forEach(parent => {
      var todo = todos[parent]; // no parent, spawn individual services

      if (!parent) {
        todo.forEach(t => (0,servers/* addServiceProvider */.Q6)(this.bus, t.hostDefinition));
      } else {
        // spawn all services into 1
        (0,servers/* addServiceProvider */.Q6)(this.bus, {
          name: "",
          serviceClasses: [],
          services: () => (0,utils/* arrayConcatMany */.ue)(todo.map(t => t.hostDefinition.services()))
        });
      }
    });

    function parentName(role) {
      return role.split("/", 1)[0];
    }
  };

  (0,createClass/* default */.Z)(RoleManagerClient, [{
    key: "roles",
    get: function get() {
      return this._roles;
    }
  }]);

  return RoleManagerClient;
}(serviceclient/* JDServiceClient */.P);
RoleManagerClient.unroledSrvs = [constants/* SRV_CONTROL */.gm9, constants/* SRV_ROLE_MANAGER */.igi, constants/* SRV_LOGGER */.w9j, constants/* SRV_UNIQUE_BRAIN */.U9t, constants/* SRV_PROXY */.Ahc, constants/* SRV_INFRASTRUCTURE */.QWn];
/* harmony default export */ var rolemanagerclient = (RoleManagerClient);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/scheduler.ts


/* eslint-disable @typescript-eslint/no-explicit-any */

/**
 * A time scheduler to orchestrate time in the bus.
 * @category JDOM
 */

/** @internal */
var WallClockScheduler = /*#__PURE__*/function () {
  function WallClockScheduler() {
    this._now = typeof performance !== "undefined" ? () => performance.now() : () => Date.now();
    this._startTime = this._now();
  }

  var _proto = WallClockScheduler.prototype;

  _proto.resetTime = function resetTime(delta) {
    if (delta === void 0) {
      delta = 0;
    }

    this._startTime = this._now() - delta;
  };

  _proto.setTimeout = function (_setTimeout) {
    function setTimeout(_x, _x2) {
      return _setTimeout.apply(this, arguments);
    }

    setTimeout.toString = function () {
      return _setTimeout.toString();
    };

    return setTimeout;
  }(function (handler, delay) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    return setTimeout(handler, delay, args);
  });

  _proto.clearTimeout = function (_clearTimeout) {
    function clearTimeout(_x3) {
      return _clearTimeout.apply(this, arguments);
    }

    clearTimeout.toString = function () {
      return _clearTimeout.toString();
    };

    return clearTimeout;
  }(function (handle) {
    clearTimeout(handle);
  });

  _proto.setInterval = function (_setInterval) {
    function setInterval(_x4, _x5) {
      return _setInterval.apply(this, arguments);
    }

    setInterval.toString = function () {
      return _setInterval.toString();
    };

    return setInterval;
  }(function (handler, delay) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }

    return setInterval(handler, delay, args);
  });

  _proto.clearInterval = function (_clearInterval) {
    function clearInterval(_x6) {
      return _clearInterval.apply(this, arguments);
    }

    clearInterval.toString = function () {
      return _clearInterval.toString();
    };

    return clearInterval;
  }(function (handle) {
    clearInterval(handle);
  });

  (0,createClass/* default */.Z)(WallClockScheduler, [{
    key: "timestamp",
    get: function get() {
      return this._now() - this._startTime;
    }
  }]);

  return WallClockScheduler;
}();
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/trace/trace.ts
var trace = __webpack_require__(61649);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/catalog.ts + 1 modules
var catalog = __webpack_require__(24739);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/bus.ts








function _wrapRegExp() { _wrapRegExp = function _wrapRegExp(re, groups) { return new BabelRegExp(re, undefined, groups); }; var _super = RegExp.prototype; var _groups = new WeakMap(); function BabelRegExp(re, flags, groups) { var _this = new RegExp(re, flags); _groups.set(_this, groups || _groups.get(re)); return (0,setPrototypeOf/* default */.Z)(_this, BabelRegExp.prototype); } _inherits(BabelRegExp, RegExp); BabelRegExp.prototype.exec = function (str) { var result = _super.exec.call(this, str); if (result) result.groups = buildGroups(result, this); return result; }; BabelRegExp.prototype[Symbol.replace] = function (str, substitution) { if (typeof substitution === "string") { var groups = _groups.get(this); return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) { return "$" + groups[name]; })); } else if (typeof substitution === "function") { var _this = this; return _super[Symbol.replace].call(this, str, function () { var args = arguments; if (typeof args[args.length - 1] !== "object") { args = [].slice.call(args); args.push(buildGroups(args, _this)); } return substitution.apply(this, args); }); } else { return _super[Symbol.replace].call(this, str, substitution); } }; function buildGroups(result, re) { var g = _groups.get(re); return Object.keys(g).reduce(function (groups, name) { groups[name] = result[g[name]]; return groups; }, Object.create(null)); } return _wrapRegExp.apply(this, arguments); }





















/**
 * Creation options for a bus
 * @category JDOM
 */

/**
 * A Jacdac bus manager. This instance maintains the list of devices on the bus.
 * @category JDOM
 */
var bus_JDBus = /*#__PURE__*/function (_JDNode) {
  (0,inheritsLoose/* default */.Z)(JDBus, _JDNode);

  /**
   * @internal
   */

  /**
   * A timer and interval schedular to orchastrate bus timestamps
   * @category Scheduling
   */

  /**
   * @internal
   */

  /**
   * Creates the bus with the given transport
   * @param sendPacket
   * @category Lifecycle
   */
  function JDBus(transports, options) {
    var _this;

    _this = _JDNode.call(this) || this;
    _this._transports = [];
    _this._bridges = [];
    _this._devices = [];
    _this._lastPingLoggerTime = 0;
    _this._lastResetInTime = 0;
    _this._restartCounter = 0;
    _this._minLoggerPriority = constants/* LoggerPriority.Silent */.qit.Silent;
    _this._gcDevicesFrozen = 0;
    _this._serviceProviders = [];
    _this._streaming = false;
    _this._passive = false;
    _this._client = false;
    _this._dashboard = false;
    var {
      deviceId,
      scheduler,
      parentOrigin,
      client,
      disableRoleManager,
      dashboard
    } = options || {};
    _this._roleManagerClient = disableRoleManager ? null : undefined;
    _this.selfDeviceId = deviceId || (0,random/* randomDeviceId */.b_)();
    _this.scheduler = scheduler || new WallClockScheduler();
    _this.parentOrigin = parentOrigin || "*";
    _this._client = !!client;
    _this._dashboard = !!dashboard;
    _this.stats = new BusStatsMonitor((0,assertThisInitialized/* default */.Z)(_this));
    _this.deviceCatalog = new catalog/* DeviceCatalog */.p(); // some transport may be undefined

    transports === null || transports === void 0 ? void 0 : transports.filter(tr => !!tr).map(tr => _this.addTransport(tr)); // tell loggers to send data, every now and then
    // send resetin packets

    _this.on(constants/* SELF_ANNOUNCE */.Pbc, _this.handleSelfAnnounce.bind((0,assertThisInitialized/* default */.Z)(_this))); // tell RTC clock the computer time


    _this.on(constants/* DEVICE_ANNOUNCE */.Hob, _this.handleRealTimeClockSync.bind((0,assertThisInitialized/* default */.Z)(_this))); // grab the default role manager


    _this.on(constants/* DEVICE_CHANGE */.RoP, _this.handleRoleManager.bind((0,assertThisInitialized/* default */.Z)(_this))); // start all timers


    _this.start();

    return _this;
  }

  var _proto = JDBus.prototype;

  _proto.configureBroadcastChannel = function configureBroadcastChannel() {
    var _this2 = this;

    if (typeof BroadcastChannel === "undefined") return; // the purpose of this code is to orchestrate
    // interactions with multiple tabs and windows

    var channel = new BroadcastChannel("jacdac");

    var postConnectionState = () => {
      channel.postMessage({
        id: this.selfDevice.shortId,
        event: constants/* CONNECTION_STATE */.pzj,
        transports: this._transports.map(tr => ({
          type: tr.type,
          connectionState: tr.connectionState
        }))
      });
    }; // update other windows with connection status


    var unsubConnectionState = this.subscribe(constants/* CONNECTION_STATE */.pzj, postConnectionState);

    var handleVisibilityChange = () => {
      // tell other windows, we are visible or not
      channel.postMessage({
        id: this.selfDevice.shortId,
        event: "visibilitychange",
        visibilityState: document.visibilityState
      });
    };

    var handleBroadcastMessage = /*#__PURE__*/function () {
      var _ref = (0,asyncToGenerator/* default */.Z)(function* (msg) {
        var {
          data
        } = msg;
        var {
          event,
          transports,
          visibilityState
        } = data;

        switch (event) {
          case "visibilitychange":
            {
              // automatically disconnect if another pane becomes live
              //console.debug(
              //   `broadcast ${id}: ${event} ${visibilityState}`
              //)
              if (visibilityState === "visible") yield _this2.disconnect();else {
                // let other window disconnect
                yield _this2.delay(2000);
                yield _this2.connect(true);
              }
              break;
            }

          case constants/* CONNECTION_STATE */.pzj:
            {
              //console.debug(`broadcast ${id}: ${event}`, transports)
              // if any other window is trying to connect, disconnect
              transports.filter(tr => tr.connectionState === transport_transport/* ConnectionState.Connecting */.em.Connecting).forEach(ctr => {
                _this2.transports.filter(tr => tr.type === ctr.type).forEach(tr => tr.disconnect());
              });
            }
        }
      });

      return function handleBroadcastMessage(_x) {
        return _ref.apply(this, arguments);
      };
    }();

    channel.addEventListener("message", handleBroadcastMessage, false);
    document.addEventListener("visibilitychange", handleVisibilityChange);

    this._unsubscribeBroadcastChannel = () => {
      unsubConnectionState();
      document.removeEventListener("visibilitychange", handleVisibilityChange);
      channel.removeEventListener("message", handleBroadcastMessage);
      channel.close();
    }; // notify other pages


    handleVisibilityChange();
  }
  /**
   * Indicates that this bus acts as a client device
   * @category Lifecycle
   */
  ;

  /**
   * Adds a transport to the bus
   * @category Transports and Bridges
   */
  _proto.addTransport = function addTransport(transport) {
    if (!transport || this._transports.indexOf(transport) > -1) return; // already added

    this._transports.push(transport);

    transport.bus = this;
    transport.bus.on(constants/* CONNECTING */.BS3, () => this.preConnect(transport));
  }
  /**
   * Gets the list of bridges registered with the bus
   * @category Transports and Bridges
   */
  ;

  /**
   * Add a bridge to the bus and returns a callback to remove it.
   * @param bridge
   * @returns callback to remove bridge
   * @category Transports and Bridges
   * @internal
   */
  _proto.addBridge = function addBridge(bridge) {
    if (this._bridges.indexOf(bridge) < 0) {
      console.debug("add bridge", {
        bridge
      });

      this._bridges.push(bridge);

      this.emit(constants/* CHANGE */.Ver);
    }

    return () => this.removeBridge(bridge);
  };

  _proto.removeBridge = function removeBridge(bridge) {
    var i = this._bridges.indexOf(bridge);

    if (i > -1) {
      console.debug("remove bridge", {
        bridge
      });

      this._bridges.splice(i, 1);

      this.emit(constants/* CHANGE */.Ver);
    }
  }
  /**
   * Do not send any packet on the bus
   * @category Lifecycle
   */
  ;

  _proto.preConnect = function preConnect(transport) {
    //console.debug(`preconnect ${transport.type}`, { transport })
    return Promise.all(this._transports.filter(t => t !== transport).map(t => t.disconnect()));
  }
  /**
   * Connects the bus going through the transports chronologically. Does nothing if already connected.
   * @param background connection was triggered automatically
   * @category Lifecycle
   */
  ;

  _proto.connect =
  /*#__PURE__*/
  function () {
    var _connect = (0,asyncToGenerator/* default */.Z)(function* (background) {
      if (this.connected) return;

      for (var transport of this._transports) {
        // start connection
        yield transport.connect(background); // keep going if not connected

        if (transport.connected) break;
      }

      this.emit(constants/* CHANGE */.Ver);
    });

    function connect(_x2) {
      return _connect.apply(this, arguments);
    }

    return connect;
  }()
  /**
   * Disconnects the bus and any connected transport.
   * @category Lifecycle
   */
  ;

  _proto.disconnect =
  /*#__PURE__*/
  function () {
    var _disconnect = (0,asyncToGenerator/* default */.Z)(function* () {
      for (var transport of this._transports) {
        yield transport.disconnect();
      }

      this.emit(constants/* CHANGE */.Ver);
    });

    function disconnect() {
      return _disconnect.apply(this, arguments);
    }

    return disconnect;
  }()
  /**
   * Starts to process packets and updates the JDOM nodes
   * @category Lifecycle
   */
  ;

  _proto.start = function start() {
    this.configureBroadcastChannel();
    if (!this._announceInterval) this._announceInterval = this.scheduler.setInterval(() => {
      if (!this.passive) this.emit(constants/* SELF_ANNOUNCE */.Pbc);
    }, 499);
    this.backgroundRefreshRegisters = true;
    if (!this._gcInterval) this._gcInterval = this.scheduler.setInterval(() => this.gcDevices(), constants/* JD_DEVICE_DISCONNECTED_DELAY */.SkZ);
  }
  /**
   * Stops processing packets
   * @category Lifecycle
   */
  ;

  _proto.stop =
  /*#__PURE__*/
  function () {
    var _stop = (0,asyncToGenerator/* default */.Z)(function* () {
      yield this.disconnect();

      if (this._unsubscribeBroadcastChannel) {
        this._unsubscribeBroadcastChannel();

        this._unsubscribeBroadcastChannel = undefined;
      }

      if (this._announceInterval) {
        this.scheduler.clearInterval(this._announceInterval);
        this._announceInterval = undefined;
      }

      this.safeBoot = false;
      this.backgroundRefreshRegisters = false;

      if (this._gcInterval) {
        this.scheduler.clearInterval(this._gcInterval);
        this._gcInterval = undefined;
      }
    });

    function stop() {
      return _stop.apply(this, arguments);
    }

    return stop;
  }()
  /**
   * Stops the bus and all transport connections.
   * @category Lifecycle
   */
  ;

  _proto.dispose =
  /*#__PURE__*/
  function () {
    var _dispose = (0,asyncToGenerator/* default */.Z)(function* () {
      console.debug(this.id + ": disposing.");
      yield this.stop();

      this._transports.forEach(transport => transport.dispose());
    });

    function dispose() {
      return _dispose.apply(this, arguments);
    }

    return dispose;
  }()
  /**
   * Indicates that the bus is sending commands keep devices in bootloader mode.
   * This property is signaled by CHANGE.
   * @category Lifecycle
   */
  ;

  /**
   * Clears known devices and service providers (simulators). Optionally reset bus timestamp.
   * @param timestamp
   * @category Services
   */
  _proto.clear = function clear(timestamp) {
    var _this$_serviceProvide;

    if (timestamp === void 0) {
      timestamp = 0;
    }

    // clear hosts
    if ((_this$_serviceProvide = this._serviceProviders) !== null && _this$_serviceProvide !== void 0 && _this$_serviceProvide.length) {
      this._serviceProviders.forEach(host => host.bus = undefined);

      this._serviceProviders = [];
    } // clear devices


    var devs = this._devices;

    if (devs !== null && devs !== void 0 && devs.length) {
      this._devices = [];
      devs.forEach(dev => {
        dev.disconnect();
        this.emit(constants/* DEVICE_DISCONNECT */.O55, dev);
        this.emit(constants/* DEVICE_CHANGE */.RoP, dev);
      });
    }

    this.resetTime(timestamp);
  }
  /**
   * Gets a unique identifier for this node in the Jacdac DOM.
   * @category JDOM
   */
  ;

  _proto.setRoleManagerService = function setRoleManagerService(service) {
    var _this$_roleManagerCli;

    // feature disabled
    if (this._roleManagerClient === null) return; // unchanged service

    if (((_this$_roleManagerCli = this._roleManagerClient) === null || _this$_roleManagerCli === void 0 ? void 0 : _this$_roleManagerCli.service) === service) return; // service changed
    // clean if needed

    if (this._roleManagerClient) {
      //console.debug("unmount role manager")
      this._roleManagerClient.unmount();

      this._roleManagerClient = undefined;
    } // allocate new manager


    if (service) {
      this._roleManagerClient = new rolemanagerclient(service);

      this._roleManagerClient.startRefreshRoles();
    } // notify listeneres


    this.emit(constants/* ROLE_MANAGER_CHANGE */.kqR);
    this.emit(constants/* CHANGE */.Ver);
  }
  /**
   * @internal
   */
  ;

  _proto.toString = function toString() {
    var _this$_devices, _this$_transports;

    return "bus: " + (((_this$_devices = this._devices) === null || _this$_devices === void 0 ? void 0 : _this$_devices.length) || 0) + " devices, " + (((_this$_transports = this._transports) === null || _this$_transports === void 0 ? void 0 : _this$_transports.filter(tr => tr.connected).map(tr => tr.type).join(", ")) || "");
  }
  /**
   * Gets a detailled description of the devices and services connected to the bus
   * @returns
   * @internal
   */
  ;

  _proto.describe = function describe() {
    return "\ntransport:\n" + this._transports.map(tr => "  " + tr.type + ": " + tr.connectionState).join("\n") + "\n\n" + this.devices({
      ignoreInfrastructure: false
    }).map(dev => {
      var _dev$productIdentifie;

      return "device: \n  id: " + dev.shortId + " (0x" + dev.deviceId + ")\n  product: " + (dev.name || "?") + " (0x" + (((_dev$productIdentifie = dev.productIdentifier) === null || _dev$productIdentifie === void 0 ? void 0 : _dev$productIdentifie.toString(16)) || "?") + ")\n  firmware_version: " + (dev.firmwareVersion || "") + "\n  services:\n" + dev.services().slice(1).map(srv => {
        var _srv$specification;

        return ["    " + (((_srv$specification = srv.specification) === null || _srv$specification === void 0 ? void 0 : _srv$specification.shortName) || srv.name) + " (0x" + srv.serviceClass.toString(16) + ")"].concat((0,toConsumableArray/* default */.Z)(srv.registers().filter(reg => !!reg.data).map(reg => {
          var _reg$specification;

          return "        " + (((_reg$specification = reg.specification) === null || _reg$specification === void 0 ? void 0 : _reg$specification.kind) || "reg") + " " + reg.name + ": " + reg.humanValue + " (" + (0,utils/* toHex */.NC)(reg.data) + ")";
        })), (0,toConsumableArray/* default */.Z)(srv.events.map(ev => "        event " + ev.name + ": " + ev.count))).join("\n");
      }).join("\n") + "\n";
    }).join("\n");
  }
  /**
   * Resolves a JDOM node from an identifier
   * @param id node identifier
   * @returns node if found, undefined otherwise
   * @category JDOM
   */
  ;

  _proto.node = function node(id) {
    var resolve = () => {
      var _this$device, _this$device2, _this$device2$service, _this$device3, _this$device3$service, _this$device4, _this$device4$service, _this$device4$service2;

      var m = /*#__PURE__*/_wrapRegExp(/^(bus|device|service|register|event|field)(:([0-9A-Z_a-z]+)(:([0-9A-Z_a-z]+)(:([0-9A-Z_a-z]+(:([0-9A-Z_a-z]+))?))?)?)?$/, {
        type: 1,
        dev: 3,
        srv: 5,
        reg: 7,
        idx: 9
      }).exec(id);

      if (!m) return undefined;
      var type = m.groups["type"];
      var dev = m.groups["dev"];
      var srv = parseInt(m.groups["srv"], 16);
      var reg = parseInt(m.groups["reg"], 16);
      var idx = parseInt(m.groups["idx"], 16); //console.log(type, this.device(dev), this.device(dev)?.service(srv), this.device(dev)?.service(srv)?.register(reg), idx)

      switch (type) {
        case constants/* BUS_NODE_NAME */.oPG:
          return this;

        case constants/* DEVICE_NODE_NAME */.tY6:
          return this.device(dev, true);

        case constants/* SERVICE_NODE_NAME */.M_U:
          return (_this$device = this.device(dev, true)) === null || _this$device === void 0 ? void 0 : _this$device.service(srv);

        case constants/* REGISTER_NODE_NAME */.nJc:
          return (_this$device2 = this.device(dev, true)) === null || _this$device2 === void 0 ? void 0 : (_this$device2$service = _this$device2.service(srv)) === null || _this$device2$service === void 0 ? void 0 : _this$device2$service.register(reg);

        case constants/* EVENT_NODE_NAME */.Yuh:
          return (_this$device3 = this.device(dev, true)) === null || _this$device3 === void 0 ? void 0 : (_this$device3$service = _this$device3.service(srv)) === null || _this$device3$service === void 0 ? void 0 : _this$device3$service.event(reg);

        case constants/* FIELD_NODE_NAME */.ygq:
          return (_this$device4 = this.device(dev, true)) === null || _this$device4 === void 0 ? void 0 : (_this$device4$service = _this$device4.service(srv)) === null || _this$device4$service === void 0 ? void 0 : (_this$device4$service2 = _this$device4$service.register(reg)) === null || _this$device4$service2 === void 0 ? void 0 : _this$device4$service2.fields[idx];
      }

      console.info("node " + id + " not found");
      return undefined;
    };

    var node = resolve();
    return node;
  };

  _proto.resetTime = function resetTime(delta) {
    if (delta === void 0) {
      delta = 0;
    }

    this.scheduler.resetTime(delta);
    this.emit(constants/* CHANGE */.Ver);
  }
  /**
   * Gets the current bus-relavite time in milliseconds
   * @category Scheduling
   */
  ;

  /**
   * Creates a promise that awaits for the given duration using the bus scheduler
   * @category Scheduling
   */
  _proto.delay = function delay(millis, value) {
    return new Promise(resolve => this.scheduler.setTimeout(() => resolve(value), millis));
  }
  /**
   * Gets the current desired minimum logger verbosity on the bus
   * @category Diagnostics
   */
  ;

  _proto.handleRealTimeClockSync = /*#__PURE__*/function () {
    var _handleRealTimeClockSync = (0,asyncToGenerator/* default */.Z)(function* (device) {
      // tell time to the RTC clocks
      if (device.hasService(constants/* SRV_REAL_TIME_CLOCK */.XXX)) yield realtimeclockserver/* default.syncTime */.Z.syncTime(this);
    });

    function handleRealTimeClockSync(_x3) {
      return _handleRealTimeClockSync.apply(this, arguments);
    }

    return handleRealTimeClockSync;
  }();

  _proto.handleRoleManager = function handleRoleManager() {
    var service = this.services({
      serviceClass: constants/* SRV_ROLE_MANAGER */.igi
    })[0];
    this.setRoleManagerService(service);
  }
  /**
   * Sends a packet to the bus
   * @param packet packet to send
   * @internal
   */
  ;

  _proto.sendPacketAsync =
  /*#__PURE__*/
  function () {
    var _sendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (packet) {
      packet.timestamp = this.timestamp;
      if (flags/* default.trace */.Z.trace) packet.meta[constants/* META_TRACE */.EEP] = (0,trace/* stack */.kn)(); // special debug mode to avoid dashboard interfere with packets
      // will generate fails for acks

      if (this.passive) return;
      this.emit(constants/* PACKET_SEND */.RaS, packet);
      yield Promise.all(this._transports.map(transport => transport.sendPacketAsync(packet)));
    });

    function sendPacketAsync(_x4) {
      return _sendPacketAsync.apply(this, arguments);
    }

    return sendPacketAsync;
  }()
  /**
   * Gets the list of known firmware blobs
   * @category Firmware
   */
  ;

  /**
   * Gets the current list of known devices on the bus
   * @category Services
   */
  _proto.devices = function devices(options) {
    if (options !== null && options !== void 0 && options.serviceName && (options === null || options === void 0 ? void 0 : options.serviceClass) > -1) throw Error("serviceClass and serviceName cannot be used together");
    var sc = (options === null || options === void 0 ? void 0 : options.serviceClass) > -1 ? options === null || options === void 0 ? void 0 : options.serviceClass : (0,pretty/* serviceClass */.Sm)(options === null || options === void 0 ? void 0 : options.serviceName);

    var r = this._devices.slice(0);

    if (sc > -1) r = r.filter(s => s.hasService(sc));
    if (options !== null && options !== void 0 && options.ignoreInfrastructure) r = r.filter(s => s.deviceId !== this.selfDeviceId && s.serviceClasses.indexOf(constants/* SRV_INFRASTRUCTURE */.QWn) < 0);
    if (options !== null && options !== void 0 && options.announced) r = r.filter(s => s.announced);
    if (options !== null && options !== void 0 && options.ignoreSimulators) r = r.filter(r => !this.findServiceProvider(r.deviceId));
    if (options !== null && options !== void 0 && options.productIdentifier) r = r.filter(r => !!r.productIdentifier);
    if (options !== null && options !== void 0 && options.physical) r = r.filter(r => !!r.isPhysical);
    return r;
  }
  /**
   * Gets the current list of service providers on the bus
   * @category Services
   */
  ;

  _proto.serviceProviders = function serviceProviders() {
    return this._serviceProviders.slice(0);
  }
  /**
   * Get a service providers for a given device
   * @param deviceId
   * @category Services
   */
  ;

  _proto.findServiceProvider = function findServiceProvider(deviceId) {
    return this._serviceProviders.find(d => d.deviceId === deviceId);
  }
  /**
   * Adds the service provider to the bus and returns the associated devoce
   * @param provider instance to add
   * @category Services
   */
  ;

  _proto.addServiceProvider = function addServiceProvider(provider) {
    if (provider && this._serviceProviders.indexOf(provider) < 0) {
      this._serviceProviders.push(provider);

      provider.bus = this;
      this.emit(constants/* SERVICE_PROVIDER_ADDED */.D4B, provider);
      this.emit(constants/* CHANGE */.Ver);
    }

    return this.device(provider.deviceId);
  }
  /**
   * Removes the service provider from the bus
   * @param provider instance to remove
   * @category Services
   */
  ;

  _proto.removeServiceProvider = function removeServiceProvider(provider) {
    if (!provider) return;

    var i = this._serviceProviders.indexOf(provider);

    if (i > -1) {
      this.removeDevice(provider.deviceId); // remove host

      this._serviceProviders.splice(i, 1);

      provider.bus = undefined;
      this.emit(constants/* SERVICE_PROVIDER_REMOVED */.$dk, provider); // removed host

      this.emit(constants/* CHANGE */.Ver);
    }
  }
  /**
   * Removes all service providers from the bus
   * @category Services
   */
  ;

  _proto.clearServiceProviders = function clearServiceProviders() {
    this._serviceProviders.forEach(provider => {
      this.removeDevice(provider.deviceId);
      provider.bus = undefined;
      this.emit(constants/* SERVICE_PROVIDER_REMOVED */.$dk, provider);
    });

    this._serviceProviders = [];
    this.emit(constants/* CHANGE */.Ver);
  }
  /**
   * Remove a device client by identifier
   * @param deviceId
   * @category Devices
   */
  ;

  _proto.removeDevice = function removeDevice(deviceId) {
    // remove device as well
    var devi = this._devices.findIndex(d => d.deviceId === deviceId);

    if (devi > -1) {
      var dev = this._devices[devi];

      this._devices.splice(devi, 1);

      dev.disconnect();
      this.emit(constants/* DEVICE_DISCONNECT */.O55, dev);
      this.emit(constants/* DEVICE_CHANGE */.RoP, dev);
    }
  }
  /**
   * Gets the list of devices
   * @category JDOM
   */
  ;

  /**
   * Gets the current list of services from all the known devices on the bus
   * @category Services
   */
  _proto.services = function services(options) {
    return (0,utils/* arrayConcatMany */.ue)(this.devices(options).map(d => d.services(options)));
  }
  /**
   * Gets a device on the bus
   * @param id device identifier to query
   * @param skipCreate do not create new device if missing
   * @param pkt packet that generated this device query
   * @category Services
   */
  ;

  _proto.device = function device(id, skipCreate, pkt) {
    if (id === "0000000000000000" && !skipCreate) {
      console.warn("jadac: trying to access device 0000000000000000");
      return undefined;
    }

    var d = this._devices.find(d => d.deviceId == id);

    if (!d && !skipCreate) {
      if (this.devicesFrozen) {
        console.debug("info", "devices frozen, dropping " + id);
        return undefined;
      }

      d = new jdom_device(this, id, pkt);

      this._devices.push(d);

      if (flags/* default.diagnostics */.Z.diagnostics) console.debug((id === this.selfDeviceId ? "self" : "new") + " device " + d.shortId + " (" + id + ")"); // stable sort

      this._devices.sort((l, r) => (0,utils/* strcmp */.eT)(l.deviceId, r.deviceId));

      this.emit(constants/* DEVICE_CONNECT */.s1P, d);
      this.emit(constants/* DEVICE_CHANGE */.RoP, d);
      this.emit(constants/* CHANGE */.Ver);
    }

    return d;
  }
  /**
   * Push a context to disable cleaning device that haven't issued packets recently.
   * @category Lifecycle
   */
  ;

  _proto.pushDeviceFrozen = function pushDeviceFrozen() {
    this._gcDevicesFrozen++;
  }
  /**
   * Pop a context to disable cleaning device that haven't issued packets recently.
   * @category Lifecycle
   */
  ;

  _proto.popDeviceFrozen = function popDeviceFrozen() {
    this._gcDevicesFrozen = Math.max(0, this._gcDevicesFrozen - 1);
  }
  /**
   * Indicates if the device list if currently frozen.
   * @category Lifecycle
   */
  ;

  _proto.gcDevices = function gcDevices() {
    this.emit(constants/* DEVICE_CLEAN */.vl4);

    if (this.devicesFrozen) {
      console.debug("devices frozen");
      return;
    }

    var LOST_DELAY = constants/* JD_DEVICE_LOST_DELAY */.byt;
    var DISCONNECTED_DELAY = constants/* JD_DEVICE_DISCONNECTED_DELAY */.SkZ;
    var lostCutoff = this.timestamp - LOST_DELAY;
    var disconnectedCutoff = this.timestamp - DISCONNECTED_DELAY; // cycle through events and disconnect devices that are long gone

    for (var i = 0; i < this._devices.length; ++i) {
      var dev = this._devices[i];

      if (dev.lastSeen < disconnectedCutoff) {
        this._devices.splice(i, 1);

        i--;
        this.disconnectDevice(dev);
      } else if (dev.lastSeen < lostCutoff) {
        dev.lost = true;
      }
    }
  };

  _proto.disconnectDevice = function disconnectDevice(dev) {
    dev.disconnect();
    this.emit(constants/* DEVICE_DISCONNECT */.O55, dev);
    this.emit(constants/* DEVICE_CHANGE */.RoP, dev);
    this.emit(constants/* CHANGE */.Ver);
  }
  /**
   * Ingests and process a packet received from the bus.
   * @param pkt a jacdac packet
   * @internal
   */
  ;

  _proto.processPacket = function processPacket(pkt) {
    if (!pkt.isMultiCommand && !pkt.device) {
      pkt.device = this.device(pkt.deviceIdentifier, false, pkt); // the device id is unknown dropping

      if (!pkt.device) {
        if (flags/* default.diagnostics */.Z.diagnostics) console.debug("unknown pkt device " + pkt.deviceIdentifier, {
          pkt
        });
        return;
      }
    }

    this.emit(constants/* PACKET_PRE_PROCESS */.bHQ, pkt);
    var isAnnounce = false;

    if (!pkt.device) {// skip
    } else if (pkt.isCommand) {
      if (pkt.deviceIdentifier == this.selfDeviceId) {
        if (pkt.requiresAck) {
          var ack = packet/* default.onlyHeader */.Z.onlyHeader(pkt.crc);
          ack.serviceIndex = constants/* JD_SERVICE_INDEX_CRC_ACK */.$rs;
          ack.deviceIdentifier = this.selfDeviceId;
          ack.sendReportAsync(this.selfDevice);
        }
      }

      pkt.device.processPacket(pkt);
    } else {
      pkt.device.lastSeen = pkt.timestamp;

      if (pkt.serviceIndex == constants/* JD_SERVICE_INDEX_CTRL */.fey) {
        if (pkt.serviceCommand == constants/* CMD_ADVERTISEMENT_DATA */.zf$) {
          isAnnounce = true;
          pkt.device.processAnnouncement(pkt);
        } else if (pkt.isMultiCommand && pkt.serviceCommand == (constants/* CMD_SET_REG */.YUL | specconstants/* ControlReg.ResetIn */.toU.ResetIn)) {
          // someone else is doing reset in
          this._lastResetInTime = this.timestamp;
        }
      }

      pkt.device.processPacket(pkt);
    }

    this.emit(constants/* PACKET_PROCESS */.wY8, pkt); // don't spam with duplicate advertisement events

    if (isAnnounce) {
      this.emit(constants/* PACKET_RECEIVE_ANNOUNCE */.l4O, pkt);
    } else {
      this.emit(constants/* PACKET_RECEIVE */.u_S, pkt);
      if (pkt.isEvent) this.emit(constants/* PACKET_EVENT */.F5$, pkt);else if (pkt.isReport) this.emit(constants/* PACKET_REPORT */.deN, pkt);
    }
  }
  /**
   * Gets the virtual device created by this bus to handle pipes.
   * @category Services
   */
  ;

  _proto.handleSelfAnnounce = function handleSelfAnnounce() {
    return Promise.all([this.sendAnnounce(), this.sendResetIn(), this.sendPingLoggers()]).then(() => {});
  };

  _proto.sendAnnounce = /*#__PURE__*/function () {
    var _sendAnnounce = (0,asyncToGenerator/* default */.Z)(function* () {
      // we do not support any services (at least yet)
      if (this._restartCounter < 0xf) this._restartCounter++;
      var pkt = packet/* default.jdpacked */.Z.jdpacked(constants/* CMD_ADVERTISEMENT_DATA */.zf$, "u32 r: u32", [this._restartCounter | (this._client ? specconstants/* ControlAnnounceFlags.IsClient */.P99.IsClient : 0) | specconstants/* ControlAnnounceFlags.SupportsBroadcast */.P99.SupportsBroadcast | specconstants/* ControlAnnounceFlags.SupportsFrames */.P99.SupportsFrames | specconstants/* ControlAnnounceFlags.SupportsACK */.P99.SupportsACK, [[constants/* SRV_INFRASTRUCTURE */.QWn], this._dashboard ? [specconstants/* SRV_DASHBOARD */.UPj] : undefined].filter(sc => !!sc)]);
      pkt.serviceIndex = constants/* JD_SERVICE_INDEX_CTRL */.fey;
      pkt.deviceIdentifier = this.selfDeviceId;
      yield pkt.sendReportAsync(this.selfDevice);
    });

    function sendAnnounce() {
      return _sendAnnounce.apply(this, arguments);
    }

    return sendAnnounce;
  }();

  _proto.sendResetIn = /*#__PURE__*/function () {
    var _sendResetIn = (0,asyncToGenerator/* default */.Z)(function* () {
      // don't send reset if already received
      // or no devices
      if (!this.devices({
        ignoreInfrastructure: true
      }).length) return;
      this._lastResetInTime = this.timestamp;
      var rst = packet/* default.jdpacked */.Z.jdpacked(constants/* CMD_SET_REG */.YUL | specconstants/* ControlReg.ResetIn */.toU.ResetIn, "u32", [constants/* RESET_IN_TIME_US */._$y]);
      yield rst.sendAsMultiCommandAsync(this, specconstants/* SRV_CONTROL */.gm9);
    });

    function sendResetIn() {
      return _sendResetIn.apply(this, arguments);
    }

    return sendResetIn;
  }();

  _proto.sendStopStreaming = /*#__PURE__*/function () {
    var _sendStopStreaming = (0,asyncToGenerator/* default */.Z)(function* () {
      console.debug("bus: stop streaming");
      var readingRegisters = this.services({
        announced: true,
        ignoreInfrastructure: true
      }).map(srv => srv.readingRegister && srv.register(constants/* SensorReg.StreamingSamples */.q9t.StreamingSamples)).filter(reg => !!reg);
      yield Promise.all(readingRegisters.map(reg => reg.sendSetPackedAsync([0])));
    });

    function sendStopStreaming() {
      return _sendStopStreaming.apply(this, arguments);
    }

    return sendStopStreaming;
  }();

  _proto.sendPingLoggers = /*#__PURE__*/function () {
    var _sendPingLoggers = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this._minLoggerPriority < constants/* LoggerPriority.Silent */.qit.Silent && this.timestamp - this._lastPingLoggerTime > constants/* PING_LOGGERS_POLL */.Cot && this.devices({
        ignoreInfrastructure: true,
        serviceClass: constants/* SRV_LOGGER */.w9j
      }).length > 0) {
        this._lastPingLoggerTime = this.timestamp;
        var pkt = packet/* default.jdpacked */.Z.jdpacked(constants/* CMD_SET_REG */.YUL | constants/* LoggerReg.MinPriority */.hXV.MinPriority, "u8", [this._minLoggerPriority]);
        yield pkt.sendAsMultiCommandAsync(this, constants/* SRV_LOGGER */.w9j);
      }
    });

    function sendPingLoggers() {
      return _sendPingLoggers.apply(this, arguments);
    }

    return sendPingLoggers;
  }()
  /**
   * Indicates if registers are automatically refreshed in the background.
   * @category Services
   */
  ;

  /**
   * Cycles through all known registers and refreshes the once that have REPORT_UPDATE registered
   */
  _proto.handleRefreshRegisters = function handleRefreshRegisters() {
    var devices = this._devices.filter(device => device.announced && // needs services
    !device.lost && // ignore lost devices
    !device.hasService(specconstants/* SRV_PROXY */.Ahc) // just ignore proxies
    ); // skip if no devices or any device is currently flashing


    if (!devices.length || devices.some(dev => dev.flashing)) return; // no devices, we're done
    // collect registers

    var registers = (0,utils/* arrayConcatMany */.ue)(devices.map(device => (0,utils/* arrayConcatMany */.ue)(device.services({
      specification: true
    }).map(service => service.registers() // reported as not implemented
    .filter(reg => !reg.notImplemented) // someone is listening for reports
    .filter(reg => // automatic streaming
    this._streaming && reg.code === constants/* SystemReg.Reading */.ZJq.Reading || // someone asked for the value
    reg.needsRefresh || // listening for updates
    reg.listenerCount(constants/* REPORT_RECEIVE */.Gb8) > 0 || reg.listenerCount(constants/* REPORT_UPDATE */.rGZ) > 0) // ask if data is missing or non-const/status code
    .filter(reg => !reg.data || !((0,jdom_spec/* isConstRegister */.n6)(reg.specification) || reg.code === constants/* SystemReg.StatusCode */.ZJq.StatusCode || reg.code === constants/* SystemReg.ReadingError */.ZJq.ReadingError)) // stop asking optional registers
    .filter(reg => {
      var _reg$specification2;

      return !((_reg$specification2 = reg.specification) !== null && _reg$specification2 !== void 0 && _reg$specification2.optional) || reg.lastGetAttempts < constants/* REGISTER_OPTIONAL_POLL_COUNT */.Go2;
    }))))); // refresh values

    for (var register of registers) {
      var {
        service,
        specification
      } = register;
      var noDataYet = !register.data;
      var age = this.timestamp - register.lastGetTimestamp;
      var backoff = register.lastGetAttempts; // streaming register? use streaming sample

      if ((0,jdom_spec/* isReading */.vz)(specification) && (0,jdom_spec/* isSensor */.rq)(service.specification)) {
        // compute refresh interval
        var intervalRegister = service.register(constants/* SensorReg.StreamingInterval */.q9t.StreamingInterval);
        var interval = intervalRegister === null || intervalRegister === void 0 ? void 0 : intervalRegister.uintValue; // no interval data

        if (interval === undefined) {
          // use preferred interval data or default to 50
          var preferredIntervalRegister = service.register(constants/* SensorReg.StreamingPreferredInterval */.q9t.StreamingPreferredInterval);
          var preferredInterval = preferredIntervalRegister === null || preferredIntervalRegister === void 0 ? void 0 : preferredIntervalRegister.uintValue;
          interval = preferredInterval; // if no interval, poll interval value

          if (interval === undefined) {
            // all async
            if (intervalRegister && !intervalRegister.data && this.timestamp - intervalRegister.lastGetTimestamp > constants/* REGISTER_POLL_STREAMING_INTERVAL */.Ymh) intervalRegister.sendGetAsync();
            if (preferredIntervalRegister && !preferredIntervalRegister.data && this.timestamp - preferredIntervalRegister.lastGetTimestamp > constants/* REGISTER_POLL_STREAMING_INTERVAL */.Ymh) preferredIntervalRegister.sendGetAsync();
          }
        } // still no interval data use from spec or default


        if (interval === undefined) interval = specification.preferredInterval || constants/* STREAMING_DEFAULT_INTERVAL */.cXd;
        var streamingSamplesRegister = service.register(constants/* SensorReg.StreamingSamples */.q9t.StreamingSamples);
        var streamingSamplesAge = this.timestamp - streamingSamplesRegister.lastSetTimestamp; // need to figure out when we asked for streaming

        var midSamplesAge = interval * 0xff >> 1; // compute if half aged

        if (streamingSamplesAge > midSamplesAge) {
          //console.debug({ samplesAge, midSamplesAge, interval })
          streamingSamplesRegister.sendSetPackedAsync([0xff]);
        } // first query, get data asap once per second


        if (noDataYet && age > 1000) register.sendGetAsync();
      } // regular register, ping if data is old
      else {
        var volatile = !!(specification !== null && specification !== void 0 && specification.volatile);
        var expiration = volatile ? Math.min(constants/* REGISTER_POLL_REPORT_VOLATILE_MAX_INTERVAL */.MCW, constants/* REGISTER_POLL_REPORT_VOLATILE_INTERVAL */.oCD * (1 << backoff)) : Math.min(constants/* REGISTER_POLL_REPORT_MAX_INTERVAL */.nm3, (noDataYet ? constants/* REGISTER_POLL_FIRST_REPORT_INTERVAL */.BKx : constants/* REGISTER_POLL_REPORT_INTERVAL */.T5P) * (1 << backoff));

        if (age > expiration) {
          //console.log(`bus: poll ${register.id}`, register, age, backoff, expiration)
          register.sendGetAsync();
        }
      }
    } // apply streaming samples to service provider


    this._serviceProviders.map(host => host.emit(constants/* REFRESH */.RGM));
  }
  /**
   * Runs a promise with a timeout. Returns undefined if timeout happens before of disconnection.
   * @param timeout duration to wait before declaring timeout
   * @param promise promise to wrap
   * @category Lifecycle
   */
  ;

  _proto.withTimeout = function withTimeout(timeout, promise) {
    return new Promise((resolve, reject) => {
      var done = false;
      var tid = setTimeout(() => {
        if (!done) {
          done = true;

          if (!this._transports.some(tr => tr.connected)) {
            // the bus got disconnected so all operation will
            // time out going further
            this.emit(constants/* TIMEOUT_DISCONNECT */.Xxe);
            resolve(undefined);
          } else {
            // the command timed out
            this.emit(constants/* TIMEOUT */.LXI);
            this.emit(constants/* ERROR */.pnR, "Timeout (" + timeout + "ms)");
            resolve(undefined);
          }
        }
      }, timeout);
      promise.then(v => {
        if (!done) {
          done = true;
          clearTimeout(tid);
          resolve(v);
        } else {
          // we already gave up
          this.emit(constants/* LATE */.h2Z);
        }
      }, e => {
        if (!done) {
          done = true;
          clearTimeout(tid);
          reject(e);
        }
      });
    });
  };

  (0,createClass/* default */.Z)(JDBus, [{
    key: "client",
    get: function get() {
      return this._client;
    }
    /**
     * Sets the client state
     * @category Lifecycle
     */
    ,
    set: function set(value) {
      if (!!value !== this._client) {
        this._client = !!value;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
    /**
     * Gets the list of transports registers with the bus
     * @category Transports and Bridges
     */

  }, {
    key: "transports",
    get: function get() {
      return this._transports.slice(0);
    }
  }, {
    key: "bridges",
    get: function get() {
      return this._bridges.slice(0);
    }
  }, {
    key: "passive",
    get: function get() {
      return this._passive;
    }
    /**
     * Sets the passive state. A passive bus does not send any packets.
     * @category Lifecycle
     */
    ,
    set: function set(value) {
      if (value !== this._passive) {
        this._passive = value;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
  }, {
    key: "safeBoot",
    get: function get() {
      return !!this._safeBootInterval;
    }
    /**
     * Turn on or off the safe boot mode where the bus keeps devices in bootloader mode.
     * Triggers a CHANGE event.
     * @category Lifecycle
     */
    ,
    set: function set(enabled) {
      if (enabled && !this._safeBootInterval) {
        this._safeBootInterval = this.scheduler.setInterval(() => {
          // don't send message if any device is flashing
          if (this._devices.some(d => d.flashing)) return;
          (0,flashing/* sendStayInBootloaderCommand */.is)(this);
        }, 50);
        this.emit(constants/* CHANGE */.Ver);
      } else if (!enabled && this._safeBootInterval) {
        this.scheduler.clearInterval(this._safeBootInterval);
        this._safeBootInterval = undefined;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
    /**
     * Indicates if any of the transports is connected.
     * Some transports might be in the process of connecting or disconnecting.
     * @category Lifecycle
     */

  }, {
    key: "connected",
    get: function get() {
      return this._transports.some(t => t.connected);
    }
    /**
     * Indicates if any of the transports is disconnected.
     * Some transports might be in the process of connecting or disconnecting.
     * @category Lifecycle
     */

  }, {
    key: "disconnected",
    get: function get() {
      return this._transports.every(t => t.disconnected);
    }
  }, {
    key: "id",
    get: function get() {
      return this.nodeKind;
    }
    /**
     * Gets the bus name
     * @category JDOM
     */

  }, {
    key: "name",
    get: function get() {
      return "bus";
    }
    /**
     * Gets the bus name
     * @category JDOM
     */

  }, {
    key: "friendlyName",
    get: function get() {
      return this.name;
    }
    /**
     * Gets the bus name
     * @category JDOM
     */

  }, {
    key: "qualifiedName",
    get: function get() {
      return this.name;
    }
    /**
     * Returns the ``BUS_NODE_NAME``
     * @category JDOM
     */

  }, {
    key: "nodeKind",
    get: function get() {
      return constants/* BUS_NODE_NAME */.oPG;
    }
    /**
     * Gets the default role manager service client, if any
     * @category Services
     */

  }, {
    key: "roleManager",
    get: function get() {
      return this._roleManagerClient;
    }
  }, {
    key: "timestamp",
    get: function get() {
      return this.scheduler.timestamp;
    }
    /**
     * Indicates if the bus should force all sensors to stream
     * @category Lifecycle
     */

  }, {
    key: "streaming",
    get: function get() {
      return this._streaming;
    }
    /**
     * Sets automatic streaming on and off
     * @category Lifecycle
     */
    ,
    set: function set(value) {
      this._streaming = value;
    }
  }, {
    key: "minLoggerPriority",
    get: function get() {
      return this._minLoggerPriority;
    }
    /**
     * Sets the current desired minimum logger verbosity on the bus
     * @category Diagnostics
     */
    ,
    set: function set(priority) {
      if (priority !== this._minLoggerPriority) {
        this._lastPingLoggerTime = -Infinity;
        this._minLoggerPriority = priority;
        this.emit(constants/* CHANGE */.Ver);
      }
    }
    /**
     * Returns undefined
     * @category JDOM
     */

  }, {
    key: "parent",
    get: function get() {
      return undefined;
    }
  }, {
    key: "firmwareBlobs",
    get: function get() {
      return this._firmwareBlobs;
    }
    /**
     * Sets the list of known firmware blobs
     * @category Firmware
     */
    ,
    set: function set(blobs) {
      this._firmwareBlobs = blobs;
      this.emit(constants/* FIRMWARE_BLOBS_CHANGE */.Kvv);
      this.emit(constants/* CHANGE */.Ver);
    }
  }, {
    key: "children",
    get: function get() {
      return this.devices();
    }
  }, {
    key: "devicesFrozen",
    get: function get() {
      return this._gcDevicesFrozen > 0;
    }
  }, {
    key: "selfDevice",
    get: function get() {
      return this.device(this.selfDeviceId);
    }
  }, {
    key: "lastResetInTime",
    get: function get() {
      return this._lastResetInTime;
    }
  }, {
    key: "backgroundRefreshRegisters",
    get: function get() {
      return !!this._refreshRegistersInterval;
    }
    /**
     * Enables or disables automatically refreshing registers in the background.
     * @param enabled true to automatically refresh registers
     * @category Services
     */
    ,
    set: function set(enabled) {
      if (!!enabled !== this.backgroundRefreshRegisters) {
        if (!enabled) {
          if (this._refreshRegistersInterval) this.scheduler.clearInterval(this._refreshRegistersInterval);
          this._refreshRegistersInterval = undefined;
        } else {
          this._refreshRegistersInterval = this.scheduler.setInterval(this.handleRefreshRegisters.bind(this), constants/* REFRESH_REGISTER_POLL */.vnD);
        }
      }
    }
  }]);

  return JDBus;
}(node/* default */.Z);
/* harmony default export */ var bus = (bus_JDBus);
// EXTERNAL MODULE: ./.cache/gatsby-browser-entry.js
var gatsby_browser_entry = __webpack_require__(35313);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/hf2.ts
var hf2 = __webpack_require__(72740);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/microbit.ts




var MICROBIT_V2_VENDOR_ID = 3368;
var MICROBIT_V2_PRODUCT_ID = 516;
var CMSISProto = /*#__PURE__*/function () {
  function CMSISProto(io) {
    this.q = new utils/* PromiseQueue */.bo();
    this.sendQ = [];
    this.io = io;
  }

  var _proto = CMSISProto.prototype;

  _proto.startRecvToLoop = function startRecvToLoop() {
    console.assert(!this._lastInterval);
    var last = this.recvTo; // do not use bus schedulere here

    this._lastInterval = setInterval(() => {
      if (!this.io) this.stopRecvToLoop();

      if (last && last == this.recvTo) {
        last();
      }

      last = this.recvTo;
    }, 200);
  };

  _proto.stopRecvToLoop = function stopRecvToLoop() {
    if (this._lastInterval) {
      clearInterval(this._lastInterval);
      this._lastInterval = undefined;
    }
  };

  _proto.error = function error(msg, code) {
    var _this$io;

    this.stopRecvToLoop();
    (_this$io = this.io) === null || _this$io === void 0 ? void 0 : _this$io.error(msg, code); // clear state

    this.xchgAddr = null;
  };

  _proto.onJDMessage = function onJDMessage(f) {
    this._onJDMsg = f;
  };

  _proto.sendJDMessageAsync = function sendJDMessageAsync(buf) {
    if (buf.length & 3) {
      var tmp = new Uint8Array(buf.length + 3 & ~3);
      tmp.set(buf);
      buf = tmp;
    }

    return new Promise(resolve => {
      this.sendQ.push({
        buf,
        cb: resolve
      });
    });
  };

  _proto.disconnectAsync = /*#__PURE__*/function () {
    var _disconnectAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this.io) {
        console.debug("micro:bit: disconnect proto");
        this.stopRecvToLoop();

        this._onJDMsg = () => console.warn("rogue jd callback");

        var _io = this.io;
        this.io = undefined;
        if (_io) yield _io.disconnectAsync();
      }
    });

    function disconnectAsync() {
      return _disconnectAsync.apply(this, arguments);
    }

    return disconnectAsync;
  }();

  _proto.recvAsync = function recvAsync() {
    return new Promise((resolve, reject) => {
      // io may have been cleared
      if (!this.io) {
        reject(new Error("USB disconnected"));
        return;
      }

      this.io.recvPacketAsync().then(v => {
        var f = resolve;
        resolve = null;

        if (f) {
          this.recvTo = null;
          f(v);
        }
      }, err => {
        if (resolve) {
          resolve = null;
          this.recvTo = null;
          reject(err);
        }
      });

      this.recvTo = () => {
        if (resolve) {
          resolve = null;
          reject(new Error("CMSIS recv timeout"));
        }
      };
    });
  };

  _proto.talkAsync = function talkAsync(cmds) {
    var _this = this;

    return this.q.enqueue("talk", /*#__PURE__*/(0,asyncToGenerator/* default */.Z)(function* () {
      if (!_this.io) {
        _this.error("micro:bit disconnected");

        return; // disconnected
      } //console.log("TALK", cmds)


      yield _this.io.sendPacketAsync(new Uint8Array(cmds));

      if (!_this.io) {
        _this.error("micro:bit disconnected");

        return; // disconnected
      }

      var response = yield _this.recvAsync();

      if (response[0] !== cmds[0]) {
        var msg = "Bad response for " + cmds[0] + " -> " + response[0] + ", try again";
        console.debug(msg, {
          cmds,
          response
        });

        try {
          response = yield _this.recvAsync();
        } catch (e) {
          // throw the original error in case of timeout
          _this.error(msg);
        }

        if (response[0] !== cmds[0]) _this.error(msg);
      }

      return response;
    }));
  };

  _proto.talkHexAsync = function talkHexAsync(str) {
    return this.talkAsync((0,utils/* fromHex */.H_)(str.replace(/ /g, "")));
  };

  _proto.decodeString = function decodeString(buf) {
    var len = buf[1];
    var ss = buf.slice(2, 2 + len);
    return (0,utils/* uint8ArrayToString */.DA)(ss);
  };

  _proto.dapDelay = function dapDelay(micros) {
    var cmd = [0x09, 0, 0];
    if (micros > 0xffff) this.error("too large delay");
    (0,utils/* write16 */.SZ)(cmd, 1, micros);
    return this.talkAsync(cmd);
  };

  _proto.setBaudRate = /*#__PURE__*/function () {
    var _setBaudRate = (0,asyncToGenerator/* default */.Z)(function* () {
      var setBaud = [0x82, 0, 0, 0, 0];
      (0,utils/* write32 */.Pg)(setBaud, 1, 115200);
      yield this.talkAsync(setBaud); // this reset the board on 0255
    });

    function setBaudRate() {
      return _setBaudRate.apply(this, arguments);
    }

    return setBaudRate;
  }();

  _proto.xchgLoop = /*#__PURE__*/function () {
    var _xchgLoop = (0,asyncToGenerator/* default */.Z)(function* () {
      var currSend;

      while (this.io) {
        var now = Date.now();

        if (flags/* default.diagnostics */.Z.diagnostics && this.lastXchg && now - this.lastXchg > 50) {
          console.warn("slow xchg: " + (now - this.lastXchg) + "ms");
        }

        this.lastXchg = now;
        var numev = 0;
        var inp = yield this.readBytes(this.xchgAddr + 12, 256, true);

        if (inp[2]) {
          yield this.writeWord(this.xchgAddr + 12, 0);
          yield this.triggerIRQ();
          inp = inp.slice(0, inp[2] + 12);

          this._onJDMsg(inp);

          numev++;
        }

        var sendFree = false;

        if (currSend) {
          var send = yield this.readBytes(this.xchgAddr + 12 + 256, 4);

          if (!send[2]) {
            currSend.cb();
            currSend = null;
            sendFree = true;
            numev++;
          }
        }

        if (!currSend && this.sendQ.length) {
          if (!sendFree) {
            var _send = yield this.readBytes(this.xchgAddr + 12 + 256, 4);

            if (!_send[2]) sendFree = true;
          }

          if (sendFree) {
            currSend = this.sendQ.shift();
            var bbody = currSend.buf.slice(4);
            yield this.writeWords(this.xchgAddr + 12 + 256 + 4, new Uint32Array(bbody.buffer));
            var bhead = currSend.buf.slice(0, 4);
            yield this.writeWords(this.xchgAddr + 12 + 256, new Uint32Array(bhead.buffer));
            yield this.triggerIRQ();
            this.lastSend = Date.now();
            numev++;
          } else {
            if (this.lastSend) {
              var d = Date.now() - this.lastSend;

              if (d > 50) {
                this.lastSend = 0;
                console.warn("failed to send packet fast enough");
              }
            }
          }
        }

        if (yield this.readSerial()) numev++;
        if (numev == 0) yield this.dapDelay(1000);
      }
    });

    function xchgLoop() {
      return _xchgLoop.apply(this, arguments);
    }

    return xchgLoop;
  }();

  _proto.readSerial = /*#__PURE__*/function () {
    var _readSerial = (0,asyncToGenerator/* default */.Z)(function* () {
      var buf = yield this.talkAsync([0x83]);
      var len = buf[1];

      if (len) {
        buf = buf.slice(2, 2 + len);
        if (this.pendingSerial) buf = (0,utils/* bufferConcat */.gX)(this.pendingSerial, buf);
        var ptr = 0;
        var beg = 0;

        while (ptr < buf.length) {
          if (buf[ptr] == 10 || buf[ptr] == 13) {
            var line = buf.slice(beg, ptr);
            if (line.length) console.debug("microbit: " + (0,utils/* fromUTF8 */.W_)((0,utils/* uint8ArrayToString */.DA)(line)));
            beg = ptr + 1;
          }

          ptr++;
        }

        buf = buf.slice(beg);
        this.pendingSerial = buf.length ? buf : null;
        if (this.pendingSerial) this.lastPendingSerial = Date.now();
      } else if (this.pendingSerial) {
        var d = Date.now() - this.lastPendingSerial;

        if (d > 500) {
          var s = (0,utils/* fromUTF8 */.W_)((0,utils/* uint8ArrayToString */.DA)(this.pendingSerial));
          this.pendingSerial = null;
          console.debug("SERIAL[TO]: " + s);
        }
      }

      return len;
    });

    function readSerial() {
      return _readSerial.apply(this, arguments);
    }

    return readSerial;
  }();

  _proto.talkStringAsync = /*#__PURE__*/function () {
    var _talkStringAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      for (var _len = arguments.length, cmds = new Array(_len), _key = 0; _key < _len; _key++) {
        cmds[_key] = arguments[_key];
      }

      return this.talkAsync(cmds).then(buf => this.decodeString(buf));
    });

    function talkStringAsync() {
      return _talkStringAsync.apply(this, arguments);
    }

    return talkStringAsync;
  }();

  _proto.readDP = /*#__PURE__*/function () {
    var _readDP = (0,asyncToGenerator/* default */.Z)(function* (reg) {
      var nums = [0x05, 0, 1, 2 | reg, 0, 0, 0, 0];
      var buf = yield this.talkAsync(nums);
      return (0,utils/* read32 */.Zy)(buf, 3);
    });

    function readDP(_x) {
      return _readDP.apply(this, arguments);
    }

    return readDP;
  }();

  _proto.setupTAR = /*#__PURE__*/function () {
    var _setupTAR = (0,asyncToGenerator/* default */.Z)(function* (addr) {
      var nums = [5, 0, 2, 1, 0x52, 0, 0, 0x23, 5, 0, 0, 0, 0];
      (0,utils/* write32 */.Pg)(nums, 9, addr);
      yield this.talkAsync(nums);
    });

    function setupTAR(_x2) {
      return _setupTAR.apply(this, arguments);
    }

    return setupTAR;
  }();

  _proto.writeWords = /*#__PURE__*/function () {
    var _writeWords = (0,asyncToGenerator/* default */.Z)(function* (addr, data) {
      var _this2 = this;

      yield this.setupTAR(addr);
      var MAX = 0xe;
      var ptr = 0;
      var reqHd = [6, 0, MAX, 0, 0xd];

      for (var i = 0; i < MAX * 4; ++i) {
        reqHd.push(0);
      }

      var req = new Uint8Array(reqHd);
      var overhang = 1;
      var ptrTX = 0;
      var count = data.length;
      var dataBytes = new Uint8Array(data.buffer);
      var lastCh = MAX; //console.log("WRITE", addr.toString(16), data)

      yield this.q.enqueue("talk", /*#__PURE__*/(0,asyncToGenerator/* default */.Z)(function* () {
        while (ptr < count) {
          var ch = Math.min(count - ptrTX, MAX);

          if (ch) {
            req[2] = ch;
            req.set(dataBytes.slice(ptrTX * 4, (ptrTX + ch) * 4), 5);

            if (!_this2.io) {
              _this2.error("disconnected");

              return;
            }

            yield _this2.io.sendPacketAsync(ch == MAX ? req : req.slice(0, 5 + 4 * ch));
            ptrTX += ch;
            lastCh = ch;
          }

          if (overhang-- > 0) continue;

          var _buf = yield _this2.recvAsync();

          if (_buf[0] != req[0]) _this2.error("bad response, " + _buf[0] + " != " + req[0]);
          if (_buf[1] != MAX && _buf[1] != lastCh) _this2.error("bad response, " + _buf[1] + " != " + MAX + " && " + _buf[1] + " != " + lastCh);
          ptr += _buf[1];
        }
      }));
    });

    function writeWords(_x3, _x4) {
      return _writeWords.apply(this, arguments);
    }

    return writeWords;
  }();

  _proto.readBytes = /*#__PURE__*/function () {
    var _readBytes = (0,asyncToGenerator/* default */.Z)(function* (addr, count, jdmode) {
      if (jdmode === void 0) {
        jdmode = false;
      }

      if (addr & 3 || count & 3) this.error("unaligned");
      var b = yield this.readWords(addr, count >> 2, jdmode);
      return new Uint8Array(b.buffer);
    });

    function readBytes(_x5, _x6, _x7) {
      return _readBytes.apply(this, arguments);
    }

    return readBytes;
  }();

  _proto.readWords = /*#__PURE__*/function () {
    var _readWords = (0,asyncToGenerator/* default */.Z)(function* (addr, count, jdmode) {
      var _this3 = this;

      if (jdmode === void 0) {
        jdmode = false;
      }

      yield this.setupTAR(addr);
      var MAX = 0xe;
      var res = new Uint32Array(count);
      var ptr = 0;
      var req = new Uint8Array([6, 0, MAX, 0, 0xf]);
      var overhang = 1;
      var ptrTX = 0; // console.log("READ", addr.toString(16), count)

      var numPending = 0;
      yield this.q.enqueue("talk", /*#__PURE__*/(0,asyncToGenerator/* default */.Z)(function* () {
        while (ptr < count || numPending) {
          var ch = Math.min(count - ptrTX, MAX);

          if (ch > 0) {
            req[2] = ch;
            numPending++;

            if (!_this3.io) {
              _this3.error("disconnected");

              return;
            }

            yield _this3.io.sendPacketAsync(req);
            ptrTX += ch;
          }

          if (overhang-- > 0) continue;

          var _buf2 = yield _this3.recvAsync();

          numPending--;

          if (_buf2[0] != req[0]) {
            _this3.error("bad response");

            return;
          }

          var len = _buf2[1];
          var words = new Uint32Array(_buf2.slice(4, (1 + len) * 4).buffer);

          if (words.length != len) {
            _this3.error("bad response2");

            return;
          }

          res.set(words, ptr); // limit transfer, according to JD frame size

          if (jdmode && ptr == 0) {
            var frmsz = new Uint8Array(res.buffer)[2];

            var _words = frmsz + 12 + 3 >> 2;

            if (count > _words) count = _words;
          }

          ptr += words.length;
        }
      }));
      return res;
    });

    function readWords(_x8, _x9, _x10) {
      return _readWords.apply(this, arguments);
    }

    return readWords;
  }();

  _proto.findExchange = /*#__PURE__*/function () {
    var _findExchange = (0,asyncToGenerator/* default */.Z)(function* () {
      var _this4 = this;

      var memStart = 0x20000000;
      var memStop = memStart + 128 * 1024;
      var checkSize = 1024;
      var p0 = 0x20006000;
      var p1 = 0x20006000 + checkSize;

      var check = /*#__PURE__*/function () {
        var _ref4 = (0,asyncToGenerator/* default */.Z)(function* (addr) {
          if (addr < memStart) return null;
          if (addr + checkSize > memStop) return null;
          var buf = yield _this4.readWords(addr, checkSize >> 2);

          for (var i = 0; i < buf.length; ++i) {
            if (buf[i] == 0x786d444a && buf[i + 1] == 0xb0a6c0e9) return addr + (i << 2);
          }

          return 0;
        });

        return function check(_x11) {
          return _ref4.apply(this, arguments);
        };
      }(); // eslint-disable-next-line no-constant-condition


      while (true) {
        var a0 = yield check(p0);
        if (a0) return a0;
        var a1 = yield check(p1);
        if (a1) return a1;
        if (a0 === null && a1 === null) return null;
        p0 -= checkSize;
        p1 += checkSize;
      }
    });

    function findExchange() {
      return _findExchange.apply(this, arguments);
    }

    return findExchange;
  }();

  _proto.triggerIRQ = /*#__PURE__*/function () {
    var _triggerIRQ = (0,asyncToGenerator/* default */.Z)(function* () {
      var addr = 0xe000e200 + (this.irqn >> 5) * 4;
      var data = new Uint32Array([1 << (this.irqn & 31)]);
      yield this.writeWords(addr, data);
    });

    function triggerIRQ() {
      return _triggerIRQ.apply(this, arguments);
    }

    return triggerIRQ;
  }();

  _proto.writeWord = function writeWord(addr, val) {
    return this.writeWords(addr, new Uint32Array([val]));
  };

  _proto.reset = /*#__PURE__*/function () {
    var _reset = (0,asyncToGenerator/* default */.Z)(function* () {
      yield this.writeWord(0xe000edfc, 0); // DEMCR

      yield this.writeWord(0xe000ed0c, 0x05fa0000 | 1 << 2); // AIRCR
    });

    function reset() {
      return _reset.apply(this, arguments);
    }

    return reset;
  }();

  _proto.postConnectAsync = /*#__PURE__*/function () {
    var _postConnectAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      this.startRecvToLoop();
      var devid = yield this.talkStringAsync(0x80);

      if (/^9902/.test(devid)) {
        this.error("micro:bit v1 is not supported. sorry.", constants/* ERROR_MICROBIT_V1 */.IsD);
        return;
      }

      if (!/^990[3456789]/.test(devid)) {
        this.error("Invalid Vendor0 response: " + devid, constants/* ERROR_MICROBIT_UNKNOWN */.CM_);
        return;
      }

      this.io.log("DAPLink v" + (yield this.talkStringAsync(0x00, 0x04)));
      yield this.setBaudRate(); // this may reset the board

      var freq = [0x11, 0, 0, 0, 0];
      (0,utils/* write32 */.Pg)(freq, 1, 10000000);
      yield this.talkAsync(freq);
      var inits = ["02 00", // connect
      "04 00 64 00 00 00", // configure delays
      // SWD switch
      "12 38 FF FF FF FF FF FF FF", // ones
      "12 10 9E E7", // SWD
      "12 38 FF FF FF FF FF FF FF", // ones
      "12 08 00", // zero
      // read DPIDR
      "05 00 01 02 00 00 00 00", // clear errors
      "05 00 03 00 04 00 00 00 08 00 00 00 00 04 00 00 00 50"];

      for (var ini of inits) {
        yield this.talkHexAsync(ini);
      }

      for (var i = 0; i < 100; ++i) {
        var st = yield this.readDP(4);
        var mask = 1 << 29 | 1 << 31;
        if ((st & mask) == mask) break;
        yield (0,utils/* delay */.gw)(20);
      }

      yield this.reset();
      yield (0,utils/* delay */.gw)(1000); // the actual minimum until mbbridge starts seems to be 700ms; give it some more time just in case

      var xchg = yield this.findExchange();

      if (xchg === null) {
        this.error("exchange address not found; add jacdac to your project", constants/* ERROR_MICROBIT_JACDAC_MISSING */.kbU);
        return;
      }

      this.xchgAddr = xchg;
      var info = yield this.readBytes(xchg, 16);
      this.irqn = info[8];

      if (info[12 + 2] != 0xff) {
        this.error("invalid memory; try power-cycling the micro:bit", constants/* ERROR_MICROBIT_INVALID_MEMORY */.mZW);
        return;
      } // clear initial lock


      yield this.writeWord(xchg + 12, 0);
      this.io.log("exchange address: 0x" + xchg.toString(16) + "; irqn=" + this.irqn);
      /* async */

      this.xchgLoop().catch(e => {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        this.error((e === null || e === void 0 ? void 0 : e.message) || "an error occured");
      });
    });

    function postConnectAsync() {
      return _postConnectAsync.apply(this, arguments);
    }

    return postConnectAsync;
  }();

  return CMSISProto;
}();
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/error.ts
var jdom_error = __webpack_require__(52800);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/usbio.ts






var USB_FILTERS = {
  filters: [{
    // hf2 devices (incl. arcade)
    classCode: 255,
    subclassCode: hf2/* HF2_DEVICE_MAJOR */.RY
  }, {
    // micro:bit v2
    vendorId: MICROBIT_V2_VENDOR_ID,
    productId: MICROBIT_V2_PRODUCT_ID
  }]
};
var controlTransferGetReport = 0x01;
var controlTransferSetReport = 0x09;
var controlTransferOutReport = 0x200;
var controlTransferInReport = 0x100;

var USBIO = /*#__PURE__*/function () {
  function USBIO(options) {
    this.readLoopStarted = false;
    this.ready = false;
    this.rawMode = false;

    this.onData = v => {};

    this.onError = e => {
      console.warn("usb error: " + ((0,jdom_error/* errorCode */.uY)(e) || "") + " " + (e ? e.stack : e));
    };

    this.options = options;
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars


  var _proto = USBIO.prototype;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _proto.log = function log(msg, v) {
    if (flags/* default.diagnostics */.Z.diagnostics) {
      if (v != undefined) console.debug("usb: " + msg, v);else console.debug("usb: " + msg);
    }
  };

  _proto.mkProto = function mkProto() {
    return this.isMicrobit() ? new CMSISProto(this) : new hf2/* HF2Proto */.xP(this);
  };

  _proto.clearDev = function clearDev() {
    if (this.dev) {
      this.dev = null;
      this.epIn = null;
      this.epOut = null;

      this.onData = () => console.warn("rogue hf2 onData");
    }
  };

  _proto.disconnectAsync = function disconnectAsync() {
    this.ready = false;
    if (!this.dev) return Promise.resolve();
    console.debug("close device");
    return this.dev.close().catch(e => {
      // just ignore errors closing, most likely device just disconnected
      if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
    }).then(() => {
      this.clearDev();
      return (0,utils/* delay */.gw)(500);
    });
  };

  _proto.recvPacketAsync = function recvPacketAsync() {
    if (!this.rawMode) this.error("rawMode required");
    return this.recvPacketCoreAsync();
  };

  _proto.recvPacketCoreAsync = function recvPacketCoreAsync() {
    var final = res => {
      if (res.status != "ok") this.error("USB IN transfer failed");
      var arr = new Uint8Array(res.data.buffer);
      if (arr.length == 0) return this.recvPacketCoreAsync();
      return arr;
    };

    if (!this.dev) return Promise.reject(new Error("Disconnected"));

    if (!this.epIn) {
      return this.dev.controlTransferIn({
        requestType: "class",
        recipient: "interface",
        request: controlTransferGetReport,
        value: controlTransferInReport,
        index: this.iface.interfaceNumber
      }, 64).then(final);
    }

    return this.dev.transferIn(this.epIn.endpointNumber, 64).then(final);
  };

  _proto.error = function error(msg, code) {
    var e = new jdom_error/* default */.ZP("device " + (this.dev ? this.dev.productName : "n/a") + " (" + msg + ")", code);
    this.onError(e);
  };

  _proto.readLoop = /*#__PURE__*/function () {
    var _readLoop = (0,asyncToGenerator/* default */.Z)(function* () {
      if (this.rawMode || this.readLoopStarted) return;
      this.readLoopStarted = true;
      console.debug("start read loop"); // eslint-disable-next-line no-constant-condition

      while (true) {
        if (!this.ready) {
          break; //await delay(300)
          //continue
        }

        try {
          var buf = yield this.recvPacketCoreAsync();

          if (buf[0]) {
            // we've got data; retry reading immedietly after processing it
            this.onData(buf);
          } else {
            // throttle down if no data coming
            yield (0,utils/* delay */.gw)(5);
          }
        } catch (err) {
          if (this.dev) {
            if (!(0,utils/* isCancelError */.G5)(err)) this.onError(err);
            yield this.disconnectAsync();
          }

          yield (0,utils/* delay */.gw)(300);
        }
      }
    });

    function readLoop() {
      return _readLoop.apply(this, arguments);
    }

    return readLoop;
  }();

  _proto.sendPacketAsync = function sendPacketAsync(pkt) {
    if (!this.dev) return Promise.reject(new Error("Disconnected"));
    (0,utils/* assert */.hu)(pkt.length <= 64);

    if (!this.epOut) {
      return this.dev.controlTransferOut({
        requestType: "class",
        recipient: "interface",
        request: controlTransferSetReport,
        value: controlTransferOutReport,
        index: this.iface.interfaceNumber
      }, pkt).then(res => {
        if (res.status != "ok") this.error("USB CTRL OUT transfer failed");
      });
    }

    return this.dev.transferOut(this.epOut.endpointNumber, pkt).then(res => {
      if (res.status != "ok") this.error("USB OUT transfer failed");
    });
  };

  _proto.isMicrobit = function isMicrobit() {
    return this.dev && this.dev.productId == 516 && this.dev.vendorId == 3368;
  };

  _proto.checkDevice = function checkDevice() {
    this.iface = undefined;
    this.altIface = undefined;
    if (!this.dev) return false;
    console.debug("connect device: " + this.dev.manufacturerName + " " + this.dev.productName); // resolve interfaces

    var subcl = this.isMicrobit() ? 0 : hf2/* HF2_DEVICE_MAJOR */.RY;

    for (var iface of this.dev.configuration.interfaces) {
      var alt = iface.alternates[0];

      if (alt.interfaceClass == 0xff && alt.interfaceSubclass == subcl) {
        this.iface = iface;
        this.altIface = alt;
        break;
      }
    }

    if (this.isMicrobit()) this.rawMode = true;
    return !!this.iface;
  };

  _proto.tryReconnectAsync = /*#__PURE__*/function () {
    var _tryReconnectAsync = (0,asyncToGenerator/* default */.Z)(function* (deviceId) {
      try {
        var devices = yield this.options.getDevices(USB_FILTERS);
        this.dev = deviceId ? devices.find(dev => dev.serialNumber === deviceId) : devices[0];
      } catch (e) {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        this.dev = undefined;
      }
    });

    function tryReconnectAsync(_x) {
      return _tryReconnectAsync.apply(this, arguments);
    }

    return tryReconnectAsync;
  }();

  _proto.requestDeviceAsync = /*#__PURE__*/function () {
    var _requestDeviceAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      try {
        this.dev = yield this.options.requestDevice(USB_FILTERS);
      } catch (e) {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        this.dev = undefined;
      }
    });

    function requestDeviceAsync() {
      return _requestDeviceAsync.apply(this, arguments);
    }

    return requestDeviceAsync;
  }();

  _proto.connectAsync = /*#__PURE__*/function () {
    var _connectAsync = (0,asyncToGenerator/* default */.Z)(function* (background, deviceId) {
      yield this.tryReconnectAsync(deviceId);
      if (!this.dev && !background) yield this.requestDeviceAsync(); // background call and no device, just give up for now

      if (!this.dev && background) (0,utils/* throwError */._y)("device not paired", true); // let's connect

      yield this.openDeviceAsync();
      var proto = this.mkProto();

      try {
        yield proto.postConnectAsync();
      } catch (e) {
        if (!(0,utils/* isCancelError */.G5)(e)) console.debug(e);
        yield proto.disconnectAsync();
        throw e;
      }

      return proto;
    });

    function connectAsync(_x2, _x3) {
      return _connectAsync.apply(this, arguments);
    }

    return connectAsync;
  }();

  _proto.openDeviceAsync = /*#__PURE__*/function () {
    var _openDeviceAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      if (!this.dev) (0,utils/* throwError */._y)("device not found", true);
      if (!this.checkDevice()) (0,utils/* throwError */._y)("device does not support HF2");
      yield this.dev.open();
      yield this.dev.selectConfiguration(1);

      if (this.altIface.endpoints.length) {
        this.epIn = this.altIface.endpoints.filter(e => e.direction == "in")[0];
        this.epOut = this.altIface.endpoints.filter(e => e.direction == "out")[0];
        (0,utils/* assert */.hu)(this.epIn.packetSize == 64);
        (0,utils/* assert */.hu)(this.epOut.packetSize == 64);
      }

      console.debug("claim interface");
      yield this.dev.claimInterface(this.iface.interfaceNumber);
      console.debug("all connected");
      this.ready = true;
      /* no await */

      this.readLoop();
    });

    function openDeviceAsync() {
      return _openDeviceAsync.apply(this, arguments);
    }

    return openDeviceAsync;
  }();

  return USBIO;
}();


;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/usb.ts




function usb_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function usb_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { usb_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { usb_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







function isWebUSBEnabled() {
  return !!flags/* default.webUSB */.Z.webUSB;
}
function isWebUSBSupported() {
  try {
    return typeof navigator !== "undefined" && !!navigator.usb && !!navigator.usb.getDevices;
  } catch (e) {
    return false;
  }
}
function usbRequestDevice(options) {
  // disabled
  if (!flags/* default.webUSB */.Z.webUSB) return Promise.resolve(undefined);

  try {
    var _navigator, _navigator$usb, _navigator$usb$reques;

    return (_navigator = navigator) === null || _navigator === void 0 ? void 0 : (_navigator$usb = _navigator.usb) === null || _navigator$usb === void 0 ? void 0 : (_navigator$usb$reques = _navigator$usb.requestDevice) === null || _navigator$usb$reques === void 0 ? void 0 : _navigator$usb$reques.call(_navigator$usb, options);
  } catch (e) {
    if (flags/* default.diagnostics */.Z.diagnostics) console.warn(e);
    return undefined;
  }
}

function usbGetDevices() {
  // disabled
  if (!Flags.webUSB) return Promise.resolve([]);

  try {
    var _navigator2, _navigator2$usb;

    return ((_navigator2 = navigator) === null || _navigator2 === void 0 ? void 0 : (_navigator2$usb = _navigator2.usb) === null || _navigator2$usb === void 0 ? void 0 : _navigator2$usb.getDevices()) || Promise.resolve([]);
  } catch (e) {
    if (Flags.diagnostics) console.warn(e);
    return Promise.resolve([]);
  }
}

var WebUSBTransport = /*#__PURE__*/function (_Transport) {
  (0,inheritsLoose/* default */.Z)(WebUSBTransport, _Transport);

  function WebUSBTransport(options) {
    var _this;

    _this = _Transport.call(this, constants/* USB_TRANSPORT */.W3h, usb_objectSpread(usb_objectSpread({}, options), {}, {
      checkPulse: true
    })) || this;
    _this.options = options;
    return _this;
  }

  var _proto = WebUSBTransport.prototype;

  _proto.transportConnectAsync = /*#__PURE__*/function () {
    var _transportConnectAsync = (0,asyncToGenerator/* default */.Z)(function* (background) {
      var transport = new USBIO(this.options);

      transport.onError = e => this.errorHandler(constants/* USB_TRANSPORT */.W3h, e);

      this.hf2 = yield transport.connectAsync(background);
      this.hf2.onJDMessage(this.handleFrame.bind(this));
    });

    function transportConnectAsync(_x) {
      return _transportConnectAsync.apply(this, arguments);
    }

    return transportConnectAsync;
  }();

  _proto.transportSendPacketAsync = /*#__PURE__*/function () {
    var _transportSendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (p) {
      if (!this.hf2) throw new Error("hf2 transport disconnected");
      var buf = p.toBuffer();
      yield this.hf2.sendJDMessageAsync(buf);
    });

    function transportSendPacketAsync(_x2) {
      return _transportSendPacketAsync.apply(this, arguments);
    }

    return transportSendPacketAsync;
  }() // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.transportDisconnectAsync =
  /*#__PURE__*/
  function () {
    var _transportDisconnectAsync = (0,asyncToGenerator/* default */.Z)(function* (background) {
      var h = this.hf2;
      this.hf2 = undefined;
      if (h) yield h.disconnectAsync();
    });

    function transportDisconnectAsync(_x3) {
      return _transportDisconnectAsync.apply(this, arguments);
    }

    return transportDisconnectAsync;
  }();

  return WebUSBTransport;
}(transport_transport/* default */.ZP);

function defaultOptions() {
  return isWebUSBSupported() && {
    getDevices: usbGetDevices,
    requestDevice: usbRequestDevice,
    connectObservable: new EventTargetObservable(navigator.usb, "connect"),
    disconnectObservable: new EventTargetObservable(navigator.usb, "disconnect")
  };
}

function createUSBTransport(options) {
  if (!options) options = defaultOptions();
  return options && new WebUSBTransport(options);
}
function createUSBBus(usbOptions, options) {
  return new JDBus([createUSBTransport(usbOptions)], options);
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/eventtargetobservable.ts
var eventtargetobservable = __webpack_require__(86748);
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/workertransport.ts










var WorkerTransport = /*#__PURE__*/function (_Transport) {
  (0,inheritsLoose/* default */.Z)(WorkerTransport, _Transport);

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  function WorkerTransport(type, worker, options) {
    var _this;

    _this = _Transport.call(this, type, options) || this;
    _this.pending = {};
    _this.type = type;
    _this.worker = worker;
    _this.options = options;

    _this.worker.addEventListener("message", _this.handleMessage.bind((0,assertThisInitialized/* default */.Z)(_this)));

    return _this;
  } // eslint-disable-next-line @typescript-eslint/no-explicit-any


  var _proto = WorkerTransport.prototype;

  _proto.postMessageAsync = function postMessageAsync(msg) {
    var id = msg.id = "" + Math.random();
    var p = new Promise((resolve, reject) => {
      this.worker.postMessage(msg);
      this.pending[id] = {
        resolve,
        reject
      };
    });
    return p;
  };

  _proto.handleMessage = function handleMessage(ev) {
    var data = ev.data;
    var {
      jacdac,
      type
    } = data || {};
    if (!jacdac) return; // not our message

    switch (type) {
      case "packet":
        {
          var {
            payload
          } = data; //debug(`wt: packet`, payload)

          this.handlePacket(payload);
          break;
        }

      case "frame":
        {
          var {
            payload: _payload
          } = data; //debug(`wt: frame`, payload)

          this.handleFrame(_payload);
          break;
        }

      case "connect":
      case "disconnect":
        {
          var {
            id: _id,
            error
          } = data;
          var {
            resolve,
            reject
          } = this.pending[_id] || {};

          if (resolve) {
            if (error) reject(error);else resolve(undefined);
          }

          break;
        }

      case "error":
        {
          var {
            error: _error,
            background,
            type: _type
          } = data;
          if (flags/* default.diagnostics */.Z.diagnostics) console.debug(data);
          if (!background) this.errorHandler(_type, _error);
          break;
        }
    }
  };

  _proto.transportSendPacketAsync = /*#__PURE__*/function () {
    var _transportSendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (p) {
      // don't wait
      var buf = p.toBuffer();
      this.worker.postMessage({
        jacdac: true,
        type: "packet",
        payload: buf
      });
    });

    function transportSendPacketAsync(_x) {
      return _transportSendPacketAsync.apply(this, arguments);
    }

    return transportSendPacketAsync;
  }();

  _proto.transportConnectAsync = /*#__PURE__*/function () {
    var _transportConnectAsync = (0,asyncToGenerator/* default */.Z)(function* (background) {
      var deviceId;

      if (!background) {
        // request permission first
        deviceId = yield this.options.requestDevice();
      } // try connect


      yield this.postMessageAsync({
        jacdac: true,
        type: "connect",
        deviceId,
        background
      });
    });

    function transportConnectAsync(_x2) {
      return _transportConnectAsync.apply(this, arguments);
    }

    return transportConnectAsync;
  }();

  _proto.transportDisconnectAsync = function transportDisconnectAsync(background) {
    return this.postMessageAsync({
      jacdac: true,
      type: "disconnect",
      background
    });
  };

  return WorkerTransport;
}(transport_transport/* Transport */.J7);

function createUSBWorkerTransport(worker) {
  return isWebUSBEnabled() && new WorkerTransport(constants/* USB_TRANSPORT */.W3h, worker, {
    checkPulse: true,
    requestDevice: () => usbRequestDevice(USB_FILTERS).then(dev => dev === null || dev === void 0 ? void 0 : dev.serialNumber),
    connectObservable: new eventtargetobservable/* default */.Z(navigator.usb, "connect"),
    disconnectObservable: new eventtargetobservable/* default */.Z(navigator.usb, "disconnect")
  });
}
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/websockettransport.ts




/**
 * Transport creation options for web sockets
 * @category Transport
 */

/**
 * Indicates if web sockets are supported by this platform
 * @returns
 */
function isWebSocketTransportSupported() {
  return typeof WebSocket !== "undefined";
}

var WebSocketTransport = /*#__PURE__*/function (_Transport) {
  (0,inheritsLoose/* default */.Z)(WebSocketTransport, _Transport);

  function WebSocketTransport(url, options) {
    var _this;

    _this = _Transport.call(this, constants/* WEBSOCKET_TRANSPORT */.uJd, options) || this;
    _this.url = url;
    _this.protocols = options === null || options === void 0 ? void 0 : options.protocols;
    return _this;
  }

  var _proto = WebSocketTransport.prototype;

  _proto.transportConnectAsync = function transportConnectAsync(background) {
    return new Promise(resolve => {
      this.ws = new WebSocket(this.url, this.protocols);
      this.ws.binaryType = "arraybuffer";

      this.ws.onopen = () => resolve();

      this.ws.onerror = () => this.disconnect(background);

      this.ws.onclose = () => this.disconnect(background);

      this.ws.onmessage = ev => {
        var {
          data
        } = ev;
        var buffer = new Uint8Array(data);
        this.handlePacket(buffer);
      };
    });
  };

  _proto.transportSendPacketAsync = function transportSendPacketAsync(p) {
    var _this$ws;

    if (((_this$ws = this.ws) === null || _this$ws === void 0 ? void 0 : _this$ws.readyState) !== this.ws.OPEN) throw new jdom_error/* default */.ZP("Trying to send message on closed transport", constants/* TRANSPORT_CLOSED_ERROR_CODE */.KCF);
    var data = p.toBuffer();
    this.ws.send(data);
    return Promise.resolve();
  };

  _proto.transportDisconnectAsync = function transportDisconnectAsync(background) {
    try {
      var _this$ws2;

      (_this$ws2 = this.ws) === null || _this$ws2 === void 0 ? void 0 : _this$ws2.close();
      this.ws = undefined;
    } catch (e) {
      if (!background) throw e;
    }

    return Promise.resolve();
  };

  _proto.toString = function toString() {
    var _this$ws3;

    return "websocket transport (state: " + ((_this$ws3 = this.ws) === null || _this$ws3 === void 0 ? void 0 : _this$ws3.readyState) + ")";
  };

  return WebSocketTransport;
}(transport_transport/* default */.ZP);
/**
 * Creates a transport over a web socket connection
 * @category transport
 */


function createWebSocketTransport(url, options) {
  return new WebSocketTransport(url, options);
}
;// CONCATENATED MODULE: ./jacdac-ts/src/jdom/transport/bluetooth.ts








var JD_BLE_FIRST_CHUNK_FLAG = 0x80; // eslint-disable-next-line @typescript-eslint/no-empty-interface

/**
 * Indicates with Web Bluetooth transport are enabled
 * @category Transport
 */
function isWebBluetoothEnabled() {
  return !!Flags.webBluetooth;
}
/**
 * Indicates with Web Bluetooth is supported in this environment
 * @category Transport
 */

function isWebBluetoothSupported() {
  try {
    return typeof navigator !== "undefined" && !!navigator.bluetooth && !!navigator.bluetooth.requestDevice;
  } catch (e) {
    return false;
  }
}

function bleRequestDevice(options) {
  // disabled
  if (!flags/* default.webBluetooth */.Z.webBluetooth) return Promise.resolve(undefined);

  try {
    var _navigator, _navigator$bluetooth, _navigator$bluetooth$;

    console.debug("bluetooth request", {
      options
    });
    return (_navigator = navigator) === null || _navigator === void 0 ? void 0 : (_navigator$bluetooth = _navigator.bluetooth) === null || _navigator$bluetooth === void 0 ? void 0 : (_navigator$bluetooth$ = _navigator$bluetooth.requestDevice) === null || _navigator$bluetooth$ === void 0 ? void 0 : _navigator$bluetooth$.call(_navigator$bluetooth, options);
  } catch (e) {
    if (flags/* default.diagnostics */.Z.diagnostics) console.warn(e);
    return undefined;
  }
}

function bleGetDevices() {
  // disabled
  if (!flags/* default.webBluetooth */.Z.webBluetooth) return Promise.resolve([]);

  try {
    var _navigator2, _navigator2$bluetooth;

    return ((_navigator2 = navigator) === null || _navigator2 === void 0 ? void 0 : (_navigator2$bluetooth = _navigator2.bluetooth) === null || _navigator2$bluetooth === void 0 ? void 0 : _navigator2$bluetooth.getDevices()) || Promise.resolve([]);
  } catch (e) {
    if (flags/* default.diagnostics */.Z.diagnostics) console.warn(e);
    return Promise.resolve([]);
  }
}

var BluetoothTransport = /*#__PURE__*/function (_Transport) {
  (0,inheritsLoose/* default */.Z)(BluetoothTransport, _Transport);

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  function BluetoothTransport(options) {
    var _this;

    _this = _Transport.call(this, constants/* BLUETOOTH_TRANSPORT */.HZx, {
      checkPulse: true
    }) || this;
    _this.handleDisconnected = _this.handleDisconnected.bind((0,assertThisInitialized/* default */.Z)(_this));
    _this.handleCharacteristicChanged = _this.handleCharacteristicChanged.bind((0,assertThisInitialized/* default */.Z)(_this));
    return _this;
  }

  var _proto = BluetoothTransport.prototype;

  _proto.transportConnectAsync = /*#__PURE__*/function () {
    var _transportConnectAsync = (0,asyncToGenerator/* default */.Z)(function* (background) {
      var _this$_device;

      // get a device
      if (background) {
        var devices = yield bleGetDevices();
        this._device = devices === null || devices === void 0 ? void 0 : devices[0];
      } else {
        var device = yield bleRequestDevice({
          filters: [{
            namePrefix: "BBC micro:bit"
          }],
          optionalServices: [constants/* BLUETOOTH_JACDAC_SERVICE */.A0q]
        });
        this._device = device;
      }

      if (!((_this$_device = this._device) !== null && _this$_device !== void 0 && _this$_device.gatt)) throw new Error("Device not found"); // listen for disconnection

      this._device.addEventListener("gattserverdisconnected", this.handleDisconnected, false); // connect to gatt


      this._server = yield this._device.gatt.connect(); // connect to service

      this._service = yield this._server.getPrimaryService(constants/* BLUETOOTH_JACDAC_SERVICE */.A0q); // connect to characteristic

      this._rxCharacteristic = yield this._service.getCharacteristic(constants/* BLUETOOTH_JACDAC_RX_CHARACTERISTIC */.uLq);
      this._txCharacteristic = yield this._service.getCharacteristic(constants/* BLUETOOTH_JACDAC_TX_CHARACTERISTIC */.c5n); // listen for incoming packet

      this._rxCharacteristic.addEventListener("characteristicvaluechanged", this.handleCharacteristicChanged, false); // start listening


      yield this._rxCharacteristic.startNotifications();
    });

    function transportConnectAsync(_x) {
      return _transportConnectAsync.apply(this, arguments);
    }

    return transportConnectAsync;
  }();

  _proto.transportSendPacketAsync = /*#__PURE__*/function () {
    var _transportSendPacketAsync = (0,asyncToGenerator/* default */.Z)(function* (p) {
      if (!this._txCharacteristic) {
        console.debug("trying to send Bluetooth packet while disconnected");
        return;
      }

      var data = p.toBuffer();
      var length = data.length;
      var totalChunks = Math.ceil(data.length / 18);
      var remainingChunks = totalChunks == 0 ? 0 : totalChunks - 1;
      var sent = 0;

      while (sent < length) {
        var n = Math.min(18, length - sent);
        var chunk = data.slice(sent, sent + n);
        var header = new Uint8Array(2);
        header[0] = totalChunks & 0x7f;
        if (sent == 0) header[0] |= JD_BLE_FIRST_CHUNK_FLAG;
        header[1] = remainingChunks;

        this._txCharacteristic.writeValueWithoutResponse((0,utils/* bufferConcat */.gX)(header, chunk));

        sent += n;
        remainingChunks = remainingChunks == 0 ? 0 : remainingChunks - 1;
        console.debug("chunk: " + chunk.toString() + " [" + remainingChunks + " chunks remaining]");
      }
    });

    function transportSendPacketAsync(_x2) {
      return _transportSendPacketAsync.apply(this, arguments);
    }

    return transportSendPacketAsync;
  }();

  _proto.transportDisconnectAsync = /*#__PURE__*/function () {
    var _transportDisconnectAsync = (0,asyncToGenerator/* default */.Z)(function* () {
      if (!this._device) return;
      console.debug("ble: disconnecting");

      try {
        var _this$_rxCharacterist, _this$_device2;

        (_this$_rxCharacterist = this._rxCharacteristic) === null || _this$_rxCharacterist === void 0 ? void 0 : _this$_rxCharacterist.removeEventListener("characteristicvaluechanged", this.handleCharacteristicChanged);
        (_this$_device2 = this._device) === null || _this$_device2 === void 0 ? void 0 : _this$_device2.removeEventListener("gattserverdisconnected", this.handleDisconnected);

        this._server.disconnect();
      } finally {
        this._rxCharacteristic = undefined;
        this._txCharacteristic = undefined;
        this._service = undefined;
        this._server = undefined;
        this._device = undefined;
        this._rxBuffer = undefined;
      }
    });

    function transportDisconnectAsync() {
      return _transportDisconnectAsync.apply(this, arguments);
    }

    return transportDisconnectAsync;
  }();

  _proto.handleDisconnected = function handleDisconnected() {
    // start disconnecting
    this.disconnect();
  };

  _proto.handleCharacteristicChanged = function handleCharacteristicChanged() {
    var data = new Uint8Array(this._rxCharacteristic.value.buffer);
    var packetData = data.slice(2);
    console.debug("received length " + data.length);

    if (data[0] & JD_BLE_FIRST_CHUNK_FLAG) {
      if (this._rxBuffer) console.error("Dropped buffer. Chunks remaining: " + this._rxChunkCounter);
      this._rxBuffer = new Uint8Array();
      this._rxChunkCounter = data[0] & 0x7f;
      console.debug("Initial chunk counter: " + this._rxChunkCounter);
    }

    this._rxChunkCounter = this._rxChunkCounter == 0 ? 0 : this._rxChunkCounter - 1;
    console.debug("after modification chunk counter: " + this._rxChunkCounter);
    if (data[1] !== this._rxChunkCounter) console.error("Data out of order. Expected chunk: " + this._rxChunkCounter + " Got chunk: " + data[1]);else this._rxBuffer = (0,utils/* bufferConcat */.gX)(this._rxBuffer, packetData);

    if (this._rxChunkCounter == 0) {
      var pkt = packet/* default.fromBinary */.Z.fromBinary(this._rxBuffer, this.bus.timestamp);
      console.debug("processed packet " + pkt);
      pkt.sender = constants/* BLUETOOTH_TRANSPORT */.HZx;
      this.bus.processPacket(pkt);
      this._rxBuffer = undefined;
      this._rxChunkCounter = 0;
    }
  };

  return BluetoothTransport;
}(transport_transport/* default */.ZP);
/**
 * Creates a transport that uses Web Bluetooth
 * @category Transport
 */


function createBluetoothTransport(options) {
  return isWebBluetoothSupported() && new BluetoothTransport(options);
}
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/transport/webserial.ts + 1 modules
var webserial = __webpack_require__(74278);
// EXTERNAL MODULE: ./src/components/makecode/iframebridgeclient.ts
var iframebridgeclient = __webpack_require__(43380);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/client.ts
var client = __webpack_require__(47235);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/servers/serverserviceprovider.ts + 2 modules
var serverserviceprovider = __webpack_require__(55739);
// EXTERNAL MODULE: ./jacdac-ts/src/servers/joystickserver.ts
var joystickserver = __webpack_require__(26708);
;// CONCATENATED MODULE: ./jacdac-ts/src/servers/gamepadservermanager.ts







var GamepadHostManager = /*#__PURE__*/function (_JDClient) {
  (0,inheritsLoose/* default */.Z)(GamepadHostManager, _JDClient);

  GamepadHostManager.start = function start(bus) {
    if (typeof window !== "undefined" && window.navigator && window.navigator.getGamepads) {
      return new GamepadHostManager(bus);
    }

    return undefined;
  };

  function GamepadHostManager(bus) {
    var _this;

    _this = _JDClient.call(this) || this;
    _this.providers = [];
    _this.ticking = false;
    _this.bus = bus;
    _this.handleGamepadConnected = _this.handleGamepadConnected.bind((0,assertThisInitialized/* default */.Z)(_this));
    _this.handleGamepadDisconnected = _this.handleGamepadDisconnected.bind((0,assertThisInitialized/* default */.Z)(_this));

    _this.mount(_this.removeEventListener.bind((0,assertThisInitialized/* default */.Z)(_this)));

    _this.addEventListeners();

    return _this;
  }

  var _proto = GamepadHostManager.prototype;

  _proto.addEventListeners = function addEventListeners() {
    if (typeof window === "undefined") return;
    window.addEventListener("gamepadconnected", this.handleGamepadConnected, false);
    window.addEventListener("gamepaddisconnected", this.handleGamepadDisconnected, false);
  };

  _proto.removeEventListener = function removeEventListener() {
    if (typeof window === "undefined") return;
    window.removeEventListener("gamepadconnected", this.handleGamepadConnected);
    window.removeEventListener("gamepaddisconnected", this.handleGamepadDisconnected);
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars
  ;

  _proto.handleGamepadConnected = function handleGamepadConnected(event) {
    console.debug("gamepad connected");
    if (!this.ticking) this.tick();
  };

  _proto.handleGamepadDisconnected = function handleGamepadDisconnected(event) {
    console.debug("gamepad disconnected");
    var {
      gamepad
    } = event;
    var {
      index
    } = gamepad;
    var provider = this.providers[index];

    if (provider) {
      this.bus.removeServiceProvider(provider.deviceProvider);
      this.providers[index] = undefined;
    }

    if (!this.ticking) this.tick();
  };

  _proto.pollGamepads = function pollGamepads() {
    try {
      var r = navigator.getGamepads();
      return r;
    } catch (e) {
      return undefined;
    }
  };

  _proto.update = function update() {
    var gamepads = this.pollGamepads();
    var now = this.bus.timestamp;

    for (var i = 0; i < (gamepads === null || gamepads === void 0 ? void 0 : gamepads.length); ++i) {
      var gamepad = gamepads[i];
      if (!gamepad) continue; // allocated host if needed

      var host = this.providers[i];

      if (!host) {
        var service = new joystickserver/* default */.ZP({
          variant: constants/* JoystickVariant.Gamepad */.BUi.Gamepad,
          buttonsAvailable: joystickserver/* JOYSTICK_ARCADE_BUTTONS */.f8
        });
        var deviceHost = new serverserviceprovider/* default */.Z("gamepad", [service]);
        this.bus.addServiceProvider(deviceHost);
        this.providers[i] = host = {
          service,
          deviceProvider: deviceHost,
          timestamp: now
        };
      } // update state


      host.timestamp = now;
      host.service.update(gamepad);
    }
  };

  _proto.tick = function tick() {
    this.ticking = true;
    this.update();
    if (this.providers.some(h => h !== undefined)) window.requestAnimationFrame(() => this.tick());else this.ticking = false;
  };

  return GamepadHostManager;
}(client/* JDClient */.z);


// EXTERNAL MODULE: ./jacdac-ts/package.json
var jacdac_ts_package = __webpack_require__(73354);
// EXTERNAL MODULE: ./src/components/hooks/useAnalytics.ts + 88 modules
var useAnalytics = __webpack_require__(72513);
// EXTERNAL MODULE: ./jacdac-ts/src/jdom/iframeclient.ts
var iframeclient = __webpack_require__(9809);
;// CONCATENATED MODULE: ./src/jacdac/providerbus.ts


















function sniffQueryArguments() {
  var _window$location$hash;

  if (typeof window === "undefined" || typeof URLSearchParams === "undefined") return {
    diagnostic: false,
    webUSB: isWebUSBSupported(),
    webBluetooth: isWebBluetoothSupported()
  };

  var isMediaDevicesSupported = () => {
    return typeof navigator !== undefined && !!navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices && !!navigator.mediaDevices.getUserMedia;
  };

  var params = new URLSearchParams(window.location.search);
  var toolsMakecode = /\/tools\/makecode-/.test(window.location.href) || params.get("nestededitorsim") === "1";
  var toolsMakeEditorExtension = /\/tools\/makecode-editor-extension/.test(window.location.href);
  return {
    diagnostics: params.get("dbg") === "1",
    webUSB: isWebUSBSupported() && params.get("webusb") !== "0" && !toolsMakecode,
    webBluetooth: isWebBluetoothSupported() && params.get("webble") !== "0" && !toolsMakecode,
    webSerial: (0,webserial/* isWebSerialSupported */.es)() && params.get("webserial") !== "0" && !toolsMakecode,
    webSocket: params.get("ws") === "1" ? "ws://127.0.0.1:8080/" : params.get("ws"),
    peers: params.get("peers") === "1",
    parentOrigin: params.get("parentOrigin"),
    frameId: (_window$location$hash = window.location.hash) === null || _window$location$hash === void 0 ? void 0 : _window$location$hash.slice(1),
    widget: params.get("widget") === "1",
    trace: params.get("trace") === "1",
    localhost: params.get("localhost") === "1",
    passive: params.get("passive") === "1" || toolsMakeEditorExtension,
    gamepad: params.get("gamepad") === "1",
    hosted: params.get("hosted") === "1" || params.get("embed") === "1",
    storage: params.get("storage") === "0" ? false : true,
    bus: params.get("bus") === "0" ? false : true,
    webcam: isMediaDevicesSupported()
  };
}

var args = sniffQueryArguments();
flags/* default.diagnostics */.Z.diagnostics = args.diagnostics;
flags/* default.webUSB */.Z.webUSB = args.webUSB;
flags/* default.webBluetooth */.Z.webBluetooth = args.webBluetooth;
flags/* default.webSerial */.Z.webSerial = args.webSerial;
flags/* default.trace */.Z.trace = args.trace;
var UIFlags = function UIFlags() {}; // defeat react fast-refresh

UIFlags.widget = args.widget;
UIFlags.peers = args.peers;
UIFlags.localhost = args.localhost;
UIFlags.passive = args.passive;
UIFlags.storage = args.storage;
UIFlags.hosted = args.hosted;
UIFlags.gamepad = args.gamepad;
UIFlags.webcam = args.webcam;

function createBus() {
  var worker = typeof window !== "undefined" && new Worker((0,gatsby_browser_entry.withPrefix)("/jacdac-worker-" + jacdac_ts_package/* version */.i8 + ".js"));
  var b = new bus([flags/* default.webUSB */.Z.webUSB && worker && createUSBWorkerTransport(worker), flags/* default.webSerial */.Z.webSerial && (0,webserial/* createWebSerialTransport */.ZZ)(), flags/* default.webBluetooth */.Z.webBluetooth && createBluetoothTransport(), args.webSocket && createWebSocketTransport(args.webSocket)], {
    parentOrigin: args.parentOrigin,
    client: false,
    dashboard: true
  });
  b.passive = args.passive;
  b.minLoggerPriority = constants/* LoggerPriority.Log */.qit.Log; // parentOrigin: args.parentOrigin,
  //if (Flags.webUSB) b.setBackgroundFirmwareScans(true)

  if (UIFlags.gamepad) GamepadHostManager.start(b); // tslint:disable-next-line: no-unused-expression
  // always start bridge

  if (typeof window !== "undefined") {
    if ((0,iframeclient/* inIFrame */.H)()) new iframebridgeclient/* default */.ZP(b, args.frameId) // eslint-disable-next-line @typescript-eslint/no-explicit-any
    ;
    window.__jacdacBus = b;
  }

  var {
    trackEvent
  } = useAnalytics/* analytics */.co;

  if (trackEvent) {
    var createServicePayload = d => {
      var _b$deviceCatalog$spec, _d$source, _d$source$split$;

      var physical = d.isPhysical;
      var productId = physical ? d.productIdentifier : undefined;
      var firmware = physical ? d.firmwareVersion : undefined;
      var product = (_b$deviceCatalog$spec = b.deviceCatalog.specificationFromProductIdentifier(productId)) === null || _b$deviceCatalog$spec === void 0 ? void 0 : _b$deviceCatalog$spec.id;
      var services = {};

      for (var srv of d.services().filter(srv => !(0,jdom_spec/* isInfrastructure */.lz)(srv.specification))) {
        var {
          name
        } = srv;
        services[name] = (services[name] || 0) + 1;
      }

      return {
        deviceId: d.anonymizedDeviceId,
        source: (_d$source = d.source) === null || _d$source === void 0 ? void 0 : (_d$source$split$ = _d$source.split("-", 1)[0]) === null || _d$source$split$ === void 0 ? void 0 : _d$source$split$.toLowerCase(),
        physical,
        productId: productId === null || productId === void 0 ? void 0 : productId.toString(16),
        product,
        firmware,
        services: JSON.stringify(services),
        serviceClasses: JSON.stringify(d.serviceClasses.slice(1))
      };
    };

    var createDevicePayload = d => {
      var _b$deviceCatalog$spec2, _d$source2, _d$source2$split$;

      var physical = d.isPhysical;
      var productId = physical ? d.productIdentifier : undefined;
      var firmware = physical ? d.firmwareVersion : undefined;
      var product = (_b$deviceCatalog$spec2 = b.deviceCatalog.specificationFromProductIdentifier(productId)) === null || _b$deviceCatalog$spec2 === void 0 ? void 0 : _b$deviceCatalog$spec2.id;
      var uptime = d.uptime;
      var {
        restarts,
        announce
      } = d.stats.current;
      return {
        deviceId: d.anonymizedDeviceId,
        source: (_d$source2 = d.source) === null || _d$source2 === void 0 ? void 0 : (_d$source2$split$ = _d$source2.split("-", 1)[0]) === null || _d$source2$split$ === void 0 ? void 0 : _d$source2$split$.toLowerCase(),
        physical,
        productId: productId === null || productId === void 0 ? void 0 : productId.toString(16),
        product,
        firmware,
        uptime,
        restarts,
        announce
      };
    }; // track connections


    b.on(constants/* CONNECTION_STATE */.pzj, transport => transport.connectionState === transport_transport/* ConnectionState.Connected */.em.Connected || transport.connectionState === transport_transport/* ConnectionState.Disconnected */.em.Disconnected && trackEvent("jd.transport." + transport.connectionState, {
      type: transport.type,
      connectionState: transport.connectionState
    })); // track services on announce

    b.on(constants/* DEVICE_ANNOUNCE */.Hob, d => {
      trackEvent("jd.announce", createServicePayload(d)); // eslint-disable-next-line @typescript-eslint/no-explicit-any

      trackEvent("jd.stats", b.stats.current);
    }); // track uptime

    b.on(constants/* DEVICE_PACKET_ANNOUNCE */.Jgq, d => {
      if (!(d.stats.announce % 20)) trackEvent("jd.uptime", createDevicePayload(d));
    }); // track product id

    b.on(constants/* DEVICE_FIRMWARE_INFO */.EGX, d => {
      var info = d.firmwareInfo;
      if (info && d.isPhysical) trackEvent("jd.product", createServicePayload(d));
    }); // general stats

    b.on(constants/* DEVICE_CLEAN */.vl4, () => {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      trackEvent("jd.stats", b.stats.current);
    }); // track restarts

    b.on(constants/* DEVICE_RESTART */.eLF, /*#__PURE__*/function () {
      var _ref = (0,asyncToGenerator/* default */.Z)(function* (d) {
        if (d.isPhysical) {
          yield d.resolveProductIdentifier();
          trackEvent("jd.restart", createServicePayload(d));
        }
      });

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());
    if (!args.bus) b.stop();
  }

  return b;
}

function cachedBus() {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return typeof Window !== "undefined" && window.__jacdacBus;
}

var providerbus_bus = cachedBus() || createBus();
/* harmony default export */ var providerbus = (providerbus_bus);

/***/ }),

/***/ 56289:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useBus; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20392);


/**
 * Grabs the Jacdac singleton bus from the current Jacdac context.
 * Throws an error if bus is missing.
 */

function useBus() {
  var {
    bus
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_Context__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z);
  if (!bus) throw Error("Jacdac bus missing in context");
  return bus;
}

/***/ }),

/***/ 54774:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useChange; },
/* harmony export */   "R": function() { return /* binding */ useChangeAsync; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(15861);
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(15785);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81794);
/* harmony import */ var _components_useEffectAsync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7751);






function useChange(node, query, deps) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  (0,_jacdac_ts_src_jdom_utils__WEBPACK_IMPORTED_MODULE_2__/* .assert */ .hu)(node !== false);
  var {
    0: version,
    1: setVersion
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((node === null || node === void 0 ? void 0 : node.changeId) || 0);
  var value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => query ? query(node) : undefined, [node, version].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(deps || [])));
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setVersion((node === null || node === void 0 ? void 0 : node.changeId) || 0);
    return node === null || node === void 0 ? void 0 : node.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver, () => {
      //console.log(`change ${node} ${version}->${node.changeId}`)
      setVersion(node.changeId);
    });
  }, [node].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(deps || [])));
  return value;
}
function useChangeAsync(node, query, deps) {
  var {
    0: version,
    1: setVersion
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((node === null || node === void 0 ? void 0 : node.changeId) || 0);
  var {
    0: value,
    1: setValue
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setVersion((node === null || node === void 0 ? void 0 : node.changeId) || 0);
    node === null || node === void 0 ? void 0 : node.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .CHANGE */ .Ver, () => {
      setVersion(node.changeId);
    });
  }, [node]);
  (0,_components_useEffectAsync__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)( /*#__PURE__*/function () {
    var _ref = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(function* (mounted) {
      var valuePromise = query ? query(node) : undefined;

      if (!valuePromise) {
        if (mounted()) setValue(undefined);
      } else {
        var d = yield valuePromise;
        if (mounted()) setValue(d);
      }
    });

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), [node, version].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(deps || [])));
  return value;
}

/***/ }),

/***/ 34246:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ useDeviceSpecification; }
});

// EXTERNAL MODULE: ./jacdac-ts/jacdac-spec/dist/specconstants.ts
var specconstants = __webpack_require__(73512);
// EXTERNAL MODULE: ./src/components/hooks/useRegister.ts
var useRegister = __webpack_require__(82677);
// EXTERNAL MODULE: ./src/jacdac/useRegisterValue.ts
var useRegisterValue = __webpack_require__(89196);
;// CONCATENATED MODULE: ./src/jacdac/useDeviceProductIdentifier.ts



function useDeviceProductIdentifier(device) {
  var reg = (0,useRegister/* default */.Z)(device === null || device === void 0 ? void 0 : device.service(0), specconstants/* ControlReg.ProductIdentifier */.toU.ProductIdentifier);
  var [id] = (0,useRegisterValue/* useRegisterUnpackedValue */.Pf)(reg);
  return id;
}
// EXTERNAL MODULE: ./src/jacdac/useChange.ts
var useChange = __webpack_require__(54774);
// EXTERNAL MODULE: ./src/components/devices/useDeviceCatalog.ts
var useDeviceCatalog = __webpack_require__(97685);
;// CONCATENATED MODULE: ./src/jacdac/useDeviceSpecification.ts



function useDeviceSpecification(device) {
  var deviceCatalog = (0,useDeviceCatalog/* default */.Z)();
  var id = useDeviceProductIdentifier(device);
  var specification = (0,useChange/* default */.Z)(deviceCatalog, _ => _.specificationFromProductIdentifier(id), [id]);
  return specification;
}

/***/ }),

/***/ 28417:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ useEventRaised; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

function useEventRaised(eventName, node, query) {
  var {
    0: value,
    1: setValue
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query === null || query === void 0 ? void 0 : query(node));
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => node === null || node === void 0 ? void 0 : node.subscribe(eventName, () => setValue(query === null || query === void 0 ? void 0 : query(node))), [JSON.stringify(eventName), node]);
  return value;
}

/***/ }),

/***/ 89196:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "e_": function() { return /* binding */ useRegisterHumanValue; },
/* harmony export */   "Pf": function() { return /* binding */ useRegisterUnpackedValue; },
/* harmony export */   "I8": function() { return /* binding */ useRegisterBoolValue; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var _jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71815);
/* harmony import */ var _components_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72513);




function readRegisterValue(register, reader, defaultValue, trackError) {
  try {
    var value = reader(register);
    return value;
  } catch (e) {
    var _register$service, _register$service$dev, _register$service2;

    trackError(e, {
      dev: register === null || register === void 0 ? void 0 : (_register$service = register.service) === null || _register$service === void 0 ? void 0 : (_register$service$dev = _register$service.device) === null || _register$service$dev === void 0 ? void 0 : _register$service$dev.anonymizedDeviceId,
      srv: register === null || register === void 0 ? void 0 : (_register$service2 = register.service) === null || _register$service2 === void 0 ? void 0 : _register$service2.name,
      reg: register === null || register === void 0 ? void 0 : register.name
    });
    return defaultValue;
  }
}

function useRegisterHumanValue(register, options) {
  var {
    0: value,
    1: setValue
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(register === null || register === void 0 ? void 0 : register.humanValue);
  var {
    visible,
    maxLength
  } = options || {
    visible: true
  };
  var {
    trackError
  } = (0,_components_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP)(); // update value

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    var readValue = () => readRegisterValue(register, _ => {
      var _v;

      var v = _ === null || _ === void 0 ? void 0 : _.humanValue;
      if (((_v = v) === null || _v === void 0 ? void 0 : _v.length) > maxLength) v = v.slice(0, maxLength) + "...";
      return v;
    }, "???", trackError);

    setValue(readValue);
    return visible && (register === null || register === void 0 ? void 0 : register.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_UPDATE */ .rGZ, () => setValue(readValue)));
  }, [register, visible, maxLength]);
  return value;
}
function useRegisterUnpackedValue(register, options) {
  var {
    0: value,
    1: setValue
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(register === null || register === void 0 ? void 0 : register.unpackedValue);
  var {
    visible
  } = options || {
    visible: true
  };
  var {
    trackError
  } = (0,_components_hooks_useAnalytics__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    var readValue = () => readRegisterValue(register, _ => _ === null || _ === void 0 ? void 0 : _.unpackedValue, undefined, trackError);

    setValue(readValue);
    return visible && (register === null || register === void 0 ? void 0 : register.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_UPDATE */ .rGZ, () => {
      setValue(readValue);
    }));
  }, [register, visible]);
  return value || [];
}
function useRegisterBoolValue(register, options) {
  var {
    0: value,
    1: setValue
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(register === null || register === void 0 ? void 0 : register.boolValue);
  var {
    visible
  } = options || {
    visible: true
  }; // update value

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setValue(register === null || register === void 0 ? void 0 : register.boolValue);
    return visible && (register === null || register === void 0 ? void 0 : register.subscribe(_jacdac_ts_src_jdom_constants__WEBPACK_IMPORTED_MODULE_1__/* .REPORT_UPDATE */ .rGZ, () => {
      setValue(register === null || register === void 0 ? void 0 : register.boolValue);
    }));
  }, [register, visible]);
  return value;
}

/***/ }),

/***/ 13883:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "zx": function() { return /* reexport */ button_Button; },
  "MU": function() { return /* reexport */ card_action_area_CardActionArea; },
  "hU": function() { return /* reexport */ icon_button_IconButton; },
  "rU": function() { return /* reexport */ link_Link; }
});

// UNUSED EXPORTS: BottomNavigationAction, Fab, GatsbyLink, ListItemButton

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/material/Link/Link.js + 1 modules
var Link = __webpack_require__(36190);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(45987);
// EXTERNAL MODULE: ./.cache/gatsby-browser-entry.js
var gatsby_browser_entry = __webpack_require__(35313);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/glink.js


var _excluded = ["href", "children", "innerRef"],
    _excluded2 = ["to", "activeClassName", "partiallyActive"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




var ALink = _ref => {
  var {
    href,
    children,
    innerRef
  } = _ref,
      other = (0,objectWithoutProperties/* default */.Z)(_ref, _excluded);

  return /*#__PURE__*/react.createElement("a", _objectSpread({
    href: href,
    ref: innerRef
  }, other), children);
};

var GatsbyLink = /*#__PURE__*/react.forwardRef((props, ref) => {
  var {
    to,
    activeClassName,
    partiallyActive
  } = props,
      other = (0,objectWithoutProperties/* default */.Z)(props, _excluded2);

  var internal = /^\/(?!\/)/.test(to); // Use Gatsby Link for internal links, and <a> for others

  if (internal) {
    var file = /\.[0-9a-z]+$/i.test(to);

    if (file) {
      return /*#__PURE__*/react.createElement(ALink, _objectSpread({
        href: to,
        innerRef: ref
      }, other));
    }

    return /*#__PURE__*/react.createElement(gatsby_browser_entry.Link, _objectSpread({
      to: to,
      activeClassName: activeClassName,
      partiallyActive: partiallyActive,
      innerRef: ref
    }, other));
  }

  return /*#__PURE__*/react.createElement(ALink, _objectSpread({
    href: to,
    innerRef: ref
  }, other));
});
GatsbyLink.displayName = 'Link';
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/link.js


function link_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function link_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { link_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { link_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




var link_Link = /*#__PURE__*/react.forwardRef((props, ref) => {
  var {
    to
  } = props;
  return to ? /*#__PURE__*/react.createElement(Link/* default */.Z, link_objectSpread({
    ref: ref,
    component: GatsbyLink,
    to: to
  }, props)) : /*#__PURE__*/react.createElement(Link/* default */.Z, link_objectSpread({
    ref: ref
  }, props));
});
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(63366);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(87462);
// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js
var clsx_m = __webpack_require__(85505);
// EXTERNAL MODULE: ./node_modules/@mui/base/composeClasses/composeClasses.js
var composeClasses = __webpack_require__(49408);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js
var colorManipulator = __webpack_require__(67663);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules
var styled = __webpack_require__(98348);
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 1 modules
var useThemeProps = __webpack_require__(47761);
// EXTERNAL MODULE: ./node_modules/@mui/material/ButtonBase/ButtonBase.js + 6 modules
var ButtonBase = __webpack_require__(21919);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useEnhancedEffect.js
var useEnhancedEffect = __webpack_require__(94026);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/useForkRef.js
var useForkRef = __webpack_require__(65973);
// EXTERNAL MODULE: ./node_modules/@mui/material/List/ListContext.js
var ListContext = __webpack_require__(48267);
// EXTERNAL MODULE: ./node_modules/@mui/material/ListItemButton/listItemButtonClasses.js
var listItemButtonClasses = __webpack_require__(51594);
// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(85893);
;// CONCATENATED MODULE: ./node_modules/@mui/material/ListItemButton/ListItemButton.js


var ListItemButton_excluded = ["alignItems", "autoFocus", "component", "children", "dense", "disableGutters", "divider", "focusVisibleClassName", "selected"];












var overridesResolver = (props, styles) => {
  var {
    ownerState
  } = props;
  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];
};

var useUtilityClasses = ownerState => {
  var {
    alignItems,
    classes,
    dense,
    disabled,
    disableGutters,
    divider,
    selected
  } = ownerState;
  var slots = {
    root: ['root', dense && 'dense', !disableGutters && 'gutters', divider && 'divider', disabled && 'disabled', alignItems === 'flex-start' && 'alignItemsFlexStart', selected && 'selected']
  };
  var composedClasses = (0,composeClasses/* default */.Z)(slots, listItemButtonClasses/* getListItemButtonUtilityClass */.t, classes);
  return (0,esm_extends/* default */.Z)({}, classes, composedClasses);
};

var ListItemButtonRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  shouldForwardProp: prop => (0,styled/* rootShouldForwardProp */.FO)(prop) || prop === 'classes',
  name: 'MuiListItemButton',
  slot: 'Root',
  overridesResolver
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    display: 'flex',
    flexGrow: 1,
    justifyContent: 'flex-start',
    alignItems: 'center',
    position: 'relative',
    textDecoration: 'none',
    boxSizing: 'border-box',
    textAlign: 'left',
    paddingTop: 8,
    paddingBottom: 8,
    transition: theme.transitions.create('background-color', {
      duration: theme.transitions.duration.shortest
    }),
    '&:hover': {
      textDecoration: 'none',
      backgroundColor: theme.palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: 'transparent'
      }
    },
    ["&.".concat(listItemButtonClasses/* default.selected */.Z.selected)]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity),
      ["&.".concat(listItemButtonClasses/* default.focusVisible */.Z.focusVisible)]: {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
      }
    },
    ["&.".concat(listItemButtonClasses/* default.selected */.Z.selected, ":hover")]: {
      backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: (0,colorManipulator/* alpha */.Fq)(theme.palette.primary.main, theme.palette.action.selectedOpacity)
      }
    },
    ["&.".concat(listItemButtonClasses/* default.focusVisible */.Z.focusVisible)]: {
      backgroundColor: theme.palette.action.focus
    },
    ["&.".concat(listItemButtonClasses/* default.disabled */.Z.disabled)]: {
      opacity: theme.palette.action.disabledOpacity
    }
  }, ownerState.divider && {
    borderBottom: "1px solid ".concat(theme.palette.divider),
    backgroundClip: 'padding-box'
  }, ownerState.alignItems === 'flex-start' && {
    alignItems: 'flex-start'
  }, !ownerState.disableGutters && {
    paddingLeft: 16,
    paddingRight: 16
  }, ownerState.dense && {
    paddingTop: 4,
    paddingBottom: 4
  });
});
var ListItemButton = /*#__PURE__*/react.forwardRef(function ListItemButton(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiListItemButton'
  });

  var {
    alignItems = 'center',
    autoFocus = false,
    component = 'div',
    children,
    dense = false,
    disableGutters = false,
    divider = false,
    focusVisibleClassName,
    selected = false
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, ListItemButton_excluded);

  var context = react.useContext(ListContext/* default */.Z);
  var childContext = {
    dense: dense || context.dense || false,
    alignItems,
    disableGutters
  };
  var listItemRef = react.useRef(null);
  (0,useEnhancedEffect/* default */.Z)(() => {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (false) {}
    }
  }, [autoFocus]);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    alignItems,
    dense: childContext.dense,
    disableGutters,
    divider,
    selected
  });

  var classes = useUtilityClasses(ownerState);
  var handleRef = (0,useForkRef/* default */.Z)(listItemRef, ref);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(ListContext/* default.Provider */.Z.Provider, {
    value: childContext,
    children: /*#__PURE__*/(0,jsx_runtime.jsx)(ListItemButtonRoot, (0,esm_extends/* default */.Z)({
      ref: handleRef,
      component: component,
      focusVisibleClassName: (0,clsx_m["default"])(classes.focusVisible, focusVisibleClassName),
      ownerState: ownerState
    }, other, {
      classes: classes,
      children: children
    }))
  });
});
 false ? 0 : void 0;
/* harmony default export */ var ListItemButton_ListItemButton = (ListItemButton);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/patch-base-button-components.js


var patch_base_button_components_excluded = ["to"];

function patch_base_button_components_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function patch_base_button_components_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { patch_base_button_components_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { patch_base_button_components_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



function patchButtonBaseComponent(BaseButtonComponent) {
  return /*#__PURE__*/react.forwardRef((props, ref) => {
    var {
      to
    } = props,
        buttonProps = (0,objectWithoutProperties/* default */.Z)(props, patch_base_button_components_excluded);

    var component = to ? GatsbyLink : undefined;
    return /*#__PURE__*/react.createElement(BaseButtonComponent, patch_base_button_components_objectSpread({
      component: component,
      ref: ref,
      to: to
    }, buttonProps));
  });
}
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/list-item-button.js


var list_item_button_ListItemButton = patchButtonBaseComponent(ListItemButton_ListItemButton);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClass/generateUtilityClass.js
var generateUtilityClass = __webpack_require__(48416);
// EXTERNAL MODULE: ./node_modules/@mui/base/generateUtilityClasses/generateUtilityClasses.js
var generateUtilityClasses = __webpack_require__(62194);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js

function getCardActionAreaUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiCardActionArea', slot);
}
var cardActionAreaClasses = (0,generateUtilityClasses/* default */.Z)('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);
/* harmony default export */ var CardActionArea_cardActionAreaClasses = (cardActionAreaClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/CardActionArea/CardActionArea.js


var CardActionArea_excluded = ["children", "className", "focusVisibleClassName"];










var CardActionArea_useUtilityClasses = ownerState => {
  var {
    classes
  } = ownerState;
  var slots = {
    root: ['root'],
    focusHighlight: ['focusHighlight']
  };
  return (0,composeClasses/* default */.Z)(slots, getCardActionAreaUtilityClass, classes);
};

var CardActionAreaRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  name: 'MuiCardActionArea',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})(_ref => {
  var {
    theme
  } = _ref;
  return {
    display: 'block',
    textAlign: 'inherit',
    width: '100%',
    ["&:hover .".concat(CardActionArea_cardActionAreaClasses.focusHighlight)]: {
      opacity: theme.palette.action.hoverOpacity,
      '@media (hover: none)': {
        opacity: 0
      }
    },
    ["&.".concat(CardActionArea_cardActionAreaClasses.focusVisible, " .").concat(CardActionArea_cardActionAreaClasses.focusHighlight)]: {
      opacity: theme.palette.action.focusOpacity
    }
  };
});
var CardActionAreaFocusHighlight = (0,styled/* default */.ZP)('span', {
  name: 'MuiCardActionArea',
  slot: 'FocusHighlight',
  overridesResolver: (props, styles) => styles.focusHighlight
})(_ref2 => {
  var {
    theme
  } = _ref2;
  return {
    overflow: 'hidden',
    pointerEvents: 'none',
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderRadius: 'inherit',
    opacity: 0,
    backgroundColor: 'currentcolor',
    transition: theme.transitions.create('opacity', {
      duration: theme.transitions.duration.short
    })
  };
});
var CardActionArea = /*#__PURE__*/react.forwardRef(function CardActionArea(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiCardActionArea'
  });

  var {
    children,
    className,
    focusVisibleClassName
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, CardActionArea_excluded);

  var ownerState = props;
  var classes = CardActionArea_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsxs)(CardActionAreaRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    focusVisibleClassName: (0,clsx_m["default"])(focusVisibleClassName, classes.focusVisible),
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: [children, /*#__PURE__*/(0,jsx_runtime.jsx)(CardActionAreaFocusHighlight, {
      className: classes.focusHighlight,
      ownerState: ownerState
    })]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var CardActionArea_CardActionArea = (CardActionArea);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/card-action-area.js


var card_action_area_CardActionArea = patchButtonBaseComponent(CardActionArea_CardActionArea);
// EXTERNAL MODULE: ./node_modules/@mui/material/Button/Button.js + 2 modules
var Button = __webpack_require__(76968);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/button.js


var button_Button = patchButtonBaseComponent(Button/* default */.Z);
// EXTERNAL MODULE: ./node_modules/@mui/material/IconButton/IconButton.js + 1 modules
var IconButton = __webpack_require__(90581);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/icon-button.js


var icon_button_IconButton = patchButtonBaseComponent(IconButton/* default */.Z);
// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js
var capitalize = __webpack_require__(49240);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Fab/fabClasses.js

function getFabUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiFab', slot);
}
var fabClasses = (0,generateUtilityClasses/* default */.Z)('MuiFab', ['root', 'primary', 'secondary', 'extended', 'circular', 'focusVisible', 'disabled', 'colorInherit', 'sizeSmall', 'sizeMedium', 'sizeLarge']);
/* harmony default export */ var Fab_fabClasses = (fabClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/Fab/Fab.js


var Fab_excluded = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"];










var Fab_useUtilityClasses = ownerState => {
  var {
    color,
    variant,
    classes,
    size
  } = ownerState;
  var slots = {
    root: ['root', variant, "size".concat((0,capitalize/* default */.Z)(size)), color === 'inherit' && 'colorInherit', color === 'primary' && 'primary', color === 'secondary' && 'secondary']
  };
  return (0,composeClasses/* default */.Z)(slots, getFabUtilityClass, classes);
};

var FabRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  name: 'MuiFab',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], styles["size".concat((0,capitalize/* default */.Z)(ownerState.size))], ownerState.color === 'inherit' && styles.colorInherit, ownerState.color === 'primary' && styles.primary, ownerState.color === 'secondary' && styles.secondary];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({}, theme.typography.button, {
    minHeight: 36,
    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {
      duration: theme.transitions.duration.short
    }),
    borderRadius: '50%',
    padding: 0,
    minWidth: 0,
    width: 56,
    height: 56,
    boxShadow: theme.shadows[6],
    '&:active': {
      boxShadow: theme.shadows[12]
    },
    color: theme.palette.getContrastText(theme.palette.grey[300]),
    backgroundColor: theme.palette.grey[300],
    '&:hover': {
      backgroundColor: theme.palette.grey.A100,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: theme.palette.grey[300]
      },
      textDecoration: 'none'
    },
    ["&.".concat(Fab_fabClasses.focusVisible)]: {
      boxShadow: theme.shadows[6]
    },
    ["&.".concat(Fab_fabClasses.disabled)]: {
      color: theme.palette.action.disabled,
      boxShadow: theme.shadows[0],
      backgroundColor: theme.palette.action.disabledBackground
    }
  }, ownerState.size === 'small' && {
    width: 40,
    height: 40
  }, ownerState.size === 'medium' && {
    width: 48,
    height: 48
  }, ownerState.variant === 'extended' && {
    borderRadius: 48 / 2,
    padding: '0 16px',
    width: 'auto',
    minHeight: 'auto',
    minWidth: 48,
    height: 48
  }, ownerState.variant === 'extended' && ownerState.size === 'small' && {
    width: 'auto',
    padding: '0 8px',
    borderRadius: 34 / 2,
    minWidth: 34,
    height: 34
  }, ownerState.variant === 'extended' && ownerState.size === 'medium' && {
    width: 'auto',
    padding: '0 16px',
    borderRadius: 40 / 2,
    minWidth: 40,
    height: 40
  }, ownerState.color === 'inherit' && {
    color: 'inherit'
  });
}, _ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({}, ownerState.color === 'primary' && {
    color: theme.palette.primary.contrastText,
    backgroundColor: theme.palette.primary.main,
    '&:hover': {
      backgroundColor: theme.palette.primary.dark,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: theme.palette.primary.main
      }
    }
  }, ownerState.color === 'secondary' && {
    color: theme.palette.secondary.contrastText,
    backgroundColor: theme.palette.secondary.main,
    '&:hover': {
      backgroundColor: theme.palette.secondary.dark,
      // Reset on touch devices, it doesn't add specificity
      '@media (hover: none)': {
        backgroundColor: theme.palette.secondary.main
      }
    }
  });
});
var Fab = /*#__PURE__*/react.forwardRef(function Fab(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiFab'
  });

  var {
    children,
    className,
    color = 'default',
    component = 'button',
    disabled = false,
    disableFocusRipple = false,
    focusVisibleClassName,
    size = 'large',
    variant = 'circular'
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Fab_excluded);

  var ownerState = (0,esm_extends/* default */.Z)({}, props, {
    color,
    component,
    disabled,
    disableFocusRipple,
    size,
    variant
  });

  var classes = Fab_useUtilityClasses(ownerState);
  return /*#__PURE__*/(0,jsx_runtime.jsx)(FabRoot, (0,esm_extends/* default */.Z)({
    className: (0,clsx_m["default"])(classes.root, className),
    component: component,
    disabled: disabled,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: (0,clsx_m["default"])(classes.focusVisible, focusVisibleClassName),
    ownerState: ownerState,
    ref: ref
  }, other, {
    children: children
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var Fab_Fab = (Fab);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/fab.js


var fab_Fab = patchButtonBaseComponent(Fab_Fab);
;// CONCATENATED MODULE: ./node_modules/@mui/material/BottomNavigationAction/bottomNavigationActionClasses.js

function getBottomNavigationActionUtilityClass(slot) {
  return (0,generateUtilityClass/* default */.Z)('MuiBottomNavigationAction', slot);
}
var bottomNavigationActionClasses = (0,generateUtilityClasses/* default */.Z)('MuiBottomNavigationAction', ['root', 'iconOnly', 'selected', 'label']);
/* harmony default export */ var BottomNavigationAction_bottomNavigationActionClasses = (bottomNavigationActionClasses);
;// CONCATENATED MODULE: ./node_modules/@mui/material/BottomNavigationAction/BottomNavigationAction.js


var BottomNavigationAction_excluded = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"];











var BottomNavigationAction_useUtilityClasses = ownerState => {
  var {
    classes,
    showLabel,
    selected
  } = ownerState;
  var slots = {
    root: ['root', !showLabel && !selected && 'iconOnly', selected && 'selected'],
    label: ['label', !showLabel && !selected && 'iconOnly', selected && 'selected']
  };
  return (0,composeClasses/* default */.Z)(slots, getBottomNavigationActionUtilityClass, classes);
};

var BottomNavigationActionRoot = (0,styled/* default */.ZP)(ButtonBase/* default */.Z, {
  name: 'MuiBottomNavigationAction',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    var {
      ownerState
    } = props;
    return [styles.root, !ownerState.showLabel && !ownerState.selected && styles.iconOnly];
  }
})(_ref => {
  var {
    theme,
    ownerState
  } = _ref;
  return (0,esm_extends/* default */.Z)({
    transition: theme.transitions.create(['color', 'padding-top'], {
      duration: theme.transitions.duration.short
    }),
    padding: '6px 12px 8px',
    minWidth: 80,
    maxWidth: 168,
    color: theme.palette.text.secondary,
    flexDirection: 'column',
    flex: '1'
  }, !ownerState.showLabel && !ownerState.selected && {
    paddingTop: 16
  }, {
    ["&.".concat(BottomNavigationAction_bottomNavigationActionClasses.selected)]: {
      paddingTop: 6,
      color: theme.palette.primary.main
    }
  });
});
var BottomNavigationActionLabel = (0,styled/* default */.ZP)('span', {
  name: 'MuiBottomNavigationAction',
  slot: 'Label',
  overridesResolver: (props, styles) => styles.label
})(_ref2 => {
  var {
    theme,
    ownerState
  } = _ref2;
  return (0,esm_extends/* default */.Z)({
    fontFamily: theme.typography.fontFamily,
    fontSize: theme.typography.pxToRem(12),
    opacity: 1,
    transition: 'font-size 0.2s, opacity 0.2s',
    transitionDelay: '0.1s'
  }, !ownerState.showLabel && !ownerState.selected && {
    opacity: 0,
    transitionDelay: '0s'
  }, {
    ["&.".concat(BottomNavigationAction_bottomNavigationActionClasses.selected)]: {
      fontSize: theme.typography.pxToRem(14)
    }
  });
});
var BottomNavigationAction = /*#__PURE__*/react.forwardRef(function BottomNavigationAction(inProps, ref) {
  var props = (0,useThemeProps/* default */.Z)({
    props: inProps,
    name: 'MuiBottomNavigationAction'
  });

  var {
    className,
    icon,
    label,
    onChange,
    onClick,
    value
  } = props,
      other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, BottomNavigationAction_excluded);

  var ownerState = props;
  var classes = BottomNavigationAction_useUtilityClasses(ownerState);

  var handleChange = event => {
    if (onChange) {
      onChange(event, value);
    }

    if (onClick) {
      onClick(event);
    }
  };

  return /*#__PURE__*/(0,jsx_runtime.jsxs)(BottomNavigationActionRoot, (0,esm_extends/* default */.Z)({
    ref: ref,
    className: (0,clsx_m["default"])(classes.root, className),
    focusRipple: true,
    onClick: handleChange,
    ownerState: ownerState
  }, other, {
    children: [icon, /*#__PURE__*/(0,jsx_runtime.jsx)(BottomNavigationActionLabel, {
      className: classes.label,
      ownerState: ownerState,
      children: label
    })]
  }));
});
 false ? 0 : void 0;
/* harmony default export */ var BottomNavigationAction_BottomNavigationAction = (BottomNavigationAction);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/bottom-navigation-action.js


var bottom_navigation_action_BottomNavigationAction = patchButtonBaseComponent(BottomNavigationAction_BottomNavigationAction);
;// CONCATENATED MODULE: ./node_modules/gatsby-material-ui-components/lib/index.js










/***/ }),

/***/ 59564:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(95318);

exports.__esModule = true;
exports["default"] = _default;
exports.routeThroughBrowserOrApp = exports.hashShouldBeFollowed = exports.pathIsNotHandledByApp = exports.urlsAreOnSameOrigin = exports.authorIsForcingNavigation = exports.anchorsTargetIsEquivalentToSelf = exports.findClosestAnchor = exports.navigationWasHandledElsewhere = exports.slashedPathname = exports.userIsForcingNavigation = void 0;

var _escapeStringRegexp = _interopRequireDefault(__webpack_require__(44564));

var _gatsby = __webpack_require__(35313);

var userIsForcingNavigation = function userIsForcingNavigation(event) {
  return event.button !== 0 || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;
}; // IE does not include leading slash in anchor.pathname


exports.userIsForcingNavigation = userIsForcingNavigation;

var slashedPathname = function slashedPathname(pathname) {
  return pathname[0] === "/" ? pathname : "/" + pathname;
};

exports.slashedPathname = slashedPathname;

var navigationWasHandledElsewhere = function navigationWasHandledElsewhere(event) {
  return event.defaultPrevented;
};

exports.navigationWasHandledElsewhere = navigationWasHandledElsewhere;

var findClosestAnchor = function findClosestAnchor(node) {
  for (; node.parentNode; node = node.parentNode) {
    if (node.nodeName.toLowerCase() === "a") {
      return node;
    }
  }

  return null;
};

exports.findClosestAnchor = findClosestAnchor;

var anchorsTargetIsEquivalentToSelf = function anchorsTargetIsEquivalentToSelf(anchor) {
  return (
    /* If target attribute is not present it's treated as _self */
    anchor.hasAttribute("target") === false ||
    /**
     * The browser defaults to _self, but, not all browsers set
     * a.target to the string value `_self` by default
     */

    /**
     * Assumption: some browsers use null/undefined for default
     * attribute values
     */
    anchor.target == null ||
    /**
     * Some browsers use the empty string to mean _self, check
     * for actual `_self`
     */
    ["_self", ""].includes(anchor.target) || anchor.target === "_parent" && (!anchor.ownerDocument.defaultView.parent || // Assumption: This can be falsey
    anchor.ownerDocument.defaultView.parent === anchor.ownerDocument.defaultView) || anchor.target === "_top" && (!anchor.ownerDocument.defaultView.top || // Assumption: This can be falsey
    anchor.ownerDocument.defaultView.top === anchor.ownerDocument.defaultView)
  );
};

exports.anchorsTargetIsEquivalentToSelf = anchorsTargetIsEquivalentToSelf;

var authorIsForcingNavigation = function authorIsForcingNavigation(anchor) {
  return (
    /**
     * HTML5 attribute that informs the browser to handle the
     * href as a downloadable file; let the browser handle it
     */
    anchor.hasAttribute("download") === true ||
    /**
     * Let the browser handle anything that doesn't look like a
     * target="_self" anchor
     */
    anchorsTargetIsEquivalentToSelf(anchor) === false
  );
}; // https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy


exports.authorIsForcingNavigation = authorIsForcingNavigation;

var urlsAreOnSameOrigin = function urlsAreOnSameOrigin(origin, destination) {
  return origin.protocol === destination.protocol &&
  /* a.host includes both hostname and port in the expected format host:port */
  origin.host === destination.host;
};

exports.urlsAreOnSameOrigin = urlsAreOnSameOrigin;

var pathIsNotHandledByApp = function pathIsNotHandledByApp(destination, pathStartRegEx) {
  var pathFileExtensionRegEx = /^.*\.((?!htm)[a-z0-9]{1,5})$/i;
  return (
    /**
     * For when pathPrefix is used in an app and there happens to be a link
     * pointing to the same domain but outside of the app's pathPrefix. For
     * example, a Gatsby app lives at https://example.com/myapp/, with the
     * pathPrefix set to `/myapp`. When adding an absolute link to the same
     * domain but outside of the /myapp path, for example, `<a
     * href="https://example.com/not-my-app">` the plugin won't catch it and
     * will navigate to an external link instead of doing a pushState resulting
     * in `https://example.com/myapp/https://example.com/not-my-app`
     */
    pathStartRegEx.test(slashedPathname(destination.pathname)) === false ||
    /**
     * Don't catch links pointed at what look like file extensions (other than
     * .htm/html extensions).
     */
    destination.pathname.search(pathFileExtensionRegEx) !== -1
  );
};

exports.pathIsNotHandledByApp = pathIsNotHandledByApp;

var hashShouldBeFollowed = function hashShouldBeFollowed(origin, destination) {
  return destination.hash !== "" && (destination.pathname === "" ||
  /* Don't catch links pointed to the same page but with a hash. */
  destination.pathname === origin.pathname);
};

exports.hashShouldBeFollowed = hashShouldBeFollowed;

var routeThroughBrowserOrApp = function routeThroughBrowserOrApp(hrefHandler, pluginOptions) {
  return function (event) {
    if (window.___failedResources) return true;
    if (userIsForcingNavigation(event)) return true;
    if (navigationWasHandledElsewhere(event)) return true;
    var clickedAnchor = findClosestAnchor(event.target);
    if (clickedAnchor == null) return true;
    if (authorIsForcingNavigation(clickedAnchor)) return true; // IE clears the host value if the anchor href changed after creation, e.g.
    // in React. Creating a new anchor element to ensure host value is present

    var destination = document.createElement("a"); // https://html.spec.whatwg.org/multipage/links.html#concept-hyperlink-url-set
    // If clickedAnchor has no href attribute like `<a>example</a>`, the href getter returns empty string.

    if (clickedAnchor.href !== "") {
      destination.href = clickedAnchor.href;
    }

    if ("SVGAnimatedString" in window && clickedAnchor.href instanceof SVGAnimatedString) {
      destination.href = clickedAnchor.href.animVal;
    } // In IE, the default port is included in the anchor host but excluded from
    // the location host.  This affects the ability to directly compare
    // location host to anchor host.  For example: http://example.com would
    // have a location.host of 'example.com' and an destination.host of
    // 'example.com:80' Creating anchor from the location.href to normalize the
    // host value.


    var origin = document.createElement("a");
    origin.href = window.location.href;
    if (urlsAreOnSameOrigin(origin, destination) === false) return true; // Regex to test pathname against pathPrefix

    var pathStartRegEx = new RegExp("^" + (0, _escapeStringRegexp.default)((0, _gatsby.withPrefix)("/")));
    if (pathIsNotHandledByApp(destination, pathStartRegEx)) return true;
    if (hashShouldBeFollowed(origin, destination)) return true;

    if (pluginOptions.excludePattern) {
      var excludeRegex = new RegExp(pluginOptions.excludePattern);

      if (excludeRegex.test(destination.pathname)) {
        return true;
      }
    }

    event.preventDefault(); // See issue #8907: destination.pathname already includes pathPrefix added
    // by gatsby-transformer-remark but gatsby-link.navigate needs href without

    var destinationPathname = slashedPathname(destination.pathname).replace(pathStartRegEx, "/");
    hrefHandler("" + destinationPathname + destination.search + destination.hash);
    return false;
  };
};

exports.routeThroughBrowserOrApp = routeThroughBrowserOrApp;

function _default(root, pluginOptions, cb) {
  var clickHandler = routeThroughBrowserOrApp(cb, pluginOptions);
  root.addEventListener("click", clickHandler);
  return function () {
    return root.removeEventListener("click", clickHandler);
  };
}

/***/ }),

/***/ 4365:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(95318);

var _gatsby = __webpack_require__(35313);

var _catchLinks = _interopRequireDefault(__webpack_require__(59564));

exports.onClientEntry = function (_, pluginOptions) {
  if (pluginOptions === void 0) {
    pluginOptions = {};
  }

  (0, _catchLinks.default)(window, pluginOptions, function (href) {
    (0, _gatsby.navigate)(href);
  });
};

/***/ }),

/***/ 6125:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "L": function() { return /* binding */ U; },
/* harmony export */   "M": function() { return /* binding */ Q; },
/* harmony export */   "P": function() { return /* binding */ K; },
/* harmony export */   "S": function() { return /* binding */ lt; },
/* harmony export */   "_": function() { return /* binding */ p; },
/* harmony export */   "a": function() { return /* binding */ c; },
/* harmony export */   "b": function() { return /* binding */ C; },
/* harmony export */   "c": function() { return /* binding */ dt; },
/* harmony export */   "g": function() { return /* binding */ q; }
/* harmony export */ });
/* unused harmony exports G, d, e, f, h, i, j, w */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var common_tags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34041);
/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74811);
/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73935);








function c() {
  return c = Object.assign || function (t) {
    for (var e = 1; e < arguments.length; e++) {
      var r = arguments[e];

      for (var i in r) {
        Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
      }
    }

    return t;
  }, c.apply(this, arguments);
}

function h(t, e) {
  return h = Object.setPrototypeOf || function (t, e) {
    return t.__proto__ = e, t;
  }, h(t, e);
}

function p(t, e) {
  if (null == t) return {};
  var r,
      i,
      a = {},
      n = Object.keys(t);

  for (i = 0; i < n.length; i++) {
    e.indexOf(r = n[i]) >= 0 || (a[r] = t[r]);
  }

  return a;
}

var g,
    f = (/* unused pure expression or super */ null && ([.25, .5, 1, 2])),
    m = (/* unused pure expression or super */ null && ([750, 1080, 1366, 1920])),
    v = (/* unused pure expression or super */ null && ([320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096])),
    y = function y(t) {
  return console.warn(t);
},
    w = function w(t, e) {
  return t - e;
},
    b = function b(t) {
  return t.map(function (t) {
    return t.src + " " + t.width + "w";
  }).join(",\n");
};

function E(t) {
  var e = t.lastIndexOf(".");

  if (-1 !== e) {
    var r = t.substr(e + 1);
    if ("jpeg" === r) return "jpg";
    if (3 === r.length || 4 === r.length) return r;
  }
}

function S(t) {
  var e = t.layout,
      r = void 0 === e ? "constrained" : e,
      i = t.width,
      a = t.height,
      n = t.sourceMetadata,
      o = t.breakpoints,
      l = t.aspectRatio,
      d = t.formats,
      u = void 0 === d ? ["auto", "webp"] : d;
  return u = u.map(function (t) {
    return t.toLowerCase();
  }), r = s(r), i && a ? c({}, t, {
    formats: u,
    layout: r,
    aspectRatio: i / a
  }) : (n.width && n.height && !l && (l = n.width / n.height), "fullWidth" === r ? (i = i || n.width || o[o.length - 1], a = a || Math.round(i / (l || 1.3333333333333333))) : (i || (i = a && l ? a * l : n.width ? n.width : a ? Math.round(a / 1.3333333333333333) : 800), l && !a ? a = Math.round(i / l) : l || (l = i / a)), c({}, t, {
    width: i,
    height: a,
    aspectRatio: l,
    layout: r,
    formats: u
  }));
}

function M(t, e) {
  var r;
  return void 0 === e && (e = 20), null == (r = (0, (t = S(t)).generateImageSource)(t.filename, e, Math.round(e / t.aspectRatio), t.sourceMetadata.format || "jpg", t.fit, t.options)) ? void 0 : r.src;
}

function L(t) {
  var e,
      r = (t = S(t)).pluginName,
      i = t.sourceMetadata,
      a = t.generateImageSource,
      n = t.layout,
      s = t.fit,
      l = t.options,
      d = t.width,
      u = t.height,
      h = t.filename,
      p = t.reporter,
      v = void 0 === p ? {
    warn: y
  } : p,
      w = t.backgroundColor,
      M = t.placeholderURL;
  if (r || v.warn('[gatsby-plugin-image] "generateImageData" was not passed a plugin name'), "function" != typeof a) throw new Error("generateImageSource must be a function");
  i && (i.width || i.height) ? i.format || (i.format = E(h)) : i = {
    width: d,
    height: u,
    format: (null == (e = i) ? void 0 : e.format) || E(h) || "auto"
  };
  var L = new Set(t.formats);
  (0 === L.size || L.has("auto") || L.has("")) && (L.delete("auto"), L.delete(""), L.add(i.format)), L.has("jpg") && L.has("png") && (v.warn("[" + r + "] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead"), L.delete("jpg" === i.format ? "png" : "jpg"));

  var j = function (t) {
    var e = t.filename,
        r = t.layout,
        i = void 0 === r ? "constrained" : r,
        a = t.sourceMetadata,
        n = t.reporter,
        s = void 0 === n ? {
      warn: y
    } : n,
        l = t.breakpoints,
        d = void 0 === l ? m : l,
        u = Object.entries({
      width: t.width,
      height: t.height
    }).filter(function (t) {
      var e = t[1];
      return "number" == typeof e && e < 1;
    });
    if (u.length) throw new Error("Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are " + u.map(function (t) {
      return t.join(": ");
    }).join(", "));
    return "fixed" === i ? function (t) {
      var e = t.filename,
          r = t.sourceMetadata,
          i = t.width,
          a = t.height,
          n = t.fit,
          s = void 0 === n ? "cover" : n,
          l = t.outputPixelDensities,
          d = t.reporter,
          u = void 0 === d ? {
        warn: y
      } : d,
          c = r.width / r.height,
          h = k(void 0 === l ? f : l);

      if (i && a) {
        var p = _(r, {
          width: i,
          height: a,
          fit: s
        });

        i = p.width, a = p.height, c = p.aspectRatio;
      }

      i ? a || (a = Math.round(i / c)) : i = a ? Math.round(a * c) : 800;
      var m,
          v,
          w = i;

      if (r.width < i || r.height < a) {
        var b = r.width < i ? "width" : "height";
        u.warn(o(g || (m = ["\n    The requested ", ' "', 'px" for the image ', " was larger than the actual image ", " of ", "px. If possible, replace the current image with a larger one."], v || (v = m.slice(0)), m.raw = v, g = m), b, "width" === b ? i : a, e, b, r[b])), "width" === b ? (i = r.width, a = Math.round(i / c)) : i = (a = r.height) * c;
      }

      return {
        sizes: h.filter(function (t) {
          return t >= 1;
        }).map(function (t) {
          return Math.round(t * i);
        }).filter(function (t) {
          return t <= r.width;
        }),
        aspectRatio: c,
        presentationWidth: w,
        presentationHeight: Math.round(w / c),
        unscaledWidth: i
      };
    }(t) : "constrained" === i ? R(t) : "fullWidth" === i ? R(c({
      breakpoints: d
    }, t)) : (s.warn("No valid layout was provided for the image at " + e + ". Valid image layouts are fixed, fullWidth, and constrained. Found " + i), {
      sizes: [a.width],
      presentationWidth: a.width,
      presentationHeight: a.height,
      aspectRatio: a.width / a.height,
      unscaledWidth: a.width
    });
  }(c({}, t, {
    sourceMetadata: i
  })),
      N = {
    sources: []
  },
      x = t.sizes;

  x || (x = function (t, e) {
    switch (e) {
      case "constrained":
        return "(min-width: " + t + "px) " + t + "px, 100vw";

      case "fixed":
        return t + "px";

      case "fullWidth":
        return "100vw";

      default:
        return;
    }
  }(j.presentationWidth, n)), L.forEach(function (t) {
    var e = j.sizes.map(function (e) {
      var i = a(h, e, Math.round(e / j.aspectRatio), t, s, l);
      if (null != i && i.width && i.height && i.src && i.format) return i;
      v.warn("[" + r + "] The resolver for image " + h + " returned an invalid value.");
    }).filter(Boolean);

    if ("jpg" === t || "png" === t || "auto" === t) {
      var i = e.find(function (t) {
        return t.width === j.unscaledWidth;
      }) || e[0];
      i && (N.fallback = {
        src: i.src,
        srcSet: b(e),
        sizes: x
      });
    } else {
      var n;
      null == (n = N.sources) || n.push({
        srcSet: b(e),
        sizes: x,
        type: "image/" + t
      });
    }
  });
  var I = {
    images: N,
    layout: n,
    backgroundColor: w
  };

  switch (M && (I.placeholder = {
    fallback: M
  }), n) {
    case "fixed":
      I.width = j.presentationWidth, I.height = j.presentationHeight;
      break;

    case "fullWidth":
      I.width = 1, I.height = 1 / j.aspectRatio;
      break;

    case "constrained":
      I.width = t.width || j.presentationWidth || 1, I.height = (I.width || 1) / j.aspectRatio;
  }

  return I;
}

var k = function k(t) {
  return Array.from(new Set([1].concat(t))).sort(w);
};

function R(t) {
  var e,
      r = t.sourceMetadata,
      i = t.width,
      a = t.height,
      n = t.fit,
      o = void 0 === n ? "cover" : n,
      s = t.outputPixelDensities,
      l = t.breakpoints,
      d = t.layout,
      u = r.width / r.height,
      c = k(void 0 === s ? f : s);

  if (i && a) {
    var h = _(r, {
      width: i,
      height: a,
      fit: o
    });

    i = h.width, a = h.height, u = h.aspectRatio;
  }

  i = i && Math.min(i, r.width), a = a && Math.min(a, r.height), i || a || (a = (i = Math.min(800, r.width)) / u), i || (i = a * u);
  var p = i;
  return (r.width < i || r.height < a) && (i = r.width, a = r.height), i = Math.round(i), (null == l ? void 0 : l.length) > 0 ? (e = l.filter(function (t) {
    return t <= r.width;
  })).length < l.length && !e.includes(r.width) && e.push(r.width) : e = (e = c.map(function (t) {
    return Math.round(t * i);
  })).filter(function (t) {
    return t <= r.width;
  }), "constrained" !== d || e.includes(i) || e.push(i), {
    sizes: e = e.sort(w),
    aspectRatio: u,
    presentationWidth: p,
    presentationHeight: Math.round(p / u),
    unscaledWidth: i
  };
}

function _(t, e) {
  var r = t.width / t.height,
      i = e.width,
      a = e.height;

  switch (e.fit) {
    case "fill":
      i = e.width ? e.width : t.width, a = e.height ? e.height : t.height;
      break;

    case "inside":
      var n = e.width ? e.width : Number.MAX_SAFE_INTEGER,
          o = e.height ? e.height : Number.MAX_SAFE_INTEGER;
      i = Math.min(n, Math.round(o * r)), a = Math.min(o, Math.round(n / r));
      break;

    case "outside":
      var s = e.width ? e.width : 0,
          l = e.height ? e.height : 0;
      i = Math.max(s, Math.round(l * r)), a = Math.max(l, Math.round(s / r));
      break;

    default:
      e.width && !e.height && (i = e.width, a = Math.round(e.width / r)), e.height && !e.width && (i = Math.round(e.height * r), a = e.height);
  }

  return {
    width: i,
    height: a,
    aspectRatio: i / a
  };
}

var j = (/* unused pure expression or super */ null && (["baseUrl", "urlBuilder", "sourceWidth", "sourceHeight", "pluginName", "formats", "breakpoints", "options"])),
    N = (/* unused pure expression or super */ null && (["images", "placeholder"])),
    x = new Set(),
    I = function I() {
  return "undefined" != typeof HTMLImageElement && "loading" in HTMLImageElement.prototype;
};

function O() {
  return  true && true;
}

function W(t) {
  t && x.add(t);
}

function z(t) {
  return x.has(t);
}

var T = function T(t) {
  var e;
  return function (t) {
    var e, r;
    return Boolean(null == t || null == (e = t.images) || null == (r = e.fallback) ? void 0 : r.src);
  }(t) ? t : function (t) {
    return Boolean(null == t ? void 0 : t.gatsbyImageData);
  }(t) ? t.gatsbyImageData : null == t || null == (e = t.childImageSharp) ? void 0 : e.gatsbyImageData;
},
    P = function P(t) {
  var e, r, i;
  return null == (e = T(t)) || null == (r = e.images) || null == (i = r.fallback) ? void 0 : i.src;
},
    H = function H(t) {
  var e, r, i;
  return null == (e = T(t)) || null == (r = e.images) || null == (i = r.fallback) ? void 0 : i.srcSet;
};

function D(t) {
  var e,
      r = t.baseUrl,
      i = t.urlBuilder,
      a = t.sourceWidth,
      n = t.sourceHeight,
      o = t.pluginName,
      s = void 0 === o ? "getImageData" : o,
      l = t.formats,
      d = void 0 === l ? ["auto"] : l,
      u = t.breakpoints,
      h = t.options,
      g = p(t, j);
  return null != (e = u) && e.length || "fullWidth" !== g.layout && "FULL_WIDTH" !== g.layout || (u = v), L(c({}, g, {
    pluginName: s,
    generateImageSource: function generateImageSource(t, e, r, a) {
      return {
        width: e,
        height: r,
        format: a,
        src: i({
          baseUrl: t,
          width: e,
          height: r,
          options: h,
          format: a
        })
      };
    },
    filename: r,
    formats: d,
    breakpoints: u,
    sourceMetadata: {
      width: a,
      height: n,
      format: "auto"
    }
  }));
}

function C(t, e, r, i, a, n, o, s) {
  var l, d;
  return void 0 === s && (s = {}), null != o && o.current && !("objectFit" in document.documentElement.style) && (o.current.dataset.objectFit = null != (l = s.objectFit) ? l : "cover", o.current.dataset.objectPosition = "" + (null != (d = s.objectPosition) ? d : "50% 50%"), function (t) {
    try {
      var e = function e() {
        window.objectFitPolyfill(t.current);
      },
          r = function () {
        if (!("objectFitPolyfill" in window)) return Promise.resolve(__webpack_require__.e(/* import() */ 7231).then(__webpack_require__.t.bind(__webpack_require__, 27231, 23))).then(function () {});
      }();

      Promise.resolve(r && r.then ? r.then(e) : e());
    } catch (t) {
      return Promise.reject(t);
    }
  }(o)), O() || (s = c({
    height: "100%",
    left: 0,
    position: "absolute",
    top: 0,
    transform: "translateZ(0)",
    transition: "opacity 250ms linear",
    width: "100%",
    willChange: "opacity"
  }, s)), c({}, r, {
    loading: i,
    shouldLoad: t,
    "data-main-image": "",
    style: c({}, s, {
      opacity: e ? 1 : 0
    }),
    onLoad: function onLoad(t) {
      if (!e) {
        W(n);
        var r = t.currentTarget,
            i = new Image();
        i.src = r.currentSrc, i.decode ? i.decode().catch(function () {}).then(function () {
          a(!0);
        }) : a(!0);
      }
    },
    ref: o
  });
}

function q(t, e, r, i, a, n, o, s) {
  var l = {};
  n && (l.backgroundColor = n, "fixed" === r ? (l.width = i, l.height = a, l.backgroundColor = n, l.position = "relative") : ("constrained" === r || "fullWidth" === r) && (l.position = "absolute", l.top = 0, l.left = 0, l.bottom = 0, l.right = 0)), o && (l.objectFit = o), s && (l.objectPosition = s);
  var d = c({}, t, {
    "aria-hidden": !0,
    "data-placeholder-image": "",
    style: c({
      opacity: e ? 0 : 1,
      transition: "opacity 500ms linear"
    }, l)
  });
  return O() || (d.style = {
    height: "100%",
    left: 0,
    position: "absolute",
    top: 0,
    width: "100%"
  }), d;
}

function A(t, e) {
  var r,
      i,
      a,
      n = t.images,
      o = t.placeholder,
      s = c({}, p(t, N), {
    images: c({}, n, {
      sources: []
    }),
    placeholder: o && c({}, o, {
      sources: []
    })
  });
  return e.forEach(function (e) {
    var r,
        i = e.media,
        a = e.image;
    i ? (a.layout !== t.layout && "development" === "production" && 0, (r = s.images.sources).push.apply(r, a.images.sources.map(function (t) {
      return c({}, t, {
        media: i
      });
    }).concat([{
      media: i,
      srcSet: a.images.fallback.srcSet
    }])), s.placeholder && s.placeholder.sources.push({
      media: i,
      srcSet: a.placeholder.fallback
    })) :  false && 0;
  }), (r = s.images.sources).push.apply(r, n.sources), null != o && o.sources && (null == (i = s.placeholder) || (a = i.sources).push.apply(a, o.sources)), s;
}

var F,
    V = ["children"],
    G = function G(t) {
  var r = t.layout,
      i = t.width,
      a = t.height;
  return "fullWidth" === r ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    "aria-hidden": !0,
    style: {
      paddingTop: a / i * 100 + "%"
    }
  }) : "constrained" === r ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    style: {
      maxWidth: i,
      display: "block"
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("img", {
    alt: "",
    role: "presentation",
    "aria-hidden": "true",
    src: "data:image/svg+xml;charset=utf-8,%3Csvg height='" + a + "' width='" + i + "' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E",
    style: {
      maxWidth: "100%",
      display: "block",
      position: "static"
    }
  })) : null;
},
    U = function U(t) {
  var i = t.children,
      a = p(t, V);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(G, c({}, a)), i, !1);
},
    B = ["src", "srcSet", "loading", "alt", "shouldLoad", "innerRef"],
    J = ["fallback", "sources", "shouldLoad"],
    Y = function Y(t) {
  var r = t.src,
      i = t.srcSet,
      a = t.loading,
      n = t.alt,
      o = void 0 === n ? "" : n,
      s = t.shouldLoad,
      l = t.innerRef,
      d = p(t, B);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("img", c({}, d, {
    decoding: "async",
    loading: a,
    src: s ? r : void 0,
    "data-src": s ? void 0 : r,
    srcSet: s ? i : void 0,
    "data-srcset": s ? void 0 : i,
    alt: o,
    ref: l
  }));
},
    X = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (t, r) {
  var i = t.fallback,
      a = t.sources,
      n = void 0 === a ? [] : a,
      o = t.shouldLoad,
      s = void 0 === o || o,
      l = p(t, J),
      d = l.sizes || (null == i ? void 0 : i.sizes),
      u = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Y, c({}, l, i, {
    sizes: d,
    shouldLoad: s,
    innerRef: r
  }));
  return n.length ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("picture", null, n.map(function (t) {
    var r = t.media,
        i = t.srcSet,
        a = t.type;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("source", {
      key: r + "-" + a + "-" + i,
      type: a,
      media: r,
      srcSet: s ? i : void 0,
      "data-srcset": s ? void 0 : i,
      sizes: d
    });
  }), u) : u;
});

Y.propTypes = {
  src: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired,
  alt: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired,
  sizes: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
  srcSet: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
  shouldLoad: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool
}, X.displayName = "Picture", X.propTypes = {
  alt: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired,
  shouldLoad: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,
  fallback: prop_types__WEBPACK_IMPORTED_MODULE_3__.exact({
    src: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired,
    srcSet: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
    sizes: prop_types__WEBPACK_IMPORTED_MODULE_3__.string
  }),
  sources: prop_types__WEBPACK_IMPORTED_MODULE_3__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3__.exact({
    media: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired,
    type: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
    sizes: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
    srcSet: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired
  }), prop_types__WEBPACK_IMPORTED_MODULE_3__.exact({
    media: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
    type: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired,
    sizes: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
    srcSet: prop_types__WEBPACK_IMPORTED_MODULE_3__.string.isRequired
  })]))
};

var Z = ["fallback"],
    K = function K(t) {
  var r = t.fallback,
      i = p(t, Z);
  return r ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(X, c({}, i, {
    fallback: {
      src: r
    },
    "aria-hidden": !0,
    alt: ""
  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", c({}, i));
};

K.displayName = "Placeholder", K.propTypes = {
  fallback: prop_types__WEBPACK_IMPORTED_MODULE_3__.string,
  sources: null == (F = X.propTypes) ? void 0 : F.sources,
  alt: function alt(t, e, r) {
    return t[e] ? new Error("Invalid prop `" + e + "` supplied to `" + r + "`. Validation failed.") : null;
  }
};
var Q = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (t, r) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(X, c({
    ref: r
  }, t)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("noscript", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(X, c({}, t, {
    shouldLoad: !0
  }))));
});
Q.displayName = "MainImage", Q.propTypes = X.propTypes;

var $ = function $(t, e, r) {
  return t.alt || "" === t.alt ? prop_types__WEBPACK_IMPORTED_MODULE_3___default().string.apply((prop_types__WEBPACK_IMPORTED_MODULE_3___default()), [t, e, r].concat([].slice.call(arguments, 3))) : new Error('The "alt" prop is required in ' + r + '. If the image is purely presentational then pass an empty string: e.g. alt="". Learn more: https://a11y-style-guide.com/style-guide/section-media.html');
},
    tt = {
  image: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object.isRequired),
  alt: $
},
    et = ["style", "className"],
    rt = function (t) {
  var r, i;

  function n(e) {
    var r;
    return (r = t.call(this, e) || this).root = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)(), r.hydrated = {
      current: !1
    }, r.forceRender = {
      current: "development" === "production"
    }, r.lazyHydrator = null, r.ref = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)(), r.unobserveRef = void 0, r.state = {
      isLoading: I(),
      isLoaded: !1
    }, r;
  }

  i = t, (r = n).prototype = Object.create(i.prototype), r.prototype.constructor = r, h(r, i);
  var o = n.prototype;
  return o._lazyHydrate = function (t, e) {
    var r = this,
        i = this.root.current.querySelector("[data-gatsby-image-ssr]");
    return I() && i && !this.hydrated.current ? (this.hydrated.current = !0, Promise.resolve()) : __webpack_require__.e(/* import() */ 9503).then(__webpack_require__.bind(__webpack_require__, 69503)).then(function (i) {
      var a = i.lazyHydrate,
          n = JSON.stringify(r.props.image.images);
      r.lazyHydrator = a(c({
        image: t.image.images,
        isLoading: e.isLoading || z(n),
        isLoaded: e.isLoaded || z(n),
        toggleIsLoaded: function toggleIsLoaded() {
          null == t.onLoad || t.onLoad(), r.setState({
            isLoaded: !0
          });
        },
        ref: r.ref
      }, t), r.root, r.hydrated, r.forceRender);
    });
  }, o._setupIntersectionObserver = function (t) {
    var e = this;
    void 0 === t && (t = !0), __webpack_require__.e(/* import() */ 7175).then(__webpack_require__.bind(__webpack_require__, 17175)).then(function (r) {
      var i = (0, r.createIntersectionObserver)(function () {
        if (e.root.current) {
          var r = JSON.stringify(e.props.image.images);
          null == e.props.onStartLoad || e.props.onStartLoad({
            wasCached: t && z(r)
          }), e.setState({
            isLoading: !0,
            isLoaded: t && z(r)
          });
        }
      });
      e.root.current && (e.unobserveRef = i(e.root));
    });
  }, o.shouldComponentUpdate = function (t, e) {
    var r = this,
        i = !1;
    return this.state.isLoading || !e.isLoading || e.isLoaded || (this.forceRender.current = !0), this.props.image.images !== t.image.images && (this.unobserveRef && (this.unobserveRef(), this.hydrated.current && this.lazyHydrator && (0,react_dom__WEBPACK_IMPORTED_MODULE_4__.render)(null, this.root.current)), this.setState({
      isLoading: !1,
      isLoaded: !1
    }, function () {
      r._setupIntersectionObserver(!1);
    }), i = !0), this.root.current && !i && this._lazyHydrate(t, e), !1;
  }, o.componentDidMount = function () {
    if (this.root.current) {
      var t = this.root.current.querySelector("[data-gatsby-image-ssr]"),
          e = JSON.stringify(this.props.image.images);

      if (I() && t && O()) {
        var r, i;

        if (null == (r = (i = this.props).onStartLoad) || r.call(i, {
          wasCached: !1
        }), t.complete) {
          var a, n;
          null == (a = (n = this.props).onLoad) || a.call(n), W(e);
        } else {
          var o = this;
          t.addEventListener("load", function r() {
            t.removeEventListener("load", r), null == o.props.onLoad || o.props.onLoad(), W(e);
          });
        }

        return;
      }

      this._setupIntersectionObserver(!0);
    }
  }, o.componentWillUnmount = function () {
    this.unobserveRef && (this.unobserveRef(), this.hydrated.current && this.lazyHydrator && this.lazyHydrator());
  }, o.render = function () {
    var t = this.props.as || "div",
        r = this.props.image,
        i = r.width,
        a = r.height,
        n = r.layout,
        o = function (t, e, r) {
      var i = {},
          a = "gatsby-image-wrapper";
      return O() || (i.position = "relative", i.overflow = "hidden"), "fixed" === r ? (i.width = t, i.height = e) : "constrained" === r && (O() || (i.display = "inline-block", i.verticalAlign = "top"), a = "gatsby-image-wrapper gatsby-image-wrapper-constrained"), {
        className: a,
        "data-gatsby-image-wrapper": "",
        style: i
      };
    }(i, a, n),
        s = o.style,
        l = o.className,
        d = p(o, et),
        u = this.props.className;

    this.props.class && (u = this.props.class);

    var h = function (t, e, r) {
      var i = null;
      return "fullWidth" === t && (i = '<div aria-hidden="true" style="padding-top: ' + r / e * 100 + '%;"></div>'), "constrained" === t && (i = '<div style="max-width: ' + e + 'px; display: block;"><img alt="" role="presentation" aria-hidden="true" src="data:image/svg+xml;charset=utf-8,%3Csvg height=\'' + r + "' width='" + e + "' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>"), i;
    }(n, i, a);

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(t, c({}, d, {
      style: c({}, s, this.props.style, {
        backgroundColor: this.props.backgroundColor
      }),
      className: l + (u ? " " + u : ""),
      ref: this.root,
      dangerouslySetInnerHTML: {
        __html: h
      },
      suppressHydrationWarning: !0
    }));
  }, n;
}(react__WEBPACK_IMPORTED_MODULE_0__.Component),
    it = function it(t) {
  if (!t.image) return  false && 0, null;
  O() || "development" !== "production" || 0;
  var r = t.image,
      i = JSON.stringify([r.width, r.height, r.layout, t.className, t.class, t.backgroundColor]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(rt, c({
    key: i
  }, t));
};

it.propTypes = tt, it.displayName = "GatsbyImage";

var at = ["src", "__imageData", "__error", "width", "height", "aspectRatio", "tracedSVGOptions", "placeholder", "formats", "quality", "transformOptions", "jpgOptions", "pngOptions", "webpOptions", "avifOptions", "blurredOptions"],
    nt = function nt(t, e) {
  return "fullWidth" !== t.layout || "width" !== e && "height" !== e || !t[e] ? prop_types__WEBPACK_IMPORTED_MODULE_3___default().number.apply((prop_types__WEBPACK_IMPORTED_MODULE_3___default()), [t, e].concat([].slice.call(arguments, 2))) : new Error('"' + e + '" ' + t[e] + " may not be passed when layout is fullWidth.");
},
    ot = new Set(["fixed", "fullWidth", "constrained"]),
    st = {
  src: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string.isRequired),
  alt: $,
  width: nt,
  height: nt,
  sizes: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  layout: function layout(t) {
    if (void 0 !== t.layout && !ot.has(t.layout)) return new Error("Invalid value " + t.layout + '" provided for prop "layout". Defaulting to "constrained". Valid values are "fixed", "fullWidth" or "constrained".');
  }
},
    lt = function (t) {
  return function (r) {
    var i = r.src,
        a = r.__imageData,
        n = r.__error,
        o = p(r, at);
    return n && console.warn(n), a ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(t, c({
      image: a
    }, o)) : (console.warn("Image not loaded", i), n || "development" !== "production" || 0, null);
  };
}(it);

function dt(e) {
  var r = e.children;
  return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
    __webpack_require__.e(/* import() */ 9503).then(__webpack_require__.bind(__webpack_require__, 69503));
  }, []), r;
}

lt.displayName = "StaticImage", lt.propTypes = st;


/***/ }),

/***/ 86988:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapRootElement": function() { return /* binding */ wrapRootElement; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6125);


function wrapRootElement(_ref) {
  var {
    element
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.c, null, element);
}

/***/ }),

/***/ 60992:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(95318);

var _gatsby = __webpack_require__(35313);

var _getManifestPathname = _interopRequireDefault(__webpack_require__(41632));
/* global __MANIFEST_PLUGIN_HAS_LOCALISATION__ */
// when we don't have localisation in our manifest, we tree shake everything away


if (undefined) {
  exports.onRouteUpdate = function (_ref, pluginOptions) {
    var location = _ref.location;
    var localize = pluginOptions.localize;
    var manifestFilename = (0, _getManifestPathname.default)(location.pathname, localize);
    var manifestEl = document.head.querySelector("link[rel=\"manifest\"]");

    if (manifestEl) {
      manifestEl.setAttribute("href", (0, _gatsby.withPrefix)(manifestFilename));
    }
  };
}

/***/ }),

/***/ 41632:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;
/**
 * Get a manifest filename depending on localized pathname
 *
 * @param {string} pathname
 * @param {Array<{start_url: string, lang: string}>} localizedManifests
 * @return string
 */

var _default = function _default(pathname, localizedManifests) {
  var defaultFilename = "manifest.webmanifest";

  if (!Array.isArray(localizedManifests)) {
    return defaultFilename;
  }

  var localizedManifest = localizedManifests.find(function (app) {
    return pathname.startsWith(app.start_url);
  });

  if (!localizedManifest) {
    return defaultFilename;
  }

  return "manifest_" + localizedManifest.lang + ".webmanifest";
};

exports["default"] = _default;

/***/ }),

/***/ 76824:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(95318);

exports.__esModule = true;
exports.wrapRootElement = void 0;

var _react = _interopRequireDefault(__webpack_require__(67294));

var _react2 = __webpack_require__(7611);

var _materialUiPluginCacheEndpoint = _interopRequireDefault(__webpack_require__(11689));

var _getEmotionCache = _interopRequireDefault(__webpack_require__(630));

var cache = (0, _getEmotionCache.default)(_materialUiPluginCacheEndpoint.default);

var wrapRootElement = function wrapRootElement(_ref) {
  var element = _ref.element;
  return /*#__PURE__*/_react.default.createElement(_react2.CacheProvider, {
    value: cache
  }, element);
};

exports.wrapRootElement = wrapRootElement;

/***/ }),

/***/ 630:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(95318);

exports.__esModule = true;
exports["default"] = getEmotionCache;

var _cache = _interopRequireDefault(__webpack_require__(69816));

function getEmotionCache(props) {
  return (0, _cache.default)(props !== null && props !== void 0 ? props : {
    key: "css"
  });
}

/***/ }),

/***/ 69816:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ emotion_cache_browser_esm; }
});

;// CONCATENATED MODULE: ./node_modules/gatsby-plugin-material-ui/node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */


  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}

function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);

  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }

  tag.appendChild(document.createTextNode(''));
  tag.setAttribute('data-s', '');
  return tag;
}

var StyleSheet = /*#__PURE__*/function () {
  function StyleSheet(options) {
    var _this = this;

    this._insertTag = function (tag) {
      var before;

      if (_this.tags.length === 0) {
        before = _this.prepend ? _this.container.firstChild : _this.before;
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }

      _this.container.insertBefore(tag, before);

      _this.tags.push(tag);
    };

    this.isSpeedy = options.speedy === undefined ? "production" === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.before = null;
  }

  var _proto = StyleSheet.prototype;

  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };

  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }

    var tag = this.tags[this.tags.length - 1];

    if (false) { var isImportRule; }

    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);

      try {
        // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (false) {}
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }

    this.ctr++;
  };

  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;

    if (false) {}
  };

  return StyleSheet;
}();


// EXTERNAL MODULE: ./node_modules/stylis/src/Tokenizer.js
var Tokenizer = __webpack_require__(31062);
// EXTERNAL MODULE: ./node_modules/stylis/src/Utility.js
var Utility = __webpack_require__(97801);
// EXTERNAL MODULE: ./node_modules/stylis/src/Middleware.js + 1 modules
var Middleware = __webpack_require__(22443);
// EXTERNAL MODULE: ./node_modules/stylis/src/Serializer.js
var Serializer = __webpack_require__(97750);
// EXTERNAL MODULE: ./node_modules/stylis/src/Parser.js
var Parser = __webpack_require__(80071);
;// CONCATENATED MODULE: ./node_modules/gatsby-plugin-material-ui/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js





var last = function last(arr) {
  return arr.length ? arr[arr.length - 1] : null;
}; // based on https://github.com/thysultan/stylis.js/blob/e6843c373ebcbbfade25ebcc23f540ed8508da0a/src/Tokenizer.js#L239-L244


var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
  var previous = 0;
  var character = 0;

  while (true) {
    previous = character;
    character = (0,Tokenizer/* peek */.fj)(); // &\f

    if (previous === 38 && character === 12) {
      points[index] = 1;
    }

    if ((0,Tokenizer/* token */.r)(character)) {
      break;
    }

    (0,Tokenizer/* next */.lp)();
  }

  return (0,Tokenizer/* slice */.tP)(begin, Tokenizer/* position */.FK);
};

var toRules = function toRules(parsed, points) {
  // pretend we've started with a comma
  var index = -1;
  var character = 44;

  do {
    switch ((0,Tokenizer/* token */.r)(character)) {
      case 0:
        // &\f
        if (character === 38 && (0,Tokenizer/* peek */.fj)() === 12) {
          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
          // and when it should just concatenate the outer and inner selectors
          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
          points[index] = 1;
        }

        parsed[index] += identifierWithPointTracking(Tokenizer/* position */.FK - 1, points, index);
        break;

      case 2:
        parsed[index] += (0,Tokenizer/* delimit */.iF)(character);
        break;

      case 4:
        // comma
        if (character === 44) {
          // colon
          parsed[++index] = (0,Tokenizer/* peek */.fj)() === 58 ? '&\f' : '';
          points[index] = parsed[index].length;
          break;
        }

      // fallthrough

      default:
        parsed[index] += (0,Utility/* from */.Dp)(character);
    }
  } while (character = (0,Tokenizer/* next */.lp)());

  return parsed;
};

var getRules = function getRules(value, points) {
  return (0,Tokenizer/* dealloc */.cE)(toRules((0,Tokenizer/* alloc */.un)(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11


var fixedElements = /* #__PURE__ */new WeakMap();

var compat = function compat(element) {
  if (element.type !== 'rule' || !element.parent || // .length indicates if this rule contains pseudo or not
  !element.length) {
    return;
  }

  var value = element.value,
      parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;

  while (parent.type !== 'rule') {
    parent = parent.parent;
    if (!parent) return;
  } // short-circuit for the simplest case


  if (element.props.length === 1 && value.charCodeAt(0) !== 58
  /* colon */
  && !fixedElements.get(parent)) {
    return;
  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"


  if (isImplicitRule) {
    return;
  }

  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;

  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};

var removeLabel = function removeLabel(element) {
  if (element.type === 'decl') {
    var value = element.value;

    if ( // charcode for l
    value.charCodeAt(0) === 108 && // charcode for b
    value.charCodeAt(2) === 98) {
      // this ignores label
      element["return"] = '';
      element.value = '';
    }
  }
};

var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';

var isIgnoringComment = function isIgnoringComment(element) {
  return !!element && element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
};

var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
  return function (element, index, children) {
    if (element.type !== 'rule') return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);

    if (unsafePseudoClasses && cache.compat !== true) {
      var prevElement = index > 0 ? children[index - 1] : null;

      if (prevElement && isIgnoringComment(last(prevElement.children))) {
        return;
      }

      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
      });
    }
  };
};

var isImportRule = function isImportRule(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};

var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
  for (var i = index - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }

  return false;
}; // use this to remove incorrect elements from further processing
// so they don't get handed to the `sheet` (or anything else)
// as that could potentially lead to additional logs which in turn could be overhelming to the user


var nullifyElement = function nullifyElement(element) {
  element.type = '';
  element.value = '';
  element["return"] = '';
  element.children = '';
  element.props = '';
};

var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
  if (!isImportRule(element)) {
    return;
  }

  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};

var defaultStylisPlugins = [Middleware/* prefixer */.Ji];

var createCache = function createCache(options) {
  var key = options.key;

  if (false) {}

  if (key === 'css') {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
    // note this very very intentionally targets all style elements regardless of the key to ensure
    // that creating a cache works inside of render of a React component

    Array.prototype.forEach.call(ssrStyles, function (node) {
      // we want to only move elements which have a space in the data-emotion attribute value
      // because that indicates that it is an Emotion 11 server-side rendered style elements
      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
      // will not result in the Emotion 10 styles being destroyed
      var dataEmotionAttribute = node.getAttribute('data-emotion');

      if (dataEmotionAttribute.indexOf(' ') === -1) {
        return;
      }

      document.head.appendChild(node);
      node.setAttribute('data-s', '');
    });
  }

  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;

  if (false) {}

  var inserted = {}; // $FlowFixMe

  var container;
  var nodesToHydrate = [];
  {
    container = options.container || document.head;
    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }

      nodesToHydrate.push(node);
    });
  }

  var _insert;

  var omnipresentPlugins = [compat, removeLabel];

  if (false) {}

  {
    var currentSheet;
    var finalizingPlugins = [Serializer/* stringify */.P,  false ? 0 : (0,Middleware/* rulesheet */.cD)(function (rule) {
      currentSheet.insert(rule);
    })];
    var serializer = (0,Middleware/* middleware */.qR)(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));

    var stylis = function stylis(styles) {
      return (0,Serializer/* serialize */.q)((0,Parser/* compile */.MY)(styles), serializer);
    };

    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;

      if (false) {}

      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);

      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key: key,
    sheet: new StyleSheet({
      key: key,
      container: container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend
    }),
    nonce: options.nonce,
    inserted: inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};

/* harmony default export */ var emotion_cache_browser_esm = (createCache);

/***/ }),

/***/ 97996:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


exports.registerServiceWorker = function () {
  return ({}).GATSBY_IS_PREVIEW !== "true";
}; // only cache relevant resources for this page


var whiteListLinkRels = /^(stylesheet|preload)$/;
var prefetchedPathnames = [];

exports.onServiceWorkerActive = function (_ref) {
  var getResourceURLsForPathname = _ref.getResourceURLsForPathname,
      serviceWorker = _ref.serviceWorker;

  if (({}).GATSBY_IS_PREVIEW === "true") {
    return;
  } // if the SW has just updated then clear the path dependencies and don't cache
  // stuff, since we're on the old revision until we navigate to another page


  if (window.___swUpdated) {
    serviceWorker.active.postMessage({
      gatsbyApi: "clearPathResources"
    });
    return;
  } // grab nodes from head of document


  var nodes = document.querySelectorAll("\n    head > script[src],\n    head > link[href],\n    head > style[data-href]\n  "); // get all resource URLs

  var headerResources = [].slice.call(nodes) // don't include preconnect/prefetch/prerender resources
  .filter(function (node) {
    return node.tagName !== "LINK" || whiteListLinkRels.test(node.getAttribute("rel"));
  }).map(function (node) {
    return node.src || node.href || node.getAttribute("data-href");
  }); // Loop over prefetched pages and add their resources to an array,
  // plus specify which resources are required for those paths.

  var prefetchedResources = [];
  prefetchedPathnames.forEach(function (path) {
    var resources = getResourceURLsForPathname(path);
    prefetchedResources.push.apply(prefetchedResources, resources);
    serviceWorker.active.postMessage({
      gatsbyApi: "setPathResources",
      path: path,
      resources: resources
    });
  }); // Loop over all resources and fetch the page component + JSON data
  // to add it to the SW cache.

  var resources = [].concat(headerResources, prefetchedResources);
  resources.forEach(function (resource) {
    // Create a prefetch link for each resource, so Workbox runtime-caches them
    var link = document.createElement("link");
    link.rel = "prefetch";
    link.href = resource;
    link.onload = link.remove;
    link.onerror = link.remove;
    document.head.appendChild(link);
  });
};

function setPathResources(path, getResourceURLsForPathname) {
  // do nothing if the SW has just updated, since we still have old pages in
  // memory which we don't want to be whitelisted
  if (window.___swUpdated) return;

  if ("serviceWorker" in navigator) {
    var _navigator = navigator,
        serviceWorker = _navigator.serviceWorker;

    if (serviceWorker.controller === null) {
      // if SW is not installed, we need to record any prefetches
      // that happen so we can then add them to SW cache once installed
      prefetchedPathnames.push(path);
    } else {
      var resources = getResourceURLsForPathname(path);
      serviceWorker.controller.postMessage({
        gatsbyApi: "setPathResources",
        path: path,
        resources: resources
      });
    }
  }
}

exports.onRouteUpdate = function (_ref2) {
  var location = _ref2.location,
      getResourceURLsForPathname = _ref2.getResourceURLsForPathname;
  var pathname = location.pathname.replace("/jacdac-docs", "");
  setPathResources(pathname, getResourceURLsForPathname);

  if ("serviceWorker" in navigator && navigator.serviceWorker.controller !== null) {
    navigator.serviceWorker.controller.postMessage({
      gatsbyApi: "enableOfflineShell"
    });
  }
};

exports.onPostPrefetchPathname = function (_ref3) {
  var pathname = _ref3.pathname,
      getResourceURLsForPathname = _ref3.getResourceURLsForPathname;
  setPathResources(pathname, getResourceURLsForPathname);
};

/***/ }),

/***/ 17504:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var offsetY = 0;

var getTargetOffset = function getTargetOffset(hash) {
  var id = window.decodeURI(hash.replace("#", ""));

  if (id !== "") {
    var element = document.getElementById(id);

    if (element) {
      var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
      var clientTop = document.documentElement.clientTop || document.body.clientTop || 0;
      var computedStyles = window.getComputedStyle(element);
      var scrollMarginTop = computedStyles.getPropertyValue("scroll-margin-top") || computedStyles.getPropertyValue("scroll-snap-margin-top") || "0px";
      return element.getBoundingClientRect().top + scrollTop - parseInt(scrollMarginTop, 10) - clientTop - offsetY;
    }
  }

  return null;
};

exports.onInitialClientRender = function (_, pluginOptions) {
  if (pluginOptions.offsetY) {
    offsetY = pluginOptions.offsetY;
  }

  requestAnimationFrame(function () {
    var offset = getTargetOffset(window.location.hash);

    if (offset !== null) {
      window.scrollTo(0, offset);
    }
  });
};

exports.shouldUpdateScroll = function (_ref) {
  var location = _ref.routerProps.location;
  var offset = getTargetOffset(location.hash);
  return offset !== null ? [0, offset] : true;
};

/***/ }),

/***/ 62862:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


exports.DEFAULT_OPTIONS = {
  maxWidth: 650,
  wrapperStyle: "",
  backgroundColor: "white",
  linkImagesToOriginal: true,
  showCaptions: false,
  markdownCaptions: false,
  withWebp: false,
  withAvif: false,
  tracedSVG: false,
  loading: "lazy",
  decoding: "async",
  disableBgImageOnAlpha: false,
  disableBgImage: false
};
exports.EMPTY_ALT = "GATSBY_EMPTY_ALT";
exports.imageClass = "gatsby-resp-image-image";
exports.imageWrapperClass = "gatsby-resp-image-wrapper";
exports.imageBackgroundClass = "gatsby-resp-image-background-image";

/***/ }),

/***/ 23207:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(62862),
    DEFAULT_OPTIONS = _require.DEFAULT_OPTIONS,
    imageClass = _require.imageClass,
    imageBackgroundClass = _require.imageBackgroundClass,
    imageWrapperClass = _require.imageWrapperClass;

exports.onRouteUpdate = function (apiCallbackContext, pluginOptions) {
  var options = Object.assign({}, DEFAULT_OPTIONS, pluginOptions);
  var imageWrappers = document.querySelectorAll("." + imageWrapperClass); // https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/
  // for cross-browser looping through NodeList without polyfills

  var _loop = function _loop(i) {
    var imageWrapper = imageWrappers[i];
    var backgroundElement = imageWrapper.querySelector("." + imageBackgroundClass);
    var imageElement = imageWrapper.querySelector("." + imageClass);

    var onImageLoad = function onImageLoad() {
      backgroundElement.style.transition = "opacity 0.5s 0.5s";
      imageElement.style.transition = "opacity 0.5s";
      onImageComplete();
    };

    var onImageComplete = function onImageComplete() {
      backgroundElement.style.opacity = 0;
      imageElement.style.opacity = 1;
      imageElement.style.color = "inherit";
      imageElement.style.boxShadow = "inset 0px 0px 0px 400px " + options.backgroundColor;
      imageElement.removeEventListener("load", onImageLoad);
      imageElement.removeEventListener("error", onImageComplete);
    };

    imageElement.style.opacity = 0;
    imageElement.addEventListener("load", onImageLoad);
    imageElement.addEventListener("error", onImageComplete);

    if (imageElement.complete) {
      onImageComplete();
    }
  };

  for (var i = 0; i < imageWrappers.length; i++) {
    _loop(i);
  }
};

/***/ }),

/***/ 45017:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "wrapRootElement": function() { return /* binding */ wrapRootElement; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mui/material/CssBaseline/CssBaseline.js
var CssBaseline = __webpack_require__(10532);
// EXTERNAL MODULE: ./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js + 2 modules
var ThemeProvider = __webpack_require__(65668);
// EXTERNAL MODULE: ./node_modules/react-helmet/es/Helmet.js
var Helmet = __webpack_require__(35414);
;// CONCATENATED MODULE: ./node_modules/gatsby-theme-material-ui-top-layout/src/components/viewport.js


function Viewport(_ref) {
  var {
    children
  } = _ref;
  return /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("meta", {
    name: "viewport",
    content: "initial-scale=1, width=device-width"
  }), children);
}
;// CONCATENATED MODULE: ./node_modules/gatsby-theme-material-ui-top-layout/src/components/top-layout.js




function TopLayout(_ref) {
  var {
    children,
    theme
  } = _ref;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Viewport, null), /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {
    theme: theme
  }, /*#__PURE__*/react.createElement(CssBaseline/* default */.ZP, null), children));
}
;// CONCATENATED MODULE: ./src/gatsby-theme-material-ui-top-layout/components/top-layout.tsx
 // tslint:disable-next-line: no-submodule-imports

 // eslint-disable-next-line react/prop-types

function top_layout_TopLayout(_ref) {
  var {
    children,
    theme
  } = _ref;
  return /*#__PURE__*/react.createElement(TopLayout, {
    theme: theme
  }, children);
}
// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTheme.js + 13 modules
var createTheme = __webpack_require__(78790);
;// CONCATENATED MODULE: ./node_modules/gatsby-theme-material-ui-top-layout/src/theme.js

var theme = (0,createTheme/* default */.Z)();
/* harmony default export */ var src_theme = (theme);
;// CONCATENATED MODULE: ./node_modules/gatsby-theme-material-ui-top-layout/src/wrap-with-provider.js



function wrapWithProvider(_ref) {
  var {
    element
  } = _ref;
  return /*#__PURE__*/react.createElement(top_layout_TopLayout, {
    theme: src_theme
  }, element);
}
;// CONCATENATED MODULE: ./node_modules/gatsby-theme-material-ui-top-layout/gatsby-browser.js

var wrapRootElement = wrapWithProvider;

/***/ }),

/***/ 41204:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

exports.components = {
  "component---cache-caches-gatsby-plugin-offline-app-shell-js": () => __webpack_require__.e(/* import() | component---cache-caches-gatsby-plugin-offline-app-shell-js */ 4306).then(__webpack_require__.bind(__webpack_require__, 45569)),
  "component---src-components-spec-tsx": () => __webpack_require__.e(/* import() | component---src-components-spec-tsx */ 7655).then(__webpack_require__.bind(__webpack_require__, 52217)),
  "component---src-pages-404-tsx": () => __webpack_require__.e(/* import() | component---src-pages-404-tsx */ 9218).then(__webpack_require__.bind(__webpack_require__, 63205)),
  "component---src-pages-clients-a-frame-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-a-frame-mdx */ 2059).then(__webpack_require__.bind(__webpack_require__, 62994)),
  "component---src-pages-clients-cli-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-cli-mdx */ 6425).then(__webpack_require__.bind(__webpack_require__, 58043)),
  "component---src-pages-clients-embed-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-embed-mdx */ 8706).then(__webpack_require__.bind(__webpack_require__, 66256)),
  "component---src-pages-clients-javascript-debugging-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-debugging-mdx */ 2051).then(__webpack_require__.bind(__webpack_require__, 28697)),
  "component---src-pages-clients-javascript-jdom-bus-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-bus-mdx */ 2611).then(__webpack_require__.bind(__webpack_require__, 19712)),
  "component---src-pages-clients-javascript-jdom-device-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-device-mdx */ 2588).then(__webpack_require__.bind(__webpack_require__, 8131)),
  "component---src-pages-clients-javascript-jdom-event-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-event-mdx */ 8160).then(__webpack_require__.bind(__webpack_require__, 54201)),
  "component---src-pages-clients-javascript-jdom-field-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-field-mdx */ 165).then(__webpack_require__.bind(__webpack_require__, 55987)),
  "component---src-pages-clients-javascript-jdom-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-mdx */ 6322).then(__webpack_require__.bind(__webpack_require__, 67057)),
  "component---src-pages-clients-javascript-jdom-node-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-node-mdx */ 8192).then(__webpack_require__.bind(__webpack_require__, 33589)),
  "component---src-pages-clients-javascript-jdom-register-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-register-mdx */ 7247).then(__webpack_require__.bind(__webpack_require__, 70464)),
  "component---src-pages-clients-javascript-jdom-service-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-jdom-service-mdx */ 2557).then(__webpack_require__.bind(__webpack_require__, 47107)),
  "component---src-pages-clients-javascript-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-mdx */ 3290).then(__webpack_require__.bind(__webpack_require__, 79835)),
  "component---src-pages-clients-javascript-react-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-javascript-react-mdx */ 9640).then(__webpack_require__.bind(__webpack_require__, 69823)),
  "component---src-pages-clients-makecode-code-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-code-mdx */ 7018).then(__webpack_require__.bind(__webpack_require__, 16643)),
  "component---src-pages-clients-makecode-extensions-accelerometer-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-accelerometer-mdx */ 5168).then(__webpack_require__.bind(__webpack_require__, 73275)),
  "component---src-pages-clients-makecode-extensions-barometer-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-barometer-mdx */ 5804).then(__webpack_require__.bind(__webpack_require__, 96240)),
  "component---src-pages-clients-makecode-extensions-button-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-button-mdx */ 3838).then(__webpack_require__.bind(__webpack_require__, 37808)),
  "component---src-pages-clients-makecode-extensions-characterscreen-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-characterscreen-mdx */ 9032).then(__webpack_require__.bind(__webpack_require__, 38542)),
  "component---src-pages-clients-makecode-extensions-codalmessagebus-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-codalmessagebus-mdx */ 9115).then(__webpack_require__.bind(__webpack_require__, 17580)),
  "component---src-pages-clients-makecode-extensions-color-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-color-mdx */ 219).then(__webpack_require__.bind(__webpack_require__, 34565)),
  "component---src-pages-clients-makecode-extensions-dotmatrix-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-dotmatrix-mdx */ 4450).then(__webpack_require__.bind(__webpack_require__, 75743)),
  "component---src-pages-clients-makecode-extensions-eco-2-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-eco-2-mdx */ 8785).then(__webpack_require__.bind(__webpack_require__, 40248)),
  "component---src-pages-clients-makecode-extensions-flex-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-flex-mdx */ 7968).then(__webpack_require__.bind(__webpack_require__, 29459)),
  "component---src-pages-clients-makecode-extensions-hidkeyboard-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-hidkeyboard-mdx */ 197).then(__webpack_require__.bind(__webpack_require__, 99420)),
  "component---src-pages-clients-makecode-extensions-hidmouse-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-hidmouse-mdx */ 7477).then(__webpack_require__.bind(__webpack_require__, 21540)),
  "component---src-pages-clients-makecode-extensions-humidity-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-humidity-mdx */ 7609).then(__webpack_require__.bind(__webpack_require__, 48264)),
  "component---src-pages-clients-makecode-extensions-joystick-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-joystick-mdx */ 8363).then(__webpack_require__.bind(__webpack_require__, 17245)),
  "component---src-pages-clients-makecode-extensions-led-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-led-mdx */ 6621).then(__webpack_require__.bind(__webpack_require__, 89186)),
  "component---src-pages-clients-makecode-extensions-ledpixel-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-ledpixel-mdx */ 1914).then(__webpack_require__.bind(__webpack_require__, 27122)),
  "component---src-pages-clients-makecode-extensions-lightlevel-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-lightlevel-mdx */ 6152).then(__webpack_require__.bind(__webpack_require__, 97742)),
  "component---src-pages-clients-makecode-extensions-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-mdx */ 2763).then(__webpack_require__.bind(__webpack_require__, 42321)),
  "component---src-pages-clients-makecode-extensions-potentiometer-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-potentiometer-mdx */ 7129).then(__webpack_require__.bind(__webpack_require__, 95380)),
  "component---src-pages-clients-makecode-extensions-relay-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-relay-mdx */ 8918).then(__webpack_require__.bind(__webpack_require__, 26204)),
  "component---src-pages-clients-makecode-extensions-rotaryencoder-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-rotaryencoder-mdx */ 396).then(__webpack_require__.bind(__webpack_require__, 41426)),
  "component---src-pages-clients-makecode-extensions-thermometer-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-thermometer-mdx */ 3572).then(__webpack_require__.bind(__webpack_require__, 20147)),
  "component---src-pages-clients-makecode-extensions-tvoc-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-extensions-tvoc-mdx */ 395).then(__webpack_require__.bind(__webpack_require__, 93741)),
  "component---src-pages-clients-makecode-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-mdx */ 5348).then(__webpack_require__.bind(__webpack_require__, 82733)),
  "component---src-pages-clients-makecode-projects-data-streamer-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-projects-data-streamer-mdx */ 5344).then(__webpack_require__.bind(__webpack_require__, 95250)),
  "component---src-pages-clients-makecode-projects-heartbeat-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-projects-heartbeat-mdx */ 9089).then(__webpack_require__.bind(__webpack_require__, 28258)),
  "component---src-pages-clients-makecode-projects-joystick-2-mouse-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-projects-joystick-2-mouse-mdx */ 3375).then(__webpack_require__.bind(__webpack_require__, 42760)),
  "component---src-pages-clients-makecode-projects-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-projects-mdx */ 2235).then(__webpack_require__.bind(__webpack_require__, 39091)),
  "component---src-pages-clients-makecode-projects-rotary-2-mouse-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-projects-rotary-2-mouse-mdx */ 1720).then(__webpack_require__.bind(__webpack_require__, 1626)),
  "component---src-pages-clients-makecode-servers-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-servers-mdx */ 2913).then(__webpack_require__.bind(__webpack_require__, 1979)),
  "component---src-pages-clients-makecode-user-guide-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-makecode-user-guide-mdx */ 1198).then(__webpack_require__.bind(__webpack_require__, 61198)),
  "component---src-pages-clients-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-mdx */ 2858).then(__webpack_require__.bind(__webpack_require__, 63895)),
  "component---src-pages-clients-node-red-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-node-red-mdx */ 95).then(__webpack_require__.bind(__webpack_require__, 96440)),
  "component---src-pages-clients-p-5-js-events-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-p-5-js-events-mdx */ 9).then(__webpack_require__.bind(__webpack_require__, 44847)),
  "component---src-pages-clients-p-5-js-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-p-5-js-mdx */ 4939).then(__webpack_require__.bind(__webpack_require__, 65081)),
  "component---src-pages-clients-p-5-js-sensors-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-p-5-js-sensors-mdx */ 4256).then(__webpack_require__.bind(__webpack_require__, 99861)),
  "component---src-pages-clients-python-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-python-mdx */ 2487).then(__webpack_require__.bind(__webpack_require__, 26215)),
  "component---src-pages-clients-react-hooks-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-react-hooks-mdx */ 2134).then(__webpack_require__.bind(__webpack_require__, 42640)),
  "component---src-pages-clients-react-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-react-mdx */ 6804).then(__webpack_require__.bind(__webpack_require__, 83860)),
  "component---src-pages-clients-react-setup-mdx": () => __webpack_require__.e(/* import() | component---src-pages-clients-react-setup-mdx */ 8210).then(__webpack_require__.bind(__webpack_require__, 69790)),
  "component---src-pages-dashboard-tsx": () => Promise.all(/* import() | component---src-pages-dashboard-tsx */[__webpack_require__.e(8517), __webpack_require__.e(7378)]).then(__webpack_require__.bind(__webpack_require__, 5503)),
  "component---src-pages-devices-tsx": () => __webpack_require__.e(/* import() | component---src-pages-devices-tsx */ 8524).then(__webpack_require__.bind(__webpack_require__, 82306)),
  "component---src-pages-editors-data-about-mdx": () => __webpack_require__.e(/* import() | component---src-pages-editors-data-about-mdx */ 1495).then(__webpack_require__.bind(__webpack_require__, 31586)),
  "component---src-pages-editors-data-embed-tsx": () => Promise.all(/* import() | component---src-pages-editors-data-embed-tsx */[__webpack_require__.e(9978), __webpack_require__.e(3915), __webpack_require__.e(9750)]).then(__webpack_require__.bind(__webpack_require__, 83532)),
  "component---src-pages-editors-data-excel-tsx": () => __webpack_require__.e(/* import() | component---src-pages-editors-data-excel-tsx */ 1122).then(__webpack_require__.bind(__webpack_require__, 62788)),
  "component---src-pages-editors-data-tsx": () => Promise.all(/* import() | component---src-pages-editors-data-tsx */[__webpack_require__.e(9978), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(3915), __webpack_require__.e(3116), __webpack_require__.e(9484), __webpack_require__.e(85), __webpack_require__.e(1621)]).then(__webpack_require__.bind(__webpack_require__, 62780)),
  "component---src-pages-editors-mdx": () => __webpack_require__.e(/* import() | component---src-pages-editors-mdx */ 7668).then(__webpack_require__.bind(__webpack_require__, 90088)),
  "component---src-pages-editors-ml-tsx": () => Promise.all(/* import() | component---src-pages-editors-ml-tsx */[__webpack_require__.e(9978), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(3915), __webpack_require__.e(3116), __webpack_require__.e(9484), __webpack_require__.e(6602), __webpack_require__.e(4230)]).then(__webpack_require__.bind(__webpack_require__, 66362)),
  "component---src-pages-editors-sensors-tsx": () => Promise.all(/* import() | component---src-pages-editors-sensors-tsx */[__webpack_require__.e(9978), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(3915), __webpack_require__.e(3116), __webpack_require__.e(9484), __webpack_require__.e(85), __webpack_require__.e(259)]).then(__webpack_require__.bind(__webpack_require__, 69221)),
  "component---src-pages-editors-vm-tsx": () => Promise.all(/* import() | component---src-pages-editors-vm-tsx */[__webpack_require__.e(9978), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(3915), __webpack_require__.e(3116), __webpack_require__.e(9484), __webpack_require__.e(85), __webpack_require__.e(2186)]).then(__webpack_require__.bind(__webpack_require__, 91412)),
  "component---src-pages-experiments-razor-chroma-tsx": () => __webpack_require__.e(/* import() | component---src-pages-experiments-razor-chroma-tsx */ 1674).then(__webpack_require__.bind(__webpack_require__, 74692)),
  "component---src-pages-github-tsx": () => __webpack_require__.e(/* import() | component---src-pages-github-tsx */ 2566).then(__webpack_require__.bind(__webpack_require__, 82017)),
  "component---src-pages-hardware-connector-mdx": () => __webpack_require__.e(/* import() | component---src-pages-hardware-connector-mdx */ 2124).then(__webpack_require__.bind(__webpack_require__, 80427)),
  "component---src-pages-hardware-kit-mdx": () => __webpack_require__.e(/* import() | component---src-pages-hardware-kit-mdx */ 9306).then(__webpack_require__.bind(__webpack_require__, 25420)),
  "component---src-pages-hardware-kit-oob-mdx": () => __webpack_require__.e(/* import() | component---src-pages-hardware-kit-oob-mdx */ 915).then(__webpack_require__.bind(__webpack_require__, 51697)),
  "component---src-pages-hardware-kit-unbox-mdx": () => __webpack_require__.e(/* import() | component---src-pages-hardware-kit-unbox-mdx */ 6575).then(__webpack_require__.bind(__webpack_require__, 69114)),
  "component---src-pages-hardware-mdx": () => __webpack_require__.e(/* import() | component---src-pages-hardware-mdx */ 3244).then(__webpack_require__.bind(__webpack_require__, 67319)),
  "component---src-pages-hardware-pnp-colorselect-mdx": () => __webpack_require__.e(/* import() | component---src-pages-hardware-pnp-colorselect-mdx */ 2731).then(__webpack_require__.bind(__webpack_require__, 15178)),
  "component---src-pages-index-mdx": () => __webpack_require__.e(/* import() | component---src-pages-index-mdx */ 4809).then(__webpack_require__.bind(__webpack_require__, 95646)),
  "component---src-pages-makeaccessible-challenges-mdx": () => Promise.all(/* import() | component---src-pages-makeaccessible-challenges-mdx */[__webpack_require__.e(8186), __webpack_require__.e(797)]).then(__webpack_require__.bind(__webpack_require__, 73100)),
  "component---src-pages-makeaccessible-mdx": () => __webpack_require__.e(/* import() | component---src-pages-makeaccessible-mdx */ 5148).then(__webpack_require__.bind(__webpack_require__, 90205)),
  "component---src-pages-privacy-mdx": () => __webpack_require__.e(/* import() | component---src-pages-privacy-mdx */ 5853).then(__webpack_require__.bind(__webpack_require__, 92574)),
  "component---src-pages-protocol-mdx": () => __webpack_require__.e(/* import() | component---src-pages-protocol-mdx */ 1115).then(__webpack_require__.bind(__webpack_require__, 99708)),
  "component---src-pages-reference-errors-mdx": () => __webpack_require__.e(/* import() | component---src-pages-reference-errors-mdx */ 1360).then(__webpack_require__.bind(__webpack_require__, 50954)),
  "component---src-pages-reference-errors-microbit-invalid-memory-mdx": () => __webpack_require__.e(/* import() | component---src-pages-reference-errors-microbit-invalid-memory-mdx */ 5970).then(__webpack_require__.bind(__webpack_require__, 3440)),
  "component---src-pages-reference-errors-microbit-jacdac-missing-mdx": () => __webpack_require__.e(/* import() | component---src-pages-reference-errors-microbit-jacdac-missing-mdx */ 3801).then(__webpack_require__.bind(__webpack_require__, 34346)),
  "component---src-pages-reference-errors-microbit-unknown-hardware-revision-mdx": () => __webpack_require__.e(/* import() | component---src-pages-reference-errors-microbit-unknown-hardware-revision-mdx */ 2512).then(__webpack_require__.bind(__webpack_require__, 2736)),
  "component---src-pages-reference-errors-microbit-v-1-not-supported-mdx": () => __webpack_require__.e(/* import() | component---src-pages-reference-errors-microbit-v-1-not-supported-mdx */ 5451).then(__webpack_require__.bind(__webpack_require__, 11449)),
  "component---src-pages-reference-errors-transport-device-locked-mdx": () => __webpack_require__.e(/* import() | component---src-pages-reference-errors-transport-device-locked-mdx */ 355).then(__webpack_require__.bind(__webpack_require__, 24119)),
  "component---src-pages-services-tsx": () => __webpack_require__.e(/* import() | component---src-pages-services-tsx */ 7858).then(__webpack_require__.bind(__webpack_require__, 67713)),
  "component---src-pages-software-device-tree-mdx": () => __webpack_require__.e(/* import() | component---src-pages-software-device-tree-mdx */ 8036).then(__webpack_require__.bind(__webpack_require__, 67749)),
  "component---src-pages-software-mdx": () => __webpack_require__.e(/* import() | component---src-pages-software-mdx */ 8307).then(__webpack_require__.bind(__webpack_require__, 46690)),
  "component---src-pages-software-packet-console-mdx": () => __webpack_require__.e(/* import() | component---src-pages-software-packet-console-mdx */ 1595).then(__webpack_require__.bind(__webpack_require__, 62078)),
  "component---src-pages-software-updater-mdx": () => __webpack_require__.e(/* import() | component---src-pages-software-updater-mdx */ 2792).then(__webpack_require__.bind(__webpack_require__, 29475)),
  "component---src-pages-tools-accelerometer-theremin-tsx": () => Promise.all(/* import() | component---src-pages-tools-accelerometer-theremin-tsx */[__webpack_require__.e(2954), __webpack_require__.e(8517), __webpack_require__.e(5023)]).then(__webpack_require__.bind(__webpack_require__, 67396)),
  "component---src-pages-tools-collector-tsx": () => Promise.all(/* import() | component---src-pages-tools-collector-tsx */[__webpack_require__.e(2954), __webpack_require__.e(8814)]).then(__webpack_require__.bind(__webpack_require__, 21586)),
  "component---src-pages-tools-commissioner-tsx": () => Promise.all(/* import() | component---src-pages-tools-commissioner-tsx */[__webpack_require__.e(8517), __webpack_require__.e(1322)]).then(__webpack_require__.bind(__webpack_require__, 7877)),
  "component---src-pages-tools-device-qr-code-tsx": () => __webpack_require__.e(/* import() | component---src-pages-tools-device-qr-code-tsx */ 7260).then(__webpack_require__.bind(__webpack_require__, 9874)),
  "component---src-pages-tools-device-registration-tsx": () => Promise.all(/* import() | component---src-pages-tools-device-registration-tsx */[__webpack_require__.e(2954), __webpack_require__.e(8270), __webpack_require__.e(9231)]).then(__webpack_require__.bind(__webpack_require__, 9330)),
  "component---src-pages-tools-enclosure-mdx": () => __webpack_require__.e(/* import() | component---src-pages-tools-enclosure-mdx */ 4854).then(__webpack_require__.bind(__webpack_require__, 8743)),
  "component---src-pages-tools-flood-test-tsx": () => Promise.all(/* import() | component---src-pages-tools-flood-test-tsx */[__webpack_require__.e(2954), __webpack_require__.e(5356)]).then(__webpack_require__.bind(__webpack_require__, 79410)),
  "component---src-pages-tools-hid-events-tsx": () => Promise.all(/* import() | component---src-pages-tools-hid-events-tsx */[__webpack_require__.e(532), __webpack_require__.e(7919), __webpack_require__.e(2954), __webpack_require__.e(5444)]).then(__webpack_require__.bind(__webpack_require__, 24180)),
  "component---src-pages-tools-jupyterlab-mdx": () => __webpack_require__.e(/* import() | component---src-pages-tools-jupyterlab-mdx */ 6394).then(__webpack_require__.bind(__webpack_require__, 95844)),
  "component---src-pages-tools-lightsensor-accessible-tsx": () => Promise.all(/* import() | component---src-pages-tools-lightsensor-accessible-tsx */[__webpack_require__.e(2954), __webpack_require__.e(8517), __webpack_require__.e(3579)]).then(__webpack_require__.bind(__webpack_require__, 55389)),
  "component---src-pages-tools-makecode-editor-extension-tsx": () => __webpack_require__.e(/* import() | component---src-pages-tools-makecode-editor-extension-tsx */ 6456).then(__webpack_require__.bind(__webpack_require__, 81013)),
  "component---src-pages-tools-makecode-sim-tsx": () => Promise.all(/* import() | component---src-pages-tools-makecode-sim-tsx */[__webpack_require__.e(8517), __webpack_require__.e(6450)]).then(__webpack_require__.bind(__webpack_require__, 98874)),
  "component---src-pages-tools-mdx": () => __webpack_require__.e(/* import() | component---src-pages-tools-mdx */ 5818).then(__webpack_require__.bind(__webpack_require__, 6673)),
  "component---src-pages-tools-model-editor-tsx": () => Promise.all(/* import() | component---src-pages-tools-model-editor-tsx */[__webpack_require__.e(9191), __webpack_require__.e(3116), __webpack_require__.e(8270), __webpack_require__.e(6602), __webpack_require__.e(7476), __webpack_require__.e(372)]).then(__webpack_require__.bind(__webpack_require__, 82258)),
  "component---src-pages-tools-model-uploader-tsx": () => Promise.all(/* import() | component---src-pages-tools-model-uploader-tsx */[__webpack_require__.e(2954), __webpack_require__.e(8952)]).then(__webpack_require__.bind(__webpack_require__, 67895)),
  "component---src-pages-tools-packet-inspector-tsx": () => Promise.all(/* import() | component---src-pages-tools-packet-inspector-tsx */[__webpack_require__.e(2954), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(5577), __webpack_require__.e(2937)]).then(__webpack_require__.bind(__webpack_require__, 55662)),
  "component---src-pages-tools-peers-tsx": () => __webpack_require__.e(/* import() | component---src-pages-tools-peers-tsx */ 6992).then(__webpack_require__.bind(__webpack_require__, 27238)),
  "component---src-pages-tools-player-mdx": () => __webpack_require__.e(/* import() | component---src-pages-tools-player-mdx */ 5347).then(__webpack_require__.bind(__webpack_require__, 28455)),
  "component---src-pages-tools-prototest-tsx": () => Promise.all(/* import() | component---src-pages-tools-prototest-tsx */[__webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(5437)]).then(__webpack_require__.bind(__webpack_require__, 50381)),
  "component---src-pages-tools-qr-silk-tsx": () => __webpack_require__.e(/* import() | component---src-pages-tools-qr-silk-tsx */ 4602).then(__webpack_require__.bind(__webpack_require__, 93081)),
  "component---src-pages-tools-release-assets-tsx": () => __webpack_require__.e(/* import() | component---src-pages-tools-release-assets-tsx */ 9225).then(__webpack_require__.bind(__webpack_require__, 71044)),
  "component---src-pages-tools-service-editor-tsx": () => Promise.all(/* import() | component---src-pages-tools-service-editor-tsx */[__webpack_require__.e(2954), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(5577), __webpack_require__.e(2219)]).then(__webpack_require__.bind(__webpack_require__, 37207)),
  "component---src-pages-tools-settings-tsx": () => Promise.all(/* import() | component---src-pages-tools-settings-tsx */[__webpack_require__.e(2954), __webpack_require__.e(5560)]).then(__webpack_require__.bind(__webpack_require__, 360)),
  "component---src-pages-tools-speech-strings-tsx": () => Promise.all(/* import() | component---src-pages-tools-speech-strings-tsx */[__webpack_require__.e(2954), __webpack_require__.e(7611)]).then(__webpack_require__.bind(__webpack_require__, 637)),
  "component---src-pages-tools-updater-tsx": () => Promise.all(/* import() | component---src-pages-tools-updater-tsx */[__webpack_require__.e(2954), __webpack_require__.e(9191), __webpack_require__.e(5092), __webpack_require__.e(6366)]).then(__webpack_require__.bind(__webpack_require__, 86812)),
  "component---src-pages-traces-mdx": () => __webpack_require__.e(/* import() | component---src-pages-traces-mdx */ 1356).then(__webpack_require__.bind(__webpack_require__, 23478)),
  "component---src-templates-device-company-tsx": () => __webpack_require__.e(/* import() | component---src-templates-device-company-tsx */ 20).then(__webpack_require__.bind(__webpack_require__, 96557)),
  "component---src-templates-device-tsx": () => Promise.all(/* import() | component---src-templates-device-tsx */[__webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(5092), __webpack_require__.e(8323)]).then(__webpack_require__.bind(__webpack_require__, 77110)),
  "component---src-templates-service-playground-tsx": () => Promise.all(/* import() | component---src-templates-service-playground-tsx */[__webpack_require__.e(2954), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(5577), __webpack_require__.e(6540)]).then(__webpack_require__.bind(__webpack_require__, 97230)),
  "component---src-templates-service-tsx": () => Promise.all(/* import() | component---src-templates-service-tsx */[__webpack_require__.e(2954), __webpack_require__.e(9191), __webpack_require__.e(1172), __webpack_require__.e(5577), __webpack_require__.e(3133)]).then(__webpack_require__.bind(__webpack_require__, 59377))
};

/***/ }),

/***/ 61692:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = [{
  plugin: __webpack_require__(45017),
  options: {
    "plugins": []
  }
}, {
  plugin: __webpack_require__(76824),
  options: {
    "plugins": [],
    "pathToEmotionCacheProps": ""
  }
}, {
  plugin: __webpack_require__(86988),
  options: {
    "plugins": []
  }
}, {
  plugin: __webpack_require__(23207),
  options: {
    "plugins": [],
    "linkImagesToOriginal": false,
    "maxWidth": 650,
    "showCaptions": false,
    "markdownCaptions": false,
    "backgroundColor": "white",
    "quality": 50,
    "withWebp": false,
    "withAvif": false,
    "tracedSVG": false,
    "loading": "lazy",
    "decoding": "async",
    "disableBgImageOnAlpha": false,
    "disableBgImage": false
  }
}, {
  plugin: __webpack_require__(28928),
  options: {
    "plugins": [],
    "defaultLayouts": {
      "extensions": [".mdx", ".md"],
      "default": "/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx"
    },
    "gatsbyRemarkPlugins": [{
      "resolve": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-makecode",
      "id": "5f43ac72-7db2-5755-8ac9-bb7afa0e5d4c",
      "name": "gatsby-remark-makecode",
      "version": "1.0.22",
      "modulePath": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-makecode/dist/index.js",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": []
    }, {
      "resolve": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-autolink-headers",
      "id": "84411983-3572-54e6-8782-dedc5abaf1a7",
      "name": "gatsby-remark-autolink-headers",
      "version": "5.3.0",
      "modulePath": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-autolink-headers/index.js",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": ["pluginOptionsSchema"],
      "browserAPIs": ["onInitialClientRender", "shouldUpdateScroll"],
      "ssrAPIs": ["onRenderBody"]
    }, {
      "resolve": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-external-links",
      "id": "60561c32-f0a6-53ca-afa5-60f3e432c7d4",
      "name": "gatsby-remark-external-links",
      "version": "0.0.4",
      "modulePath": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-external-links/index.js",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": []
    }, {
      "resolve": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-images",
      "id": "d4bb4911-6c75-56a1-ab96-dc92001ad515",
      "name": "gatsby-remark-images",
      "version": "6.3.0",
      "modulePath": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-images/index.js",
      "pluginOptions": {
        "plugins": [],
        "maxWidth": 800,
        "linkImagesToOriginal": false
      },
      "nodeAPIs": ["pluginOptionsSchema"],
      "browserAPIs": ["onRouteUpdate"],
      "ssrAPIs": []
    }, {
      "resolve": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-static-images",
      "id": "c3fac9af-c254-5ee7-bfcd-b2b4e92b3d48",
      "name": "gatsby-remark-static-images",
      "version": "1.2.1",
      "modulePath": "/home/runner/work/jacdac-docs/jacdac-docs/node_modules/gatsby-remark-static-images/lib/index.js",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": []
    }],
    "extensions": [".mdx"],
    "lessBabel": false,
    "remarkPlugins": [],
    "rehypePlugins": [],
    "mediaTypes": ["text/markdown", "text/x-markdown"],
    "root": "/home/runner/work/jacdac-docs/jacdac-docs",
    "commonmark": false
  }
}, {
  plugin: __webpack_require__(17504),
  options: {
    "plugins": []
  }
}, {
  plugin: __webpack_require__(23207),
  options: {
    "plugins": [],
    "maxWidth": 800,
    "linkImagesToOriginal": false
  }
}, {
  plugin: __webpack_require__(17504),
  options: {
    "plugins": [],
    "offsetY": 0,
    "className": "anchor"
  }
}, {
  plugin: __webpack_require__(23207),
  options: {
    "plugins": [],
    "maxWidth": 800,
    "linkImagesToOriginal": false,
    "showCaptions": false,
    "markdownCaptions": false,
    "backgroundColor": "white",
    "quality": 50,
    "withWebp": false,
    "withAvif": false,
    "tracedSVG": false,
    "loading": "lazy",
    "decoding": "async",
    "disableBgImageOnAlpha": false,
    "disableBgImage": false
  }
}, {
  plugin: __webpack_require__(60992),
  options: {
    "plugins": [],
    "name": "Jacdac - plug-n-play for microcontrollers",
    "short_name": "Jacdac",
    "description": "Jacdac is a plug-and-play hardware and software stack for microcontrollers and their peripherals such as sensors and actuators. Jacdac is primarily designed for “modular electronics” scenarios that support rapid prototyping, creative exploration, making and learning through physical computing. Jacdac is designed to be cheap, flexible and extensible.",
    "start_url": "/",
    "background_color": "#ffc400",
    "theme_color": "#ffc400",
    "display": "standalone",
    "cache_busting_mode": "none",
    "icon": "src/images/favicon.svg",
    "crossOrigin": "use-credentials",
    "legacy": true,
    "theme_color_in_head": true,
    "include_favicon": true,
    "cacheDigest": null
  }
}, {
  plugin: __webpack_require__(97996),
  options: {
    "plugins": [],
    "precachePages": ["/*", "/reference/**", "/services/**", "/devices/**", "/tools/**"]
  }
}, {
  plugin: __webpack_require__(4365),
  options: {
    "plugins": []
  }
}, {
  plugin: __webpack_require__(40744),
  options: {
    "plugins": []
  }
}];

/***/ }),

/***/ 41535:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var plugins = __webpack_require__(61692);

var {
  getResourceURLsForPathname,
  loadPage,
  loadPageSync
} = (__webpack_require__(18854)/* .publicLoader */ .jN);

exports.h = function (api, args, defaultReturn, argTransform) {
  if (args === void 0) {
    args = {};
  } // Hooks for gatsby-cypress's API handler


  if (undefined) {
    if (window.___apiHandler) {
      window.___apiHandler(api);
    } else if (window.___resolvedAPIs) {
      window.___resolvedAPIs.push(api);
    } else {
      window.___resolvedAPIs = [api];
    }
  }

  var results = plugins.map(plugin => {
    if (!plugin.plugin[api]) {
      return undefined;
    }

    args.getResourceURLsForPathname = getResourceURLsForPathname;
    args.loadPage = loadPage;
    args.loadPageSync = loadPageSync;
    var result = plugin.plugin[api](args, plugin.options);

    if (result && argTransform) {
      args = argTransform({
        args,
        result,
        plugin
      });
    }

    return result;
  }); // Filter out undefined results.

  results = results.filter(result => typeof result !== "undefined");

  if (results.length > 0) {
    return results;
  } else if (defaultReturn) {
    return [defaultReturn];
  } else {
    return [];
  }
};

exports.I = (api, args, defaultReturn) => plugins.reduce((previous, next) => next.plugin[api] ? previous.then(() => next.plugin[api](args, next.options)) : previous, Promise.resolve());

/***/ }),

/***/ 11689:
/***/ (function(module) {

module.exports = null;

/***/ }),

/***/ 22615:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ _cache_emitter; }
});

;// CONCATENATED MODULE: ./node_modules/mitt/dist/mitt.es.js
//      
// An event handler can take an optional event argument
// and should not return a value
                                          
                                                               

// An array of all currently registered event handlers for a type
                                            
                                                            
// A map of event types and their corresponding event handlers.
                        
                                 
                                   
  

/** Mitt: Tiny (~200b) functional event emitter / pubsub.
 *  @name mitt
 *  @returns {Mitt}
 */
function mitt(all                 ) {
	all = all || Object.create(null);

	return {
		/**
		 * Register an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to listen for, or `"*"` for all events
		 * @param  {Function} handler Function to call in response to given event
		 * @memberOf mitt
		 */
		on: function on(type        , handler              ) {
			(all[type] || (all[type] = [])).push(handler);
		},

		/**
		 * Remove an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
		 * @param  {Function} handler Handler function to remove
		 * @memberOf mitt
		 */
		off: function off(type        , handler              ) {
			if (all[type]) {
				all[type].splice(all[type].indexOf(handler) >>> 0, 1);
			}
		},

		/**
		 * Invoke all handlers for the given type.
		 * If present, `"*"` handlers are invoked after type-matched handlers.
		 *
		 * @param {String} type  The event type to invoke
		 * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
		 * @memberOf mitt
		 */
		emit: function emit(type        , evt     ) {
			(all[type] || []).slice().map(function (handler) { handler(evt); });
			(all['*'] || []).slice().map(function (handler) { handler(type, evt); });
		}
	};
}

/* harmony default export */ var mitt_es = (mitt);
//# sourceMappingURL=mitt.es.js.map

;// CONCATENATED MODULE: ./.cache/emitter.js

var emitter = mitt_es();
/* harmony default export */ var _cache_emitter = (emitter);

/***/ }),

/***/ 35591:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "UD": function() { return /* binding */ findMatchPath; },
  "Cj": function() { return /* binding */ findPath; },
  "GA": function() { return /* binding */ grabMatchParams; },
  "DS": function() { return /* binding */ setMatchPaths; }
});

// UNUSED EXPORTS: cleanPath

// EXTERNAL MODULE: ./node_modules/@gatsbyjs/reach-router/lib/utils.js
var utils = __webpack_require__(92098);
// EXTERNAL MODULE: ./.cache/strip-prefix.js
var strip_prefix = __webpack_require__(70412);
;// CONCATENATED MODULE: ./.cache/normalize-page-path.js
/* harmony default export */ var normalize_page_path = (pathAndSearch => {
  if (pathAndSearch === undefined) {
    return pathAndSearch;
  }

  var [path, search = ""] = pathAndSearch.split("?");

  if (search) {
    search = "?" + search;
  }

  if (path === "/") {
    return "/" + search;
  }

  if (path.charAt(path.length - 1) === "/") {
    return path.slice(0, -1) + search;
  }

  return path + search;
});
// EXTERNAL MODULE: ./.cache/redirect-utils.js + 1 modules
var redirect_utils = __webpack_require__(56501);
;// CONCATENATED MODULE: ./.cache/find-path.js




var pathCache = new Map();
var matchPaths = [];

var trimPathname = rawPathname => {
  var pathname = decodeURIComponent(rawPathname); // Remove the pathPrefix from the pathname.

  var trimmedPathname = (0,strip_prefix/* default */.Z)(pathname, decodeURIComponent("/jacdac-docs")) // Remove any hashfragment
  .split("#")[0];
  return trimmedPathname;
};

function absolutify(path) {
  // If it's already absolute, return as-is
  if (path.startsWith("/") || path.startsWith("https://") || path.startsWith("http://")) {
    return path;
  } // Calculate path relative to current location, adding a trailing slash to
  // match behavior of @reach/router


  return new URL(path, window.location.href + (window.location.href.endsWith("/") ? "" : "/")).pathname;
}
/**
 * Set list of matchPaths
 *
 * @param {Array<{path: string, matchPath: string}>} value collection of matchPaths
 */


var setMatchPaths = value => {
  matchPaths = value;
};
/**
 * Return a matchpath url
 * if `match-paths.json` contains `{ "/foo*": "/page1", ...}`, then
 * `/foo?bar=far` => `/page1`
 *
 * @param {string} rawPathname A raw pathname
 * @return {string|null}
 */

var findMatchPath = rawPathname => {
  var trimmedPathname = cleanPath(rawPathname);
  var pickPaths = matchPaths.map(_ref => {
    var {
      path,
      matchPath
    } = _ref;
    return {
      path: matchPath,
      originalPath: path
    };
  });
  var path = (0,utils.pick)(pickPaths, trimmedPathname);

  if (path) {
    return normalize_page_path(path.route.originalPath);
  }

  return null;
};
/**
 * Return a matchpath params from reach/router rules
 * if `match-paths.json` contains `{ ":bar/*foo" }`, and the path is /baz/zaz/zoo
 * then it returns
 *  { bar: baz, foo: zaz/zoo }
 *
 * @param {string} rawPathname A raw pathname
 * @return {object}
 */

var grabMatchParams = rawPathname => {
  var trimmedPathname = cleanPath(rawPathname);
  var pickPaths = matchPaths.map(_ref2 => {
    var {
      path,
      matchPath
    } = _ref2;
    return {
      path: matchPath,
      originalPath: path
    };
  });
  var path = (0,utils.pick)(pickPaths, trimmedPathname);

  if (path) {
    return path.params;
  }

  return {};
}; // Given a raw URL path, returns the cleaned version of it (trim off
// `#` and query params), or if it matches an entry in
// `match-paths.json`, its matched path is returned
//
// E.g. `/foo?bar=far` => `/foo`
//
// Or if `match-paths.json` contains `{ "/foo*": "/page1", ...}`, then
// `/foo?bar=far` => `/page1`

var findPath = rawPathname => {
  var trimmedPathname = trimPathname(absolutify(rawPathname));

  if (pathCache.has(trimmedPathname)) {
    return pathCache.get(trimmedPathname);
  }

  var redirect = (0,redirect_utils/* maybeGetBrowserRedirect */.J)(rawPathname);

  if (redirect) {
    return findPath(redirect.toPath);
  }

  var foundPath = findMatchPath(trimmedPathname);

  if (!foundPath) {
    foundPath = cleanPath(rawPathname);
  }

  pathCache.set(trimmedPathname, foundPath);
  return foundPath;
};
/**
 * Clean a url and converts /index.html => /
 * E.g. `/foo?bar=far` => `/foo`
 *
 * @param {string} rawPathname A raw pathname
 * @return {string}
 */

var cleanPath = rawPathname => {
  var trimmedPathname = trimPathname(absolutify(rawPathname));
  var foundPath = trimmedPathname;

  if (foundPath === "/index.html") {
    foundPath = "/";
  }

  foundPath = normalize_page_path(foundPath);
  return foundPath;
};

/***/ }),

/***/ 35313:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Link": function() { return /* reexport safe */ gatsby_link__WEBPACK_IMPORTED_MODULE_1__.ZP; },
/* harmony export */   "withAssetPrefix": function() { return /* reexport safe */ gatsby_link__WEBPACK_IMPORTED_MODULE_1__.mc; },
/* harmony export */   "withPrefix": function() { return /* reexport safe */ gatsby_link__WEBPACK_IMPORTED_MODULE_1__.dq; },
/* harmony export */   "graphql": function() { return /* binding */ graphql; },
/* harmony export */   "parsePath": function() { return /* reexport safe */ gatsby_link__WEBPACK_IMPORTED_MODULE_1__.cP; },
/* harmony export */   "navigate": function() { return /* reexport safe */ gatsby_link__WEBPACK_IMPORTED_MODULE_1__.c4; },
/* harmony export */   "useScrollRestoration": function() { return /* reexport safe */ gatsby_react_router_scroll__WEBPACK_IMPORTED_MODULE_2__.p2; },
/* harmony export */   "StaticQueryContext": function() { return /* binding */ StaticQueryContext; },
/* harmony export */   "StaticQuery": function() { return /* binding */ StaticQuery; },
/* harmony export */   "PageRenderer": function() { return /* reexport default from dynamic */ _public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default.a; },
/* harmony export */   "useStaticQuery": function() { return /* binding */ useStaticQuery; },
/* harmony export */   "prefetchPathname": function() { return /* binding */ prefetchPathname; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var gatsby_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38037);
/* harmony import */ var gatsby_react_router_scroll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19679);
/* harmony import */ var _public_page_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57625);
/* harmony import */ var _public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(18854);





var prefetchPathname = _loader__WEBPACK_IMPORTED_MODULE_4__/* ["default"].enqueue */ .ZP.enqueue;
var StaticQueryContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({});

function StaticQueryDataRenderer(_ref) {
  var {
    staticQueryData,
    data,
    query,
    render
  } = _ref;
  var finalData = data ? data.data : staticQueryData[query] && staticQueryData[query].data;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, finalData && render(finalData), !finalData && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, "Loading (StaticQuery)"));
}

var StaticQuery = props => {
  var {
    data,
    query,
    render,
    children
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticQueryContext.Consumer, null, staticQueryData => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticQueryDataRenderer, {
    data: data,
    query: query,
    render: render || children,
    staticQueryData: staticQueryData
  }));
};

var useStaticQuery = query => {
  var _context$query;

  if (typeof react__WEBPACK_IMPORTED_MODULE_0__.useContext !== "function" && "production" === "development") {}

  var context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(StaticQueryContext); // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets
  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to
  // catch the misuse of the API and give proper direction

  if (isNaN(Number(query))) {
    throw new Error("useStaticQuery was called with a string but expects to be called using `graphql`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql`" + query + "`);\n");
  }

  if ((_context$query = context[query]) !== null && _context$query !== void 0 && _context$query.data) {
    return context[query].data;
  } else {
    throw new Error("The result of this StaticQuery could not be fetched.\n\n" + "This is likely a bug in Gatsby and if refreshing the page does not fix it, " + "please open an issue in https://github.com/gatsbyjs/gatsby/issues");
  }
};

function graphql() {
  throw new Error("It appears like Gatsby is misconfigured. Gatsby related `graphql` calls " + "are supposed to only be evaluated at compile time, and then compiled away. " + "Unfortunately, something went wrong and the query was left in the compiled code.\n\n" + "Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.");
}



/***/ }),

/***/ 18854:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "uQ": function() { return /* binding */ PageResourceStatus; },
  "kL": function() { return /* binding */ ProdLoader; },
  "ZP": function() { return /* binding */ loader; },
  "hs": function() { return /* binding */ getStaticQueryResults; },
  "jN": function() { return /* binding */ publicLoader; },
  "N1": function() { return /* binding */ setLoader; }
});

// UNUSED EXPORTS: BaseLoader

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules
var toConsumableArray = __webpack_require__(15785);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
;// CONCATENATED MODULE: ./.cache/prefetch.js
var support = function support(feature) {
  if (typeof document === "undefined") {
    return false;
  }

  var fakeLink = document.createElement("link");

  try {
    if (fakeLink.relList && typeof fakeLink.relList.supports === "function") {
      return fakeLink.relList.supports(feature);
    }
  } catch (err) {
    return false;
  }

  return false;
};

var linkPrefetchStrategy = function linkPrefetchStrategy(url, options) {
  return new Promise((resolve, reject) => {
    if (typeof document === "undefined") {
      reject();
      return;
    }

    var link = document.createElement("link");
    link.setAttribute("rel", "prefetch");
    link.setAttribute("href", url);
    Object.keys(options).forEach(key => {
      link.setAttribute(key, options[key]);
    });
    link.onload = resolve;
    link.onerror = reject;
    var parentElement = document.getElementsByTagName("head")[0] || document.getElementsByName("script")[0].parentNode;
    parentElement.appendChild(link);
  });
};

var xhrPrefetchStrategy = function xhrPrefetchStrategy(url) {
  return new Promise((resolve, reject) => {
    var req = new XMLHttpRequest();
    req.open("GET", url, true);

    req.onload = () => {
      if (req.status === 200) {
        resolve();
      } else {
        reject();
      }
    };

    req.send(null);
  });
};

var supportedPrefetchStrategy = support("prefetch") ? linkPrefetchStrategy : xhrPrefetchStrategy;
var preFetched = {};

var prefetch = function prefetch(url, options) {
  return new Promise(resolve => {
    if (preFetched[url]) {
      resolve();
      return;
    }

    supportedPrefetchStrategy(url, options).then(() => {
      resolve();
      preFetched[url] = true;
    }).catch(() => {}); // 404s are logged to the console anyway
  });
};

/* harmony default export */ var _cache_prefetch = (prefetch);
// EXTERNAL MODULE: ./.cache/emitter.js + 1 modules
var emitter = __webpack_require__(22615);
// EXTERNAL MODULE: ./.cache/find-path.js + 1 modules
var find_path = __webpack_require__(35591);
;// CONCATENATED MODULE: ./.cache/loader.js




function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,defineProperty/* default */.Z)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




/**
 * Available resource loading statuses
 */

var PageResourceStatus = {
  /**
   * At least one of critical resources failed to load
   */
  Error: "error",

  /**
   * Resources loaded successfully
   */
  Success: "success"
};

var preferDefault = m => m && m.default || m;

var stripSurroundingSlashes = s => {
  s = s[0] === "/" ? s.slice(1) : s;
  s = s.endsWith("/") ? s.slice(0, -1) : s;
  return s;
};

var createPageDataUrl = rawPath => {
  var [path, maybeSearch] = rawPath.split("?");
  var fixedPath = path === "/" ? "index" : stripSurroundingSlashes(path);
  return "/jacdac-docs" + "/page-data/" + fixedPath + "/page-data.json" + (maybeSearch ? "?" + maybeSearch : "");
};

function doFetch(url, method) {
  if (method === void 0) {
    method = "GET";
  }

  return new Promise(resolve => {
    var req = new XMLHttpRequest();
    req.open(method, url, true);

    req.onreadystatechange = () => {
      if (req.readyState == 4) {
        resolve(req);
      }
    };

    req.send(null);
  });
}

var doesConnectionSupportPrefetch = () => {
  if ("connection" in navigator && typeof navigator.connection !== "undefined") {
    if ((navigator.connection.effectiveType || "").includes("2g")) {
      return false;
    }

    if (navigator.connection.saveData) {
      return false;
    }
  }

  return true;
};

var toPageResources = function toPageResources(pageData, component) {
  if (component === void 0) {
    component = null;
  }

  var page = {
    componentChunkName: pageData.componentChunkName,
    path: pageData.path,
    webpackCompilationHash: pageData.webpackCompilationHash,
    matchPath: pageData.matchPath,
    staticQueryHashes: pageData.staticQueryHashes,
    getServerDataError: pageData.getServerDataError
  };
  return {
    component,
    json: pageData.result,
    page
  };
};

var BaseLoader = /*#__PURE__*/function () {
  function BaseLoader(loadComponent, matchPaths) {
    this.inFlightNetworkRequests = new Map(); // Map of pagePath -> Page. Where Page is an object with: {
    //   status: PageResourceStatus.Success || PageResourceStatus.Error,
    //   payload: PageResources, // undefined if PageResourceStatus.Error
    // }
    // PageResources is {
    //   component,
    //   json: pageData.result,
    //   page: {
    //     componentChunkName,
    //     path,
    //     webpackCompilationHash,
    //     staticQueryHashes
    //   },
    //   staticQueryResults
    // }

    this.pageDb = new Map();
    this.inFlightDb = new Map();
    this.staticQueryDb = {};
    this.pageDataDb = new Map();
    this.isPrefetchQueueRunning = false;
    this.prefetchQueued = [];
    this.prefetchTriggered = new Set();
    this.prefetchCompleted = new Set();
    this.loadComponent = loadComponent;
    (0,find_path/* setMatchPaths */.DS)(matchPaths);
  }

  var _proto = BaseLoader.prototype;

  _proto.memoizedGet = function memoizedGet(url) {
    var inFlightPromise = this.inFlightNetworkRequests.get(url);

    if (!inFlightPromise) {
      inFlightPromise = doFetch(url, "GET");
      this.inFlightNetworkRequests.set(url, inFlightPromise);
    } // Prefer duplication with then + catch over .finally to prevent problems in ie11 + firefox


    return inFlightPromise.then(response => {
      this.inFlightNetworkRequests.delete(url);
      return response;
    }).catch(err => {
      this.inFlightNetworkRequests.delete(url);
      throw err;
    });
  };

  _proto.setApiRunner = function setApiRunner(apiRunner) {
    this.apiRunner = apiRunner;
    this.prefetchDisabled = apiRunner("disableCorePrefetching").some(a => a);
  };

  _proto.fetchPageDataJson = function fetchPageDataJson(loadObj) {
    var {
      pagePath,
      retries = 0
    } = loadObj;
    var url = createPageDataUrl(pagePath);
    return this.memoizedGet(url).then(req => {
      var {
        status,
        responseText
      } = req; // Handle 200

      if (status === 200) {
        try {
          var jsonPayload = JSON.parse(responseText);

          if (jsonPayload.path === undefined) {
            throw new Error("not a valid pageData response");
          }

          var maybeSearch = pagePath.split("?")[1];

          if (maybeSearch && !jsonPayload.path.includes(maybeSearch)) {
            jsonPayload.path += "?" + maybeSearch;
          }

          return Object.assign(loadObj, {
            status: PageResourceStatus.Success,
            payload: jsonPayload
          });
        } catch (err) {// continue regardless of error
        }
      } // Handle 404


      if (status === 404 || status === 200) {
        // If the request was for a 404/500 page and it doesn't exist, we're done
        if (pagePath === "/404.html" || pagePath === "/500.html") {
          return Object.assign(loadObj, {
            status: PageResourceStatus.Error
          });
        } // Need some code here to cache the 404 request. In case
        // multiple loadPageDataJsons result in 404s


        return this.fetchPageDataJson(Object.assign(loadObj, {
          pagePath: "/404.html",
          notFound: true
        }));
      } // handle 500 response (Unrecoverable)


      if (status === 500) {
        return this.fetchPageDataJson(Object.assign(loadObj, {
          pagePath: "/500.html",
          internalServerError: true
        }));
      } // Handle everything else, including status === 0, and 503s. Should retry


      if (retries < 3) {
        return this.fetchPageDataJson(Object.assign(loadObj, {
          retries: retries + 1
        }));
      } // Retried 3 times already, result is an error.


      return Object.assign(loadObj, {
        status: PageResourceStatus.Error
      });
    });
  };

  _proto.loadPageDataJson = function loadPageDataJson(rawPath) {
    var pagePath = (0,find_path/* findPath */.Cj)(rawPath);

    if (this.pageDataDb.has(pagePath)) {
      var pageData = this.pageDataDb.get(pagePath);

      if (true) {
        return Promise.resolve(pageData);
      }
    }

    return this.fetchPageDataJson({
      pagePath
    }).then(pageData => {
      this.pageDataDb.set(pagePath, pageData);
      return pageData;
    });
  };

  _proto.findMatchPath = function findMatchPath(rawPath) {
    return (0,find_path/* findMatchPath */.UD)(rawPath);
  } // TODO check all uses of this and whether they use undefined for page resources not exist
  ;

  _proto.loadPage = function loadPage(rawPath) {
    var pagePath = (0,find_path/* findPath */.Cj)(rawPath);

    if (this.pageDb.has(pagePath)) {
      var page = this.pageDb.get(pagePath);

      if (true) {
        if (page.error) {
          return {
            error: page.error,
            status: page.status
          };
        }

        return Promise.resolve(page.payload);
      }
    }

    if (this.inFlightDb.has(pagePath)) {
      return this.inFlightDb.get(pagePath);
    }

    var inFlightPromise = Promise.all([this.loadAppData(), this.loadPageDataJson(pagePath)]).then(allData => {
      var result = allData[1];

      if (result.status === PageResourceStatus.Error) {
        return {
          status: PageResourceStatus.Error
        };
      }

      var pageData = result.payload;
      var {
        componentChunkName,
        staticQueryHashes = []
      } = pageData;
      var finalResult = {};
      var componentChunkPromise = this.loadComponent(componentChunkName).then(component => {
        finalResult.createdAt = new Date();
        var pageResources;

        if (!component || component instanceof Error) {
          finalResult.status = PageResourceStatus.Error;
          finalResult.error = component;
        } else {
          finalResult.status = PageResourceStatus.Success;

          if (result.notFound === true) {
            finalResult.notFound = true;
          }

          pageData = Object.assign(pageData, {
            webpackCompilationHash: allData[0] ? allData[0].webpackCompilationHash : ""
          });
          pageResources = toPageResources(pageData, component);
        } // undefined if final result is an error


        return pageResources;
      });
      var staticQueryBatchPromise = Promise.all(staticQueryHashes.map(staticQueryHash => {
        // Check for cache in case this static query result has already been loaded
        if (this.staticQueryDb[staticQueryHash]) {
          var jsonPayload = this.staticQueryDb[staticQueryHash];
          return {
            staticQueryHash,
            jsonPayload
          };
        }

        return this.memoizedGet("/jacdac-docs" + "/page-data/sq/d/" + staticQueryHash + ".json").then(req => {
          var jsonPayload = JSON.parse(req.responseText);
          return {
            staticQueryHash,
            jsonPayload
          };
        }).catch(() => {
          throw new Error("We couldn't load \"" + "/jacdac-docs" + "/page-data/sq/d/" + staticQueryHash + ".json\"");
        });
      })).then(staticQueryResults => {
        var staticQueryResultsMap = {};
        staticQueryResults.forEach(_ref => {
          var {
            staticQueryHash,
            jsonPayload
          } = _ref;
          staticQueryResultsMap[staticQueryHash] = jsonPayload;
          this.staticQueryDb[staticQueryHash] = jsonPayload;
        });
        return staticQueryResultsMap;
      });
      return Promise.all([componentChunkPromise, staticQueryBatchPromise]).then(_ref2 => {
        var [pageResources, staticQueryResults] = _ref2;
        var payload;

        if (pageResources) {
          payload = _objectSpread(_objectSpread({}, pageResources), {}, {
            staticQueryResults
          });
          finalResult.payload = payload;
          emitter/* default.emit */.Z.emit("onPostLoadPageResources", {
            page: payload,
            pageResources: payload
          });
        }

        this.pageDb.set(pagePath, finalResult);

        if (finalResult.error) {
          return {
            error: finalResult.error,
            status: finalResult.status
          };
        }

        return payload;
      }) // when static-query fail to load we throw a better error
      .catch(err => {
        return {
          error: err,
          status: PageResourceStatus.Error
        };
      });
    });
    inFlightPromise.then(() => {
      this.inFlightDb.delete(pagePath);
    }).catch(error => {
      this.inFlightDb.delete(pagePath);
      throw error;
    });
    this.inFlightDb.set(pagePath, inFlightPromise);
    return inFlightPromise;
  } // returns undefined if the page does not exists in cache
  ;

  _proto.loadPageSync = function loadPageSync(rawPath, options) {
    if (options === void 0) {
      options = {};
    }

    var pagePath = (0,find_path/* findPath */.Cj)(rawPath);

    if (this.pageDb.has(pagePath)) {
      var _options;

      var pageData = this.pageDb.get(pagePath);

      if (pageData.payload) {
        return pageData.payload;
      }

      if ((_options = options) !== null && _options !== void 0 && _options.withErrorDetails) {
        return {
          error: pageData.error,
          status: pageData.status
        };
      }
    }

    return undefined;
  };

  _proto.shouldPrefetch = function shouldPrefetch(pagePath) {
    // Skip prefetching if we know user is on slow or constrained connection
    if (!doesConnectionSupportPrefetch()) {
      return false;
    } // Check if the page exists.


    if (this.pageDb.has(pagePath)) {
      return false;
    }

    return true;
  };

  _proto.prefetch = function prefetch(pagePath) {
    if (!this.shouldPrefetch(pagePath)) {
      return {
        then: resolve => resolve(false),
        abort: () => {}
      };
    }

    if (this.prefetchTriggered.has(pagePath)) {
      return {
        then: resolve => resolve(true),
        abort: () => {}
      };
    }

    var defer = {
      resolve: null,
      reject: null,
      promise: null
    };
    defer.promise = new Promise((resolve, reject) => {
      defer.resolve = resolve;
      defer.reject = reject;
    });
    this.prefetchQueued.push([pagePath, defer]);
    var abortC = new AbortController();
    abortC.signal.addEventListener("abort", () => {
      var index = this.prefetchQueued.findIndex(_ref3 => {
        var [p] = _ref3;
        return p === pagePath;
      }); // remove from the queue

      if (index !== -1) {
        this.prefetchQueued.splice(index, 1);
      }
    });

    if (!this.isPrefetchQueueRunning) {
      this.isPrefetchQueueRunning = true;
      setTimeout(() => {
        this._processNextPrefetchBatch();
      }, 3000);
    }

    return {
      then: (resolve, reject) => defer.promise.then(resolve, reject),
      abort: abortC.abort.bind(abortC)
    };
  };

  _proto._processNextPrefetchBatch = function _processNextPrefetchBatch() {
    var idleCallback = window.requestIdleCallback || (cb => setTimeout(cb, 0));

    idleCallback(() => {
      var toPrefetch = this.prefetchQueued.splice(0, 4);
      var prefetches = Promise.all(toPrefetch.map(_ref4 => {
        var [pagePath, dPromise] = _ref4; // Tell plugins with custom prefetching logic that they should start
        // prefetching this path.

        if (!this.prefetchTriggered.has(pagePath)) {
          this.apiRunner("onPrefetchPathname", {
            pathname: pagePath
          });
          this.prefetchTriggered.add(pagePath);
        } // If a plugin has disabled core prefetching, stop now.


        if (this.prefetchDisabled) {
          return dPromise.resolve(false);
        }

        return this.doPrefetch((0,find_path/* findPath */.Cj)(pagePath)).then(() => {
          if (!this.prefetchCompleted.has(pagePath)) {
            this.apiRunner("onPostPrefetchPathname", {
              pathname: pagePath
            });
            this.prefetchCompleted.add(pagePath);
          }

          dPromise.resolve(true);
        });
      }));

      if (this.prefetchQueued.length) {
        prefetches.then(() => {
          setTimeout(() => {
            this._processNextPrefetchBatch();
          }, 3000);
        });
      } else {
        this.isPrefetchQueueRunning = false;
      }
    });
  };

  _proto.doPrefetch = function doPrefetch(pagePath) {
    var pageDataUrl = createPageDataUrl(pagePath);
    return _cache_prefetch(pageDataUrl, {
      crossOrigin: "anonymous",
      as: "fetch"
    }).then(() => // This was just prefetched, so will return a response from
    // the cache instead of making another request to the server
    this.loadPageDataJson(pagePath));
  };

  _proto.hovering = function hovering(rawPath) {
    this.loadPage(rawPath);
  };

  _proto.getResourceURLsForPathname = function getResourceURLsForPathname(rawPath) {
    var pagePath = (0,find_path/* findPath */.Cj)(rawPath);
    var page = this.pageDataDb.get(pagePath);

    if (page) {
      var pageResources = toPageResources(page.payload);
      return [].concat((0,toConsumableArray/* default */.Z)(createComponentUrls(pageResources.page.componentChunkName)), [createPageDataUrl(pagePath)]);
    } else {
      return null;
    }
  };

  _proto.isPageNotFound = function isPageNotFound(rawPath) {
    var pagePath = (0,find_path/* findPath */.Cj)(rawPath);
    var page = this.pageDb.get(pagePath);
    return !page || page.notFound;
  };

  _proto.loadAppData = function loadAppData(retries) {
    if (retries === void 0) {
      retries = 0;
    }

    return this.memoizedGet("/jacdac-docs" + "/page-data/app-data.json").then(req => {
      var {
        status,
        responseText
      } = req;
      var appData;

      if (status !== 200 && retries < 3) {
        // Retry 3 times incase of non-200 responses
        return this.loadAppData(retries + 1);
      } // Handle 200


      if (status === 200) {
        try {
          var jsonPayload = JSON.parse(responseText);

          if (jsonPayload.webpackCompilationHash === undefined) {
            throw new Error("not a valid app-data response");
          }

          appData = jsonPayload;
        } catch (err) {// continue regardless of error
        }
      }

      return appData;
    });
  };

  return BaseLoader;
}();

var createComponentUrls = componentChunkName => (window.___chunkMapping[componentChunkName] || []).map(chunk => "/jacdac-docs" + chunk);

var ProdLoader = /*#__PURE__*/function (_BaseLoader) {
  (0,inheritsLoose/* default */.Z)(ProdLoader, _BaseLoader);

  function ProdLoader(asyncRequires, matchPaths, pageData) {
    var _this;

    var loadComponent = chunkName => {
      if (!asyncRequires.components[chunkName]) {
        throw new Error("We couldn't find the correct component chunk with the name " + chunkName);
      }

      return asyncRequires.components[chunkName]().then(preferDefault) // loader will handle the case when component is error
      .catch(err => err);
    };

    _this = _BaseLoader.call(this, loadComponent, matchPaths) || this;

    if (pageData) {
      _this.pageDataDb.set((0,find_path/* findPath */.Cj)(pageData.path), {
        pagePath: pageData.path,
        payload: pageData,
        status: "success"
      });
    }

    return _this;
  }

  var _proto2 = ProdLoader.prototype;

  _proto2.doPrefetch = function doPrefetch(pagePath) {
    return _BaseLoader.prototype.doPrefetch.call(this, pagePath).then(result => {
      if (result.status !== PageResourceStatus.Success) {
        return Promise.resolve();
      }

      var pageData = result.payload;
      var chunkName = pageData.componentChunkName;
      var componentUrls = createComponentUrls(chunkName);
      return Promise.all(componentUrls.map(_cache_prefetch)).then(() => pageData);
    });
  };

  _proto2.loadPageDataJson = function loadPageDataJson(rawPath) {
    return _BaseLoader.prototype.loadPageDataJson.call(this, rawPath).then(data => {
      if (data.notFound) {
        // check if html file exist using HEAD request:
        // if it does we should navigate to it instead of showing 404
        return doFetch(rawPath, "HEAD").then(req => {
          if (req.status === 200) {
            // page (.html file) actually exist (or we asked for 404 )
            // returning page resources status as errored to trigger
            // regular browser navigation to given page
            return {
              status: PageResourceStatus.Error
            };
          } // if HEAD request wasn't 200, return notFound result
          // and show 404 page


          return data;
        });
      }

      return data;
    });
  };

  return ProdLoader;
}(BaseLoader);
var instance;
var setLoader = _loader => {
  instance = _loader;
};
var publicLoader = {
  enqueue: rawPath => instance.prefetch(rawPath),
  // Real methods
  getResourceURLsForPathname: rawPath => instance.getResourceURLsForPathname(rawPath),
  loadPage: rawPath => instance.loadPage(rawPath),
  // TODO add deprecation to v4 so people use withErrorDetails and then we can remove in v5 and change default behaviour
  loadPageSync: function loadPageSync(rawPath, options) {
    if (options === void 0) {
      options = {};
    }

    return instance.loadPageSync(rawPath, options);
  },
  prefetch: rawPath => instance.prefetch(rawPath),
  isPageNotFound: rawPath => instance.isPageNotFound(rawPath),
  hovering: rawPath => instance.hovering(rawPath),
  loadAppData: () => instance.loadAppData()
};
/* harmony default export */ var loader = (publicLoader);
function getStaticQueryResults() {
  if (instance) {
    return instance.staticQueryDb;
  } else {
    return {};
  }
}

/***/ }),

/***/ 80584:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4942);
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94578);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _api_runner_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41535);
/* harmony import */ var _find_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35591);



function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}



 // Renders page

var PageRenderer = /*#__PURE__*/function (_React$Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(PageRenderer, _React$Component);

  function PageRenderer() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = PageRenderer.prototype;

  _proto.render = function render() {
    var props = _objectSpread(_objectSpread({}, this.props), {}, {
      params: _objectSpread(_objectSpread({}, (0,_find_path__WEBPACK_IMPORTED_MODULE_3__/* .grabMatchParams */ .GA)(this.props.location.pathname)), this.props.pageResources.json.pageContext.__params)
    });

    var pageElement = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(this.props.pageResources.component, _objectSpread(_objectSpread({}, props), {}, {
      key: this.props.path || this.props.pageResources.page.path
    }));
    var wrappedPage = (0,_api_runner_browser__WEBPACK_IMPORTED_MODULE_2__/* .apiRunner */ .h)("wrapPageElement", {
      element: pageElement,
      props
    }, pageElement, _ref => {
      var {
        result
      } = _ref;
      return {
        element: result,
        props
      };
    }).pop();
    return wrappedPage;
  };

  return PageRenderer;
}(react__WEBPACK_IMPORTED_MODULE_1__.Component);

/* harmony default export */ __webpack_exports__["Z"] = (PageRenderer);

/***/ }),

/***/ 80592:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(94578);
// EXTERNAL MODULE: ./.cache/api-runner-browser.js
var api_runner_browser = __webpack_require__(41535);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73935);
// EXTERNAL MODULE: ./node_modules/@gatsbyjs/reach-router/es/index.js + 2 modules
var es = __webpack_require__(29499);
// EXTERNAL MODULE: ./node_modules/gatsby-react-router-scroll/index.js
var gatsby_react_router_scroll = __webpack_require__(19679);
// EXTERNAL MODULE: ./.cache/gatsby-browser-entry.js
var gatsby_browser_entry = __webpack_require__(35313);
// EXTERNAL MODULE: ./.cache/loader.js + 1 modules
var loader = __webpack_require__(18854);
// EXTERNAL MODULE: ./.cache/redirect-utils.js + 1 modules
var redirect_utils = __webpack_require__(56501);
// EXTERNAL MODULE: ./.cache/emitter.js + 1 modules
var emitter = __webpack_require__(22615);
;// CONCATENATED MODULE: ./.cache/route-announcer-props.js
// This is extracted to separate module because it's shared
// between browser and SSR code
var RouteAnnouncerProps = {
  id: "gatsby-announcer",
  style: {
    position: "absolute",
    top: 0,
    width: 1,
    height: 1,
    padding: 0,
    overflow: "hidden",
    clip: "rect(0, 0, 0, 0)",
    whiteSpace: "nowrap",
    border: 0
  },
  "aria-live": "assertive",
  "aria-atomic": "true"
};
// EXTERNAL MODULE: ./node_modules/@gatsbyjs/reach-router/lib/history.js
var lib_history = __webpack_require__(22393);
// EXTERNAL MODULE: ./node_modules/gatsby-link/index.js
var gatsby_link = __webpack_require__(38037);
;// CONCATENATED MODULE: ./.cache/navigation.js











function maybeRedirect(pathname) {
  var redirect = (0,redirect_utils/* maybeGetBrowserRedirect */.J)(pathname);
  var {
    hash,
    search
  } = window.location;

  if (redirect != null) {
    window.___replace(redirect.toPath + search + hash);

    return true;
  } else {
    return false;
  }
} // Catch unhandled chunk loading errors and force a restart of the app.


var nextRoute = "";
window.addEventListener("unhandledrejection", event => {
  if (/loading chunk \d* failed./i.test(event.reason)) {
    if (nextRoute) {
      window.location.pathname = nextRoute;
    }
  }
});

var onPreRouteUpdate = (location, prevLocation) => {
  if (!maybeRedirect(location.pathname)) {
    nextRoute = location.pathname;
    (0,api_runner_browser/* apiRunner */.h)("onPreRouteUpdate", {
      location,
      prevLocation
    });
  }
};

var onRouteUpdate = (location, prevLocation) => {
  if (!maybeRedirect(location.pathname)) {
    (0,api_runner_browser/* apiRunner */.h)("onRouteUpdate", {
      location,
      prevLocation
    });

    if (false) {}
  }
};

var navigation_navigate = function navigate(to, options) {
  if (options === void 0) {
    options = {};
  } // Support forward/backward navigation with numbers
  // navigate(-2) (jumps back 2 history steps)
  // navigate(2)  (jumps forward 2 history steps)


  if (typeof to === "number") {
    lib_history/* globalHistory.navigate */.V5.navigate(to);
    return;
  }

  var {
    pathname,
    search,
    hash
  } = (0,gatsby_link/* parsePath */.cP)(to);
  var redirect = (0,redirect_utils/* maybeGetBrowserRedirect */.J)(pathname); // If we're redirecting, just replace the passed in pathname
  // to the one we want to redirect to.

  if (redirect) {
    to = redirect.toPath + search + hash;
  } // If we had a service worker update, no matter the path, reload window and
  // reset the pathname whitelist


  if (window.___swUpdated) {
    window.location = pathname + search + hash;
    return;
  } // Start a timer to wait for a second before transitioning and showing a
  // loader in case resources aren't around yet.


  var timeoutId = setTimeout(() => {
    emitter/* default.emit */.Z.emit("onDelayedLoadPageResources", {
      pathname
    });
    (0,api_runner_browser/* apiRunner */.h)("onRouteUpdateDelayed", {
      location: window.location
    });
  }, 1000);
  loader/* default.loadPage */.ZP.loadPage(pathname + search).then(pageResources => {
    // If no page resources, then refresh the page
    // Do this, rather than simply `window.location.reload()`, so that
    // pressing the back/forward buttons work - otherwise when pressing
    // back, the browser will just change the URL and expect JS to handle
    // the change, which won't always work since it might not be a Gatsby
    // page.
    if (!pageResources || pageResources.status === loader/* PageResourceStatus.Error */.uQ.Error) {
      window.history.replaceState({}, "", location.href);
      window.location = pathname;
      clearTimeout(timeoutId);
      return;
    } // If the loaded page has a different compilation hash to the
    // window, then a rebuild has occurred on the server. Reload.


    if ( true && pageResources) {
      if (pageResources.page.webpackCompilationHash !== window.___webpackCompilationHash) {
        // Purge plugin-offline cache
        if ("serviceWorker" in navigator && navigator.serviceWorker.controller !== null && navigator.serviceWorker.controller.state === "activated") {
          navigator.serviceWorker.controller.postMessage({
            gatsbyApi: "clearPathResources"
          });
        }

        window.location = pathname + search + hash;
      }
    }

    (0,es.navigate)(to, options);
    clearTimeout(timeoutId);
  });
};

function shouldUpdateScroll(prevRouterProps, _ref) {
  var {
    location
  } = _ref;
  var {
    pathname,
    hash
  } = location;
  var results = (0,api_runner_browser/* apiRunner */.h)("shouldUpdateScroll", {
    prevRouterProps,
    // `pathname` for backwards compatibility
    pathname,
    routerProps: {
      location
    },
    getSavedScrollPosition: args => [0, // FIXME this is actually a big code smell, we should fix this
    // eslint-disable-next-line @babel/no-invalid-this
    this._stateStorage.read(args, args.key)]
  });

  if (results.length > 0) {
    // Use the latest registered shouldUpdateScroll result, this allows users to override plugin's configuration
    // @see https://github.com/gatsbyjs/gatsby/issues/12038
    return results[results.length - 1];
  }

  if (prevRouterProps) {
    var {
      location: {
        pathname: oldPathname
      }
    } = prevRouterProps;

    if (oldPathname === pathname) {
      // Scroll to element if it exists, if it doesn't, or no hash is provided,
      // scroll to top.
      return hash ? decodeURI(hash.slice(1)) : [0, 0];
    }
  }

  return true;
}

function init() {
  // The "scroll-behavior" package expects the "action" to be on the location
  // object so let's copy it over.
  lib_history/* globalHistory.listen */.V5.listen(args => {
    args.location.action = args.action;
  });

  window.___push = to => navigation_navigate(to, {
    replace: false
  });

  window.___replace = to => navigation_navigate(to, {
    replace: true
  });

  window.___navigate = (to, options) => navigation_navigate(to, options);
}

var RouteAnnouncer = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(RouteAnnouncer, _React$Component);

  function RouteAnnouncer(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.announcementRef = /*#__PURE__*/react.createRef();
    return _this;
  }

  var _proto = RouteAnnouncer.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, nextProps) {
    requestAnimationFrame(() => {
      var pageName = "new page at " + this.props.location.pathname;

      if (document.title) {
        pageName = document.title;
      }

      var pageHeadings = document.querySelectorAll("#gatsby-focus-wrapper h1");

      if (pageHeadings && pageHeadings.length) {
        pageName = pageHeadings[0].textContent;
      }

      var newAnnouncement = "Navigated to " + pageName;

      if (this.announcementRef.current) {
        var oldAnnouncement = this.announcementRef.current.innerText;

        if (oldAnnouncement !== newAnnouncement) {
          this.announcementRef.current.innerText = newAnnouncement;
        }
      }
    });
  };

  _proto.render = function render() {
    return /*#__PURE__*/react.createElement("div", Object.assign({}, RouteAnnouncerProps, {
      ref: this.announcementRef
    }));
  };

  return RouteAnnouncer;
}(react.Component);

var compareLocationProps = (prevLocation, nextLocation) => {
  var _prevLocation$state, _nextLocation$state;

  if (prevLocation.href !== nextLocation.href) {
    return true;
  }

  if ((prevLocation === null || prevLocation === void 0 ? void 0 : (_prevLocation$state = prevLocation.state) === null || _prevLocation$state === void 0 ? void 0 : _prevLocation$state.key) !== (nextLocation === null || nextLocation === void 0 ? void 0 : (_nextLocation$state = nextLocation.state) === null || _nextLocation$state === void 0 ? void 0 : _nextLocation$state.key)) {
    return true;
  }

  return false;
}; // Fire on(Pre)RouteUpdate APIs


var RouteUpdates = /*#__PURE__*/function (_React$Component2) {
  (0,inheritsLoose/* default */.Z)(RouteUpdates, _React$Component2);

  function RouteUpdates(props) {
    var _this2;

    _this2 = _React$Component2.call(this, props) || this;
    onPreRouteUpdate(props.location, null);
    return _this2;
  }

  var _proto2 = RouteUpdates.prototype;

  _proto2.componentDidMount = function componentDidMount() {
    onRouteUpdate(this.props.location, null);
  };

  _proto2.shouldComponentUpdate = function shouldComponentUpdate(prevProps) {
    if (compareLocationProps(prevProps.location, this.props.location)) {
      onPreRouteUpdate(this.props.location, prevProps.location);
      return true;
    }

    return false;
  };

  _proto2.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (compareLocationProps(prevProps.location, this.props.location)) {
      onRouteUpdate(this.props.location, prevProps.location);
    }
  };

  _proto2.render = function render() {
    return /*#__PURE__*/react.createElement(react.Fragment, null, this.props.children, /*#__PURE__*/react.createElement(RouteAnnouncer, {
      location: location
    }));
  };

  return RouteUpdates;
}(react.Component);


// EXTERNAL MODULE: ./.cache/page-renderer.js
var page_renderer = __webpack_require__(80584);
// EXTERNAL MODULE: ./.cache/_this_is_virtual_fs_path_/$virtual/async-requires.js
var async_requires = __webpack_require__(41204);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
;// CONCATENATED MODULE: ./node_modules/shallow-compare/es/index.js
// Pulled from react-compat
// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349
function shallowDiffers(a, b) {
  for (var i in a) {
    if (!(i in b)) return true;
  }for (var _i in b) {
    if (a[_i] !== b[_i]) return true;
  }return false;
}

/* harmony default export */ var shallow_compare_es = (function (instance, nextProps, nextState) {
  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);
});
;// CONCATENATED MODULE: ./.cache/ensure-resources.js



function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,defineProperty/* default */.Z)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}





var EnsureResources = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(EnsureResources, _React$Component);

  function EnsureResources(props) {
    var _this;

    _this = _React$Component.call(this) || this;
    var {
      location,
      pageResources
    } = props;
    _this.state = {
      location: _objectSpread({}, location),
      pageResources: pageResources || loader/* default.loadPageSync */.ZP.loadPageSync(location.pathname + location.search, {
        withErrorDetails: true
      })
    };
    return _this;
  }

  EnsureResources.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var {
      location
    } = _ref;

    if (prevState.location.href !== location.href) {
      var pageResources = loader/* default.loadPageSync */.ZP.loadPageSync(location.pathname + location.search, {
        withErrorDetails: true
      });
      return {
        pageResources,
        location: _objectSpread({}, location)
      };
    }

    return {
      location: _objectSpread({}, location)
    };
  };

  var _proto = EnsureResources.prototype;

  _proto.loadResources = function loadResources(rawPath) {
    loader/* default.loadPage */.ZP.loadPage(rawPath).then(pageResources => {
      if (pageResources && pageResources.status !== loader/* PageResourceStatus.Error */.uQ.Error) {
        this.setState({
          location: _objectSpread({}, window.location),
          pageResources
        });
      } else {
        window.history.replaceState({}, "", location.href);
        window.location = rawPath;
      }
    });
  };

  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
    // Always return false if we're missing resources.
    if (!nextState.pageResources) {
      this.loadResources(nextProps.location.pathname + nextProps.location.search);
      return false;
    }

    if (false) {} // Check if the component or json have changed.


    if (this.state.pageResources !== nextState.pageResources) {
      return true;
    }

    if (this.state.pageResources.component !== nextState.pageResources.component) {
      return true;
    }

    if (this.state.pageResources.json !== nextState.pageResources.json) {
      return true;
    } // Check if location has changed on a page using internal routing
    // via matchPath configuration.


    if (this.state.location.key !== nextState.location.key && nextState.pageResources.page && (nextState.pageResources.page.matchPath || nextState.pageResources.page.path)) {
      return true;
    }

    return shallow_compare_es(this, nextProps, nextState);
  };

  _proto.render = function render() {
    if (false) { var message, _this$state$pageResou; }

    return this.props.children(this.state);
  };

  return EnsureResources;
}(react.Component);

/* harmony default export */ var ensure_resources = (EnsureResources);
// EXTERNAL MODULE: ./.cache/strip-prefix.js
var strip_prefix = __webpack_require__(70412);
;// CONCATENATED MODULE: ./.cache/_this_is_virtual_fs_path_/$virtual/match-paths.json
var match_paths_namespaceObject = [];
;// CONCATENATED MODULE: ./.cache/production-app.js













 // Generated during bootstrap


var production_app_loader = new loader/* ProdLoader */.kL(async_requires, match_paths_namespaceObject, window.pageData);
(0,loader/* setLoader */.N1)(production_app_loader);
production_app_loader.setApiRunner(api_runner_browser/* apiRunner */.h);
window.asyncRequires = async_requires;
window.___emitter = emitter/* default */.Z;
window.___loader = loader/* publicLoader */.jN;
init();
(0,api_runner_browser/* apiRunnerAsync */.I)("onClientEntry").then(() => {
  // Let plugins register a service worker. The plugin just needs
  // to return true.
  if ((0,api_runner_browser/* apiRunner */.h)("registerServiceWorker").filter(Boolean).length > 0) {
    __webpack_require__(22920);
  } // In gatsby v2 if Router is used in page using matchPaths
  // paths need to contain full path.
  // For example:
  //   - page have `/app/*` matchPath
  //   - inside template user needs to use `/app/xyz` as path
  // Resetting `basepath`/`baseuri` keeps current behaviour
  // to not introduce breaking change.
  // Remove this in v3


  var RouteHandler = props => /*#__PURE__*/react.createElement(es.BaseContext.Provider, {
    value: {
      baseuri: "/",
      basepath: "/"
    }
  }, /*#__PURE__*/react.createElement(page_renderer/* default */.Z, props));

  var DataContext = /*#__PURE__*/react.createContext({});

  var GatsbyRoot = /*#__PURE__*/function (_React$Component) {
    (0,inheritsLoose/* default */.Z)(GatsbyRoot, _React$Component);

    function GatsbyRoot() {
      return _React$Component.apply(this, arguments) || this;
    }

    var _proto = GatsbyRoot.prototype;

    _proto.render = function render() {
      var {
        children
      } = this.props;
      return /*#__PURE__*/react.createElement(es.Location, null, _ref => {
        var {
          location
        } = _ref;
        return /*#__PURE__*/react.createElement(ensure_resources, {
          location: location
        }, _ref2 => {
          var {
            pageResources,
            location
          } = _ref2;
          var staticQueryResults = (0,loader/* getStaticQueryResults */.hs)();
          return /*#__PURE__*/react.createElement(gatsby_browser_entry.StaticQueryContext.Provider, {
            value: staticQueryResults
          }, /*#__PURE__*/react.createElement(DataContext.Provider, {
            value: {
              pageResources,
              location
            }
          }, children));
        });
      });
    };

    return GatsbyRoot;
  }(react.Component);

  var LocationHandler = /*#__PURE__*/function (_React$Component2) {
    (0,inheritsLoose/* default */.Z)(LocationHandler, _React$Component2);

    function LocationHandler() {
      return _React$Component2.apply(this, arguments) || this;
    }

    var _proto2 = LocationHandler.prototype;

    _proto2.render = function render() {
      return /*#__PURE__*/react.createElement(DataContext.Consumer, null, _ref3 => {
        var {
          pageResources,
          location
        } = _ref3;
        return /*#__PURE__*/react.createElement(RouteUpdates, {
          location: location
        }, /*#__PURE__*/react.createElement(gatsby_react_router_scroll/* ScrollContext */.$C, {
          location: location,
          shouldUpdateScroll: shouldUpdateScroll
        }, /*#__PURE__*/react.createElement(es.Router, {
          basepath: "/jacdac-docs",
          location: location,
          id: "gatsby-focus-wrapper"
        }, /*#__PURE__*/react.createElement(RouteHandler, Object.assign({
          path: pageResources.page.path === "/404.html" || pageResources.page.path === "/500.html" ? (0,strip_prefix/* default */.Z)(location.pathname, "/jacdac-docs") : encodeURI((pageResources.page.matchPath || pageResources.page.path).split("?")[0])
        }, this.props, {
          location: location,
          pageResources: pageResources
        }, pageResources.json)))));
      });
    };

    return LocationHandler;
  }(react.Component);

  var {
    pagePath,
    location: browserLoc
  } = window; // Explicitly call navigate if the canonical path (window.pagePath)
  // is different to the browser path (window.location.pathname). SSR
  // page paths might include search params, while SSG and DSG won't.
  // If page path include search params we also compare query params.
  // But only if NONE of the following conditions hold:
  //
  // - The url matches a client side route (page.matchPath)
  // - it's a 404 page
  // - it's the offline plugin shell (/offline-plugin-app-shell-fallback/)

  if (pagePath && "/jacdac-docs" + pagePath !== browserLoc.pathname + (pagePath.includes("?") ? browserLoc.search : "") && !(production_app_loader.findMatchPath((0,strip_prefix/* default */.Z)(browserLoc.pathname, "/jacdac-docs")) || pagePath.match(/^\/(404|500)(\/?|.html)$/) || pagePath.match(/^\/offline-plugin-app-shell-fallback\/?$/))) {
    (0,es.navigate)("/jacdac-docs" + pagePath + (!pagePath.includes("?") ? browserLoc.search : "") + browserLoc.hash, {
      replace: true
    });
  }

  loader/* publicLoader.loadPage */.jN.loadPage(browserLoc.pathname + browserLoc.search).then(page => {
    if (!page || page.status === loader/* PageResourceStatus.Error */.uQ.Error) {
      var message = "page resources for " + browserLoc.pathname + " not found. Not rendering React"; // if the chunk throws an error we want to capture the real error
      // This should help with https://github.com/gatsbyjs/gatsby/issues/19618

      if (page && page.error) {
        console.error(message);
        throw page.error;
      }

      throw new Error(message);
    }

    window.___webpackCompilationHash = page.page.webpackCompilationHash;
    var SiteRoot = (0,api_runner_browser/* apiRunner */.h)("wrapRootElement", {
      element: /*#__PURE__*/react.createElement(LocationHandler, null)
    }, /*#__PURE__*/react.createElement(LocationHandler, null), _ref4 => {
      var {
        result
      } = _ref4;
      return {
        element: result
      };
    }).pop();

    var App = function App() {
      var onClientEntryRanRef = react.useRef(false);
      react.useEffect(() => {
        if (!onClientEntryRanRef.current) {
          onClientEntryRanRef.current = true;

          if (performance.mark) {
            performance.mark("onInitialClientRender");
          }

          (0,api_runner_browser/* apiRunner */.h)("onInitialClientRender");
        }
      }, []);
      return /*#__PURE__*/react.createElement(GatsbyRoot, null, SiteRoot);
    };

    var renderer = (0,api_runner_browser/* apiRunner */.h)("replaceHydrateFunction", undefined, react_dom.hydrateRoot ? react_dom.hydrateRoot : react_dom.hydrate)[0];

    function runRender() {
      var rootElement = typeof window !== "undefined" ? document.getElementById("___gatsby") : null;

      if (renderer === react_dom.hydrateRoot) {
        renderer(rootElement, /*#__PURE__*/react.createElement(App, null));
      } else {
        renderer( /*#__PURE__*/react.createElement(App, null), rootElement);
      }
    } // https://github.com/madrobby/zepto/blob/b5ed8d607f67724788ec9ff492be297f64d47dfc/src/zepto.js#L439-L450
    // TODO remove IE 10 support


    var doc = document;

    if (doc.readyState === "complete" || doc.readyState !== "loading" && !doc.documentElement.doScroll) {
      setTimeout(function () {
        runRender();
      }, 0);
    } else {
      var handler = function handler() {
        doc.removeEventListener("DOMContentLoaded", handler, false);
        window.removeEventListener("load", handler, false);
        runRender();
      };

      doc.addEventListener("DOMContentLoaded", handler, false);
      window.addEventListener("load", handler, false);
    }
  });
});

/***/ }),

/***/ 19644:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4942);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18854);
/* harmony import */ var _page_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80584);


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}





var ProdPageRenderer = _ref => {
  var {
    location
  } = _ref;
  var pageResources = _loader__WEBPACK_IMPORTED_MODULE_2__/* ["default"].loadPageSync */ .ZP.loadPageSync(location.pathname);

  if (!pageResources) {
    return null;
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_page_renderer__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, _objectSpread({
    location,
    pageResources
  }, pageResources.json));
};

/* harmony default export */ __webpack_exports__["default"] = (ProdPageRenderer);

/***/ }),

/***/ 57625:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var preferDefault = m => m && m.default || m;

if (false) {} else if (true) {
  module.exports = preferDefault(__webpack_require__(19644));
} else {}

/***/ }),

/***/ 11507:
/***/ (function(__unused_webpack_module, exports) {

exports.O = Component => Component;

/***/ }),

/***/ 56501:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "J": function() { return /* binding */ maybeGetBrowserRedirect; }
});

;// CONCATENATED MODULE: ./.cache/redirects.json
var redirects_namespaceObject = [];
;// CONCATENATED MODULE: ./.cache/redirect-utils.js
 // Convert to a map for faster lookup in maybeRedirect()

var redirectMap = new Map();
var redirectIgnoreCaseMap = new Map();
redirects_namespaceObject.forEach(redirect => {
  if (redirect.ignoreCase) {
    redirectIgnoreCaseMap.set(redirect.fromPath, redirect);
  } else {
    redirectMap.set(redirect.fromPath, redirect);
  }
});
function maybeGetBrowserRedirect(pathname) {
  var redirect = redirectMap.get(pathname);

  if (!redirect) {
    redirect = redirectIgnoreCaseMap.get(pathname.toLowerCase());
  }

  return redirect;
}

/***/ }),

/***/ 22920:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _api_runner_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41535);


if (window.location.protocol !== "https:" && window.location.hostname !== "localhost") {
  console.error("Service workers can only be used over HTTPS, or on localhost for development");
} else if ("serviceWorker" in navigator) {
  navigator.serviceWorker.register("/jacdac-docs" + "/sw.js").then(function (reg) {
    reg.addEventListener("updatefound", () => {
      (0,_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__/* .apiRunner */ .h)("onServiceWorkerUpdateFound", {
        serviceWorker: reg
      }); // The updatefound event implies that reg.installing is set; see
      // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event

      var installingWorker = reg.installing;
      console.log("installingWorker", installingWorker);
      installingWorker.addEventListener("statechange", () => {
        switch (installingWorker.state) {
          case "installed":
            if (navigator.serviceWorker.controller) {
              // At this point, the old content will have been purged and the fresh content will
              // have been added to the cache.
              // We set a flag so Gatsby Link knows to refresh the page on next navigation attempt
              window.___swUpdated = true; // We call the onServiceWorkerUpdateReady API so users can show update prompts.

              (0,_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__/* .apiRunner */ .h)("onServiceWorkerUpdateReady", {
                serviceWorker: reg
              }); // If resources failed for the current page, reload.

              if (window.___failedResources) {
                console.log("resources failed, SW updated - reloading");
                window.location.reload();
              }
            } else {
              // At this point, everything has been precached.
              // It's the perfect time to display a "Content is cached for offline use." message.
              console.log("Content is now available offline!"); // Post to service worker that install is complete.
              // Delay to allow time for the event listener to be added --
              // otherwise fetch is called too soon and resources aren't cached.

              (0,_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__/* .apiRunner */ .h)("onServiceWorkerInstalled", {
                serviceWorker: reg
              });
            }

            break;

          case "redundant":
            console.error("The installing service worker became redundant.");
            (0,_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__/* .apiRunner */ .h)("onServiceWorkerRedundant", {
              serviceWorker: reg
            });
            break;

          case "activated":
            (0,_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__/* .apiRunner */ .h)("onServiceWorkerActive", {
              serviceWorker: reg
            });
            break;
        }
      });
    });
  }).catch(function (e) {
    console.error("Error during service worker registration:", e);
  });
}

/***/ }),

/***/ 70412:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ stripPrefix; }
/* harmony export */ });
/**
 * Remove a prefix from a string. Return the input string if the given prefix
 * isn't found.
 */
function stripPrefix(str, prefix) {
  if (prefix === void 0) {
    prefix = "";
  }

  if (!prefix) {
    return str;
  }

  if (str === prefix) {
    return "/";
  }

  if (str.startsWith(prefix + "/")) {
    return str.slice(prefix.length);
  }

  return str;
}

/***/ }),

/***/ 40744:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onRouteUpdate": function() { return /* binding */ onRouteUpdate; },
/* harmony export */   "onServiceWorkerUpdateReady": function() { return /* binding */ onServiceWorkerUpdateReady; },
/* harmony export */   "wrapPageElement": function() { return /* binding */ wrapPageElement; },
/* harmony export */   "onInitialClientRender": function() { return /* binding */ onInitialClientRender; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15861);
/* harmony import */ var _src_components_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12159);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73935);




var UPDATE_DEBOUNCE = 5000;
var lastUpdate = Date.now();

function tryUpdate(force) {
  var now = Date.now();
  if (now - lastUpdate < UPDATE_DEBOUNCE) return;
  lastUpdate = now;
  setTimeout( /*#__PURE__*/(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* () {
    var reg = yield navigator.serviceWorker.getRegistration();
    if (reg) reg.update();else if (force && window.navigator.onLine && !/http:\/\/localhost/.test(window.location.href)) {
      console.debug("jacdac: check for updates");

      try {
        var req = yield fetch("/jacdac-docs/version.json");

        if (!req.ok) {
          console.debug("fetch version.json failed, probably offline");
          return;
        }

        var version = yield req.json();
        console.log("version info", {
          version,
          sha: window.analytics.sha
        });

        if (version && version.sha && window.analytics && version.sha !== window.analytics.sha) {
          console.warn("web app updated " + version.sha + " !== " + window.analytics.sha);
          window.location.reload();
        }
      } catch (e) {
        console.error(e);
      }
    }
  }), UPDATE_DEBOUNCE - 1000);
}

var onRouteUpdate = /*#__PURE__*/function () {
  var _ref3 = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(function* (_ref2, options) {
    var {
      location
    } = _ref2;
    if (window.analytics && window.analytics.page) window.analytics.page();
    var reg = yield navigator.serviceWorker.getRegistration();
    if (reg) reg.update();else tryUpdate();
  });

  return function onRouteUpdate(_x, _x2) {
    return _ref3.apply(this, arguments);
  };
}();
var onServiceWorkerUpdateReady = () => {
  // force reload
  console.debug("offline: update ready, reloading...");
  window.location.reload(true);
};
var wrapPageElement = _src_components_layout__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP;
window.addEventListener("unhandledrejection", event => {
  if (/loading chunk \d* failed/i.test(event.reason)) {
    console.log("loading chunk failed, trying to update...");
    tryUpdate(true);
  }
}); // inject React Axe into DOM tree at development time

var onInitialClientRender = () => {
  var activeEnv = ({}).GATSBY_ACTIVE_ENV || "production" || 0;
  var isDev = activeEnv === "development";

  if (isDev) {
    console.log("axe: injecting into DOM");
    Promise.all(/* import() */[__webpack_require__.e(209), __webpack_require__.e(6075)]).then(__webpack_require__.t.bind(__webpack_require__, 19547, 23)).then(reactAxe => {
      reactAxe.default(react__WEBPACK_IMPORTED_MODULE_1__, react_dom__WEBPACK_IMPORTED_MODULE_2__, 1000, {});
    });
  }
};

/***/ }),

/***/ 36176:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "zx": function() { return /* reexport safe */ gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__.zx; },
/* harmony export */   "MU": function() { return /* reexport safe */ gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__.MU; },
/* harmony export */   "hU": function() { return /* reexport safe */ gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__.hU; },
/* harmony export */   "rU": function() { return /* reexport safe */ gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__.rU; }
/* harmony export */ });
/* harmony import */ var gatsby_material_ui_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13883);


/***/ }),

/***/ 63558:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Home__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(96497);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Home: _src_components_home_Home__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 41612:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_ui_DownloadFirmwareButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50192);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  DownloadFirmwareButton: _src_components_ui_DownloadFirmwareButton__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 26115:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Connector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89088);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Connector: _src_components_home_Connector__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 78395:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_KitModules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38329);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  KitModules: _src_components_home_KitModules__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 58074:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Hardware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27005);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Hardware: _src_components_home_Hardware__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 31386:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77851);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Protocol: _src_components_home_Protocol__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 77358:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_makecode_MakeCodeExtensions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71003);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  MakeCodeExtensions: _src_components_makecode_MakeCodeExtensions__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 88910:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Software__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18325);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Software: _src_components_home_Software__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 7074:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_makecode_MakeCodeProjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86206);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  MakeCodeProjects: _src_components_makecode_MakeCodeProjects__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 52551:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55789);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Tools: _src_components_home_Tools__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 53184:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_ErrorList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80691);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  ErrorList: _src_components_ErrorList__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 22416:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88862);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Kit: _src_components_home_Kit__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 34239:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_home_Clients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(83357);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  Clients: _src_components_home_Clients__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 15643:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

/* harmony default export */ __webpack_exports__["Z"] = ({
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))
});

/***/ }),

/***/ 3198:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_tools_EnclosureEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99713);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  EnclosureEditor: _src_components_tools_EnclosureEditor__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 31123:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
/* harmony import */ var _src_components_tools_DevToolsLauncher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46977);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);


/* harmony default export */ __webpack_exports__["Z"] = ({
  DevToolsLauncher: _src_components_tools_DevToolsLauncher__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,
  React: /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))
});

/***/ }),

/***/ 93191:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useMDXScope": function() { return /* binding */ useMDXScope; },
/* harmony export */   "MDXScopeProvider": function() { return /* binding */ MDXScopeProvider; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);

var GatsbyMDXScopeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});
var useMDXScope = scope => {
  var contextScope = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GatsbyMDXScopeContext);
  return scope || contextScope;
};
var MDXScopeProvider = _ref => {
  var {
    __mdxScope,
    children
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(GatsbyMDXScopeContext.Provider, {
    value: __mdxScope
  }, children);
};

/***/ }),

/***/ 28928:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "wrapRootElement": function() { return /* binding */ wrapRootElement; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4942);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/@mdx-js/react/dist/esm.js
var esm = __webpack_require__(64983);
// EXTERNAL MODULE: ./node_modules/gatsby-plugin-mdx/context.js
var context = __webpack_require__(93191);
// EXTERNAL MODULE: ./node_modules/gatsby-plugin-mdx/loaders/mdx-components.js
var mdx_components = __webpack_require__(88756);
;// CONCATENATED MODULE: ./node_modules/gatsby-plugin-mdx/loaders/mdx-scopes.js
var scope_0 = (__webpack_require__(63558)/* ["default"] */ .Z);

var scope_1 = (__webpack_require__(41612)/* ["default"] */ .Z);

var scope_2 = (__webpack_require__(26115)/* ["default"] */ .Z);

var scope_3 = (__webpack_require__(78395)/* ["default"] */ .Z);

var scope_4 = (__webpack_require__(58074)/* ["default"] */ .Z);

var scope_5 = (__webpack_require__(31386)/* ["default"] */ .Z);

var scope_6 = (__webpack_require__(77358)/* ["default"] */ .Z);

var scope_7 = (__webpack_require__(88910)/* ["default"] */ .Z);

var scope_8 = (__webpack_require__(7074)/* ["default"] */ .Z);

var scope_9 = (__webpack_require__(52551)/* ["default"] */ .Z);

var scope_10 = (__webpack_require__(53184)/* ["default"] */ .Z);

var scope_11 = (__webpack_require__(22416)/* ["default"] */ .Z);

var scope_12 = (__webpack_require__(34239)/* ["default"] */ .Z);

var scope_13 = (__webpack_require__(15643)/* ["default"] */ .Z);

var scope_14 = (__webpack_require__(3198)/* ["default"] */ .Z);

var scope_15 = (__webpack_require__(31123)/* ["default"] */ .Z);

/* harmony default export */ var mdx_scopes = (Object.assign({}, scope_0, scope_1, scope_2, scope_3, scope_4, scope_5, scope_6, scope_7, scope_8, scope_9, scope_10, scope_11, scope_12, scope_13, scope_14, scope_15));
;// CONCATENATED MODULE: ./node_modules/gatsby-plugin-mdx/wrap-root-element.js


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,defineProperty/* default */.Z)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




/**
 * so, this import is weird right?
 *
 * # What it looks like:
 * we're importing a webpack loader directly into our runtime bundle
 *
 * # What it's actually doing:
 * We configure the `mdx-components` loader in gatsby-node's
 * `onCreateWebpackConfig`. The configuration sets the loader to handle its
 * own file, so if we import `./loaders/mdx-components`, the `mdx-components`
 * loader handles loading itself.
 *
 * # Why does this work?
 * The loader doesn't use the file argument to itself and instead returns
 * a generated file that includes the `gatsby-config` mdxPlugins wrapped in
 * require() statements. This results in the `mdxPlugins` being required
 * and available to the code after this import.
 *
 * # Have a better solution to this?
 * Submit a PR
 */



var componentsAndGuards = {};

var componentFromGuards = arr => function GatsbyMDXComponentFinder(props) {
  var {
    Component
  } = arr.find(_ref => {
    var {
      guard
    } = _ref;
    return guard ? guard(props) : true;
  });
  return /*#__PURE__*/react.createElement(Component, props);
};

mdx_components.plugins.forEach(_ref2 => {
  var {
    guards = {},
    components
  } = _ref2;
  Object.entries(components).forEach(_ref3 => {
    var [componentName, Component] = _ref3;

    if (componentsAndGuards[componentName]) {
      componentsAndGuards.push({
        guard: guards[componentName],
        Component
      });
    } else {
      componentsAndGuards[componentName] = [{
        guard: guards[componentName],
        Component
      }];
    }
  });
});
var components = Object.entries(componentsAndGuards).map(_ref4 => {
  var [name, arr] = _ref4;
  return {
    [name]: componentFromGuards(arr.concat({
      guard: undefined,
      Component: name
    }))
  };
}).reduce((acc, obj) => {
  return _objectSpread(_objectSpread({}, acc), obj);
}, {}); // merge any components in wrapRootElement above this wrapRoot

var MDXConsumer = (0,esm.withMDXComponents)(_ref5 => {
  var {
    components: componentsFromContext,
    children
  } = _ref5;
  return /*#__PURE__*/react.createElement(context.MDXScopeProvider, {
    __mdxScope: mdx_scopes
  }, /*#__PURE__*/react.createElement(esm.MDXProvider, {
    components: _objectSpread(_objectSpread({}, componentsFromContext), components)
  }, children));
});

var WrapRootElement = _ref6 => {
  var {
    element
  } = _ref6;
  return /*#__PURE__*/react.createElement(MDXConsumer, null, element);
};

/* harmony default export */ var wrap_root_element = (WrapRootElement);
;// CONCATENATED MODULE: ./node_modules/gatsby-plugin-mdx/gatsby-browser.js

var wrapRootElement = wrap_root_element;

/***/ }),

/***/ 88756:
/***/ (function(module) {

module.exports = {
  plugins: []
};

/***/ }),

/***/ 29499:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "BaseContext": function() { return /* binding */ BaseContext; },
  "Link": function() { return /* binding */ Link; },
  "Location": function() { return /* binding */ Location; },
  "LocationProvider": function() { return /* binding */ LocationProvider; },
  "Match": function() { return /* binding */ Match; },
  "Redirect": function() { return /* binding */ Redirect; },
  "Router": function() { return /* binding */ Router; },
  "ServerLocation": function() { return /* binding */ ServerLocation; },
  "createHistory": function() { return /* reexport */ createHistory; },
  "createMemorySource": function() { return /* reexport */ createMemorySource; },
  "globalHistory": function() { return /* reexport */ globalHistory; },
  "isRedirect": function() { return /* binding */ isRedirect; },
  "matchPath": function() { return /* reexport */ match; },
  "navigate": function() { return /* reexport */ history_navigate; },
  "redirectTo": function() { return /* binding */ redirectTo; },
  "useLocation": function() { return /* binding */ useLocation; },
  "useMatch": function() { return /* binding */ useMatch; },
  "useNavigate": function() { return /* binding */ useNavigate; },
  "useParams": function() { return /* binding */ useParams; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/invariant/browser.js
var browser = __webpack_require__(41143);
var browser_default = /*#__PURE__*/__webpack_require__.n(browser);
// EXTERNAL MODULE: ./.cache/react-lifecycles-compat.js
var react_lifecycles_compat = __webpack_require__(11507);
;// CONCATENATED MODULE: ./node_modules/@gatsbyjs/reach-router/es/lib/utils.js
 ////////////////////////////////////////////////////////////////////////////////
// startsWith(string, search) - Check if `string` starts with `search`

var startsWith = function startsWith(string, search) {
  return string.substr(0, search.length) === search;
}; ////////////////////////////////////////////////////////////////////////////////
// pick(routes, uri)
//
// Ranks and picks the best route to match. Each segment gets the highest
// amount of points, then the type of segment gets an additional amount of
// points where
//
//     static > dynamic > splat > root
//
// This way we don't have to worry about the order of our routes, let the
// computers do it.
//
// A route looks like this
//
//     { path, default, value }
//
// And a returned match looks like:
//
//     { route, params, uri }
//
// I know, I should use TypeScript not comments for these types.


var pick = function pick(routes, uri) {
  var match = void 0;
  var default_ = void 0;

  var _uri$split = uri.split("?"),
      uriPathname = _uri$split[0];

  var uriSegments = segmentize(uriPathname);
  var isRootUri = uriSegments[0] === "";
  var ranked = rankRoutes(routes);

  for (var i = 0, l = ranked.length; i < l; i++) {
    var missed = false;
    var route = ranked[i].route;

    if (route.default) {
      default_ = {
        route: route,
        params: {},
        uri: uri
      };
      continue;
    }

    var routeSegments = segmentize(route.path);
    var params = {};
    var max = Math.max(uriSegments.length, routeSegments.length);
    var index = 0;

    for (; index < max; index++) {
      var routeSegment = routeSegments[index];
      var uriSegment = uriSegments[index];

      if (isSplat(routeSegment)) {
        // Hit a splat, just grab the rest, and return a match
        // uri:   /files/documents/work
        // route: /files/*
        var param = routeSegment.slice(1) || "*";
        params[param] = uriSegments.slice(index).map(decodeURIComponent).join("/");
        break;
      }

      if (uriSegment === undefined) {
        // URI is shorter than the route, no match
        // uri:   /users
        // route: /users/:userId
        missed = true;
        break;
      }

      var dynamicMatch = paramRe.exec(routeSegment);

      if (dynamicMatch && !isRootUri) {
        var matchIsNotReserved = reservedNames.indexOf(dynamicMatch[1]) === -1;
        !matchIsNotReserved ?  false ? 0 : browser_default()(false) : void 0;
        var value = decodeURIComponent(uriSegment);
        params[dynamicMatch[1]] = value;
      } else if (routeSegment !== uriSegment) {
        // Current segments don't match, not dynamic, not splat, so no match
        // uri:   /users/123/settings
        // route: /users/:id/profile
        missed = true;
        break;
      }
    }

    if (!missed) {
      match = {
        route: route,
        params: params,
        uri: "/" + uriSegments.slice(0, index).join("/")
      };
      break;
    }
  }

  return match || default_ || null;
}; ////////////////////////////////////////////////////////////////////////////////
// match(path, uri) - Matches just one path to a uri, also lol


var match = function match(path, uri) {
  return pick([{
    path: path
  }], uri);
}; ////////////////////////////////////////////////////////////////////////////////
// resolve(to, basepath)
//
// Resolves URIs as though every path is a directory, no files.  Relative URIs
// in the browser can feel awkward because not only can you be "in a directory"
// you can be "at a file", too. For example
//
//     browserSpecResolve('foo', '/bar/') => /bar/foo
//     browserSpecResolve('foo', '/bar') => /foo
//
// But on the command line of a file system, it's not as complicated, you can't
// `cd` from a file, only directories.  This way, links have to know less about
// their current path. To go deeper you can do this:
//
//     <Link to="deeper"/>
//     // instead of
//     <Link to=`{${props.uri}/deeper}`/>
//
// Just like `cd`, if you want to go deeper from the command line, you do this:
//
//     cd deeper
//     # not
//     cd $(pwd)/deeper
//
// By treating every path as a directory, linking to relative paths should
// require less contextual information and (fingers crossed) be more intuitive.


var resolve = function resolve(to, base) {
  // /foo/bar, /baz/qux => /foo/bar
  if (startsWith(to, "/")) {
    return to;
  }

  var _to$split = to.split("?"),
      toPathname = _to$split[0],
      toQuery = _to$split[1];

  var _base$split = base.split("?"),
      basePathname = _base$split[0];

  var toSegments = segmentize(toPathname);
  var baseSegments = segmentize(basePathname); // ?a=b, /users?b=c => /users?a=b

  if (toSegments[0] === "") {
    return addQuery(basePathname, toQuery);
  } // profile, /users/789 => /users/789/profile


  if (!startsWith(toSegments[0], ".")) {
    var pathname = baseSegments.concat(toSegments).join("/");
    return addQuery((basePathname === "/" ? "" : "/") + pathname, toQuery);
  } // ./         /users/123  =>  /users/123
  // ../        /users/123  =>  /users
  // ../..      /users/123  =>  /
  // ../../one  /a/b/c/d    =>  /a/b/one
  // .././one   /a/b/c/d    =>  /a/b/c/one


  var allSegments = baseSegments.concat(toSegments);
  var segments = [];

  for (var i = 0, l = allSegments.length; i < l; i++) {
    var segment = allSegments[i];
    if (segment === "..") segments.pop();else if (segment !== ".") segments.push(segment);
  }

  return addQuery("/" + segments.join("/"), toQuery);
}; ////////////////////////////////////////////////////////////////////////////////
// insertParams(path, params)


var insertParams = function insertParams(path, params) {
  var _path$split = path.split("?"),
      pathBase = _path$split[0],
      _path$split$ = _path$split[1],
      query = _path$split$ === undefined ? "" : _path$split$;

  var segments = segmentize(pathBase);
  var constructedPath = "/" + segments.map(function (segment) {
    var match = paramRe.exec(segment);
    return match ? params[match[1]] : segment;
  }).join("/");
  var _params$location = params.location;
  _params$location = _params$location === undefined ? {} : _params$location;
  var _params$location$sear = _params$location.search,
      search = _params$location$sear === undefined ? "" : _params$location$sear;
  var searchSplit = search.split("?")[1] || "";
  constructedPath = addQuery(constructedPath, query, searchSplit);
  return constructedPath;
};

var validateRedirect = function validateRedirect(from, to) {
  var filter = function filter(segment) {
    return isDynamic(segment);
  };

  var fromString = segmentize(from).filter(filter).sort().join("/");
  var toString = segmentize(to).filter(filter).sort().join("/");
  return fromString === toString;
}; ////////////////////////////////////////////////////////////////////////////////
// Junk


var paramRe = /^:(.+)/;
var SEGMENT_POINTS = 4;
var STATIC_POINTS = 3;
var DYNAMIC_POINTS = 2;
var SPLAT_PENALTY = 1;
var ROOT_POINTS = 1;

var isRootSegment = function isRootSegment(segment) {
  return segment === "";
};

var isDynamic = function isDynamic(segment) {
  return paramRe.test(segment);
};

var isSplat = function isSplat(segment) {
  return segment && segment[0] === "*";
};

var rankRoute = function rankRoute(route, index) {
  var score = route.default ? 0 : segmentize(route.path).reduce(function (score, segment) {
    score += SEGMENT_POINTS;
    if (isRootSegment(segment)) score += ROOT_POINTS;else if (isDynamic(segment)) score += DYNAMIC_POINTS;else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY;else score += STATIC_POINTS;
    return score;
  }, 0);
  return {
    route: route,
    score: score,
    index: index
  };
};

var rankRoutes = function rankRoutes(routes) {
  return routes.map(rankRoute).sort(function (a, b) {
    return a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index;
  });
};

var segmentize = function segmentize(uri) {
  return uri // strip starting/ending slashes
  .replace(/(^\/+|\/+$)/g, "").split("/");
};

var addQuery = function addQuery(pathname) {
  for (var _len = arguments.length, query = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    query[_key - 1] = arguments[_key];
  }

  query = query.filter(function (q) {
    return q && q.length > 0;
  });
  return pathname + (query && query.length > 0 ? "?" + query.join("&") : "");
};

var reservedNames = ["uri", "path"];
/**
 * Shallow compares two objects.
 * @param {Object} obj1 The first object to compare.
 * @param {Object} obj2 The second object to compare.
 */

var shallowCompare = function shallowCompare(obj1, obj2) {
  var obj1Keys = Object.keys(obj1);
  return obj1Keys.length === Object.keys(obj2).length && obj1Keys.every(function (key) {
    return obj2.hasOwnProperty(key) && obj1[key] === obj2[key];
  });
}; ////////////////////////////////////////////////////////////////////////////////



;// CONCATENATED MODULE: ./node_modules/@gatsbyjs/reach-router/es/lib/history.js
var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var getLocation = function getLocation(source) {
  var _source$location = source.location,
      search = _source$location.search,
      hash = _source$location.hash,
      href = _source$location.href,
      origin = _source$location.origin,
      protocol = _source$location.protocol,
      host = _source$location.host,
      hostname = _source$location.hostname,
      port = _source$location.port;
  var pathname = source.location.pathname;

  if (!pathname && href && canUseDOM) {
    var url = new URL(href);
    pathname = url.pathname;
  }

  return {
    pathname: encodeURI(decodeURI(pathname)),
    search: search,
    hash: hash,
    href: href,
    origin: origin,
    protocol: protocol,
    host: host,
    hostname: hostname,
    port: port,
    state: source.history.state,
    key: source.history.state && source.history.state.key || "initial"
  };
};

var createHistory = function createHistory(source, options) {
  var listeners = [];
  var location = getLocation(source);
  var transitioning = false;

  var resolveTransition = function resolveTransition() {};

  return {
    get location() {
      return location;
    },

    get transitioning() {
      return transitioning;
    },

    _onTransitionComplete: function _onTransitionComplete() {
      transitioning = false;
      resolveTransition();
    },
    listen: function listen(listener) {
      listeners.push(listener);

      var popstateListener = function popstateListener() {
        location = getLocation(source);
        listener({
          location: location,
          action: "POP"
        });
      };

      source.addEventListener("popstate", popstateListener);
      return function () {
        source.removeEventListener("popstate", popstateListener);
        listeners = listeners.filter(function (fn) {
          return fn !== listener;
        });
      };
    },
    navigate: function navigate(to) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          state = _ref.state,
          _ref$replace = _ref.replace,
          replace = _ref$replace === undefined ? false : _ref$replace;

      if (typeof to === "number") {
        source.history.go(to);
      } else {
        state = _extends({}, state, {
          key: Date.now() + ""
        }); // try...catch iOS Safari limits to 100 pushState calls

        try {
          if (transitioning || replace) {
            source.history.replaceState(state, null, to);
          } else {
            source.history.pushState(state, null, to);
          }
        } catch (e) {
          source.location[replace ? "replace" : "assign"](to);
        }
      }

      location = getLocation(source);
      transitioning = true;
      var transition = new Promise(function (res) {
        return resolveTransition = res;
      });
      listeners.forEach(function (listener) {
        return listener({
          location: location,
          action: "PUSH"
        });
      });
      return transition;
    }
  };
}; ////////////////////////////////////////////////////////////////////////////////
// Stores history entries in memory for testing or other platforms like Native


var createMemorySource = function createMemorySource() {
  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var searchIndex = initialPath.indexOf("?");
  var initialLocation = {
    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,
    search: searchIndex > -1 ? initialPath.substr(searchIndex) : ""
  };
  var index = 0;
  var stack = [initialLocation];
  var states = [null];
  return {
    get location() {
      return stack[index];
    },

    addEventListener: function addEventListener(name, fn) {},
    removeEventListener: function removeEventListener(name, fn) {},
    history: {
      get entries() {
        return stack;
      },

      get index() {
        return index;
      },

      get state() {
        return states[index];
      },

      pushState: function pushState(state, _, uri) {
        var _uri$split = uri.split("?"),
            pathname = _uri$split[0],
            _uri$split$ = _uri$split[1],
            search = _uri$split$ === undefined ? "" : _uri$split$;

        index++;
        stack.push({
          pathname: pathname,
          search: search.length ? "?" + search : search
        });
        states.push(state);
      },
      replaceState: function replaceState(state, _, uri) {
        var _uri$split2 = uri.split("?"),
            pathname = _uri$split2[0],
            _uri$split2$ = _uri$split2[1],
            search = _uri$split2$ === undefined ? "" : _uri$split2$;

        stack[index] = {
          pathname: pathname,
          search: search
        };
        states[index] = state;
      },
      go: function go(to) {
        var newIndex = index + to;

        if (newIndex < 0 || newIndex > states.length - 1) {
          return;
        }

        index = newIndex;
      }
    }
  };
}; ////////////////////////////////////////////////////////////////////////////////
// global history - uses window.history as the source if available, otherwise a
// memory history


var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);

var getSource = function getSource() {
  return canUseDOM ? window : createMemorySource();
};

var globalHistory = createHistory(getSource());
var history_navigate = globalHistory.navigate; ////////////////////////////////////////////////////////////////////////////////


;// CONCATENATED MODULE: ./node_modules/@gatsbyjs/reach-router/es/index.js
var es_extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* eslint-disable jsx-a11y/anchor-has-content */






 ////////////////////////////////////////////////////////////////////////////////

var createNamedContext = function createNamedContext(name, defaultValue) {
  var Ctx = (0,react.createContext)(defaultValue);
  Ctx.displayName = name;
  return Ctx;
}; ////////////////////////////////////////////////////////////////////////////////
// Location Context/Provider


var LocationContext = createNamedContext("Location"); // sets up a listener if there isn't one already so apps don't need to be
// wrapped in some top level provider

var Location = function Location(_ref) {
  var children = _ref.children;
  return react.createElement(LocationContext.Consumer, null, function (context) {
    return context ? children(context) : react.createElement(LocationProvider, null, children);
  });
};

var LocationProvider = function (_React$Component) {
  _inherits(LocationProvider, _React$Component);

  function LocationProvider() {
    var _temp, _this, _ret;

    _classCallCheck(this, LocationProvider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      context: _this.getContext(),
      refs: {
        unlisten: null
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  LocationProvider.prototype.getContext = function getContext() {
    var _props$history = this.props.history,
        navigate = _props$history.navigate,
        location = _props$history.location;
    return {
      navigate: navigate,
      location: location
    };
  };

  LocationProvider.prototype.componentDidCatch = function componentDidCatch(error, info) {
    if (isRedirect(error)) {
      var _navigate = this.props.history.navigate;

      _navigate(error.uri, {
        replace: true
      });
    } else {
      throw error;
    }
  };

  LocationProvider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevState.context.location !== this.state.context.location) {
      this.props.history._onTransitionComplete();
    }
  };

  LocationProvider.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    var refs = this.state.refs,
        history = this.props.history;

    history._onTransitionComplete();

    refs.unlisten = history.listen(function () {
      Promise.resolve().then(function () {
        // TODO: replace rAF with react deferred update API when it's ready https://github.com/facebook/react/issues/13306
        requestAnimationFrame(function () {
          if (!_this2.unmounted) {
            _this2.setState(function () {
              return {
                context: _this2.getContext()
              };
            });
          }
        });
      });
    });
  };

  LocationProvider.prototype.componentWillUnmount = function componentWillUnmount() {
    var refs = this.state.refs;
    this.unmounted = true;
    refs.unlisten();
  };

  LocationProvider.prototype.render = function render() {
    var context = this.state.context,
        children = this.props.children;
    return react.createElement(LocationContext.Provider, {
      value: context
    }, typeof children === "function" ? children(context) : children || null);
  };

  return LocationProvider;
}(react.Component); ////////////////////////////////////////////////////////////////////////////////


LocationProvider.defaultProps = {
  history: globalHistory
};
 false ? 0 : void 0;

var ServerLocation = function ServerLocation(_ref2) {
  var url = _ref2.url,
      children = _ref2.children;
  var searchIndex = url.indexOf("?");
  var searchExists = searchIndex > -1;
  var pathname = void 0;
  var search = "";
  var hash = "";

  if (searchExists) {
    pathname = url.substring(0, searchIndex);
    search = url.substring(searchIndex);
  } else {
    pathname = url;
  }

  return react.createElement(LocationContext.Provider, {
    value: {
      location: {
        pathname: pathname,
        search: search,
        hash: hash
      },
      navigate: function navigate() {
        throw new Error("You can't call navigate on the server.");
      }
    }
  }, children);
}; ////////////////////////////////////////////////////////////////////////////////
// Sets baseuri and basepath for nested routers and links


var BaseContext = createNamedContext("Base", {
  baseuri: "/",
  basepath: "/",
  navigate: globalHistory.navigate
}); ////////////////////////////////////////////////////////////////////////////////
// The main event, welcome to the show everybody.

var Router = function Router(props) {
  return react.createElement(BaseContext.Consumer, null, function (baseContext) {
    return react.createElement(Location, null, function (locationContext) {
      return react.createElement(RouterImpl, es_extends({}, baseContext, locationContext, props));
    });
  });
};

var RouterImpl = function (_React$PureComponent) {
  _inherits(RouterImpl, _React$PureComponent);

  function RouterImpl() {
    _classCallCheck(this, RouterImpl);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  RouterImpl.prototype.render = function render() {
    var _props = this.props,
        location = _props.location,
        _navigate2 = _props.navigate,
        basepath = _props.basepath,
        primary = _props.primary,
        children = _props.children,
        baseuri = _props.baseuri,
        _props$component = _props.component,
        component = _props$component === undefined ? "div" : _props$component,
        domProps = _objectWithoutProperties(_props, ["location", "navigate", "basepath", "primary", "children", "baseuri", "component"]);

    var routes = react.Children.toArray(children).reduce(function (array, child) {
      var routes = createRoute(basepath)(child);
      return array.concat(routes);
    }, []);
    var pathname = location.pathname;
    var match = pick(routes, pathname);

    if (match) {
      var params = match.params,
          uri = match.uri,
          route = match.route,
          element = match.route.value; // remove the /* from the end for child routes relative paths

      basepath = route.default ? basepath : route.path.replace(/\*$/, "");

      var props = es_extends({}, params, {
        uri: uri,
        location: location,
        navigate: function navigate(to, options) {
          return _navigate2(resolve(to, uri), options);
        }
      });

      var clone = react.cloneElement(element, props, element.props.children ? react.createElement(Router, {
        location: location,
        primary: primary
      }, element.props.children) : undefined); // using 'div' for < 16.3 support

      var FocusWrapper = primary ? FocusHandler : component; // don't pass any props to 'div'

      var wrapperProps = primary ? es_extends({
        uri: uri,
        location: location,
        component: component
      }, domProps) : domProps;
      return react.createElement(BaseContext.Provider, {
        value: {
          baseuri: uri,
          basepath: basepath,
          navigate: props.navigate
        }
      }, react.createElement(FocusWrapper, wrapperProps, clone));
    } else {
      // Not sure if we want this, would require index routes at every level
      // warning(
      //   false,
      //   `<Router basepath="${basepath}">\n\nNothing matched:\n\t${
      //     location.pathname
      //   }\n\nPaths checked: \n\t${routes
      //     .map(route => route.path)
      //     .join(
      //       "\n\t"
      //     )}\n\nTo get rid of this warning, add a default NotFound component as child of Router:
      //   \n\tlet NotFound = () => <div>Not Found!</div>
      //   \n\t<Router>\n\t  <NotFound default/>\n\t  {/* ... */}\n\t</Router>`
      // );
      return null;
    }
  };

  return RouterImpl;
}(react.PureComponent);

RouterImpl.defaultProps = {
  primary: true
};
var FocusContext = createNamedContext("Focus");

var FocusHandler = function FocusHandler(_ref3) {
  var uri = _ref3.uri,
      location = _ref3.location,
      component = _ref3.component,
      domProps = _objectWithoutProperties(_ref3, ["uri", "location", "component"]);

  return react.createElement(FocusContext.Consumer, null, function (requestFocus) {
    return react.createElement(FocusHandlerImpl, es_extends({}, domProps, {
      component: component,
      requestFocus: requestFocus,
      uri: uri,
      location: location
    }));
  });
}; // don't focus on initial render


var initialRender = true;
var focusHandlerCount = 0;

var FocusHandlerImpl = function (_React$Component2) {
  _inherits(FocusHandlerImpl, _React$Component2);

  function FocusHandlerImpl() {
    var _temp2, _this4, _ret2;

    _classCallCheck(this, FocusHandlerImpl);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp2 = (_this4 = _possibleConstructorReturn(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this4), _this4.state = {}, _this4.requestFocus = function (node) {
      if (!_this4.state.shouldFocus && node) {
        node.focus();
      }
    }, _temp2), _possibleConstructorReturn(_this4, _ret2);
  }

  FocusHandlerImpl.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var initial = prevState.uri == null;

    if (initial) {
      return es_extends({
        shouldFocus: true
      }, nextProps);
    } else {
      var myURIChanged = nextProps.uri !== prevState.uri;
      var navigatedUpToMe = prevState.location.pathname !== nextProps.location.pathname && nextProps.location.pathname === nextProps.uri;
      return es_extends({
        shouldFocus: myURIChanged || navigatedUpToMe
      }, nextProps);
    }
  };

  FocusHandlerImpl.prototype.componentDidMount = function componentDidMount() {
    focusHandlerCount++;
    this.focus();
  };

  FocusHandlerImpl.prototype.componentWillUnmount = function componentWillUnmount() {
    focusHandlerCount--;

    if (focusHandlerCount === 0) {
      initialRender = true;
    }
  };

  FocusHandlerImpl.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevProps.location !== this.props.location && this.state.shouldFocus) {
      this.focus();
    }
  };

  FocusHandlerImpl.prototype.focus = function focus() {
    if (false) {}

    var requestFocus = this.props.requestFocus;

    if (requestFocus) {
      requestFocus(this.node);
    } else {
      if (initialRender) {
        initialRender = false;
      } else if (this.node) {
        // React polyfills [autofocus] and it fires earlier than cDM,
        // so we were stealing focus away, this line prevents that.
        if (!this.node.contains(document.activeElement)) {
          this.node.focus();
        }
      }
    }
  };

  FocusHandlerImpl.prototype.render = function render() {
    var _this5 = this;

    var _props2 = this.props,
        children = _props2.children,
        style = _props2.style,
        requestFocus = _props2.requestFocus,
        _props2$component = _props2.component,
        Comp = _props2$component === undefined ? "div" : _props2$component,
        uri = _props2.uri,
        location = _props2.location,
        domProps = _objectWithoutProperties(_props2, ["children", "style", "requestFocus", "component", "uri", "location"]);

    return react.createElement(Comp, es_extends({
      style: es_extends({
        outline: "none"
      }, style),
      tabIndex: "-1",
      ref: function ref(n) {
        return _this5.node = n;
      }
    }, domProps), react.createElement(FocusContext.Provider, {
      value: this.requestFocus
    }, this.props.children));
  };

  return FocusHandlerImpl;
}(react.Component);

(0,react_lifecycles_compat/* polyfill */.O)(FocusHandlerImpl);

var k = function k() {}; ////////////////////////////////////////////////////////////////////////////////


var forwardRef = react.forwardRef;

if (typeof forwardRef === "undefined") {
  forwardRef = function forwardRef(C) {
    return C;
  };
}

var Link = forwardRef(function (_ref4, ref) {
  var innerRef = _ref4.innerRef,
      props = _objectWithoutProperties(_ref4, ["innerRef"]);

  return react.createElement(BaseContext.Consumer, null, function (_ref5) {
    var basepath = _ref5.basepath,
        baseuri = _ref5.baseuri;
    return react.createElement(Location, null, function (_ref6) {
      var location = _ref6.location,
          navigate = _ref6.navigate;

      var to = props.to,
          state = props.state,
          replace = props.replace,
          _props$getProps = props.getProps,
          getProps = _props$getProps === undefined ? k : _props$getProps,
          anchorProps = _objectWithoutProperties(props, ["to", "state", "replace", "getProps"]);

      var href = resolve(to, baseuri);
      var encodedHref = encodeURI(href);
      var isCurrent = location.pathname === encodedHref;
      var isPartiallyCurrent = startsWith(location.pathname, encodedHref);
      return react.createElement("a", es_extends({
        ref: ref || innerRef,
        "aria-current": isCurrent ? "page" : undefined
      }, anchorProps, getProps({
        isCurrent: isCurrent,
        isPartiallyCurrent: isPartiallyCurrent,
        href: href,
        location: location
      }), {
        href: href,
        onClick: function onClick(event) {
          if (anchorProps.onClick) anchorProps.onClick(event);

          if (shouldNavigate(event)) {
            event.preventDefault();
            var shouldReplace = replace;

            if (typeof replace !== "boolean" && isCurrent) {
              var _location$state = es_extends({}, location.state),
                  key = _location$state.key,
                  restState = _objectWithoutProperties(_location$state, ["key"]);

              shouldReplace = shallowCompare(es_extends({}, state), restState);
            }

            navigate(href, {
              state: state,
              replace: shouldReplace
            });
          }
        }
      }));
    });
  });
});
Link.displayName = "Link";
 false ? 0 : void 0; ////////////////////////////////////////////////////////////////////////////////

function RedirectRequest(uri) {
  this.uri = uri;
}

var isRedirect = function isRedirect(o) {
  return o instanceof RedirectRequest;
};

var redirectTo = function redirectTo(to) {
  throw new RedirectRequest(to);
};

var RedirectImpl = function (_React$Component3) {
  _inherits(RedirectImpl, _React$Component3);

  function RedirectImpl() {
    _classCallCheck(this, RedirectImpl);

    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
  } // Support React < 16 with this hook


  RedirectImpl.prototype.componentDidMount = function componentDidMount() {
    var _props3 = this.props,
        navigate = _props3.navigate,
        to = _props3.to,
        from = _props3.from,
        _props3$replace = _props3.replace,
        replace = _props3$replace === undefined ? true : _props3$replace,
        state = _props3.state,
        noThrow = _props3.noThrow,
        baseuri = _props3.baseuri,
        props = _objectWithoutProperties(_props3, ["navigate", "to", "from", "replace", "state", "noThrow", "baseuri"]);

    Promise.resolve().then(function () {
      var resolvedTo = resolve(to, baseuri);
      navigate(insertParams(resolvedTo, props), {
        replace: replace,
        state: state
      });
    });
  };

  RedirectImpl.prototype.render = function render() {
    var _props4 = this.props,
        navigate = _props4.navigate,
        to = _props4.to,
        from = _props4.from,
        replace = _props4.replace,
        state = _props4.state,
        noThrow = _props4.noThrow,
        baseuri = _props4.baseuri,
        props = _objectWithoutProperties(_props4, ["navigate", "to", "from", "replace", "state", "noThrow", "baseuri"]);

    var resolvedTo = resolve(to, baseuri);
    if (!noThrow) redirectTo(insertParams(resolvedTo, props));
    return null;
  };

  return RedirectImpl;
}(react.Component);

var Redirect = function Redirect(props) {
  return react.createElement(BaseContext.Consumer, null, function (_ref7) {
    var baseuri = _ref7.baseuri;
    return react.createElement(Location, null, function (locationContext) {
      return react.createElement(RedirectImpl, es_extends({}, locationContext, {
        baseuri: baseuri
      }, props));
    });
  });
};

 false ? 0 : void 0; ////////////////////////////////////////////////////////////////////////////////

var Match = function Match(_ref8) {
  var path = _ref8.path,
      children = _ref8.children;
  return react.createElement(BaseContext.Consumer, null, function (_ref9) {
    var baseuri = _ref9.baseuri;
    return react.createElement(Location, null, function (_ref10) {
      var navigate = _ref10.navigate,
          location = _ref10.location;
      var resolvedPath = resolve(path, baseuri);
      var result = match(resolvedPath, location.pathname);
      return children({
        navigate: navigate,
        location: location,
        match: result ? es_extends({}, result.params, {
          uri: result.uri,
          path: path
        }) : null
      });
    });
  });
}; ////////////////////////////////////////////////////////////////////////////////
// Hooks


var useLocation = function useLocation() {
  var context = (0,react.useContext)(LocationContext);

  if (!context) {
    throw new Error("useLocation hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  return context.location;
};

var useNavigate = function useNavigate() {
  var context = (0,react.useContext)(BaseContext);

  if (!context) {
    throw new Error("useNavigate hook was used but a BaseContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  return context.navigate;
};

var useParams = function useParams() {
  var context = (0,react.useContext)(BaseContext);

  if (!context) {
    throw new Error("useParams hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  var location = useLocation();
  var results = match(context.basepath, location.pathname);
  return results ? results.params : null;
};

var useMatch = function useMatch(path) {
  if (!path) {
    throw new Error("useMatch(path: string) requires an argument of a string to match against");
  }

  var context = (0,react.useContext)(BaseContext);

  if (!context) {
    throw new Error("useMatch hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  var location = useLocation();
  var resolvedPath = resolve(path, context.baseuri);
  var result = match(resolvedPath, location.pathname);
  return result ? es_extends({}, result.params, {
    uri: result.uri,
    path: path
  }) : null;
}; ////////////////////////////////////////////////////////////////////////////////
// Junk


var stripSlashes = function stripSlashes(str) {
  return str.replace(/(^\/+|\/+$)/g, "");
};

var createRoute = function createRoute(basepath) {
  return function (element) {
    if (!element) {
      return null;
    }

    if (element.type === react.Fragment && element.props.children) {
      return react.Children.map(element.props.children, createRoute(basepath));
    }

    !(element.props.path || element.props.default || element.type === Redirect) ?  false ? 0 : browser_default()(false) : void 0;
    !!(element.type === Redirect && (!element.props.from || !element.props.to)) ?  false ? 0 : browser_default()(false) : void 0;
    !!(element.type === Redirect && !validateRedirect(element.props.from, element.props.to)) ?  false ? 0 : browser_default()(false) : void 0;

    if (element.props.default) {
      return {
        value: element,
        default: true
      };
    }

    var elementPath = element.type === Redirect ? element.props.from : element.props.path;
    var path = elementPath === "/" ? basepath : stripSlashes(basepath) + "/" + stripSlashes(elementPath);
    return {
      value: element,
      default: element.props.default,
      path: element.props.children ? stripSlashes(path) + "/*" : path
    };
  };
};

var shouldNavigate = function shouldNavigate(event) {
  return !event.defaultPrevented && event.button === 0 && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}; ////////////////////////////////////////////////////////////////////////




/***/ }),

/***/ 41143:
/***/ (function(module) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (false) {}

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;


/***/ }),

/***/ 97326:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _assertThisInitialized; }
/* harmony export */ });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ 15861:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _asyncToGenerator; }
/* harmony export */ });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),

/***/ 43144:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _createClass; }
/* harmony export */ });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),

/***/ 4942:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _defineProperty; }
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ 87462:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ 94578:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _inheritsLoose; }
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89611);

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(subClass, superClass);
}

/***/ }),

/***/ 45987:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _objectWithoutProperties; }
/* harmony export */ });
/* harmony import */ var _objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63366);

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = (0,_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

/***/ }),

/***/ 63366:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _objectWithoutPropertiesLoose; }
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ 89611:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _setPrototypeOf; }
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ 30168:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _taggedTemplateLiteral; }
/* harmony export */ });
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

/***/ }),

/***/ 15785:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ _toConsumableArray; }
});

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

/***/ }),

/***/ 52146:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ _wrapNativeSuper; }
});

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
var setPrototypeOf = __webpack_require__(89611);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/construct.js


function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) (0,setPrototypeOf/* default */.Z)(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return (0,setPrototypeOf/* default */.Z)(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

/***/ }),

/***/ 61413:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/afa5c/mechanicalclickconnector.png","srcSet":"/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/2fe1e/mechanicalclickconnector.png 480w,\\n/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/9bec7/mechanicalclickconnector.png 960w,\\n/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/afa5c/mechanicalclickconnector.png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/3a3a2/mechanicalclickconnector.webp 480w,\\n/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/bde8a/mechanicalclickconnector.webp 960w,\\n/jacdac-docs/static/a996568f6bd75f561e739215e4bee5d7/c512e/mechanicalclickconnector.webp 1920w","type":"image/webp","sizes":"(min-width: 1920px) 1920px, 100vw"}]},"width":1920,"height":1080}');

/***/ }),

/***/ 74971:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/c300d/p5js.jpg","srcSet":"/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/3b945/p5js.jpg 200w,\\n/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/5f708/p5js.jpg 400w,\\n/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/c300d/p5js.jpg 800w","sizes":"(min-width: 800px) 800px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/92a75/p5js.webp 200w,\\n/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/d8228/p5js.webp 400w,\\n/jacdac-docs/static/8a82289c0cfdc1984eb3d192c6c9f1b1/72b7d/p5js.webp 800w","type":"image/webp","sizes":"(min-width: 800px) 800px, 100vw"}]},"width":800,"height":396}');

/***/ }),

/***/ 92859:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/5976e/rhtempvertical.png","srcSet":"/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/05b8a/rhtempvertical.png 190w,\\n/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/29ff0/rhtempvertical.png 379w,\\n/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/5976e/rhtempvertical.png 758w","sizes":"(min-width: 758px) 758px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/d92ae/rhtempvertical.webp 190w,\\n/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/265ef/rhtempvertical.webp 379w,\\n/jacdac-docs/static/4b0d6220579e4cc706767270c9585641/925ac/rhtempvertical.webp 758w","type":"image/webp","sizes":"(min-width: 758px) 758px, 100vw"}]},"width":758,"height":534}');

/***/ }),

/***/ 27645:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/dd505/a-frame.jpg","srcSet":"/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/46be3/a-frame.jpg 249w,\\n/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/f1654/a-frame.jpg 498w,\\n/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/dd505/a-frame.jpg 995w","sizes":"(min-width: 995px) 995px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/ec4ed/a-frame.webp 249w,\\n/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/81a8d/a-frame.webp 498w,\\n/jacdac-docs/static/ecb3ca5e7d0a7e987951218da1082189/ec251/a-frame.webp 995w","type":"image/webp","sizes":"(min-width: 995px) 995px, 100vw"}]},"width":995,"height":560}');

/***/ }),

/***/ 60707:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#e8b888","images":{"fallback":{"src":"/jacdac-docs/static/6532668403ccbbe600512d24d132075f/f872c/kittop.jpg","srcSet":"/jacdac-docs/static/6532668403ccbbe600512d24d132075f/71534/kittop.jpg 315w,\\n/jacdac-docs/static/6532668403ccbbe600512d24d132075f/48bb0/kittop.jpg 630w,\\n/jacdac-docs/static/6532668403ccbbe600512d24d132075f/f872c/kittop.jpg 1259w","sizes":"(min-width: 1259px) 1259px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/6532668403ccbbe600512d24d132075f/afa63/kittop.webp 315w,\\n/jacdac-docs/static/6532668403ccbbe600512d24d132075f/2dccb/kittop.webp 630w,\\n/jacdac-docs/static/6532668403ccbbe600512d24d132075f/2cc64/kittop.webp 1259w","type":"image/webp","sizes":"(min-width: 1259px) 1259px, 100vw"}]},"width":1259,"height":1198}');

/***/ }),

/***/ 42600:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/4230b/manymodules2.png","srcSet":"/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/341cb/manymodules2.png 341w,\\n/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/74bf4/manymodules2.png 681w,\\n/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/4230b/manymodules2.png 1362w","sizes":"(min-width: 1362px) 1362px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/f4215/manymodules2.webp 341w,\\n/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/06bff/manymodules2.webp 681w,\\n/jacdac-docs/static/5d89980e32737103b6b0f546ebd50e1e/0b88f/manymodules2.webp 1362w","type":"image/webp","sizes":"(min-width: 1362px) 1362px, 100vw"}]},"width":1362,"height":1010.9999999999999}');

/***/ }),

/***/ 54423:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/0e3a9/beautifysimple.png","srcSet":"/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/51d37/beautifysimple.png 509w,\\n/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/80f22/beautifysimple.png 1018w,\\n/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/0e3a9/beautifysimple.png 2036w","sizes":"(min-width: 2036px) 2036px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/fb606/beautifysimple.webp 509w,\\n/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/62af3/beautifysimple.webp 1018w,\\n/jacdac-docs/static/5b250d88b4e22d2cbea2de3507e0dc61/84e5a/beautifysimple.webp 2036w","type":"image/webp","sizes":"(min-width: 2036px) 2036px, 100vw"}]},"width":2036,"height":1501}');

/***/ }),

/***/ 49895:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/188736bd89eea27351769ed53c829476/613e4/pcbfootprint.png","srcSet":"/jacdac-docs/static/188736bd89eea27351769ed53c829476/85f0a/pcbfootprint.png 166w,\\n/jacdac-docs/static/188736bd89eea27351769ed53c829476/787f5/pcbfootprint.png 331w,\\n/jacdac-docs/static/188736bd89eea27351769ed53c829476/613e4/pcbfootprint.png 662w","sizes":"(min-width: 662px) 662px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/188736bd89eea27351769ed53c829476/b24bb/pcbfootprint.webp 166w,\\n/jacdac-docs/static/188736bd89eea27351769ed53c829476/5d48c/pcbfootprint.webp 331w,\\n/jacdac-docs/static/188736bd89eea27351769ed53c829476/373a8/pcbfootprint.webp 662w","type":"image/webp","sizes":"(min-width: 662px) 662px, 100vw"}]},"width":662,"height":467}');

/***/ }),

/***/ 27103:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/ccc41/html5-white.png","srcSet":"/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/bf8e1/html5-white.png 128w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/acb7c/html5-white.png 256w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/ccc41/html5-white.png 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/6766a/html5-white.webp 128w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/22bfc/html5-white.webp 256w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/d689f/html5-white.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}');

/***/ }),

/***/ 7826:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/87868/tangled.png","srcSet":"/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/acb06/tangled.png 212w,\\n/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/6d96c/tangled.png 424w,\\n/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/87868/tangled.png 847w","sizes":"(min-width: 847px) 847px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/ac669/tangled.webp 212w,\\n/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/9ab1e/tangled.webp 424w,\\n/jacdac-docs/static/a1a335c01b7b8d1bf919341808990207/17b6b/tangled.webp 847w","type":"image/webp","sizes":"(min-width: 847px) 847px, 100vw"}]},"width":847,"height":614}');

/***/ }),

/***/ 44133:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/3ceff/makecode.jpg","srcSet":"/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/b711f/makecode.jpg 726w,\\n/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/b7618/makecode.jpg 1453w,\\n/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/3ceff/makecode.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/e4c21/makecode.webp 726w,\\n/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/36160/makecode.webp 1453w,\\n/jacdac-docs/static/9527cadddc50539aad051a5936f25d52/b53a3/makecode.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 74004:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/3ceff/sidetop2.jpg","srcSet":"/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/b711f/sidetop2.jpg 726w,\\n/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/b7618/sidetop2.jpg 1453w,\\n/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/3ceff/sidetop2.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/e4c21/sidetop2.webp 726w,\\n/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/36160/sidetop2.webp 1453w,\\n/jacdac-docs/static/1d793b07ccaaae74407b7eab03bbd4f1/b53a3/sidetop2.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 1572:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/1c9ce/html5-dark.png","srcSet":"/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/fbc98/html5-dark.png 16w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/914ee/html5-dark.png 32w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/1c9ce/html5-dark.png 64w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/bf8e1/html5-dark.png 128w","sizes":"(min-width: 64px) 64px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/e789a/html5-dark.webp 16w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/ef6ff/html5-dark.webp 32w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/8257c/html5-dark.webp 64w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/6766a/html5-dark.webp 128w","type":"image/webp","sizes":"(min-width: 64px) 64px, 100vw"}]},"width":64,"height":64}');

/***/ }),

/***/ 43281:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/3ceff/top.jpg","srcSet":"/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/b711f/top.jpg 726w,\\n/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/b7618/top.jpg 1453w,\\n/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/3ceff/top.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/e4c21/top.webp 726w,\\n/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/36160/top.webp 1453w,\\n/jacdac-docs/static/b9c8f4b3cfa2fb3174b74fd42e5c2f0d/b53a3/top.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 71086:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/24490665c39c3bff4561324a9488d895/3ceff/bottom.jpg","srcSet":"/jacdac-docs/static/24490665c39c3bff4561324a9488d895/b711f/bottom.jpg 726w,\\n/jacdac-docs/static/24490665c39c3bff4561324a9488d895/b7618/bottom.jpg 1453w,\\n/jacdac-docs/static/24490665c39c3bff4561324a9488d895/3ceff/bottom.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/24490665c39c3bff4561324a9488d895/e4c21/bottom.webp 726w,\\n/jacdac-docs/static/24490665c39c3bff4561324a9488d895/36160/bottom.webp 1453w,\\n/jacdac-docs/static/24490665c39c3bff4561324a9488d895/b53a3/bottom.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 27580:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/cd728/hotplugicon.svg","srcSet":"/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/9ee82/hotplugicon.svg 16w,\\n/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/27e2e/hotplugicon.svg 32w,\\n/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/cd728/hotplugicon.svg 64w","sizes":"(min-width: 64px) 64px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/e789a/hotplugicon.webp 16w,\\n/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/ef6ff/hotplugicon.webp 32w,\\n/jacdac-docs/static/4ad03449ab515ead70060b8875c76b99/8257c/hotplugicon.webp 64w","type":"image/webp","sizes":"(min-width: 64px) 64px, 100vw"}]},"width":64,"height":64}');

/***/ }),

/***/ 6929:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/13288/threepins.png","srcSet":"/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/816b6/threepins.png 6w,\\n/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/0d950/threepins.png 12w,\\n/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/13288/threepins.png 23w","sizes":"(min-width: 23px) 23px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/fa320/threepins.webp 6w,\\n/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/048c0/threepins.webp 12w,\\n/jacdac-docs/static/a478296553b9c3ef8e85c95a6fb1d4d8/a85c9/threepins.webp 23w","type":"image/webp","sizes":"(min-width: 23px) 23px, 100vw"}]},"width":64,"height":100.17391304347827}');

/***/ }),

/***/ 42951:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/36674/dashboard.png","srcSet":"/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/49fac/dashboard.png 149w,\\n/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/7795f/dashboard.png 297w,\\n/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/36674/dashboard.png 594w","sizes":"(min-width: 594px) 594px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/21b31/dashboard.webp 149w,\\n/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/90214/dashboard.webp 297w,\\n/jacdac-docs/static/b1bfec9370a94caba4b1c5477a8daddc/5b97f/dashboard.webp 594w","type":"image/webp","sizes":"(min-width: 594px) 594px, 100vw"}]},"width":594,"height":598}');

/***/ }),

/***/ 78809:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/ccc41/html5-dark.png","srcSet":"/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/bf8e1/html5-dark.png 128w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/acb7c/html5-dark.png 256w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/ccc41/html5-dark.png 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/6766a/html5-dark.webp 128w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/22bfc/html5-dark.webp 256w,\\n/jacdac-docs/static/0ec94d29956d4aec50f64cf5adf48d5c/d689f/html5-dark.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}');

/***/ }),

/***/ 18780:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/19068/rhtemp.png","srcSet":"/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/3e4b1/rhtemp.png 195w,\\n/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/3c8f3/rhtemp.png 390w,\\n/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/19068/rhtemp.png 779w","sizes":"(min-width: 779px) 779px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/08963/rhtemp.webp 195w,\\n/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/bb0be/rhtemp.webp 390w,\\n/jacdac-docs/static/b72c432ed954892d17ae74e722a3b323/97d89/rhtemp.webp 779w","type":"image/webp","sizes":"(min-width: 779px) 779px, 100vw"}]},"width":779,"height":334}');

/***/ }),

/***/ 96936:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/740a4/firmwareupdate.png","srcSet":"/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/3f1b6/firmwareupdate.png 92w,\\n/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/a0b62/firmwareupdate.png 184w,\\n/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/740a4/firmwareupdate.png 367w","sizes":"(min-width: 367px) 367px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/cfc46/firmwareupdate.webp 92w,\\n/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/93e68/firmwareupdate.webp 184w,\\n/jacdac-docs/static/4494888b4790d17bdfc4a22087fa4d97/244da/firmwareupdate.webp 367w","type":"image/webp","sizes":"(min-width: 367px) 367px, 100vw"}]},"width":367,"height":431}');

/***/ }),

/***/ 71958:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/3ceff/opentopside.jpg","srcSet":"/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/b711f/opentopside.jpg 726w,\\n/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/b7618/opentopside.jpg 1453w,\\n/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/3ceff/opentopside.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/e4c21/opentopside.webp 726w,\\n/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/36160/opentopside.webp 1453w,\\n/jacdac-docs/static/e3f7c24a4e4f6aeb589bd804a63d560d/b53a3/opentopside.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 91241:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/afa5c/buttoncable.png","srcSet":"/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/2fe1e/buttoncable.png 480w,\\n/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/9bec7/buttoncable.png 960w,\\n/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/afa5c/buttoncable.png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/3a3a2/buttoncable.webp 480w,\\n/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/bde8a/buttoncable.webp 960w,\\n/jacdac-docs/static/f833f55db67de1e400a7e5f11750c89c/c512e/buttoncable.webp 1920w","type":"image/webp","sizes":"(min-width: 1920px) 1920px, 100vw"}]},"width":1920,"height":1080}');

/***/ }),

/***/ 60094:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/cd728/firmwareupdateicon.svg","srcSet":"/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/9ee82/firmwareupdateicon.svg 16w,\\n/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/27e2e/firmwareupdateicon.svg 32w,\\n/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/cd728/firmwareupdateicon.svg 64w","sizes":"(min-width: 64px) 64px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/e789a/firmwareupdateicon.webp 16w,\\n/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/ef6ff/firmwareupdateicon.webp 32w,\\n/jacdac-docs/static/88bab76e206800ab2b367e3a914d594b/8257c/firmwareupdateicon.webp 64w","type":"image/webp","sizes":"(min-width: 64px) 64px, 100vw"}]},"width":64,"height":64}');

/***/ }),

/***/ 12277:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/3ceff/contents.jpg","srcSet":"/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/b711f/contents.jpg 726w,\\n/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/b7618/contents.jpg 1453w,\\n/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/3ceff/contents.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/e4c21/contents.webp 726w,\\n/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/36160/contents.webp 1453w,\\n/jacdac-docs/static/1e30dd6a1f6ae958b62a8b06c5308f08/b53a3/contents.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 55603:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/3ceff/sidetop.jpg","srcSet":"/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/b711f/sidetop.jpg 726w,\\n/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/b7618/sidetop.jpg 1453w,\\n/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/3ceff/sidetop.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/e4c21/sidetop.webp 726w,\\n/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/36160/sidetop.webp 1453w,\\n/jacdac-docs/static/fefd1c5f6fe44c5bf0bdbe598c5ac200/b53a3/sidetop.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 14781:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/3ceff/dashboard.jpg","srcSet":"/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/b711f/dashboard.jpg 726w,\\n/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/b7618/dashboard.jpg 1453w,\\n/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/3ceff/dashboard.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/e4c21/dashboard.webp 726w,\\n/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/36160/dashboard.webp 1453w,\\n/jacdac-docs/static/7d68cbf31ec8c718de26486e19b2e3b0/b53a3/dashboard.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 53134:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/0fad4/react.png","srcSet":"/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/cfa78/react.png 150w,\\n/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/ef70e/react.png 301w,\\n/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/0fad4/react.png 601w","sizes":"(min-width: 601px) 601px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/d2d2e/react.webp 150w,\\n/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/c9a4c/react.webp 301w,\\n/jacdac-docs/static/337ae19d24d28a679432118c6e6ed4c5/80974/react.webp 601w","type":"image/webp","sizes":"(min-width: 601px) 601px, 100vw"}]},"width":601,"height":392}');

/***/ }),

/***/ 94856:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/4576d/hub.png","srcSet":"/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/6addd/hub.png 400w,\\n/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/c2d17/hub.png 800w,\\n/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/4576d/hub.png 1600w","sizes":"(min-width: 1600px) 1600px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/f5c71/hub.webp 400w,\\n/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/0d27e/hub.webp 800w,\\n/jacdac-docs/static/cfbcd58ec295148a519e2f8b697358bc/b924f/hub.webp 1600w","type":"image/webp","sizes":"(min-width: 1600px) 1600px, 100vw"}]},"width":1600,"height":1200}');

/***/ }),

/***/ 10103:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/d7a87/1500mm.png","srcSet":"/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/6fde8/1500mm.png 136w,\\n/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/4bfaa/1500mm.png 272w,\\n/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/d7a87/1500mm.png 544w","sizes":"(min-width: 544px) 544px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/20080/1500mm.webp 136w,\\n/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/1de80/1500mm.webp 272w,\\n/jacdac-docs/static/07362f56019dd8ee9c17ed980f4d7865/2d1eb/1500mm.webp 544w","type":"image/webp","sizes":"(min-width: 544px) 544px, 100vw"}]},"width":544,"height":407}');

/***/ }),

/***/ 24502:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/6df68/pcbicon.png","srcSet":"/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/d25a7/pcbicon.png 10w,\\n/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/918ef/pcbicon.png 19w,\\n/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/6df68/pcbicon.png 38w","sizes":"(min-width: 38px) 38px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/46057/pcbicon.webp 10w,\\n/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/ed892/pcbicon.webp 19w,\\n/jacdac-docs/static/bc6f8f42d87584d1a3f483f65ba504e2/ab33c/pcbicon.webp 38w","type":"image/webp","sizes":"(min-width: 38px) 38px, 100vw"}]},"width":64,"height":60.63157894736842}');

/***/ }),

/***/ 82668:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/d7d53/fullassembly.png","srcSet":"/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/7cd1a/fullassembly.png 173w,\\n/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/89818/fullassembly.png 347w,\\n/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/d7d53/fullassembly.png 693w","sizes":"(min-width: 693px) 693px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/0845b/fullassembly.webp 173w,\\n/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/a279c/fullassembly.webp 347w,\\n/jacdac-docs/static/d45bfdbdd1d831ddf55b7eee0fa6a992/eadc8/fullassembly.webp 693w","type":"image/webp","sizes":"(min-width: 693px) 693px, 100vw"}]},"width":693,"height":419}');

/***/ }),

/***/ 24347:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/8a1b9/nodered.png","srcSet":"/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/42742/nodered.png 123w,\\n/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/0a98f/nodered.png 246w,\\n/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/8a1b9/nodered.png 491w","sizes":"(min-width: 491px) 491px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/c13a0/nodered.webp 123w,\\n/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/c5688/nodered.webp 246w,\\n/jacdac-docs/static/38b7cc2cd0001bbbc31c842db89bc146/0c608/nodered.webp 491w","type":"image/webp","sizes":"(min-width: 491px) 491px, 100vw"}]},"width":491,"height":315}');

/***/ }),

/***/ 33588:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/0e2da/python-logo-master-v3-TM.png","srcSet":"/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/a4ac7/python-logo-master-v3-TM.png 150w,\\n/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/0e076/python-logo-master-v3-TM.png 301w,\\n/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/0e2da/python-logo-master-v3-TM.png 601w","sizes":"(min-width: 601px) 601px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/26f17/python-logo-master-v3-TM.webp 150w,\\n/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/6c561/python-logo-master-v3-TM.webp 301w,\\n/jacdac-docs/static/3cf229eedc092549277e8859aad2fca5/b9ee7/python-logo-master-v3-TM.webp 601w","type":"image/webp","sizes":"(min-width: 601px) 601px, 100vw"}]},"width":601,"height":203}');

/***/ }),

/***/ 65091:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/afa5c/jacdacsinglergbledmodule.png","srcSet":"/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/2fe1e/jacdacsinglergbledmodule.png 480w,\\n/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/9bec7/jacdacsinglergbledmodule.png 960w,\\n/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/afa5c/jacdacsinglergbledmodule.png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/3a3a2/jacdacsinglergbledmodule.webp 480w,\\n/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/bde8a/jacdacsinglergbledmodule.webp 960w,\\n/jacdac-docs/static/d3d9598526533d35957a7dc3b8646a2c/c512e/jacdacsinglergbledmodule.webp 1920w","type":"image/webp","sizes":"(min-width: 1920px) 1920px, 100vw"}]},"width":1920,"height":1080}');

/***/ }),

/***/ 31327:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/02589/ucable.png","srcSet":"/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/c4a4a/ucable.png 171w,\\n/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/0b07f/ucable.png 341w,\\n/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/02589/ucable.png 682w","sizes":"(min-width: 682px) 682px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/6ce62/ucable.webp 171w,\\n/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/c4a75/ucable.webp 341w,\\n/jacdac-docs/static/495e5e68c067a010611b58fe542843fb/7ac84/ucable.webp 682w","type":"image/webp","sizes":"(min-width: 682px) 682px, 100vw"}]},"width":682,"height":512}');

/***/ }),

/***/ 68553:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/6b2b2/devicetree.png","srcSet":"/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/f9f93/devicetree.png 155w,\\n/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/2d9ca/devicetree.png 310w,\\n/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/6b2b2/devicetree.png 620w","sizes":"(min-width: 620px) 620px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/9d16e/devicetree.webp 155w,\\n/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/7ab2d/devicetree.webp 310w,\\n/jacdac-docs/static/543f86dd6ca2964246e8e3359cc1e6f8/5158b/devicetree.webp 620w","type":"image/webp","sizes":"(min-width: 620px) 620px, 100vw"}]},"width":620,"height":474}');

/***/ }),

/***/ 92438:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/8f9c1/rotary.png","srcSet":"/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/65842/rotary.png 168w,\\n/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/f9a91/rotary.png 336w,\\n/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/8f9c1/rotary.png 671w","sizes":"(min-width: 671px) 671px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/b493b/rotary.webp 168w,\\n/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/56e09/rotary.webp 336w,\\n/jacdac-docs/static/42a42eb9ee24b4a384d2840f1af15aab/96083/rotary.webp 671w","type":"image/webp","sizes":"(min-width: 671px) 671px, 100vw"}]},"width":671,"height":550}');

/***/ }),

/***/ 31999:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/3ceff/opentop.jpg","srcSet":"/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/b711f/opentop.jpg 726w,\\n/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/b7618/opentop.jpg 1453w,\\n/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/3ceff/opentop.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/e4c21/opentop.webp 726w,\\n/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/36160/opentop.webp 1453w,\\n/jacdac-docs/static/285a9cd82b7acd26ac811f99faf9cd59/b53a3/opentop.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 22206:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/d478707b7ec899457f36a52e91500448/50c0c/dashboardtemp.png","srcSet":"/jacdac-docs/static/d478707b7ec899457f36a52e91500448/50e8a/dashboardtemp.png 157w,\\n/jacdac-docs/static/d478707b7ec899457f36a52e91500448/8ea28/dashboardtemp.png 313w,\\n/jacdac-docs/static/d478707b7ec899457f36a52e91500448/50c0c/dashboardtemp.png 626w","sizes":"(min-width: 626px) 626px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/d478707b7ec899457f36a52e91500448/720ec/dashboardtemp.webp 157w,\\n/jacdac-docs/static/d478707b7ec899457f36a52e91500448/5d8d7/dashboardtemp.webp 313w,\\n/jacdac-docs/static/d478707b7ec899457f36a52e91500448/aa945/dashboardtemp.webp 626w","type":"image/webp","sizes":"(min-width: 626px) 626px, 100vw"}]},"width":626,"height":215}');

/***/ }),

/***/ 55414:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/eedde/jupyterlab.png","srcSet":"/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/b93bb/jupyterlab.png 211w,\\n/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/c11d5/jupyterlab.png 422w,\\n/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/eedde/jupyterlab.png 843w","sizes":"(min-width: 843px) 843px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/cedfc/jupyterlab.webp 211w,\\n/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/4d09c/jupyterlab.webp 422w,\\n/jacdac-docs/static/247252b93ef005df1286eb128bab66d4/b1a83/jupyterlab.webp 843w","type":"image/webp","sizes":"(min-width: 843px) 843px, 100vw"}]},"width":843,"height":655}');

/***/ }),

/***/ 91848:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/25a91/competitors.png","srcSet":"/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/4ea1b/competitors.png 256w,\\n/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/83b52/competitors.png 511w,\\n/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/25a91/competitors.png 1022w","sizes":"(min-width: 1022px) 1022px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/eb3be/competitors.webp 256w,\\n/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/810b3/competitors.webp 511w,\\n/jacdac-docs/static/0839d2b86b235a302fa34ac857f25551/0132c/competitors.webp 1022w","type":"image/webp","sizes":"(min-width: 1022px) 1022px, 100vw"}]},"width":1022,"height":460.99999999999994}');

/***/ }),

/***/ 24678:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/3ceff/topfront.jpg","srcSet":"/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/b711f/topfront.jpg 726w,\\n/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/b7618/topfront.jpg 1453w,\\n/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/3ceff/topfront.jpg 2905w","sizes":"(min-width: 2905px) 2905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/e4c21/topfront.webp 726w,\\n/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/36160/topfront.webp 1453w,\\n/jacdac-docs/static/190dad4f98d76ddfeb16e09f1d653f45/b53a3/topfront.webp 2905w","type":"image/webp","sizes":"(min-width: 2905px) 2905px, 100vw"}]},"width":2905,"height":2905}');

/***/ }),

/***/ 91798:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/c670e/bustopology.png","srcSet":"/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/d6b90/bustopology.png 355w,\\n/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/c3e35/bustopology.png 710w,\\n/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/c670e/bustopology.png 1420w","sizes":"(min-width: 1420px) 1420px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/41ecf/bustopology.webp 355w,\\n/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/85f68/bustopology.webp 710w,\\n/jacdac-docs/static/c76d237a2d109cf9435c90e01e193d31/16ce8/bustopology.webp 1420w","type":"image/webp","sizes":"(min-width: 1420px) 1420px, 100vw"}]},"width":1420,"height":978}');

/***/ }),

/***/ 54529:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/42350/forces.png","srcSet":"/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/ef8ef/forces.png 219w,\\n/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/f9d24/forces.png 438w,\\n/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/42350/forces.png 875w","sizes":"(min-width: 875px) 875px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/ba37b/forces.webp 219w,\\n/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/cdd94/forces.webp 438w,\\n/jacdac-docs/static/52d3b58d4d9be9af4f62c4ebdddfc52d/155ec/forces.webp 875w","type":"image/webp","sizes":"(min-width: 875px) 875px, 100vw"}]},"width":875,"height":465}');

/***/ }),

/***/ 77042:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/94f4c/makecode.png","srcSet":"/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/87b8a/makecode.png 200w,\\n/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/0b1b4/makecode.png 400w,\\n/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/94f4c/makecode.png 800w","sizes":"(min-width: 800px) 800px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/008ab/makecode.webp 200w,\\n/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/99ddc/makecode.webp 400w,\\n/jacdac-docs/static/eb1f8fd08b94994115a55f5ac43818f7/b0a07/makecode.webp 800w","type":"image/webp","sizes":"(min-width: 800px) 800px, 100vw"}]},"width":800,"height":746}');

/***/ }),

/***/ 72891:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/1e429/recordit.png","srcSet":"/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/c4ae8/recordit.png 186w,\\n/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/f590b/recordit.png 371w,\\n/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/1e429/recordit.png 742w","sizes":"(min-width: 742px) 742px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/110d6/recordit.webp 186w,\\n/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/cb3c1/recordit.webp 371w,\\n/jacdac-docs/static/52776ea5cd92e087bf597dfa61ac1db3/9274c/recordit.webp 742w","type":"image/webp","sizes":"(min-width: 742px) 742px, 100vw"}]},"width":742,"height":395}');

/***/ }),

/***/ 53300:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/a724b/rotarycable.png","srcSet":"/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/a9ff1/rotarycable.png 226w,\\n/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/a3548/rotarycable.png 453w,\\n/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/a724b/rotarycable.png 905w","sizes":"(min-width: 905px) 905px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/6aec2/rotarycable.webp 226w,\\n/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/8a207/rotarycable.webp 453w,\\n/jacdac-docs/static/fcf893bc36e6a850dd3edc1fcc717608/6e400/rotarycable.webp 905w","type":"image/webp","sizes":"(min-width: 905px) 905px, 100vw"}]},"width":905,"height":511}');

/***/ }),

/***/ 28924:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/1c9ce/html5-white.png","srcSet":"/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/fbc98/html5-white.png 16w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/914ee/html5-white.png 32w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/1c9ce/html5-white.png 64w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/bf8e1/html5-white.png 128w","sizes":"(min-width: 64px) 64px, 100vw"},"sources":[{"srcSet":"/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/e789a/html5-white.webp 16w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/ef6ff/html5-white.webp 32w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/8257c/html5-white.webp 64w,\\n/jacdac-docs/static/8f231b44015993a7a582926e2c64b477/6766a/html5-white.webp 128w","type":"image/webp","sizes":"(min-width: 64px) 64px, 100vw"}]},"width":64,"height":64}');

/***/ }),

/***/ 73354:
/***/ (function(module) {

"use strict";
module.exports = {"i8":"1.22.9"};

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, [532,9774,3268], function() { return __webpack_exec__(80592); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=app-36e31d1c5bd5e6725343.js.map