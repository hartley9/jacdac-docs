{"version":3,"file":"component---src-pages-tools-settings-tsx-7d56d7cdb398cc12dcf0.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/SystemUpdateAlt.js","webpack://jacdac-docs/./src/components/hooks/useLocationSearchParam.ts","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/SettingsCard.tsx","webpack://jacdac-docs/./src/pages/tools/settings.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 16.5 4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z\"\n}), 'SystemUpdateAlt');\n\nexports.default = _default;","import { useMemo } from \"react\"\n\nexport function useLocationSearchParamString(key: string): string {\n    return useMemo(() => {\n        if (typeof window !== \"undefined\") {\n            const url = new URL(window.location.href)\n            return url.searchParams.get(key)\n        }\n        return undefined\n    }, [key])\n}\n\nexport function useLocationSearchParamBoolean(\n    key: string,\n    defaultValue: boolean\n): boolean {\n    return useMemo(() => {\n        if (typeof window !== \"undefined\") {\n            const url = new URL(window.location.href)\n            const v = url.searchParams.get(key)\n            if (v) {\n                if (v === \"1\" || v === \"true\" || v === \"yes\") return true\n                else if (v === \"0\" || v === \"false\" || v === \"no\") return false\n                else return defaultValue\n            }\n            // empty value means true\n            if (url.searchParams.has(key)) return true\n            return defaultValue\n        }\n        return undefined\n    }, [key, defaultValue])\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@mui/material\"\nimport React, { CSSProperties } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: {\n        label: string | number | JSX.Element\n        labelPlacement?: \"end\" | \"start\" | \"top\" | \"bottom\"\n        labelStyle?: CSSProperties\n    } & SwitchProps\n) {\n    const { label, labelPlacement, labelStyle, ...rest } = props\n    return (\n        <FormControlLabel\n            control={<Switch {...rest} />}\n            label={label}\n            style={labelStyle}\n            labelPlacement={labelPlacement}\n        />\n    )\n}\n","import { Card, CardActions, CardContent, Grid, TextField } from \"@mui/material\"\nimport React, {\n    ChangeEvent,\n    lazy,\n    useCallback,\n    useContext,\n    useState,\n} from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport DeviceCardHeader from \"./devices/DeviceCardHeader\"\nimport useServiceClient from \"./useServiceClient\"\nimport SettingsClient from \"../../jacdac-ts/src/jdom/clients/settingsclient\"\nimport { useChangeAsync } from \"../jacdac/useChange\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from \"@mui/icons-material/Delete\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\nimport CmdButton from \"./CmdButton\"\nimport { useId } from \"react-use-id-hook\"\nimport LoadingProgress from \"./ui/LoadingProgress\"\nimport SwitchWithLabel from \"./ui/SwitchWithLabel\"\nimport { bufferToString } from \"../../jacdac-ts/src/jdom/utils\"\nimport { randomDeviceId } from \"../../jacdac-ts/src/jdom/random\"\nimport { Button } from \"gatsby-material-ui-components\"\nimport ServiceManagerContext from \"./ServiceManagerContext\"\nimport Suspense from \"./ui/Suspense\"\nimport AppContext from \"./AppContext\"\nimport SystemUpdateAltIcon from \"@mui/icons-material/SystemUpdateAlt\"\n\nconst ImportButton = lazy(() => import(\"./ImportButton\"))\n\nfunction SettingRow(props: {\n    client: SettingsClient\n    name: string\n    value?: string\n    mutable: boolean\n    showSecrets: boolean\n    autoKey: boolean\n}) {\n    const { client, name, value, mutable, autoKey } = props\n    const isSecret = name[0] == \"$\"\n    const displayName = isSecret ? name.slice(1) : name\n    const handleComponentDelete = async () => {\n        await client.deleteValue(name)\n    }\n    const keyId = useId()\n    const valueId = useId()\n    const nameError = \"\"\n    const valueError = \"\"\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1}>\n                {!autoKey && (\n                    <Grid item>\n                        <TextField\n                            id={keyId}\n                            error={!!nameError}\n                            variant=\"outlined\"\n                            label=\"key\"\n                            helperText={nameError}\n                            value={displayName}\n                            disabled={true}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs>\n                    <TextField\n                        id={valueId}\n                        fullWidth={true}\n                        error={!!valueError}\n                        variant=\"outlined\"\n                        helperText={valueError}\n                        value={isSecret ? \"...\" : value}\n                        disabled={true}\n                    />\n                </Grid>\n                {mutable && (\n                    <Grid item>\n                        <CmdButton\n                            trackName=\"settings.delete\"\n                            title=\"Delete settings\"\n                            onClick={handleComponentDelete}\n                            icon={<DeleteIcon />}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction AddSettingRow(props: {\n    client: SettingsClient\n    keyPrefix: string\n    showSecrets: boolean\n    autoKey: boolean\n}) {\n    const { client, keyPrefix, showSecrets, autoKey } = props\n    const [name, setName] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n    const [secret, setSecret] = useState(showSecrets)\n    const keyId = useId()\n    const valueId = useId()\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setName(ev.target.value.trim())\n    }\n    const handleValueChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        setValue(ev.target.value)\n    }\n    const handleChecked = (ev, checked: boolean) => {\n        setSecret(checked)\n    }\n    const handleAdd = async mounted => {\n        const keyName = autoKey ? randomDeviceId() : name\n        const key = `${secret ? \"$\" : \"\"}${keyPrefix || \"\"}${keyName}`\n        await client.setStringValue(key, value)\n        if (!mounted()) return\n        setName(\"\")\n        setValue(\"\")\n        setSecret(showSecrets)\n    }\n    const keyError = \"\"\n    const valueError = \"\"\n\n    return (\n        <Grid item xs={12}>\n            <Grid container spacing={1} alignContent=\"center\">\n                {!autoKey && (\n                    <Grid item>\n                        <TextField\n                            id={keyId}\n                            error={!!keyError}\n                            variant=\"outlined\"\n                            label=\"Add key\"\n                            helperText={keyError}\n                            value={name}\n                            onChange={handleNameChange}\n                        />\n                    </Grid>\n                )}\n                <Grid item xs>\n                    <TextField\n                        id={valueId}\n                        fullWidth={true}\n                        error={!!valueError}\n                        variant=\"outlined\"\n                        label=\"value\"\n                        helperText={valueError}\n                        value={value}\n                        onChange={handleValueChange}\n                    />\n                </Grid>\n                {showSecrets && (\n                    <Grid item>\n                        <SwitchWithLabel\n                            checked={secret}\n                            onChange={handleChecked}\n                            label=\"Secret\"\n                        />\n                    </Grid>\n                )}\n                <Grid item>\n                    <CmdButton\n                        trackName=\"settings.add\"\n                        variant=\"contained\"\n                        disabled={\n                            (!autoKey && !name) || !!keyError || !!valueError\n                        }\n                        title=\"Add setting\"\n                        onClick={handleAdd}\n                        icon={<AddIcon />}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction ImportSettingsButton(props: { client: SettingsClient }) {\n    const { client } = props\n    const { setError } = useContext(AppContext)\n\n    const handleFilesUploaded = async (files: File[]) => {\n        for (const file of files) {\n            try {\n                const text = await file.text()\n                const json = JSON.parse(text)\n                if (Array.isArray(json)) {\n                    for (const entry of json as {\n                        key: string\n                        value: string\n                    }[]) {\n                        const { key, value } = entry\n                        if (key) await client.setStringValue(key, value)\n                    }\n                }\n            } catch (e) {\n                console.warn(e)\n                setError(`invalid file ${file.name}`)\n            }\n        }\n    }\n    return (\n        <Suspense>\n            <ImportButton\n                icon={false}\n                text=\"Import\"\n                onFilesUploaded={handleFilesUploaded}\n                acceptedFiles={[\"application/json\"]}\n            />\n        </Suspense>\n    )\n}\n\nexport default function SettingsCard(props: {\n    service: JDService\n    mutable?: boolean\n    keyPrefix?: string\n    showSecrets?: boolean\n    autoKey?: boolean\n}) {\n    const { service, mutable, keyPrefix = \"\", showSecrets, autoKey } = props\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const factory = useCallback(srv => new SettingsClient(srv), [])\n    const client = useServiceClient(service, factory)\n    const values = useChangeAsync(\n        client,\n        async c => {\n            const keys = await c?.list()\n            return keys\n                ?.filter(({ key }) => !keyPrefix || key.startsWith(keyPrefix))\n                .map(({ key, value }) => ({\n                    key,\n                    value: bufferToString(value),\n                }))\n        },\n        [keyPrefix]\n    )\n\n    const secrets = values?.filter(value => showSecrets && value.key[0] === \"$\")\n    const publics = values?.filter(value => value.key[0] !== \"$\")\n\n    const handleClear = async () => await client?.clear()\n    const handleExport = () =>\n        fileStorage.saveText(\n            \"settings.json\",\n            JSON.stringify(publics || {}, null, 2)\n        )\n\n    if (!client) return <LoadingProgress /> // wait till loaded\n\n    return (\n        <Card>\n            <DeviceCardHeader device={service.device} showAvatar={true} />\n            <CardContent>\n                <Grid container spacing={2}>\n                    {mutable && (\n                        <AddSettingRow\n                            client={client}\n                            keyPrefix={keyPrefix}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    )}\n                    {publics?.map(({ key, value }) => (\n                        <SettingRow\n                            key={key}\n                            name={key}\n                            value={value}\n                            client={client}\n                            mutable={mutable}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    ))}\n                    {!!secrets?.length && (\n                        <Grid item xs={12}>\n                            Secrets\n                        </Grid>\n                    )}\n                    {secrets?.map(({ key, value }) => (\n                        <SettingRow\n                            key={key}\n                            name={key}\n                            value={value}\n                            client={client}\n                            mutable={mutable}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    ))}\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Grid container spacing={1} direction=\"row\">\n                    {mutable && (\n                        <Grid item>\n                            <CmdButton\n                                variant=\"outlined\"\n                                trackName=\"settings.clearall\"\n                                title=\"Clear all settings\"\n                                icon={<DeleteIcon />}\n                                onClick={handleClear}\n                            >\n                                Clear\n                            </CmdButton>\n                        </Grid>\n                    )}\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            title=\"export\"\n                            disabled={!values}\n                            onClick={handleExport}\n                            startIcon={<SystemUpdateAltIcon />}\n                        >\n                            Export\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <ImportSettingsButton client={client} />\n                    </Grid>\n                </Grid>\n            </CardActions>\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport { Grid } from \"@mui/material\"\nimport { SRV_SETTINGS } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport SettingsCard from \"../../components/SettingsCard\"\nimport useServices from \"../../components/hooks/useServices\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\nimport {\n    useLocationSearchParamBoolean,\n    useLocationSearchParamString,\n} from \"../../components/hooks/useLocationSearchParam\"\n\nexport default function Page() {\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    const services = useServices({ serviceClass: SRV_SETTINGS })\n    const keyPrefix = useLocationSearchParamString(\"prefix\")\n    const autoKey = useLocationSearchParamBoolean(\"autokey\", false)\n    const showSecrets = useLocationSearchParamBoolean(\"secrets\", true)\n\n    return (\n        <>\n            <h1>Devices Settings</h1>\n            <p>\n                Configure <Link to=\"/services/settings/\">settings</Link>{\" \"}\n                services.\n            </p>\n            <ConnectAlert serviceClass={SRV_SETTINGS} />\n            <Grid container spacing={1}>\n                {services.map(service => (\n                    <Grid key={service.id} item xs={12} lg={6}>\n                        <SettingsCard\n                            service={service}\n                            mutable={true}\n                            keyPrefix={keyPrefix}\n                            showSecrets={showSecrets}\n                            autoKey={autoKey}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n            <h2>Advanced</h2>\n            <p>\n                You can use various URL argument to modify the behavior of this\n                page.\n            </p>\n            <ul>\n                <li>\n                    <code>prefix=JD</code>, will prefix and filter keys with{\" \"}\n                    <code>JD</code>.\n                </li>\n                <li>\n                    <code>autokey</code>, will automatically generate random\n                    keys for entries. Default is false.\n                </li>\n                <li>\n                    <code>secrets=0</code>, disables secrets\n                </li>\n            </ul>\n        </>\n    )\n}\n"],"names":["useMemo","useLocationSearchParamString","key","window","url","URL","location","href","searchParams","get","undefined","useLocationSearchParamBoolean","defaultValue","v","has","FormControlLabel","Switch","React","SwitchWithLabel","props","label","labelPlacement","labelStyle","rest","Card","CardActions","CardContent","Grid","TextField","lazy","useCallback","useContext","useState","DeviceCardHeader","useServiceClient","SettingsClient","useChangeAsync","DeleteIcon","AddIcon","CmdButton","useId","LoadingProgress","bufferToString","randomDeviceId","Button","ServiceManagerContext","Suspense","AppContext","SystemUpdateAltIcon","ImportButton","SettingRow","client","name","value","mutable","autoKey","isSecret","displayName","slice","handleComponentDelete","deleteValue","keyId","valueId","nameError","valueError","AddSettingRow","keyPrefix","showSecrets","setName","setValue","secret","setSecret","handleNameChange","ev","target","trim","handleValueChange","handleChecked","checked","handleAdd","mounted","keyName","setStringValue","keyError","ImportSettingsButton","setError","handleFilesUploaded","files","file","text","json","JSON","parse","Array","isArray","entry","e","console","warn","SettingsCard","service","fileStorage","factory","srv","values","c","keys","list","filter","startsWith","map","secrets","publics","handleClear","clear","handleExport","saveText","stringify","device","length","Link","SRV_SETTINGS","ConnectAlert","useServices","useServiceProviderFromServiceClass","Page","services","serviceClass","id"],"sourceRoot":""}