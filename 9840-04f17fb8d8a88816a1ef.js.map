{"version":3,"file":"9840-04f17fb8d8a88816a1ef.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/ui/WebSerialConsoleButton.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\nimport AppContext from \"../AppContext\"\nimport { isWebSerialSupported } from \"../../../jacdac-ts/src/jdom/transport/webserial\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport TransportIcon from \"../icons/TransportIcon\"\n\nexport default function WebSerialConsoleButton() {\n    const supported = isWebSerialSupported()\n    const { setError } = useContext(AppContext)\n    const [port, setPort] = useState<SerialPort>()\n    const connected = !!port\n\n    // clean up always\n    useEffect(\n        () => () => {\n            port?.close().catch(e => {\n                console.debug(e)\n            })\n        },\n        [port]\n    )\n\n    // register disconnect\n    useEffect(() => {\n        if (!supported) return\n\n        const handleDisconnect = (ev: Event) => {\n            const other = ev.target as SerialPort\n            if (port === other) {\n                setPort(undefined)\n                console.debug(`serial console: disconnected`)\n            }\n        }\n        navigator.serial.addEventListener(\"disconnect\", handleDisconnect, false)\n        return () =>\n            navigator.serial.removeEventListener(\"disconnect\", handleDisconnect)\n    })\n\n    // request device\n    const handleRequestPort = async () => {\n        try {\n            const port = await navigator.serial.requestPort({})\n            await port.open({ baudRate: 115200 })\n            let lastChunk = \"\"\n            const appendStream = new WritableStream<string>({\n                write(newChunk) {\n                    const chunk =\n                        // eslint-disable-next-line no-control-regex\n                        (lastChunk + newChunk).replace(/\\x1b\\[\\d+(;\\d+)?m/g, \"\")\n                    const lines = chunk.split(\"\\n\")\n                    lastChunk = lines.pop()\n                    lines.filter(l => !!l).forEach(line => console.log(line))\n                },\n            })\n            port.readable\n                .pipeThrough(new TextDecoderStream())\n                .pipeTo(appendStream)\n\n            setPort(port)\n            console.debug(`serial console: connected`)\n        } catch (e) {\n            setError(e)\n            setPort(undefined)\n        }\n    }\n\n    if (!supported) return null\n    return (\n        <IconButtonWithTooltip\n            onClick={handleRequestPort}\n            color={connected ? \"primary\" : \"default\"}\n            title={connected ? `connected to serial` : \"disconnected\"}\n        >\n            <TransportIcon type=\"serial\" />\n        </IconButtonWithTooltip>\n    )\n}\n"],"names":["React","useContext","useEffect","useState","AppContext","isWebSerialSupported","IconButtonWithTooltip","TransportIcon","WebSerialConsoleButton","supported","setError","port","setPort","connected","close","catch","e","console","debug","handleDisconnect","ev","other","target","undefined","navigator","serial","addEventListener","removeEventListener","handleRequestPort","requestPort","open","baudRate","lastChunk","appendStream","WritableStream","write","newChunk","chunk","replace","lines","split","pop","filter","l","forEach","line","log","readable","pipeThrough","TextDecoderStream","pipeTo"],"sourceRoot":""}