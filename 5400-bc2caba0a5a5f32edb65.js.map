{"version":3,"file":"5400-bc2caba0a5a5f32edb65.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Edit.js","webpack://jacdac-docs/./src/components/ui/CodeSandboxButton.tsx","webpack://jacdac-docs/./src/components/ui/ReactCodeButton.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { useContext, useState } from \"react\"\nimport AppContext from \"../AppContext\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { Button } from \"gatsby-material-ui-components\"\n\nexport default function CodeSandboxButton(props: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    files: () => Record<string, any>\n    startFile?: string\n}) {\n    const { files, startFile } = props\n    const { setError } = useContext(AppContext)\n    const { mobile } = useMediaQueries()\n    const [importing, setImporting] = useState(false)\n\n    const handleClick = async () => {\n        const f = files()\n        const file =\n            startFile ||\n            Object.keys(f).filter(fn => /\\.js$/.test(fn))[0] ||\n            \"index.js\"\n        try {\n            setImporting(true)\n            const x = await fetch(\n                \"https://codesandbox.io/api/v1/sandboxes/define?json=1\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                    body: JSON.stringify({\n                        files: f,\n                    }),\n                }\n            )\n            const data = await x.json()\n            const url = `https://codesandbox.io/s/${data.sandbox_id}?file=/${file}`\n            window.open(url, \"_blank\", \"noreferrer\")\n        } catch (error) {\n            setError(error)\n        } finally {\n            setImporting(false)\n        }\n    }\n\n    return mobile ? (\n        <IconButtonWithTooltip\n            color=\"primary\"\n            onClick={handleClick}\n            disabled={importing}\n            title=\"Try in CodeSandbox\"\n        >\n            <EditIcon />\n        </IconButtonWithTooltip>\n    ) : (\n        <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={handleClick}\n            startIcon={<EditIcon />}\n            disabled={importing}\n        >\n            Try in CodeSandbox\n        </Button>\n    )\n}\n","import React, { useCallback } from \"react\"\nimport CodeSandboxButton from \"./CodeSandboxButton\"\nimport packageJson from \"../../../jacdac-ts/package.json\"\nimport reactPackageJson from \"../../../react-jacdac/package.json\"\n\nconst AppTsx = `import { JacdacProvider } from \"react-jacdac\";\nimport { bus } from \"./bus\";\nimport Connect from \"./Connect\";\nimport Demo from \"./Demo\";\n\nexport default function App() {\n  return (\n    // wrap your application with the jacdac provider\n    <JacdacProvider initialBus={bus}>\n      <Connect />\n      <Demo />\n    </JacdacProvider>\n  );\n}\n`\nconst ConnectTsx = `import React from \"react\";\nimport { useBus, useChange } from \"react-jacdac\";\n\n/**\n * A barebone connect button for Jacdac. Rewrite to your taste.\n */\nexport default function Connect() {\n  // fetch the bus from the jacdac context\n  const bus = useBus();\n  // fetch the connect state, useChange will trigger a re-render when connected changes\n  const connected = useChange(bus, (_) => _.connected);\n  // connect or disconnect in a handler\n  const handleConnect = () => (connected ? bus.disconnect() : bus.connect());\n\n  return (\n    <div>\n        <button onClick={handleConnect}>\n        jacdac {connected ? \"disconnect\" : \"connect\"}\n        </button>\n    </div>\n  );\n}\n`\nconst indexTsx = `import { render } from \"react-dom\";\nimport \"milligram\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n`\nconst busTs = `import { createWebBus } from \"jacdac-ts\";\n\n/**\n * The Jacdac bus singleton.\n *\n * Declare this instance in a separate file from your components, to avoid\n * reloading the bus in the development hot-reload cycles.\n */\nexport const bus = createWebBus();\n`\n\nexport default function ReactCodeButton(props: {\n    title?: string\n    source: { tsx?: string }\n}) {\n    const { title, source } = props\n    const { tsx = \"\" } = source\n\n    const files = useCallback(() => {\n        const DemoTsx = tsx\n        const indexHtml = `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        \n        <head>\n            <meta charset=\"utf-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n            <meta name=\"theme-color\" content=\"#000000\">\n        </head>\n        <body>\n            <noscript>\n                You need to enable JavaScript to run this app.\n            </noscript>\n            <div id=\"root\"></div>\n            <footer>\n            <small>\n            Need to learn more about Jacdac?\n            <a target=\"_blank\" href=\"https://aka.ms/jacdac\">Read the docs</a>\n            or\n            <a\n                target=\"_blank\"\n                href=\"https://github.com/microsoft/jacdac/discussions\"\n                >start a discussion</a\n            >.\n            </small>\n        </footer>\n    \n        </body>        \n        </html>  \n        `\n\n        return {\n            \"package.json\": {\n                content: {\n                    name: \"react-jacdac-starter\",\n                    version: \"1.0.0\",\n                    description: \"React, Jacdac and TypeScript start\",\n                    keywords: [\"typescript\", \"react\", \"starter\", \"jacdac\"],\n                    main: \"src/index.tsx\",\n                    dependencies: {\n                        milligram: \"1.4.1\",\n                        react: \"17.0.2\",\n                        \"react-dom\": \"17.0.2\",\n                        \"react-scripts\": \"4.0.3\",\n                        \"jacdac-ts\": `^${packageJson.version}`,\n                        \"react-jacdac\": `^${reactPackageJson.version}`,\n                    },\n                    devDependencies: {\n                        \"@types/react\": \"17.0.20\",\n                        \"@types/react-dom\": \"17.0.9\",\n                        typescript: \"4.4.2\",\n                    },\n                    scripts: {\n                        start: \"react-scripts start\",\n                        build: \"react-scripts build\",\n                        test: \"react-scripts test --env=jsdom\",\n                        eject: \"react-scripts eject\",\n                    },\n                    browserslist: [\n                        \">0.2%\",\n                        \"not dead\",\n                        \"not ie <= 11\",\n                        \"not op_mini all\",\n                    ],\n                },\n            },\n            \"src/bus.ts\": { content: busTs },\n            \"src/App.tsx\": { content: AppTsx },\n            \"src/Connect.tsx\": { content: ConnectTsx },\n            \"src/Demo.tsx\": { content: DemoTsx },\n            \"src/index.tsx\": {\n                content: indexTsx,\n            },\n            \"public/index.html\": {\n                content: indexHtml,\n            },\n        }\n    }, [title, source, tsx])\n\n    return <CodeSandboxButton files={files} startFile=\"src/Demo.tsx\" />\n}\n"],"names":["React","useContext","useState","AppContext","EditIcon","IconButtonWithTooltip","useMediaQueries","Button","CodeSandboxButton","props","files","startFile","setError","mobile","importing","setImporting","handleClick","f","file","Object","keys","filter","fn","test","x","fetch","method","headers","Accept","body","JSON","stringify","data","json","url","sandbox_id","window","open","error","useCallback","packageJson","reactPackageJson","AppTsx","ConnectTsx","indexTsx","busTs","ReactCodeButton","title","source","tsx","DemoTsx","indexHtml","content","name","version","description","keywords","main","dependencies","milligram","react","devDependencies","typescript","scripts","start","build","eject","browserslist"],"sourceRoot":""}