{"version":3,"file":"b4041f57cede5b7e3b1bea304d75a219087809dc-415086fc28673d576cf6.js","mappings":";;;;;;;;;;;;AAA0D;AACgC;AAC3D;AACP;AACsB;AACvC;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAgB;AAC/C;AACA;AACA;AACA;AACA,cAAc,uGAAwB;;AAEtC,sBAAsB,gDAAmB,QAAQ,uFAAQ;AACzD,eAAe,gDAAI;AACnB;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,yDAAe,uEAAU;AACzB;AACA,CAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCgB;AACuB;AACtD;AACA;AACA;;AAEA,2CAAe,gCAAa,eAAe,mBAAmB;AAC9D;AACA,CAAC,YAAY;;;;;;;;;;;;ACR6C;AACgC;AAC3D;AACP;AAC8B;AACR;AACgB;AACjB;AACU;AACV;AACN;AAChC;AACP;AACA,wBAAwB,kCAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB,iFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL,uGAAuG,KAAK;AAC5G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL,yGAAyG,KAAK;AAC9G;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA,yBAAyB,sCAAS;AAClC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAK;AAC9B;AACA,KAAK;AACL;;AAEA;AACA,cAAc;;AAEd;AACA,mBAAmB;;AAEnB;AACA,0BAA0B;;AAE1B;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAK;AACpB;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,kCAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CA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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/ui/CardMediaWithSkeleton.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import React from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useChange from \"../../jacdac/useChange\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nfunction DeviceProductIdentifierChip(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.ProductIdentifier)\n    )\n    const [productIdentifier] = useRegisterUnpackedValue<[number]>(register)\n    if (isNaN(productIdentifier)) return null\n\n    return (\n        <Chip\n            size=\"small\"\n            label={`pid: 0x${productIdentifier.toString(16)}`}\n        />\n    )\n}\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.FirmwareVersion)\n    )\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n    if (!firmwareVersion) return null\n\n    return <Chip size=\"small\" label={firmwareVersion} />\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.McuTemperature)\n    )\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    if (isNaN(temperature)) return null\n    return <Chip size=\"small\" label={`${temperature}°`} />\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && Flags.diagnostics && (\n                            <DeviceProductIdentifierChip device={device} />\n                        )}\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import {\n    CardMedia,\n    CardMediaProps,\n    createStyles,\n    makeStyles,\n} from \"@material-ui/core\"\nimport React from \"react\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        media: {\n            height: 0,\n            paddingTop: \"75%\", // 4:3\n        },\n    })\n)\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props\n    const classes = useStyles()\n    const hasImage = !!image || !!src\n    if (!hasImage) return null\n\n    return (\n        <CardMedia\n            className={className || classes.media}\n            {...others}\n            image={image}\n            src={src}\n        />\n    )\n}\n"],"names":["React","useDeviceSpecification","useDeviceImage","CardMediaWithSkeleton","DeviceCardMedia","props","device","specification","imageUrl","name","ControlReg","CardHeader","Chip","Typography","Link","useRegisterUnpackedValue","DeviceActions","DeviceName","identifierToUrlPath","DeviceAvatar","useChange","Flags","DeviceProductIdentifierChip","register","_","service","ProductIdentifier","productIdentifier","isNaN","toString","DeviceFirmwareVersionChip","firmwareVersionRegister","FirmwareVersion","firmwareVersion","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","showSettings","showReset","id","deviceId","filter","s","join","diagnostics","CardMedia","createStyles","makeStyles","useStyles","media","height","paddingTop","image","src","className","others","classes","hasImage"],"sourceRoot":""}