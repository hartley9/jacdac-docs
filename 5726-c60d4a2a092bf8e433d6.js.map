{"version":3,"file":"5726-c60d4a2a092bf8e433d6.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAMA;AACA;AACA;AACA;AACA;AAGe,SAASQ,qBAAT,CAA+BC,KAA/B,EAA6D;AACxE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAME,cAAc,GAAGL,uEAAW,CAACI,OAAD,EAAUN,wGAAV,CAAlC;AACA,MAAMS,MAAM,GAAGR,wFAAoB,CAACM,cAAD,EAAiBF,KAAjB,CAAnC;;AAEA,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAiBC,OAAjB,KAChBL,cADgB,aAChBA,cADgB,uBAChBA,cAAc,CAAEM,gBAAhB,CAAiCD,OAAjC,EAA0C,IAA1C,CADJ;;AAGA,MAAIH,MAAM,KAAKK,SAAf,EAA0B,oBAAO,iDAAC,kEAAD,OAAP;AAE1B,sBACI,iDAAC,kEAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,aAAS,EAAC,KAAtC;AAA4C,cAAU,EAAC;AAAvD,kBACI,iDAAC,kEAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,kEAAD;AAAY,WAAO,EAAC;AAApB,YADJ,CADJ,eAII,iDAAC,kEAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,oEAAD;AACI,SAAK,EAAC,QADV;AAEI,WAAO,EAAEL,MAFb;AAGI,YAAQ,EAAEC;AAHd,IADJ,CAJJ,CADJ;AAcH;;;;;;;;;;;;;;;;ACrCD;AACA;AAEe,SAASP,eAAT,CACXE,KADW,EAKb;AACE,MAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqCb,KAA3C;AAAA,MAAkCc,IAAlC,2GAA2Cd,KAA3C;;AACA,sBACI,iDAAC,kEAAD;AACI,WAAO,eAAE,iDAAC,kEAAD,EAAYc,IAAZ,CADb;AAEI,SAAK,EAAEF,KAFX;AAGI,kBAAc,EAAEC;AAHpB,IADJ;AAOH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRelay.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx"],"sourcesContent":["import {\n    CircularProgress,\n    FormControlLabel,\n    Grid,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport { RelayReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\n\nexport default function DashboardSoilMoisture(props: DashboardServiceProps) {\n    const { service } = props\n    const closedRegister = useRegister(service, RelayReg.Closed)\n    const closed = useRegisterBoolValue(closedRegister, props)\n\n    const handleClose = (event: unknown, checked) =>\n        closedRegister?.sendSetBoolAsync(checked, true)\n\n    if (closed === undefined) return <CircularProgress />\n\n    return (\n        <Grid container spacing={1} direction=\"row\" alignItems=\"center\">\n            <Grid item>\n                <Typography variant=\"subtitle1\">open</Typography>\n            </Grid>\n            <Grid item>\n                <SwitchWithLabel\n                    label=\"closed\"\n                    checked={closed}\n                    onChange={handleClose}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: {\n        label: ReactNode\n        labelPlacement?: \"end\" | \"start\" | \"top\" | \"bottom\"\n    } & SwitchProps\n) {\n    const { label, labelPlacement, ...rest } = props\n    return (\n        <FormControlLabel\n            control={<Switch {...rest} />}\n            label={label}\n            labelPlacement={labelPlacement}\n        />\n    )\n}\n"],"names":["CircularProgress","Grid","Typography","React","RelayReg","useRegisterBoolValue","useRegister","SwitchWithLabel","DashboardSoilMoisture","props","service","closedRegister","Closed","closed","handleClose","event","checked","sendSetBoolAsync","undefined","FormControlLabel","Switch","label","labelPlacement","rest"],"sourceRoot":""}