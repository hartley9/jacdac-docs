{"version":3,"file":"4610-f0ba5eca3d1cac92118f.js","mappings":";;;;;;;;;;;AAAsD;AACI;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,WAAW,+CAAQ;AACnB;AACA;;AAEA,+BAA+B,kDAAW;AAC1C;AACA,GAAG;AACH;AACA;;AAEe;AACf;;AAEA;AACA;AACA;;AAEA,kBAAkB,0EAAoB,CAAC,kDAAW;AAClD;AACA,GAAG;AACH,sBAAsB,6CAAM;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC9CmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,yCAAyC;AACzC;AACA,WAAW,QAAQ,WAAW;AAC9B;AACA,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,aAAa;AACjC;AACA;AACA,2DAA2D,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;;AAEA,qBAAqB,6CAAM;AAC3B,uBAAuB,6CAAM;AAC7B,gBAAgB,6CAAM;AACtB,iBAAiB,6CAAM;AACvB,iBAAiB,6CAAM;AACvB,eAAe,6CAAM;AACrB,gBAAgB,6CAAM;AACtB,gBAAgB,6CAAM;AACtB,0BAA0B;;AAE1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,8CAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AA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","sources":["webpack://jacdac-docs/./node_modules/use-debounce/esm/useDebounce.js","webpack://jacdac-docs/./node_modules/use-debounce/esm/useDebouncedCallback.js","webpack://jacdac-docs/./src/components/dialogs/StartSimulatorDialog.tsx"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nfunction valueEquality(left, right) {\n  return left === right;\n}\n\nfunction adjustFunctionValueOfSetState(value) {\n  return typeof value === 'function' ? function () {\n    return value;\n  } : value;\n}\n\nfunction useStateIgnoreCallback(initialState) {\n  var _a = useState(adjustFunctionValueOfSetState(initialState)),\n      state = _a[0],\n      setState = _a[1];\n\n  var setStateIgnoreCallback = useCallback(function (value) {\n    return setState(adjustFunctionValueOfSetState(value));\n  }, []);\n  return [state, setStateIgnoreCallback];\n}\n\nexport default function useDebounce(value, delay, options) {\n  var eq = options && options.equalityFn || valueEquality;\n\n  var _a = useStateIgnoreCallback(value),\n      state = _a[0],\n      dispatch = _a[1];\n\n  var debounced = useDebouncedCallback(useCallback(function (value) {\n    return dispatch(value);\n  }, [dispatch]), delay, options);\n  var previousValue = useRef(value);\n\n  if (!eq(previousValue.current, value)) {\n    debounced(value);\n    previousValue.current = value;\n  }\n\n  return [state, {\n    cancel: debounced.cancel,\n    isPending: debounced.isPending,\n    flush: debounced.flush\n  }];\n}","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\n\nexport default function useDebouncedCallback(func, wait, options) {\n  var _this = this;\n\n  var lastCallTime = useRef(null);\n  var lastInvokeTime = useRef(0);\n  var timerId = useRef(null);\n  var lastArgs = useRef([]);\n  var lastThis = useRef();\n  var result = useRef();\n  var funcRef = useRef(func);\n  var mounted = useRef(true);\n  funcRef.current = func; // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n\n  var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = +wait || 0;\n  options = options || {};\n  var leading = !!options.leading;\n  var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n\n  var maxing = ('maxWait' in options);\n  var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []); // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n\n  var debounced = useMemo(function () {\n    var invokeFunc = function invokeFunc(time) {\n      var args = lastArgs.current;\n      var thisArg = lastThis.current;\n      lastArgs.current = lastThis.current = null;\n      lastInvokeTime.current = time;\n      return result.current = funcRef.current.apply(thisArg, args);\n    };\n\n    var startTimer = function startTimer(pendingFunc, wait) {\n      if (useRAF) cancelAnimationFrame(timerId.current);\n      timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n    };\n\n    var shouldInvoke = function shouldInvoke(time) {\n      if (!mounted.current) return false;\n      var timeSinceLastCall = time - lastCallTime.current;\n      var timeSinceLastInvoke = time - lastInvokeTime.current; // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n\n      return !lastCallTime.current || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n    };\n\n    var trailingEdge = function trailingEdge(time) {\n      timerId.current = null; // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time);\n      }\n\n      lastArgs.current = lastThis.current = null;\n      return result.current;\n    };\n\n    var timerExpired = function timerExpired() {\n      var time = Date.now();\n\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      } // https://github.com/xnimorz/use-debounce/issues/97\n\n\n      if (!mounted.current) {\n        return;\n      } // Remaining wait calculation\n\n\n      var timeSinceLastCall = time - lastCallTime.current;\n      var timeSinceLastInvoke = time - lastInvokeTime.current;\n      var timeWaiting = wait - timeSinceLastCall;\n      var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting; // Restart the timer\n\n      startTimer(timerExpired, remainingWait);\n    };\n\n    var func = function func() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var time = Date.now();\n      var isInvoking = shouldInvoke(time);\n      lastArgs.current = args;\n      lastThis.current = _this;\n      lastCallTime.current = time;\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          lastInvokeTime.current = lastCallTime.current; // Start the timer for the trailing edge.\n\n          startTimer(timerExpired, wait); // Invoke the leading edge.\n\n          return leading ? invokeFunc(lastCallTime.current) : result.current;\n        }\n\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          startTimer(timerExpired, wait);\n          return invokeFunc(lastCallTime.current);\n        }\n      }\n\n      if (!timerId.current) {\n        startTimer(timerExpired, wait);\n      }\n\n      return result.current;\n    };\n\n    func.cancel = function () {\n      if (timerId.current) {\n        useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n      }\n\n      lastInvokeTime.current = 0;\n      lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n    };\n\n    func.isPending = function () {\n      return !!timerId.current;\n    };\n\n    func.flush = function () {\n      return !timerId.current ? result.current : trailingEdge(Date.now());\n    };\n\n    return func;\n  }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n  return debounced;\n}","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    ListItem,\n    TextField,\n} from \"@material-ui/core\"\nimport AppContext from \"../AppContext\"\nimport React, { ChangeEvent, useContext, useMemo, useState } from \"react\"\nimport { useId } from \"react-use-id-hook\"\nimport servers, {\n    addServiceProvider,\n    ServiceProviderDefinition,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { delay, uniqueMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport HostedSimulatorsContext, {\n    HostedSimulatorDefinition,\n    hostedSimulatorDefinitions,\n} from \"../HostedSimulatorsContext\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport { useDebounce } from \"use-debounce\"\nimport {\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../../../jacdac-ts/src/jdom/spec\"\n\nexport default function StartSimulatorDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const { open, onClose } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [query, setQuery] = useState(\"\")\n    const { enqueueSnackbar } = useContext(AppContext)\n    const { addHostedSimulator } = useContext(HostedSimulatorsContext)\n    const { trackEvent } = useAnalytics()\n    const searchId = useId()\n    const deviceHostDialogId = useId()\n    const deviceHostLabelId = useId()\n\n    const [dquery] = useDebounce(query.toLowerCase(), 500)\n    const providerDefinitions = useMemo(\n        () =>\n            servers().filter(\n                server =>\n                    !dquery || server.name.toLowerCase().indexOf(dquery) > -1\n            ),\n        [dquery]\n    )\n    const simulatorDefinitions = useMemo(\n        () =>\n            hostedSimulatorDefinitions().filter(\n                sim => !dquery || sim.name.toLowerCase().indexOf(dquery) > -1\n            ),\n        [dquery]\n    )\n    const { mobile } = useMediaQueries()\n\n    const handleProviderDefinition =\n        (provider: ServiceProviderDefinition) => () => {\n            trackEvent(\"dashboard.server.start\", { server: provider.name })\n            addServiceProvider(bus, provider)\n            onClose()\n        }\n    const handleHostedSimulator =\n        (simulator: HostedSimulatorDefinition) => () => {\n            trackEvent(\"dashboard.sim.start\", { simulator: simulator.name })\n            addHostedSimulator(simulator)\n            onClose()\n        }\n    const handleQuery = (ev: ChangeEvent<HTMLInputElement>) =>\n        setQuery(ev.target.value)\n    const handleCancel = () => {\n        onClose()\n    }\n    const handleAddAll = async () => {\n        const allProviderDefinitions = uniqueMap(\n            providerDefinitions.filter(hd => hd.serviceClasses.length === 1),\n            hd => hd.serviceClasses[0].toString(),\n            h => h\n        )\n        enqueueSnackbar(\n            `starting ${allProviderDefinitions.length} simulators...`,\n            `info`\n        )\n        onClose()\n        for (const provider of allProviderDefinitions) {\n            await delay(100)\n            addServiceProvider(bus, provider)\n        }\n    }\n\n    return (\n        <Dialog\n            id={deviceHostDialogId}\n            aria-labelledby={deviceHostLabelId}\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n            fullScreen={mobile}\n        >\n            <DialogTitle id={deviceHostLabelId}>Start a simulator</DialogTitle>\n            <DialogContent>\n                <TextField\n                    id={searchId}\n                    label=\"Filter\"\n                    type=\"search\"\n                    fullWidth={true}\n                    value={query}\n                    onChange={handleQuery}\n                />\n                <List>\n                    {providerDefinitions.map(host => (\n                        <ListItem\n                            button\n                            key={host.name}\n                            onClick={handleProviderDefinition(host)}\n                        >\n                            {host.name}\n                        </ListItem>\n                    ))}\n                    {simulatorDefinitions.map(host => (\n                        <ListItem\n                            button\n                            key={host.name}\n                            onClick={handleHostedSimulator(host)}\n                        >\n                            {host.name}\n                        </ListItem>\n                    ))}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                {Flags.diagnostics && (\n                    <Button variant=\"outlined\" onClick={handleAddAll}>\n                        start all simulators\n                    </Button>\n                )}\n                <Button\n                    aria-label={`cancel`}\n                    variant=\"outlined\"\n                    title=\"Cancel\"\n                    onClick={handleCancel}\n                >\n                    cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","List","ListItem","TextField","AppContext","React","useContext","useMemo","useState","useId","servers","addServiceProvider","Flags","delay","uniqueMap","JacdacContext","useMediaQueries","HostedSimulatorsContext","hostedSimulatorDefinitions","useAnalytics","useDebounce","StartSimulatorDialog","props","open","onClose","bus","query","setQuery","enqueueSnackbar","addHostedSimulator","trackEvent","searchId","deviceHostDialogId","deviceHostLabelId","dquery","toLowerCase","providerDefinitions","filter","server","name","indexOf","simulatorDefinitions","sim","mobile","handleProviderDefinition","provider","handleHostedSimulator","simulator","handleQuery","ev","target","value","handleCancel","handleAddAll","allProviderDefinitions","hd","serviceClasses","length","toString","h","map","host","diagnostics"],"sourceRoot":""}