{"version":3,"file":"component---src-pages-clients-react-mdx-c1f8790b3456fd361e8d.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACE;;AACF;AACA;;AAEA;;AAEA;AACO,IAAMG,YAAY,GAAG,EAArB;AACP,IAAMC,WAAW,GAAG;AAClBD,EAAAA;AADkB,CAApB;AAGA,IAAME,SAAS,GAAGH,kHAAlB;AACe,SAASI,UAAT,OAGZ;AAAA,MAHgC;AACjCC,IAAAA;AADiC,GAGhC;AAAA,MADEC,KACF;;AACD,SAAO,mDAAC,SAAD,oBAAeJ,WAAf,EAAgCI,KAAhC;AAAuC,cAAU,EAAED,UAAnD;AAA+D,WAAO,EAAC;AAAvE,MAGL;AACE,UAAM,eADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,gBADT;AAEC,kBAAc,yBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,kBAHK,EAuBL,0FAA+B;AAAG,cAAU,EAAC,GAAd;AAC3B,YAAQ;AADmB,eAA/B,WAE6B;AAAG,cAAU,EAAC,GAAd;AACzB,YAAQ;AADiB,aAF7B,yCAIyD;AAAG,cAAU,EAAC,GAAd;AACrD,YAAQ,sBAD6C;AAErD,cAAU,QAF2C;AAGrD,WAAO;AAH8C,aAJzD,+CASwB;AAAG,cAAU,EAAC,GAAd;AACpB,YAAQ;AADY,0BATxB,MAvBK,EAmCL,+DACE;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ,2CADQ;AAEhB,cAAU,QAFM;AAGhB,WAAO;AAHS,sBAApB,CADF,EAME;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ,2CADQ;AAEhB,cAAU,QAFM;AAGhB,WAAO;AAHS,qBAApB,+BANF,CAnCK,EA+CL;AACE,UAAM,cADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,eADT;AAEC,kBAAc,wBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,kBA/CK,EAmEL,oLACoB;AAAY,cAAU,EAAC;AAAvB,WADpB,4BAnEK,EAqEL,yIAA8E;AAAY,cAAU,EAAC;AAAvB,mBAA9E,kBACE;AAAY,cAAU,EAAC;AAAvB,mBADF,8BACqF;AAAG,cAAU,EAAC,GAAd;AACjF,YAAQ;AADyE,mCADrF,QAG8C;AAAY,cAAU,EAAC;AAAvB,yBAH9C,4JArEK,EA0EL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,uIAAL,CA1EK,EA+EL,mFAAwB;AAAG,cAAU,EAAC,GAAd;AACpB,YAAQ;AADY,2CAAxB,qCAEmF;AAAY,cAAU,EAAC;AAAvB,gBAFnF,sBAGE;AAAY,cAAU,EAAC;AAAvB,mBAHF,uIAIyC;AAAY,cAAU,EAAC;AAAvB,wBAJzC,0BA/EK,EAoFL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,iIAAL,CApFK,EAyFL,sEAAW;AAAY,cAAU,EAAC;AAAvB,wBAAX,6KACuF;AAAY,cAAU,EAAC;AAAvB,gBADvF,2MAzFK,EA8FL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,uGAAL,CA9FK,EAmGL,yJAnGK,EAoGL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,gIAAL,CApGK,EA6GL,yJA7GK,EA8GL,gEAAK;AAAM,cAAU,EAAC,KAAjB;AACD,iBAAa;AADZ,utDAAL,CA9GK,EAoKL;AACE,UAAM,YADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,aADT;AAEC,kBAAc,sBAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,eApKK,EAwLL,+DACE;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ;AADQ,aAApB,8BAE8C;AAAY,cAAU,EAAC;AAAvB,qBAF9C,wBADF,EAIE;AAAI,cAAU,EAAC;AAAf,KAAoB;AAAG,cAAU,EAAC,IAAd;AAChB,YAAQ;AADQ,aAApB,wDAJF,CAxLK,EAgML;AACE,UAAM,4BADR;AAEE,aAAS;AACP,kBAAY;AADL;AAFX,KAKG;AAAG,cAAU,EAAC,IAAd;AACC,YAAQ,6BADT;AAEC,kBAAc,sCAFf;AAGC,iBAAa;AAHd,KAIE;AAAK,cAAU,EAAC,GAAhB;AACC,mBAAe,MADhB;AAEC,iBAAa,OAFd;AAGC,cAAU,IAHX;AAIC,eAAW,KAJZ;AAKC,eAAW,WALZ;AAMC,aAAS;AANV,KAOE;AAAM,cAAU,EAAC,KAAjB;AACC,gBAAY,SADb;AAEC,SAAK;AAFN,IAPF,CAJF,CALH,+BAhMK,EAoNL,4EAAiB;AAAG,cAAU,EAAC,GAAd;AACb,YAAQ;AADK,wBAAjB,gIApNK,CAAP;AAyND;AACD;AACAD,UAAU,CAACG,cAAX,GAA4B,IAA5B;;;;;;;;CC1OA;;AACA,IAAME,IAAI,GAAG,QAAyB;AAAA,MAAxB;AAAEH,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAwB;AAClC,sBAAO,iDAAC,2CAAD,EAAcJ,KAAd,EAAsBI,QAAtB,CAAP;AACH,CAFD;;AAIA,yDAAeD,IAAf","sources":["webpack://jacdac-docs/./src/pages/clients/react.mdx","webpack://jacdac-docs/./src/components/Page.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-docs/jacdac-docs/src/components/Page.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-package\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#react-package\",\n        \"aria-label\": \"react package permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`React package`}</h1>\n    <p>{`This package provides a `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/clients/react/setup/\"\n      }}>{`context`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/clients/react/hooks/\"\n      }}>{`hooks`}</a>{` to interact with the bus within a `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`React`}</a>{` application.\nIt is built on top of the `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/clients/javascript\"\n      }}>{`JavaScript package`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/microsoft/react-jacdac\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`GitHub project`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://microsoft.github.io/react-jacdac/\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`API reference`}</a>{` for a full list of hooks.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"color-slider\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#color-slider\",\n        \"aria-label\": \"color slider permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Color slider!`}</h2>\n    <p>{`Let's introduce the library with a fully-fledge mini-application that lets you control the\nbackground color of a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` using a Jacdac slider.`}</p>\n    <p>{`We start by retreiving any potentiometer attached to the bus using the `}<inlineCode parentName=\"p\">{`useServices`}</inlineCode>{` hook.\nThe `}<inlineCode parentName=\"p\">{`useServices`}</inlineCode>{` hook returns list of a `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/services/potentiometer/\"\n      }}>{`potentiometer service nodes`}</a>{` (`}<inlineCode parentName=\"p\">{`SRV_POTENTIOMETER`}</inlineCode>{`) on the bus.\nThe service JDOM nodes mirror the state of the physical services (although we could support multiple sliders, we simply grab the first).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`// auto-update list of slider services on the jacdac bus\nconst service = useServices({ serviceClass: SRV_POTENTIOMETER })[0]\n`}</code></pre>\n    <p>{`From reading the `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/services/potentiometer\"\n      }}>{`potentiometer service specification`}</a>{`, we know that should read the `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` register.\nThe `}<inlineCode parentName=\"p\">{`useRegister`}</inlineCode>{` hook returns the register JDOM node that mirrors the state of the physical register\n(you will find pregenerated constants like `}<inlineCode parentName=\"p\">{`PotentiometerReg`}</inlineCode>{` for every services).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`// the position register returns a 0..1 value\nconst positionRegister = useRegister(service, PotentiometerReg.Position)\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useRegisterValue`}</inlineCode>{` unpacks latest data received from the bus and returns the data as an array.\nSince the position register has a single filed, we destructure the array into a variable `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{`\nwhich holds a floating point number between 0 and 1.\nThe hook will trigger a render whenever it receives new data\nand it also makes sure that the bus keeps refreshing the value of that register.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`// read and decode the value\nconst [position] = useRegisterValue<[number]>(positionRegister)\n`}</code></pre>\n    <p>{`Once you have the value, we generate a HSL color and stuff it into the style of a div...`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`  return (\n    <div\n      style={{\n        backgroundColor: \\`hsl(\\${position * 360}, 50%, 50%)\\`,\n\n        ...}} />\n`}</code></pre>\n    <p>{`All together the demo looks like this (you can open it up in codesandbox to try it out!)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const Demo = () => {\n  // auto-update list of slider services on the jacdac bus\n  const service = useServices({ serviceClass: SRV_POTENTIOMETER })[0];\n  // the position register returns a 0..1 value\n  const positionRegister = useRegister(service, PotentiometerReg.Position);\n  // read and decode the value\n  const [position] = useRegisterValue<[number]>(positionRegister);\n  // position is undefined if data is unavailable\n  if (position === undefined) return null;\n  // we have a position reading! (between 0 and 1)\n  // draw a colored rectangle\n  return (\n    <div\n      style={{\n        backgroundColor: \\`hsl(\\${position * 360}, 50%, 50%)\\`,\n        width: \\`10rem\\`,\n        height: \\`10rem\\`,\n        borderRadius: \\`1rem\\`\n      }}\n    />\n  );\n};\n-----\nimport React from \"react\";\nimport { SRV_POTENTIOMETER, PotentiometerReg } from \"jacdac-ts\";\nimport { useServices, useRegister, useRegisterValue } from \"react-jacdac\";\n\nconst Demo = () => {\n  // auto-update list of slider services on the jacdac bus\n  const service = useServices({ serviceClass: SRV_POTENTIOMETER })[0];\n  // the position register returns a 0..1 value\n  const positionRegister = useRegister(service, PotentiometerReg.Position);\n  // read and decode the value\n  const [position] = useRegisterValue<[number]>(positionRegister);\n  // position is undefined if data is unavailable\n  if (position === undefined) return null;\n  // we have a position reading! (between 0 and 1)\n  // draw a colored rectangle\n  return (\n    <div\n      style={{\n        backgroundColor: \\`hsl(\\${position * 360}, 50%, 50%)\\`,\n        width: \\`10rem\\`,\n        height: \\`10rem\\`,\n        borderRadius: \\`1rem\\`\n      }}\n    />\n  );\n};\n\nexport default Demo;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next-steps\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#next-steps\",\n        \"aria-label\": \"next steps permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Next steps`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/clients/react/setup/\"\n        }}>{`setup`}</a>{`, you need to mount the `}<inlineCode parentName=\"li\">{`JacdacContext`}</inlineCode>{` in your React tree`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-docs/clients/react/hooks/\"\n        }}>{`hooks`}</a>{`, integrate Jacdac in your React app with the hooks`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"developing-with-simulators\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#developing-with-simulators\",\n        \"aria-label\": \"developing with simulators permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Developing with simulators`}</h2>\n    <p>{`Using the `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-docs/clients/javascript/devtools\"\n      }}>{`Jacdac Dev Tools`}</a>{`, you can test your code against simulated Jacdac modules. Open the devtools, copy your locally hosted URL and get started!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\"\n\n// eslint-disable-next-line react/prop-types\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page\n"],"names":["React","mdx","DefaultLayout","_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent","Fragment","Page","children"],"sourceRoot":""}