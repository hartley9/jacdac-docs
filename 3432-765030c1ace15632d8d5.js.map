{"version":3,"file":"3432-765030c1ace15632d8d5.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/firmware/FirmwareLoader.tsx","webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/semver.ts"],"sourcesContent":["import React from \"react\"\nimport useFirmwareBlobs from \"./useFirmwareBlobs\"\n\nexport default function FirmwareLoader() {\n    useFirmwareBlobs()\n    return <></>\n}\n","import { DependencyList, useEffect } from \"react\"\n\ntype RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n    timeout: number\n}\ntype RequestIdleCallbackDeadline = {\n    readonly didTimeout: boolean\n    timeRemaining: () => number\n}\n\ndeclare global {\n    interface Window {\n        requestIdleCallback: (\n            callback: (deadline: RequestIdleCallbackDeadline) => void,\n            opts?: RequestIdleCallbackOptions\n        ) => RequestIdleCallbackHandle\n        cancelIdleCallback: (handle: RequestIdleCallbackHandle) => void\n    }\n}\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { fetchLatestRelease, fetchReleaseBinary } from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\nimport useMounted from \"../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { trackEvent } = useAnalytics()\n    const [throttled, setThrottled] = useState(false)\n    const mounted = useMounted()\n    const firmwares = db?.firmwares\n\n    const loadFirmwares = useCallback(async () => {\n        console.log(`firmware: load`)\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const missingSlugs = unique(\n            deviceSpecifications()\n                .filter(spec => !!spec?.productIdentifiers?.length) // needs some product identifiers\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substr(\"https://github.com/\".length))\n                .filter(slug => names.indexOf(slug) < 0)\n        )\n        for (const slug of missingSlugs) {\n            console.log(`db: fetch latest release of ${slug}`)\n            const { status, release } = await fetchLatestRelease(slug, {\n                ignoreThrottled: true,\n            })\n            trackEvent(\"github.fetch\", { status, slug })\n            if (status === 403) {\n                if (mounted()) setThrottled(true)\n            }\n            if (!release?.version) {\n                console.warn(`release not found`)\n                return\n            }\n            setThrottled(false)\n            console.log(`db: fetch binary release ${slug} ${release.version}`)\n            const fw = await fetchReleaseBinary(slug, release.version)\n            if (fw) {\n                console.log(\n                    `db: binary release ${slug} ${release.version} downloaded`\n                )\n                firmwares.set(slug, fw)\n            }\n            // throttle github queries\n            await bus.delay(5000)\n        }\n    }, [db, firmwares, throttled])\n    useIdleCallback(loadFirmwares, 5000, [db, firmwares])\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            console.log(`firmwares: change`)\n            const names = await fw?.list()\n            console.log(`import stored uf2`, names)\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const blob = await fw.get(name)\n                    const uf2Blobs = await parseFirmwareFile(blob, name)\n                    uf2Blobs?.forEach(uf2Blob => {\n                        uf2s.push(uf2Blob)\n                    })\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return { throttled }\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug?.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const blob = await firmwares?.get(repoSlug)\n            if (!blob) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(blob, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        await firmwares?.set(repoSlug, f)\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n"],"names":["React","useFirmwareBlobs","FirmwareLoader","useEffect","useIdleCallback","cb","timeout","deps","window","id","requestIdleCallback","cancelIdleCallback","setTimeout","clearTimeout","useCallback","useContext","useState","JacdacContext","parseFirmwareFile","DbContext","useChangeAsync","deviceSpecifications","unique","fetchLatestRelease","fetchReleaseBinary","useMounted","useAnalytics","bus","db","trackEvent","throttled","setThrottled","mounted","firmwares","loadFirmwares","console","log","names","list","missingSlugs","filter","spec","productIdentifiers","length","map","repo","test","substr","slug","indexOf","status","release","ignoreThrottled","version","warn","fw","set","delay","uf2s","name","blob","get","uf2Blobs","forEach","uf2Blob","push","firmwareBlobs","useFirmwareBlob","repoSlug","replace","blobs","undefined","setFirmwareFile","tag","f","useEffectAsync","useFetch","url","options","response","setResponse","error","setError","setStatus","loading","setLoading","res","fetch","json","semverCmp","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","exec","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","cleaned","parts","split","repoPath","folder","slice","join","parseRepoUrl","m","owner","uri","resp","releases","Error","downloadUrl","req","headers","Accept","firmware","fetchText","path","mimeType","src","text","useFetchApi","useFetchJSON","useRepository","useLatestRelease","useLatestReleases","cmp","a","b","d","major","minor","patch","pre","i","aa","bb","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build"],"sourceRoot":""}