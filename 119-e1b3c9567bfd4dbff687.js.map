{"version":3,"file":"119-e1b3c9567bfd4dbff687.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,8BAA8B,mBAAO,CAAC,KAA+C;;AAErF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;ACnBf;CAEA;;AACA;AACA;AACA;AACA,IAAMQ,cAAc,gBAAGP,2CAAI,CAAC,MAAM,qGAAP,CAA3B;AAEe,SAASQ,YAAT,CAAsBC,KAAtB,EAQZ;AACC,MAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,eAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,aAJE;AAKFC,IAAAA,IALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA;AAPE,MAQFP,KARJ;AASA,MAAM;AAAA,OAACQ,IAAD;AAAA,OAAOC;AAAP,MAAkBjB,+CAAQ,CAAC,KAAD,CAAhC;;AAEA,MAAMkB,UAAU,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAGA,MAAME,UAAU,GAAIC,KAAD,IAAmB;AAClC,QAAIA,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAEC,MAAX,EAAmBX,eAAe,CAACU,KAAD,CAAf;AACnBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAIA,MAAMK,WAAW,GAAG,MAAML,OAAO,CAAC,KAAD,CAAjC;;AAEA,sBACI,iDAAC,kEAAD;AAAK,aAAS,EAAEF;AAAhB,KACKF,IAAI,iBACD,iDAAC,0EAAD;AAAuB,SAAK,EAAEJ,IAA9B;AAAoC,WAAO,EAAES;AAA7C,kBACI,iDAAC,iFAAD,OADJ,CAFR,EAMK,CAACL,IAAD,iBACG,iDAAC,kEAAD;AACI,YAAQ,EAAEF,QADd;AAEI,WAAO,EAAC,UAFZ;AAGI,WAAO,EAAEO,UAHb;AAII,aAAS,eAAE,iDAAC,iFAAD;AAJf,KAMKT,IANL,CAPR,EAgBKO,IAAI,iBACD,iDAAC,6DAAD,qBACI,iDAAC,cAAD;AACI,QAAI,EAAEA,IADV;AAEI,UAAM,EAAEG,UAFZ;AAGI,eAAW,EAAE,OAHjB;AAII,WAAO,EAAEG,WAJb;AAKI,iBAAa,EAAEV,aALnB;AAMI,kBAAc,EAAE,IANpB;AAOI,cAAU,EAAEE,UAAU,IAAI,CAP9B;AAQI,oBAAgB,EAAE;AARtB,IADJ,CAjBR,CADJ;AAiCH","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/OpenInBrowser.js","webpack://jacdac-docs/./src/components/ImportButton.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","import React, { lazy, useState } from \"react\"\nimport { Box, Button } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport Suspense from \"./ui/Suspense\"\nconst DropzoneDialog = lazy(() => import(\"./ui/DropzoneDialog\"))\n\nexport default function ImportButton(props: {\n    icon?: boolean\n    text: string\n    onFilesUploaded: (files: File[]) => void\n    disabled?: boolean\n    acceptedFiles?: string[]\n    filesLimit?: number\n    className?: string\n}) {\n    const {\n        text,\n        onFilesUploaded,\n        disabled,\n        acceptedFiles,\n        icon,\n        filesLimit,\n        className,\n    } = props\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n    const handleSave = (files: File[]) => {\n        if (files?.length) onFilesUploaded(files)\n        setOpen(false)\n    }\n    const handleClose = () => setOpen(false)\n\n    return (\n        <Box className={className}>\n            {icon && (\n                <IconButtonWithTooltip title={text} onClick={handleOpen}>\n                    <OpenInBrowserIcon />\n                </IconButtonWithTooltip>\n            )}\n            {!icon && (\n                <Button\n                    disabled={disabled}\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    startIcon={<OpenInBrowserIcon />}\n                >\n                    {text}\n                </Button>\n            )}\n            {open && (\n                <Suspense>\n                    <DropzoneDialog\n                        open={open}\n                        onSave={handleSave}\n                        maxFileSize={5000000}\n                        onClose={handleClose}\n                        acceptedFiles={acceptedFiles}\n                        clearOnUnmount={true}\n                        filesLimit={filesLimit || 1}\n                        submitButtonText={\"import\"}\n                    />\n                </Suspense>\n            )}\n        </Box>\n    )\n}\n"],"names":["React","lazy","useState","Box","Button","OpenInBrowserIcon","IconButtonWithTooltip","Suspense","DropzoneDialog","ImportButton","props","text","onFilesUploaded","disabled","acceptedFiles","icon","filesLimit","className","open","setOpen","handleOpen","handleSave","files","length","handleClose"],"sourceRoot":""}