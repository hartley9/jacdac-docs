{"version":3,"file":"86ab0ffe4ebd6a8173cf195d01dfee36185fdf2b-e93c240b734b4d227c10.js","mappings":";;;;;;;;;;;;;;;AAA0D;AACgC;AAC3D;AACP;AACqB;AACC;AACe;AACnB;AAC1C,6BAA6B;;AAEtB;AACP;AACA,4CAA4C,2EAAO,gBAAgB,0EAAM;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,yEAAyE;AACzE;AACA;AACA,KAAK;;AAEL,4EAA4E;AAC5E;AACA;AACA,KAAK;;AAEL;AACA,mBAAmB;;AAEnB;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,gEAAgE;AAChE;AACA;AACA,KAAK;;AAEL,kEAAkE;AAClE;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,6CAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uGAAwB;;AAEtC,cAAc,qEAAQ;AACtB;AACA;AACA,YAAY;AACZ;AACA;;AAEA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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/DeleteSweep.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/NavigateNext.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/PlayArrow.js","webpack://jacdac-docs/./src/components/model-editor/MBModel.ts","webpack://jacdac-docs/./src/components/model-editor/TrainModel.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0 -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0 -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z\"\n}), 'DeleteSweep');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","import { JDEventSource } from \"../../../jacdac-ts/src/jdom/eventsource\"\nimport type {\n    TFModelTrainingParams,\n    TFLayerStats,\n} from \"../../workers/tf/dist/node_modules/tf.worker\"\n\nexport interface ModelStats {\n    total: TFLayerStats\n    layers: TFLayerStats[]\n}\n\nexport const DEFAULT_MODEL = \"default\"\nexport const MCU_SPEED = 64000 // for microbit in 1/ms\nexport const MCU_FLOAT_SIZE = 2\n\nexport function validModelJSON(blockJSON) {\n    const warnings = {}\n\n    // don't check empty block JSON\n    if (!blockJSON) return undefined\n\n    // don't check default models\n    if (blockJSON == DEFAULT_MODEL) return warnings\n\n    // 1. make sure all of the training parameters are present\n    const blockParams = blockJSON.inputs[1].fields.expand_button.value\n    if (\n        !blockParams.lossFn ||\n        !blockParams.optimizer ||\n        !blockParams.metrics ||\n        !blockParams.numEpochs\n    ) {\n        warnings[blockJSON.id] =\n            \"Missing training parameters. Expand the block to enter parameters\"\n    }\n\n    // 2. make sure there is at least one layer\n    const firstLayer = blockJSON.inputs.filter(\n        input => input.name == \"LAYER_INPUTS\"\n    )[0].child\n    if (!firstLayer) {\n        warnings[blockJSON.id] = \"Cannot train empty model\"\n        return warnings\n    }\n\n    // 3. make sure layer arch starts with a conv, pool, or flatten\n    let convolutionType\n    if (\n        firstLayer.type == \"model_block_conv1d_layer\" ||\n        firstLayer.type == \"model_block_maxpool1d_layer\"\n        //layerBlock.type == \"model_block_avgpool1d_layer\"\n    ) {\n        convolutionType = \"1d\"\n    } else if (\n        firstLayer.type == \"model_block_conv2d_layer\" ||\n        firstLayer.type == \"model_block_maxpool2d_layer\"\n        //layerBlock.type == \"model_block_avgpool2d_layer\"\n    ) {\n        convolutionType = \"2d\"\n    } else if (firstLayer.type != \"model_block_flatten_layer\") {\n        warnings[firstLayer.id] =\n            \"Models must start with a convolutional layer, pooling layer, or flatten layer.\"\n    }\n\n    // 4. make sure a flatten layer is present\n    let foundFlatten = firstLayer.type == \"model_block_flatten_layer\"\n\n    // 5. the smallest possible model is a flatten layer plus a dense layer\n    let minimumModel = false\n\n    firstLayer.children?.forEach((childBlock, idx) => {\n        if (!minimumModel) minimumModel = true\n        // 6. make sure that only dense layers come after flatten\n        if (foundFlatten) {\n            if (\n                childBlock.type != \"model_block_dense_layer\" &&\n                childBlock.type != \"model_block_dropout_layer\"\n            )\n                warnings[childBlock.id] =\n                    \"Only dense and dropout layers can go after the flatten layer\"\n        }\n        if (!foundFlatten)\n            foundFlatten = childBlock.type == \"model_block_flatten_layer\"\n\n        // 7. make sure 1d/2d model types are consistent\n        if (convolutionType == \"1d\" && childBlock.type.indexOf(\"2d\") > -1)\n            warnings[childBlock.id] = `All layers in this model must be 1d`\n        else if (convolutionType == \"2d\" && childBlock.type.indexOf(\"1d\") > -1)\n            warnings[childBlock.id] = `All layers in this model must be 2d`\n\n        // 8. check that the last layer is a dense layer\n        if (idx == firstLayer.children.length - 1) {\n            if (childBlock.type != \"model_block_dense_layer\") {\n                warnings[childBlock.id] =\n                    \"Last layer in model must be a dense layer\"\n            } else {\n                // dense layer must have units equal to output shape & a softmax activation\n                const params = childBlock.inputs[0].fields.expand_button.value\n\n                // 9. final dense layer must have a softmax activation\n                if (params.activation != \"softmax\")\n                    warnings[\n                        childBlock.id\n                    ] = `The final dense layer must use \"softmax\" as activation function`\n\n                // 10. final dense layer must have num units equal to the number of labels\n                /*if (params.numUnits != outputShape)\n                    warnings[\n                        childBlock.id\n                    ] = `The final dense layer must have a number of units equal to the output shape`*/\n            }\n        }\n    })\n\n    if (!minimumModel) {\n        warnings[blockJSON.id] =\n            \"Models must contain one flatten layer that is followed by at least one dense layer\"\n    }\n    if (!foundFlatten) {\n        warnings[blockJSON.id] =\n            \"Models must contain at least one flatten layer\"\n    }\n\n    return warnings\n}\n\nexport default class MBModel extends JDEventSource {\n    // maintain info about the dataset this model was created for\n    inputShape: number[]\n    inputTypes: string[]\n    inputInterval: number\n    outputShape: number\n\n    // maintain training info about the model\n    armModel: string\n    trainingAcc: number\n    modelStats: ModelStats\n    modelSummary: string[]\n    weightData: ArrayBuffer\n    trainingParams: TFModelTrainingParams\n\n    // maintain the blockJSON that goes with this model\n    blockJSON: any\n    layerJSON: any[]\n    convolutionType: string\n\n    static createFromFile(modelObj: {\n        name: string\n        inputShape: number[]\n        inputTypes: string[]\n        inputInterval: number\n        convolutionType: string\n        labels: string[]\n        modelJSON: any\n        modelStats: any\n        outputShape: number\n        status?: string\n        trainingAcc?: number\n        weights?: number[]\n    }) {\n        const mbModel = new MBModel(\n            modelObj.name,\n            modelObj.labels,\n            modelObj.modelJSON,\n            modelObj.status\n        )\n        mbModel.inputShape = modelObj.inputShape\n        mbModel.inputTypes = modelObj.inputTypes\n        mbModel.inputInterval = modelObj.inputInterval || 100\n        mbModel.outputShape = modelObj.outputShape\n        mbModel.convolutionType = modelObj.convolutionType\n\n        mbModel.trainingAcc = modelObj.trainingAcc || 0\n        mbModel.weightData =\n            new Uint32Array(modelObj.weights).buffer || new ArrayBuffer(0)\n        mbModel.modelStats = modelObj.modelStats || undefined\n\n        return mbModel\n    }\n\n    constructor(\n        public name: string,\n        public labels?: string[],\n        public modelJSON?: any,\n        public status?: string\n    ) {\n        super()\n\n        this.labels = this.labels || []\n        this.modelJSON = this.modelJSON || \"\"\n        this.status = this.status || \"empty\"\n\n        this.weightData = new ArrayBuffer(0)\n    }\n\n    get summary() {\n        const modelInfo = [\n            `Training Status: ${this.status}`,\n            `Input Types: ${this.inputTypes}`,\n        ]\n        if (this.modelStats)\n            modelInfo.push(`Model Stats: ${this.modelStatSummary}`)\n\n        return modelInfo\n    }\n\n    get modelStatSummary() {\n        if (!this.modelStats || !this.modelStats.layers.length) return \"\"\n\n        const totalBytes =\n            this.modelStats.total.weightBytes + this.modelStats.total.codeBytes\n        const totalCycles = this.modelStats.total.optimizedCycles\n        const executionTimeMs = totalCycles / MCU_SPEED\n        return `${this.modelStats.layers.length} layers, ${(\n            totalBytes / 1000\n        ).toPrecision(2)} KB, ${executionTimeMs.toPrecision(2)}ms`\n    }\n\n    set parseBlockJSON(blockJSON: any) {\n        this.blockJSON = blockJSON\n\n        const layers = []\n\n        // get the first layer and add it to the list\n        const layerBlock = blockJSON.inputs.filter(\n            input => input.name == \"LAYER_INPUTS\"\n        )[0].child\n\n        if (layerBlock) {\n            layers.push(layerBlock)\n\n            // determine what dimensionality of CNN is used (1d, 2d, or none)\n            this.convolutionType = \"\"\n            if (layerBlock.type.indexOf(\"1d\") > -1) this.convolutionType = \"1d\"\n            if (layerBlock.type.indexOf(\"2d\") > -1) this.convolutionType = \"2d\"\n\n            // add the remaining layers to the list\n            layerBlock.children?.forEach(childBlock => layers.push(childBlock))\n        }\n\n        // store layers with model\n        this.layerJSON = layers\n    }\n\n    toJSON() {\n        return {\n            name: this.name,\n            inputShape: this.inputShape,\n            inputTypes: this.inputTypes,\n            inputInterval: this.inputInterval,\n            convolutionType: this.convolutionType,\n            labels: this.labels,\n            modelJSON: this.modelJSON,\n            modelStats: this.modelStats,\n            outputShape: this.outputShape,\n            status: this.status || \"empty\",\n            trainingAcc: this.trainingAcc || 0,\n            weights: Array.from(new Uint32Array(this.weightData)),\n        }\n    }\n}\n","import { Button, Grid, LinearProgress } from \"@material-ui/core\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteAllIcon from \"@material-ui/icons/DeleteSweep\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport React, { lazy, useContext, useEffect, useState } from \"react\"\nimport Suspense from \"../ui/Suspense\"\n\nimport ServiceManagerContext from \"../ServiceManagerContext\"\n\nimport {\n    compileRequest,\n    trainRequest,\n    predictRequest,\n} from \"../blockly/dsl/workers/tf.proxy\"\nimport type {\n    TFModelCompileRequest,\n    TFModelTrainRequest,\n    TFModelTrainResponse,\n    TFModelPredictRequest,\n    TFModelPredictResponse,\n} from \"../../workers/tf/dist/node_modules/tf.worker\"\nimport workerProxy from \"../blockly/dsl/workers/proxy\"\n\nimport MBDataSet, { arraysEqual } from \"./MBDataSet\"\nimport MBModel, { DEFAULT_MODEL } from \"./MBModel\"\n\nconst ConfusionMatrixHeatMap = lazy(\n    () => import(\"./components/ConfusionMatrixHeatMap\")\n)\nconst DataSetPlot = lazy(() => import(\"./components/DataSetPlot\"))\nconst LossAccChart = lazy(() => import(\"./components/LossAccChart\"))\nconst ModelSummaryDropdown = lazy(\n    () => import(\"./components/ModelSummaryDropdown\")\n)\n\nexport function prepareDataSet(set: MBDataSet) {\n    // Assumptions: the sampling rate, sampling duration, and sensors used are constant\n    let sampleLength = -1\n    let sampleChannels = -1\n    const xData = []\n    const yData = []\n\n    for (const label of set.labels) {\n        set.getRecordingsWithLabel(label).forEach(table => {\n            sampleChannels = table.width\n            if (table.width != sampleChannels) {\n                alert(\n                    \"All input data must have the same shape: \" +\n                        table.name +\n                        \"\\n Has \" +\n                        table.width +\n                        \" inputs instead of \" +\n                        sampleChannels\n                )\n            } /* else if (table.length != sampleLength) {\n                // TODO decide what to do about data with different weight\n            } */\n            // For x data, just add each sample as a new row into x_data\n            xData.push(table.data())\n\n            yData.push(set.labels.indexOf(label))\n        })\n    }\n\n    // save tensors with dataset object\n    set.xs = xData\n    set.ys = yData\n    set.length = xData[0].length\n    set.width = xData[0][0].length\n}\n\nexport function prepareModel(\n    mod: MBModel,\n    set: MBDataSet,\n    callback: (model: MBModel) => void\n) {\n    // get model set up with dataset features\n    mod.labels = set.labels\n    mod.inputShape = [set.length, set.width]\n    mod.inputTypes = set.inputTypes\n    mod.inputInterval = set.interval\n    mod.outputShape = set.labels.length\n\n    /* compile model */\n    const compileMsg = {\n        worker: \"tf\",\n        type: \"compile\",\n        data: {\n            modelBlockJSON: mod.blockJSON || DEFAULT_MODEL,\n            model: mod.toJSON(),\n        },\n    } as TFModelCompileRequest\n\n    // TODO throw an error if this never returns, page needs refresh\n    compileRequest(compileMsg).then(result => {\n        if (result) {\n            mod.modelJSON = result.data.modelJSON || \"\"\n            const modelStats = result.data.modelStats\n            if (modelStats.length > 2)\n                mod.modelStats = { total: modelStats.pop(), layers: modelStats }\n            mod.trainingParams = result.data.trainingParams\n            mod.status = \"untrained\"\n        }\n        if (callback) callback(mod)\n    })\n}\n\nexport default function TrainModel(props: {\n    chartProps: any\n    reactStyle: any\n    dataset: MBDataSet\n    model: MBModel\n    onChange: (model) => void\n    onNext: (model) => void\n}) {\n    const classes = props.reactStyle\n    const chartProps = props.chartProps\n    const { fileStorage } = useContext(ServiceManagerContext)\n\n    const { dataset, model, onChange, onNext } = props\n\n    useEffect(() => {\n        prepareDataSet(dataset)\n\n        if (\n            !arraysEqual(model.labels, dataset.labels) ||\n            !arraysEqual(model.inputTypes, dataset.inputTypes)\n        ) {\n            // If there is already a model, make sure it matches the current dataset\n            //   if it does not, reset the model\n            const newModel = new MBModel(model.name)\n            prepareModel(newModel, dataset, undefined)\n            handleModelUpdate(newModel)\n        } else {\n            prepareModel(model, dataset, undefined)\n            handleModelUpdate(model)\n        }\n\n        // ready to train\n        setTrainEnabled(model.modelJSON != \"empty\")\n    }, [])\n\n    /* For training model */\n    const [trainEnabled, setTrainEnabled] = useState(false)\n    const [trainingProgress, setTrainingProgress] = useState(0)\n    const [trainingLossLog, setTrainingLossLog] = useState([])\n    const [trainingAccLog, setTrainingAccLog] = useState([])\n    const [trainingPredictionResult, setTrainingPredictionResult] = useState([])\n    const [trainTimestamp, setTrainTimestamp] = useState(0)\n\n    const trainTFModel = async () => {\n        model.status = \"training\"\n        model.inputTypes = dataset.inputTypes\n        handleModelUpdate(model)\n\n        // reset logs and progress\n        trainingLossLog.splice(0, trainingLossLog.length)\n        trainingAccLog.splice(0, trainingAccLog.length)\n        setTrainingProgress(0)\n\n        setTrainEnabled(false)\n\n        // setup worker\n        // subscriber gets messages about training while training is happening\n        const stopWorkerSubscribe = workerProxy(\"tf\").subscribe(\n            \"message\",\n            (msg: any) => {\n                const epoch = trainingLossLog.length / 2 + 1\n                trainingLossLog.push({\n                    epoch: epoch,\n                    loss: msg.data.loss,\n                    dataset: \"training\",\n                })\n                trainingLossLog.push({\n                    epoch: epoch,\n                    loss: msg.data.val_loss,\n                    dataset: \"validation\",\n                })\n                trainingAccLog.push({\n                    epoch: epoch,\n                    acc: msg.data.acc,\n                    dataset: \"training\",\n                })\n                trainingAccLog.push({\n                    epoch: epoch,\n                    acc: msg.data.val_acc,\n                    dataset: \"validation\",\n                })\n                setTrainingProgress((epoch * 100) / model.trainingParams.epochs)\n            }\n        )\n\n        const trainMsg = {\n            worker: \"tf\",\n            type: \"train\",\n            data: {\n                trainingParams: model.trainingParams,\n                model: model.toJSON(),\n                xData: dataset.xs,\n                yData: dataset.ys,\n            },\n        } as TFModelTrainRequest\n        const trainResult = (await trainRequest(\n            trainMsg\n        )) as TFModelTrainResponse\n        // stop subscriber after training\n        stopWorkerSubscribe()\n\n        if (trainResult && trainResult.data) {\n            // handle result from training\n            const trainingHistory = trainResult.data.trainingLogs\n            model.weightData = trainResult.data.modelWeights\n            model.armModel = trainResult.data.armModel\n\n            // evaluate on training dataset\n            const predictMsg = {\n                worker: \"tf\",\n                type: \"predict\",\n                data: {\n                    zData: dataset.xs,\n                    model: model.toJSON(),\n                },\n            } as TFModelPredictRequest\n            const predResult = (await predictRequest(\n                predictMsg\n            )) as TFModelPredictResponse\n\n            if (predResult) {\n                // convert prediction result to string\n                const predictions = predResult.data.predictTop.map(\n                    prediction => {\n                        return model.labels[prediction]\n                    }\n                )\n                setTrainingPredictionResult(predictions)\n                setTrainTimestamp(Date.now())\n            }\n\n            // Update model status\n            model.status = \"trained\"\n            model.trainingAcc = trainingHistory[trainingHistory.length - 1]\n            handleModelUpdate(model)\n\n            setTrainEnabled(true)\n        } else {\n            model.status = \"untrained\"\n            handleModelUpdate(model)\n            setTrainEnabled(true)\n        }\n    }\n\n    /* For page management */\n    const handleNext = () => {\n        onNext(model)\n    }\n    const handleModelUpdate = model => {\n        onChange(model)\n    }\n    const handleDownloadModel = () => {\n        // TODO also download arm model (as a zip file?)\n        fileStorage.saveText(`${model.name}.json`, JSON.stringify(model))\n    }\n    const deleteTFModel = () => {\n        if (confirm(\"Are you sure you want to delete current model?\")) {\n            const newModel = new MBModel(model.name)\n            prepareModel(newModel, dataset, undefined)\n\n            handleModelUpdate(newModel)\n\n            setTrainingLossLog([])\n            setTrainingAccLog([])\n        }\n    }\n\n    return (\n        <Grid container direction={\"column\"}>\n            <Grid item>\n                <h3>\n                    Current Model\n                    <IconButtonWithTooltip\n                        onClick={handleDownloadModel}\n                        title=\"Download the trained model\"\n                        disabled={model.status != \"trained\"}\n                    >\n                        <DownloadIcon />\n                    </IconButtonWithTooltip>\n                    <IconButtonWithTooltip\n                        onClick={deleteTFModel}\n                        title=\"Delete current model information\"\n                    >\n                        <DeleteAllIcon />\n                    </IconButtonWithTooltip>\n                </h3>\n                <Suspense>\n                    <ModelSummaryDropdown\n                        reactStyle={classes}\n                        dataset={dataset}\n                        model={model}\n                    />\n                </Suspense>\n                <div className={classes.buttons}>\n                    <Button\n                        size=\"large\"\n                        variant=\"contained\"\n                        color={\"primary\"}\n                        aria-label=\"start training model\"\n                        title={\n                            trainEnabled\n                                ? \"Press to start training machine learning model\"\n                                : \"You must have at least two classes to train a model. Go back to first tab.\"\n                        }\n                        onClick={trainTFModel}\n                        startIcon={<PlayArrowIcon />}\n                        disabled={!trainEnabled}\n                        style={{ marginTop: 16 }}\n                    >\n                        Train Model\n                    </Button>\n                </div>\n                <br />\n            </Grid>\n            <Grid item>\n                <h3>Training Progress</h3>\n                <LinearProgress\n                    variant=\"determinate\"\n                    value={trainingProgress}\n                />\n                <span style={{ float: \"right\" }}>{trainingProgress} / 100</span>\n                <br />\n                {!!trainingLossLog.length && (\n                    <div key=\"vega-loss-acc-charts\">\n                        <Suspense>\n                            <LossAccChart\n                                chartProps={chartProps}\n                                lossData={trainingLossLog}\n                                accData={trainingAccLog}\n                                timestamp={trainingProgress}\n                            />\n                        </Suspense>\n                    </div>\n                )}\n                <p>\n                    Final training accuracy:{\" \"}\n                    {model.status == \"trained\"\n                        ? (model.trainingAcc || 0).toPrecision(2)\n                        : \"Model has not been trained\"}\n                </p>\n            </Grid>\n            <Grid item>\n                <h3>Training Results</h3>\n                {!!trainingPredictionResult.length && (\n                    <div key=\"vega-training-set-charts\">\n                        <Suspense>\n                            <ConfusionMatrixHeatMap\n                                chartProps={chartProps}\n                                yActual={dataset.ys.map(\n                                    val => dataset.labels[val]\n                                )}\n                                yPredicted={trainingPredictionResult}\n                                labels={model.labels}\n                                timestamp={trainTimestamp}\n                            />\n                        </Suspense>\n                        <br />\n                        <Suspense>\n                            <DataSetPlot\n                                chartProps={chartProps}\n                                reactStyle={classes}\n                                dataset={dataset}\n                                predictedLabels={trainingPredictionResult}\n                                timestamp={trainTimestamp}\n                            />\n                        </Suspense>\n                    </div>\n                )}\n                <br />\n            </Grid>\n            <Grid item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<NavigateNextIcon />}\n                        disabled={model.status !== \"trained\"}\n                        onClick={handleNext}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["JDEventSource","DEFAULT_MODEL","MCU_SPEED","MCU_FLOAT_SIZE","validModelJSON","blockJSON","warnings","undefined","blockParams","inputs","fields","expand_button","value","lossFn","optimizer","metrics","numEpochs","id","firstLayer","filter","input","name","child","convolutionType","type","foundFlatten","minimumModel","children","forEach","childBlock","idx","indexOf","length","params","activation","MBModel","createFromFile","modelObj","mbModel","labels","modelJSON","status","inputShape","inputTypes","inputInterval","outputShape","trainingAcc","weightData","Uint32Array","weights","buffer","ArrayBuffer","modelStats","toJSON","Array","from","modelInfo","push","modelStatSummary","layers","totalBytes","total","weightBytes","codeBytes","totalCycles","optimizedCycles","executionTimeMs","toPrecision","layerBlock","layerJSON","Button","Grid","LinearProgress","PlayArrowIcon","NavigateNextIcon","DownloadIcon","DeleteAllIcon","IconButtonWithTooltip","React","lazy","useContext","useEffect","useState","Suspense","ServiceManagerContext","compileRequest","trainRequest","predictRequest","workerProxy","arraysEqual","ConfusionMatrixHeatMap","DataSetPlot","LossAccChart","ModelSummaryDropdown","prepareDataSet","set","sampleLength","sampleChannels","xData","yData","label","getRecordingsWithLabel","table","width","alert","data","xs","ys","prepareModel","mod","callback","interval","compileMsg","worker","modelBlockJSON","model","then","result","pop","trainingParams","TrainModel","props","classes","reactStyle","chartProps","fileStorage","dataset","onChange","onNext","newModel","handleModelUpdate","setTrainEnabled","trainEnabled","trainingProgress","setTrainingProgress","trainingLossLog","setTrainingLossLog","trainingAccLog","setTrainingAccLog","trainingPredictionResult","setTrainingPredictionResult","trainTimestamp","setTrainTimestamp","trainTFModel","splice","stopWorkerSubscribe","subscribe","msg","epoch","loss","val_loss","acc","val_acc","epochs","trainMsg","trainResult","trainingHistory","trainingLogs","modelWeights","armModel","predictMsg","zData","predResult","predictions","predictTop","map","prediction","Date","now","handleNext","handleDownloadModel","saveText","JSON","stringify","deleteTFModel","confirm","buttons","marginTop","float","val","display","justifyContent"],"sourceRoot":""}