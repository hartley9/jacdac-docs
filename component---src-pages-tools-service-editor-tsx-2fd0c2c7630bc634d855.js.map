{"version":3,"file":"component---src-pages-tools-service-editor-tsx-2fd0c2c7630bc634d855.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Check.js","webpack://jacdac-docs/./src/components/RandomGenerator.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecification.tsx","webpack://jacdac-docs/./src/components/tools/ServiceSpecificationEditor.tsx","webpack://jacdac-docs/./src/pages/tools/service-editor.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import React, { useState } from \"react\"\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    CardHeader,\n    Typography,\n    Input,\n} from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CheckIcon from \"@mui/icons-material/Check\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"./ui/Alert\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport { NoSsr } from \"@mui/material\"\nimport { useId } from \"react-use-id-hook\"\nimport useDeviceCatalog from \"./devices/useDeviceCatalog\"\n\nexport default function RandomGenerator(props: {\n    device?: boolean\n    firmware?: boolean\n}) {\n    const { device, firmware } = props\n    const labelId = useId()\n    const fieldId = useId()\n    const deviceCatalog = useDeviceCatalog()\n\n    const [value, setValue] = useState(\n        device\n            ? deviceCatalog.uniqueDeviceId()\n            : deviceCatalog.uniqueServiceId()\n    )\n    const [copySuccess, setCopySuccess] = useState(false)\n\n    const handleRegenerate = () => {\n        const v = device\n            ? deviceCatalog.uniqueDeviceId()\n            : firmware\n            ? deviceCatalog.uniqueFirmwareId()\n            : deviceCatalog.uniqueServiceId()\n        setValue(v)\n        setCopySuccess(false)\n    }\n    const handleCopy = async () => {\n        try {\n            await navigator.clipboard.writeText(value)\n            setCopySuccess(true)\n        } catch (err) {\n            setCopySuccess(false)\n        }\n    }\n    const title = device\n        ? \"Random Device Identifier\"\n        : firmware\n        ? \"Random Product Identifier\"\n        : \"Random Service Identifier\"\n    return (\n        <NoSsr>\n            <Card>\n                <CardHeader title={title} />\n                <CardContent>\n                    {value !== undefined && (\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <Input\n                                id={fieldId}\n                                value={value}\n                                readOnly={true}\n                                inputProps={{\n                                    \"aria-labelledby\": labelId,\n                                }}\n                            />\n                            {copySuccess && <CheckIcon />}\n                        </Typography>\n                    )}\n                    {value === undefined && (\n                        <Alert severity=\"error\">\n                            Oops, unable to generate a strong random number.\n                        </Alert>\n                    )}\n                </CardContent>\n                <CardActions>\n                    <Button\n                        aria-label=\"copy random number to clipboard\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        onClick={handleCopy}\n                    >\n                        Copy\n                    </Button>\n                    <Button\n                        aria-label=\"regenerate random number\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleRegenerate}\n                    >\n                        Regenerate\n                    </Button>\n                </CardActions>\n            </Card>\n        </NoSsr>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const { device, variant, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType]\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} variant={variant} {...other} />\n        </Grid>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@mui/material\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length) return <></>\n\n    return (\n        <Fragment>\n            <h2>Enums</h2>\n            {enums.map(e => (\n                <Fragment key={e.name}>\n                    <h3>\n                        {e.name}{\" \"}\n                        {e.isFlags && <Chip label=\"flags\" size=\"small\" />}\n                    </h3>\n                    <ul>\n                        {Object.keys(e.members).map(en => (\n                            <li key={en}>\n                                {en}:{\" \"}\n                                <code>0x{e.members[en].toString(16)}</code>\n                            </li>\n                        ))}\n                    </ul>\n                </Fragment>\n            ))}\n        </Fragment>\n    )\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"./PacketSpecification\"\nimport IDChip from \"../IDChip\"\nimport Markdown from \"../ui/Markdown\"\nimport EnumSpecification from \"../EnumSpecification\"\nimport { Box, Grid } from \"@mui/material\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"../hooks/useServiceProviderFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashbardDeviceItem from \"../dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map(pkt => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.identifier}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport { Grid } from \"@mui/material\"\nimport { parseServiceSpecificationMarkdownToJSON } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport { serviceMap } from \"../../../jacdac-ts/src/jdom/spec\"\nimport RandomGenerator from \"../RandomGenerator\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport ServiceSpecification from \"../specification/ServiceSpecification\"\n\nconst SERVICE_SPECIFICATION_STORAGE_KEY =\n    \"jacdac:servicespecificationeditorsource\"\n\nexport default function ServiceSpecificationEditor() {\n    const [source, setSource] = useLocalStorage(\n        SERVICE_SPECIFICATION_STORAGE_KEY,\n        \"\"\n    )\n    const json = useMemo(\n        () => parseServiceSpecificationMarkdownToJSON(source, serviceMap()),\n        [source]\n    )\n    const servicePath =\n        json &&\n        `services/${(\n            json.camelName ||\n            json.shortId ||\n            `0x${json.classIdentifier.toString(16)}`\n        ).toLowerCase()}`\n    return (\n        <Grid spacing={1} container>\n            <Grid item xs={12}>\n                <HighlightTextField\n                    code={source}\n                    language={\"markdown\"}\n                    onChange={setSource}\n                    annotations={json?.errors}\n                    pullRequestTitle={json && `Service: ${json.name}`}\n                    pullRequestPath={servicePath}\n                    pullRequestDescription={`This pull request defines a new service.`}\n                />\n            </Grid>\n            <Grid item>\n                <RandomGenerator device={false} />\n                {json && <ServiceSpecification service={json} />}\n            </Grid>\n        </Grid>\n    )\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport ServiceSpecificationEditor from \"../../components/tools/ServiceSpecificationEditor\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>Service Specification Editor</h1>\n            <p>\n                Read the{\" \"}\n                <Link to=\"/reference/service-specification\">\n                    service specifiation\n                </Link>{\" \"}\n                documentation. Use the packet console to monitor packets from\n                your devices.\n            </p>\n            <ServiceSpecificationEditor />\n        </>\n    )\n}\n"],"names":["React","useState","Card","CardContent","CardActions","CardHeader","Typography","Input","CheckIcon","Alert","Button","NoSsr","useId","useDeviceCatalog","RandomGenerator","props","device","firmware","labelId","fieldId","deviceCatalog","value","setValue","uniqueDeviceId","uniqueServiceId","copySuccess","setCopySuccess","handleRegenerate","v","uniqueFirmwareId","handleCopy","navigator","clipboard","writeText","err","title","undefined","Grid","useContext","DashboardDevice","useChange","dashboardServiceWeight","AppContext","DrawerType","DashboardDeviceItem","variant","other","drawerType","breakpoints","breakpointWeight","services","map","srv","readingRegister","valueRegister","intensityRegister","reduce","c","None","xs","sm","md","lg","xl","Fragment","serviceSpecificationFromClassIdentifier","Chip","EnumSpecification","serviceClass","spec","enums","Object","values","filter","en","derived","length","e","name","isFlags","keys","members","toString","Link","serviceSpecificationFromName","isRegister","isEvent","isCommand","isPipeReport","isReportOf","isPipeReportOf","PacketSpecification","IDChip","Markdown","Box","ServiceSpecificationStatusAlert","useServiceProviderFromServiceClass","JacdacContext","DashbardDeviceItem","DashboardServiceDevices","bus","devices","b","id","ServiceSpecification","service","node","showDerived","shortId","classIdentifier","packets","pkt","registers","events","commands","reports","r","secondary","pipeReports","others","indexOf","reportOf","find","rep","pipeReportOf","notes","short","extends","extend","i","long","note","group","sort","l","identifier","useMemo","parseServiceSpecificationMarkdownToJSON","serviceMap","useLocalStorage","HighlightTextField","SERVICE_SPECIFICATION_STORAGE_KEY","ServiceSpecificationEditor","source","setSource","json","servicePath","camelName","toLowerCase","errors","Page"],"sourceRoot":""}