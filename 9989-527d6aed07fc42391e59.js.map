{"version":3,"file":"9989-527d6aed07fc42391e59.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASW,8BAAT,CACXC,KADW,EAEb;AACE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAME,cAAc,GAAGJ,uEAAW,CAACG,OAAD,EAAUN,0FAAV,CAAlC;AACA,MAAM,CAACS,GAAD,IAAQV,4FAAwB,CAAeQ,cAAf,EAA+BF,KAA/B,CAAtC;AACA,MAAMK,MAAM,GAAGT,kEAAK,EAApB;;AAEA,MAAMU,aAAa,GAAG,MAAMJ,cAAc,CAACK,OAAf,EAA5B;;AAEA,MAAI,CAACH,GAAL,EAAU,oBAAO,iDAAC,oEAAD,OAAP;AAEV,sBACI,iDAAC,+DAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,aAAS,EAAC;AAAtC,kBACI,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE;AAAb,kBACI,iDAAC,8DAAD;AACI,MAAE,EAAEC,MADR;AAEI,aAAS,EAAE,IAFf;AAGI,WAAO,EAAE,UAHb;AAII,cAAU,EAAE,yBAJhB;AAKI,SAAK,EAAEZ,0EAAK,CAACW,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEI,KAAL,CAAW,CAAX,EAAc,CAAd,CAAD;AALhB,IADJ,CADJ,eAUI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,0EAAD;AACI,SAAK,EAAC,qBADV;AAEI,WAAO,EAAEF;AAFb,kBAII,iDAAC,6EAAD,OAJJ,CADJ,CAVJ,CADJ;AAqBH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRandomNumberGenerator.tsx"],"sourcesContent":["import React from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid, TextField } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport RefreshIcon from \"@mui/icons-material/Refresh\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport { toHex } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { RngReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { useId } from \"react-use-id-hook\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardRandomNumberGenerator(\n    props: DashboardServiceProps\n) {\n    const { service } = props\n    const randomRegister = useRegister(service, RngReg.Random)\n    const [rnd] = useRegisterUnpackedValue<[Uint8Array]>(randomRegister, props)\n    const textId = useId()\n\n    const handleRefresh = () => randomRegister.refresh()\n\n    if (!rnd) return <LoadingProgress />\n\n    return (\n        <Grid container spacing={2} direction=\"row\">\n            <Grid item xs>\n                <TextField\n                    id={textId}\n                    fullWidth={true}\n                    variant={\"outlined\"}\n                    helperText={\"generated random number\"}\n                    value={toHex(rnd?.slice(0, 8))}\n                />\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title=\"generate new number\"\n                    onClick={handleRefresh}\n                >\n                    <RefreshIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["React","Grid","TextField","RefreshIcon","IconButtonWithTooltip","toHex","useRegisterUnpackedValue","RngReg","useId","LoadingProgress","useRegister","DashboardRandomNumberGenerator","props","service","randomRegister","Random","rnd","textId","handleRefresh","refresh","slice"],"sourceRoot":""}