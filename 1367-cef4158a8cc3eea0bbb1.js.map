{"version":3,"file":"1367-cef4158a8cc3eea0bbb1.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/ChevronLeft.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/FormatAlignLeft.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/logparser.ts","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/trace/TraceImportButton.tsx","webpack://jacdac-docs/./node_modules/@mui/icons-material/esm/FiberManualRecord.js","webpack://jacdac-docs/./src/components/trace/TraceRecordButton.tsx","webpack://jacdac-docs/./src/components/PacketRecorder.tsx","webpack://jacdac-docs/./src/components/shell/DrawerToolsButtonGroup.tsx","webpack://jacdac-docs/./src/components/shell/AppDrawer.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignLeft');\n\nexports.default = _default;","import { arrayConcatMany, fromHex } from \"./utils\"\nimport JDBus from \"./bus\"\nimport Packet from \"./packet\"\nimport TracePlayer from \"./trace/traceplayer\"\nimport Frame from \"./frame\"\nimport Trace from \"./trace/trace\"\nimport { META_TRACE } from \"./constants\"\n\n/**\n * Parse a trace text file\n * @param contents\n * @returns\n * @category Trace\n */\nexport function parseTrace(contents: string): Trace {\n    const description: string[] = []\n    const packets: Packet[] = []\n    contents?.split(/\\r?\\n/).forEach(ln => {\n        // parse data\n        const m = /^(\\d+.?\\d*)\\s+([a-f0-9]{12,})/i.exec(ln)\n        if (!m) {\n            // might be a stack trace\n            if (/^\\s+at\\s/.test(ln)) {\n                const lastPacket = packets[packets.length - 1]\n                if (lastPacket) {\n                    let trace = (lastPacket.meta[META_TRACE] as string) || \"\"\n                    trace += ln + \"\\n\"\n                    lastPacket.meta[META_TRACE] = trace\n                }\n            } else {\n                // probably junk data\n                if (packets.length == 0) description.push(ln)\n            }\n            return\n        }\n\n        const timestamp = parseInt(m[1])\n        const data = fromHex(m[2])\n        // add to array\n        packets.push(Packet.fromBinary(data, timestamp))\n    })\n    if (packets.length)\n        return new Trace(packets, {\n            description: description.join(\"\\n\").trim(),\n        })\n    else return undefined\n}\n\n/**\n * Parses a logic analyzer log into a trace\n * @param logcontents\n * @returns\n * @category Trace\n */\nexport function parseLogicLog(logcontents: string): Frame[] {\n    if (!logcontents) return undefined\n\n    const res: Frame[] = []\n    let frameBytes = []\n    let lastTime = 0\n    for (const ln of logcontents.split(/\\r?\\n/)) {\n        let m = /^JD (\\d+) ([0-9a-f]+)/i.exec(ln)\n        if (m) {\n            res.push({\n                timestamp: parseInt(m[1]),\n                data: fromHex(m[2]),\n            })\n            continue\n        }\n\n        /** Windows, logic 1.*\nTime [s],Value,Parity Error,Framing Error\n0.042909760000000,0x00,,Error\n0.042980320000000,0xD4,,\n0.042990240000000,0x81,,\n0.043000160000000,0x10,,\n0.043010240000000,0x00,,\n0.043020160000000,0xE8,,\n0.043030240000000,0xDF,,\n0.043040160000000,0xCB,,\n0.043050240000000,0xD1,,\n0.043060160000000,0x97,,\n0.043070240000000,0x34,,\n0.043080160000000,0x37,,\n0.043090240000000,0x48,,\n0.043100160000000,0x0C,,\n0.043110080000000,0x00,,\n0.043120160000000,0x00,,\n0.043130080000000,0x00,,\n0.043140160000000,0x00,,\n0.043150080000000,0x00,,\n0.043160160000000,0x00,,\n0.043170080000000,0x00,,\n0.043180160000000,0xCA,,\n0.043190080000000,0x1F,,\n0.043200160000000,0xDC,,\n0.043210080000000,0x12,,\n0.043220160000000,0x46,,\n0.043230080000000,0x47,,\n0.043240160000000,0x27,,\n0.043250080000000,0x1F,,\n0.043264800000000,0x00,,Error\n0.063968960000000,0x00,,Error\n         */\n        m = /^([\\d.]+),(?:Async Serial,)?.*(0x[A-F0-9][A-F0-9])/.exec(ln)\n        if (!m) continue\n        const tm = parseFloat(m[1])\n        if (lastTime && tm - lastTime > 0.1) {\n            res.push({\n                timestamp: lastTime * 1000,\n                data: new Uint8Array(frameBytes),\n                info: \"timeout\",\n            })\n            frameBytes = []\n            lastTime = 0\n        }\n\n        lastTime = tm\n        if (/(framing error|Error)/.test(ln)) {\n            if (frameBytes.length > 0)\n                res.push({\n                    timestamp: lastTime * 1000,\n                    data: new Uint8Array(frameBytes),\n                })\n            frameBytes = []\n            lastTime = 0\n        } else {\n            frameBytes.push(parseInt(m[2]))\n        }\n    }\n\n    return res\n}\n\n/**\n * Replays a parsed logic log\n * @param bus\n * @param frames\n * @param speed\n * @category Trace\n */\nexport function replayLogicLog(\n    bus: JDBus,\n    frames: Frame[],\n    speed?: number\n): void {\n    const packets = arrayConcatMany(\n        frames.map(frame => Packet.fromFrame(frame.data, frame.timestamp))\n    )\n    const player = new TracePlayer(bus, speed)\n    player.trace = new Trace(packets)\n    bus.clear(packets[0].timestamp)\n    player.start()\n}\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@mui/material\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React, { useState, useContext, lazy } from \"react\"\nimport {\n    parseLogicLog,\n    parseTrace,\n} from \"../../../jacdac-ts/src/jdom/logparser\"\nimport PacketsContext from \"../PacketsContext\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport AppContext from \"../AppContext\"\nimport Trace from \"../../../jacdac-ts/src/jdom/trace/trace\"\n\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nexport default function TraceImportButton(props: {\n    icon?: boolean\n    disabled?: boolean\n}) {\n    const { icon, disabled } = props\n    const { recording, setReplayTrace } = useContext(PacketsContext)\n    const { setError } = useContext(AppContext)\n    const [importing, setImporting] = useState(false)\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setImporting(true)\n                const txt = await file.text()\n\n                let trace: Trace\n                // let's try a few format and see if we're lucky\n                try {\n                    trace = parseTrace(txt)\n                } catch (e) {\n                    console.log(`trace parse error`, e)\n                }\n\n                // try logic format\n                if (!trace) {\n                    try {\n                        const frames = parseLogicLog(txt) // ensure format is ok\n                        const packets = arrayConcatMany(\n                            frames.map(frame =>\n                                Packet.fromFrame(frame.data, frame.timestamp)\n                            )\n                        )\n                        if (packets?.length) trace = new Trace(packets)\n                    } catch (e) {\n                        console.log(`logic parse error`, e)\n                    }\n                }\n\n                // found anything?\n                if (trace) {\n                    console.log(`importing ${trace.packets.length} packets`)\n                    setReplayTrace(trace)\n                } else setError(\"could not parse file\")\n            } finally {\n                setImporting(false)\n            }\n        }\n    }\n\n    return (\n        <Suspense>\n            <ImportButton\n                icon={icon}\n                disabled={importing || recording || disabled}\n                text=\"Import Trace File\"\n                onFilesUploaded={handleFiles}\n            />\n        </Suspense>\n    )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');","import { FiberManualRecord } from \"@mui/icons-material\"\nimport React, { useContext } from \"react\"\nimport PacketsContext from \"../PacketsContext\"\nimport IconButtonWithProgress, {\n    IconButtonWithProgressProps,\n} from \"../ui/IconButtonWithProgress\"\n\nexport default function TraceRecordButton(\n    props: { component?: string } & IconButtonWithProgressProps\n) {\n    const { disabled, ...others } = props\n    const { recording, tracing, toggleRecording } = useContext(PacketsContext)\n    const title = recording ? \"Stop recording\" : \"Record trace\"\n    return (\n        <IconButtonWithProgress\n            {...others}\n            aria-label={title}\n            title={title}\n            indeterminate={recording}\n            disabled={disabled || tracing}\n            onClick={toggleRecording}\n            progressStyle={{ color: \"#f66\" }}\n        >\n            {!recording && <FiberManualRecord />}\n            {recording && <FiberManualRecord style={{ color: \"#f00\" }} />}\n        </IconButtonWithProgress>\n    )\n}\n","import { Typography } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport PacketsContext from \"./PacketsContext\"\nimport TraceImportButton from \"./trace/TraceImportButton\"\nimport TraceSaveButton from \"./trace/TraceSaveButton\"\nimport TraceRecordButton from \"./trace/TraceRecordButton\"\nimport TracePlayButton from \"./trace/TracePlayButton\"\nimport TraceClearButton from \"./trace/TraceClearButton\"\n\nexport default function PacketRecorder() {\n    const { replayTrace, recording, tracing } = useContext(PacketsContext)\n\n    return (\n        <>\n            {!recording && replayTrace && (\n                <Typography variant=\"caption\">\n                    {replayTrace.packets.length} packets\n                </Typography>\n            )}\n            <TraceImportButton icon={true} disabled={tracing || recording} />\n            <TraceSaveButton />\n            |\n            <TraceRecordButton size=\"small\" />\n            <TracePlayButton size=\"small\" />\n            <TraceClearButton size=\"small\" />\n        </>\n    )\n}\n","import React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport HistoryIcon from \"@mui/icons-material/History\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport FormatAlignLeftIcon from \"@mui/icons-material/FormatAlignLeft\"\n\nexport default function DrawerToolsButtonGroup(props: { className?: string }) {\n    const { className } = props\n    const { drawerType, setDrawerType } = useContext(AppContext)\n\n    const handleDrawer = (drawer: DrawerType) => () => setDrawerType(drawer)\n    const drawers = [\n        {\n            drawer: DrawerType.Dom,\n            label: \"open device tree\",\n            icon: <AccountTreeIcon />,\n        },\n        {\n            drawer: DrawerType.Console,\n            label: \"open console\",\n            icon: <FormatAlignLeftIcon />,\n        },\n        {\n            drawer: DrawerType.Packets,\n            label: \"open packet trace\",\n            icon: <HistoryIcon />,\n        },\n    ]\n    return (\n        <>\n            {drawers.map(drawer => (\n                <IconButtonWithTooltip\n                    key={drawer.label}\n                    title={drawer.label}\n                    className={className}\n                    trackName={`menu.drawer.${drawer.drawer}`}\n                    trackProperties={{ drawer: drawer.drawer }}\n                    color={drawerType === drawer.drawer ? \"primary\" : \"inherit\"}\n                    onClick={handleDrawer(drawer.drawer)}\n                    edge=\"start\"\n                >\n                    {drawer.icon}\n                </IconButtonWithTooltip>\n            ))}\n        </>\n    )\n}\n","import React, { lazy, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Drawer, Divider } from \"@mui/material\"\nimport Suspense from \"../ui/Suspense\"\nimport { IconButton } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports\nimport { DRAWER_WIDTH, MOBILE_BREAKPOINT, TOC_DRAWER_WIDTH } from \"../layout\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\"\nimport AppContext, { DrawerType } from \"../AppContext\"\nimport PacketRecorder from \"../PacketRecorder\"\nimport DrawerToolsButtonGroup from \"./DrawerToolsButtonGroup\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\n\nconst PREFIX = \"AppDrawer\"\n\nconst classes = {\n    drawer: `${PREFIX}-drawer`,\n    drawerPaper: `${PREFIX}-drawerPaper`,\n    tocDrawer: `${PREFIX}-tocDrawer`,\n    tocDrawerPaper: `${PREFIX}-tocDrawerPaper`,\n    drawerHeader: `${PREFIX}-drawerHeader`,\n    alertButton: `${PREFIX}-alertButton`,\n    mdx: `${PREFIX}-mdx`,\n    fluid: `${PREFIX}-fluid`,\n}\n\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\n    [`& .${classes.drawer}`]: {\n        width: `${DRAWER_WIDTH}rem`,\n        flexShrink: 0,\n        [theme.breakpoints.down(MOBILE_BREAKPOINT)]: {\n            width: `100%`,\n        },\n    },\n\n    [`& .${classes.drawerPaper}`]: {\n        width: `${DRAWER_WIDTH}rem`,\n        [theme.breakpoints.down(MOBILE_BREAKPOINT)]: {\n            width: `100%`,\n        },\n    },\n\n    [`& .${classes.tocDrawer}`]: {\n        width: `${TOC_DRAWER_WIDTH}rem`,\n        flexShrink: 0,\n    },\n\n    [`& .${classes.tocDrawerPaper}`]: {\n        width: `${TOC_DRAWER_WIDTH}rem`,\n    },\n\n    [`& .${classes.drawerHeader}`]: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-start\",\n    },\n\n    [`& .${classes.alertButton}`]: {\n        marginLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.mdx}`]: {\n        margin: theme.spacing(2),\n    },\n\n    [`& .${classes.fluid}`]: {\n        flex: 1,\n    },\n}))\n\nconst Toc = lazy(() => import(\"../Toc\"))\nconst PacketView = lazy(() => import(\"../tools/PacketView\"))\nconst JDomTreeView = lazy(() => import(\"../tools/JDomTreeView\"))\nconst DrawerSearchResults = lazy(() => import(\"../DrawerSearchResults\"))\nconst DrawerSearchInput = lazy(() => import(\"../DrawerSearchInput\"))\nconst Console = lazy(() => import(\"../console/Console\"))\n\nexport default function AppDrawer(props: { pagePath: string }) {\n    const { pagePath } = props\n\n    const { drawerType, setDrawerType, searchQuery } = useContext(AppContext)\n    const open = drawerType !== DrawerType.None\n    const showSearchResults = drawerType === DrawerType.Toc && !!searchQuery\n\n    const handleDrawerClose = () => {\n        setDrawerType(DrawerType.None)\n    }\n\n    if (drawerType === DrawerType.None) return null\n\n    const toc = drawerType === DrawerType.Toc\n    return (\n        <StyledDrawer\n            className={toc ? classes.tocDrawer : classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n                paper: toc ? classes.tocDrawerPaper : classes.drawerPaper,\n            }}\n        >\n            <div className={classes.drawerHeader}>\n                {toc && (\n                    <div className={classes.fluid}>\n                        <Suspense>\n                            <DrawerSearchInput />\n                        </Suspense>\n                    </div>\n                )}\n                {!toc && (\n                    <>\n                        <PacketRecorder />\n                        <span className={classes.fluid} />\n                        <DrawerToolsButtonGroup />\n                    </>\n                )}\n                <IconButton\n                    aria-label=\"Collapse\"\n                    onClick={handleDrawerClose}\n                    size=\"large\"\n                >\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            {showSearchResults && (\n                <Suspense>\n                    <DrawerSearchResults />\n                </Suspense>\n            )}\n            {!showSearchResults && drawerType === DrawerType.Toc && (\n                <Suspense>\n                    <Toc pagePath={pagePath} />\n                </Suspense>\n            )}\n            {!showSearchResults && drawerType === DrawerType.Packets && (\n                <Suspense>\n                    <PacketView showTime={true} />\n                </Suspense>\n            )}\n            {!showSearchResults && drawerType === DrawerType.Dom && (\n                <>\n                    <ConnectAlert closeable={true} />\n                    <Suspense>\n                        <JDomTreeView />\n                    </Suspense>\n                </>\n            )}\n            {!showSearchResults && drawerType === DrawerType.Console && (\n                <Suspense>\n                    <Console />\n                </Suspense>\n            )}\n        </StyledDrawer>\n    )\n}\n"],"names":["arrayConcatMany","fromHex","Packet","TracePlayer","Trace","META_TRACE","parseTrace","contents","description","packets","split","forEach","ln","m","exec","test","lastPacket","length","trace","meta","push","timestamp","parseInt","data","fromBinary","join","trim","undefined","parseLogicLog","logcontents","res","frameBytes","lastTime","tm","parseFloat","Uint8Array","info","replayLogicLog","bus","frames","speed","map","frame","fromFrame","player","clear","start","Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","ConnectButtons","useDevices","NoSsrConnectAlert","props","serviceClass","closeable","transports","devices","ignoreInfrastructure","spec","name","ConnectAlert","useState","lazy","PacketsContext","AppContext","Suspense","ImportButton","TraceImportButton","icon","disabled","recording","setReplayTrace","setError","importing","setImporting","handleFiles","files","file","txt","text","e","console","log","FiberManualRecord","IconButtonWithProgress","TraceRecordButton","others","tracing","toggleRecording","title","color","Typography","TraceSaveButton","TracePlayButton","TraceClearButton","PacketRecorder","replayTrace","DrawerType","HistoryIcon","AccountTreeIcon","IconButtonWithTooltip","FormatAlignLeftIcon","DrawerToolsButtonGroup","className","drawerType","setDrawerType","handleDrawer","drawer","drawers","Dom","label","Console","Packets","styled","Drawer","Divider","IconButton","DRAWER_WIDTH","MOBILE_BREAKPOINT","TOC_DRAWER_WIDTH","ChevronLeftIcon","PREFIX","classes","drawerPaper","tocDrawer","tocDrawerPaper","drawerHeader","alertButton","mdx","fluid","StyledDrawer","theme","width","flexShrink","breakpoints","down","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","marginLeft","margin","flex","Toc","PacketView","JDomTreeView","DrawerSearchResults","DrawerSearchInput","AppDrawer","pagePath","searchQuery","open","None","showSearchResults","handleDrawerClose","toc","paper"],"sourceRoot":""}