{"version":3,"file":"component---src-pages-tools-updater-tsx-183d677250e6f4caa403.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/DeleteForever.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCard.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareLoader.tsx","webpack://jacdac-docs/./src/components/ui/CircularProgressWithLabel.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/firmware/useFirmwareRepos.ts","webpack://jacdac-docs/./src/components/firmware/LocalFileFirmwareCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareCardGrid.tsx","webpack://jacdac-docs/./src/components/firmware/FlashDeviceButton.tsx","webpack://jacdac-docs/./src/components/UpdateDeviceList.tsx","webpack://jacdac-docs/./src/components/devices/useForceProxy.ts","webpack://jacdac-docs/./src/components/firmware/SafeBootAlert.tsx","webpack://jacdac-docs/./src/components/select/SelectDevice.tsx","webpack://jacdac-docs/./src/components/firmware/ManualFirmwareAlert.tsx","webpack://jacdac-docs/./src/components/tools/Flash.tsx","webpack://jacdac-docs/./src/pages/tools/updater.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@mui/material\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { ButtonProps } from \"@mui/material\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"../ServiceButton\"\nimport useChange from \"../../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { CardActions } from \"@mui/material\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\n\nconst PREFIX = \"DeviceCard\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n}\n\nconst StyledCard = styled(Card)(() => ({\n    [`&.${classes.root}`]: {},\n\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n}))\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n\n    const services = useChange(device, () =>\n        device.services().filter(srv => !isInfrastructure(srv.specification))\n    )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.id}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import {\n    ControlReg,\n    JD_SERVICE_INDEX_CTRL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Grid, Typography } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useChange from \"../../jacdac/useChange\"\nimport useRegister from \"../hooks/useRegister\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const control = useChange(device, _ => _?.service(JD_SERVICE_INDEX_CTRL))\n    const productIdentifierRegister = useRegister(\n        control,\n        ControlReg.ProductIdentifier\n    )\n    const [productIdentifier] = useRegisterUnpackedValue<[number]>(\n        productIdentifierRegister\n    )\n    const firmwareVersionRegister = useRegister(\n        control,\n        ControlReg.FirmwareVersion\n    )\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n    if (firmwareVersion == undefined) return null\n\n    const firmwareName =\n        !!productIdentifier &&\n        specification?.firmwares?.find(\n            fw => fw.productIdentifier === productIdentifier\n        )?.name\n\n    return (\n        <Chip\n            size=\"small\"\n            label={[firmwareName, firmwareVersion].filter(f => !!f).join(\" \")}\n        />\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.McuTemperature)\n    )\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    if (isNaN(temperature)) return null\n    return <Chip size=\"small\" label={`${temperature}°`} />\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        underline=\"hover\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Typography variant=\"caption\" gutterBottom>\n                                {[\n                                    specification?.name,\n                                    showDeviceId && device.deviceId,\n                                ]\n                                    .filter(s => !!s)\n                                    .join(\", \")}\n                            </Typography>\n                        </Grid>\n                        {showFirmware && (\n                            <Grid item>\n                                <DeviceFirmwareVersionChip device={device} />\n                            </Grid>\n                        )}\n                        {showTemperature && (\n                            <Grid item>\n                                <DeviceTemperatureChip device={device} />\n                            </Grid>\n                        )}\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","import React from \"react\"\nimport useFirmwareBlobs from \"./useFirmwareBlobs\"\n\nexport default function FirmwareLoader() {\n    useFirmwareBlobs()\n    return <></>\n}\n","import React from \"react\"\nimport {\n    CircularProgressProps,\n    Box,\n    CircularProgress,\n    Typography,\n} from \"@mui/material\"\n\nexport default function CircularProgressWithLabel(\n    props: CircularProgressProps & { value: number }\n) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography\n                    variant=\"caption\"\n                    component=\"div\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    )\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}-hr`,\n    start: `${PREFIX}-start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@mui/material\"\nimport React, { CSSProperties } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: {\n        label: string | number | JSX.Element\n        labelPlacement?: \"end\" | \"start\" | \"top\" | \"bottom\"\n        labelStyle?: CSSProperties\n    } & SwitchProps\n) {\n    const { label, labelPlacement, labelStyle, ...rest } = props\n    return (\n        <FormControlLabel\n            control={<Switch {...rest} />}\n            label={label}\n            style={labelStyle}\n            labelPlacement={labelPlacement}\n        />\n    )\n}\n","import { useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    BootloaderCmd,\n    ControlReg,\n    DEVICE_CHANGE,\n    SRV_BOOTLOADER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport useDeviceCatalog from \"../devices/useDeviceCatalog\"\nimport { dependencyId } from \"../../../jacdac-ts/src/jdom/eventsource\"\n\nexport default function useFirmwareRepos(showAllRepos?: boolean) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [repos, setRepos] = useState<string[]>([])\n    const specifications = useDeviceSpecifications()\n    const deviceCatalog = useDeviceCatalog()\n    const devices = useEventRaised(DEVICE_CHANGE, bus, () =>\n        bus.devices({ announced: true, ignoreInfrastructure: true })\n    )\n    const bootloaders = devices.filter(device =>\n        device.hasService(SRV_BOOTLOADER)\n    )\n    const registers = devices\n        .filter(device => !device.hasService(SRV_BOOTLOADER)) // not a bootloader\n        .map(device =>\n            device.service(0)?.register(ControlReg.ProductIdentifier)\n        )\n        .filter(reg => !!reg)\n\n    useEffectAsync(\n        async mounted => {\n            let repos: string[] = []\n            if (showAllRepos) repos = specifications.map(spec => spec.repo)\n            else {\n                const productIdentifiers: number[] = []\n                // ask firmware registers\n                for (const register of registers) {\n                    await register.refresh(true)\n                    const productIdentifier = register.intValue\n                    if (\n                        productIdentifier !== undefined &&\n                        productIdentifiers.indexOf(productIdentifier) < 0\n                    )\n                        productIdentifiers.push(productIdentifier)\n                }\n\n                // ask bootloaders\n                for (const bootloader of bootloaders) {\n                    const boot = bootloader.services({\n                        serviceClass: SRV_BOOTLOADER,\n                    })[0]\n                    const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n                    try {\n                        const resp = await boot.sendCmdAwaitResponseAsync(\n                            bl_announce\n                        )\n                        const [, , , productIdentifier] =\n                            resp.jdunpack<[number, number, number, number]>(\n                                \"u32 u32 u32 u32\"\n                            )\n                        if (\n                            productIdentifier !== undefined &&\n                            productIdentifiers.indexOf(productIdentifier) < 0\n                        )\n                            productIdentifiers.push(productIdentifier)\n                    } catch (e) {\n                        console.warn(`bootloader product identifier failed`, e)\n                    }\n                }\n                repos = productIdentifiers\n                    .map(\n                        fw =>\n                            deviceCatalog.specificationFromProductIdentifier(fw)\n                                ?.repo\n                    )\n                    .filter(repo => !!repo)\n            }\n            if (mounted) {\n                const urepos = unique(repos)\n                setRepos(urepos)\n            }\n        },\n        [\n            dependencyId(devices),\n            dependencyId(registers),\n            showAllRepos,\n            specifications,\n        ]\n    )\n    return repos\n}\n","import React, { lazy, useState } from \"react\"\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    ListItem,\n    List,\n    ListItemText,\n    Typography,\n} from \"@mui/material\"\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\"\nimport Alert from \"../ui/Alert\"\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst LOCAL_FILE_SLUG = \"local file\"\n\nexport default function LocalFileFirmwareCard() {\n    const slug = LOCAL_FILE_SLUG\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const disabled = downloading\n    const version = firmwareBlobs?.[0].version\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setDownloading(true)\n                await setFirmwareFile(undefined, file)\n            } finally {\n                setDownloading(false)\n            }\n        }\n    }\n\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(undefined, undefined)\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader title={slug} />\n            <CardContent>\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                {version && (\n                    <Typography variant=\"body2\">\n                        version <code>{version}</code>\n                    </Typography>\n                )}\n                {!!firmwareBlobs?.length && (\n                    <List dense>\n                        {firmwareBlobs.map(blob => (\n                            <ListItem key={blob.productIdentifier}>\n                                <ListItemText\n                                    primary={blob.name}\n                                    secondary={`0x${blob.productIdentifier.toString(\n                                        16\n                                    )}`}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                )}\n            </CardContent>\n            <CardActions>\n                {!downloading && (\n                    <Suspense>\n                        <ImportButton\n                            text={\"Import UF2 file\"}\n                            onFilesUploaded={handleFiles}\n                        />\n                    </Suspense>\n                )}\n                {!downloading && firmwareBlobs?.length && (\n                    <Button\n                        disabled={disabled}\n                        variant=\"text\"\n                        arial-label={\"Clear\"}\n                        onClick={handleClear}\n                    >\n                        Clear\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport FirmwareCard from \"./FirmwareCard\"\n// tslint:disable-next-line: no-submodule-imports\nimport useFirmwareRepos from \"./useFirmwareRepos\"\nimport LocalFileFirmwareCard from \"./LocalFileFirmwareCard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FirmwareCardGrid() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const firmwareRepos = useFirmwareRepos(safeBoot)\n\n    return (\n        <Grid container spacing={2}>\n            <Grid {...gridBreakpoints} item key=\"localfile\">\n                <LocalFileFirmwareCard />\n            </Grid>\n            {firmwareRepos.map(firmwareRepo => (\n                <Grid\n                    {...gridBreakpoints}\n                    item\n                    key={`firmwarerepo${firmwareRepo}`}\n                >\n                    <FirmwareCard slug={firmwareRepo} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import {\n    Button,\n    Typography,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    Grid,\n} from \"@mui/material\"\nimport { Alert } from \"@mui/material\"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    flashFirmwareBlob,\n    updateApplicable,\n    FirmwareBlob,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport CircularProgressWithLabel from \"../ui/CircularProgressWithLabel\"\nimport AppContext from \"../AppContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMounted from \"./../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { Link } from \"gatsby-material-ui-components\"\nimport DialogTitleWithClose from \"../ui/DialogTitleWithClose\"\nimport { useLatestReleaseAsset } from \"../github\"\nimport useBus from \"../../jacdac/useBus\"\nimport { semverCmp } from \"../semver\"\n\nfunction DragAndDropUpdateButton(props: {\n    firmwareVersion: string\n    productIdentifier: number\n    specification: jdspec.DeviceSpec\n    info: { name: string; url: string; productIdentifier?: number }\n}) {\n    const bus = useBus()\n    const { firmwareVersion, specification, info, productIdentifier } = props\n    const { bootloader } = specification || {}\n    const { driveName, sequence, ledAnimation } = bootloader || {}\n    const { name, url } = info\n    const [open, setOpen] = useState(false)\n    const { trackEvent } = useAnalytics()\n    const handleOpen = () => {\n        trackEvent(\"flash.download\", {\n            device: specification.name,\n            firmwareName: name,\n        })\n        setOpen(true)\n    }\n    const handleClose = () => setOpen(false)\n    const { version, assertUrl } = useLatestReleaseAsset(url)\n    const current =\n        !!productIdentifier && productIdentifier === info.productIdentifier\n    const hasUpdate =\n        current &&\n        version &&\n        firmwareVersion &&\n        semverCmp(firmwareVersion, version) > 0\n\n    // device dissapears after reset\n    useEffect(() => {\n        if (open) {\n            bus.pushDeviceFrozen()\n            return () => bus.popDeviceFrozen()\n        }\n    }, [open])\n\n    return (\n        <>\n            <Button\n                variant={hasUpdate ? \"contained\" : \"outlined\"}\n                color={current ? \"primary\" : \"inherit\"}\n                onClick={handleOpen}\n            >\n                {name}\n                {version && (\n                    <Typography sx={{ ml: 1 }} variant=\"caption\">\n                        {version}\n                    </Typography>\n                )}\n            </Button>\n            <Dialog open={open}>\n                <DialogTitleWithClose onClose={handleClose}>\n                    Updating your {specification.name}\n                </DialogTitleWithClose>\n                <DialogContent>\n                    <p>\n                        Follow these instruction to upgrade your{\" \"}\n                        {specification.name} with <b>{name}</b>.\n                    </p>\n                    <ol>\n                        <li>\n                            <Link href={assertUrl || url}>\n                                Download the firmware file\n                            </Link>\n                        </li>\n                        {sequence === \"reset\" && (\n                            <li>\n                                Press the <b>Reset (RST)</b> button\n                            </li>\n                        )}\n                        {sequence === \"reset-boot\" && (\n                            <li>\n                                Press the <b>Reset (RST)</b> then{\" \"}\n                                <b>Bootloader (BOOT)</b> button\n                            </li>\n                        )}\n                        {ledAnimation === \"blue-glow\" && (\n                            <li>\n                                You should see the status LED glow in Blue and\n                                the <b>{driveName}</b> drive should appear.\n                            </li>\n                        )}\n                        <li>\n                            Drag and drop the file into the&nbsp;\n                            <b>{driveName}</b> drive.\n                        </li>\n                        <li>\n                            Once the file is copied, the device will\n                            automatically restart with the new firmware.\n                        </li>\n                    </ol>\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n\nexport function FlashDeviceButton(props: {\n    device: JDDevice\n    blob: FirmwareBlob\n    ignoreFirmwareCheck?: boolean\n}) {\n    const { device, blob, ignoreFirmwareCheck } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const { trackEvent, trackError } = useAnalytics()\n    const [progress, setProgress] = useState(0)\n    const specification = useDeviceSpecification(device)\n    const firmwares = specification?.firmwares\n    const firmwareInfo = useChange(device, d => d?.firmwareInfo)\n    const update =\n        ignoreFirmwareCheck ||\n        (blob?.version &&\n            firmwareInfo?.version &&\n            updateApplicable(firmwareInfo, blob))\n    const upToDate =\n        blob?.version &&\n        firmwareInfo?.version &&\n        blob.version === firmwareInfo.version\n    const flashing = useChange(device, d => !!d?.flashing)\n    const unsupported = specification && !specification.repo\n    const missing = !device || !blob\n    const disabled = flashing\n    const color = update && !upToDate ? \"primary\" : \"inherit\"\n    const mounted = useMounted()\n\n    const handleFlashing = async () => {\n        if (device.flashing) return\n        const props = {\n            productId: firmwareInfo.productIdentifier,\n            name: firmwareInfo.name,\n            version: firmwareInfo.version,\n        }\n        trackEvent(\"flash.start\", props)\n        try {\n            setProgress(0)\n            device.flashing = true // don't refresh registers while flashing\n            const updateCandidates = [firmwareInfo]\n            await flashFirmwareBlob(\n                bus,\n                blob,\n                updateCandidates,\n                ignoreFirmwareCheck,\n                prog => {\n                    if (mounted()) setProgress(prog)\n                }\n            )\n            trackEvent(\"flash.success\", props)\n        } catch (e) {\n            trackError(e, props)\n            trackEvent(\"flash.error\", props)\n            if (mounted()) setError(e)\n        } finally {\n            device.flashing = false\n        }\n    }\n\n    if (firmwares?.length)\n        return (\n            <Grid container spacing={1} direction=\"row\">\n                {firmwares.map(fw => (\n                    <Grid item key={fw.name}>\n                        <DragAndDropUpdateButton\n                            firmwareVersion={firmwareInfo?.version}\n                            productIdentifier={firmwareInfo?.productIdentifier}\n                            specification={specification}\n                            info={fw}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n\n    // tslint:disable-next-line: react-this-binding-issue\n    return unsupported ? (\n        <Alert severity=\"info\">No registered firmware</Alert>\n    ) : missing ? (\n        <Alert severity=\"info\">No firmware available</Alert>\n    ) : flashing ? (\n        <CircularProgressWithLabel value={progress} />\n    ) : firmwareInfo || update ? (\n        <>\n            {upToDate ? (\n                <Alert severity=\"success\">Up to date!</Alert>\n            ) : (\n                <Alert severity=\"warning\">{blob.version} available</Alert>\n            )}\n            {(!upToDate || ignoreFirmwareCheck) && firmwareInfo && (\n                <Button\n                    title={`Flash ${blob.version}`}\n                    disabled={disabled}\n                    variant=\"contained\"\n                    color={color}\n                    onClick={handleFlashing}\n                >\n                    Flash\n                </Button>\n            )}\n        </>\n    ) : (\n        <Alert severity=\"info\">No firmware available</Alert>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { SRV_BOOTLOADER } from \"../../jacdac-ts/src/jdom/constants\"\nimport JDDevice from \"../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport DeviceCard from \"./devices/DeviceCard\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport useChange from \"../jacdac/useChange\"\nimport useDevices from \"./hooks/useDevices\"\nimport { FlashDeviceButton } from \"./firmware/FlashDeviceButton\"\n\nfunction UpdateDeviceCard(props: { device: JDDevice }) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { device } = props\n    const blobs = useChange(bus, _ => _.firmwareBlobs)\n    const firmwareInfo = useChange(device, d => d.firmwareInfo)\n    const blob =\n        firmwareInfo &&\n        blobs?.find(b => firmwareInfo.productIdentifier == b.productIdentifier)\n\n    return (\n        <DeviceCard\n            device={device}\n            showFirmware={true}\n            // tslint:disable-next-line: react-this-binding-issue\n            action={<FlashDeviceButton device={device} blob={blob} />}\n        />\n    )\n}\n\nexport default function UpdateDeviceList() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints(3)\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const devices = useDevices(\n        {\n            announced: true,\n            ignoreInfrastructure: true,\n            ignoreSimulators: true,\n        },\n        [safeBoot]\n    )\n        .filter(dev => safeBoot || !dev.hasService(SRV_BOOTLOADER))\n        .sort(\n            (l, r) => -(l.productIdentifier || 0) + (r.productIdentifier || 0)\n        )\n\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <Grid key={device.id} item {...gridBreakpoints}>\n                    <UpdateDeviceCard device={device} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { useEffect } from \"react\"\nimport {\n    ControlCmd,\n    DEVICE_ANNOUNCE,\n    SRV_CONTROL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport useBus from \"../../jacdac/useBus\"\n\nexport default function useForceProxy(proxy: boolean) {\n    const bus = useBus()\n\n    // put brains into proxy mode\n    useEffect(() => {\n        if (!proxy) return () => {}\n        const forceProxy = () => {\n            console.debug(`jacdac: force clients to proxy mode`)\n            const pkt = Packet.onlyHeader(ControlCmd.Proxy)\n            pkt.sendAsMultiCommandAsync(bus, SRV_CONTROL)\n        }\n        const unsub = bus.subscribe(DEVICE_ANNOUNCE, forceProxy)\n        forceProxy()\n        return unsub\n    }, [proxy])\n}\n","import { Box, Button, Typography } from \"@mui/material\"\nimport React, { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\n// tslint:disable-next-line: match-default-export-name tslint:disable-next-line: no-submodule-imports\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\"\nimport AppContext from \"../AppContext\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useForceProxy from \"../devices/useForceProxy\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function SafeBootAlert(props: { proxy?: boolean }) {\n    const { proxy } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const safeBoot = useChange(bus, _ => _.safeBoot)\n    const firmwares = db?.firmwares\n\n    const handleRecovery = async () => (bus.safeBoot = !bus.safeBoot)\n    const handleClear = async () => {\n        await firmwares.clear()\n        enqueueSnackbar(\"firmwares cleared\", \"info\")\n    }\n    useForceProxy(safeBoot || proxy)\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    checked={safeBoot}\n                    onChange={handleRecovery}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            recovery mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        If your module is malfunctioning from the start, you can\n                        flash it in bootloader mode. Turn on recovery mode and\n                        unplug/replug any malfunctioning device to switch it to\n                        bootloader mode (glowing status LED). Once your module\n                        is flashed, turn off recovery mode and unplug/replug\n                        your module again.\n                    </Typography>\n                </Box>\n            </Alert>\n            {safeBoot && (\n                <Alert severity=\"warning\">\n                    <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        disabled={!firmwares}\n                        onClick={handleClear}\n                        startIcon={<DeleteForeverIcon />}\n                    >\n                        clear cache\n                    </Button>\n                    <Box mr={1}>\n                        <Typography component=\"span\" variant=\"caption\">\n                            Delete all firmware cached in the browser. The\n                            firmware will have to be deleted again from this\n                            interface.\n                        </Typography>\n                    </Box>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { MenuItem } from \"@mui/material\"\nimport React, { ChangeEvent, useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectDevice(props: {\n    devices: JDDevice[]\n    deviceId: string\n    onChange: (newDeviceId: string) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { devices, deviceId, onChange } = props\n\n    const handleDeviceChange = async (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        onChange(id)\n        const device = bus.node(id) as JDDevice\n        await device?.identify()\n    }\n    return (\n        <SelectWithLabel\n            helperText=\"choose a device\"\n            value={deviceId}\n            onChange={handleDeviceChange}\n            disabled={!devices?.length}\n        >\n            {devices?.map(dev => (\n                <MenuItem key={dev.id} value={dev.id}>\n                    {dev.describe()}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Box, Grid, MenuItem, Typography } from \"@mui/material\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport useBus from \"../../jacdac/useBus\"\nimport useDevices from \"../hooks/useDevices\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { FlashDeviceButton } from \"./FlashDeviceButton\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport SelectDevice from \"../select/SelectDevice\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst fwid = (fw: FirmwareBlob) =>\n    fw ? `${fw.store},${fw.productIdentifier},${fw.version}` : \"\"\n\nfunction ManualFirmware() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreInfrastructure: true,\n        ignoreSimulators: true,\n    })\n    const firmwares = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = unique(firmwares.map(fw => fw.store))\n    const [deviceId, setDeviceId] = useState(devices?.[0]?.id)\n    const [firmwareId, setFirmwareId] = useState<string>(fwid(firmwares?.[0]))\n    const [store, setStore] = useState<string>(stores?.[0] || \"\")\n\n    const handleDeviceChange = (newId: string) => setDeviceId(newId)\n    const handleStoreChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const store = ev.target.value as string\n        setStore(store)\n    }\n    const handleFirmwareChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        setFirmwareId(id)\n    }\n\n    const device = bus.node(deviceId) as JDDevice\n    const blob = firmwares.find(fw => fwid(fw) === firmwareId)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SelectDevice\n                    devices={devices}\n                    deviceId={deviceId}\n                    onChange={handleDeviceChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={1}>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a firmware\"\n                            value={store}\n                            onChange={handleStoreChange}\n                        >\n                            {stores?.map(store => (\n                                <MenuItem key={store} value={store}>\n                                    {store}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a module\"\n                            value={firmwareId}\n                            onChange={handleFirmwareChange}\n                        >\n                            {firmwares\n                                ?.filter(fw => fw.store === store)\n                                .map(fw => (\n                                    <MenuItem key={fwid(fw)} value={fwid(fw)}>\n                                        {fw.name} &nbsp;\n                                        <Typography variant=\"caption\">\n                                            {fw.version}, &nbsp;\n                                            {`0x${fw.productIdentifier.toString(\n                                                16\n                                            )}`}\n                                        </Typography>\n                                    </MenuItem>\n                                ))}\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <FlashDeviceButton\n                    device={device}\n                    blob={blob}\n                    ignoreFirmwareCheck={true}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ManualFirmwareAlert() {\n    const bus = useBus()\n    const safeBoot = useChange(bus, _ => _.safeBoot)\n    const [enabled, setEnabled] = useState(false)\n    const handleToggle = async () => {\n        const v = !enabled\n        setEnabled(v)\n    }\n\n    if (!safeBoot) return null\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={enabled}\n                    onChange={handleToggle}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            manual mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        Manually select which firmware to upload on your device.\n                    </Typography>\n                </Box>\n            </Alert>\n            {enabled && (\n                <Alert severity=\"warning\">\n                    <ManualFirmware />\n                </Alert>\n            )}\n        </>\n    )\n}\n","import {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Tab,\n    Tabs,\n} from \"@mui/material\"\nimport React, { Fragment, useContext, useState } from \"react\"\nimport TabPanel from \"../ui/TabPanel\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport FirmwareCardGrid from \"../firmware/FirmwareCardGrid\"\n// tslint:disable-next-line: no-submodule-imports\nimport UpdateDeviceList from \"../UpdateDeviceList\"\nimport SafeBootAlert from \"../firmware/SafeBootAlert\"\nimport ManualFirmwareAlert from \"../firmware/ManualFirmwareAlert\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useFirmwareBlobs from \"../firmware/useFirmwareBlobs\"\nimport GridHeader from \"../ui/GridHeader\"\nimport { groupBy } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { FLASH_MAX_DEVICES } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport Alert from \"../ui/Alert\"\nimport { AlertTitle } from \"@mui/material\"\nimport FirmwareLoader from \"../firmware/FirmwareLoader\"\n\nfunction FlashDiagnostics() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const blobs = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = groupBy(blobs, blob => blob.store)\n    return (\n        <Grid container spacing={2}>\n            {Object.entries(stores).map(([store, blobs]) => (\n                <Fragment key={store}>\n                    <GridHeader title={store} />\n                    {blobs?.map(blob => (\n                        <Grid item key={blob.store + blob.productIdentifier}>\n                            <Card>\n                                <CardHeader\n                                    title={blob.name}\n                                    subheader={blob.version}\n                                />\n                                <CardContent>\n                                    pid: 0x{blob.productIdentifier.toString(16)}\n                                    , {blob.pages.length} pages\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Fragment>\n            ))}\n        </Grid>\n    )\n}\n\nexport default function Flash() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [tab, setTab] = useState(0)\n    const { throttled } = useFirmwareBlobs()\n    const devices = useChange(bus, _ => _.devices({ physical: true }))\n\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    return (\n        <Box mb={2}>\n            {throttled && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Try again later...</AlertTitle>\n                    Oops, it looks like we have been polling firmware too much\n                    from GitHub. Please try again later.\n                </Alert>\n            )}\n            {devices?.length > FLASH_MAX_DEVICES && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Too many connected devices</AlertTitle>\n                    Please unplug some of your devices before updating.\n                </Alert>\n            )}\n            <ConnectAlert />\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Update firmware of modules\"\n            >\n                <Tab label={`Updates`} />\n                <Tab label={`Firmwares`} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <UpdateDeviceList />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <FirmwareCardGrid />\n            </TabPanel>\n            <SafeBootAlert />\n            <ManualFirmwareAlert />\n            {Flags.diagnostics && <FlashDiagnostics />}\n            <FirmwareLoader />\n        </Box>\n    )\n}\n","import React from \"react\"\nimport Flash from \"../../components/tools/Flash\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>Firmware Updater</h1>\n            <p>\n                This page allows you to update your Jacdac module with new\n                firmware. Find the latest UF2 firmware file from your\n                manufacturer and import it with the button below.\n            </p>\n            <Flash />\n        </>\n    )\n}\n"],"names":["Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","ConnectButtons","useDevices","NoSsrConnectAlert","props","serviceClass","closeable","bus","transports","devices","ignoreInfrastructure","spec","length","name","ConnectAlert","Button","ServiceButton","service","onClick","others","styled","Card","CardContent","ControlReg","useChange","navigate","CardActions","DeviceCardHeader","useRegisterUnpackedValue","DeviceLostAlert","isInfrastructure","PREFIX","classes","root","bullet","title","pos","StyledCard","display","margin","transform","fontSize","marginBottom","navigateToService","specification","shortId","DeviceDescription","device","register","_","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","services","filter","srv","map","id","useDeviceSpecification","useDeviceImage","CardMediaWithSkeleton","DeviceCardMedia","imageUrl","JD_SERVICE_INDEX_CTRL","CardHeader","Chip","Grid","Typography","Link","DeviceActions","DeviceName","identifierToUrlPath","DeviceAvatar","useRegister","DeviceFirmwareVersionChip","control","productIdentifierRegister","ProductIdentifier","productIdentifier","firmwareVersionRegister","FirmwareVersion","firmwareVersion","undefined","firmwareName","firmwares","find","fw","f","join","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","isNaN","showMedia","showAvatar","showSettings","showReset","deviceId","s","useFirmwareBlobs","FirmwareLoader","CircularProgress","CircularProgressWithLabel","Math","round","value","clsx","hr","start","StyledGrid","theme","background","palette","text","disabled","width","spacing","GridHeader","count","variant","FormControlLabel","Switch","SwitchWithLabel","label","labelPlacement","labelStyle","rest","useState","useEffectAsync","unique","BootloaderCmd","DEVICE_CHANGE","SRV_BOOTLOADER","useEventRaised","Packet","useDeviceSpecifications","useDeviceCatalog","dependencyId","useFirmwareRepos","showAllRepos","repos","setRepos","specifications","deviceCatalog","announced","bootloaders","hasService","registers","reg","mounted","repo","productIdentifiers","refresh","intValue","indexOf","push","bootloader","boot","bl_announce","onlyHeader","Info","resp","sendCmdAwaitResponseAsync","jdunpack","e","console","warn","specificationFromProductIdentifier","urepos","lazy","ListItem","List","ListItemText","useFirmwareBlob","Suspense","ImportButton","LOCAL_FILE_SLUG","LocalFileFirmwareCard","slug","downloading","setDownloading","error","setError","setFirmwareFile","firmwareBlobs","version","handleFiles","files","file","handleClear","blob","toString","useGridBreakpoints","FirmwareCard","FirmwareCardGrid","gridBreakpoints","safeBoot","b","firmwareRepos","firmwareRepo","Dialog","DialogContent","useEffect","flashFirmwareBlob","updateApplicable","AppContext","useMounted","useAnalytics","DialogTitleWithClose","useLatestReleaseAsset","useBus","semverCmp","DragAndDropUpdateButton","info","driveName","sequence","ledAnimation","url","open","setOpen","trackEvent","handleOpen","handleClose","assertUrl","current","hasUpdate","pushDeviceFrozen","popDeviceFrozen","ml","FlashDeviceButton","ignoreFirmwareCheck","trackError","progress","setProgress","firmwareInfo","d","update","upToDate","flashing","unsupported","missing","color","handleFlashing","productId","updateCandidates","prog","UpdateDeviceCard","blobs","UpdateDeviceList","ignoreSimulators","dev","sort","l","r","ControlCmd","DEVICE_ANNOUNCE","SRV_CONTROL","useForceProxy","proxy","forceProxy","debug","pkt","Proxy","sendAsMultiCommandAsync","unsub","subscribe","DbContext","DeleteForeverIcon","SafeBootAlert","db","enqueueSnackbar","handleRecovery","clear","MenuItem","SelectWithLabel","SelectDevice","onChange","handleDeviceChange","ev","target","node","identify","describe","fwid","store","ManualFirmware","stores","setDeviceId","firmwareId","setFirmwareId","setStore","newId","handleStoreChange","handleFirmwareChange","ManualFirmwareAlert","enabled","setEnabled","handleToggle","v","Tab","Tabs","Fragment","TabPanel","Flags","groupBy","FLASH_MAX_DEVICES","AlertTitle","FlashDiagnostics","Object","entries","pages","Flash","tab","setTab","throttled","physical","handleTabChange","event","newValue","diagnostics","Page"],"sourceRoot":""}