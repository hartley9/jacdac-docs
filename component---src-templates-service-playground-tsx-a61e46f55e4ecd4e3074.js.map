{"version":3,"file":"component---src-templates-service-playground-tsx-a61e46f55e4ecd4e3074.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecification.tsx","webpack://jacdac-docs/./src/templates/service-playground.tsx"],"sourcesContent":["import { Grid } from \"@mui/material\"\nimport React, { useContext, useState } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const { device, variant, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const [charts, setCharts] = useState(false)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType, charts]\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} variant={variant} charts={charts} setCharts={setCharts} {...other} />\n        </Grid>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@mui/material\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length) return <></>\n\n    return (\n        <Fragment>\n            <h2>Enums</h2>\n            {enums.map(e => (\n                <Fragment key={e.name}>\n                    <h3>\n                        {e.name}{\" \"}\n                        {e.isFlags && <Chip label=\"flags\" size=\"small\" />}\n                    </h3>\n                    <ul>\n                        {Object.keys(e.members).map(en => (\n                            <li key={en}>\n                                {en}:{\" \"}\n                                <code>0x{e.members[en].toString(16)}</code>\n                            </li>\n                        ))}\n                    </ul>\n                </Fragment>\n            ))}\n        </Fragment>\n    )\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"./PacketSpecification\"\nimport IDChip from \"../IDChip\"\nimport Markdown from \"../ui/Markdown\"\nimport EnumSpecification from \"../EnumSpecification\"\nimport { Box, Grid } from \"@mui/material\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"../hooks/useServiceProviderFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashbardDeviceItem from \"../dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map(pkt => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.identifier}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </>\n    )\n}\n","import React from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport ServiceSpecification from \"../components/specification/ServiceSpecification\"\n\nexport default function Page(props: {\n    pageContext: { node: { classIdentifier: number } }\n}) {\n    const spec = serviceSpecificationFromClassIdentifier(\n        props.pageContext.node.classIdentifier\n    )\n    return <ServiceSpecification service={spec} />\n}\n"],"names":["Grid","React","useContext","useState","DashboardDevice","useChange","dashboardServiceWeight","AppContext","DrawerType","DashboardDeviceItem","props","device","variant","other","drawerType","charts","setCharts","breakpoints","breakpointWeight","services","map","srv","readingRegister","valueRegister","intensityRegister","reduce","c","v","None","xs","sm","md","lg","xl","Fragment","serviceSpecificationFromClassIdentifier","Chip","EnumSpecification","serviceClass","spec","enums","Object","values","filter","en","derived","length","e","name","isFlags","keys","members","toString","Link","serviceSpecificationFromName","isRegister","isEvent","isCommand","isPipeReport","isReportOf","isPipeReportOf","PacketSpecification","IDChip","Markdown","Box","ServiceSpecificationStatusAlert","useServiceProviderFromServiceClass","JacdacContext","DashbardDeviceItem","DashboardServiceDevices","bus","devices","b","id","ServiceSpecification","service","node","showDerived","shortId","classIdentifier","packets","pkt","registers","events","commands","reports","r","secondary","pipeReports","others","indexOf","reportOf","find","rep","pipeReportOf","notes","short","extends","extend","i","long","note","group","sort","l","identifier","Page","pageContext"],"sourceRoot":""}