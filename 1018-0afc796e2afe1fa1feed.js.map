{"version":3,"file":"1018-0afc796e2afe1fa1feed.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/Toc.tsx"],"sourcesContent":["import React, { useContext, useMemo } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { List, ListItem, Typography, useTheme, Box } from \"@mui/material\"\nimport { Link } from \"gatsby-theme-material-ui\"\n// tslint:disable-next-line: no-submodule-imports\nimport ListItemText from \"@mui/material/ListItemText\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport useMediaQueries from \"./hooks/useMediaQueries\"\n\nconst PREFIX = \"Toc\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n}\n\nconst StyledList = styled(List)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        width: \"100%\",\n        backgroundColor: theme.palette.background.paper,\n    },\n}))\n\ninterface TocNode {\n    name: string\n    path: string\n    order: number\n    children?: TocNode[]\n}\n\nfunction treeifyToc(toc: TocNode[]) {\n    let tree = toc.slice(0)\n\n    // reconstruct tree\n    const tocNodes: { [index: string]: TocNode } = {}\n    tree.forEach((node, index) => {\n        const k = node.path.replace(/\\/$/, \"\")\n        if (tocNodes[k]) {\n            tree[index] = undefined\n        } else tocNodes[k] = node\n    })\n    tree = tree.filter(node => !!node)\n    tree.forEach((node, index) => {\n        const parts = node.path.replace(/\\/$/, \"\").split(\"/\")\n        parts.pop()\n        while (parts.length) {\n            const parentPath = `${parts.join(\"/\")}`\n            const parent = tocNodes[parentPath]\n            if (parent) {\n                if (!parent.children) parent.children = []\n                parent.children.push(node)\n                tree[index] = undefined\n                break\n            }\n            parts.pop()\n        }\n    })\n    const r = {\n        tree: tree.filter(node => !!node),\n        nodes: tocNodes,\n    }\n\n    function sortNodes(nodes: TocNode[]) {\n        nodes.sort((l, r) => l.order - r.order || l.name.localeCompare(r.name))\n        nodes.forEach(node => node.children && sortNodes(node.children))\n    }\n    sortNodes(r.tree)\n\n    return r\n}\n\nexport default function Toc(props: { pagePath: string }) {\n    const { pagePath } = props\n    const { setDrawerType } = useContext(AppContext)\n    const { mobile } = useMediaQueries()\n    const theme = useTheme()\n\n    const data = useStaticQuery(graphql`\n        query {\n            allMdx {\n                edges {\n                    node {\n                        headings {\n                            value\n                        }\n                        frontmatter {\n                            title\n                            order\n                            hideToc\n                        }\n                        fields {\n                            slug\n                        }\n                        parent {\n                            ... on File {\n                                sourceInstanceName\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    /*\n      site {\n        siteMetadata {\n          title\n        }\n    }\n  \n    allServicesJson {\n        nodes {\n          name\n          shortId\n        }\n      } \n   */\n\n    const handleClick = () => {\n        if (mobile) setDrawerType(DrawerType.None)\n    }\n\n    const tree = useMemo(() => {\n        // convert pages into tree\n        const toc: TocNode[] = [\n            {\n                name: \"Home\",\n                path: \"/\",\n                order: 0,\n            },\n            {\n                name: \"Dashboard\",\n                path: \"/dashboard/\",\n                order: 0.1,\n            },\n            {\n                name: \"Hardware\",\n                path: \"/hardware/\",\n                order: 0.2,\n            },\n            {\n                name: \"Software\",\n                path: \"/software/\",\n                order: 0.3,\n            },\n            {\n                name: \"Devices\",\n                path: \"/devices/\",\n                order: 0.4,\n            },\n            {\n                name: \"Client SDKs\",\n                path: \"/clients/\",\n                order: 0.5,\n            },\n            {\n                name: \"Services\",\n                path: \"/services/\",\n                order: 0.6,\n            },\n            {\n                name: \"Tools\",\n                path: \"/tools/\",\n                order: 0.7,\n            },\n            {\n                name: \"Protocol\",\n                path: \"/protocol/\",\n                order: 0.8,\n            },\n            {\n                name: \"Reference\",\n                path: \"/reference/\",\n                order: 0.81,\n            },\n        ]\n\n        data.allMdx.edges\n            .map(node => node.node)\n            .filter(\n                node =>\n                    !!node.frontmatter?.title ||\n                    (!!node.headings.length &&\n                        !/404/.test(node.headings[0].value))\n            )\n            .filter(node => !node.frontmatter || !node.frontmatter?.hideToc)\n            .map(node => {\n                const r = {\n                    name: node.frontmatter?.title || node.headings[0].value,\n                    path: node.fields.slug,\n                    order:\n                        node.frontmatter?.order !== undefined\n                            ? node.frontmatter?.order\n                            : 50,\n                }\n                return r\n            })\n            .forEach(node => toc.push(node))\n        const { tree } = treeifyToc(toc)\n        return tree\n    }, [])\n\n    const TocListItem = (props: { entry: TocNode; level: number }) => {\n        const { entry, level } = props\n        const { path, children, name } = entry\n        const selected = pagePath === path\n        const sub = level === 1 || !!children?.length\n        const showSub = sub && !!children?.length && pagePath.startsWith(path)\n\n        return (\n            <>\n                <ListItem\n                    component=\"li\"\n                    selected={selected}\n                    key={\"tocitem\" + path}\n                    sx={{ ml: Math.max(0, level - 1) }}\n                >\n                    <Link\n                        style={{ color: theme.palette.text.primary }}\n                        onClick={handleClick}\n                        to={path}\n                        underline=\"none\"\n                    >\n                        <ListItemText\n                            primary={\n                                <Typography\n                                    variant={sub ? \"button\" : \"caption\"}\n                                >\n                                    {name}\n                                </Typography>\n                            }\n                        />\n                    </Link>\n                </ListItem>\n                {showSub &&\n                    children?.map(child => (\n                        <TocListItem\n                            key={child.path}\n                            entry={child}\n                            level={level + 1}\n                        />\n                    ))}\n            </>\n        )\n    }\n\n    return (\n        <StyledList dense className={classes.root}>\n            {tree.map(entry => (\n                // eslint-disable-next-line react/prop-types\n                <TocListItem key={entry.path} entry={entry} level={0} />\n            ))}\n        </StyledList>\n    )\n}\n"],"names":["React","useContext","useMemo","styled","List","ListItem","Typography","useTheme","Link","ListItemText","AppContext","DrawerType","useStaticQuery","useMediaQueries","PREFIX","classes","root","StyledList","theme","width","backgroundColor","palette","background","paper","treeifyToc","toc","tree","slice","tocNodes","forEach","node","index","k","path","replace","undefined","filter","parts","split","pop","length","parentPath","join","parent","children","push","r","nodes","sortNodes","sort","l","order","name","localeCompare","Toc","props","pagePath","setDrawerType","mobile","data","handleClick","None","allMdx","edges","map","frontmatter","title","headings","test","value","hideToc","fields","slug","TocListItem","entry","level","selected","sub","showSub","startsWith","ml","Math","max","color","text","primary","child"],"sourceRoot":""}