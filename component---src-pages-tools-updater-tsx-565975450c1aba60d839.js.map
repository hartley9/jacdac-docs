{"version":3,"file":"component---src-pages-tools-updater-tsx-565975450c1aba60d839.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Bluetooth.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/DeleteForever.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Usb.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Wifi.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogContentText/DialogContentText.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/buttons/ConnectButton.tsx","webpack://jacdac-docs/./src/components/buttons/ConnectButtons.tsx","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareLoader.tsx","webpack://jacdac-docs/./src/components/icons/SerialIcon.tsx","webpack://jacdac-docs/./src/components/icons/TransportIcon.tsx","webpack://jacdac-docs/./src/components/ui/Button.tsx","webpack://jacdac-docs/./src/components/ui/CircularProgressWithLabel.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/firmware/useFirmwareRepos.ts","webpack://jacdac-docs/./src/components/firmware/LocalFileFirmwareCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareCardGrid.tsx","webpack://jacdac-docs/./src/components/firmware/FlashDeviceButton.tsx","webpack://jacdac-docs/./src/components/UpdateDeviceList.tsx","webpack://jacdac-docs/./src/components/firmware/SafeBootAlert.tsx","webpack://jacdac-docs/./src/components/select/SelectDevice.tsx","webpack://jacdac-docs/./src/components/firmware/ManualFirmwareAlert.tsx","webpack://jacdac-docs/./src/components/tools/Flash.tsx","webpack://jacdac-docs/./src/pages/tools/updater.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.71 7.71 12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88z\"\n}), 'Bluetooth');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 7v4h1v2h-3V5h2l-3-4-3 4h2v8H8v-2.07c.7-.37 1.2-1.08 1.2-1.93 0-1.21-.99-2.2-2.2-2.2-1.21 0-2.2.99-2.2 2.2 0 .85.5 1.56 1.2 1.93V13c0 1.11.89 2 2 2h3v3.05c-.71.37-1.2 1.1-1.2 1.95 0 1.22.99 2.2 2.2 2.2 1.21 0 2.2-.98 2.2-2.2 0-.85-.49-1.58-1.2-1.95V15h3c1.11 0 2-.89 2-2v-2h1V7h-4z\"\n}), 'Usb');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m1 9 2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8 3 3 3-3c-1.65-1.66-4.34-1.66-6 0zm-4-4 2 2c2.76-2.76 7.24-2.76 10 0l2-2C15.14 9.14 8.87 9.14 5 13z\"\n}), 'Wifi');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nvar dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes\n  } = ownerState;\n  var slots = {\n    root: ['root']\n  };\n  var composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nvar DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  var ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default DialogContentText;","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@mui/material\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport Button from \"../ui/Button\"\nimport Transport, {\n    ConnectionState,\n} from \"../../../jacdac-ts/src/jdom/transport/transport\"\nimport { Badge } from \"@mui/material\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport TransportIcon from \"../icons/TransportIcon\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\n\nexport default function ConnectButton(props: {\n    full?: boolean\n    className?: string\n    transparent?: boolean\n    specification?: jdspec.DeviceSpec\n    transport: Transport\n    typeInTitle?: boolean\n    onClick?: () => void\n}) {\n    const {\n        full,\n        className,\n        transparent,\n        transport,\n        onClick,\n        specification,\n        typeInTitle,\n    } = props\n    const { type } = transport\n    const connectionState = useChange(transport, t => t.connectionState)\n    const showDisconnect =\n        connectionState == ConnectionState.Connected ||\n        connectionState == ConnectionState.Disconnecting\n    const inProgress =\n        connectionState == ConnectionState.Connecting ||\n        connectionState == ConnectionState.Disconnecting\n    const { mobile } = useMediaQueries()\n    const small = full !== true && (!full || mobile)\n    const disabled =\n        connectionState != ConnectionState.Connected &&\n        connectionState != ConnectionState.Disconnected\n    const handleClick = showDisconnect\n        ? async () => {\n              onClick?.()\n              await transport.disconnect()\n          }\n        : async () => {\n              onClick?.()\n              await transport.connect()\n          }\n    const icon = (\n        <Badge color=\"primary\" variant=\"dot\" invisible={!showDisconnect}>\n            <TransportIcon type={transport.type} />\n        </Badge>\n    )\n    const label = showDisconnect\n        ? `disconnect from ${type}`\n        : `connect to ${specification?.name || type}`\n    const title = showDisconnect\n        ? typeInTitle\n            ? `disconnect ${type}`\n            : `disconnect`\n        : typeInTitle\n        ? `connect ${type}`\n        : `connect`\n    const trackName = `transport.connect.${type}`\n    const trackProperties = {\n        transport: type,\n    }\n\n    if (small)\n        return (\n            <span>\n                <IconButtonWithProgress\n                    aria-label={label}\n                    title={label}\n                    color={transparent ? \"inherit\" : \"primary\"}\n                    className={className}\n                    disabled={disabled}\n                    indeterminate={inProgress}\n                    onClick={handleClick}\n                >\n                    {icon}\n                </IconButtonWithProgress>\n            </span>\n        )\n    else\n        return (\n            <Button\n                trackName={trackName}\n                trackProperties={trackProperties}\n                aria-label={label}\n                title={label}\n                size=\"small\"\n                variant={transparent ? \"outlined\" : \"contained\"}\n                color={transparent ? \"inherit\" : \"primary\"}\n                className={className}\n                startIcon={icon}\n                disabled={disabled}\n                onClick={handleClick}\n            >\n                {title}\n            </Button>\n        )\n}\n","import React, { useContext, useState } from \"react\"\nimport ConnectButton from \"./ConnectButton\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport useChange from \"../../jacdac/useChange\"\nimport Button from \"../ui/Button\"\nimport AppContext from \"../AppContext\"\nimport JacdacIcon from \"../icons/JacdacIcon\"\n\nfunction DisconnectedButton(props: {\n    full?: \"disconnected\" | \"always\"\n    className?: string\n    transparent?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { mobile } = useMediaQueries()\n    const { toggleShowConnectTransportDialog } = useContext(AppContext)\n    const { full, transparent, className } = props\n    const [working, setWorking] = useState(false)\n    const small = !full || mobile\n    const trackName = `transport.connect.start`\n\n    const handleConnect = async () => {\n        try {\n            setWorking(true)\n            await bus.connect(true)\n            if (!bus.connected) toggleShowConnectTransportDialog()\n        } finally {\n            setWorking(false)\n        }\n    }\n\n    if (small)\n        return (\n            <span>\n                <IconButtonWithTooltip\n                    title={\"Connect to a physical device\"}\n                    color={transparent ? \"inherit\" : \"primary\"}\n                    className={className}\n                    onClick={handleConnect}\n                    disabled={working}\n                >\n                    <JacdacIcon />\n                </IconButtonWithTooltip>\n            </span>\n        )\n    else\n        return (\n            <Button\n                trackName={trackName}\n                title=\"Connect to a physical device\"\n                size=\"small\"\n                variant={transparent ? \"outlined\" : \"contained\"}\n                color={transparent ? \"inherit\" : \"primary\"}\n                className={className}\n                startIcon={<JacdacIcon />}\n                onClick={handleConnect}\n                disabled={working}\n            >\n                Connect\n            </Button>\n        )\n}\n\nexport default function ConnectButtons(props: {\n    full?: \"disconnected\" | \"always\"\n    className?: string\n    transparent?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { full, ...rest } = props\n    const { transports } = bus\n    const disconnected = useChange(bus, _ => _.disconnected)\n\n    if (!transports?.length) return null\n\n    return disconnected ? (\n        <DisconnectedButton {...props} />\n    ) : (\n        <>\n            {transports\n                .filter(tr => !tr.disconnected)\n                .map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        {...rest}\n                        full={full === \"always\"}\n                    />\n                ))}\n        </>\n    )\n}\n","import { ButtonProps } from \"@mui/material\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"../ServiceButton\"\nimport useChange from \"../../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { CardActions } from \"@mui/material\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\n\nconst PREFIX = \"DeviceCard\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n}\n\nconst StyledCard = styled(Card)(() => ({\n    [`&.${classes.root}`]: {},\n\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n}))\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n\n    const services = useChange(device, () =>\n        device.services().filter(srv => !isInfrastructure(srv.specification))\n    )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.id}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\"\nimport useFirmwareBlobs from \"./useFirmwareBlobs\"\n\nexport default function FirmwareLoader() {\n    useFirmwareBlobs()\n    return <></>\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function SerialIcon(props: SvgIconProps) {\n    return (\n        <SvgIcon titleAccess=\"Serial port\" {...props}>\n            <path d=\"M20.605,7.172l-17.21,-0c0,-0 -0.299,0.052 -0.507,0.097c-0.993,0.213 -1.745,1.03 -1.873,2.039l-0.009,0.126c-0.03,0.586 0.059,1.173 0.261,1.724c0.47,1.283 1.396,3.811 1.489,4.066l0.083,0.187l-0.004,-0.009c0.371,0.802 1.174,1.315 2.057,1.315l14.216,-0c0.883,-0 1.686,-0.513 2.057,-1.315l0.079,-0.178c0.093,-0.255 1.02,-2.783 1.489,-4.066c0.201,-0.547 0.29,-1.129 0.262,-1.711l-0.009,-0.139c-0.129,-1.009 -0.88,-1.826 -1.874,-2.039l-0.397,-0.085c-0.035,-0.008 -0.072,-0.012 -0.11,-0.012Zm-17.156,1.023l17.102,-0l0.346,0.074c0.566,0.121 0.994,0.584 1.072,1.156l0.005,0.068c0.02,0.452 -0.048,0.896 -0.201,1.314l-1.483,4.049l-0.054,0.119c-0.204,0.439 -0.644,0.719 -1.128,0.719l-14.216,0c-0.484,0 -0.925,-0.281 -1.129,-0.72l-0.053,-0.118l-1.483,-4.049c-0.154,-0.422 -0.223,-0.871 -0.2,-1.32l0.004,-0.062c0.078,-0.572 0.506,-1.035 1.072,-1.156l0.346,-0.074Zm0.326,6.805l0.002,0.008l-0.002,-0.008Zm6.531,-2.571c0.47,-0 0.852,0.382 0.852,0.852c-0,0.47 -0.382,0.852 -0.852,0.852c-0.471,0 -0.853,-0.382 -0.853,-0.852c0,-0.47 0.382,-0.852 0.853,-0.852Zm-3.389,-0c0.47,-0 0.852,0.382 0.852,0.852c-0,0.47 -0.382,0.852 -0.852,0.852c-0.471,0 -0.853,-0.382 -0.853,-0.852c0,-0.47 0.382,-0.852 0.853,-0.852Zm6.777,-0c0.471,-0 0.853,0.382 0.853,0.852c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,0 -0.852,-0.382 -0.852,-0.852c0,-0.47 0.382,-0.852 0.852,-0.852Zm3.389,-0c0.471,-0 0.853,0.382 0.853,0.852c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,0 -0.852,-0.382 -0.852,-0.852c0,-0.47 0.382,-0.852 0.852,-0.852Zm-11.861,-2.674c0.471,0 0.853,0.382 0.853,0.853c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.471,0 0.852,0.382 0.852,0.853c0,0.47 -0.381,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.471,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.381,-0.853 0.852,-0.853Zm-16.752,-0.26l-0.003,0.029l0.003,-0.029Z\" />\n        </SvgIcon>\n    )\n}\n","import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport UsbIcon from \"@mui/icons-material/Usb\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport BluetoothIcon from \"@mui/icons-material/Bluetooth\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport WifiIcon from \"@mui/icons-material/Wifi\"\nimport {\n    BLUETOOTH_TRANSPORT,\n    PACKETIO_TRANSPORT,\n    SERIAL_TRANSPORT,\n    USB_TRANSPORT,\n    WEBSOCKET_TRANSPORT,\n    VIRTUAL_DEVICE_NODE_NAME,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport KindIcon from \"../KindIcon\"\nimport SerialIcon from \"./SerialIcon\"\n\nexport default function TransportIcon(props: {\n    type: string\n    className?: string\n}) {\n    const { type, className } = props\n    switch (type) {\n        case PACKETIO_TRANSPORT:\n        case USB_TRANSPORT:\n            return <UsbIcon className={className} />\n        case BLUETOOTH_TRANSPORT:\n            return <BluetoothIcon className={className} />\n        case SERIAL_TRANSPORT:\n            return <SerialIcon className={className} />\n        case WEBSOCKET_TRANSPORT:\n            return <WifiIcon className={className} />\n        default:\n            return (\n                <KindIcon\n                    kind={VIRTUAL_DEVICE_NODE_NAME}\n                    className={className}\n                />\n            )\n    }\n}\n","import React from \"react\"\nimport { ButtonProps } from \"@mui/material\"\nimport { Button as GatsbyButton } from \"gatsby-theme-material-ui\"\nimport useAnalytics, { EventProperties } from \"../hooks/useAnalytics\"\n\nexport default function Button(\n    props: {\n        trackName?: string\n        trackProperties?: EventProperties\n    } & ButtonProps\n) {\n    const { trackName, trackProperties, onClick, ...rest } = props\n    const { trackEvent } = useAnalytics()\n    const handleClick =\n        !trackName || !trackEvent || !onClick\n            ? onClick\n            : ev => {\n                  trackEvent(trackName, trackProperties)\n                  onClick(ev)\n              }\n    return <GatsbyButton onClick={handleClick} {...rest} />\n}\n","import React from \"react\"\nimport {\n    CircularProgressProps,\n    Box,\n    CircularProgress,\n    Typography,\n} from \"@mui/material\"\n\nexport default function CircularProgressWithLabel(\n    props: CircularProgressProps & { value: number }\n) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography\n                    variant=\"caption\"\n                    component=\"div\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    )\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}-hr`,\n    start: `${PREFIX}-start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@mui/material\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: {\n        label: ReactNode\n        labelPlacement?: \"end\" | \"start\" | \"top\" | \"bottom\"\n    } & SwitchProps\n) {\n    const { label, labelPlacement, ...rest } = props\n    return (\n        <FormControlLabel\n            control={<Switch {...rest} />}\n            label={label}\n            labelPlacement={labelPlacement}\n        />\n    )\n}\n","import { useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    BootloaderCmd,\n    ControlReg,\n    DEVICE_CHANGE,\n    SRV_BOOTLOADER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport useEventRaised from \"../../jacdac/useEventRaised\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport useDeviceCatalog from \"../devices/useDeviceCatalog\"\n\nexport default function useFirmwareRepos(showAllRepos?: boolean) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [repos, setRepos] = useState<string[]>([])\n    const specifications = useDeviceSpecifications()\n    const deviceCatalog = useDeviceCatalog()\n    const devices = useEventRaised(DEVICE_CHANGE, bus, () =>\n        bus.devices({ announced: true, ignoreInfrastructure: true })\n    )\n    const bootloaders = devices.filter(device =>\n        device.hasService(SRV_BOOTLOADER)\n    )\n    const registers = devices\n        .filter(device => !device.hasService(SRV_BOOTLOADER)) // not a bootloader\n        .map(device =>\n            device.service(0)?.register(ControlReg.ProductIdentifier)\n        )\n        .filter(reg => !!reg)\n\n    useEffectAsync(\n        async mounted => {\n            let repos: string[] = []\n            if (showAllRepos) repos = specifications.map(spec => spec.repo)\n            else {\n                const productIdentifiers: number[] = []\n                // ask firmware registers\n                for (const register of registers) {\n                    await register.refresh(true)\n                    const productIdentifier = register.intValue\n                    if (\n                        productIdentifier !== undefined &&\n                        productIdentifiers.indexOf(productIdentifier) < 0\n                    )\n                        productIdentifiers.push(productIdentifier)\n                }\n\n                // ask bootloaders\n                for (const bootloader of bootloaders) {\n                    const boot = bootloader.services({\n                        serviceClass: SRV_BOOTLOADER,\n                    })[0]\n                    const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n                    try {\n                        const resp = await boot.sendCmdAwaitResponseAsync(\n                            bl_announce\n                        )\n                        const [, , , productIdentifier] =\n                            resp.jdunpack<[number, number, number, number]>(\n                                \"u32 u32 u32 u32\"\n                            )\n                        if (\n                            productIdentifier !== undefined &&\n                            productIdentifiers.indexOf(productIdentifier) < 0\n                        )\n                            productIdentifiers.push(productIdentifier)\n                    } catch (e) {\n                        console.warn(`bootloader product identifier failed`, e)\n                    }\n                }\n                repos = productIdentifiers\n                    .map(\n                        fw =>\n                            deviceCatalog.specificationFromProductIdentifier(fw)\n                                ?.repo\n                    )\n                    .filter(repo => !!repo)\n            }\n            if (mounted) {\n                const urepos = unique(repos)\n                setRepos(urepos)\n            }\n        },\n        [\n            devices.map(dev => dev.id).join(),\n            registers.map(reg => reg.id).join(),\n            showAllRepos,\n            specifications,\n        ]\n    )\n    return repos\n}\n","import React, { lazy, useState } from \"react\"\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    ListItem,\n    List,\n    ListItemText,\n    Typography,\n} from \"@mui/material\"\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\"\nimport Alert from \"../ui/Alert\"\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst LOCAL_FILE_SLUG = \"local file\"\n\nexport default function LocalFileFirmwareCard() {\n    const slug = LOCAL_FILE_SLUG\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const disabled = downloading\n    const version = firmwareBlobs?.[0].version\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setDownloading(true)\n                await setFirmwareFile(undefined, file)\n            } finally {\n                setDownloading(false)\n            }\n        }\n    }\n\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(undefined, undefined)\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader title={slug} />\n            <CardContent>\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                {version && (\n                    <Typography variant=\"body2\">\n                        version <code>{version}</code>\n                    </Typography>\n                )}\n                {!!firmwareBlobs?.length && (\n                    <List dense>\n                        {firmwareBlobs.map(blob => (\n                            <ListItem key={blob.productIdentifier}>\n                                <ListItemText\n                                    primary={blob.name}\n                                    secondary={`0x${blob.productIdentifier.toString(\n                                        16\n                                    )}`}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                )}\n            </CardContent>\n            <CardActions>\n                {!downloading && (\n                    <Suspense>\n                        <ImportButton\n                            text={\"Import UF2 file\"}\n                            onFilesUploaded={handleFiles}\n                        />\n                    </Suspense>\n                )}\n                {!downloading && firmwareBlobs?.length && (\n                    <Button\n                        disabled={disabled}\n                        variant=\"text\"\n                        arial-label={\"Clear\"}\n                        onClick={handleClear}\n                    >\n                        Clear\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport FirmwareCard from \"./FirmwareCard\"\n// tslint:disable-next-line: no-submodule-imports\nimport useFirmwareRepos from \"./useFirmwareRepos\"\nimport LocalFileFirmwareCard from \"./LocalFileFirmwareCard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FirmwareCardGrid() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const firmwareRepos = useFirmwareRepos(safeBoot)\n\n    return (\n        <Grid container spacing={2}>\n            <Grid {...gridBreakpoints} item key=\"localfile\">\n                <LocalFileFirmwareCard />\n            </Grid>\n            {firmwareRepos.map(firmwareRepo => (\n                <Grid\n                    {...gridBreakpoints}\n                    item\n                    key={`firmwarerepo${firmwareRepo}`}\n                >\n                    <FirmwareCard slug={firmwareRepo} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import {\n    Button,\n    Typography,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    Grid,\n} from \"@mui/material\"\nimport { Alert } from \"@mui/material\"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    flashFirmwareBlob,\n    updateApplicable,\n    FirmwareBlob,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport CircularProgressWithLabel from \"../ui/CircularProgressWithLabel\"\nimport AppContext from \"../AppContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMounted from \"./../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { Link } from \"gatsby-material-ui-components\"\nimport DialogTitleWithClose from \"../ui/DialogTitleWithClose\"\nimport { useLatestReleaseAsset } from \"../github\"\nimport useBus from \"../../jacdac/useBus\"\nimport { semverCmp } from \"../semver\"\n\nfunction DragAndDropUpdateButton(props: {\n    firmwareVersion: string\n    productIdentifier: number\n    specification: jdspec.DeviceSpec\n    info: { name: string; url: string; productIdentifier?: number }\n}) {\n    const bus = useBus()\n    const { firmwareVersion, specification, info, productIdentifier } = props\n    const { bootloader } = specification || {}\n    const { driveName, sequence, ledAnimation } = bootloader || {}\n    const { name, url } = info\n    const [open, setOpen] = useState(false)\n    const { trackEvent } = useAnalytics()\n    const handleOpen = () => {\n        trackEvent(\"flash.download\", {\n            device: specification.name,\n            firmwareName: name,\n        })\n        setOpen(true)\n    }\n    const handleClose = () => setOpen(false)\n    const { version, assertUrl } = useLatestReleaseAsset(url)\n    const current =\n        !!productIdentifier && productIdentifier === info.productIdentifier\n    const hasUpdate =\n        current &&\n        version &&\n        firmwareVersion &&\n        semverCmp(firmwareVersion, version) > 0\n\n    // device dissapears after reset\n    useEffect(() => {\n        if (open) {\n            bus.pushDeviceFrozen()\n            return () => bus.popDeviceFrozen()\n        }\n    }, [open])\n\n    return (\n        <>\n            <Button\n                variant={hasUpdate ? \"contained\" : \"outlined\"}\n                color={current ? \"primary\" : \"inherit\"}\n                onClick={handleOpen}\n            >\n                {name}\n                {version && (\n                    <Typography sx={{ ml: 1 }} variant=\"caption\">\n                        {version}\n                    </Typography>\n                )}\n            </Button>\n            <Dialog open={open}>\n                <DialogTitleWithClose onClose={handleClose}>\n                    Updating your {specification.name}\n                </DialogTitleWithClose>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography component=\"div\">\n                            Follow these instruction to upgrade your{\" \"}\n                            {specification.name} with <b>{name}</b>.\n                        </Typography>\n                        <ol>\n                            <li>\n                                <Link href={assertUrl || url}>\n                                    Download the firmware file\n                                </Link>\n                            </li>\n                            {sequence === \"reset\" && (\n                                <li>\n                                    Press the <b>Reset (RST)</b> button\n                                </li>\n                            )}\n                            {sequence === \"reset-boot\" && (\n                                <li>\n                                    Press the <b>Reset (RST)</b> then{\" \"}\n                                    <b>Bootloader (BOOT)</b> button\n                                </li>\n                            )}\n                            {ledAnimation === \"blue-glow\" && (\n                                <li>\n                                    You should see the status LED glow in Blue\n                                    and the <b>{driveName}</b> drive should\n                                    appear.\n                                </li>\n                            )}\n                            <li>\n                                Drag and drop the file into the&nbsp;\n                                <b>{driveName}</b> drive.\n                            </li>\n                            <li>\n                                Once the file is copied, the device will\n                                automatically restart with the new firmware.\n                            </li>\n                        </ol>\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n\nexport function FlashDeviceButton(props: {\n    device: JDDevice\n    blob: FirmwareBlob\n    ignoreFirmwareCheck?: boolean\n}) {\n    const { device, blob, ignoreFirmwareCheck } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const { trackEvent, trackError } = useAnalytics()\n    const [progress, setProgress] = useState(0)\n    const specification = useDeviceSpecification(device)\n    const firmwares = specification?.firmwares\n    const firmwareInfo = useChange(device, d => d?.firmwareInfo)\n    const update =\n        ignoreFirmwareCheck ||\n        (blob?.version &&\n            firmwareInfo?.version &&\n            updateApplicable(firmwareInfo, blob))\n    const upToDate =\n        blob?.version &&\n        firmwareInfo?.version &&\n        blob.version === firmwareInfo.version\n    const flashing = useChange(device, d => !!d?.flashing)\n    const unsupported = specification && !specification.repo\n    const missing = !device || !blob\n    const disabled = flashing\n    const color = update && !upToDate ? \"primary\" : \"inherit\"\n    const mounted = useMounted()\n\n    const handleFlashing = async () => {\n        if (device.flashing) return\n        const props = {\n            productId: firmwareInfo.productIdentifier,\n            name: firmwareInfo.name,\n            version: firmwareInfo.version,\n        }\n        trackEvent(\"flash.start\", props)\n        try {\n            setProgress(0)\n            device.flashing = true // don't refresh registers while flashing\n            const updateCandidates = [firmwareInfo]\n            await flashFirmwareBlob(\n                bus,\n                blob,\n                updateCandidates,\n                ignoreFirmwareCheck,\n                prog => {\n                    if (mounted()) setProgress(prog)\n                }\n            )\n            trackEvent(\"flash.success\", props)\n        } catch (e) {\n            trackError(e, props)\n            trackEvent(\"flash.error\", props)\n            if (mounted()) setError(e)\n        } finally {\n            device.flashing = false\n        }\n    }\n\n    if (firmwares?.length)\n        return (\n            <Grid container spacing={1} direction=\"row\">\n                {firmwares.map(fw => (\n                    <Grid item key={fw.name}>\n                        <DragAndDropUpdateButton\n                            firmwareVersion={firmwareInfo?.version}\n                            productIdentifier={firmwareInfo?.productIdentifier}\n                            specification={specification}\n                            info={fw}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n\n    // tslint:disable-next-line: react-this-binding-issue\n    return unsupported ? (\n        <Alert severity=\"info\">No registered firmware</Alert>\n    ) : missing ? (\n        <Alert severity=\"info\">No firmware available</Alert>\n    ) : flashing ? (\n        <CircularProgressWithLabel value={progress} />\n    ) : firmwareInfo || update ? (\n        <>\n            {upToDate ? (\n                <Alert severity=\"success\">Up to date!</Alert>\n            ) : (\n                <Alert severity=\"warning\">{blob.version} available</Alert>\n            )}\n            {(!upToDate || ignoreFirmwareCheck) && firmwareInfo && (\n                <Button\n                    title={`Flash ${blob.version}`}\n                    disabled={disabled}\n                    variant=\"contained\"\n                    color={color}\n                    onClick={handleFlashing}\n                >\n                    Flash\n                </Button>\n            )}\n        </>\n    ) : (\n        <Alert severity=\"info\">No firmware available</Alert>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { SRV_BOOTLOADER } from \"../../jacdac-ts/src/jdom/constants\"\nimport JDDevice from \"../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport DeviceCard from \"./devices/DeviceCard\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport useChange from \"../jacdac/useChange\"\nimport useDevices from \"./hooks/useDevices\"\nimport { FlashDeviceButton } from \"./firmware/FlashDeviceButton\"\n\nfunction UpdateDeviceCard(props: { device: JDDevice }) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { device } = props\n    const blobs = useChange(bus, _ => _.firmwareBlobs)\n    const firmwareInfo = useChange(device, d => d.firmwareInfo)\n    const blob =\n        firmwareInfo &&\n        blobs?.find(b => firmwareInfo.productIdentifier == b.productIdentifier)\n\n    return (\n        <DeviceCard\n            device={device}\n            showFirmware={true}\n            // tslint:disable-next-line: react-this-binding-issue\n            action={<FlashDeviceButton device={device} blob={blob} />}\n        />\n    )\n}\n\nexport default function UpdateDeviceList() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints(3)\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const devices = useDevices(\n        {\n            announced: true,\n            ignoreInfrastructure: true,\n            ignoreSimulators: true,\n        },\n        [safeBoot]\n    )\n        .filter(dev => safeBoot || !dev.hasService(SRV_BOOTLOADER))\n        .sort(\n            (l, r) => -(l.productIdentifier || 0) + (r.productIdentifier || 0)\n        )\n\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <Grid key={device.id} item {...gridBreakpoints}>\n                    <UpdateDeviceCard device={device} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Box, Button, Typography } from \"@mui/material\"\nimport React, { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\n// tslint:disable-next-line: match-default-export-name tslint:disable-next-line: no-submodule-imports\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\"\nimport AppContext from \"../AppContext\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport {\n    ControlCmd,\n    SRV_CONTROL,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DEVICE_ANNOUNCE } from \"../../../jacdac-ts/src/jdom/constants\"\n\nexport default function SafeBootAlert(props: { proxy?: boolean }) {\n    const { proxy } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const [safeBoot, setSafeBoot] = useState(bus.safeBoot)\n    const firmwares = db?.firmwares\n\n    const handleRecovery = async () => {\n        const v = !safeBoot\n        setSafeBoot(v)\n    }\n    const handleClear = async () => {\n        await firmwares.clear()\n        enqueueSnackbar(\"firmwares cleared\", \"info\")\n    }\n\n    // turn on and off safeboot mode\n    useEffect(() => {\n        bus.safeBoot = safeBoot\n        return () => {\n            bus.safeBoot = false\n        }\n    }, [safeBoot])\n\n    // put brains into proxy mode\n    useEffect(() => {\n        if (!safeBoot || !proxy) return () => {}\n        const forceProxy = () => {\n            console.debug(`jacdac: force clients to proxy mode`)\n            const pkt = Packet.onlyHeader(ControlCmd.Proxy)\n            pkt.sendAsMultiCommandAsync(bus, SRV_CONTROL)\n        }\n        const unsub = bus.subscribe(DEVICE_ANNOUNCE, forceProxy)\n        forceProxy()\n        return unsub\n    }, [safeBoot, proxy])\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={safeBoot}\n                    onChange={handleRecovery}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            recovery mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        If your module is malfunctioning from the start, you can\n                        flash it in bootloader mode. Turn on recovery mode and\n                        unplug/replug any malfunctioning device to switch it to\n                        bootloader mode (glowing status LED). Once your module\n                        is flashed, turn off recovery mode and unplug/replug\n                        your module again.\n                    </Typography>\n                </Box>\n            </Alert>\n            {safeBoot && (\n                <Alert severity=\"warning\">\n                    <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        disabled={!firmwares}\n                        onClick={handleClear}\n                        startIcon={<DeleteForeverIcon />}\n                    >\n                        clear cache\n                    </Button>\n                    <Box mr={1}>\n                        <Typography component=\"span\" variant=\"caption\">\n                            Delete all firmware cached in the browser. The\n                            firmware will have to be deleted again from this\n                            interface.\n                        </Typography>\n                    </Box>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { MenuItem } from \"@mui/material\"\nimport React, { ChangeEvent, useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectDevice(props: {\n    devices: JDDevice[]\n    deviceId: string\n    onChange: (newDeviceId: string) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { devices, deviceId, onChange } = props\n\n    const handleDeviceChange = async (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        onChange(id)\n        const device = bus.node(id) as JDDevice\n        await device?.identify()\n    }\n    return (\n        <SelectWithLabel\n            helperText=\"choose a device\"\n            value={deviceId}\n            onChange={handleDeviceChange}\n            disabled={!devices?.length}\n        >\n            {devices?.map(dev => (\n                <MenuItem key={dev.id} value={dev.id}>\n                    {dev.describe()}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Box, Grid, MenuItem, Typography } from \"@mui/material\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport useBus from \"../../jacdac/useBus\"\nimport useDevices from \"../hooks/useDevices\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { FlashDeviceButton } from \"./FlashDeviceButton\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport SelectDevice from \"../select/SelectDevice\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst fwid = (fw: FirmwareBlob) =>\n    fw ? `${fw.store},${fw.productIdentifier},${fw.version}` : \"\"\n\nfunction ManualFirmware() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreInfrastructure: true,\n        ignoreSimulators: true,\n    })\n    const firmwares = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = unique(firmwares.map(fw => fw.store))\n    const [deviceId, setDeviceId] = useState(devices?.[0]?.id)\n    const [firmwareId, setFirmwareId] = useState<string>(fwid(firmwares?.[0]))\n    const [store, setStore] = useState<string>(stores?.[0] || \"\")\n\n    const handleDeviceChange = (newId: string) => setDeviceId(newId)\n    const handleStoreChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const store = ev.target.value as string\n        setStore(store)\n    }\n    const handleFirmwareChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        setFirmwareId(id)\n    }\n\n    const device = bus.node(deviceId) as JDDevice\n    const blob = firmwares.find(fw => fwid(fw) === firmwareId)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SelectDevice\n                    devices={devices}\n                    deviceId={deviceId}\n                    onChange={handleDeviceChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={1}>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a firmware\"\n                            value={store}\n                            onChange={handleStoreChange}\n                        >\n                            {stores?.map(store => (\n                                <MenuItem key={store} value={store}>\n                                    {store}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a module\"\n                            value={firmwareId}\n                            onChange={handleFirmwareChange}\n                        >\n                            {firmwares\n                                ?.filter(fw => fw.store === store)\n                                .map(fw => (\n                                    <MenuItem key={fwid(fw)} value={fwid(fw)}>\n                                        {fw.name} &nbsp;\n                                        <Typography variant=\"caption\">\n                                            {fw.version}, &nbsp;\n                                            {`0x${fw.productIdentifier.toString(\n                                                16\n                                            )}`}\n                                        </Typography>\n                                    </MenuItem>\n                                ))}\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <FlashDeviceButton\n                    device={device}\n                    blob={blob}\n                    ignoreFirmwareCheck={true}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ManualFirmwareAlert() {\n    const bus = useBus()\n    const safeBoot = useChange(bus, _ => _.safeBoot)\n    const [enabled, setEnabled] = useState(false)\n    const handleToggle = async () => {\n        const v = !enabled\n        setEnabled(v)\n    }\n\n    if (!safeBoot) return null\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={enabled}\n                    onChange={handleToggle}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            manual mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        Manually select which firmware to upload on your device.\n                    </Typography>\n                </Box>\n            </Alert>\n            {enabled && (\n                <Alert severity=\"warning\">\n                    <ManualFirmware />\n                </Alert>\n            )}\n        </>\n    )\n}\n","import {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Tab,\n    Tabs,\n} from \"@mui/material\"\nimport React, { Fragment, useContext, useState } from \"react\"\nimport TabPanel from \"../ui/TabPanel\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport FirmwareCardGrid from \"../firmware/FirmwareCardGrid\"\n// tslint:disable-next-line: no-submodule-imports\nimport UpdateDeviceList from \"../UpdateDeviceList\"\nimport SafeBootAlert from \"../firmware/SafeBootAlert\"\nimport ManualFirmwareAlert from \"../firmware/ManualFirmwareAlert\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useFirmwareBlobs from \"../firmware/useFirmwareBlobs\"\nimport GridHeader from \"../ui/GridHeader\"\nimport { groupBy } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { FLASH_MAX_DEVICES } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport Alert from \"../ui/Alert\"\nimport { AlertTitle } from \"@mui/material\"\nimport FirmwareLoader from \"../firmware/FirmwareLoader\"\n\nfunction FlashDiagnostics() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const blobs = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = groupBy(blobs, blob => blob.store)\n    return (\n        <Grid container spacing={2}>\n            {Object.entries(stores).map(([store, blobs]) => (\n                <Fragment key={store}>\n                    <GridHeader title={store} />\n                    {blobs?.map(blob => (\n                        <Grid item key={blob.store + blob.productIdentifier}>\n                            <Card>\n                                <CardHeader\n                                    title={blob.name}\n                                    subheader={blob.version}\n                                />\n                                <CardContent>\n                                    pid: 0x{blob.productIdentifier.toString(16)}\n                                    , {blob.pages.length} pages\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Fragment>\n            ))}\n        </Grid>\n    )\n}\n\nexport default function Flash() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [tab, setTab] = useState(0)\n    const { throttled } = useFirmwareBlobs()\n    const devices = useChange(bus, _ => _.devices({ physical: true }))\n\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    return (\n        <Box mb={2}>\n            {throttled && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Try again later...</AlertTitle>\n                    Oops, it looks like we have been polling firmware too much\n                    from GitHub. Please try again later.\n                </Alert>\n            )}\n            {devices?.length > FLASH_MAX_DEVICES && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Too many connected devices</AlertTitle>\n                    Please unplug some of your devices before updating.\n                </Alert>\n            )}\n            <ConnectAlert />\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Update firmware of modules\"\n            >\n                <Tab label={`Updates`} />\n                <Tab label={`Firmwares`} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <UpdateDeviceList />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <FirmwareCardGrid />\n            </TabPanel>\n            <SafeBootAlert proxy={true} />\n            <ManualFirmwareAlert />\n            {Flags.diagnostics && <FlashDiagnostics />}\n            <FirmwareLoader />\n        </Box>\n    )\n}\n","import React from \"react\"\nimport Flash from \"../../components/tools/Flash\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>Firmware Updater</h1>\n            <p>\n                This page allows you to update your Jacdac module with new\n                firmware. Find the latest UF2 firmware file from your\n                manufacturer and import it with the button below.\n            </p>\n            <Flash />\n        </>\n    )\n}\n"],"names":["Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","ConnectButtons","useDevices","NoSsrConnectAlert","props","serviceClass","closeable","bus","transports","devices","ignoreInfrastructure","spec","length","name","ConnectAlert","Button","ConnectionState","Badge","IconButtonWithProgress","TransportIcon","useChange","useMediaQueries","ConnectButton","full","className","transparent","transport","onClick","specification","typeInTitle","type","connectionState","t","showDisconnect","Connected","Disconnecting","inProgress","Connecting","mobile","small","disabled","Disconnected","handleClick","disconnect","connect","icon","label","title","trackName","trackProperties","useState","IconButtonWithTooltip","AppContext","JacdacIcon","DisconnectedButton","toggleShowConnectTransportDialog","working","setWorking","handleConnect","connected","rest","disconnected","_","filter","tr","map","ServiceButton","service","others","styled","Card","CardContent","ControlReg","navigate","CardActions","DeviceCardHeader","useRegisterUnpackedValue","DeviceLostAlert","isInfrastructure","PREFIX","classes","root","bullet","pos","StyledCard","display","margin","transform","fontSize","marginBottom","navigateToService","shortId","DeviceDescription","device","register","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","services","srv","id","useFirmwareBlobs","FirmwareLoader","SvgIcon","SerialIcon","UsbIcon","BluetoothIcon","WifiIcon","BLUETOOTH_TRANSPORT","PACKETIO_TRANSPORT","SERIAL_TRANSPORT","USB_TRANSPORT","WEBSOCKET_TRANSPORT","VIRTUAL_DEVICE_NODE_NAME","KindIcon","GatsbyButton","useAnalytics","trackEvent","ev","CircularProgress","Typography","CircularProgressWithLabel","Math","round","value","Chip","Grid","clsx","hr","start","StyledGrid","theme","background","palette","text","width","spacing","GridHeader","count","variant","undefined","FormControlLabel","Switch","SwitchWithLabel","labelPlacement","useEffectAsync","unique","BootloaderCmd","DEVICE_CHANGE","SRV_BOOTLOADER","useEventRaised","Packet","useDeviceSpecifications","useDeviceCatalog","useFirmwareRepos","showAllRepos","repos","setRepos","specifications","deviceCatalog","announced","bootloaders","hasService","registers","ProductIdentifier","reg","mounted","repo","productIdentifiers","refresh","productIdentifier","intValue","indexOf","push","bootloader","boot","bl_announce","onlyHeader","Info","resp","sendCmdAwaitResponseAsync","jdunpack","e","console","warn","fw","specificationFromProductIdentifier","urepos","dev","join","lazy","CardHeader","ListItem","List","ListItemText","useFirmwareBlob","Suspense","ImportButton","LOCAL_FILE_SLUG","LocalFileFirmwareCard","slug","downloading","setDownloading","error","setError","setFirmwareFile","firmwareBlobs","version","handleFiles","files","file","handleClear","blob","toString","useGridBreakpoints","FirmwareCard","FirmwareCardGrid","gridBreakpoints","safeBoot","b","firmwareRepos","firmwareRepo","Dialog","DialogContent","DialogContentText","useEffect","flashFirmwareBlob","updateApplicable","useMounted","useDeviceSpecification","Link","DialogTitleWithClose","useLatestReleaseAsset","useBus","semverCmp","DragAndDropUpdateButton","firmwareVersion","info","driveName","sequence","ledAnimation","url","open","setOpen","handleOpen","firmwareName","handleClose","assertUrl","current","hasUpdate","pushDeviceFrozen","popDeviceFrozen","ml","FlashDeviceButton","ignoreFirmwareCheck","trackError","progress","setProgress","firmwares","firmwareInfo","d","update","upToDate","flashing","unsupported","missing","color","handleFlashing","productId","updateCandidates","prog","UpdateDeviceCard","blobs","find","UpdateDeviceList","ignoreSimulators","sort","l","r","DbContext","DeleteForeverIcon","ControlCmd","SRV_CONTROL","DEVICE_ANNOUNCE","SafeBootAlert","proxy","db","enqueueSnackbar","setSafeBoot","handleRecovery","v","clear","forceProxy","debug","pkt","Proxy","sendAsMultiCommandAsync","unsub","subscribe","MenuItem","SelectWithLabel","SelectDevice","deviceId","onChange","handleDeviceChange","target","node","identify","describe","fwid","store","ManualFirmware","stores","setDeviceId","firmwareId","setFirmwareId","setStore","newId","handleStoreChange","handleFirmwareChange","ManualFirmwareAlert","enabled","setEnabled","handleToggle","Tab","Tabs","Fragment","TabPanel","Flags","groupBy","FLASH_MAX_DEVICES","AlertTitle","FlashDiagnostics","Object","entries","pages","Flash","tab","setTab","throttled","physical","handleTabChange","event","newValue","diagnostics","Page"],"sourceRoot":""}