{"version":3,"file":"4203-17e7eb37eacd6bb20448.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Maximize.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Minimize.js","webpack://jacdac-docs/./src/components/ui/WebCam.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 3h18v2H3z\"\n}), 'Maximize');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19h12v2H6z\"\n}), 'Minimize');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/media-has-caption */\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    FormControl,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n} from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React, { useContext, useEffect, useRef, useState } from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport SettingsIcon from \"@mui/icons-material/Settings\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport useMounted from \"../hooks/useMounted\"\nimport CloseIcon from \"@mui/icons-material/Close\"\nimport AppContext from \"../AppContext\"\nimport { Alert } from \"@mui/material\"\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\"\nimport MinimizeIcon from \"@mui/icons-material/Minimize\"\nimport MaximizeIcon from \"@mui/icons-material/Maximize\"\nimport Draggable from \"react-draggable\"\n\nconst PREFIX = \"WebCam\"\n\nconst classes = {\n    cardContainer: `${PREFIX}-cardContainer`,\n    card: `${PREFIX}-card`,\n}\n\nconst Root = styled(\"div\")(() => ({\n    [`& .${classes.cardContainer}`]: {\n        zIndex: 1101,\n        position: \"absolute\",\n        right: \"2rem\",\n        bottom: \"3rem\",\n    },\n\n    [`& .${classes.card}`]: {\n        \"& .hostedcontainer\": {\n            position: \"relative\",\n            width: \"40vw\",\n        },\n        \"& video\": {\n            border: \"none\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n    },\n}))\n\nexport default function WebCam() {\n    const { setShowWebCam } = useContext(AppContext)\n    const [minimize, setMinimize] = useState(true)\n    const [devices, setDevices] = useState<MediaDeviceInfo[]>()\n    const [deviceId, setDeviceId] = useLocalStorage(\"webcam_deviceid\", \"\")\n    const [working, setWorking] = useState(false)\n    const nodeRef = useRef<HTMLSpanElement>()\n    const streamRef = useRef<MediaStream>()\n    const videoRef = useRef<HTMLVideoElement>()\n    const [settingsOpen, setSettingsOpen] = useState(false)\n    const mounted = useMounted()\n\n    const supportsFullScreen =\n        typeof document !== \"undefined\" && !!document.fullscreenEnabled\n\n    const handleClose = async () => await setShowWebCam(false)\n    const handleMinimize = () => setMinimize(!minimize)\n    const handleSettings = () => {\n        console.debug(`toggle settings`, { settingsOpen })\n        setSettingsOpen(!settingsOpen)\n    }\n    const handleDeviceChange = (\n        ev: SelectChangeEvent<string>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => setDeviceId(ev.target.value)\n    const handleFullScreen = () => videoRef.current?.requestFullscreen()\n    const stop = () => {\n        const stream = streamRef.current\n        if (stream) {\n            console.debug(`webcam: stop`)\n            try {\n                const tracks = stream.getTracks()\n                if (tracks) tracks.forEach(track => track.stop())\n            } catch (e) {\n                console.debug(e)\n            }\n            streamRef.current = undefined\n        }\n        const video = videoRef.current\n        if (video) {\n            try {\n                video.srcObject = undefined\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n    }\n\n    // start camera\n    useEffectAsync(async () => {\n        stop()\n\n        console.debug(`webcam: start '${deviceId || \"?\"}'`)\n        try {\n            setWorking(true)\n            stop()\n            const filter: MediaStreamConstraints = {\n                video: {\n                    width: { ideal: 1920 },\n                    height: { ideal: 1080 },\n                },\n                audio: false,\n            }\n            if (deviceId)\n                (filter.video as MediaTrackConstraints).advanced = [\n                    { deviceId: deviceId },\n                ]\n\n            const stream = await navigator.mediaDevices.getUserMedia(filter)\n            streamRef.current = stream\n            const video = videoRef.current\n            video.srcObject = stream\n            await video.play()\n\n            console.debug(`webcam: play started`)\n            setSettingsOpen(false)\n        } catch (e) {\n            console.debug(`webcam: play failed`)\n            console.error(e)\n            setSettingsOpen(true)\n        } finally {\n            setWorking(false)\n        }\n    }, [deviceId])\n\n    const updateDevices = async () => {\n        console.debug(`webcam: update devices`)\n        try {\n            // enumerate devices\n            const devices = await navigator.mediaDevices.enumerateDevices()\n            const webcams = devices.filter(\n                device => device.kind == \"videoinput\"\n            )\n            if (mounted()) setDevices(webcams)\n        } catch (e) {\n            console.debug(e)\n            if (mounted()) setDevices([])\n        }\n    }\n\n    useEffectAsync(async () => {\n        if (settingsOpen) await updateDevices()\n    }, [settingsOpen])\n\n    useEffect(() => {\n        navigator.mediaDevices.addEventListener(\"devicechange\", updateDevices)\n        return () =>\n            navigator.mediaDevices.removeEventListener(\n                \"devicechange\",\n                updateDevices\n            )\n    })\n\n    // cleanup\n    useEffect(() => stop, [])\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const draggableProps: any = {\n        nodeRef,\n    }\n\n    return (\n        <Root>\n            <Draggable {...draggableProps}>\n                <span ref={nodeRef} className={classes.cardContainer}>\n                    <Card className={classes.card}>\n                        <CardHeader\n                            title={\n                                settingsOpen &&\n                                devices && (\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                    >\n                                        <Select\n                                            title=\"select a webcam\"\n                                            open={settingsOpen}\n                                            onChange={handleDeviceChange}\n                                            value={deviceId || \"\"}\n                                            disabled={working}\n                                        >\n                                            {devices?.map(\n                                                ({ deviceId, label }) => (\n                                                    <MenuItem\n                                                        key={deviceId}\n                                                        value={deviceId}\n                                                    >\n                                                        {label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                    </FormControl>\n                                )\n                            }\n                            action={\n                                <>\n                                    {supportsFullScreen && (\n                                        <IconButtonWithTooltip\n                                            size=\"small\"\n                                            onClick={handleFullScreen}\n                                            title=\"full screen\"\n                                            disabled={working}\n                                        >\n                                            <FullscreenIcon />\n                                        </IconButtonWithTooltip>\n                                    )}\n                                    <IconButtonWithTooltip\n                                        size=\"small\"\n                                        onClick={handleMinimize}\n                                        disabled={working}\n                                        title={\n                                            minimize ? \"Maximize\" : \"Minimize\"\n                                        }\n                                    >\n                                        {minimize ? (\n                                            <MaximizeIcon />\n                                        ) : (\n                                            <MinimizeIcon />\n                                        )}\n                                    </IconButtonWithTooltip>\n                                    <IconButtonWithTooltip\n                                        size=\"small\"\n                                        onClick={handleSettings}\n                                        title=\"Settings\"\n                                        disabled={working}\n                                    >\n                                        <SettingsIcon />\n                                    </IconButtonWithTooltip>\n                                    <IconButtonWithTooltip\n                                        size=\"small\"\n                                        onClick={handleClose}\n                                        title=\"Close\"\n                                    >\n                                        <CloseIcon />\n                                    </IconButtonWithTooltip>\n                                </>\n                            }\n                        />\n                        {working && (\n                            <CardContent>\n                                <Alert severity=\"info\">\n                                    starting camera...\n                                </Alert>\n                            </CardContent>\n                        )}\n                        <CardMedia>\n                            <div\n                                className=\"hostedcontainer\"\n                                style={\n                                    !minimize\n                                        ? {\n                                              width: \"85vw\",\n                                          }\n                                        : undefined\n                                }\n                            >\n                                <video\n                                    autoPlay\n                                    playsInline\n                                    ref={videoRef}\n                                    title=\"webcam\"\n                                />\n                            </div>\n                        </CardMedia>\n                    </Card>\n                </span>\n            </Draggable>\n        </Root>\n    )\n}\n"],"names":["Card","CardContent","CardHeader","CardMedia","FormControl","MenuItem","Select","styled","React","useContext","useEffect","useRef","useState","useLocalStorage","useEffectAsync","SettingsIcon","IconButtonWithTooltip","useMounted","CloseIcon","AppContext","Alert","FullscreenIcon","MinimizeIcon","MaximizeIcon","Draggable","PREFIX","classes","cardContainer","card","Root","zIndex","position","right","bottom","width","border","height","WebCam","setShowWebCam","minimize","setMinimize","devices","setDevices","deviceId","setDeviceId","working","setWorking","nodeRef","streamRef","videoRef","settingsOpen","setSettingsOpen","mounted","supportsFullScreen","document","fullscreenEnabled","handleClose","handleMinimize","handleSettings","console","debug","handleDeviceChange","ev","target","value","handleFullScreen","current","requestFullscreen","stop","stream","tracks","getTracks","forEach","track","e","undefined","video","srcObject","filter","ideal","audio","advanced","navigator","mediaDevices","getUserMedia","play","error","updateDevices","enumerateDevices","webcams","device","kind","addEventListener","removeEventListener","draggableProps","map","label"],"sourceRoot":""}