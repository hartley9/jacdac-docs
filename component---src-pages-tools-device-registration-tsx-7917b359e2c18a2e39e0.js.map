{"version":3,"file":"component---src-pages-tools-device-registration-tsx-7917b359e2c18a2e39e0.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Add.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Check.js","webpack://jacdac-docs/./src/components/AddServiceIconButton.tsx","webpack://jacdac-docs/./src/components/RandomGenerator.tsx","webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","webpack://jacdac-docs/./src/components/useBlobCanvas.ts","webpack://jacdac-docs/./src/components/ui/ImageImportCanvas.tsx","webpack://jacdac-docs/./src/pages/tools/device-registration.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import React, { useMemo } from \"react\"\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function AddServiceIconButton(props: {\n    onAdd: (service: jdspec.ServiceSpec) => void\n    serviceFilter?: (service: jdspec.ServiceSpec) => boolean\n    error?: string\n    children?: JSX.Element | JSX.Element[]\n}) {\n    const { error, onAdd, children, serviceFilter } = props\n    const [servicesAnchorEl, setServicesAnchorEl] =\n        React.useState<null | HTMLElement>(null)\n    const servicesMenuId = useId()\n    const services = useMemo(\n        () =>\n            serviceSpecifications()\n                .filter(srv => !isInfrastructure(srv))\n                .filter(srv => !serviceFilter || serviceFilter(srv)),\n        [serviceFilter]\n    )\n\n    const handleServiceAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setServicesAnchorEl(event.currentTarget)\n    }\n    const handleServiceAddClose = (id: number) => () => {\n        setServicesAnchorEl(null)\n        if (id !== undefined) {\n            const srv = serviceSpecificationFromClassIdentifier(id)\n            onAdd(srv)\n        }\n    }\n\n    return (\n        <>\n            <IconButtonWithTooltip\n                title=\"Add a service\"\n                aria-controls={servicesMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleServiceAddClick}\n            >\n                {children || <AddIcon />}\n            </IconButtonWithTooltip>\n            <Menu\n                id={servicesMenuId}\n                anchorEl={servicesAnchorEl}\n                keepMounted\n                open={Boolean(servicesAnchorEl)}\n                onClose={handleServiceAddClose(undefined)}\n            >\n                {services.map(srv => (\n                    <MenuItem\n                        key={srv.classIdentifier}\n                        value={srv.classIdentifier.toString(16)}\n                        onClick={handleServiceAddClose(srv.classIdentifier)}\n                    >\n                        {srv.name}\n                    </MenuItem>\n                ))}\n            </Menu>\n            <Typography\n                variant=\"caption\"\n                color={error ? \"error\" : \"inherit\"}\n                component=\"div\"\n            >\n                {error || \"Select one or more services.\"}\n            </Typography>\n        </>\n    )\n}\n","import React, { useState } from \"react\"\nimport {\n    deviceSpecificationFromProductIdentifier,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../jacdac-ts/src/jdom/spec\"\nimport {\n    Card,\n    makeStyles,\n    CardContent,\n    CardActions,\n    Typography,\n    createStyles,\n    Input,\n} from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CheckIcon from \"@material-ui/icons/Check\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"./ui/Alert\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport { NoSsr } from \"@material-ui/core\"\nimport { useId } from \"react-use-id-hook\"\nimport { cryptoRandomUint32 } from \"../../jacdac-ts/src/jdom/random\"\nimport { toFullHex } from \"../../jacdac-ts/src/jdom/utils\"\n\nfunction looksRandom(n: number) {\n    const s = n.toString(16)\n    const h = \"0123456789abcdef\"\n    for (let i = 0; i < h.length; ++i) {\n        const hh = h[i]\n        if (s.indexOf(hh + hh + hh) >= 0) return false\n    }\n    if (/f00d|dead|deaf|beef/.test(s)) return false\n    return true\n}\n\nfunction genServId() {\n    const n = cryptoRandomUint32(1)\n    if (n === undefined) return undefined\n    return (n[0] & 0xfff_ffff) | 0x1000_0000\n}\n\nfunction genFirmwareId() {\n    const n = cryptoRandomUint32(1)\n    if (n === undefined) return undefined\n    return (n[0] & 0xfff_ffff) | 0x3000_0000\n}\n\nexport function uniqueServiceId() {\n    let id = genServId()\n    while (\n        id !== undefined &&\n        (!looksRandom(id) || serviceSpecificationFromClassIdentifier(id))\n    ) {\n        id = genServId()\n    }\n    return id !== undefined && toFullHex([id])\n}\n\nexport function uniqueDeviceId() {\n    const n = cryptoRandomUint32(2)\n    return n !== undefined && toFullHex([n[0], n[1]])\n}\n\nexport function uniqueFirmwareId() {\n    let id = genFirmwareId()\n    while (\n        id !== undefined &&\n        (!looksRandom(id) || deviceSpecificationFromProductIdentifier(id))\n    ) {\n        id = genFirmwareId()\n    }\n    return id !== undefined && toFullHex([id])\n}\n\nconst useStyles = makeStyles(\n    createStyles({\n        root: {\n            minWidth: 275,\n            marginBottom: \"1rem\",\n        },\n        title: {\n            fontSize: 14,\n        },\n    })\n)\n\nexport default function RandomGenerator(props: {\n    device?: boolean\n    firmware?: boolean\n}) {\n    const { device, firmware } = props\n    const labelId = useId()\n    const fieldId = useId()\n    const classes = useStyles()\n    const [value, setValue] = useState(\n        device ? uniqueDeviceId() : uniqueServiceId()\n    )\n    const [copySuccess, setCopySuccess] = useState(false)\n\n    const handleRegenerate = () => {\n        const v = device\n            ? uniqueDeviceId()\n            : firmware\n            ? uniqueFirmwareId()\n            : uniqueServiceId()\n        setValue(v)\n        setCopySuccess(false)\n    }\n    const handleCopy = async () => {\n        try {\n            await navigator.clipboard.writeText(value)\n            setCopySuccess(true)\n        } catch (err) {\n            setCopySuccess(false)\n        }\n    }\n    const title = device\n        ? \"Random Device Identifier\"\n        : firmware\n        ? \"Random Product Identifier\"\n        : \"Random Service Identifier\"\n    return (\n        <NoSsr>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography\n                        id={labelId}\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        {title}\n                    </Typography>\n                    {value !== undefined && (\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <Input\n                                id={fieldId}\n                                value={value}\n                                readOnly={true}\n                                inputProps={{\n                                    \"aria-labelledby\": labelId,\n                                }}\n                            />\n                            {copySuccess && <CheckIcon />}\n                        </Typography>\n                    )}\n                    {value === undefined && (\n                        <Alert severity=\"error\">\n                            Oops, unable to generate a strong random number.\n                        </Alert>\n                    )}\n                </CardContent>\n                <CardActions>\n                    <Button\n                        aria-label=\"copy random number to clipboard\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        onClick={handleCopy}\n                    >\n                        Copy\n                    </Button>\n                    <Button\n                        aria-label=\"regenerate random number\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleRegenerate}\n                    >\n                        Regenerate\n                    </Button>\n                </CardActions>\n            </Card>\n        </NoSsr>\n    )\n}\n","import { DependencyList, useEffect } from \"react\"\n\ntype RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n    timeout: number\n}\ntype RequestIdleCallbackDeadline = {\n    readonly didTimeout: boolean\n    timeRemaining: () => number\n}\n\ndeclare global {\n    interface Window {\n        requestIdleCallback: (\n            callback: (deadline: RequestIdleCallbackDeadline) => void,\n            opts?: RequestIdleCallbackOptions\n        ) => RequestIdleCallbackHandle\n        cancelIdleCallback: (handle: RequestIdleCallbackHandle) => void\n    }\n}\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { fetchLatestRelease, fetchReleaseBinary } from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\nimport useMounted from \"../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { trackEvent } = useAnalytics()\n    const [throttled, setThrottled] = useState(false)\n    const mounted = useMounted()\n    const firmwares = db?.firmwares\n\n    const loadFirmwares = useCallback(async () => {\n        console.log(`firmware: load`)\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const missingSlugs = unique(\n            deviceSpecifications()\n                .filter(spec => !!spec?.productIdentifiers?.length) // needs some product identifiers\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substr(\"https://github.com/\".length))\n                .filter(slug => names.indexOf(slug) < 0)\n        )\n        for (const slug of missingSlugs) {\n            console.log(`db: fetch latest release of ${slug}`)\n            const { status, release } = await fetchLatestRelease(slug, {\n                ignoreThrottled: true,\n            })\n            trackEvent(\"github.fetch\", { status, slug })\n            if (status === 403) {\n                if (mounted()) setThrottled(true)\n            }\n            if (!release?.version) {\n                console.warn(`release not found`)\n                return\n            }\n            setThrottled(false)\n            console.log(`db: fetch binary release ${slug} ${release.version}`)\n            const fw = await fetchReleaseBinary(slug, release.version)\n            if (fw) {\n                console.log(\n                    `db: binary release ${slug} ${release.version} downloaded`\n                )\n                firmwares.set(slug, fw)\n            }\n            // throttle github queries\n            await bus.delay(5000)\n        }\n    }, [db, firmwares, throttled])\n    useIdleCallback(loadFirmwares, 5000, [db, firmwares])\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            console.log(`firmwares: change`)\n            const names = await fw?.list()\n            console.log(`import stored uf2`, names)\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const blob = await fw.get(name)\n                    const uf2Blobs = await parseFirmwareFile(blob, name)\n                    uf2Blobs?.forEach(uf2Blob => {\n                        uf2s.push(uf2Blob)\n                    })\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return { throttled }\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug?.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const blob = await firmwares?.get(repoSlug)\n            if (!blob) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(blob, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        await firmwares?.set(repoSlug, f)\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { useMemo } from \"react\"\nimport { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(`${ROOT}${path}`)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}`\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string, options?: GitHubApiOptions) {\n    const resp = useLatestReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestReleases(slug: string, options?: GitHubApiOptions) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m = /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n        v\n    )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { Box, BoxProps, Paper, useTheme } from \"@material-ui/core\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding, elevation, bgcolor, ...others } = props\n    const theme = useTheme()\n\n    return (\n        <Box {...others} bgcolor={bgcolor} mb={theme.spacing(0.25)}>\n            <Paper square elevation={elevation}>\n                {padding !== 0 && (\n                    <Box p={theme.spacing(padding || 0.25)}>{children}</Box>\n                )}\n                {padding === 0 && children}\n            </Paper>\n        </Box>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { alpha, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import { useState } from \"react\";\nimport useEffectAsync from \"./useEffectAsync\"\n\nfunction readBlobToCanvas(blob: Blob, width: number, height: number): Promise<HTMLCanvasElement> {\n    return new Promise((resolve, reject) => {\n        const url = URL.createObjectURL(blob);\n        const img = new Image();\n        img.onload = () => {\n            URL.revokeObjectURL(url);\n\n            const cvs = document.createElement(\"canvas\");\n            cvs.width = width;\n            cvs.height = height;\n            const ctx = cvs.getContext(\"2d\")\n\n            // compute center of image to be copied into canvas\n            const cw = cvs.width\n            const ch = cvs.height\n            const car = cw / ch\n            const iw = img.width\n            const ih = img.height\n            const iar = iw / ih\n            let sx = 0, sy = 0, sw = iw, sh = ih;\n            if (iar < car) { // image is wider, clip sides\n                const dw = iw - cw;\n                sx = dw >> 1\n                sw = iw - dw\n            } else { // klip top\n                const dh = ih - ch;\n                sy = dh >> 1\n                sh = ih - dh;\n            }\n            ctx.drawImage(img, sx, sy, sw, sh, 0, 0, cw, ch);\n\n            // done\n            resolve(cvs);\n        }\n        img.onerror = () => {\n            // error\n            URL.revokeObjectURL(url);\n            reject(undefined);\n        }\n        img.src = url;\n    })\n}\n\nexport default function useBlobCanvas(blob: Blob, width: number, height: number) {\n    const [canvas, setCanvas] = useState<HTMLCanvasElement>(undefined);\n    useEffectAsync(async () => {\n        if (!blob)\n            setCanvas(undefined);\n        else {\n            try {\n                const cvs = await readBlobToCanvas(blob, width, height);\n                setCanvas(cvs);\n            } catch (e) {\n                setCanvas(undefined)\n            }\n        }\n    }, [blob, width, height])\n    return canvas;\n}","import React, { lazy, useEffect, useMemo, useState } from \"react\"\nimport { Box, createStyles, makeStyles } from \"@material-ui/core\"\nimport { Skeleton } from \"@material-ui/lab\"\nimport useBlobCanvas from \"../useBlobCanvas\"\n\nimport Suspense from \"./Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            position: \"relative\",\n        },\n        img: {\n            margin: \"auto\",\n            display: \"block\",\n            width: \"100%\",\n        },\n        btn: {\n            position: \"absolute\",\n            borderRadius: \"6rem\",\n            left: \"calc(50% - 2rem)\",\n            top: \"calc(50% - 2rem)\",\n            background: theme.palette.background.paper,\n        },\n    })\n)\n\nexport default function ImportImageCanvas(props: {\n    width: number\n    height: number\n    onImageImported?: (cvs: HTMLCanvasElement) => void\n}) {\n    const { width, height, onImageImported } = props\n    const [imageBlob, setImageBlob] = useState<Blob>(undefined)\n    const canvas = useBlobCanvas(imageBlob, width, height)\n    const canvasUrl = useMemo(() => canvas?.toDataURL(\"image/png\"), [canvas])\n    const classes = useStyles()\n\n    const handleFilesUploaded = async (files: File[]) => {\n        const file = files[0]\n        setImageBlob(file)\n    }\n    // notify of new canvas\n    useEffect(() => canvas && onImageImported(canvas), [canvas])\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.img}>\n                {!canvasUrl && (\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={\"18rem\"} />\n                )}\n                {canvasUrl && (\n                    <img\n                        alt=\"preview\"\n                        src={canvasUrl}\n                        width={\"100%\"}\n                        height={\"100%\"}\n                    />\n                )}\n            </div>\n            <Box className={classes.btn}>\n                <Suspense>\n                    <ImportButton\n                        icon={true}\n                        text=\"Import 4:3 image\"\n                        onFilesUploaded={handleFilesUploaded}\n                        acceptedFiles={[\"image/jpeg\", \"image/png\"]}\n                    />\n                </Suspense>\n            </Box>\n        </div>\n    )\n}\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { lazy, useMemo, useState } from \"react\"\nimport { Grid, Link } from \"@material-ui/core\"\nimport useLocalStorage from \"../../components/hooks/useLocalStorage\"\nimport { clone, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    Box,\n    Chip,\n    Menu,\n    MenuItem,\n    TextField,\n    Typography,\n    Card,\n    CardActions,\n    Button,\n} from \"@material-ui/core\"\nimport { ChangeEvent } from \"react\"\nimport {\n    deviceSpecifications,\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../../components/ui/PaperBox\"\nimport { uniqueFirmwareId } from \"../../components/RandomGenerator\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@material-ui/icons/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport CreateIcon from \"@material-ui/icons/Create\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport { parseRepoUrl } from \"../../components/github\"\nimport {\n    DEVICE_IMAGE_HEIGHT,\n    DEVICE_IMAGE_WIDTH,\n    generateDeviceSpecificationId,\n    normalizeDeviceSpecification,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ImportImageCanvas from \"../../components/ui/ImageImportCanvas\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Autocomplete } from \"@material-ui/lab/\"\nimport { useFirmwareBlob } from \"../../components/firmware/useFirmwareBlobs\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { useId } from \"react-use-id-hook\"\nimport AddServiceIconButton from \"../../components/AddServiceIconButton\"\nimport useDevices from \"../../components/hooks/useDevices\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport { ControlReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Alert from \"../../components/ui/Alert\"\nimport { GithubPullRequestFiles } from \"../../components/buttons/GithubPullRequestButton\"\n\nconst GithubPullRequestButton = lazy(\n    () => import(\"../../components/buttons/GithubPullRequestButton\")\n)\n\nfunction CompanySelect(props: {\n    error?: string\n    value?: string\n    onValueChange?: (name: string) => void\n}) {\n    const { onValueChange, value, error } = props\n    const [company, setCompany] = useState(value)\n    const companies = useMemo(\n        () => unique(deviceSpecifications().map(dev => dev.company)),\n        []\n    )\n    const companyId = useId()\n    const helperText =\n        \"Name of the company manufacturing this device. The company name will be used to generate the module identifier.\"\n\n    const handleChange = (ev: unknown, newValue: string) => {\n        setCompany(newValue)\n        onValueChange?.(newValue)\n    }\n    const renderInputs = params => (\n        <TextField\n            {...params}\n            error={!!error}\n            label=\"Company\"\n            helperText={error || helperText}\n            variant=\"outlined\"\n        />\n    )\n\n    return (\n        <Autocomplete\n            id={companyId}\n            freeSolo={true}\n            fullWidth={true}\n            includeInputInList\n            autoComplete\n            options={companies}\n            renderInput={renderInputs}\n            inputValue={company}\n            aria-label={helperText}\n            onInputChange={handleChange}\n        />\n    )\n}\n\nexport default function DeviceRegistration() {\n    const [device, setDevice] = useLocalStorage<jdspec.DeviceSpec>(\n        \"jacdac:devicedesigner;2\",\n        {\n            id: \"my-device\",\n            name: \"My device\",\n            services: [],\n            productIdentifiers: [],\n            repo: \"\",\n        } as jdspec.DeviceSpec\n    )\n    const gridBreakpoints = useGridBreakpoints()\n    const devices = useDevices({\n        announced: true,\n        physical: true,\n        ignoreInfrastructure: true,\n        productIdentifier: true,\n    })\n    const updateDevice = () => {\n        const dev = clone(device)\n        dev.id = generateDeviceSpecificationId(dev)\n        setDevice(dev)\n    }\n    const [firmwaresAnchorEl, setFirmwaresAnchorEl] =\n        React.useState<null | HTMLElement>(null)\n    const [imageDataURI, setImageDataURI] = useState<string>(undefined)\n    const nameId = useId()\n    const firmwareMenuId = useId()\n    const repoId = useId()\n    const identifierId = useId()\n    const descriptionId = useId()\n    const homepageId = useId()\n    const hardwareVersionId = useId()\n    const hardwareDesignId = useId()\n    const handleServiceAdd = (srv: jdspec.ServiceSpec) => {\n        console.log(`add`, srv.classIdentifier)\n        device.services.push(srv.classIdentifier)\n        updateDevice()\n    }\n    const companyRepos = useMemo(\n        () =>\n            unique(\n                deviceSpecifications()\n                    .filter(d => d.company === device.company)\n                    .map(d => d.repo)\n                    .filter(repo => !!repo)\n            ),\n        [device?.company]\n    )\n    const { firmwareBlobs } = useFirmwareBlob(device.repo)\n    const variant = \"outlined\"\n    const companyError = !device.company ? \"select a company\" : \"\"\n    const nameError = device.name?.length > 32 ? \"name too long\" : undefined\n    const parsedRepo = parseRepoUrl(device.repo)\n    const githubError =\n        device.repo && !parsedRepo ? \"invalid GitHub repository\" : \"\"\n    const linkError =\n        !device.link || /^https:\\/\\//.test(device.link)\n            ? \"\"\n            : \"Must be https://...\"\n    const idError = !device.id\n        ? \"missing identifier\"\n        : deviceSpecifications({\n              includeDeprecated: true,\n              includeExperimental: true,\n          }).find(dev => dev.id == device.id)\n        ? \"identifer already used\"\n        : \"\"\n    const imageError = !imageDataURI ? \"missing image\" : \"\"\n    const versionError =\n        device?.version &&\n        !/^(v\\d+\\.\\d+(\\.\\d+(\\.\\d+)?)?\\w?)?$/.test(device?.version)\n            ? \"Preferred format is vN.N\"\n            : \"\"\n    const ok =\n        !nameError && !linkError && !idError && !imageError && !companyError\n\n    const route = device.id?.split(\"-\").join(\"/\")\n    const modulePath = ok && `devices/${route}.json`\n    const imagePath = ok && `devices/${route}.jpg`\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.name = ev.target.value\n        updateDevice()\n    }\n    const handleRepoChange = (ev: unknown, newValue: string) => {\n        console.log(`new repo`, { newValue })\n        device.repo = newValue\n        updateDevice()\n    }\n    const handleLinkChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.link = ev.target.value\n        updateDevice()\n    }\n    const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.description = ev.target.value\n        updateDevice()\n    }\n    const handleDeleteService = (i: number) => () => {\n        device.services.splice(i, 1)\n        updateDevice()\n    }\n    const handleDeleteFirmware = (i: number) => () => {\n        device.productIdentifiers.splice(i, 1)\n        updateDevice()\n    }\n    const handleHardwareDesign = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.designIdentifier = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleVersion = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.version = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleFirmwareAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setFirmwaresAnchorEl(event.currentTarget)\n        // device.firmwares.push(parseInt(uniqueFirmwareId(), 16))\n        updateDevice()\n    }\n    const handleProductIdentifierAddRandomClick = () => {\n        device.productIdentifiers.push(parseInt(uniqueFirmwareId(), 16))\n        updateDevice()\n    }\n    const handleFirmwareAddClose = (blob: FirmwareBlob) => () => {\n        setFirmwaresAnchorEl(null)\n        const id = blob?.productIdentifier\n        if (id !== undefined) {\n            device.productIdentifiers.push(id)\n            device.name = blob.name\n            updateDevice()\n        }\n    }\n    const handleImageImported = (cvs: HTMLCanvasElement) => {\n        const url = cvs.toDataURL(\"image/jpeg\", 100)\n        setImageDataURI(url)\n    }\n    const handleCompanyChanged = (value: string) => {\n        device.company = value\n        updateDevice()\n    }\n    const renderRepoInput = params => (\n        <TextField\n            {...params}\n            error={!!githubError}\n            type=\"url\"\n            label=\"Firmware repository\"\n            helperText={\n                githubError ||\n                \"GitHub Repository hosting the firmware binaries.\"\n            }\n            variant=\"outlined\"\n        />\n    )\n    const handleImportDevice = (dev: JDDevice) => async () => {\n        const controlService = dev.service(0)\n        const descrReg = controlService.register(ControlReg.DeviceDescription)\n        await descrReg.refresh(true)\n\n        const fw = await dev.resolveProductIdentifier()\n        if (fw) device.productIdentifiers = [fw]\n        device.services = dev\n            .services()\n            .filter(srv => !isInfrastructure(srv.specification))\n            .map(srv => srv.serviceClass)\n        device.description = descrReg.stringValue\n        updateDevice()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const files = useMemo<GithubPullRequestFiles>(\n        () =>\n            modulePath && {\n                [modulePath]: JSON.stringify(\n                    normalizeDeviceSpecification(device),\n                    null,\n                    2\n                ),\n                [imagePath]: {\n                    content: imageDataURI?.slice(imageDataURI?.indexOf(\",\")),\n                    encoding: \"base64\",\n                },\n            },\n        [modulePath, imagePath, imageDataURI, JSON.stringify(device)]\n    )\n\n    return (\n        <>\n            <h1>Device Registration</h1>\n            <p>\n                Compose a device from various services, prepare the metadata and\n                register it to the <Link href=\"/devices/\">Devices catalog</Link>\n                .\n            </p>\n            <Grid container direction=\"row\" spacing={2}>\n                {devices.map(dev => (\n                    <Grid item key={dev.id} {...gridBreakpoints}>\n                        <Card>\n                            <DeviceCardHeader device={dev} />\n                            <CardActions>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleImportDevice(dev)}\n                                >\n                                    Import\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <TextField\n                        id={nameId}\n                        required\n                        error={!!nameError}\n                        helperText={nameError}\n                        fullWidth={true}\n                        label=\"Name\"\n                        placeholder=\"My module\"\n                        value={device.name || \"\"}\n                        onChange={handleNameChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Autocomplete\n                        id={repoId}\n                        freeSolo={true}\n                        autoComplete\n                        placeholder=\"https://github.com/...\"\n                        inputValue={device.repo || \"\"}\n                        onInputChange={handleRepoChange}\n                        options={companyRepos}\n                        renderInput={renderRepoInput}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <CompanySelect\n                        value={device?.company}\n                        error={companyError}\n                        onValueChange={handleCompanyChanged}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareDesignId}\n                        fullWidth={true}\n                        helperText=\"A unique identifier for this hardware design.\"\n                        label=\"Hardware design\"\n                        value={device?.designIdentifier}\n                        onChange={handleHardwareDesign}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareVersionId}\n                        fullWidth={true}\n                        error={!!versionError}\n                        helperText={\n                            versionError ||\n                            \"Revision identifier for this hardware design using semver format (v1.0, v1.1, ...)\"\n                        }\n                        label=\"Version\"\n                        value={device?.version}\n                        onChange={handleVersion}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography>Product Identifiers</Typography>\n                        {device.productIdentifiers?.map((id, i) => {\n                            const blob = firmwareBlobs?.find(\n                                b => b.productIdentifier == id\n                            )\n                            return (\n                                <Box\n                                    component=\"span\"\n                                    ml={0.5}\n                                    mb={0.5}\n                                    key={id}\n                                >\n                                    <Chip\n                                        label={\n                                            blob\n                                                ? `${\n                                                      blob.name\n                                                  } (0x${id.toString(16)})`\n                                                : `0x${id.toString(16)}`\n                                        }\n                                        onDelete={handleDeleteFirmware(i)}\n                                    />\n                                </Box>\n                            )\n                        })}\n                        <IconButtonWithTooltip\n                            title=\"Add random product identifier\"\n                            onClick={handleProductIdentifierAddRandomClick}\n                        >\n                            <CreateIcon />\n                        </IconButtonWithTooltip>\n                        {firmwareBlobs && (\n                            <IconButtonWithTooltip\n                                title=\"Add product identifier from repository\"\n                                aria-controls={firmwareMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleFirmwareAddClick}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <Menu\n                            id={firmwareMenuId}\n                            anchorEl={firmwaresAnchorEl}\n                            keepMounted\n                            open={Boolean(firmwaresAnchorEl)}\n                            onClose={handleFirmwareAddClose(undefined)}\n                        >\n                            {firmwareBlobs?.map(blob => (\n                                <MenuItem\n                                    key={blob.productIdentifier}\n                                    value={blob.productIdentifier.toString(16)}\n                                    onClick={handleFirmwareAddClose(blob)}\n                                >\n                                    {blob.name}\n                                    <Typography\n                                        variant=\"caption\"\n                                        component=\"span\"\n                                    >\n                                        {blob.version}\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        <Typography variant=\"caption\" component=\"div\">\n                            Product identifiers uniquely identify your hardware\n                            on the Jacdac bus. Each revision of your hardware\n                            may have a different identifier.\n                        </Typography>\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography color=\"inherit\">Services</Typography>\n                        {device.services?.map((id, i) => (\n                            <Box component=\"span\" m={0.5} key={id}>\n                                <Chip\n                                    label={\n                                        serviceSpecificationFromClassIdentifier(\n                                            id\n                                        )?.name || id\n                                    }\n                                    onDelete={handleDeleteService(i)}\n                                />\n                            </Box>\n                        ))}\n                        <AddServiceIconButton onAdd={handleServiceAdd} />\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={identifierId}\n                        disabled\n                        error={!!idError}\n                        fullWidth={true}\n                        label=\"Identifier\"\n                        helperText={\n                            \"This generated identifer is a URL friendly string created from your company and product name.\"\n                        }\n                        variant={variant}\n                        value={device.id || \"\"}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={descriptionId}\n                        fullWidth={true}\n                        required\n                        label=\"Description\"\n                        multiline={true}\n                        rows={4}\n                        value={device.description || \"\"}\n                        onChange={handleDescriptionChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={homepageId}\n                        label=\"Home page url\"\n                        error={!!linkError}\n                        helperText={linkError}\n                        fullWidth={true}\n                        placeholder=\"https://...\"\n                        value={device.link || \"\"}\n                        onChange={handleLinkChange}\n                        variant={variant}\n                        type=\"url\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox>\n                        <Typography>Catalog image</Typography>\n                        <ImportImageCanvas\n                            width={DEVICE_IMAGE_WIDTH}\n                            height={DEVICE_IMAGE_HEIGHT}\n                            onImageImported={handleImageImported}\n                        />\n                        <Typography variant=\"caption\" component=\"div\">\n                            {`Import a ${DEVICE_IMAGE_WIDTH}x${DEVICE_IMAGE_HEIGHT} image of the device.`}\n                        </Typography>\n                        {imageError && (\n                            <Alert severity=\"error\">{imageError}</Alert>\n                        )}\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            label={\"register device\"}\n                            title={`Device: ${device.name}`}\n                            head={`devices/${device.id}`}\n                            description={`This pull request registers a new device for Jacdac.`}\n                            files={files}\n                        />\n                    </Suspense>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"names":["React","useMemo","Menu","MenuItem","Typography","isInfrastructure","serviceSpecificationFromClassIdentifier","serviceSpecifications","AddIcon","IconButtonWithTooltip","useId","AddServiceIconButton","props","error","onAdd","children","serviceFilter","servicesAnchorEl","setServicesAnchorEl","useState","servicesMenuId","services","filter","srv","handleServiceAddClick","event","currentTarget","handleServiceAddClose","id","undefined","Boolean","map","classIdentifier","toString","name","deviceSpecificationFromProductIdentifier","Card","makeStyles","CardContent","CardActions","createStyles","Input","CheckIcon","Alert","Button","NoSsr","cryptoRandomUint32","toFullHex","looksRandom","n","s","h","i","length","hh","indexOf","test","genServId","genFirmwareId","uniqueServiceId","uniqueDeviceId","uniqueFirmwareId","useStyles","root","minWidth","marginBottom","title","fontSize","RandomGenerator","device","firmware","labelId","fieldId","classes","value","setValue","copySuccess","setCopySuccess","handleRegenerate","v","handleCopy","navigator","clipboard","writeText","err","useEffect","useIdleCallback","cb","timeout","deps","window","requestIdleCallback","cancelIdleCallback","setTimeout","clearTimeout","useCallback","useContext","JacdacContext","parseFirmwareFile","DbContext","useChangeAsync","deviceSpecifications","unique","fetchLatestRelease","fetchReleaseBinary","useMounted","useAnalytics","useFirmwareBlobs","bus","db","trackEvent","throttled","setThrottled","mounted","firmwares","loadFirmwares","console","log","names","list","missingSlugs","spec","productIdentifiers","repo","substr","slug","status","release","ignoreThrottled","version","warn","fw","set","delay","uf2s","blob","get","uf2Blobs","forEach","uf2Blob","push","firmwareBlobs","useFirmwareBlob","repoSlug","replace","blobs","setFirmwareFile","tag","f","useEffectAsync","useFetch","url","options","response","setResponse","setError","setStatus","loading","setLoading","res","fetch","json","semverCmp","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","exec","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","cleaned","parts","split","repoPath","folder","slice","join","parseRepoUrl","m","owner","uri","resp","releases","Error","downloadUrl","req","headers","Accept","fetchText","path","mimeType","src","text","useFetchApi","useFetchJSON","useRepository","useLatestRelease","useLatestReleases","cmp","a","b","d","major","minor","patch","pre","aa","bb","parseInt","strcmp","tryParse","Number","MAX_SAFE_INTEGER","build","Box","Paper","useTheme","PaperBox","padding","elevation","bgcolor","others","theme","spacing","readBlobToCanvas","width","height","Promise","resolve","reject","URL","createObjectURL","img","Image","onload","revokeObjectURL","cvs","document","createElement","ctx","getContext","cw","ch","car","iw","ih","iar","sx","sy","sw","sh","dw","dh","drawImage","onerror","useBlobCanvas","canvas","setCanvas","e","lazy","Skeleton","Suspense","ImportButton","position","margin","display","btn","borderRadius","left","top","background","palette","paper","ImportImageCanvas","onImageImported","imageBlob","setImageBlob","canvasUrl","toDataURL","handleFilesUploaded","files","file","Grid","Link","useLocalStorage","clone","Chip","TextField","CreateIcon","DEVICE_IMAGE_HEIGHT","DEVICE_IMAGE_WIDTH","generateDeviceSpecificationId","normalizeDeviceSpecification","Autocomplete","useDevices","DeviceCardHeader","ControlReg","useGridBreakpoints","GithubPullRequestButton","CompanySelect","onValueChange","company","setCompany","companies","dev","companyId","helperText","handleChange","ev","newValue","renderInputs","params","DeviceRegistration","setDevice","gridBreakpoints","devices","announced","physical","ignoreInfrastructure","productIdentifier","updateDevice","firmwaresAnchorEl","setFirmwaresAnchorEl","imageDataURI","setImageDataURI","nameId","firmwareMenuId","repoId","identifierId","descriptionId","homepageId","hardwareVersionId","hardwareDesignId","handleServiceAdd","companyRepos","variant","companyError","nameError","parsedRepo","githubError","linkError","link","idError","includeDeprecated","includeExperimental","find","imageError","versionError","ok","route","modulePath","imagePath","handleNameChange","target","handleRepoChange","handleLinkChange","handleDescriptionChange","description","handleDeleteService","splice","handleDeleteFirmware","handleHardwareDesign","designIdentifier","trim","handleVersion","handleFirmwareAddClick","handleProductIdentifierAddRandomClick","handleFirmwareAddClose","handleImageImported","handleCompanyChanged","renderRepoInput","handleImportDevice","controlService","service","descrReg","register","DeviceDescription","refresh","resolveProductIdentifier","specification","serviceClass","stringValue","JSON","stringify","encoding"],"sourceRoot":""}