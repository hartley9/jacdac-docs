{"version":3,"file":"ab6b71bda2c06e0c84c81249075604781c30253a-c5253b0f3d4df69e8ad3.js","mappings":"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;AAC7B;AACA,+BAA+B,yCAAsB;AACrD,+EAAe,wEAAwB;;;;ACL6D;AAC1C;AAC1D;AAC+B;AACuC;AACL;AACb;AACb;AACuC;AAC9B;;AAEhD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,wBAAwB,iCAAc,QAAQ,gCAAgC;AAC9E,SAAS,8BAAQ,GAAG;AACpB;;AAEA,4BAA4B,0BAAM,CAAC,yBAAU;AAC7C,6BAA6B,wCAAqB;AAClD;AACA;AACA;AACA,CAAC,IAAI;AACL,qCAAqC,gBAAgB;AACrD,cAAc,gCAAa;AAC3B;AACA;AACA,GAAG;;AAEH,mBAAmB,+CAA6B;;AAEhD;AACA,sBAAsB,mBAAI,wBAAwB,8BAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,wEAAe,iBAAiB;;;;;;;AChDhC;AACA,EAAE,KAAuD,0BAA0B,CAA8H;AACjN,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;;AAEX,sDAAsD,OAAO;AAC7D;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,SAAS;AACT;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,SAAS;AACT,+FAA+F,OAAO;AACtG;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,SAAS;AACT,oCAAoC;AACpC,SAAS;AACT;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;ACj2CY;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,wCAAwC,mBAAO,CAAC,KAAY;;AAE5D,mDAAmD,mBAAO,CAAC,KAAuB;;AAElF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,kBAAe;;;;;;;;AC1FF;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf;AACA;AACA;;AAEA;AACA,wEAAwE,aAAa;AACrF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACjCa;;AAEb,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,sCAAsD;AACtD;AACA;AACA;AACA;AACA,CAAC,EAAC;AACF,6BAAmD;AACnD;AACA;AACA;AACA;AACA,CAAC,CAAC;;AAEF,kDAAkD,mBAAO,CAAC,KAAuB;;AAEjF,+CAA+C,mBAAO,CAAC,IAAoB;;AAE3E;AACA;AACA;AACA;AACA;;;;;;;;AC1Ba;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,oCAAoC,mBAAO,CAAC,KAAO;;AAEnD,sCAAsC,mBAAO,CAAC,KAAS;;AAEvD,wCAAwC,mBAAO,CAAC,KAAY;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,+BAA+B;AAC7E;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;;;AAGA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG,wBAAwB;;;AAG3B;AACA,0FAA0F,wCAAwC;AAClI;AACA,KAAK;;AAEL;AACA,gCAAgC;;AAEhC,qCAAqC;;AAErC;AACA;AACA;;AAEA,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,UAAU;;;AAGb;AACA;AACA;AACA;AACA,GAAG,+DAA+D;;;AAGlE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,wCAAwC;;;AAG3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,qBAAqB;;;AAGxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAe;;;;;;;;;;;;AC7RoC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,yCAAyC;AACzC;AACA,WAAW,QAAQ,WAAW;AAC9B;AACA,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,aAAa;AACjC;AACA;AACA,2DAA2D,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;;AAEA,qBAAqB,6CAAM;AAC3B,uBAAuB,6CAAM;AAC7B,gBAAgB,6CAAM;AACtB,iBAAiB,6CAAM;AACvB,iBAAiB,6CAAM;AACvB,eAAe,6CAAM;AACrB,gBAAgB,6CAAM;AACtB,gBAAgB,6CAAM;AACtB,0BAA0B;;AAE1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,8CAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA,QAAQ;;;AAGR;AACA;A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O;AAC5gE;AACA;;AC/KA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACwC;;AAExC,oDAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;;;AAGA,IAAI,2BAAsB;AAC1B;AACA;AACA,IAAI,0BAAqB;AACzB;AACA;;AAEA,iBAAiB,qDAAgD;;AAEjE,qDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;ACpDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACwC;AACxC,8BAA4B;AAC5B;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,oCAAkC;AACtD;AACA,iEAAiE,mCAAiC;AAClG,iDAAiD,qCAAmC;AACpF;AACA;AACA,oBAAoB,0CAAwC;AAC5D,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;AACxB,YAAY;AACZ;AACA;AACA,oBAAoB,oCAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,UAAU;AACvB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0EAA0E,mCAAiC;AAC3G,0DAA0D,qCAAmC;;AAE7F,sBAAsB,yBAAyB;AAC/C,sFAAsF,uCAAqC;AAC3H,sEAAsE,qCAAmC;AACzG;AACA;;AAEA;;AAEA;AACA,oDAAoD,qCAAmC;AACvF;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,cAAc,SAAS;AACvB;AACA;AACA,oBAAoB,2BAA2B;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6EAA6E,uCAAqC;AAClH,6DAA6D,qCAAmC;AAChG;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA,4BAA4B,2BAAsB;AAClD,oDAAoD,qCAAmC;AACvF;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB,oBAAoB,+BAA+B;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;;AAExD;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,mCAAiC;AAC/D;AACA;AACA;AACA;;ACpMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACwC;AACxC,qCAAmC;AACnC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,kCAAgC;AACpD;AACA,8CAA8C,2CAAyC;AACvF;AACA;AACA,oBAAoB,kCAAgC;AACpD,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;AACxB,YAAY;AACZ;AACA;AACA,oBAAoB,oCAA+B;AACnD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,UAAU;AACvB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,2CAAyC;AAC7E;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,qBAAqB;AAClC;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA,GAAG;;AAEH;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA,kEAAkE;AAClE;;AAEA;AACA,sCAAsC,2CAAyC;AAC/E;AACA;AACA;AACA;;ACvJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACwC;AACxC,uCAAqC;AACrC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAwC;AAC5D;AACA,8CAA8C,6CAA2C;AACzF;AACA;AACA,oBAAoB,0CAAwC;AAC5D,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;AACxB,YAAY;AACZ;AACA;AACA,oBAAoB,oCAA+B;AACnD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,UAAU;AACvB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,6CAA2C;AAC/E;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,qBAAqB;AAClC;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA,GAAG;;AAEH;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA,kEAAkE;AAClE;;AAEA;AACA,sCAAsC,6CAA2C;AACjF;AACA;AACA;AACA;;ACvJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACwC;AACS;AACxB;AACO;AACE;AAC3B;AACP;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACw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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/AddCircleOutline.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Autorenew.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Done.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/FileCopy.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/OpenInBrowser.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/RemoveCircleOutline.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/ReportProblem.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/SaveAlt.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Visibility.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogActions/dialogActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogActions/DialogActions.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogContentText/DialogContentText.js","webpack://jacdac-docs/./node_modules/bowser/es5.js","webpack://jacdac-docs/./node_modules/react-blockly/dist/BlocklyWorkspace.js","webpack://jacdac-docs/./node_modules/react-blockly/dist/debounce.js","webpack://jacdac-docs/./node_modules/react-blockly/dist/index.js","webpack://jacdac-docs/./node_modules/react-blockly/dist/useBlocklyWorkspace.js","webpack://jacdac-docs/./node_modules/use-debounce/esm/useDebouncedCallback.js","webpack://jacdac-docs/./jacdac-ts/src/vm/ir.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/symutils.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/compile.ts","webpack://jacdac-docs/./jacdac-ts/src/vm/events.ts","webpack://jacdac-docs/./jacdac-ts/src/jdom/rolemanager.ts","webpack://jacdac-docs/./src/components/hooks/useRoleManager.ts","webpack://jacdac-docs/./src/components/blockly/blockwarning.ts","webpack://jacdac-docs/./src/components/blockly/dsl/datasolver.ts","webpack://jacdac-docs/./src/components/blockly/useBlocklyEvents.ts","webpack://jacdac-docs/./node_modules/@blockly/field-slider/src/field_slider.js","webpack://jacdac-docs/./node_modules/@blockly/field-slider/src/index.js","webpack://jacdac-docs/./node_modules/@blockly/block-dynamic-connection/src/insertion_marker_manager_monkey_patch.js","webpack://jacdac-docs/./node_modules/@blockly/block-dynamic-connection/src/dynamic_if.js","webpack://jacdac-docs/./node_modules/@blockly/block-dynamic-connection/src/dynamic_text_join.js","webpack://jacdac-docs/./node_modules/@blockly/block-dynamic-connection/src/dynamic_list_create.js","webpack://jacdac-docs/./node_modules/@blockly/block-dynamic-connection/src/index.js","webpack://jacdac-docs/./node_modules/@blockly/disable-top-blocks/src/index.js","webpack://jacdac-docs/./src/components/blockly/useBlocklyPlugins.ts","webpack://jacdac-docs/./src/components/hooks/useAsyncMemo.ts","webpack://jacdac-docs/./src/components/blockly/useToolbox.ts","webpack://jacdac-docs/./src/components/blockly/BlockContext.tsx","webpack://jacdac-docs/./src/components/blockly/BlockDiagnostics.tsx","webpack://jacdac-docs/./node_modules/@blockly/theme-modern/src/index.js","webpack://jacdac-docs/./node_modules/@blockly/theme-dark/src/index.js","webpack://jacdac-docs/./src/components/blockly/BlocklyModalDialogs.tsx","webpack://jacdac-docs/./src/components/blockly/BlockMinimap.tsx","webpack://jacdac-docs/./src/components/ui/BrowserCompatibilityAlert.tsx","webpack://jacdac-docs/./src/components/blockly/BlockEditor.tsx","webpack://jacdac-docs/./src/components/blockly/dsl/chartdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/dsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/fieldsdsl.ts","webpack://jacdac-docs/./src/components/blockly/dsl/servicesbase.ts","webpack://jacdac-docs/./src/components/blockly/dsl/workers/csv.proxy.ts","webpack://jacdac-docs/./src/components/blockly/dsl/workspacevisitor.ts","webpack://jacdac-docs/./src/components/blockly/fields/BuiltinDataSetField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/DataPreviewField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/DataTableField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/DataTableWidget.tsx","webpack://jacdac-docs/./src/components/blockly/fields/FileOpenField.ts","webpack://jacdac-docs/./src/components/blockly/fields/FileSaveField.ts","webpack://jacdac-docs/./src/components/blockly/fields/GaugeWidgetField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/IFrameDataChooserField.ts","webpack://jacdac-docs/./src/components/blockly/fields/JDomTreeField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/JSONSettingsField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/KeyboardKeyField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/LEDColorField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/ReactImageField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/LEDMatrixField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/LogViewField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/NoServiceAlert.tsx","webpack://jacdac-docs/./src/components/blockly/fields/NoteField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/PointerBoundary.tsx","webpack://jacdac-docs/./src/components/blockly/fields/ReactField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/ReactFieldBase.ts","webpack://jacdac-docs/./src/components/blockly/fields/ReactInlineField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/SliderField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/ServoAngleField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/TwinField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/UseModelField.ts","webpack://jacdac-docs/./src/components/blockly/fields/ValueContext.tsx","webpack://jacdac-docs/./src/components/blockly/fields/VariablesFields.tsx","webpack://jacdac-docs/./src/components/blockly/fields/WatchValueField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/BarField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/BoxPlotField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/HeatMapField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/HistogramField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/LinePlotField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/ScatterPlotField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/VegaChartField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/chart/VegaLiteWidget.tsx","webpack://jacdac-docs/./src/components/blockly/fields/fields.ts","webpack://jacdac-docs/./src/components/blockly/fields/mb/ConvLayerBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/DataSetBlockButton.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/DataSetBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/DenseLayerBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/DropoutLayerBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/ExpandModelBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/FlattenLayerBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/NeuralNetworkBlockButtons.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/NeuralNetworkBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/PoolingLayerBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/RecordingBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/fields/mb/TrainedModelBlockField.tsx","webpack://jacdac-docs/./src/components/blockly/jsongenerator.ts","webpack://jacdac-docs/./node_modules/use-debounce/esm/useThrottledCallback.js","webpack://jacdac-docs/./src/jacdac/useChangeThrottled.ts","webpack://jacdac-docs/./src/components/blockly/useDragDebounce.ts","webpack://jacdac-docs/./src/components/blockly/useBlockData.ts","webpack://jacdac-docs/./src/components/fs/FileSystemChip.tsx","webpack://jacdac-docs/./src/components/fs/FileNewFileChip.tsx","webpack://jacdac-docs/./src/components/fs/FileSystemNodeChip.tsx","webpack://jacdac-docs/./src/components/fs/FileTabs.tsx","webpack://jacdac-docs/./src/components/hooks/useArrowKeys.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigation.ts","webpack://jacdac-docs/./src/components/hooks/useKeyboardNavigationProps.ts","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/model-editor/modelblockdsl.ts","webpack://jacdac-docs/./src/components/ui/AppTheme.tsx","webpack://jacdac-docs/./src/components/ui/CopyButton.tsx","webpack://jacdac-docs/./src/components/vm/VMgenerator.ts","webpack://jacdac-docs/./src/components/widgets/svg.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4 6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6-4 4h3v6h2v-6h3l-4-4z\"\n}), 'OpenInBrowser');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'RemoveCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'ReportProblem');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67 2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nvar dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disableSpacing\n  } = ownerState;\n  var slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nvar DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(_ref => {\n  var {\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  }, !ownerState.disableSpacing && {\n    '& > :not(:first-of-type)': {\n      marginLeft: 8\n    }\n  });\n});\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  var {\n    className,\n    disableSpacing = false\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nvar dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes\n  } = ownerState;\n  var slots = {\n    root: ['root']\n  };\n  var composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nvar DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  var ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default DialogContentText;","!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.bowser = t() : e.bowser = t();\n}(this, function () {\n  return function (e) {\n    var t = {};\n\n    function r(n) {\n      if (t[n]) return t[n].exports;\n      var i = t[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n    }\n\n    return r.m = e, r.c = t, r.d = function (e, t, n) {\n      r.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: n\n      });\n    }, r.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, r.t = function (e, t) {\n      if (1 & t && (e = r(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var n = Object.create(null);\n      if (r.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var i in e) {\n        r.d(n, i, function (t) {\n          return e[t];\n        }.bind(null, i));\n      }\n      return n;\n    }, r.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return r.d(t, \"a\", t), t;\n    }, r.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, r.p = \"\", r(r.s = 90);\n  }({\n    17: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n\n      var n = r(18),\n          i = function () {\n        function e() {}\n\n        return e.getFirstMatch = function (e, t) {\n          var r = t.match(e);\n          return r && r.length > 0 && r[1] || \"\";\n        }, e.getSecondMatch = function (e, t) {\n          var r = t.match(e);\n          return r && r.length > 1 && r[2] || \"\";\n        }, e.matchAndReturnConst = function (e, t, r) {\n          if (e.test(t)) return r;\n        }, e.getWindowsVersionName = function (e) {\n          switch (e) {\n            case \"NT\":\n              return \"NT\";\n\n            case \"XP\":\n              return \"XP\";\n\n            case \"NT 5.0\":\n              return \"2000\";\n\n            case \"NT 5.1\":\n              return \"XP\";\n\n            case \"NT 5.2\":\n              return \"2003\";\n\n            case \"NT 6.0\":\n              return \"Vista\";\n\n            case \"NT 6.1\":\n              return \"7\";\n\n            case \"NT 6.2\":\n              return \"8\";\n\n            case \"NT 6.3\":\n              return \"8.1\";\n\n            case \"NT 10.0\":\n              return \"10\";\n\n            default:\n              return;\n          }\n        }, e.getMacOSVersionName = function (e) {\n          var t = e.split(\".\").splice(0, 2).map(function (e) {\n            return parseInt(e, 10) || 0;\n          });\n          if (t.push(0), 10 === t[0]) switch (t[1]) {\n            case 5:\n              return \"Leopard\";\n\n            case 6:\n              return \"Snow Leopard\";\n\n            case 7:\n              return \"Lion\";\n\n            case 8:\n              return \"Mountain Lion\";\n\n            case 9:\n              return \"Mavericks\";\n\n            case 10:\n              return \"Yosemite\";\n\n            case 11:\n              return \"El Capitan\";\n\n            case 12:\n              return \"Sierra\";\n\n            case 13:\n              return \"High Sierra\";\n\n            case 14:\n              return \"Mojave\";\n\n            case 15:\n              return \"Catalina\";\n\n            default:\n              return;\n          }\n        }, e.getAndroidVersionName = function (e) {\n          var t = e.split(\".\").splice(0, 2).map(function (e) {\n            return parseInt(e, 10) || 0;\n          });\n          if (t.push(0), !(1 === t[0] && t[1] < 5)) return 1 === t[0] && t[1] < 6 ? \"Cupcake\" : 1 === t[0] && t[1] >= 6 ? \"Donut\" : 2 === t[0] && t[1] < 2 ? \"Eclair\" : 2 === t[0] && 2 === t[1] ? \"Froyo\" : 2 === t[0] && t[1] > 2 ? \"Gingerbread\" : 3 === t[0] ? \"Honeycomb\" : 4 === t[0] && t[1] < 1 ? \"Ice Cream Sandwich\" : 4 === t[0] && t[1] < 4 ? \"Jelly Bean\" : 4 === t[0] && t[1] >= 4 ? \"KitKat\" : 5 === t[0] ? \"Lollipop\" : 6 === t[0] ? \"Marshmallow\" : 7 === t[0] ? \"Nougat\" : 8 === t[0] ? \"Oreo\" : 9 === t[0] ? \"Pie\" : void 0;\n        }, e.getVersionPrecision = function (e) {\n          return e.split(\".\").length;\n        }, e.compareVersions = function (t, r, n) {\n          void 0 === n && (n = !1);\n          var i = e.getVersionPrecision(t),\n              s = e.getVersionPrecision(r),\n              a = Math.max(i, s),\n              o = 0,\n              u = e.map([t, r], function (t) {\n            var r = a - e.getVersionPrecision(t),\n                n = t + new Array(r + 1).join(\".0\");\n            return e.map(n.split(\".\"), function (e) {\n              return new Array(20 - e.length).join(\"0\") + e;\n            }).reverse();\n          });\n\n          for (n && (o = a - Math.min(i, s)), a -= 1; a >= o;) {\n            if (u[0][a] > u[1][a]) return 1;\n\n            if (u[0][a] === u[1][a]) {\n              if (a === o) return 0;\n              a -= 1;\n            } else if (u[0][a] < u[1][a]) return -1;\n          }\n        }, e.map = function (e, t) {\n          var r,\n              n = [];\n          if (Array.prototype.map) return Array.prototype.map.call(e, t);\n\n          for (r = 0; r < e.length; r += 1) {\n            n.push(t(e[r]));\n          }\n\n          return n;\n        }, e.find = function (e, t) {\n          var r, n;\n          if (Array.prototype.find) return Array.prototype.find.call(e, t);\n\n          for (r = 0, n = e.length; r < n; r += 1) {\n            var i = e[r];\n            if (t(i, r)) return i;\n          }\n        }, e.assign = function (e) {\n          for (var t, r, n = e, i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++) {\n            s[a - 1] = arguments[a];\n          }\n\n          if (Object.assign) return Object.assign.apply(Object, [e].concat(s));\n\n          var o = function o() {\n            var e = s[t];\n            \"object\" == typeof e && null !== e && Object.keys(e).forEach(function (t) {\n              n[t] = e[t];\n            });\n          };\n\n          for (t = 0, r = s.length; t < r; t += 1) {\n            o();\n          }\n\n          return e;\n        }, e.getBrowserAlias = function (e) {\n          return n.BROWSER_ALIASES_MAP[e];\n        }, e.getBrowserTypeByAlias = function (e) {\n          return n.BROWSER_MAP[e] || \"\";\n        }, e;\n      }();\n\n      t.default = i, e.exports = t.default;\n    },\n    18: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.ENGINE_MAP = t.OS_MAP = t.PLATFORMS_MAP = t.BROWSER_MAP = t.BROWSER_ALIASES_MAP = void 0;\n      t.BROWSER_ALIASES_MAP = {\n        \"Amazon Silk\": \"amazon_silk\",\n        \"Android Browser\": \"android\",\n        Bada: \"bada\",\n        BlackBerry: \"blackberry\",\n        Chrome: \"chrome\",\n        Chromium: \"chromium\",\n        Electron: \"electron\",\n        Epiphany: \"epiphany\",\n        Firefox: \"firefox\",\n        Focus: \"focus\",\n        Generic: \"generic\",\n        \"Google Search\": \"google_search\",\n        Googlebot: \"googlebot\",\n        \"Internet Explorer\": \"ie\",\n        \"K-Meleon\": \"k_meleon\",\n        Maxthon: \"maxthon\",\n        \"Microsoft Edge\": \"edge\",\n        \"MZ Browser\": \"mz\",\n        \"NAVER Whale Browser\": \"naver\",\n        Opera: \"opera\",\n        \"Opera Coast\": \"opera_coast\",\n        PhantomJS: \"phantomjs\",\n        Puffin: \"puffin\",\n        QupZilla: \"qupzilla\",\n        QQ: \"qq\",\n        QQLite: \"qqlite\",\n        Safari: \"safari\",\n        Sailfish: \"sailfish\",\n        \"Samsung Internet for Android\": \"samsung_internet\",\n        SeaMonkey: \"seamonkey\",\n        Sleipnir: \"sleipnir\",\n        Swing: \"swing\",\n        Tizen: \"tizen\",\n        \"UC Browser\": \"uc\",\n        Vivaldi: \"vivaldi\",\n        \"WebOS Browser\": \"webos\",\n        WeChat: \"wechat\",\n        \"Yandex Browser\": \"yandex\",\n        Roku: \"roku\"\n      };\n      t.BROWSER_MAP = {\n        amazon_silk: \"Amazon Silk\",\n        android: \"Android Browser\",\n        bada: \"Bada\",\n        blackberry: \"BlackBerry\",\n        chrome: \"Chrome\",\n        chromium: \"Chromium\",\n        electron: \"Electron\",\n        epiphany: \"Epiphany\",\n        firefox: \"Firefox\",\n        focus: \"Focus\",\n        generic: \"Generic\",\n        googlebot: \"Googlebot\",\n        google_search: \"Google Search\",\n        ie: \"Internet Explorer\",\n        k_meleon: \"K-Meleon\",\n        maxthon: \"Maxthon\",\n        edge: \"Microsoft Edge\",\n        mz: \"MZ Browser\",\n        naver: \"NAVER Whale Browser\",\n        opera: \"Opera\",\n        opera_coast: \"Opera Coast\",\n        phantomjs: \"PhantomJS\",\n        puffin: \"Puffin\",\n        qupzilla: \"QupZilla\",\n        qq: \"QQ Browser\",\n        qqlite: \"QQ Browser Lite\",\n        safari: \"Safari\",\n        sailfish: \"Sailfish\",\n        samsung_internet: \"Samsung Internet for Android\",\n        seamonkey: \"SeaMonkey\",\n        sleipnir: \"Sleipnir\",\n        swing: \"Swing\",\n        tizen: \"Tizen\",\n        uc: \"UC Browser\",\n        vivaldi: \"Vivaldi\",\n        webos: \"WebOS Browser\",\n        wechat: \"WeChat\",\n        yandex: \"Yandex Browser\"\n      };\n      t.PLATFORMS_MAP = {\n        tablet: \"tablet\",\n        mobile: \"mobile\",\n        desktop: \"desktop\",\n        tv: \"tv\"\n      };\n      t.OS_MAP = {\n        WindowsPhone: \"Windows Phone\",\n        Windows: \"Windows\",\n        MacOS: \"macOS\",\n        iOS: \"iOS\",\n        Android: \"Android\",\n        WebOS: \"WebOS\",\n        BlackBerry: \"BlackBerry\",\n        Bada: \"Bada\",\n        Tizen: \"Tizen\",\n        Linux: \"Linux\",\n        ChromeOS: \"Chrome OS\",\n        PlayStation4: \"PlayStation 4\",\n        Roku: \"Roku\"\n      };\n      t.ENGINE_MAP = {\n        EdgeHTML: \"EdgeHTML\",\n        Blink: \"Blink\",\n        Trident: \"Trident\",\n        Presto: \"Presto\",\n        Gecko: \"Gecko\",\n        WebKit: \"WebKit\"\n      };\n    },\n    90: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n      var n,\n          i = (n = r(91)) && n.__esModule ? n : {\n        default: n\n      },\n          s = r(18);\n\n      function a(e, t) {\n        for (var r = 0; r < t.length; r++) {\n          var n = t[r];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n        }\n      }\n\n      var o = function () {\n        function e() {}\n\n        var t, r, n;\n        return e.getParser = function (e, t) {\n          if (void 0 === t && (t = !1), \"string\" != typeof e) throw new Error(\"UserAgent should be a string\");\n          return new i.default(e, t);\n        }, e.parse = function (e) {\n          return new i.default(e).getResult();\n        }, t = e, n = [{\n          key: \"BROWSER_MAP\",\n          get: function get() {\n            return s.BROWSER_MAP;\n          }\n        }, {\n          key: \"ENGINE_MAP\",\n          get: function get() {\n            return s.ENGINE_MAP;\n          }\n        }, {\n          key: \"OS_MAP\",\n          get: function get() {\n            return s.OS_MAP;\n          }\n        }, {\n          key: \"PLATFORMS_MAP\",\n          get: function get() {\n            return s.PLATFORMS_MAP;\n          }\n        }], (r = null) && a(t.prototype, r), n && a(t, n), e;\n      }();\n\n      t.default = o, e.exports = t.default;\n    },\n    91: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n      var n = u(r(92)),\n          i = u(r(93)),\n          s = u(r(94)),\n          a = u(r(95)),\n          o = u(r(17));\n\n      function u(e) {\n        return e && e.__esModule ? e : {\n          default: e\n        };\n      }\n\n      var d = function () {\n        function e(e, t) {\n          if (void 0 === t && (t = !1), null == e || \"\" === e) throw new Error(\"UserAgent parameter can't be empty\");\n          this._ua = e, this.parsedResult = {}, !0 !== t && this.parse();\n        }\n\n        var t = e.prototype;\n        return t.getUA = function () {\n          return this._ua;\n        }, t.test = function (e) {\n          return e.test(this._ua);\n        }, t.parseBrowser = function () {\n          var e = this;\n          this.parsedResult.browser = {};\n          var t = o.default.find(n.default, function (t) {\n            if (\"function\" == typeof t.test) return t.test(e);\n            if (t.test instanceof Array) return t.test.some(function (t) {\n              return e.test(t);\n            });\n            throw new Error(\"Browser's test function is not valid\");\n          });\n          return t && (this.parsedResult.browser = t.describe(this.getUA())), this.parsedResult.browser;\n        }, t.getBrowser = function () {\n          return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();\n        }, t.getBrowserName = function (e) {\n          return e ? String(this.getBrowser().name).toLowerCase() || \"\" : this.getBrowser().name || \"\";\n        }, t.getBrowserVersion = function () {\n          return this.getBrowser().version;\n        }, t.getOS = function () {\n          return this.parsedResult.os ? this.parsedResult.os : this.parseOS();\n        }, t.parseOS = function () {\n          var e = this;\n          this.parsedResult.os = {};\n          var t = o.default.find(i.default, function (t) {\n            if (\"function\" == typeof t.test) return t.test(e);\n            if (t.test instanceof Array) return t.test.some(function (t) {\n              return e.test(t);\n            });\n            throw new Error(\"Browser's test function is not valid\");\n          });\n          return t && (this.parsedResult.os = t.describe(this.getUA())), this.parsedResult.os;\n        }, t.getOSName = function (e) {\n          var t = this.getOS().name;\n          return e ? String(t).toLowerCase() || \"\" : t || \"\";\n        }, t.getOSVersion = function () {\n          return this.getOS().version;\n        }, t.getPlatform = function () {\n          return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();\n        }, t.getPlatformType = function (e) {\n          void 0 === e && (e = !1);\n          var t = this.getPlatform().type;\n          return e ? String(t).toLowerCase() || \"\" : t || \"\";\n        }, t.parsePlatform = function () {\n          var e = this;\n          this.parsedResult.platform = {};\n          var t = o.default.find(s.default, function (t) {\n            if (\"function\" == typeof t.test) return t.test(e);\n            if (t.test instanceof Array) return t.test.some(function (t) {\n              return e.test(t);\n            });\n            throw new Error(\"Browser's test function is not valid\");\n          });\n          return t && (this.parsedResult.platform = t.describe(this.getUA())), this.parsedResult.platform;\n        }, t.getEngine = function () {\n          return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();\n        }, t.getEngineName = function (e) {\n          return e ? String(this.getEngine().name).toLowerCase() || \"\" : this.getEngine().name || \"\";\n        }, t.parseEngine = function () {\n          var e = this;\n          this.parsedResult.engine = {};\n          var t = o.default.find(a.default, function (t) {\n            if (\"function\" == typeof t.test) return t.test(e);\n            if (t.test instanceof Array) return t.test.some(function (t) {\n              return e.test(t);\n            });\n            throw new Error(\"Browser's test function is not valid\");\n          });\n          return t && (this.parsedResult.engine = t.describe(this.getUA())), this.parsedResult.engine;\n        }, t.parse = function () {\n          return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;\n        }, t.getResult = function () {\n          return o.default.assign({}, this.parsedResult);\n        }, t.satisfies = function (e) {\n          var t = this,\n              r = {},\n              n = 0,\n              i = {},\n              s = 0;\n\n          if (Object.keys(e).forEach(function (t) {\n            var a = e[t];\n            \"string\" == typeof a ? (i[t] = a, s += 1) : \"object\" == typeof a && (r[t] = a, n += 1);\n          }), n > 0) {\n            var a = Object.keys(r),\n                u = o.default.find(a, function (e) {\n              return t.isOS(e);\n            });\n\n            if (u) {\n              var d = this.satisfies(r[u]);\n              if (void 0 !== d) return d;\n            }\n\n            var c = o.default.find(a, function (e) {\n              return t.isPlatform(e);\n            });\n\n            if (c) {\n              var f = this.satisfies(r[c]);\n              if (void 0 !== f) return f;\n            }\n          }\n\n          if (s > 0) {\n            var l = Object.keys(i),\n                h = o.default.find(l, function (e) {\n              return t.isBrowser(e, !0);\n            });\n            if (void 0 !== h) return this.compareVersion(i[h]);\n          }\n        }, t.isBrowser = function (e, t) {\n          void 0 === t && (t = !1);\n          var r = this.getBrowserName().toLowerCase(),\n              n = e.toLowerCase(),\n              i = o.default.getBrowserTypeByAlias(n);\n          return t && i && (n = i.toLowerCase()), n === r;\n        }, t.compareVersion = function (e) {\n          var t = [0],\n              r = e,\n              n = !1,\n              i = this.getBrowserVersion();\n          if (\"string\" == typeof i) return \">\" === e[0] || \"<\" === e[0] ? (r = e.substr(1), \"=\" === e[1] ? (n = !0, r = e.substr(2)) : t = [], \">\" === e[0] ? t.push(1) : t.push(-1)) : \"=\" === e[0] ? r = e.substr(1) : \"~\" === e[0] && (n = !0, r = e.substr(1)), t.indexOf(o.default.compareVersions(i, r, n)) > -1;\n        }, t.isOS = function (e) {\n          return this.getOSName(!0) === String(e).toLowerCase();\n        }, t.isPlatform = function (e) {\n          return this.getPlatformType(!0) === String(e).toLowerCase();\n        }, t.isEngine = function (e) {\n          return this.getEngineName(!0) === String(e).toLowerCase();\n        }, t.is = function (e, t) {\n          return void 0 === t && (t = !1), this.isBrowser(e, t) || this.isOS(e) || this.isPlatform(e);\n        }, t.some = function (e) {\n          var t = this;\n          return void 0 === e && (e = []), e.some(function (e) {\n            return t.is(e);\n          });\n        }, e;\n      }();\n\n      t.default = d, e.exports = t.default;\n    },\n    92: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n      var n,\n          i = (n = r(17)) && n.__esModule ? n : {\n        default: n\n      };\n      var s = /version\\/(\\d+(\\.?_?\\d+)+)/i,\n          a = [{\n        test: [/googlebot/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Googlebot\"\n          },\n              r = i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/opera/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Opera\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/opr\\/|opios/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Opera\"\n          },\n              r = i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/SamsungBrowser/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Samsung Internet for Android\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/Whale/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"NAVER Whale Browser\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/MZBrowser/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"MZ Browser\"\n          },\n              r = i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/focus/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Focus\"\n          },\n              r = i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/swing/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Swing\"\n          },\n              r = i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/coast/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Opera Coast\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Opera Touch\"\n          },\n              r = i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/yabrowser/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Yandex Browser\"\n          },\n              r = i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/ucbrowser/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"UC Browser\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/Maxthon|mxios/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Maxthon\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/epiphany/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Epiphany\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/puffin/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Puffin\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/sleipnir/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Sleipnir\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/k-meleon/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"K-Meleon\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/micromessenger/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"WeChat\"\n          },\n              r = i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/qqbrowser/i],\n        describe: function describe(e) {\n          var t = {\n            name: /qqbrowserlite/i.test(e) ? \"QQ Browser Lite\" : \"QQ Browser\"\n          },\n              r = i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/msie|trident/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Internet Explorer\"\n          },\n              r = i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/\\sedg\\//i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Microsoft Edge\"\n          },\n              r = i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/edg([ea]|ios)/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Microsoft Edge\"\n          },\n              r = i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/vivaldi/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Vivaldi\"\n          },\n              r = i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/seamonkey/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"SeaMonkey\"\n          },\n              r = i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/sailfish/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Sailfish\"\n          },\n              r = i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/silk/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Amazon Silk\"\n          },\n              r = i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/phantom/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"PhantomJS\"\n          },\n              r = i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/slimerjs/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"SlimerJS\"\n          },\n              r = i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"BlackBerry\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/(web|hpw)[o0]s/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"WebOS Browser\"\n          },\n              r = i.default.getFirstMatch(s, e) || i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/bada/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Bada\"\n          },\n              r = i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/tizen/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Tizen\"\n          },\n              r = i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/qupzilla/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"QupZilla\"\n          },\n              r = i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/firefox|iceweasel|fxios/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Firefox\"\n          },\n              r = i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/electron/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Electron\"\n          },\n              r = i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/MiuiBrowser/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Miui\"\n          },\n              r = i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/chromium/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Chromium\"\n          },\n              r = i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, e) || i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/chrome|crios|crmo/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Chrome\"\n          },\n              r = i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/GSA/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Google Search\"\n          },\n              r = i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: function test(e) {\n          var t = !e.test(/like android/i),\n              r = e.test(/android/i);\n          return t && r;\n        },\n        describe: function describe(e) {\n          var t = {\n            name: \"Android Browser\"\n          },\n              r = i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/playstation 4/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"PlayStation 4\"\n          },\n              r = i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/safari|applewebkit/i],\n        describe: function describe(e) {\n          var t = {\n            name: \"Safari\"\n          },\n              r = i.default.getFirstMatch(s, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/.*/i],\n        describe: function describe(e) {\n          var t = -1 !== e.search(\"\\\\(\") ? /^(.*)\\/(.*)[ \\t]\\((.*)/ : /^(.*)\\/(.*) /;\n          return {\n            name: i.default.getFirstMatch(t, e),\n            version: i.default.getSecondMatch(t, e)\n          };\n        }\n      }];\n      t.default = a, e.exports = t.default;\n    },\n    93: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n      var n,\n          i = (n = r(17)) && n.__esModule ? n : {\n        default: n\n      },\n          s = r(18);\n      var a = [{\n        test: [/Roku\\/DVP/],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, e);\n          return {\n            name: s.OS_MAP.Roku,\n            version: t\n          };\n        }\n      }, {\n        test: [/windows phone/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, e);\n          return {\n            name: s.OS_MAP.WindowsPhone,\n            version: t\n          };\n        }\n      }, {\n        test: [/windows /i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, e),\n              r = i.default.getWindowsVersionName(t);\n          return {\n            name: s.OS_MAP.Windows,\n            version: t,\n            versionName: r\n          };\n        }\n      }, {\n        test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n        describe: function describe(e) {\n          var t = {\n            name: s.OS_MAP.iOS\n          },\n              r = i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/macintosh/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, e).replace(/[_\\s]/g, \".\"),\n              r = i.default.getMacOSVersionName(t),\n              n = {\n            name: s.OS_MAP.MacOS,\n            version: t\n          };\n          return r && (n.versionName = r), n;\n        }\n      }, {\n        test: [/(ipod|iphone|ipad)/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, e).replace(/[_\\s]/g, \".\");\n          return {\n            name: s.OS_MAP.iOS,\n            version: t\n          };\n        }\n      }, {\n        test: function test(e) {\n          var t = !e.test(/like android/i),\n              r = e.test(/android/i);\n          return t && r;\n        },\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, e),\n              r = i.default.getAndroidVersionName(t),\n              n = {\n            name: s.OS_MAP.Android,\n            version: t\n          };\n          return r && (n.versionName = r), n;\n        }\n      }, {\n        test: [/(web|hpw)[o0]s/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, e),\n              r = {\n            name: s.OS_MAP.WebOS\n          };\n          return t && t.length && (r.version = t), r;\n        }\n      }, {\n        test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, e) || i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, e) || i.default.getFirstMatch(/\\bbb(\\d+)/i, e);\n          return {\n            name: s.OS_MAP.BlackBerry,\n            version: t\n          };\n        }\n      }, {\n        test: [/bada/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, e);\n          return {\n            name: s.OS_MAP.Bada,\n            version: t\n          };\n        }\n      }, {\n        test: [/tizen/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, e);\n          return {\n            name: s.OS_MAP.Tizen,\n            version: t\n          };\n        }\n      }, {\n        test: [/linux/i],\n        describe: function describe() {\n          return {\n            name: s.OS_MAP.Linux\n          };\n        }\n      }, {\n        test: [/CrOS/],\n        describe: function describe() {\n          return {\n            name: s.OS_MAP.ChromeOS\n          };\n        }\n      }, {\n        test: [/PlayStation 4/],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, e);\n          return {\n            name: s.OS_MAP.PlayStation4,\n            version: t\n          };\n        }\n      }];\n      t.default = a, e.exports = t.default;\n    },\n    94: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n      var n,\n          i = (n = r(17)) && n.__esModule ? n : {\n        default: n\n      },\n          s = r(18);\n      var a = [{\n        test: [/googlebot/i],\n        describe: function describe() {\n          return {\n            type: \"bot\",\n            vendor: \"Google\"\n          };\n        }\n      }, {\n        test: [/huawei/i],\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/(can-l01)/i, e) && \"Nova\",\n              r = {\n            type: s.PLATFORMS_MAP.mobile,\n            vendor: \"Huawei\"\n          };\n          return t && (r.model = t), r;\n        }\n      }, {\n        test: [/nexus\\s*(?:7|8|9|10).*/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet,\n            vendor: \"Nexus\"\n          };\n        }\n      }, {\n        test: [/ipad/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet,\n            vendor: \"Apple\",\n            model: \"iPad\"\n          };\n        }\n      }, {\n        test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet,\n            vendor: \"Apple\",\n            model: \"iPad\"\n          };\n        }\n      }, {\n        test: [/kftt build/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet,\n            vendor: \"Amazon\",\n            model: \"Kindle Fire HD 7\"\n          };\n        }\n      }, {\n        test: [/silk/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet,\n            vendor: \"Amazon\"\n          };\n        }\n      }, {\n        test: [/tablet(?! pc)/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet\n          };\n        }\n      }, {\n        test: function test(e) {\n          var t = e.test(/ipod|iphone/i),\n              r = e.test(/like (ipod|iphone)/i);\n          return t && !r;\n        },\n        describe: function describe(e) {\n          var t = i.default.getFirstMatch(/(ipod|iphone)/i, e);\n          return {\n            type: s.PLATFORMS_MAP.mobile,\n            vendor: \"Apple\",\n            model: t\n          };\n        }\n      }, {\n        test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.mobile,\n            vendor: \"Nexus\"\n          };\n        }\n      }, {\n        test: [/[^-]mobi/i],\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.mobile\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"blackberry\" === e.getBrowserName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.mobile,\n            vendor: \"BlackBerry\"\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"bada\" === e.getBrowserName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.mobile\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"windows phone\" === e.getBrowserName();\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.mobile,\n            vendor: \"Microsoft\"\n          };\n        }\n      }, {\n        test: function test(e) {\n          var t = Number(String(e.getOSVersion()).split(\".\")[0]);\n          return \"android\" === e.getOSName(!0) && t >= 3;\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tablet\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"android\" === e.getOSName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.mobile\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"macos\" === e.getOSName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.desktop,\n            vendor: \"Apple\"\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"windows\" === e.getOSName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.desktop\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"linux\" === e.getOSName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.desktop\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"playstation 4\" === e.getOSName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tv\n          };\n        }\n      }, {\n        test: function test(e) {\n          return \"roku\" === e.getOSName(!0);\n        },\n        describe: function describe() {\n          return {\n            type: s.PLATFORMS_MAP.tv\n          };\n        }\n      }];\n      t.default = a, e.exports = t.default;\n    },\n    95: function _(e, t, r) {\n      \"use strict\";\n\n      t.__esModule = !0, t.default = void 0;\n      var n,\n          i = (n = r(17)) && n.__esModule ? n : {\n        default: n\n      },\n          s = r(18);\n      var a = [{\n        test: function test(e) {\n          return \"microsoft edge\" === e.getBrowserName(!0);\n        },\n        describe: function describe(e) {\n          if (/\\sedg\\//i.test(e)) return {\n            name: s.ENGINE_MAP.Blink\n          };\n          var t = i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return {\n            name: s.ENGINE_MAP.EdgeHTML,\n            version: t\n          };\n        }\n      }, {\n        test: [/trident/i],\n        describe: function describe(e) {\n          var t = {\n            name: s.ENGINE_MAP.Trident\n          },\n              r = i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: function test(e) {\n          return e.test(/presto/i);\n        },\n        describe: function describe(e) {\n          var t = {\n            name: s.ENGINE_MAP.Presto\n          },\n              r = i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: function test(e) {\n          var t = e.test(/gecko/i),\n              r = e.test(/like gecko/i);\n          return t && !r;\n        },\n        describe: function describe(e) {\n          var t = {\n            name: s.ENGINE_MAP.Gecko\n          },\n              r = i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }, {\n        test: [/(apple)?webkit\\/537\\.36/i],\n        describe: function describe() {\n          return {\n            name: s.ENGINE_MAP.Blink\n          };\n        }\n      }, {\n        test: [/(apple)?webkit/i],\n        describe: function describe(e) {\n          var t = {\n            name: s.ENGINE_MAP.WebKit\n          },\n              r = i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, e);\n          return r && (t.version = r), t;\n        }\n      }];\n      t.default = a, e.exports = t.default;\n    }\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useBlocklyWorkspace2 = _interopRequireDefault(require(\"./useBlocklyWorkspace\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = {\n  initialXml: _propTypes.default.string,\n  toolboxConfiguration: _propTypes.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  workspaceConfiguration: _propTypes.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  className: _propTypes.default.string,\n  onWorkspaceChange: _propTypes.default.func,\n  onImportXmlError: _propTypes.default.func,\n  onXmlChange: _propTypes.default.func,\n  onInject: _propTypes.default.func,\n  onDispose: _propTypes.default.func\n};\nvar defaultProps = {\n  initialXml: null,\n  toolboxConfiguration: null,\n  workspaceConfiguration: null,\n  className: null,\n  onWorkspaceChange: null,\n  onImportXmlError: null,\n  onXmlChange: null,\n  onInject: null,\n  onDispose: null\n};\n\nfunction BlocklyWorkspace(_ref) {\n  var initialXml = _ref.initialXml,\n      toolboxConfiguration = _ref.toolboxConfiguration,\n      workspaceConfiguration = _ref.workspaceConfiguration,\n      className = _ref.className,\n      onWorkspaceChange = _ref.onWorkspaceChange,\n      onXmlChange = _ref.onXmlChange,\n      onImportXmlError = _ref.onImportXmlError,\n      onInject = _ref.onInject,\n      onDispose = _ref.onDispose;\n\n  var editorDiv = _react.default.useRef(null);\n\n  var _useBlocklyWorkspace = (0, _useBlocklyWorkspace2.default)({\n    ref: editorDiv,\n    initialXml: initialXml,\n    toolboxConfiguration: toolboxConfiguration,\n    workspaceConfiguration: workspaceConfiguration,\n    onWorkspaceChange: onWorkspaceChange,\n    onImportXmlError: onImportXmlError,\n    onInject: onInject,\n    onDispose: onDispose\n  }),\n      xml = _useBlocklyWorkspace.xml;\n\n  var onXmlChangeRef = _react.default.useRef(onXmlChange);\n\n  _react.default.useEffect(function () {\n    onXmlChangeRef.current = onXmlChange;\n  }, [onXmlChange]);\n\n  _react.default.useEffect(function () {\n    if (onXmlChangeRef.current && xml) {\n      onXmlChangeRef.current(xml);\n    }\n  }, [xml]);\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: className,\n    ref: editorDiv\n  });\n}\n\nBlocklyWorkspace.propTypes = propTypes;\nBlocklyWorkspace.defaultProps = defaultProps;\nvar _default = BlocklyWorkspace;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\n\nfunction debounce(func, wait) {\n  var timeout = null;\n  var later = null;\n\n  var debouncedFunction = function debouncedFunction() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    later = function later() {\n      timeout = null;\n      func.apply(void 0, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n\n  var cancel = function cancel() {\n    if (timeout !== null) {\n      clearTimeout(timeout);\n      later();\n    }\n  };\n\n  return [debouncedFunction, cancel];\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"useBlocklyWorkspace\", {\n  enumerable: true,\n  get: function get() {\n    return _useBlocklyWorkspace.default;\n  }\n});\nObject.defineProperty(exports, \"BlocklyWorkspace\", {\n  enumerable: true,\n  get: function get() {\n    return _BlocklyWorkspace.default;\n  }\n});\n\nvar _useBlocklyWorkspace = _interopRequireDefault(require(\"./useBlocklyWorkspace\"));\n\nvar _BlocklyWorkspace = _interopRequireDefault(require(\"./BlocklyWorkspace\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _blockly = _interopRequireDefault(require(\"blockly\"));\n\nvar _debounce3 = _interopRequireDefault(require(\"./debounce\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction importFromXml(xml, workspace, onImportXmlError) {\n  try {\n    _blockly.default.Xml.domToWorkspace(_blockly.default.Xml.textToDom(xml), workspace);\n\n    return true;\n  } catch (e) {\n    if (onImportXmlError) {\n      onImportXmlError(e);\n    }\n\n    return false;\n  }\n}\n\nvar useBlocklyWorkspace = function useBlocklyWorkspace(_ref) {\n  var ref = _ref.ref,\n      initialXml = _ref.initialXml,\n      toolboxConfiguration = _ref.toolboxConfiguration,\n      workspaceConfiguration = _ref.workspaceConfiguration,\n      onWorkspaceChange = _ref.onWorkspaceChange,\n      onImportXmlError = _ref.onImportXmlError,\n      onInject = _ref.onInject,\n      onDispose = _ref.onDispose;\n\n  var _React$useState = _react.default.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      workspace = _React$useState2[0],\n      setWorkspace = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(initialXml),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      xml = _React$useState4[0],\n      setXml = _React$useState4[1];\n\n  var _React$useState5 = _react.default.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      didInitialImport = _React$useState6[0],\n      setDidInitialImport = _React$useState6[1];\n\n  var _React$useState7 = _react.default.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      didHandleNewWorkspace = _React$useState8[0],\n      setDidHandleNewWorkspace = _React$useState8[1]; // we explicitly don't want to recreate the workspace when the configuration changes\n  // so, we'll keep it in a ref and update as necessary in an effect hook\n\n\n  var workspaceConfigurationRef = _react.default.useRef(workspaceConfiguration);\n\n  _react.default.useEffect(function () {\n    workspaceConfigurationRef.current = workspaceConfiguration;\n  }, [workspaceConfiguration]);\n\n  var toolboxConfigurationRef = _react.default.useRef(toolboxConfiguration);\n\n  _react.default.useEffect(function () {\n    toolboxConfigurationRef.current = toolboxConfiguration;\n\n    if (toolboxConfiguration && workspace) {\n      workspace.updateToolbox(toolboxConfiguration);\n    }\n  }, [toolboxConfiguration, workspace]);\n\n  var onInjectRef = _react.default.useRef(onInject);\n\n  var onDisposeRef = _react.default.useRef(onDispose);\n\n  _react.default.useEffect(function () {\n    onInjectRef.current = onInject;\n  }, [onInject]);\n\n  _react.default.useEffect(function () {\n    onDisposeRef.current = onDispose;\n  }, [onDispose]);\n\n  var handleWorkspaceChanged = _react.default.useCallback(function (newWorkspace) {\n    if (onWorkspaceChange) {\n      onWorkspaceChange(newWorkspace);\n    }\n  }, [onWorkspaceChange]); // Workspace creation\n\n\n  _react.default.useEffect(function () {\n    var newWorkspace = _blockly.default.inject(ref.current, _objectSpread(_objectSpread({}, workspaceConfigurationRef.current), {}, {\n      toolbox: toolboxConfigurationRef.current\n    }));\n\n    setWorkspace(newWorkspace);\n    setDidInitialImport(false); // force a re-import if we recreate the workspace\n\n    setDidHandleNewWorkspace(false); // Singal that a workspace change event needs to be sent.\n\n    if (onInjectRef.current) {\n      onInjectRef.current(newWorkspace);\n    }\n\n    var onDisposeFunction = onDisposeRef.current; // Dispose of the workspace when our div ref goes away (Equivalent to didComponentUnmount)\n\n    return function () {\n      newWorkspace.dispose();\n\n      if (onDisposeFunction) {\n        onDisposeFunction(newWorkspace);\n      }\n    };\n  }, [ref]); // Send a workspace change event when the workspace is created\n\n\n  _react.default.useEffect(function () {\n    if (workspace && !didHandleNewWorkspace) {\n      handleWorkspaceChanged(workspace);\n    }\n  }, [handleWorkspaceChanged, didHandleNewWorkspace, workspace]); // Workspace change listener\n\n\n  _react.default.useEffect(function () {\n    if (workspace == null) {\n      return undefined;\n    }\n\n    var listener = function listener() {\n      handleWorkspaceChanged(workspace);\n    };\n\n    workspace.addChangeListener(listener);\n    return function () {\n      workspace.removeChangeListener(listener);\n    };\n  }, [workspace, handleWorkspaceChanged]); // xmlDidChange callback\n\n\n  _react.default.useEffect(function () {\n    if (workspace == null) {\n      return undefined;\n    }\n\n    var _debounce = (0, _debounce3.default)(function () {\n      var newXml = _blockly.default.Xml.domToText(_blockly.default.Xml.workspaceToDom(workspace));\n\n      if (newXml === xml) {\n        return;\n      }\n\n      setXml(newXml);\n    }, 200),\n        _debounce2 = _slicedToArray(_debounce, 2),\n        callback = _debounce2[0],\n        cancel = _debounce2[1];\n\n    workspace.addChangeListener(callback);\n    return function () {\n      workspace.removeChangeListener(callback);\n      cancel();\n    };\n  }, [workspace, xml]); // Initial Xml Changes\n\n\n  _react.default.useEffect(function () {\n    if (xml && workspace && !didInitialImport) {\n      var success = importFromXml(xml, workspace, onImportXmlError);\n\n      if (!success) {\n        setXml(null);\n      }\n\n      setDidInitialImport(true);\n    }\n  }, [xml, workspace, didInitialImport, onImportXmlError]);\n\n  return {\n    workspace: workspace,\n    xml: xml\n  };\n};\n\nvar _default = useBlocklyWorkspace;\nexports.default = _default;","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\n\nexport default function useDebouncedCallback(func, wait, options) {\n  var _this = this;\n\n  var lastCallTime = useRef(null);\n  var lastInvokeTime = useRef(0);\n  var timerId = useRef(null);\n  var lastArgs = useRef([]);\n  var lastThis = useRef();\n  var result = useRef();\n  var funcRef = useRef(func);\n  var mounted = useRef(true);\n  funcRef.current = func; // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n\n  var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = +wait || 0;\n  options = options || {};\n  var leading = !!options.leading;\n  var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n\n  var maxing = ('maxWait' in options);\n  var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []); // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n\n  var debounced = useMemo(function () {\n    var invokeFunc = function invokeFunc(time) {\n      var args = lastArgs.current;\n      var thisArg = lastThis.current;\n      lastArgs.current = lastThis.current = null;\n      lastInvokeTime.current = time;\n      return result.current = funcRef.current.apply(thisArg, args);\n    };\n\n    var startTimer = function startTimer(pendingFunc, wait) {\n      if (useRAF) cancelAnimationFrame(timerId.current);\n      timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n    };\n\n    var shouldInvoke = function shouldInvoke(time) {\n      if (!mounted.current) return false;\n      var timeSinceLastCall = time - lastCallTime.current;\n      var timeSinceLastInvoke = time - lastInvokeTime.current; // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n\n      return !lastCallTime.current || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n    };\n\n    var trailingEdge = function trailingEdge(time) {\n      timerId.current = null; // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time);\n      }\n\n      lastArgs.current = lastThis.current = null;\n      return result.current;\n    };\n\n    var timerExpired = function timerExpired() {\n      var time = Date.now();\n\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      } // https://github.com/xnimorz/use-debounce/issues/97\n\n\n      if (!mounted.current) {\n        return;\n      } // Remaining wait calculation\n\n\n      var timeSinceLastCall = time - lastCallTime.current;\n      var timeSinceLastInvoke = time - lastInvokeTime.current;\n      var timeWaiting = wait - timeSinceLastCall;\n      var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting; // Restart the timer\n\n      startTimer(timerExpired, remainingWait);\n    };\n\n    var func = function func() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var time = Date.now();\n      var isInvoking = shouldInvoke(time);\n      lastArgs.current = args;\n      lastThis.current = _this;\n      lastCallTime.current = time;\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          lastInvokeTime.current = lastCallTime.current; // Start the timer for the trailing edge.\n\n          startTimer(timerExpired, wait); // Invoke the leading edge.\n\n          return leading ? invokeFunc(lastCallTime.current) : result.current;\n        }\n\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          startTimer(timerExpired, wait);\n          return invokeFunc(lastCallTime.current);\n        }\n      }\n\n      if (!timerId.current) {\n        startTimer(timerExpired, wait);\n      }\n\n      return result.current;\n    };\n\n    func.cancel = function () {\n      if (timerId.current) {\n        useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n      }\n\n      lastInvokeTime.current = 0;\n      lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n    };\n\n    func.isPending = function () {\n      return !!timerId.current;\n    };\n\n    func.flush = function () {\n      return !timerId.current ? result.current : trailingEdge(Date.now());\n    };\n\n    return func;\n  }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n  return debounced;\n}","import jsep from \"jsep\"\n\nexport interface VMError {\n    sourceId?: string\n    code?: number\n    message: string\n}\n\nexport interface VMBase {\n    type: \"ite\" | \"cmd\"\n    sourceId?: string\n}\n\nexport interface VMIfThenElse extends VMBase {\n    type: \"ite\"\n    expr: jsep.Expression\n    then?: VMBase[]\n    else?: VMBase[]\n}\n\nexport interface VMCommand extends VMBase {\n    type: \"cmd\"\n    command: jsep.CallExpression\n}\n\nexport interface VMHandler {\n    commands: VMBase[]\n    roles?: string[]\n    errors?: VMError[]\n    // this handler support the editing experience but\n    // should not be compiled down or debugged\n    meta?: boolean\n}\n\nexport interface VMRole {\n    role: string\n    serviceClass: number\n}\n\nexport interface VMProgram {\n    roles: VMRole[]\n    serverRoles: VMRole[]\n    handlers: VMHandler[]\n}\n\nexport type VMFunctionNames =\n    | \"start\"\n    | \"halt\"\n    | \"nop\"\n    | \"label\"\n    | \"jump\"\n    | \"branchOnCondition\"\n    | \"wait\"\n    | \"awaitRegister\"\n    | \"awaitChange\"\n    | \"awaitEvent\"\n    | \"awaitCondition\"\n    | \"writeRegister\"\n    | \"writeLocal\"\n    | \"watch\"\n    | \"log\"\n    | \"roleBound\"\n    | \"roleBoundExpression\"\n    | \"onRoleConnected\"\n    | \"onRoleDisconnected\"\n    | \"raiseEvent\"\n\ntype Context = \"command\" | \"expression\" | \"either\"\n\nexport interface VMFunctionDescription {\n    id: string\n    args: (string | [string, any])[]\n    prompt: string\n    context: Context\n}\n\nexport const VMFunctions: VMFunctionDescription[] = [\n    {\n        id: \"start\",\n        args: [],\n        prompt: `start block`,\n        context: \"command\",\n    },\n    {\n        id: \"halt\",\n        args: [],\n        prompt: `terminates the current handler`,\n        context: \"command\",\n    },\n    {\n        id: \"nop\",\n        args: [],\n        prompt: `no operation`,\n        context: \"command\",\n    },\n    {\n        id: \"label\",\n        args: [\"Identifier\"],\n        prompt: `label target {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"jump\",\n        args: [\"Identifier\"],\n        prompt: `jump to label {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"branchOnCondition\",\n        args: [\"boolean\", \"Identifier\"],\n        prompt: `if {1} then jump to label {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"wait\",\n        args: [\"number\"],\n        prompt: `wait for {1} milliseconds`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitRegister\",\n        args: [\"register\"],\n        prompt: `wait on register {1} to change value`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitChange\",\n        args: [\"register\", \"number\"],\n        prompt: `wait for register {1} to change by {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitEvent\",\n        args: [\"event\", [\"boolean\", true]],\n        prompt: `wait for event {1} and then check {2} (other events ignored)`,\n        context: \"command\",\n    },\n    {\n        id: \"awaitCondition\",\n        args: [\"boolean\"],\n        prompt: `wait for condition {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeRegister\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"writeLocal\",\n        args: [\"register\", \"number\"],\n        prompt: `write value {2:val} to {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"watch\",\n        args: [\"number\"],\n        prompt: `watch expression {1}`,\n        context: \"command\",\n    },\n    {\n        id: \"log\",\n        args: [\"number\"],\n        prompt: `not used`,\n        context: \"command\",\n    },\n    {\n        id: \"roleBound\",\n        args: [\"Identifier\", \"Identifier\"],\n        prompt: `role {1} {2}`,\n        context: \"command\",\n    },\n    {\n        id: \"roleBoundExpression\",\n        args: [\"Identifier\"],\n        prompt: `is role {1} bound?`,\n        context: \"expression\",\n    },\n    {\n        id: \"onRoleConnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is connected`,\n        context: \"command\",\n    },\n    {\n        id: \"onRoleDisconnected\",\n        args: [\"Identifier\"],\n        prompt: `fires when a role is disconnected`,\n        context: \"command\",\n    },\n]\n","import jsep from \"jsep\"\nimport { VMFunctionDescription } from \"./ir\"\nimport { parseIntFloat } from \"../../jacdac-spec/spectool/jdutils\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function exprVisitor(\n    parent: any,\n    current: any,\n    structVisit: (par: jsep.Expression, curr: jsep.Expression) => void\n) {\n    if (Array.isArray(current)) {\n        ;(current as any[]).forEach(c => exprVisitor(current, c, structVisit))\n    } else if (typeof current === \"object\") {\n        if (parent && current) structVisit(parent, current)\n        Object.keys(current).forEach((key: string) => {\n            exprVisitor(current, current[key], structVisit)\n        })\n    }\n}\n\ninterface Resolve {\n    role: string\n    client: boolean\n    spec: jdspec.ServiceSpec\n    rest: jsep.Expression\n}\n\nexport class SpecSymbolResolver {\n    registers: string[]\n    events: string[]\n    roles: string[]\n\n    constructor(\n        private readonly spec: jdspec.ServiceSpec,\n        private readonly role2spec: (role: string) => {\n            spec: jdspec.ServiceSpec\n            client: boolean\n        },\n        private readonly error: (m: string) => void\n    ) {\n        this.reset()\n    }\n\n    reset() {\n        this.registers = []\n        this.events = []\n        this.roles = []\n    }\n\n    public check(e: jsep.Expression, type: string) {\n        if (!e) {\n            this.error(`expression is undefined`)\n            return false\n        } else if (e.type !== type) {\n            this.error(`expected ${type}; got ${e.type}`)\n            return false\n        }\n        return true\n    }\n\n    public specResolve(e: jsep.Expression): Resolve {\n        let ret: Resolve = undefined\n        if (this.spec) {\n            ret = {\n                role: this.spec.shortName,\n                spec: this.spec,\n                client: true,\n                rest: e,\n            }\n        } else if (e.type === \"Identifier\") {\n            return undefined\n        } else if (\n            this.check(e, \"MemberExpression\") &&\n            this.check((e as jsep.MemberExpression).object, \"Identifier\") &&\n            this.role2spec\n        ) {\n            const obj = (e as jsep.MemberExpression).object as jsep.Identifier\n            if (obj.name.startsWith(\"$\")) return undefined\n            if (!this.role2spec(obj.name)) {\n                this.error(`no specification found for ${obj.name}`)\n            }\n            const { spec, client } = this.role2spec(obj.name)\n            ret = {\n                role: obj.name,\n                spec,\n                client,\n                rest: (e as jsep.MemberExpression).property,\n            }\n        }\n        if (ret && this.roles.indexOf(ret.role) < 0) this.roles.push(ret.role)\n        return ret\n    }\n\n    public destructAccessPath(e: jsep.Expression, expectIdentifier = false) {\n        if (e.type === \"Identifier\") {\n            return [(e as jsep.Identifier).name, \"\"]\n        } else if (!expectIdentifier && e.type === \"MemberExpression\") {\n            const object = (e as jsep.MemberExpression)\n                .object as jsep.Identifier\n            const property = (e as jsep.MemberExpression)\n                .property as jsep.Identifier\n            if (\n                this.check(object, \"Identifier\") &&\n                this.check(property, \"Identifier\")\n            )\n                return [object.name, property.name]\n            return undefined\n        } else {\n            if (!expectIdentifier)\n                this.error(\n                    `expected Identifier or MemberExpression; got ${e.type}`\n                )\n            else this.error(`expected Identifier; got ${e.type}`)\n            return undefined\n        }\n    }\n\n    public lookupEvent(e: jsep.Expression) {\n        const resolve = this.specResolve(e)\n        if (!resolve) return\n        const { role, spec, rest } = resolve\n        const [id, _] = this.destructAccessPath(rest, true)\n        const events = spec.packets?.filter(pkt => pkt.kind === \"event\")\n        const pkt = events.find(p => p.name === id)\n        if (!pkt) {\n            this.error(`no event ${id} in specification`)\n            return undefined\n        } else {\n            const ev = `${role}.${id}`\n            if (this.events.indexOf(ev) < 0) this.events.push(ev)\n            return pkt\n        }\n    }\n\n    public lookupRegister(e: jsep.Expression) {\n        const resolve = this.specResolve(e)\n        if (!resolve) return\n        const { role, spec, rest } = resolve\n        const [root, fld] = this.destructAccessPath(rest)\n        this.lookupRegisterRaw(spec, root, fld)\n        const reg = `${role}.${root}`\n        if (this.registers.indexOf(reg) < 0) this.registers.push(reg)\n    }\n\n    private lookupRegisterRaw(\n        spec: jdspec.ServiceSpec,\n        root: string,\n        fld: string\n    ) {\n        const reg = getRegister(spec, root, fld)\n        if (\n            reg.pkt &&\n            ((!reg.fld && !isBoolOrNumericFormat(reg.pkt.packFormat)) ||\n                (reg.fld &&\n                    reg.fld.type &&\n                    !isBoolOrNumericFormat(reg.fld.type)))\n        )\n            this.error(\"only bool/numeric registers allowed\")\n        // if (!fld && regField.pkt.fields.length > 0)\n        //    error(`register ${root} has fields, but no field specified`)\n    }\n\n    public lookupReplace(\n        events: jdspec.PacketInfo[],\n        parent: jsep.Expression,\n        child: jsep.Identifier | jsep.MemberExpression\n    ) {\n        if (Array.isArray(parent)) {\n            const replace = this.lookup(events, parent, child)\n            parent.forEach(i => {\n                if (parent[i] === child) parent[i] = replace\n            })\n        } else {\n            // don't process identifiers that are callees of CallExpression\n            if (\n                parent?.type === \"CallExpression\" &&\n                child === (<jsep.CallExpression>parent).callee\n            )\n                return\n            const replace = this.lookup(events, parent, child)\n            if (replace) {\n                Object.keys(parent).forEach(k => {\n                    if ((parent as any)[k] === child)\n                        (parent as any)[k] = replace\n                })\n            }\n        }\n    }\n\n    private lookup(\n        events: jdspec.PacketInfo[],\n        parent: jsep.Expression,\n        child: jsep.Identifier | jsep.MemberExpression\n    ) {\n        const resolve = this.specResolve(child)\n        if (!resolve) return\n        const { role, spec, rest } = resolve\n        const [root, fld] = this.destructAccessPath(rest)\n        try {\n            try {\n                const val = parseIntFloat(spec, fld ? `${root}.${fld}` : root)\n                const lit: jsep.Literal = {\n                    type: \"Literal\",\n                    value: val,\n                    raw: val.toString(),\n                }\n                return lit\n            } catch (e) {\n                this.lookupRegisterRaw(spec, root, fld)\n                const reg = `${role}.${root}`\n                if (this.registers.indexOf(reg) < 0) this.registers.push(reg)\n            }\n        } catch (e) {\n            let pkt: jdspec.PacketInfo = undefined\n            if (events.length) pkt = events.find(pkt => pkt.name === root)\n            else {\n                // we need a fully qualified name\n                pkt = spec.packets?.find(\n                    p => p.kind === \"event\" && p.name === root\n                )\n            }\n            if (!pkt) this.error(`event ${root} not bound correctly`)\n            else if (!fld && pkt.fields.length > 0)\n                this.error(`event ${root} has fields, but no field specified`)\n            else if (fld && !pkt.fields.find(f => f.name === fld))\n                this.error(\n                    `Field ${fld} of event ${root} not found in specification`\n                )\n        }\n    }\n}\n\nexport class VMChecker {\n    constructor(\n        private readonly resolver: SpecSymbolResolver,\n        private readonly supportedExpression: (\n            type: jsep.ExpressionType\n        ) => boolean,\n        private readonly error: (m: string) => void\n    ) {}\n\n    checkCommand(\n        root: jsep.CallExpression,\n        funs: VMFunctionDescription[]\n    ): [VMFunctionDescription, jsep.CallExpression] {\n        if (!root || !root.type || root.type != \"CallExpression\") {\n            this.error(\n                `a command must be a call expression in JavaScript syntax`\n            )\n            return\n        }\n        // check for unsupported expression types\n        exprVisitor(null, root, (p, c) => {\n            if (!this.supportedExpression(c.type as jsep.ExpressionType))\n                this.error(\n                    `Expression of type ${c.type} not currently supported`\n                )\n        })\n        // first lookup in known functions\n        const callee = (root.callee as jsep.Identifier)?.name\n        const cmdIndex = funs.findIndex(r => callee === r.id)\n        let theCommand: jdspec.PacketInfo = undefined\n        if (cmdIndex < 0) {\n            if (root.callee.type === \"MemberExpression\") {\n                const { role, spec, rest, client } = this.resolver.specResolve(\n                    root.callee as jsep.MemberExpression\n                )\n                const [command, _] = this.resolver.destructAccessPath(rest)\n                if (!role) {\n                    this.error(\n                        `command does not conform to expected call expression`\n                    )\n                    return undefined\n                } else {\n                    // we have a spec, now look for command\n                    const commands = spec.packets?.filter(\n                        pkt =>\n                            (client && pkt.kind === \"command\") ||\n                            (!client && pkt.kind === \"event\")\n                    )\n                    theCommand = commands.find(c => c?.name === command)\n                    if (!theCommand) {\n                        this.error(\n                            `cannot find command named ${command} in spec ${spec.shortName}`\n                        )\n                    } else\n                        return this.processSpecCommandFunction(root, theCommand)\n                }\n            } else {\n                if (callee)\n                    this.error(`${callee} is not a registered function.`)\n                else\n                    this.error(\n                        `command does not conform to expected call expression`\n                    )\n                return undefined\n            }\n        } else return this.processTestFunction(funs, root, cmdIndex)\n        return undefined\n    }\n\n    private processSpecCommandFunction(\n        root: jsep.CallExpression,\n        command: jdspec.PacketInfo\n    ): [VMFunctionDescription, jsep.CallExpression] {\n        if (root.arguments.length !== command?.fields?.length) {\n            this.error(\n                `Command ${command.name} expects ${command.fields.length} arguments: got ${root.arguments.length}`\n            )\n        } else {\n            const args = root.arguments\n            args.forEach(arg => {\n                this.visitReplace(root, arg, [])\n            })\n        }\n        return [undefined, root]\n    }\n\n    private processTestFunction(\n        funs: VMFunctionDescription[],\n        root: jsep.CallExpression,\n        cmdIndex: number\n    ): [VMFunctionDescription, jsep.CallExpression] {\n        const callee = (root.callee as jsep.Identifier)?.name\n        // check arguments\n        const command = funs[cmdIndex]\n        const minArgs = argsRequiredOptional(command.args).length\n        const maxArgs = command.args.length\n        if (root.arguments.length < minArgs) {\n            this.error(\n                `${callee} expects at least ${minArgs} arguments; got ${root.arguments.length}`\n            )\n            return undefined\n        } else if (root.arguments.length > maxArgs) {\n            this.error(\n                `${callee} expects at most ${maxArgs} arguments; got ${root.arguments.length}`\n            )\n            return undefined\n        }\n        // deal with optional arguments\n        const newExpressions: jsep.Expression[] = []\n        for (let i = root.arguments.length; i < command.args.length; i++) {\n            const [name, def] = command.args[i] as [string, any]\n            const lit: jsep.Literal = {\n                type: \"Literal\",\n                value: def,\n                raw: def.toString(),\n            }\n            newExpressions.push(lit)\n        }\n        root.arguments = root.arguments.concat(newExpressions)\n        // type checking of arguments.\n        this.processTestArguments(command, root)\n        return [command, root]\n        function argsRequiredOptional(args: any[], optional = false) {\n            return args.filter(\n                a =>\n                    (!optional && typeof a === \"string\") ||\n                    (optional && typeof a === \"object\")\n            )\n        }\n    }\n\n    private processTestArguments(\n        command: VMFunctionDescription,\n        root: jsep.CallExpression\n    ) {\n        const args = root.arguments\n        const eventSymTable: jdspec.PacketInfo[] = []\n        args.forEach((arg, a) => {\n            let argType = command.args[a]\n\n            if (typeof argType === \"object\") argType = command.args[a][0]\n\n            if (\n                argType === \"register\" ||\n                argType === \"event\" ||\n                argType === \"Identifier\"\n            ) {\n                if (argType === \"Identifier\") {\n                    this.resolver.check(arg, \"Identifier\")\n                } else if (argType === \"event\" && a === 0) {\n                    const pkt = this.resolver.lookupEvent(arg)\n                    if (pkt && eventSymTable.indexOf(pkt) === -1)\n                        eventSymTable.push(pkt)\n                } else if (argType === \"register\") {\n                    try {\n                        this.resolver.lookupRegister(arg)\n                    } catch (e) {\n                        this.error(e.message)\n                    }\n                }\n            } else if (argType === \"events\") {\n                if (arg.type != \"ArrayExpression\")\n                    this.error(\n                        `events function expects a list of service events`\n                    )\n                else {\n                    ;(arg as jsep.ArrayExpression).elements.forEach(e =>\n                        this.resolver.lookupEvent(e)\n                    )\n                }\n            } else if (argType === \"number\" || argType === \"boolean\") {\n                this.visitReplace(root, arg, eventSymTable)\n            } else {\n                this.error(`unexpected argument type (${argType})`)\n            }\n        })\n    }\n\n    private visitReplace(\n        root: jsep.CallExpression,\n        arg: jsep.Expression,\n        eventSymTable: jdspec.PacketInfo[] = []\n    ) {\n        exprVisitor(root, arg, (p, c) => {\n            if (p.type !== \"MemberExpression\" && c.type === \"Identifier\") {\n                this.resolver.lookupReplace(\n                    eventSymTable,\n                    p,\n                    c as jsep.Identifier\n                )\n            } else if (c.type === \"ArrayExpression\") {\n                this.error(`array expression not allowed in this context`)\n            } else if (\n                p.type !== \"MemberExpression\" &&\n                c.type === \"MemberExpression\"\n            ) {\n                const member = c as jsep.MemberExpression\n                // A member expression must be of form <Identifier>.<memberExpression|Identifier>\n                if (member.object.type !== \"Identifier\" || member.computed) {\n                    this.error(\"property access must be of form id.property\")\n                } else {\n                    this.resolver.lookupReplace(\n                        eventSymTable,\n                        p,\n                        c as jsep.MemberExpression\n                    )\n                }\n            }\n        })\n    }\n}\n\n// private stuff\n\nfunction isBoolOrNumericFormat(fmt: string) {\n    return fmt === \"bool\" || /^[ui]\\d+/i.test(fmt)\n}\n\nfunction isRegister(pkt: jdspec.PacketInfo): boolean {\n    return (\n        pkt && (pkt.kind === \"const\" || pkt.kind === \"ro\" || pkt.kind === \"rw\")\n    )\n}\n\nfunction lookupRegister(\n    spec: jdspec.ServiceSpec,\n    id: string\n): jdspec.PacketInfo {\n    return spec.packets.find(pkt => isRegister(pkt) && pkt.name === id)\n}\n\nfunction lookupField(\n    pkt: jdspec.PacketInfo,\n    field: string\n): jdspec.PacketMember {\n    return pkt.fields.find(member => member.name === field)\n}\n\ninterface RegField {\n    pkt: jdspec.PacketInfo\n    fld: jdspec.PacketMember\n}\n\nfunction getRegister(\n    spec: jdspec.ServiceSpec,\n    root: string,\n    fld = \"\"\n): RegField {\n    const ret: RegField = { pkt: undefined, fld: undefined }\n    ret.pkt = lookupRegister(spec, root)\n    if (!ret.pkt) {\n        throw new Error(\n            `no register ${root} found in service ${spec.shortName}`\n        )\n    } else if (fld) {\n        ret.fld = lookupField(ret.pkt, fld)\n        if (!ret.fld)\n            throw new Error(\n                `no field ${fld} found in register ${root} of service ${spec.shortName}`\n            )\n    }\n    return ret\n}\n","import jsep from \"jsep\"\nimport {\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecificationFromName,\n} from \"../jdom/spec\"\nimport {\n    VMBase,\n    VMCommand,\n    VMError,\n    VMHandler,\n    VMIfThenElse,\n    VMProgram,\n    VMFunctions,\n} from \"./ir\"\nimport { VMChecker, SpecSymbolResolver } from \"./symutils\"\nimport { assert } from \"../jdom/utils\"\n\nexport function toIdentifier(id: string) {\n    return {\n        type: \"Identifier\",\n        name: id,\n    } as jsep.Identifier\n}\n\nexport function toMemberExpression(\n    root: string,\n    field: string | jsep.Expression\n) {\n    return {\n        type: \"MemberExpression\",\n        object: toIdentifier(root),\n        property: typeof field === \"string\" ? toIdentifier(field) : field,\n        computed: false,\n    } as jsep.MemberExpression\n}\n\nfunction handlerVisitor(\n    handler: VMHandler,\n    visitITE: (ite: VMIfThenElse, time: number) => void,\n    visitCommand: (c: VMCommand) => void\n) {\n    handler.commands.forEach(visitBase)\n\n    function visitBase(base: VMBase) {\n        switch (base.type) {\n            case \"cmd\": {\n                if (visitCommand) visitCommand(base as VMCommand)\n                break\n            }\n            case \"ite\": {\n                const ite = base as VMIfThenElse\n                if (visitITE) visitITE(ite, 0)\n                ite?.else?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 1)\n                ite?.then?.forEach(visitBase)\n                if (visitITE) visitITE(ite, 2)\n            }\n        }\n    }\n}\n\nexport function compileProgram({ roles, serverRoles, handlers }: VMProgram) {\n    const newProgram: VMProgram = { roles, serverRoles, handlers: [] }\n    // process start blocks\n    handlers.forEach(startBlock)\n    // remove if-then-else\n    newProgram.handlers = handlers.map(h => {\n        return { commands: removeIfThenElse(h), errors: h?.errors }\n    })\n    return newProgram\n}\n\nfunction checkCall(cmd: VMBase, id: string) {\n    if (cmd.type === \"cmd\") {\n        const callee = (cmd as VMCommand).command.callee\n        if (callee.type === \"Identifier\") {\n            const cid = (callee as jsep.Identifier).name\n            return id === cid\n        }\n    }\n    return undefined\n}\n\nfunction startBlock(handler: VMHandler) {\n    if (handler.commands.length && checkCall(handler.commands[0], \"start\")) {\n        handler.commands.shift()\n        handler.commands.push({\n            type: \"cmd\",\n            command: {\n                type: \"CallExpression\",\n                callee: toIdentifier(\"halt\"),\n                arguments: [],\n            },\n        } as VMCommand)\n    }\n}\n\nfunction removeIfThenElse(handler: VMHandler): VMBase[] {\n    const newSequence: VMCommand[] = []\n    const labels: { then: string; end: string }[] = []\n    let labelId = 1\n    handlerVisitor(\n        handler,\n        (ite, time) => {\n            switch (time) {\n                case 0: {\n                    // create the labels and branch instruction\n                    const then = `then_${labelId}`\n                    const end = `end_${labelId}`\n                    labels.push({ then, end })\n                    labelId++\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"branchOnCondition\"),\n                            arguments: [ite.expr, toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 1: {\n                    // insert the jump and then label\n                    const { then, end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"jump\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(then)],\n                        },\n                    })\n                    break\n                }\n                case 2: {\n                    assert(labels.length > 0)\n                    const { end } = labels[labels.length - 1]\n                    newSequence.push({\n                        type: \"cmd\",\n                        command: {\n                            type: \"CallExpression\",\n                            callee: toIdentifier(\"label\"),\n                            arguments: [toIdentifier(end)],\n                        },\n                    })\n                    labels.pop()\n                }\n            }\n        },\n        cmd => {\n            newSequence.push(cmd)\n        }\n    )\n    return newSequence\n}\n\nexport interface RoleRegister {\n    role: string\n    register: string\n}\n\nexport interface RoleEvent {\n    role: string\n    event: string\n}\n\nexport const getServiceFromRole = (info: VMProgram) => (role: string) => {\n    // lookup in roles first\n    let roleFound = info.roles.find(pair => pair.role === role)\n    let client = true\n    if (!roleFound) {\n        roleFound = info.serverRoles.find(pair => pair.role === role)\n        client = false\n    }\n    if (roleFound) {\n        // must succeed\n        const spec = serviceSpecificationFromClassIdentifier(\n            roleFound.serviceClass\n        )\n        assert(!!spec, `service class ${roleFound.serviceClass} not resolved`)\n        return { spec, client }\n    } else {\n        const spec = serviceSpecificationFromName(role)\n        return { spec, client: true }\n    }\n}\n\nexport function checkProgram(prog: VMProgram): {\n    registers: RoleRegister[]\n    events: RoleEvent[]\n    errors: VMError[]\n} {\n    const allErrors: VMError[] = []\n    const goodHandlers: VMHandler[] = []\n    const errorFun = (e: string) => {\n        allErrors.push({ sourceId: undefined, message: e })\n    }\n    const symbolResolver = new SpecSymbolResolver(\n        undefined,\n        getServiceFromRole(prog),\n        errorFun\n    )\n    const checker = new VMChecker(symbolResolver, _ => true, errorFun)\n    prog.handlers.forEach(h => {\n        if (h?.errors.length) {\n            h?.errors.forEach(e => allErrors.push(e))\n            return\n        }\n        const errorCount = allErrors.length\n        symbolResolver.roles = []\n        handlerVisitor(h, undefined, c =>\n            checker.checkCommand(c.command, VMFunctions)\n        )\n        if (h?.errors.length === 0 && allErrors.length === errorCount) {\n            h.roles = symbolResolver.roles\n            goodHandlers.push(h)\n        } else {\n            h?.errors.forEach(e => allErrors.push(e))\n        }\n    })\n    prog.handlers = goodHandlers\n\n    return {\n        registers: symbolResolver.registers.map(s => {\n            const [root, fld] = s.split(\".\")\n            return { role: root, register: fld }\n        }),\n        events: symbolResolver.events.map(e => {\n            const [root, fld] = e.split(\".\")\n            return { role: root, event: fld }\n        }),\n        errors: allErrors,\n    }\n}\n","export const VM_WATCH_CHANGE = \"vmWatchChange\"\nexport const VM_BREAKPOINT = \"vmBreakpoint\"\nexport const VM_COMMAND_FAILED = \"vmCommandFailed\"\nexport const VM_ROLE_MISSING = \"vmRoleMissing\"\nexport const VM_GLOBAL_CHANGE = \"vmVariableChange\"\nexport const VM_GLOBAL_TYPE_MISMATCH = \"vmDynamicTypeError\"\nexport const VM_INTERNAL_ERROR = \"vmInternalError\"\nexport const VM_LOG_ENTRY = \"vmLogEntry\"\n","import {\n    BOUND,\n    CHANGE,\n    DEVICE_ANNOUNCE,\n    DEVICE_DISCONNECT,\n    ROLE_BOUND,\n    ROLE_UNBOUND,\n    UNBOUND,\n} from \"./constants\"\nimport JDBus from \"./bus\"\nimport JDDevice from \"./device\"\nimport JDService from \"./service\"\nimport { serviceSpecificationFromClassIdentifier } from \"./spec\"\nimport { JDClient } from \"./client\"\n\n/**\n * A binding from a name to a service\n * @category Roles\n */\nexport interface RoleBinding {\n    role: string\n    serviceClass: number\n    preferredDeviceId?: string\n    preferredServiceIndex?: number\n}\n\ninterface LiveRoleBinding extends RoleBinding {\n    service?: JDService\n}\n\n/**\n * A role manager\n * @category Roles\n */\nexport class RoleManager extends JDClient {\n    private readonly _roles: LiveRoleBinding[] = []\n\n    /**\n     * Gets the bus for this role\n     */\n    public readonly bus: JDBus\n\n    constructor(bus: JDBus) {\n        super()\n        this.bus = bus\n        this.mount(\n            this.bus.subscribe(DEVICE_ANNOUNCE, this.addServices.bind(this))\n        )\n        this.mount(\n            this.bus.subscribe(\n                DEVICE_DISCONNECT,\n                this.removeServices.bind(this)\n            )\n        )\n\n        this.bindServices()\n    }\n\n    /**\n     * Indicates if all roles are bound.\n     */\n    get isBound() {\n        return this._roles.every(({ service }) => !!service)\n    }\n\n    /**\n     * Gets the list of roles tracked by the manager\n     */\n    roles(bound: boolean = undefined) {\n        if (bound !== undefined)\n            return this._roles.filter(({ service }) => !!service === bound)\n        else return this._roles.slice(0)\n    }\n\n    /**\n     * Saves roles status\n     * @returns\n     */\n    saveRoles(): RoleBinding[] {\n        return this._roles.map(({ service, ...rest }) => ({\n            ...rest,\n            serviceId: service?.id,\n        }))\n    }\n\n    private get hash() {\n        return JSON.stringify(this.saveRoles())\n    }\n\n    /**\n     * Updates the list of roles\n     * @param newRoles\n     */\n    updateRoles(newRoles: RoleBinding[]) {\n        const oldBound = this.isBound\n        const oldHash = this.hash\n\n        // remove unknown roles\n        const supportedNewRoles = newRoles.filter(({ serviceClass }) =>\n            serviceSpecificationFromClassIdentifier(serviceClass)\n        )\n\n        // ensure that preferred deviceid/service index is unique\n        const preferreds: Set<string> = new Set()\n        for (const role of supportedNewRoles.filter(\n            r => !!r.preferredDeviceId\n        )) {\n            const key =\n                role.preferredDeviceId + (role.preferredServiceIndex || -1)\n            if (preferreds.has(key)) {\n                role.preferredDeviceId = undefined\n                role.preferredServiceIndex = undefined\n            } else preferreds.add(key)\n        }\n\n        // unbind removed roles\n        let i = 0\n        while (i < this._roles.length) {\n            const role = this._roles[i]\n            if (!supportedNewRoles.find(r => r.role === role.role)) {\n                this._roles.splice(i, 1)\n                this.emit(ROLE_UNBOUND, role.role)\n            } else {\n                i++\n            }\n        }\n\n        // update or add roles\n        for (const newRole of supportedNewRoles) {\n            const existingRole = this._roles.find(r => r.role === newRole.role)\n            if (!existingRole) {\n                // added role\n                this._roles.push({ ...newRole })\n            } else {\n                const bindingChanged =\n                    existingRole.serviceClass !== newRole.serviceClass ||\n                    existingRole.preferredDeviceId !=\n                        newRole.preferredDeviceId ||\n                    existingRole.preferredServiceIndex !=\n                        newRole.preferredServiceIndex\n\n                existingRole.serviceClass = newRole.serviceClass\n                existingRole.preferredDeviceId = newRole.preferredDeviceId\n                existingRole.preferredServiceIndex =\n                    newRole.preferredServiceIndex\n                // unbinding existing service\n                if (existingRole.service && bindingChanged) {\n                    existingRole.service = undefined\n                    this.emit(ROLE_UNBOUND, existingRole.role)\n                }\n            }\n\n            if (newRole.preferredDeviceId) {\n                // make sure that the preferred device id is free\n                const otherBinding = this._roles.find(\n                    r =>\n                        r.service &&\n                        r.service.device.deviceId ===\n                            newRole.preferredDeviceId &&\n                        (isNaN(newRole.preferredServiceIndex) ||\n                            r.service.serviceIndex ===\n                                newRole.preferredServiceIndex)\n                )\n                if (otherBinding) {\n                    otherBinding.service = undefined\n                    this.emit(ROLE_UNBOUND, otherBinding.role)\n                }\n            }\n            // role unmodified\n        }\n        // bound services\n        const changed = oldHash !== this.hash\n        this.bindServices(changed)\n        this.emitBoundEvents(oldBound)\n    }\n\n    /**\n     * Resolves the service bound to a given role.\n     * @param role\n     * @returns\n     */\n    public service(role: string): JDService {\n        return this._roles.find(r => r.role === role)?.service\n    }\n\n    /**\n     * Updates or creates a new role\n     * @param role name of the role\n     * @param serviceClass desired service class\n     * @param preferredDeviceId optional preferred device id\n     * @returns\n     */\n    public updateRole(\n        role: string,\n        serviceClass: number,\n        preferredDeviceId?: string,\n        preferredServiceIndex?: number\n    ) {\n        const newRoles = this._roles.slice(0).map(r => ({ ...r }))\n        let binding = newRoles.find(r => r.role === role)\n        if (binding) {\n            binding.service = undefined\n            binding.preferredDeviceId = preferredDeviceId\n            binding.preferredServiceIndex = preferredServiceIndex\n        } else {\n            binding = {\n                role,\n                serviceClass,\n                preferredDeviceId,\n                preferredServiceIndex,\n            }\n            newRoles.push(binding)\n        }\n        // find any other binding with the same preferences and clear it\n        if (preferredDeviceId) {\n            const other = this._roles.find(\n                r =>\n                    r !== binding &&\n                    r.preferredDeviceId === preferredDeviceId &&\n                    r.preferredServiceIndex === preferredServiceIndex\n            )\n            if (other) {\n                other.preferredDeviceId = undefined\n                other.preferredServiceIndex = undefined\n            }\n        }\n        this.updateRoles(newRoles)\n    }\n\n    private emitBoundEvents(oldBound: boolean) {\n        const bound = this.isBound\n        if (oldBound !== bound) this.emit(bound ? BOUND : UNBOUND)\n    }\n\n    // TODO: need to respect other (unbound) role's preferredDeviceId\n    private bindRole(role: LiveRoleBinding) {\n        // find a service that is not yet allocated\n        const bound = this.roles(true)\n        const unboundServices = this.bus\n            .services({\n                ignoreInfrastructure: true,\n                serviceClass: role.serviceClass,\n            })\n            .filter(s => !bound.find(r => r.service === s))\n        const boundServices = bound.map(r => r.service).filter(srv => !!srv)\n\n        // pick the first unbound service\n        let theOne = unboundServices[0]\n\n        // if there are constraint, try a better fit\n        if (role.preferredDeviceId) {\n            const newOne = [...unboundServices, ...boundServices].find(\n                s =>\n                    s.device.deviceId === role.preferredDeviceId &&\n                    (isNaN(role.preferredServiceIndex) ||\n                        role.preferredServiceIndex === s.serviceIndex)\n            )\n            if (newOne) {\n                theOne = newOne\n            }\n        }\n\n        if (theOne) {\n            role.service = theOne\n            this.emit(ROLE_BOUND, role.role)\n            return true\n        } else return false\n    }\n\n    private bindServices(changed?: boolean) {\n        const r = this.roles().sort((l, r) => {\n            let c = 0\n            if (r.preferredDeviceId || l.preferredDeviceId)\n                c = -(l.preferredDeviceId || \"\").localeCompare(\n                    r.preferredDeviceId || \"\"\n                )\n            if (c != 0) return c\n            if (\n                !isNaN(l.preferredServiceIndex) ||\n                !isNaN(r.preferredServiceIndex)\n            )\n                c =\n                    -(l.preferredServiceIndex || 0) +\n                    (r.preferredServiceIndex || 0)\n            return c\n        })\n        r.forEach(binding => {\n            if (this.bindRole(binding)) changed = true\n        })\n        if (changed) this.emit(CHANGE)\n    }\n\n    private addServices(dev: JDDevice) {\n        if (dev === this.bus.selfDevice) return\n        this.bindServices()\n    }\n\n    private removeServices(dev: JDDevice) {\n        let changed = false\n        this._roles\n            .filter(r => r.service?.device === dev)\n            .forEach(r => {\n                r.service = undefined\n                this.emit(ROLE_UNBOUND, r.role)\n                changed = true\n            })\n        this.bindServices(changed)\n    }\n\n    toString() {\n        return this._roles\n            .map(({ role, service }) => `${role}->${service || \"?\"}`)\n            .join(\",\")\n    }\n}\nexport default RoleManager\n\n/**\n * Tracks a set of roles\n * @param bus bus hosting the devices\n * @param bindings map of role names to device service pairs\n * @param onUpdate callback to run whenver role assignments change\n * @param options Additional options\n * @returns A unsubscribe callback to cleanup handlers\n * @category Roles\n */\nexport function startRoles<\n    TRoles extends Record<\n        string,\n        {\n            serviceClass: number\n            preferredDeviceId?: string\n            preferredServiceIndex?: number\n        }\n    >\n>(\n    bus: JDBus,\n    bindings: TRoles,\n    onUpdate: (roles: Record<keyof TRoles, JDService>) => void,\n    options?: {\n        /**\n         * Calls update even if not all role around bound\n         */\n        incomplete?: boolean\n    }\n) {\n    const { incomplete } = options || {}\n    const roleManager = new RoleManager(bus)\n    roleManager.updateRoles(\n        Object.keys(bindings).map(role => ({\n            role,\n            serviceClass: bindings[role].serviceClass,\n            preferredDeviceId: bindings[role].preferredDeviceId,\n            preferredServiceIndex: bindings[role].preferredServiceIndex,\n        }))\n    )\n    const roles = () => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const r: Record<keyof TRoles, JDService> = {} as any\n        for (const key in bindings) {\n            const srv = roleManager.service(key)\n            if (srv) r[key] = srv\n        }\n        return r\n    }\n    const update = () => {\n        if (!incomplete && !roleManager.isBound) return\n        onUpdate(roles())\n    }\n    const unsubscribe = roleManager.subscribe(CHANGE, update)\n    update()\n    return unsubscribe\n}\n\n/*\nfunction test(bus: JDBus) {\n    const bindings = {\n        thermo1: { serviceClass: SRV_BUTTON },\n        thermo2: { serviceClass: SRV_BUTTON },\n    }\n    trackRoles(\n        bus,\n        bindings,\n        ({ thermo1, thermo2 }) => {\n            console.log({ thermo1, thermo2 })\n        },\n        { incomplete: true }\n    )\n}\n*/\n","import { useContext, useMemo } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport RoleManager from \"../../../jacdac-ts/src/jdom/rolemanager\"\n\nexport default function useRoleManager() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const roleManager = useMemo(() => bus && new RoleManager(bus), [bus])\n    return roleManager\n}\n","import { WorkspaceJSON } from \"./dsl/workspacejson\"\nimport { visitWorkspace } from \"./dsl/workspacevisitor\"\n\nexport interface BlockWarning {\n    sourceId?: string\n    message: string\n}\n\nexport function collectWarnings(workspace: WorkspaceJSON): BlockWarning[] {\n    const warnings: BlockWarning[] = []\n    visitWorkspace(workspace, {\n        visitBlock: b => {\n            if (b.warning) warnings.push({ sourceId: b.id, message: b.warning })\n        },\n    })\n    return warnings\n}\n","import { CHANGE } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport { identityTransformData, resolveBlockDefinition } from \"../toolbox\"\nimport { BlockWithServices, resolveBlockServices } from \"../WorkspaceContext\"\n//import nprogress from \"accessible-nprogress\"\n\nconst PROGRESS_DELAY = 200\n\nexport function registerDataSolver(block: BlockWithServices) {\n    const { jacdacServices: services } = block\n    // register data transforms\n    const { transformData } = resolveBlockDefinition(block.type) || {}\n    if (!transformData) return\n\n    const applyTransform = async () => {\n        if (!block.isEnabled() || block.isInFlyout) return\n\n        // transfer data to the next block\n        const nextServices = resolveBlockServices(\n            block.nextConnection?.targetBlock()\n        )\n        try {\n            services.setDataWarning(undefined)\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            let newData: object[]\n            if (transformData === identityTransformData) newData = services.data\n            else {\n                let progressid = setTimeout(() => {\n                    progressid = undefined\n                    // nprogress.start()\n                }, PROGRESS_DELAY)\n                try {\n                    //const start = performance.now()\n                    newData = await transformData(\n                        block,\n                        services.data,\n                        nextServices?.data\n                    )\n                    //const end = performance.now()\n                    //console.debug(\n                    //    `data ${block.type}: ${roundWithPrecision(\n                    //        (end - start) / 1000,\n                    //        3\n                    //    )}s`\n                    //)\n                } finally {\n                    if (progressid) clearTimeout(progressid)\n                    else {\n                        //nprogress.done()\n                    }\n                }\n            }\n\n            // propagate\n            services.transformedData = newData\n\n            // check if pass through\n            const def = resolveBlockDefinition(block.type)\n            if (def?.passthroughData) newData = services.data\n\n            if (nextServices) nextServices.data = newData\n        } catch (e) {\n            console.debug(e)\n        }\n    }\n    // apply transform, then register for change\n    applyTransform().then(() => services.on(CHANGE, applyTransform))\n}\n","import Blockly from \"blockly\"\nimport { useCallback } from \"react\"\nimport ReactField from \"./fields/ReactField\"\nimport useWorkspaceEvent from \"./useWorkspaceEvent\"\n\n// do not use block context\n\nexport default function useBlocklyEvents(workspace: Blockly.WorkspaceSvg) {\n    const handleChange = useCallback(\n        (event: Blockly.Events.Abstract & { type: string }) => {\n            const { type } = event\n            switch (type) {\n                case Blockly.Events.BLOCK_CHANGE: {\n                    const change = event as Blockly.Events.Change\n                    const block = workspace.getBlockById(change.blockId)\n                    // notify twin that the value changed\n                    const twinInput = block.inputList[1]\n                    const twinField = twinInput?.fieldRow.find(\n                        f => f.name === \"twin\"\n                    ) as ReactField<unknown>\n                    twinField?.emitChange?.()\n                    break\n                }\n            }\n        },\n        [workspace]\n    )\n    useWorkspaceEvent(workspace, handleChange)\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Number slider input field.\n * @author kozbial@google.com (Monica Kozbial)\n */\nimport * as Blockly from 'blockly/core';\n/**\n * Slider field.\n */\n\nexport class FieldSlider extends Blockly.FieldNumber {\n  /**\n   * Class for an number slider field.\n   * @param {string|number=} value The initial value of the field. Should\n   *    cast to a number. Defaults to 0.\n   * @param {?(string|number)=} min Minimum value.\n   * @param {?(string|number)=} max Maximum value.\n   * @param {?(string|number)=} precision Precision for value.\n   * @param {?Function=} validator A function that is called to validate\n   *    changes to the field's value. Takes in a number & returns a validated\n   *    number, or null to abort the change.\n   * @param {Object=} config A map of options used to configure the field.\n   *    See the [field creation documentation]{@link\n   * https://developers.google.com/blockly/guides/create-custom-blocks/fields/built-in-fields/number#creation}\n   *    for a list of properties this parameter supports.\n   * @extends {Blockly.FieldNumber}\n   * @constructor\n   */\n  constructor() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var precision = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    var validator = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n    var config = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n    super(value, min, max, precision, validator, config);\n    /**\n     * Array holding info needed to unbind events.\n     * Used for disposing.\n     * Ex: [[node, name, func], [node, name, func]].\n     * @type {!Array.<Array<?>>}\n     * @private\n     */\n\n    this.boundEvents_ = [];\n    /**\n     * The HTML range input element.\n     * @type {?HTMLInputElement}\n     * @private\n     */\n\n    this.sliderInput_ = null;\n  }\n  /**\n   * Constructs a FieldSlider from a JSON arg object.\n   * @param {!Object} options A JSON object with options (value, min, max, and\n   *                          precision).\n   * @return {!FieldSlider} The new field instance.\n   * @package\n   * @nocollapse\n   */\n\n\n  static fromJson(options) {\n    return new FieldSlider(options['value'], undefined, undefined, undefined, undefined, options);\n  }\n  /**\n   * Show the inline free-text editor on top of the text along with the slider\n   *    editor.\n   * @param {Event=} e Optional mouse event that triggered the field to\n   *     open, or undefined if triggered programmatically.\n   * @param {boolean=} _quietInput Quiet input.\n   * @protected\n   * @override\n   */\n\n\n  showEditor_() {\n    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n    var _quietInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var noFocus = Blockly.utils.userAgent.MOBILE || Blockly.utils.userAgent.ANDROID || Blockly.utils.userAgent.IPAD;\n    super.showEditor_(e, noFocus); // Build the DOM.\n\n    var editor = this.dropdownCreate_();\n    Blockly.DropDownDiv.getContentDiv().appendChild(editor);\n    Blockly.DropDownDiv.setColour(this.sourceBlock_.style.colourPrimary, this.sourceBlock_.style.colourTertiary);\n    Blockly.DropDownDiv.showPositionedByField(this, this.dropdownDispose_.bind(this));\n  }\n  /**\n   * Updates the slider when the field rerenders.\n   * @protected\n   * @override\n   */\n\n\n  render_() {\n    super.render_();\n    this.updateSlider_();\n  }\n  /**\n   * Creates the slider editor and add event listeners.\n   * @return {!Element} The newly created slider.\n   * @private\n   */\n\n\n  dropdownCreate_() {\n    var wrapper = document.createElement('div');\n    wrapper.className = 'fieldSliderContainer';\n    var sliderInput = document.createElement('input');\n    sliderInput.setAttribute('type', 'range');\n    sliderInput.setAttribute('min', this.min_);\n    sliderInput.setAttribute('max', this.max_);\n    sliderInput.setAttribute('step', this.precision_);\n    sliderInput.setAttribute('value', this.getValue());\n    sliderInput.className = 'fieldSlider';\n    wrapper.appendChild(sliderInput);\n    this.sliderInput_ = sliderInput;\n    this.boundEvents_.push(Blockly.bindEventWithChecks_(sliderInput, 'input', this, this.onSliderChange_));\n    return wrapper;\n  }\n  /**\n   * Disposes of events belonging to the slider editor.\n   * @private\n   */\n\n\n  dropdownDispose_() {\n    for (var event of this.boundEvents_) {\n      Blockly.unbindEvent_(event);\n    }\n\n    this.sliderInput_ = null;\n  }\n  /**\n   * Sets the text to match the slider's position.\n   * @private\n   */\n\n\n  onSliderChange_() {\n    this.setEditorValue_(this.sliderInput_.value);\n  }\n  /**\n   * Updates the slider when the field rerenders.\n   * @private\n   */\n\n\n  updateSlider_() {\n    if (!this.sliderInput_) {\n      return;\n    }\n\n    this.sliderInput_.setAttribute('value', this.getValue());\n  }\n\n}\nBlockly.fieldRegistry.register('field_slider', FieldSlider);\n/**\n * CSS for slider field.\n */\n\nBlockly.Css.register([\n/* eslint-disable indent */\n\".fieldSliderContainer {\\n      align-items: center;\\n      display: flex;\\n      height: 32px;\\n      justify-content: center;\\n      width: 150px;\\n    }\\n    .fieldSlider {\\n      -webkit-appearance: none;\\n      background: transparent; /* override white in chrome */\\n      margin: 4px;\\n      padding: 0;\\n      width: 100%;\\n    }\\n    .fieldSlider:focus {\\n      outline: none;\\n    }\\n    /* Webkit */\\n    .fieldSlider::-webkit-slider-runnable-track {\\n      background: #ddd;\\n      border-radius: 5px;\\n      height: 10px;\\n    }\\n    .fieldSlider::-webkit-slider-thumb {\\n      -webkit-appearance: none;\\n      background: #fff;\\n      border-radius: 50%;\\n      box-shadow: 0 0 0 4px rgba(255,255,255,.15);\\n      cursor: pointer;\\n      height: 24px;\\n      margin-top: -7px;\\n      width: 24px;\\n    }\\n    /* Firefox */\\n    .fieldSlider::-moz-range-track {\\n      background: #ddd;\\n      border-radius: 5px;\\n      height: 10px;\\n    }\\n    .fieldSlider::-moz-range-thumb {\\n      background: #fff;\\n      border: none;\\n      border-radius: 50%;\\n      box-shadow: 0 0 0 4px rgba(255,255,255,.15);\\n      cursor: pointer;\\n      height: 24px;\\n      width: 24px;\\n    }\\n    .fieldSlider::-moz-focus-outer {\\n      /* override the focus border style */\\n      border: 0;\\n    }\\n    /* IE */\\n    .fieldSlider::-ms-track {\\n      /* IE wont let the thumb overflow the track, so fake it */\\n      background: transparent;\\n      border-color: transparent;\\n      border-width: 15px 0;\\n      /* remove default tick marks */\\n      color: transparent;\\n      height: 10px;\\n      width: 100%;\\n      margin: -4px 0;\\n    }\\n    .fieldSlider::-ms-fill-lower  {\\n      background: #ddd;\\n      border-radius: 5px;\\n    }\\n    .fieldSlider::-ms-fill-upper  {\\n      background: #ddd;\\n      border-radius: 5px;\\n    }\\n    .fieldSlider::-ms-thumb {\\n      background: #fff;\\n      border: none;\\n      border-radius: 50%;\\n      box-shadow: 0 0 0 4px rgba(255,255,255,.15);\\n      cursor: pointer;\\n      height: 24px;\\n      width: 24px;\\n    }\"\n/* eslint-enable indent */\n]);","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nexport * from './field_slider';","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Overrides methods on Blockly.InsertionMarkerManager to\n * allow blocks to hook in dynamic functionality when they have pending\n * connections.\n * @author anjali@code.org (Anjali Pal)\n */\nimport * as Blockly from 'blockly/core';\n\nBlockly.InsertionMarkerManager.prototype.update = function (dxy, deleteArea) {\n  var candidate = this.getCandidate_(dxy);\n  this.wouldDeleteBlock_ = this.shouldDelete_(candidate, deleteArea);\n  var shouldUpdate = this.wouldDeleteBlock_ || this.shouldUpdatePreviews_(candidate, dxy);\n\n  if (shouldUpdate) {\n    // Begin monkey patch\n    if (candidate.closest && candidate.closest.sourceBlock_.onPendingConnection) {\n      candidate.closest.sourceBlock_.onPendingConnection(candidate.closest);\n\n      if (!this.pendingBlocks) {\n        this.pendingBlocks = new Set();\n      }\n\n      this.pendingBlocks.add(candidate.closest.sourceBlock_);\n    } // End monkey patch\n    // Don't fire events for insertion marker creation or movement.\n\n\n    Blockly.Events.disable();\n    this.maybeHidePreview_(candidate);\n    this.maybeShowPreview_(candidate);\n    Blockly.Events.enable();\n  }\n};\n\nvar oldDispose = Blockly.InsertionMarkerManager.prototype.dispose;\n\nBlockly.InsertionMarkerManager.prototype.dispose = function () {\n  if (this.pendingBlocks) {\n    this.pendingBlocks.forEach(block => {\n      if (block.finalizeConnections) {\n        block.finalizeConnections();\n      }\n    });\n  }\n\n  oldDispose.call(this);\n};","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Defines a version of the if block with dyanmic\n *     inputs that appear when a block is dragged over inputs on the block.\n */\nimport * as Blockly from 'blockly/core';\nBlockly.Blocks['dynamic_if'] = {\n  /**\n   * Counter for the next input to add to this block.\n   * @type {number}\n   */\n  inputCounter: 1,\n\n  /**\n   * Minimum number of inputs for this block.\n   * @type {number}\n   */\n  minInputs: 1,\n\n  /**\n   * Block for if/elseif/else statements. Must have one if input.\n   * Can have any number of elseif inputs and optionally one else input.\n   * @this {Blockly.Block}\n   */\n  init: function init() {\n    this.setHelpUrl(Blockly.Msg['CONTROLS_IF_HELPURL']);\n    this.setStyle('logic_blocks');\n    this.appendValueInput('IF0').setCheck('Boolean').appendField(Blockly.Msg['CONTROLS_IF_MSG_IF'], 'if');\n    this.appendStatementInput('DO0').appendField(Blockly.Msg['CONTROLS_IF_MSG_THEN']);\n    this.setNextStatement(true);\n    this.setPreviousStatement(true);\n    this.setTooltip(Blockly.Msg['LISTS_CREATE_WITH_TOOLTIP']);\n  },\n\n  /**\n   * Create XML to represent if/elseif/else inputs.\n   * @return {!Element} XML storage element.\n   * @this {Blockly.Block}\n   */\n  mutationToDom: function mutationToDom() {\n    var container = Blockly.utils.xml.createElement('mutation');\n    var inputNames = this.inputList.filter(input => input.name.includes('IF')).map(input => input.name.replace('IF', '')).join(',');\n    container.setAttribute('inputs', inputNames);\n    var hasElse = !!this.getInput('ELSE');\n    container.setAttribute('else', hasElse);\n    container.setAttribute('next', this.inputCounter);\n    return container;\n  },\n\n  /**\n   * Parse XML to restore the inputs.\n   * @param {!Element} xmlElement XML storage element.\n   * @this {Blockly.Block}\n   */\n  domToMutation: function domToMutation(xmlElement) {\n    var inputs = xmlElement.getAttribute('inputs');\n\n    if (inputs) {\n      var inputNumbers = inputs.split(',');\n\n      if (this.getInput('IF0')) {\n        this.removeInput('IF0');\n      }\n\n      if (this.getInput('DO0')) {\n        this.removeInput('DO0');\n      }\n\n      var first = inputNumbers[0];\n      this.appendValueInput('IF' + first).setCheck('Boolean').appendField(Blockly.Msg['CONTROLS_IF_MSG_IF'], 'if');\n      this.appendStatementInput('DO' + first).appendField(Blockly.Msg['CONTROLS_IF_MSG_THEN']);\n\n      for (var i = 1; i < inputNumbers.length; i++) {\n        this.appendValueInput('IF' + inputNumbers[i]).setCheck('Boolean').appendField(Blockly.Msg['CONTROLS_IF_MSG_ELSEIF'], 'elseif');\n        this.appendStatementInput('DO' + inputNumbers[i]).appendField(Blockly.Msg['CONTROLS_IF_MSG_THEN']);\n      }\n    }\n\n    var hasElse = xmlElement.getAttribute('else');\n\n    if (hasElse == 'true') {\n      this.appendStatementInput('ELSE').appendField(Blockly.Msg['CONTROLS_IF_MSG_ELSE'], 'else');\n    }\n\n    var next = parseInt(xmlElement.getAttribute('next'));\n    this.inputCounter = next;\n  },\n\n  /**\n   * Finds the index of a connection. Used to determine where in the block to\n   * insert new inputs.\n   * @param {!Blockly.Connection} connection A connection on this block.\n   * @return {?number} The index of the connection in the this.inputList.\n   */\n  findInputIndexForConnection: function findInputIndexForConnection(connection) {\n    for (var i = 0; i < this.inputList.length; i++) {\n      var input = this.inputList[i];\n\n      if (input.connection == connection) {\n        return i;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Inserts a boolean value input and statement input at the specified index.\n   * @param {number} index Index of the input before which to add new inputs.\n   */\n  insertElseIf: function insertElseIf(index) {\n    var caseNumber = this.inputCounter;\n    this.appendValueInput('IF' + caseNumber).setCheck('Boolean').appendField(Blockly.Msg['CONTROLS_IF_MSG_ELSEIF'], 'elseif');\n    this.appendStatementInput('DO' + caseNumber).appendField(Blockly.Msg['CONTROLS_IF_MSG_THEN']);\n    this.moveInputBefore('IF' + caseNumber, this.inputList[index].name);\n    this.moveInputBefore('DO' + caseNumber, this.inputList[index + 1].name);\n    this.inputCounter++;\n  },\n\n  /**\n   * Called when a block is dragged over one of the connections on this block.\n   * @param {!Blockly.Connection} connection The connection on this block that\n   * has a pending connection.\n   */\n  onPendingConnection: function onPendingConnection(connection) {\n    if (connection.type === Blockly.NEXT_STATEMENT && !this.getInput('ELSE')) {\n      this.appendStatementInput('ELSE').appendField(Blockly.Msg['CONTROLS_IF_MSG_ELSE'], 'else');\n    }\n\n    var inputIndex = this.findInputIndexForConnection(connection);\n\n    if (inputIndex === null) {\n      return;\n    }\n\n    var input = this.inputList[inputIndex];\n\n    if (connection.targetConnection && input.name.includes('IF')) {\n      var nextIfInput = this.inputList[inputIndex + 2];\n\n      if (!nextIfInput || nextIfInput.name == 'ELSE') {\n        this.insertElseIf(inputIndex + 2);\n      } else {\n        var nextIfConnection = nextIfInput && nextIfInput.connection.targetConnection;\n\n        if (nextIfConnection && !nextIfConnection.sourceBlock_.isInsertionMarker()) {\n          this.insertElseIf(inputIndex + 2);\n        }\n      }\n    }\n  },\n\n  /**\n   * Called when a block drag ends if the dragged block had a pending connection\n   * with this block.\n   */\n  finalizeConnections: function finalizeConnections() {\n    var toRemove = []; // Remove Else If inputs if neither the if nor the do has a connected block.\n\n    for (var i = 2; i < this.inputList.length - 1; i += 2) {\n      var ifConnection = this.inputList[i];\n      var doConnection = this.inputList[i + 1];\n\n      if (!ifConnection.connection.targetConnection && !doConnection.connection.targetConnection) {\n        toRemove.push(ifConnection.name);\n        toRemove.push(doConnection.name);\n      }\n    }\n\n    toRemove.forEach(input => this.removeInput(input)); // Remove Else input if it doesn't have a connected block.\n\n    var elseInput = this.getInput('ELSE');\n\n    if (elseInput && !elseInput.connection.targetConnection) {\n      this.removeInput(elseInput.name);\n    } // Remove the If input if it is empty and there is at least one Else If\n\n\n    if (this.inputList.length > 2) {\n      var ifInput = this.inputList[0];\n      var doInput = this.inputList[1];\n      var nextInput = this.inputList[2];\n\n      if (nextInput.name.includes('IF') && !ifInput.connection.targetConnection && !doInput.connection.targetConnection) {\n        this.removeInput(ifInput.name);\n        this.removeInput(doInput.name);\n        nextInput.removeField('elseif');\n        nextInput.appendField(Blockly.Msg['CONTROLS_IF_MSG_IF'], 'if');\n      }\n    }\n  }\n};","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Defines a version of the text_join block with dyanmic\n *    inputs that appear when a block is dragged over inputs on the block.\n */\nimport * as Blockly from 'blockly/core';\nBlockly.Blocks['dynamic_text_join'] = {\n  /**\n   * Counter for the next input to add to this block.\n   * @type {number}\n   */\n  inputCounter: 2,\n\n  /**\n   * Minimum number of inputs for this block.\n   * @type {number}\n   */\n  minInputs: 2,\n\n  /**\n   * Block for concatenating any number of strings.\n   * @this {Blockly.Block}\n   */\n  init: function init() {\n    this.setHelpUrl(Blockly.Msg['TEXT_JOIN_HELPURL']);\n    this.setStyle('text_blocks');\n    this.appendValueInput('ADD0').appendField(Blockly.Msg['TEXT_JOIN_TITLE_CREATEWITH']);\n    this.appendValueInput('ADD1');\n    this.setOutput(true, 'String');\n    this.setTooltip(Blockly.Msg['TEXT_JOIN_TOOLTIP']);\n  },\n\n  /**\n   * Create XML to represent number of text inputs.\n   * @return {!Element} XML storage element.\n   * @this {Blockly.Block}\n   */\n  mutationToDom: function mutationToDom() {\n    var container = Blockly.utils.xml.createElement('mutation');\n    var inputNames = this.inputList.map(input => input.name).join(',');\n    container.setAttribute('inputs', inputNames);\n    container.setAttribute('next', this.inputCounter);\n    return container;\n  },\n\n  /**\n   * Parse XML to restore the text inputs.\n   * @param {!Element} xmlElement XML storage element.\n   * @this {Blockly.Block}\n   */\n  domToMutation: function domToMutation(xmlElement) {\n    var items = xmlElement.getAttribute('inputs');\n\n    if (items) {\n      var inputNames = items.split(',');\n      this.inputList = [];\n      inputNames.forEach(name => this.appendValueInput(name));\n      this.inputList[0].appendField(Blockly.Msg['TEXT_JOIN_TITLE_CREATEWITH']);\n    }\n\n    var next = parseInt(xmlElement.getAttribute('next'));\n    this.inputCounter = next;\n  },\n\n  /**\n   * Check whether a new input should be added and determine where it should go.\n   * @param {!Blockly.Connection} connection The connection that has a\n   *     pending connection.\n   * @return {number} The index before which to insert a new input,\n   *     or null if no input should be added.\n   */\n  getIndexForNewInput: function getIndexForNewInput(connection) {\n    if (!connection.targetConnection) {\n      // this connection is available\n      return null;\n    }\n\n    var connectionIndex;\n\n    for (var i = 0; i < this.inputList.length; i++) {\n      if (this.inputList[i].connection == connection) {\n        connectionIndex = i;\n      }\n    }\n\n    if (connectionIndex == this.inputList.length - 1) {\n      // this connection is the last one and already has a block in it, so\n      // we should add a new connection at the end.\n      return this.inputList.length + 1;\n    }\n\n    var nextInput = this.inputList[connectionIndex + 1];\n    var nextConnection = nextInput && nextInput.connection.targetConnection;\n\n    if (nextConnection && !nextConnection.sourceBlock_.isInsertionMarker()) {\n      return connectionIndex + 1;\n    } // Don't add new connection\n\n\n    return null;\n  },\n\n  /**\n   * Called when a block is dragged over one of the connections on this block.\n   * @param {!Blockly.Connection} connection The connection on this block that\n   *     has a pending connection.\n   */\n  onPendingConnection: function onPendingConnection(connection) {\n    var insertIndex = this.getIndexForNewInput(connection);\n\n    if (insertIndex == null) {\n      return;\n    }\n\n    this.appendValueInput('ADD' + this.inputCounter++);\n    this.moveNumberedInputBefore(this.inputList.length - 1, insertIndex);\n  },\n\n  /**\n   * Called when a block drag ends if the dragged block had a pending connection\n   * with this block.\n   */\n  finalizeConnections: function finalizeConnections() {\n    if (this.inputList.length > this.minInputs) {\n      var toRemove = [];\n      this.inputList.forEach(input => {\n        var targetConnection = input.connection.targetConnection;\n\n        if (!targetConnection) {\n          toRemove.push(input.name);\n        }\n      });\n\n      if (this.inputList.length - toRemove.length < this.minInputs) {\n        // Always show at least two inputs\n        toRemove = toRemove.slice(this.minInputs);\n      }\n\n      toRemove.forEach(inputName => this.removeInput(inputName)); // The first input should have the block text. If we removed the\n      // first input, add the block text to the new first input.\n\n      if (this.inputList[0].fieldRow.length == 0) {\n        this.inputList[0].appendField(Blockly.Msg['TEXT_JOIN_TITLE_CREATEWITH']);\n      }\n    }\n  }\n};","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Defines a version of the list_create block with dyanmic\n *     inputs that appear when a block is dragged over inputs on the block.\n */\nimport * as Blockly from 'blockly/core';\nBlockly.Blocks['dynamic_list_create'] = {\n  /**\n   * Counter for the next input to add to this block.\n   * @type {number}\n   */\n  inputCounter: 2,\n\n  /**\n   * Minimum number of inputs for this block.\n   * @type {number}\n   */\n  minInputs: 2,\n\n  /**\n   * Block for concatenating any number of strings.\n   * @this {Blockly.Block}\n   */\n  init: function init() {\n    this.setHelpUrl(Blockly.Msg['LISTS_CREATE_WITH_HELPURL']);\n    this.setStyle('list_blocks');\n    this.appendValueInput('ADD0').appendField(Blockly.Msg['LISTS_CREATE_WITH_INPUT_WITH']);\n    this.appendValueInput('ADD1');\n    this.setOutput(true, 'Array');\n    this.setTooltip(Blockly.Msg['LISTS_CREATE_WITH_TOOLTIP']);\n  },\n\n  /**\n   * Create XML to represent number of text inputs.\n   * @return {!Element} XML storage element.\n   * @this {Blockly.Block}\n   */\n  mutationToDom: function mutationToDom() {\n    var container = Blockly.utils.xml.createElement('mutation');\n    var inputNames = this.inputList.map(input => input.name).join(',');\n    container.setAttribute('inputs', inputNames);\n    container.setAttribute('next', this.inputCounter);\n    return container;\n  },\n\n  /**\n   * Parse XML to restore the text inputs.\n   * @param {!Element} xmlElement XML storage element.\n   * @this {Blockly.Block}\n   */\n  domToMutation: function domToMutation(xmlElement) {\n    var items = xmlElement.getAttribute('inputs');\n\n    if (items) {\n      var inputNames = items.split(',');\n      this.inputList = [];\n      inputNames.forEach(name => this.appendValueInput(name));\n      this.inputList[0].appendField(Blockly.Msg['LISTS_CREATE_WITH_INPUT_WITH']);\n    }\n\n    var next = parseInt(xmlElement.getAttribute('next'));\n    this.inputCounter = next;\n  },\n\n  /**\n   * Check whether a new input should be added and determine where it should go.\n   * @param {!Blockly.Connection} connection The connection that has a\n   *     pending connection.\n   * @return {number} The index before which to insert a new input,\n   *     or null if no input should be added.\n   */\n  getIndexForNewInput: function getIndexForNewInput(connection) {\n    if (!connection.targetConnection) {\n      // this connection is available\n      return null;\n    }\n\n    var connectionIndex;\n\n    for (var i = 0; i < this.inputList.length; i++) {\n      if (this.inputList[i].connection == connection) {\n        connectionIndex = i;\n      }\n    }\n\n    if (connectionIndex == this.inputList.length - 1) {\n      // this connection is the last one and already has a block in it, so\n      // we should add a new connection at the end.\n      return this.inputList.length + 1;\n    }\n\n    var nextInput = this.inputList[connectionIndex + 1];\n    var nextConnection = nextInput && nextInput.connection.targetConnection;\n\n    if (nextConnection && !nextConnection.sourceBlock_.isInsertionMarker()) {\n      return connectionIndex + 1;\n    } // Don't add new connection\n\n\n    return null;\n  },\n\n  /**\n   * Called when a block is dragged over one of the connections on this block.\n   * @param {!Blockly.Connection} connection The connection on this block that\n   * has a pending connection.\n   */\n  onPendingConnection: function onPendingConnection(connection) {\n    var insertIndex = this.getIndexForNewInput(connection);\n\n    if (insertIndex == null) {\n      return;\n    }\n\n    this.appendValueInput('ADD' + this.inputCounter++);\n    this.moveNumberedInputBefore(this.inputList.length - 1, insertIndex);\n  },\n\n  /**\n   * Called when a block drag ends if the dragged block had a pending connection\n   * with this block.\n   */\n  finalizeConnections: function finalizeConnections() {\n    if (this.inputList.length > this.minInputs) {\n      var toRemove = [];\n      this.inputList.forEach(input => {\n        var targetConnection = input.connection.targetConnection;\n\n        if (!targetConnection) {\n          toRemove.push(input.name);\n        }\n      });\n\n      if (this.inputList.length - toRemove.length < this.minInputs) {\n        // Always show at least two inputs\n        toRemove = toRemove.slice(this.minInputs);\n      }\n\n      toRemove.forEach(inputName => this.removeInput(inputName)); // The first input should have the block text. If we removed the\n      // first input, add the block text to the new first input.\n\n      if (this.inputList[0].fieldRow.length == 0) {\n        this.inputList[0].appendField(Blockly.Msg['LISTS_CREATE_WITH_INPUT_WITH']);\n      }\n    }\n  }\n};","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Adds blocks that replace the built-in mutator UI with dynamic\n *     connections that appear when a block is dragged over inputs on the block.\n */\nimport * as Blockly from 'blockly/core';\nimport './insertion_marker_manager_monkey_patch';\nimport './dynamic_if.js';\nimport './dynamic_text_join.js';\nimport './dynamic_list_create.js';\nexport var overrideOldBlockDefinitions = function overrideOldBlockDefinitions() {\n  Blockly.Blocks['list_create'] = Blockly.Blocks['dynamic_list_create'];\n  Blockly.Blocks['text_join'] = Blockly.Blocks['dynamic_text_join'];\n  Blockly.Blocks['controls_if'] = Blockly.Blocks['dynamic_if'];\n};","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Plugin for changing the context menu to match the\n * `disableOrphans` event handler.\n */\nimport * as Blockly from 'blockly/core';\n/**\n * This plugin changes the logic of the enable/disable context menu item. It is\n * enabled for all blocks except top-level blocks that have output or\n * previous connections. In other words, the option is disabled for orphan\n * blocks. Using this plugin allows users to disable valid non-orphan blocks,\n * but not re-enable blocks that have been automatically disabled by\n * `disableOrphans`.\n */\n\nexport class DisableTopBlocks {\n  /**\n   * Modifies the context menu 'disable' option as described above.\n   */\n  init() {\n    var disableMenuItem = Blockly.ContextMenuRegistry.registry.getItem('blockDisable');\n    this.oldPreconditionFn = disableMenuItem.preconditionFn;\n\n    disableMenuItem.preconditionFn = function (\n    /** @type {!Blockly.ContextMenuRegistry.Scope} */\n    scope) {\n      var block = scope.block;\n\n      if (!block.isInFlyout && block.workspace.options.disable && block.isEditable()) {\n        if (block.getInheritedDisabled() || isOrphan(block)) {\n          return 'disabled';\n        }\n\n        return 'enabled';\n      }\n\n      return 'hidden';\n    };\n  }\n  /**\n   * Turn off the effects of this plugin and restore the initial behavior.\n   * This is never required to be called. It is optional in case you need to\n   * disable the plugin.\n   */\n\n\n  dispose() {\n    var disableMenuItem = Blockly.ContextMenuRegistry.registry.getItem('blockDisable');\n    disableMenuItem.preconditionFn = this.oldPreconditionFn;\n  }\n\n}\n/**\n * A block is an orphan if its parent is an orphan, or if it doesn't have a\n * parent but it does have a previous or output connection (so it expects to be\n * attached to something). This means all children of orphan blocks are also\n * orphans and cannot be manually re-enabled.\n * @param {!Blockly.BlockSvg} block Block to check.\n * @return {boolean} Whether the block is an orphan.\n */\n\nfunction isOrphan(block) {\n  // If the parent is an orphan block, this block should also be considered\n  // an orphan so it cannot be manually re-enabled.\n  var parent =\n  /** @type {Blockly.BlockSvg} */\n  block.getParent();\n\n  if (parent && isOrphan(parent)) {\n    return true;\n  }\n\n  return !parent && !!(block.outputConnection || block.previousConnection);\n}","import Blockly, { ContextMenuRegistry } from \"blockly\"\nimport \"@blockly/field-slider\"\nimport \"@blockly/block-dynamic-connection\"\nimport { useEffect } from \"react\"\nimport { DisableTopBlocks } from \"@blockly/disable-top-blocks\"\n\n// do not use block context\n\nexport default function useBlocklyPlugins(workspace: Blockly.WorkspaceSvg) {\n    //plugins\n    useEffect(() => {\n        if (!workspace) return\n\n        // context menu stuff\n        if (ContextMenuRegistry.registry.getItem(\"blockInline\"))\n            ContextMenuRegistry.registry.unregister(\"blockInline\")\n        if (ContextMenuRegistry.registry.getItem(\"cleanWorkspace\"))\n            ContextMenuRegistry.registry.unregister(\"cleanWorkspace\")\n\n        // Add the disableOrphans event handler. This is not done automatically by\n        // the plugin and should be handled by your application.\n        workspace.addChangeListener(Blockly.Events.disableOrphans)\n\n        // The plugin must be initialized before it has any effect.\n        const disableTopBlocksPlugin = new DisableTopBlocks()\n        disableTopBlocksPlugin.init()\n        return () =>\n            workspace.removeChangeListener(Blockly.Events.disableOrphans)\n    }, [workspace])\n}\n","import { DependencyList, useState } from \"react\"\nimport useEffectAsync from \"../useEffectAsync\"\n\nexport default function useAsyncMemo<T>(\n    factory: () => T | Promise<T>,\n    deps?: DependencyList\n) {\n    const [value, setValue] = useState<T>()\n    useEffectAsync(async mounted => {\n        const v = await factory()\n        if (mounted()) setValue(v)\n    }, deps || [])\n    return value\n}\n","import Blockly from \"blockly\"\nimport { useEffect, useMemo } from \"react\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport useServices from \"../hooks/useServices\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { Theme, useTheme } from \"@mui/material\"\nimport { registerFields } from \"./fields/fields\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    ButtonDefinition,\n    CategoryDefinition,\n    ServiceBlockDefinitionFactory,\n    ToolboxConfiguration,\n    visitToolbox,\n} from \"./toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl/dsl\"\nimport { addDataPreviewField } from \"./fields/DataPreviewField\"\nimport { WorkspaceJSON } from \"./dsl/workspacejson\"\nimport useAsyncMemo from \"../hooks/useAsyncMemo\"\n\n// overrides blockly emboss filter for svg elements\nBlockly.BlockSvg.prototype.setHighlighted = function (highlighted) {\n    if (!this.rendered) {\n        return\n    }\n    if (highlighted) {\n        this.addSelect()\n    } else {\n        this.removeSelect()\n    }\n}\n\ntype CachedBlockDefinitions = {\n    blocks: BlockDefinition[]\n}\n\nasync function loadBlocks(\n    dsls: BlockDomainSpecificLanguage[],\n    theme: Theme\n): Promise<CachedBlockDefinitions> {\n    const blocks: BlockDefinition[] = []\n    for (const dsl of dsls) {\n        const dslBlocks = await dsl?.createBlocks?.({ theme })\n        if (dslBlocks)\n            for (const b of dslBlocks) {\n                addDataPreviewField(b)\n                b.dsl = dsl.id // ensure DSL is set\n                blocks.push(b)\n            }\n    }\n    // register field editors\n    registerFields()\n    // re-register blocks with blocklys\n    blocks.forEach(\n        block =>\n            (Blockly.Blocks[block.type] = <\n                ServiceBlockDefinitionFactory<BlockDefinition>\n            >{\n                jacdacDefinition: block,\n                init: function () {\n                    this.jsonInit(block)\n                },\n            })\n    )\n\n    return {\n        blocks,\n    }\n}\n\nfunction patchCategoryJSONtoXML(cat: CategoryDefinition): CategoryDefinition {\n    cat.contents\n        ?.filter(node => node.kind === \"block\")\n        .map(node => <BlockReference>node)\n        .filter(block => {\n            const exists = Blockly.Blocks[block.type]\n            if (!exists && Flags.diagnostics)\n                console.warn(\n                    `block type '${block.type}' not found, consider refreshing page...`\n                )\n            return !!block.values && exists\n        }) // avoid broken blocks\n        .forEach(block => {\n            // yup, this suck but we have to go through it\n            block.blockxml = `<block type=\"${block.type}\">${Object.keys(\n                block.values\n            )\n                .map(name => {\n                    const { type } = block.values[name]\n                    const shadow = type !== \"variables_get\"\n                    return `<value name=\"${name}\"><${\n                        shadow ? \"shadow\" : \"field\"\n                    } type=\"${type}\" /></value>`\n                })\n                .join(\"\\n\")}</block>`\n            delete block.type\n        })\n    return cat\n}\n\nexport default function useToolbox(\n    dsls: BlockDomainSpecificLanguage[],\n    source: WorkspaceJSON\n): ToolboxConfiguration {\n    const liveServices = useServices({ specification: true })\n    const theme = useTheme()\n\n    const blocks = useAsyncMemo(async () => {\n        const r = await loadBlocks(dsls, theme)\n        if (Flags.diagnostics) console.debug(`blocks`, r)\n        return r\n    }, [theme, dsls])\n    const toolboxConfiguration = useMemo(() => {\n        if (!blocks) return undefined\n\n        const dslsCategories = arrayConcatMany(\n            dsls.map(dsl =>\n                dsl?.createCategory?.({ theme, source, liveServices })\n            )\n        )\n            .filter(cat => !!cat)\n            .sort((l, r) => -((l.order || 0) - (r.order || 0)))\n        const contents = dslsCategories.map(node =>\n            node.kind === \"category\"\n                ? patchCategoryJSONtoXML(node as CategoryDefinition)\n                : node\n        )\n        // remove trailing separators\n        while (contents[0]?.kind === \"sep\") contents.shift()\n        while (contents[contents.length - 1]?.kind === \"sep\") contents.pop()\n        //\n        return <ToolboxConfiguration>{\n            kind: \"categoryToolbox\",\n            contents,\n        }\n    }, [\n        blocks,\n        theme,\n        dsls,\n        source,\n        (liveServices || []).map(srv => srv.id).join(\",\"),\n    ])\n\n    return toolboxConfiguration\n}\n\n// do not use block context\n\nexport function useToolboxButtons(\n    workspace: Blockly.WorkspaceSvg,\n    toolboxConfiguration: ToolboxConfiguration\n) {\n    // track workspace changes and update callbacks\n    useEffect(() => {\n        if (!workspace) return\n\n        // collect buttons\n        const buttons: ButtonDefinition[] = []\n        visitToolbox(toolboxConfiguration, {\n            visitButton: btn => buttons.push(btn),\n        })\n        // register buttons\n        buttons.forEach(button =>\n            workspace.registerButtonCallback(button.callbackKey, () =>\n                button.callback(workspace)\n            )\n        )\n        // cleanup\n        return () =>\n            buttons.forEach(button =>\n                workspace.removeButtonCallback(button.callbackKey)\n            )\n    }, [workspace, toolboxConfiguration])\n}\n","import { Events, WorkspaceSvg, Xml } from \"blockly\"\nimport React, {\n    createContext,\n    ReactNode,\n    useContext,\n    useEffect,\n    useState,\n} from \"react\"\nimport {\n    CHANGE,\n    DEVICE_ANNOUNCE,\n    DEVICE_DISCONNECT,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { arrayConcatMany, toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport RoleManager from \"../../../jacdac-ts/src/jdom/rolemanager\"\nimport bus from \"../../jacdac/providerbus\"\nimport useRoleManager from \"../hooks/useRoleManager\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport { BlockWarning, collectWarnings } from \"./blockwarning\"\nimport { registerDataSolver } from \"./dsl/datasolver\"\nimport BlockDomainSpecificLanguage from \"./dsl/dsl\"\nimport { workspaceToJSON } from \"./jsongenerator\"\nimport {\n    JSON_WARNINGS_CATEGORY,\n    NEW_PROJET_XML,\n    ToolboxConfiguration,\n    WORKSPACE_FILENAME,\n} from \"./toolbox\"\nimport useBlocklyEvents from \"./useBlocklyEvents\"\nimport useBlocklyPlugins from \"./useBlocklyPlugins\"\nimport useToolbox, { useToolboxButtons } from \"./useToolbox\"\nimport {\n    BlockServices,\n    BlockWithServices,\n    FieldWithServices,\n    resolveWorkspaceServices,\n    WorkspaceServices,\n    WorkspaceWithServices,\n} from \"./WorkspaceContext\"\nimport AppContext from \"../AppContext\"\nimport { WorkspaceFile, WorkspaceJSON } from \"./dsl/workspacejson\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport useChange from \"../../jacdac/useChange\"\nimport FileSystemContext from \"../FileSystemContext\"\nimport { resolveBlockWarnings } from \"./WorkspaceContext\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport {\n    DslMessage,\n    DslOptionsMessage,\n    DslWorkspaceFileMessage,\n} from \"./dsl/iframedsl\"\nimport { AllOptions } from \"./fields/IFrameDataChooserField\"\nimport {\n    dashify,\n    humanify,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport { toServiceName, toServiceType } from \"./dsl/servicesbase\"\n\nexport interface BlockProps {\n    editorId: string\n    setEditorId: (id: string) => void\n\n    dsls: BlockDomainSpecificLanguage[]\n    workspace: WorkspaceSvg\n    workspaceXml: string\n    workspaceJSON: WorkspaceJSON\n    toolboxConfiguration: ToolboxConfiguration\n    roleManager: RoleManager\n    dragging: boolean\n    setWorkspace: (ws: WorkspaceSvg) => void\n    setWorkspaceXml: (value: string) => void\n    setWarnings: (category: string, warnings: BlockWarning[]) => void\n}\n\nconst BlockContext = createContext<BlockProps>({\n    editorId: \"\",\n    setEditorId: () => {},\n    dsls: [],\n    workspace: undefined,\n    workspaceXml: undefined,\n    workspaceJSON: undefined,\n    toolboxConfiguration: undefined,\n    roleManager: undefined,\n    dragging: false,\n    setWarnings: () => {},\n    setWorkspace: () => {},\n    setWorkspaceXml: () => {},\n})\nBlockContext.displayName = \"Block\"\n\nconst DEFAULT_XML = '<xml xmlns=\"http://www.w3.org/1999/xhtml\"></xml>'\n\nexport default BlockContext\n\n// eslint-disable-next-line react/prop-types\nexport function BlockProvider(props: {\n    storageKey: string\n    dsls: BlockDomainSpecificLanguage[]\n    onBeforeSaveWorkspaceFile?: (file: WorkspaceFile) => void\n    children: ReactNode\n}) {\n    const { storageKey, dsls, children, onBeforeSaveWorkspaceFile } = props\n    const { setError } = useContext(AppContext)\n    const { fileSystem } = useContext(FileSystemContext)\n    const workspaceDirectory = useChange(fileSystem, _ => _?.workingDirectory)\n    const workspaceFile = useChange(workspaceDirectory, _ =>\n        _?.file(WORKSPACE_FILENAME, { create: true })\n    )\n    const [storedXml, setStoredXml] = useLocalStorage(\n        storageKey,\n        NEW_PROJET_XML\n    )\n    const roleManager = useRoleManager()\n    const [workspace, setWorkspace] = useState<WorkspaceSvg>(undefined)\n    const [workspaceXml, _setWorkspaceXml] = useState<string>(storedXml)\n    const [workspaceJSON, setWorkspaceJSON] = useState<WorkspaceJSON>(undefined)\n    const [warnings, _setWarnings] = useState<\n        {\n            category: string\n            entries: BlockWarning[]\n        }[]\n    >([])\n    const [dragging, setDragging] = useState(false)\n    const [editorId, setEditorId] = useState(\"\")\n\n    const setWorkspaceXml = (xml: string) => {\n        _setWorkspaceXml(xml)\n        setStoredXml(xml)\n    }\n\n    const setWarnings = (category: string, entries: BlockWarning[]) => {\n        const i = warnings.findIndex(w => w.category === category)\n        _setWarnings([\n            ...warnings.slice(0, i),\n            {\n                category,\n                entries,\n            },\n            ...warnings.slice(i + 1),\n        ])\n    }\n    const loadWorkspaceFile = (file: WorkspaceFile) => {\n        const { editor, xml } = file || {}\n        if (editor !== editorId)\n            throw new Error(`wrong block editor (${editor} != ${editorId}`)\n        // try loading xml into a dummy blockly workspace\n        const dom = Xml.textToDom(xml || DEFAULT_XML)\n        // all good, load in workspace\n        workspace.clear()\n        Xml.domToWorkspace(dom, workspace)\n    }\n\n    const toolboxConfiguration = useToolbox(dsls, workspaceJSON)\n    const initializeBlockServices = (block: BlockWithServices) => {\n        if (block?.jacdacServices?.initialized) return\n\n        let services = block.jacdacServices\n        if (!services) {\n            services = block.jacdacServices = new BlockServices()\n            block.inputList?.forEach(i =>\n                i.fieldRow?.forEach(f =>\n                    (\n                        f as unknown as FieldWithServices\n                    ).notifyServicesChanged?.()\n                )\n            )\n        }\n        services.initialized = true\n        registerDataSolver(block)\n    }\n\n    const handleBlockChange = (blockId: string) => {\n        const block = workspace.getBlockById(blockId) as BlockWithServices\n        const services = block?.jacdacServices\n        if (block && !block.isEnabled()) {\n            services?.clearData()\n        } else services?.emit(CHANGE)\n    }\n\n    const handleWorkspaceEvent = (event: {\n        type: string\n        workspaceId: string\n    }) => {\n        const { type, workspaceId } = event\n        if (workspaceId !== workspace.id) return\n        //console.log(`blockly: ${type}`, event)\n        if (type === Events.BLOCK_DRAG) {\n            const dragEvent = event as Events.BlockDrag\n            setDragging(!!dragEvent.isStart)\n        } else if (type === Events.FINISHED_LOADING) {\n            workspace\n                .getAllBlocks(false)\n                .forEach(b => initializeBlockServices(b as BlockWithServices))\n        } else if (type === Events.BLOCK_CREATE) {\n            const bev = event as unknown as Events.BlockCreate\n            const block = workspace.getBlockById(\n                bev.blockId\n            ) as BlockWithServices\n            initializeBlockServices(block)\n        } else if (type === Events.BLOCK_MOVE) {\n            const cev = event as unknown as Events.BlockMove\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const parentId = (cev as any).newParentId\n            if (parentId) handleBlockChange(parentId)\n        } else if (type === Events.BLOCK_CHANGE) {\n            const cev = event as unknown as Events.BlockChange\n            handleBlockChange(cev.blockId)\n        }\n    }\n\n    // mounting dsts\n    useEffect(() => {\n        const unmounnts = dsls\n            .map(dsl => dsl.mount?.(workspace))\n            .filter(u => !!u)\n        return () => {\n            unmounnts.forEach(u => u())\n        }\n    }, [workspace])\n\n    // plugins\n    useBlocklyPlugins(workspace)\n    useBlocklyEvents(workspace)\n    useToolboxButtons(workspace, toolboxConfiguration)\n\n    // role manager\n    useEffect(() => {\n        const services = resolveWorkspaceServices(workspace)\n        if (services) services.roleManager = roleManager\n    }, [workspace, roleManager])\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const wws = workspace as unknown as WorkspaceWithServices\n        if (wws && !wws.jacdacServices) {\n            wws.jacdacServices = new WorkspaceServices()\n            wws.jacdacServices.roleManager = roleManager\n        }\n    }, [workspace])\n    useEffect(() => {\n        const services = resolveWorkspaceServices(workspace)\n        if (services) services.workingDirectory = workspaceDirectory\n    }, [workspace, workspaceDirectory])\n    useEffect(() => {\n        if (!workspace || dragging) return\n\n        const newWorkspaceJSON = workspaceToJSON(workspace, dsls)\n        setWorkspaceJSON(newWorkspaceJSON)\n        const newWarnings = collectWarnings(newWorkspaceJSON)\n        setWarnings(JSON_WARNINGS_CATEGORY, newWarnings)\n    }, [dsls, workspace, dragging, workspaceXml])\n    useEffectAsync(\n        async mounted => {\n            if (!workspaceFile) return\n            try {\n                const text = await workspaceFile.textAsync()\n                if (!mounted()) return\n\n                const json = JSON.parse(text) as WorkspaceFile\n                loadWorkspaceFile(json)\n            } catch (e) {\n                if (mounted()) setError(e)\n                if (fileSystem) fileSystem.workingDirectory = undefined\n            }\n        },\n        [workspaceFile]\n    )\n    useEffectAsync(async () => {\n        const file: WorkspaceFile = {\n            editor: editorId,\n            xml: workspaceXml,\n            json: workspaceJSON,\n        }\n        dsls.forEach(dsl => dsl.onBeforeSaveWorkspaceFile?.(file))\n        onBeforeSaveWorkspaceFile?.(file)\n        dsls.forEach(dsl => dsl.onSave?.(file))\n        if (workspaceFile) {\n            const fileContent = JSON.stringify(file)\n            workspaceFile?.write(fileContent)\n        }\n    }, [editorId, workspaceFile, workspaceXml, workspaceJSON])\n    useEffect(() => {\n        const services = resolveWorkspaceServices(workspace)\n        if (services) services.workspaceJSON = workspaceJSON\n    }, [workspace, workspaceJSON])\n\n    // apply errors\n    useEffect(() => {\n        if (!workspace) return\n        const allErrors = toMap(\n            arrayConcatMany(\n                warnings\n                    .map(w => w.entries)\n                    .filter(entries => !!entries?.length)\n            ),\n            e => e.sourceId || \"\",\n            e => e.message\n        )\n        workspace\n            .getAllBlocks(false)\n            .forEach(b =>\n                b.setWarningText(allErrors[b.id] || resolveBlockWarnings(b))\n            )\n    }, [workspace, warnings])\n\n    // register block creation\n    useEffect(() => {\n        const handlers = [\n            handleWorkspaceEvent,\n            ...dsls.map(dsl => dsl.createWorkspaceChangeListener?.(workspace)),\n        ].filter(c => !!c)\n        handlers.forEach(handler => workspace?.addChangeListener(handler))\n        return () =>\n            handlers?.forEach(handler =>\n                workspace?.removeChangeListener(handler)\n            )\n    }, [workspace, dsls])\n    // don't refresh registers while dragging\n    useEffect(() => {\n        bus.backgroundRefreshRegisters = !dragging\n    }, [dragging])\n\n    // handle services\n    useEffect(\n        () =>\n            bus.subscribe([DEVICE_ANNOUNCE, DEVICE_DISCONNECT], () => {\n                if (!workspace) return\n                const services = bus.services({ ignoreInfrastructure: true })\n                services.forEach(service => {\n                    const name = toServiceName(service)\n                    const type = toServiceType(service)\n                    workspace.createVariable(name, type, service.id)\n                    // TODO: remove unused variables?\n                })\n            }),\n        [bus, workspace]\n    )\n\n    // load message from parent\n    useWindowEvent(\n        \"message\",\n        (msg: MessageEvent<DslMessage>) => {\n            const { data } = msg\n            const { type, action } = data\n            if (type === \"dsl\") {\n                switch (action) {\n                    case \"load\":\n                        console.debug(`dsl load`, data)\n                        try {\n                            loadWorkspaceFile(data as DslWorkspaceFileMessage)\n                        } catch (e) {\n                            console.error(e)\n                        }\n                        break\n                    case \"options\": {\n                        const options: Record<string, [string, string][]> = (\n                            data as DslOptionsMessage\n                        ).options\n                        console.debug(`dsl: received options`, options)\n                        Object.entries(options || {}).forEach(\n                            ([key, value]) => (AllOptions[key] = value)\n                        )\n                    }\n                }\n            }\n        },\n        false,\n        []\n    )\n\n    return (\n        <BlockContext.Provider\n            value={{\n                editorId,\n                setEditorId,\n                dsls,\n                workspace,\n                workspaceXml,\n                workspaceJSON,\n                toolboxConfiguration,\n                roleManager,\n                dragging,\n                setWarnings,\n                setWorkspace,\n                setWorkspaceXml,\n            }}\n        >\n            {children}\n        </BlockContext.Provider>\n    )\n}\n","import { Grid, Typography } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\nimport BlockContext from \"./BlockContext\"\n\nexport default function BlockDiagnostics() {\n    const { workspaceXml, workspaceJSON } = useContext(BlockContext)\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly JSON</Typography>\n                <CodeBlock\n                    className=\"json\"\n                    downloadName={\"test.json\"}\n                    downloadText={JSON.stringify(workspaceJSON, null, 2)}\n                >\n                    {JSON.stringify(workspaceJSON, null, 2)}\n                </CodeBlock>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">Blockly XML</Typography>\n                <CodeBlock className=\"xml\">{workspaceXml}</CodeBlock>\n            </Grid>\n        </>\n    )\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Modern theme.\n */\nimport Blockly from 'blockly/core';\nexport default Blockly.Theme.defineTheme('modern', {\n  'base': Blockly.Themes.Classic,\n  'blockStyles': {\n    'colour_blocks': {\n      'colourPrimary': '#a5745b',\n      'colourSecondary': '#dbc7bd',\n      'colourTertiary': '#845d49'\n    },\n    'list_blocks': {\n      'colourPrimary': '#745ba5',\n      'colourSecondary': '#c7bddb',\n      'colourTertiary': '#5d4984'\n    },\n    'logic_blocks': {\n      'colourPrimary': '#5b80a5',\n      'colourSecondary': '#bdccdb',\n      'colourTertiary': '#496684'\n    },\n    'loop_blocks': {\n      'colourPrimary': '#5ba55b',\n      'colourSecondary': '#bddbbd',\n      'colourTertiary': '#498449'\n    },\n    'math_blocks': {\n      'colourPrimary': '#5b67a5',\n      'colourSecondary': '#bdc2db',\n      'colourTertiary': '#495284'\n    },\n    'procedure_blocks': {\n      'colourPrimary': '#995ba5',\n      'colourSecondary': '#d6bddb',\n      'colourTertiary': '#7a4984'\n    },\n    'text_blocks': {\n      'colourPrimary': '#5ba58c',\n      'colourSecondary': '#bddbd1',\n      'colourTertiary': '#498470'\n    },\n    'variable_blocks': {\n      'colourPrimary': '#a55b99',\n      'colourSecondary': '#dbbdd6',\n      'colourTertiary': '#84497a'\n    },\n    'variable_dynamic_blocks': {\n      'colourPrimary': '#a55b99',\n      'colourSecondary': '#dbbdd6',\n      'colourTertiary': '#84497a'\n    },\n    'hat_blocks': {\n      'colourPrimary': '#a55b99',\n      'colourSecondary': '#dbbdd6',\n      'colourTertiary': '#84497a',\n      'hat': 'cap'\n    }\n  },\n  'categoryStyles': {\n    'colour_category': {\n      'colour': '#a5745b'\n    },\n    'list_category': {\n      'colour': '#745ba5'\n    },\n    'logic_category': {\n      'colour': '#5b80a5'\n    },\n    'loop_category': {\n      'colour': '#5ba55b'\n    },\n    'math_category': {\n      'colour': '#5b67a5'\n    },\n    'procedure_category': {\n      'colour': '#995ba5'\n    },\n    'text_category': {\n      'colour': '#5ba58c'\n    },\n    'variable_category': {\n      'colour': '#a55b99'\n    },\n    'variable_dynamic_category': {\n      'colour': '#a55b99'\n    }\n  },\n  'componentStyles': {},\n  'fontStyle': {},\n  'startHats': null\n});","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Dark theme.\n */\nimport Blockly from 'blockly/core'; // Temporarily required to ensure there's no conflict with\n// Blockly.Themes.Dark\n\nBlockly.registry.unregister('theme', 'dark');\n/**\n * Dark theme.\n */\n\nexport default Blockly.Theme.defineTheme('dark', {\n  'base': Blockly.Themes.Classic,\n  'componentStyles': {\n    'workspaceBackgroundColour': '#1e1e1e',\n    'toolboxBackgroundColour': 'blackBackground',\n    'toolboxForegroundColour': '#fff',\n    'flyoutBackgroundColour': '#252526',\n    'flyoutForegroundColour': '#ccc',\n    'flyoutOpacity': 1,\n    'scrollbarColour': '#797979',\n    'insertionMarkerColour': '#fff',\n    'insertionMarkerOpacity': 0.3,\n    'scrollbarOpacity': 0.4,\n    'cursorColour': '#d0d0d0',\n    'blackBackground': '#333'\n  }\n});","import {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    TextField,\n} from \"@mui/material\"\nimport Blockly from \"blockly\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React, { ChangeEvent, useEffect, useRef, useState } from \"react\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function BlocklyModalDialogs() {\n    const [dialogType, setDialogType] = useState<\n        \"alert\" | \"confirm\" | \"prompt\"\n    >()\n    const [message, setMessage] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n    const valueId = useId()\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const callback = useRef<any>()\n    const showDialog = !!dialogType\n\n    useEffect(() => {\n        // store older\n        const previous = {\n            alert: Blockly.alert,\n            confirm: Blockly.confirm,\n            prompt: Blockly.prompt,\n        }\n\n        // replace\n        Blockly.alert = (message, cb) => {\n            setMessage(message)\n            callback.current = cb\n            setDialogType(\"alert\")\n        }\n        Blockly.confirm = (message, cb) => {\n            setMessage(message)\n            callback.current = cb\n            setDialogType(\"confirm\")\n        }\n        Blockly.prompt = (message, defaultValue, cb) => {\n            setMessage(message)\n            setValue(defaultValue)\n            callback.current = cb\n            setDialogType(\"prompt\")\n        }\n\n        // cleanup\n        return () => {\n            Blockly.alert = previous.alert\n            Blockly.confirm = previous.confirm\n            Blockly.prompt = previous.prompt\n        }\n    }, [])\n\n    const handleCloseConfirm = () => setDialogType(undefined)\n    const handleCancel = () => {\n        callback.current?.(undefined)\n        setDialogType(undefined)\n    }\n    const handleOk = () => {\n        switch (dialogType) {\n            case \"alert\":\n                callback.current?.()\n                break\n            case \"confirm\":\n                callback.current(true)\n                break\n            case \"prompt\":\n                callback.current(value)\n                break\n        }\n        setDialogType(undefined)\n    }\n    const handleValueChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n    }\n\n    return (\n        <Dialog open={showDialog} onClose={handleCloseConfirm}>\n            <DialogContent>\n                <DialogContentText>{message}</DialogContentText>\n                {dialogType === \"prompt\" && (\n                    <TextField\n                        id={valueId}\n                        value={value}\n                        label=\"Value\"\n                        fullWidth={true}\n                        onChange={handleValueChange}\n                    />\n                )}\n            </DialogContent>\n            <DialogActions>\n                {dialogType !== \"alert\" && (\n                    <Button variant=\"contained\" onClick={handleCancel}>\n                        Cancel\n                    </Button>\n                )}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleOk}>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import { useTheme } from \"@mui/material\"\nimport {\n    BlockSvg,\n    Events,\n    IPositionable,\n    MetricsManager,\n    utils,\n    WorkspaceSvg,\n    TOOLBOX_AT_LEFT,\n    Scrollbar,\n    ComponentManager,\n} from \"blockly\"\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { svgPointerPoint } from \"../widgets/svgutils\"\nimport useWorkspaceEvent from \"./useWorkspaceEvent\"\n\nconst MINI_RADIUS = 16\nconst MARGIN_VERTICAL_ = 20\nconst MARGIN_HORIZONTAL_ = 20\nconst MIN_SCALE = 0.05\nconst MAX_WIDTH = 200\nconst MAX_HEIGHT = 96\n\nfunction MiniBlock(props: {\n    x: number\n    y: number\n    width: number\n    height: number\n    color: string\n}) {\n    const { x, y, width, height, color } = props\n    return (\n        <rect\n            x={x}\n            y={y}\n            width={width}\n            height={height}\n            fill={color}\n            rx={MINI_RADIUS}\n            ry={MINI_RADIUS}\n        />\n    )\n}\n\nfunction MiniViewport(props: {\n    scroll: MetricsManager.ContainerRegion\n    view: MetricsManager.ContainerRegion\n}) {\n    const { view } = props\n    const { top, left, width, height } = view\n    const { palette } = useTheme()\n    const vx = left\n    const vy = top\n\n    return (\n        <rect\n            x={vx}\n            y={vy}\n            width={width}\n            height={height}\n            strokeWidth={MINI_RADIUS >> 1}\n            stroke={palette.text.primary}\n            fill={palette.grey[400]}\n            opacity={0.2}\n            rx={MINI_RADIUS}\n            ry={MINI_RADIUS}\n        />\n    )\n}\n\nfunction BlockMiniMap(props: {\n    workspace: WorkspaceSvg\n    onSizeUpdate: (width: number, height: number) => void\n}) {\n    const { workspace, onSizeUpdate } = props\n    const svgRef = useRef<SVGSVGElement>()\n    const [metrics, setMetrics] = useState<{\n        scroll: MetricsManager.ContainerRegion\n        contents: MetricsManager.ContainerRegion\n        blocks: {\n            blockId: string\n            rect: utils.Rect\n            color: string\n        }[]\n    }>()\n    const [view, setView] = useState<MetricsManager.ContainerRegion>()\n    const handleMetrics = () => {\n        const metricsManager = workspace.getMetricsManager()\n        const view = metricsManager.getViewMetrics(true)\n        const contents = metricsManager.getContentMetrics(true)\n        const scroll = metricsManager.getScrollMetrics(true, view, contents)\n        const tops: BlockSvg[] = arrayConcatMany(\n            (workspace.getTopBlocks(false) as BlockSvg[]).map(top => [\n                top,\n                ...(top.childBlocks_ as BlockSvg[]),\n            ])\n        )\n        const blocks = tops.map(b => ({\n            blockId: b.id,\n            rect: b.getBoundingRectangle(),\n            color: b.getColour(),\n        }))\n        setMetrics({ scroll, contents, blocks })\n        setView(view)\n        onSizeUpdate(scroll.width, scroll.height)\n    }\n    const handleView = () => {\n        const metricsManager = workspace.getMetricsManager()\n        const view = metricsManager.getViewMetrics(true)\n        setView(view)\n    }\n    const handleChange = useCallback(\n        (event: { type: string } & Events.Abstract) => {\n            const { type } = event\n            switch (type) {\n                case Events.BLOCK_CREATE:\n                case Events.BLOCK_DELETE:\n                case Events.BLOCK_MOVE:\n                case Events.BLOCK_CHANGE:\n                case Events.FINISHED_LOADING:\n                    handleMetrics()\n                    break\n                case Events.VIEWPORT_CHANGE:\n                    handleView()\n                    break\n            }\n        },\n        [workspace]\n    )\n    useWorkspaceEvent(workspace, handleChange)\n    const handleCenterView = (event: React.PointerEvent<Element>) => {\n        event.preventDefault()\n        event.stopPropagation()\n        if (event.buttons < 1) return\n        const pos = svgPointerPoint(svgRef.current, event)\n        // viewHeight and viewWidth are in pixels.\n        const halfViewWidth = view.width / 2\n        const halfViewHeight = view.height / 2\n        // Put the block in the center of the visible workspace instead.\n        const scrollToCenterX = pos.x - halfViewWidth + scroll.left\n        const scrollToCenterY = pos.y - halfViewHeight + scroll.top\n        // Convert from workspace directions to canvas directions.\n        // move to center of view\n        const x = -scrollToCenterX\n        const y = -scrollToCenterY\n\n        workspace.scroll(x, y)\n    }\n    // nothing to see\n    if (!metrics || !view) return null\n\n    const { scroll, blocks } = metrics\n    const cleft = scroll.left\n    const ctop = scroll.top\n    const cwidth = scroll.width\n    const cheight = scroll.height\n\n    return (\n        <svg\n            ref={svgRef}\n            viewBox={`0 0 ${cwidth} ${cheight}`}\n            width={cwidth}\n            height={cheight}\n        >\n            <g transform={`translate(${-cleft},${-ctop})`}>\n                {blocks?.map(({ blockId, rect, color }) => (\n                    <MiniBlock\n                        key={blockId}\n                        x={rect.left}\n                        y={rect.top}\n                        width={rect.right - rect.left}\n                        height={rect.bottom - rect.top}\n                        color={color}\n                    />\n                ))}\n                {view && <MiniViewport scroll={scroll} view={view} />}\n            </g>\n            <rect\n                x={0}\n                y={0}\n                width={cwidth}\n                height={cheight}\n                fill=\"transparent\"\n                stroke={\"#aaa\"}\n                strokeWidth={24}\n                onPointerDown={handleCenterView}\n                onPointerMove={handleCenterView}\n            />\n        </svg>\n    )\n}\n\nclass MinimapPlugin implements IPositionable {\n    readonly id = \"minimap\"\n    private top_ = 0\n    private left_ = 0\n    private width_ = MAX_WIDTH\n    private height_ = MAX_HEIGHT\n    private scale_ = MIN_SCALE\n    private svgGroup_: SVGGElement\n\n    constructor(readonly workspace_: WorkspaceSvg) {\n        this.init()\n    }\n\n    private init() {\n        const componentManager = this.workspace_.getComponentManager()\n        componentManager.addComponent({\n            component: this,\n            weight: 2,\n            capabilities: [ComponentManager.Capability.POSITIONABLE],\n        })\n        this.createDom_()\n        this.workspace_.resize()\n    }\n\n    private createDom_() {\n        this.svgGroup_ = utils.dom.createSvgElement(utils.Svg.G, {\n            class: \"minimap\",\n        })\n        utils.dom.insertAfter(this.svgGroup_, this.workspace_.getBubbleCanvas())\n        ReactDOM.render(this.render(), this.svgGroup_)\n    }\n\n    private render() {\n        return (\n            <BlockMiniMap\n                workspace={this.workspace_}\n                onSizeUpdate={this.handleSizeUpdate.bind(this)}\n            />\n        )\n    }\n\n    position(metrics: MetricsManager.UiMetrics): void {\n        const hasVerticalScrollbars =\n            this.workspace_.scrollbar &&\n            this.workspace_.scrollbar.canScrollHorizontally()\n\n        if (\n            metrics.toolboxMetrics.position === TOOLBOX_AT_LEFT ||\n            (this.workspace_.horizontalLayout && !this.workspace_.RTL)\n        ) {\n            // Right corner placement.\n            this.left_ =\n                metrics.absoluteMetrics.left +\n                metrics.viewMetrics.width -\n                this.width_ -\n                MARGIN_HORIZONTAL_\n            if (hasVerticalScrollbars && !this.workspace_.RTL) {\n                this.left_ -= Scrollbar.scrollbarThickness\n            }\n        } else {\n            // Left corner placement.\n            this.left_ = MARGIN_HORIZONTAL_\n            if (hasVerticalScrollbars && this.workspace_.RTL) {\n                this.left_ += Scrollbar.scrollbarThickness\n            }\n        }\n\n        // Upper corner placement\n        this.top_ = metrics.absoluteMetrics.top + MARGIN_VERTICAL_\n\n        this.positionSvgGroup()\n    }\n\n    private positionSvgGroup() {\n        this.svgGroup_.setAttribute(\n            \"transform\",\n            `translate(${this.left_},${this.top_}) scale(${this.scale_})`\n        )\n    }\n\n    getBoundingRectangle(): utils.Rect {\n        return new utils.Rect(\n            this.top_,\n            this.top_ + this.height_,\n            this.left_,\n            this.left_ + this.width_\n        )\n    }\n\n    private handleSizeUpdate(width: number, height: number) {\n        if (width !== this.width_ || height !== this.height_) {\n            this.scale_ = Math.min(\n                MIN_SCALE,\n                Math.min(MAX_HEIGHT / height, MAX_WIDTH / width)\n            )\n            const dw = width * this.scale_ - this.width_\n            this.width_ = width * this.scale_\n            this.height_ = height * this.scale_\n            this.left_ -= dw\n            this.positionSvgGroup()\n        }\n    }\n}\n\nexport function useBlockMinimap(workspace: WorkspaceSvg) {\n    useEffect(() => {\n        if (workspace) {\n            new MinimapPlugin(workspace)\n        }\n    }, [workspace])\n}\n","import React, { useMemo } from \"react\"\nimport { getParser, Parser } from \"bowser\"\nimport Alert from \"./Alert\"\nimport { AlertTitle } from \"@mui/material\"\n\nexport default function BrowserCompatibilityAlert(props: {\n    filter: Parser.checkTree\n    label: string\n}) {\n    const { filter, label } = props\n    const compatible = useMemo(() => {\n        if (typeof window !== undefined) {\n            const browser = getParser(window.navigator.userAgent)\n            return browser.satisfies(filter)\n        }\n        return true // SSR\n    }, [JSON.stringify(filter)])\n\n    if (compatible) return null\n\n    return (\n        <Alert severity=\"warning\">\n            <AlertTitle>Browser not compatible.</AlertTitle>\n            {label}\n        </Alert>\n    )\n}\n","import React, { useContext, useEffect, useRef } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { useBlocklyWorkspace } from \"react-blockly\"\nimport { WorkspaceSvg } from \"blockly\"\nimport Theme from \"@blockly/theme-modern\"\nimport DarkTheme from \"@blockly/theme-dark\"\nimport BlocklyModalDialogs from \"./BlocklyModalDialogs\"\nimport DarkModeContext from \"../ui/DarkModeContext\"\nimport AppContext from \"../AppContext\"\nimport clsx from \"clsx\"\nimport { withPrefix } from \"gatsby\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport BlockContext from \"./BlockContext\"\nimport { useBlockMinimap } from \"./BlockMinimap\"\nimport BrowserCompatibilityAlert from \"../ui/BrowserCompatibilityAlert\"\nimport { UIFlags } from \"../../jacdac/providerbus\"\n\nconst PREFIX = \"BlockEditor\"\n\nconst classes = {\n    editor: `${PREFIX}-editor`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.editor}`]: {\n        height: `calc(100vh - ${\n            UIFlags.hosted ? 3.5 : Flags.diagnostics ? 15 : 10\n        }rem)`,\n        \"& .blocklyTreeLabel\": {\n            fontFamily: theme.typography.fontFamily,\n        },\n        \"& .blocklyText\": {\n            fontWeight: `normal !important`,\n            fontFamily: `${theme.typography.fontFamily} !important`,\n        },\n        \"& .blocklyTreeIconOpen, & .blocklyTreeIconClosed\": {\n            opacity: 0.5,\n        },\n        \"& .blocklyFieldButton.blocklyEditableText\": {\n            cursor: \"pointer\",\n        },\n        \"& .blocklyFieldButton.blocklyEditableText > text\": {\n            fill: \"#ffffff\",\n        },\n        \"& .blocklyFieldButton.blocklyEditableText > .blocklyFieldRect\": {\n            fill: \"transparent !important\",\n        },\n    },\n}))\n\nfunction SuspendedBlockEditor(props: { editorId: string; className?: string }) {\n    const { editorId, className } = props\n    const {\n        toolboxConfiguration,\n        workspaceXml,\n        setWorkspace,\n        setWorkspaceXml,\n        setEditorId,\n    } = useContext(BlockContext)\n\n    const { darkMode } = useContext(DarkModeContext)\n    const { setError } = useContext(AppContext)\n    const theme = darkMode === \"dark\" ? DarkTheme : Theme\n\n    // setup editor id in context\n    useEffect(() => {\n        setEditorId(editorId)\n        return () => setEditorId(\"\")\n    }, [editorId])\n\n    // ReactBlockly\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const blocklyRef = useRef(null)\n    const { workspace, xml } = useBlocklyWorkspace({\n        ref: blocklyRef,\n        toolboxConfiguration,\n        workspaceConfiguration: {\n            collapse: false,\n            disable: false,\n            comments: true,\n            css: true,\n            trashcan: false,\n            sounds: false,\n            renderer: \"zelos\",\n            theme,\n            oneBasedIndex: false,\n            move: {\n                scrollbars: {\n                    vertical: true,\n                    horizontal: true,\n                },\n            },\n            media: withPrefix(\"blockly/media/\"),\n            zoom: {\n                controls: true,\n                wheel: false,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.08,\n                scaleSpeed: 1.1,\n                pinch: true,\n            },\n        },\n        initialXml: workspaceXml,\n        onImportXmlError: () => {\n            console.error(`error loading blocks`)\n            setError(\"Error loading blocks...\")\n        },\n    }) as { workspace: WorkspaceSvg; xml: string }\n\n    // store ref\n    useEffect(() => setWorkspace(workspace), [workspace])\n    useEffect(() => setWorkspaceXml(xml), [xml])\n\n    // resize blockly\n    useEffect(() => {\n        if (typeof ResizeObserver !== \"undefined\") {\n            const observer = new ResizeObserver(() => workspace?.resize())\n            observer.observe(blocklyRef.current)\n            return () => observer.disconnect()\n        }\n    }, [workspace, blocklyRef.current])\n\n    useBlockMinimap(workspace)\n\n    return (\n        <Root>\n            <BrowserCompatibilityAlert\n                filter={{\n                    chrome: \"> 90\",\n                    edge: \"> 90\",\n                    firefox: \"> 90\",\n                }}\n                label=\"Please use Microsoft Edge 90+ or Google Chrome 90+ for this page.\"\n            />\n            <div className={clsx(classes.editor, className)} ref={blocklyRef} />\n            <BlocklyModalDialogs />\n        </Root>\n    )\n}\n\nexport default function BlockEditor(props: {\n    editorId: string\n    className?: string\n}) {\n    const { toolboxConfiguration } = useContext(BlockContext)\n\n    if (!toolboxConfiguration) return null\n    return <SuspendedBlockEditor {...props} />\n}\n","import ScatterPlotField from \"../fields/chart/ScatterPlotField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    CategoryDefinition,\n    DataColumnInputDefinition,\n    DATA_SCIENCE_STATEMENT_TYPE,\n    DummyInputDefinition,\n    identityTransformData,\n    LabelDefinition,\n    OptionsInputDefinition,\n    SeparatorDefinition,\n    StatementInputDefinition,\n} from \"../toolbox\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\nimport DataColumnChooserField from \"../fields/DataColumnChooserField\"\nimport LinePlotField from \"../fields/chart/LinePlotField\"\nimport BarChartField from \"../fields/chart/BarField\"\nimport HistogramField from \"../fields/chart/HistogramField\"\nimport DataTableField from \"../fields/DataTableField\"\nimport { paletteColorByIndex } from \"./palette\"\nimport BoxPlotField from \"../fields/chart/BoxPlotField\"\nimport VegaChartField from \"../fields/chart/VegaChartField\"\nimport type { VisualizationSpec } from \"react-vega\"\nimport type { Mark } from \"vega-lite/build/src/mark\"\nimport { tidyHeaders, tidyResolveFieldColumn } from \"../fields/tidy\"\nimport { Block } from \"blockly\"\nimport type { JSONSchema4 } from \"json-schema\"\nimport JSONSettingsField, {\n    JSONSettingsInputDefinition,\n} from \"../fields/JSONSettingsField\"\nimport HeatMapPlotField from \"../fields/chart/HeatMapField\"\n\nconst SCATTERPLOT_BLOCK = \"chart_scatterplot\"\nconst LINEPLOT_BLOCK = \"chart_lineplot\"\nconst HEATMAP_BLOCK = \"chart_heatmap\"\nconst BARCHART_BLOCK = \"chart_bar\"\nconst HISTOGRAM_BLOCK = \"chart_histogram\"\nconst BOX_PLOT_BLOCK = \"chart_box_plot\"\nconst CHART_SHOW_TABLE_BLOCK = \"chart_show_table\"\n\nconst VEGA_LAYER_BLOCK = \"vega_layer\"\nconst VEGA_ENCODING_BLOCK = \"vega_encoding\"\nconst VEGA_STATEMENT_TYPE = \"vegaStatementType\"\n\nconst chartSettingsSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        title: {\n            type: \"string\",\n            title: \"Chart title\",\n        },\n    },\n}\nconst axisSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        title: {\n            type: \"string\",\n            title: \"Title\",\n        },\n    },\n}\nconst scaleSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        domainMin: {\n            type: \"number\",\n            title: \"minimum\",\n            description: \"Sets the minimum value in the scale domain\",\n        },\n        domainMax: {\n            type: \"number\",\n            title: \"maximum\",\n            description: \"Sets the maximum value in the scale domain\",\n        },\n    },\n}\nconst encodingSettingsSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        axis: axisSchema,\n    },\n}\nconst encodingNumberSettingsSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        scale: scaleSchema,\n        axis: axisSchema,\n    },\n}\nconst char2DSettingsSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        title: {\n            type: \"string\",\n            title: \"Chart title\",\n        },\n        encoding: {\n            type: \"object\",\n            properties: {\n                x: {\n                    title: \"X\",\n                    ...encodingNumberSettingsSchema,\n                },\n                y: {\n                    title: \"Y\",\n                    ...encodingNumberSettingsSchema,\n                },\n            },\n        },\n    },\n}\nconst charMapSettingsSchema: JSONSchema4 = {\n    type: \"object\",\n    properties: {\n        title: {\n            type: \"string\",\n            title: \"Chart title\",\n        },\n        encoding: {\n            index: {\n                title: \"Index\",\n                ...encodingSettingsSchema,\n            },\n            value: {\n                title: \"Value\",\n                ...encodingNumberSettingsSchema,\n            },\n        },\n    },\n}\n\nconst colour = paletteColorByIndex(4)\nconst chartDsl: BlockDomainSpecificLanguage = {\n    id: \"chart\",\n    createBlocks: () => [\n        <BlockDefinition>{\n            kind: \"block\",\n            type: CHART_SHOW_TABLE_BLOCK,\n            tooltip: \"Displays the block data as a table\",\n            message0: \"show table %1 %2 %3 %4 %5 %6\",\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column0\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column1\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column2\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"column3\",\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: DataTableField.KEY,\n                    name: \"table\",\n                    selectColumns: true,\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: SCATTERPLOT_BLOCK,\n            tooltip: \"Renders the block data in a scatter plot\",\n            message0: \"scatterplot of x %1 y %2 size %3 group %4 %5 %6 %7\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"x\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"y\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"size\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"group\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: char2DSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: ScatterPlotField.KEY,\n                    name: \"plot\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: BARCHART_BLOCK,\n            tooltip: \"Renders the block data in a bar chart\",\n            message0: \"bar chart of index %1 value %2 %3 %4 %5\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"index\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"value\",\n                    dataType: \"number\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: charMapSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: BarChartField.KEY,\n                    name: \"plot\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: LINEPLOT_BLOCK,\n            tooltip: \"Renders the block data in a line chart\",\n            message0: \"line chart of x %1 y %2 %3 %4 group %5 %6 %7 %8\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"x\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"y\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"y2\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"y3\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"group\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: char2DSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: LinePlotField.KEY,\n                    name: \"plot\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: HEATMAP_BLOCK,\n            tooltip: \"Renders the block data in a 2D heatmap\",\n            message0: \"heatmap of x %1 y %2 color %3 %4 %5 %6\",\n            args0: [\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"x\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"y\",\n                    dataType: \"number\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"color\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: char2DSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: HeatMapPlotField.KEY,\n                    name: \"plot\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        <BlockDefinition>{\n            kind: \"block\",\n            type: HISTOGRAM_BLOCK,\n            tooltip: \"Renders the block data as a histogram\",\n            message0: \"histogram of %1 group %2 %3 %4 %5\",\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"index\",\n                    dataType: \"number\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"group\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: chartSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: HistogramField.KEY,\n                    name: \"plot\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        {\n            kind: \"block\",\n            type: BOX_PLOT_BLOCK,\n            message0: \"boxplot of index %1 value %2 group %3 %4 %5 %6\",\n            args0: [\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"index\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"value\",\n                    dataType: \"number\",\n                },\n                {\n                    type: DataColumnChooserField.KEY,\n                    name: \"group\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: charMapSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: BoxPlotField.KEY,\n                    name: \"plot\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        {\n            kind: \"block\",\n            type: VEGA_LAYER_BLOCK,\n            message0: \"chart %1 %2 %3 %4 %5 %6\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    options: [\n                        \"arc\",\n                        \"area\",\n                        \"bar\",\n                        \"boxplot\",\n                        \"circle\",\n                        \"errorband\",\n                        \"errorbar\",\n                        \"line\",\n                        \"point\",\n                        \"rect\",\n                        \"rule\",\n                        \"square\",\n                        \"text\",\n                        \"tick\",\n                        \"trail\",\n                    ].map(s => [s, s]),\n                    name: \"mark\",\n                },\n                <JSONSettingsInputDefinition>{\n                    type: JSONSettingsField.KEY,\n                    name: \"settings\",\n                    schema: chartSettingsSchema,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                <StatementInputDefinition>{\n                    type: \"input_statement\",\n                    name: \"fields\",\n                    check: VEGA_STATEMENT_TYPE,\n                },\n                <DummyInputDefinition>{\n                    type: \"input_dummy\",\n                },\n                {\n                    type: VegaChartField.KEY,\n                    name: \"chart\",\n                },\n            ],\n            previousStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            nextStatement: DATA_SCIENCE_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n        {\n            kind: \"block\",\n            type: VEGA_ENCODING_BLOCK,\n            message0: \"encoding %1 as %2 type %3\",\n            args0: [\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    options: [\n                        \"x\",\n                        \"y\",\n                        \"x2\",\n                        \"y2\",\n                        \"xError\",\n                        \"yError\",\n                        \"xError2\",\n                        \"yError2\",\n                        \"theta\",\n                        \"theta2\",\n                        \"radius\",\n                        \"radius2\",\n                        \"color\",\n                        \"angle\",\n                        \"opacity\",\n                        \"fillOpacity\",\n                        \"strokeOpacity\",\n                        \"shape\",\n                        \"size\",\n                        \"strokeDash\",\n                        \"strokeWidth\",\n                        \"text\",\n                    ].map(s => [s, s]),\n                    name: \"channel\",\n                },\n                <DataColumnInputDefinition>{\n                    type: DataColumnChooserField.KEY,\n                    name: \"field\",\n                    parentData: true,\n                },\n                <OptionsInputDefinition>{\n                    type: \"field_dropdown\",\n                    options: [\n                        \"quantitative\",\n                        \"ordinal\",\n                        \"nominal\",\n                        \"temporal\",\n                    ].map(s => [s, s]),\n                    name: \"type\",\n                },\n            ],\n            previousStatement: VEGA_STATEMENT_TYPE,\n            nextStatement: VEGA_STATEMENT_TYPE,\n            colour,\n            template: \"meta\",\n            inputsInline: false,\n            dataPreviewField: false,\n            transformData: identityTransformData,\n        },\n    ],\n\n    createCategory: () => [\n        <CategoryDefinition>{\n            kind: \"category\",\n            name: \"Charts\",\n            contents: [\n                <BlockReference>{ kind: \"block\", type: SCATTERPLOT_BLOCK },\n                <BlockReference>{ kind: \"block\", type: LINEPLOT_BLOCK },\n                <BlockReference>{ kind: \"block\", type: BARCHART_BLOCK },\n                <BlockReference>{ kind: \"block\", type: HISTOGRAM_BLOCK },\n                <BlockReference>{ kind: \"block\", type: BOX_PLOT_BLOCK },\n                <BlockReference>{ kind: \"block\", type: HEATMAP_BLOCK },\n                <BlockReference>{ kind: \"block\", type: CHART_SHOW_TABLE_BLOCK },\n                <SeparatorDefinition>{\n                    kind: \"sep\",\n                },\n                <LabelDefinition>{\n                    kind: \"label\",\n                    text: \"Advanced\",\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: VEGA_LAYER_BLOCK,\n                },\n                <BlockReference>{\n                    kind: \"block\",\n                    type: VEGA_ENCODING_BLOCK,\n                },\n            ],\n            colour,\n        },\n    ],\n}\n\nexport default chartDsl\n\nexport function blockToVisualizationSpec(\n    sourceBlock: Block,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    data: object[]\n): VisualizationSpec {\n    const { headers, types } = tidyHeaders(data)\n    const mark: Mark = sourceBlock.getFieldValue(\"mark\")\n    const title: string = sourceBlock.getFieldValue(\"title\")\n    const spec: VisualizationSpec = {\n        title,\n        mark: { type: mark, tooltip: true },\n        encoding: {},\n        data: { name: \"values\" },\n    }\n\n    let child = sourceBlock.getInputTargetBlock(\"fields\")\n    while (child) {\n        switch (child.type) {\n            case VEGA_ENCODING_BLOCK: {\n                const channel: string = child.getFieldValue(\"channel\")\n                const field = tidyResolveFieldColumn(data, child, \"field\")\n                const type: string = child.getFieldValue(\"type\")\n                if (channel && field) {\n                    const fieldType = types[headers.indexOf(field)]\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    spec.encoding[channel] = {\n                        field,\n                        type:\n                            type ||\n                            (fieldType === \"number\"\n                                ? \"quantitative\"\n                                : \"nominal\"),\n                    }\n                }\n                break\n            }\n        }\n\n        child = child.getNextBlock()\n    }\n\n    return spec\n}\n","import jsep from \"jsep\"\nimport { Theme } from \"@mui/material\"\nimport Blockly, { Block, Workspace, WorkspaceSvg } from \"blockly\"\nimport JDService from \"../../../../jacdac-ts/src/jdom/service\"\nimport { RoleEvent } from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMError } from \"../../../../jacdac-ts/src/vm/ir\"\nimport {\n    BlockDefinition,\n    ContentDefinition,\n    resolveBlockDefinition,\n    ServiceBlockDefinition,\n} from \"../toolbox\"\nimport { CmdWithErrors, ExpressionWithErrors } from \"../../vm/VMgenerator\"\nimport { BlockJSON, WorkspaceFile, WorkspaceJSON } from \"./workspacejson\"\n\nexport interface CreateBlocksOptions {\n    theme: Theme\n}\n\nexport interface CreateCategoryOptions {\n    theme: Theme\n    source: WorkspaceJSON\n    liveServices: JDService[]\n}\n\nexport interface CompileEventToVMOptions {\n    block: BlockJSON\n    definition: ServiceBlockDefinition\n    blockToExpression: (ev: RoleEvent, block: BlockJSON) => ExpressionWithErrors\n}\n\nexport interface CompileEventToVMResult {\n    event?: RoleEvent\n    expression?: jsep.Expression\n    errors?: VMError[]\n    meta?: boolean\n}\n\nexport interface CompileExpressionToVMOptions {\n    event: RoleEvent\n    block: BlockJSON\n    definition: ServiceBlockDefinition\n    blockToExpressionInner: (ev: RoleEvent, block: BlockJSON) => jsep.Expression\n}\n\nexport interface CompileCommandToVMOptions {\n    event: RoleEvent\n    block: BlockJSON\n    definition: ServiceBlockDefinition\n    blockToExpression: (ev: RoleEvent, block: BlockJSON) => ExpressionWithErrors\n}\n\nexport default interface BlockDomainSpecificLanguage {\n    /**\n     * A unique identifier used to route blocks back to the DSL\n     */\n    id: string\n\n    /**\n     * A list of builtin block types, typically provided by Blockly\n     */\n    types?: string[]\n\n    /**\n     * Optional API to be called when mounted in the React context, returns unmounted\n     */\n    mount?: (workspace: Workspace) => () => void\n\n    /**\n     * Creates blocks for the DSL\n     */\n    createBlocks?: (\n        options: CreateBlocksOptions\n    ) => BlockDefinition[] | Promise<BlockDefinition[]>\n\n    /***\n     * Creates a JSON category to populate the toolbox\n     */\n    createCategory?: (options: CreateCategoryOptions) => ContentDefinition[]\n\n    /**\n     * Shorthand to convert block JSON into a primitive value\n     */\n    blockToValue?: (block: Block) => string | number | boolean\n\n    /**\n     * Returns a change listener if needed\n     */\n    createWorkspaceChangeListener?: (\n        workspace: WorkspaceSvg\n    ) => (event: Blockly.Events.Abstract) => void\n\n    /**\n     * After a successfull parse and save, opportunity to walk the JSON tree\n     * and attach warnings\n     */\n    visitWorkspaceJSON?: (\n        workspace: Workspace,\n        workspaceJSON: WorkspaceJSON\n    ) => void\n\n    // VM support\n    compileEventToVM?: (\n        options: CompileEventToVMOptions\n    ) => CompileEventToVMResult\n\n    compileCommandToVM?: (options: CompileCommandToVMOptions) => CmdWithErrors\n\n    compileExpressionToVM?: (\n        options: CompileExpressionToVMOptions\n    ) => ExpressionWithErrors\n\n    onWorkspaceJSONChange?: (workspaceJSON: WorkspaceJSON) => void\n\n    onSave?: (file: WorkspaceFile) => void\n\n    onBeforeSaveWorkspaceFile?: (file: WorkspaceFile) => void\n}\n\nexport function resolveDsl(dsls: BlockDomainSpecificLanguage[], type: string) {\n    const dsl = dsls?.find(dsl => dsl.types?.indexOf(type) > -1)\n    if (dsl) return dsl\n\n    const { dsl: dslName } = resolveBlockDefinition(type) || {}\n    if (!dslName) {\n        console.warn(`unknown dsl for ${type}`)\n        return undefined\n    }\n    return dsls?.find(dsl => dsl.id === dslName)\n}\n","import { fieldShadows } from \"../fields/fields\"\nimport BlockDomainSpecificLanguage from \"./dsl\"\n\nconst fieldsDsl: BlockDomainSpecificLanguage = {\n    id: \"fields\",\n    createBlocks: () => fieldShadows(),\n}\nexport default fieldsDsl\n","import jsep from \"jsep\"\nimport { Theme } from \"@mui/material\"\nimport { withPrefix } from \"gatsby\"\nimport {\n    dashify,\n    humanify,\n    isNumericType,\n} from \"../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    BuzzerCmd,\n    JoystickReg,\n    ServoReg,\n    SRV_BOOTLOADER,\n    SRV_BUZZER,\n    SRV_CONTROL,\n    SRV_JOYSTICK,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SERVO,\n    SystemReg,\n} from \"../../../../jacdac-ts/src/jdom/constants\"\nimport Flags from \"../../../../jacdac-ts/src/jdom/flags\"\nimport {\n    isHighLevelEvent,\n    isHighLevelRegister,\n    isCommand,\n    isSensor,\n    serviceSpecifications,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../../jacdac-ts/src/jdom/spec\"\nimport {\n    arrayConcatMany,\n    splitFilter,\n    toMap,\n    uniqueMap,\n} from \"../../../../jacdac-ts/src/jdom/utils\"\nimport {\n    toIdentifier,\n    toMemberExpression,\n} from \"../../../../jacdac-ts/src/vm/compile\"\nimport { VMError } from \"../../../../jacdac-ts/src/vm/ir\"\nimport NoteField from \"../fields/NoteField\"\nimport ServoAngleField from \"../fields/ServoAngleField\"\nimport {\n    BlockDefinition,\n    BlockReference,\n    BOOLEAN_TYPE,\n    ButtonDefinition,\n    CategoryDefinition,\n    CODE_STATEMENT_TYPE,\n    CommandBlockDefinition,\n    EventBlockDefinition,\n    EventFieldDefinition,\n    InputDefinition,\n    JSON_TYPE,\n    NUMBER_TYPE,\n    OptionsInputDefinition,\n    RegisterBlockDefinition,\n    resolveBlockDefinition,\n    ServiceBlockDefinition,\n    STRING_TYPE,\n    VariableInputDefinition,\n} from \"../toolbox\"\nimport { ExpressionWithErrors, makeVMBase } from \"../../vm/VMgenerator\"\nimport {\n    CompileCommandToVMOptions,\n    CompileEventToVMOptions,\n    CompileEventToVMResult,\n    CompileExpressionToVMOptions,\n    CreateCategoryOptions,\n} from \"./dsl\"\nimport { Variables } from \"blockly\"\nimport { paletteColorByIndex } from \"./palette\"\nimport { VariableJSON } from \"./workspacejson\"\nimport JDService from \"../../../../jacdac-ts/src/jdom/service\"\n\nconst SET_STATUS_LIGHT_BLOCK = \"jacdac_set_status_light\"\nconst ROLE_BOUND_EVENT_BLOCK = \"jacdac_role_bound_event\"\nconst ROLE_BOUND_BLOCK = \"jacdac_role_bound\"\n\nfunction isBooleanField(field: jdspec.PacketMember) {\n    return field.type === \"bool\"\n}\n\nfunction isStringField(field: jdspec.PacketMember) {\n    return field.type === \"string\"\n}\n\nfunction toBlocklyType(field: jdspec.PacketMember) {\n    return field.encoding === \"JSON\"\n        ? JSON_TYPE\n        : isBooleanField(field)\n        ? BOOLEAN_TYPE\n        : isStringField(field)\n        ? STRING_TYPE\n        : isNumericType(field)\n        ? NUMBER_TYPE\n        : undefined\n}\nfunction enumInfo(srv: jdspec.ServiceSpec, field: jdspec.PacketMember) {\n    const e = srv.enums?.[field.type]\n    return e\n}\n\nconst ignoredServices = [\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SRV_PROTO_TEST,\n    SRV_BOOTLOADER,\n]\n\nconst customMessages = [\n    {\n        service: SRV_JOYSTICK,\n        register: JoystickReg.Direction,\n        field: \"buttons\",\n        get: \"is %1 %2 pressed\",\n    },\n]\n\n// internal helper functions\nconst customShadows = [\n    {\n        serviceClass: SRV_SERVO,\n        kind: \"rw\",\n        identifier: ServoReg.Angle,\n        field: \"_\",\n        shadow: <BlockDefinition>{\n            kind: \"block\",\n            type: ServoAngleField.SHADOW.type,\n        },\n    },\n    {\n        serviceClass: SRV_BUZZER,\n        kind: \"command\",\n        identifier: BuzzerCmd.PlayNote,\n        field: \"frequency\",\n        shadow: <BlockDefinition>{\n            kind: \"block\",\n            type: NoteField.SHADOW.type,\n        },\n    },\n]\n\nconst lookupCustomShadow = (\n    service: jdspec.ServiceSpec,\n    info: jdspec.PacketInfo,\n    field: jdspec.PacketMember\n) =>\n    customShadows.find(\n        cs =>\n            cs.serviceClass === service.classIdentifier &&\n            cs.kind == info.kind &&\n            cs.identifier === info.identifier &&\n            cs.field == field.name\n    )?.shadow\n\nconst fieldsSupported = (pkt: jdspec.PacketInfo) =>\n    pkt.fields.every(toBlocklyType)\n\nconst fieldName = (reg: jdspec.PacketInfo, field: jdspec.PacketMember) =>\n    field.name === \"_\" ? reg.name : field.name\n\nconst fieldToShadow = (\n    service: jdspec.ServiceSpec,\n    info: jdspec.PacketInfo,\n    field: jdspec.PacketMember\n): BlockReference =>\n    lookupCustomShadow(service, info, field) ||\n    (isBooleanField(field)\n        ? { kind: \"block\", type: \"jacdac_on_off\" }\n        : isStringField(field)\n        ? { kind: \"block\", type: \"text\" }\n        : field.unit === \"°\"\n        ? {\n              kind: \"block\",\n              type: \"jacdac_angle\",\n          }\n        : field.unit === \"/\"\n        ? { kind: \"block\", type: \"jacdac_ratio\" }\n        : /^%/.test(field.unit)\n        ? { kind: \"block\", type: \"jacdac_percent\" }\n        : field.type === \"u8\"\n        ? { kind: \"block\", type: \"jacdac_byte\" }\n        : {\n              kind: \"block\",\n              type: \"math_number\",\n              value: field.defaultValue || 0,\n              min: field.typicalMin || field.absoluteMin,\n              max: field.typicalMax || field.absoluteMax,\n          })\n\nconst variableName = (srv: jdspec.ServiceSpec, client: boolean) =>\n    `${humanify(srv.camelName).toLowerCase()}${client ? \"\" : \" server\"} 1`\n\nconst isEnabledRegister = (info: jdspec.PacketInfo) =>\n    info.fields.length === 1 &&\n    info.fields[0].type === \"bool\" &&\n    info.name === \"enabled\"\n\nconst customMessage = (\n    srv: jdspec.ServiceSpec,\n    reg: jdspec.PacketInfo,\n    field: jdspec.PacketMember\n) =>\n    customMessages.find(\n        m =>\n            m.service === srv.classIdentifier &&\n            m.register === reg.identifier &&\n            m.field === field.name\n    )\n\nconst eventFieldGroups = [\n    {\n        output: NUMBER_TYPE,\n        filter: isNumericType,\n    },\n    {\n        output: BOOLEAN_TYPE,\n        filter: isBooleanField,\n    },\n    {\n        output: STRING_TYPE,\n        filter: (f: jdspec.PacketMember) =>\n            isStringField(f) && f.encoding !== \"JSON\",\n    },\n    {\n        output: JSON_TYPE,\n        filter: (f: jdspec.PacketMember) =>\n            isStringField(f) && f.encoding === \"JSON\",\n    },\n]\n\ntype ServicePackets = {\n    service: jdspec.ServiceSpec\n    packets: jdspec.PacketInfo[]\n}\n\n// exports\nexport function toServiceName(service: JDService) {\n    let name = \"\"\n    const instanceName = service.instanceName\n    if (instanceName) name += humanify(dashify(instanceName))\n    else {\n        name += humanify(dashify(service.specification.shortName))\n        if (\n            service.device.services({\n                serviceClass: service.serviceClass,\n            }).length > 1\n        )\n            name += `[${service.serviceIndex.toString(16)}]`\n    }\n    name += ` (${service.device.shortId})`\n    return name\n}\n\nexport function toServiceType(service: JDService) {\n    return isSensor(service.specification) ? \"sensor\" : \"service\"\n}\n\nexport function toRoleType(service: jdspec.ServiceSpec, client = true) {\n    return `${service.classIdentifier}:${client ? \"client\" : \"server\"}`\n}\n\nexport function parseRoleType(v: VariableJSON) {\n    const split = v.type.split(\":\")\n    return {\n        role: v.name,\n        serviceClass: parseInt(split[0]),\n        client: split.length === 2 ? split[1] === \"client\" : true,\n    }\n}\n\nexport const fieldsToFieldInputs = (info: jdspec.PacketInfo) =>\n    info.fields.map(field => ({\n        type: \"input_value\",\n        name: fieldName(info, field),\n        check: toBlocklyType(field),\n    }))\n\nexport const fieldsToValues = (\n    service: jdspec.ServiceSpec,\n    info: jdspec.PacketInfo\n) =>\n    toMap<jdspec.PacketMember, BlockReference | BlockDefinition>(\n        info.fields,\n        field => fieldName(info, field),\n        field => fieldToShadow(service, info, field)\n    )\n\nexport const fieldsToMessage = (info: jdspec.PacketInfo) =>\n    info.fields.map((field, i) => `${humanify(field.name)} %${2 + i}`).join(\" \")\n\nexport interface ServiceRegister {\n    service: jdspec.ServiceSpec\n    register: jdspec.PacketInfo\n}\n\ninterface ServiceRegisterField extends ServiceRegister {\n    field: jdspec.PacketMember\n    einfo: jdspec.EnumInfo\n}\n\nexport const serviceHelp = (service: jdspec.ServiceSpec) => {\n    return withPrefix(`/services/${service.shortId}`)\n}\n\nconst sensorColor = paletteColorByIndex(1)\nconst otherColor = paletteColorByIndex(3)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const createServiceColor = (theme: Theme) => {\n    const serviceColor = (srv: jdspec.ServiceSpec) =>\n        isSensor(srv) ? sensorColor : otherColor\n    return serviceColor\n}\n\nexport const roleVariable = (\n    service: jdspec.ServiceSpec,\n    client = true\n): VariableInputDefinition => {\n    return {\n        type: \"field_variable\",\n        name: \"role\",\n        variable: variableName(service, client),\n        variableTypes: [toRoleType(service, client)],\n        defaultType: toRoleType(service, client),\n    }\n}\n\nexport const getServiceInfo = () => {\n    const allServices = serviceSpecifications()\n    const supportedServices = allServices\n        .filter(\n            service =>\n                !/^_/.test(service.shortId) && service.status !== \"deprecated\"\n        )\n        .filter(service => ignoredServices.indexOf(service.classIdentifier) < 0)\n    const registers = arrayConcatMany(\n        supportedServices.map(service =>\n            service.packets.filter(isHighLevelRegister).map(register => ({\n                service,\n                register,\n            }))\n        )\n    )\n    const [registerSimples, registerComposites] = splitFilter(\n        registers,\n        reg => reg.register.fields.length == 1\n    )\n    const [registerSimpleTypes, registerSimpleOthers] = splitFilter(\n        registerSimples,\n        ({ register }) => !!toBlocklyType(register.fields[0])\n    )\n    const registerSimpleEnumTypes = registerSimpleOthers\n        .filter(\n            ({ service, register }) => !!enumInfo(service, register.fields[0])\n        )\n        .map(({ service, register }) => ({\n            service,\n            register,\n            field: register.fields[0],\n            einfo: enumInfo(service, register.fields[0]),\n        }))\n    const registerCompositeEnumTypes = arrayConcatMany(\n        registerComposites.map(({ service, register }) =>\n            register.fields\n                .map(field => ({\n                    service,\n                    register,\n                    field,\n                    einfo: enumInfo(service, field),\n                }))\n                .filter(({ einfo }) => !!einfo)\n        )\n    )\n\n    return {\n        allServices,\n        supportedServices,\n        registers,\n        registerSimpleTypes,\n        registerComposites,\n        registerSimpleEnumTypes,\n        registerCompositeEnumTypes,\n        events: supportedServices\n            .map(service => ({\n                service,\n                events: service.packets.filter(isHighLevelEvent),\n            }))\n            .filter(kv => !!kv.events.length),\n\n        commands: arrayConcatMany(\n            supportedServices.map(service =>\n                service.packets\n                    .filter(\n                        pkt =>\n                            isCommand(pkt) &&\n                            !pkt.lowLevel &&\n                            fieldsSupported(pkt)\n                    )\n                    .map(pkt => ({\n                        service,\n                        command: pkt,\n                    }))\n            )\n        ),\n    }\n}\n\nexport class ServicesBaseDSL {\n    // only state required across methods of class\n    protected _serviceBlocks: ServiceBlockDefinition[] = []\n    protected _eventFieldBlocks: EventFieldDefinition[] = []\n    protected serviceColor: (srv: jdspec.ServiceSpec) => string\n\n    protected makeRegisterSimpleGetBlocks(\n        registers: ServiceRegister[],\n        client = true\n    ) {\n        return registers.map<RegisterBlockDefinition>(\n            ({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_simple_${service.shortId}_${register.name}${\n                    client ? \"\" : \"_server\"\n                }`,\n                message0:\n                    customMessage(service, register, register.fields[0])?.get ||\n                    `%1 ${humanify(register.name)}`,\n                args0: [roleVariable(service, client)],\n                inputsInline: true,\n                output: toBlocklyType(register.fields[0]),\n                colour: this.serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field: register.fields[0],\n\n                template: \"register_get\",\n            })\n        )\n    }\n\n    protected makeRegisterSetBlocks(\n        registers: ServiceRegister[],\n        client = true\n    ) {\n        return registers\n            .filter(({ register }) => !client || register.kind === \"rw\")\n            .filter(({ register }) => fieldsSupported(register))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_set_${service.shortId}_${register.name}${\n                    client ? \"\" : \"_server\"\n                }`,\n                message0: isEnabledRegister(register)\n                    ? `set %1 %2`\n                    : `set %1 ${register.name} to ${\n                          register.fields.length === 1\n                              ? \"%2\"\n                              : fieldsToMessage(register)\n                      }`,\n                args0: [\n                    roleVariable(service, client),\n                    ...fieldsToFieldInputs(register),\n                ],\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                colour: this.serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                previousStatement: CODE_STATEMENT_TYPE,\n                nextStatement: CODE_STATEMENT_TYPE,\n\n                template: \"register_set\",\n            }))\n    }\n\n    protected makeRegisterChangeByEventBlocks(\n        registers: ServiceRegister[],\n        client = true\n    ) {\n        return registers\n            .filter(({ service }) => !service.packets.some(isHighLevelEvent))\n            .filter(\n                ({ register }) =>\n                    register.fields.length === 1 &&\n                    isNumericType(register.fields[0]) &&\n                    register.identifier !== SystemReg.Intensity\n            )\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_change_by_events_${service.shortId}_${\n                    register.name\n                }${client ? \"\" : \"_server\"}`,\n                message0: `on %1 ${humanify(register.name)} change by %2`,\n                args0: [\n                    roleVariable(service, client),\n                    ...fieldsToFieldInputs(register),\n                ].filter(v => !!v),\n                values: fieldsToValues(service, register),\n                inputsInline: true,\n                nextStatement: CODE_STATEMENT_TYPE,\n                colour: this.serviceColor(service),\n                tooltip: `Event raised when ${register.name} changes`,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_change_event\",\n            }))\n    }\n\n    protected makeRegisterNumericsGetBlocks(\n        registers: ServiceRegister[],\n        client = true\n    ) {\n        return registers\n            .filter(re => re.register.fields.some(isNumericType))\n            .map<RegisterBlockDefinition>(({ service, register }) => ({\n                kind: \"block\",\n                type: `jacdac_get_numerics_${service.shortId}_${register.name}${\n                    client ? \"\" : \"_server\"\n                }`,\n                message0: `%1 ${humanify(register.name)}${\n                    register.fields.length > 1 ? ` %2` : \"\"\n                }`,\n                args0: [\n                    roleVariable(service, client),\n                    register.fields.length > 1\n                        ? <OptionsInputDefinition>{\n                              type: \"field_dropdown\",\n                              name: \"field\",\n                              options: register.fields\n                                  .filter(f => isNumericType(f))\n                                  .map(field => [\n                                      humanify(field.name),\n                                      fieldName(register, field),\n                                  ]),\n                          }\n                        : undefined,\n                ].filter(v => !!v),\n                inputsInline: true,\n                output: \"Number\",\n                colour: this.serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n\n                template: \"register_get\",\n            }))\n    }\n\n    protected makeRegisterEnumGetBlocks(\n        registers: ServiceRegisterField[],\n        client = true\n    ) {\n        return registers.map<RegisterBlockDefinition>(\n            ({ service, register, field, einfo }) => ({\n                kind: \"block\",\n                type: `jacdac_get_enum_${service.shortId}_${register.name}_${\n                    field.name\n                }${client ? \"\" : \"_server\"}`,\n                message0:\n                    customMessage(service, register, field)?.get ||\n                    `%1 ${humanify(register.name)}${\n                        field.name === \"_\" ? \"\" : ` ${field.name}`\n                    } %2`,\n                args0: [\n                    roleVariable(service, client),\n                    <OptionsInputDefinition>{\n                        type: \"field_dropdown\",\n                        name: field.name,\n                        options: Object.keys(einfo.members).map(member => [\n                            humanify(member),\n                            member,\n                        ]),\n                    },\n                ],\n                inputsInline: true,\n                output: \"Boolean\",\n                colour: this.serviceColor(service),\n                tooltip: register.description,\n                helpUrl: serviceHelp(service),\n                service,\n                register,\n                field,\n\n                template: \"register_get\",\n            })\n        )\n    }\n\n    // generate accessor blocks for event/command data with numbers\n    protected makeFieldBlocks(sps: ServicePackets[], client = true) {\n        const worker = (\n            sp: ServicePackets,\n            output: string,\n            filter: (field: jdspec.PacketMember) => boolean\n        ) => {\n            const { service, packets } = sp\n            return packets\n                .filter(pkt => pkt.fields.filter(filter).length > 0)\n                .map(pkt => ({ service, pkt }))\n                .map(\n                    ({ service, pkt }) =>\n                        <EventFieldDefinition>{\n                            kind: \"block\",\n                            type: `jacdac_event_field_${output.toLowerCase()}_${\n                                service.shortId\n                            }_${pkt.name}${client ? \"\" : \"_server\"}`,\n                            message0: `${pkt.name} %1`,\n                            args0: [\n                                <InputDefinition>{\n                                    type: \"field_dropdown\",\n                                    name: \"field\",\n                                    options: pkt.fields.map(field => [\n                                        humanify(field.name),\n                                        field.name,\n                                    ]),\n                                },\n                            ],\n                            colour: this.serviceColor(service),\n                            inputsInline: true,\n                            tooltip: `Data fields of the ${pkt.name} ${\n                                client ? \"event\" : \"command\"\n                            }`,\n                            helpUrl: serviceHelp(service),\n                            service,\n                            event: pkt,\n                            output,\n                            template: \"event_field\",\n                        }\n                )\n        }\n\n        return arrayConcatMany(\n            arrayConcatMany(\n                eventFieldGroups.map(({ output, filter }) =>\n                    sps.map(sp => worker(sp, output, filter))\n                )\n            )\n        )\n    }\n\n    protected createCategoryHelper(options: CreateCategoryOptions) {\n        const { theme, source, liveServices } = options\n        this.serviceColor = createServiceColor(theme)\n\n        const blockServices: { serviceClass: number }[] =\n            source?.variables\n                .map(parseRoleType)\n                .filter(\n                    vt =>\n                        !!serviceSpecificationFromClassIdentifier(\n                            vt.serviceClass\n                        )\n                ) || []\n        const usedEvents: Set<jdspec.PacketInfo> = new Set(\n            source?.blocks\n                ?.map(block => ({\n                    block,\n                    definition: resolveBlockDefinition(block.type),\n                }))\n                .filter(({ definition }) => definition?.template === \"event\")\n                .map(({ block, definition }) => {\n                    const { events } = definition as EventBlockDefinition\n                    if (events.length === 1) return events[0]\n                    else {\n                        const eventName = block.inputs[0].fields[\"event\"]\n                            .value as string\n                        return events.find(ev => ev.name === eventName)\n                    }\n                })\n                .filter(ev => !!ev)\n        )\n        const jdBlocks = this._serviceBlocks.filter(block => !!block.service)\n        const services = uniqueMap(\n            jdBlocks,\n            block => block.service.shortId,\n            block => block.service\n        )\n\n        const toolboxServices: jdspec.ServiceSpec[] = uniqueMap(\n            Flags.diagnostics\n                ? services\n                : [\n                      ...blockServices\n                          .map(pair =>\n                              services.find(\n                                  service =>\n                                      service.classIdentifier ===\n                                      pair.serviceClass\n                              )\n                          )\n                          .filter(srv => !!srv),\n                      ...liveServices.map(s => s.specification),\n                  ],\n            srv => srv.shortId,\n            srv => srv\n        )\n            .filter(\n                srv => srv && ignoredServices.indexOf(srv.classIdentifier) < 0\n            )\n            .sort((l, r) => l.name.localeCompare(r.name))\n\n        const getFieldBlocks = (\n            service: jdspec.ServiceSpec,\n            fieldBlocks: EventFieldDefinition[]\n        ) =>\n            fieldBlocks\n                .filter(\n                    ev => ev.service === service && usedEvents.has(ev.event)\n                )\n                .map<BlockReference>(block => ({\n                    kind: \"block\",\n                    type: block.type,\n                    values: block.values,\n                }))\n\n        const makeCategory = (\n            service: jdspec.ServiceSpec,\n            isClient: boolean,\n            serviceBlocks: ServiceBlockDefinition[],\n            eventFieldBLocks: EventFieldDefinition[]\n        ) => {\n            return {\n                kind: \"category\",\n                name: service.name + (isClient ? \"\" : \" Server\"),\n                colour: this.serviceColor(service),\n                contents: [\n                    <ButtonDefinition>{\n                        kind: \"button\",\n                        text: `Add ${service.name} ${\n                            isClient ? \"role\" : \"server\"\n                        }`,\n                        callbackKey: `jacdac_add_role_callback_${toRoleType(\n                            service,\n                            isClient\n                        )}`,\n                        callback: workspace =>\n                            Variables.createVariableButtonHandler(\n                                workspace,\n                                null,\n                                toRoleType(service, isClient)\n                            ),\n                    },\n                    ...serviceBlocks.map<BlockReference>(block => ({\n                        kind: \"block\",\n                        type: block.type,\n                        values: block.values,\n                    })),\n                    ...getFieldBlocks(service, eventFieldBLocks),\n                ],\n            }\n        }\n\n        return (\n            serviceBlocks: ServiceBlockDefinition[],\n            eventFieldBlocks: EventFieldDefinition[],\n            client = true\n        ) =>\n            toolboxServices\n                .map(serviceClient => ({\n                    serviceClient,\n                    serviceBlocks: serviceBlocks.filter(\n                        block => block.service === serviceClient\n                    ),\n                }))\n                .map<CategoryDefinition>(\n                    sc =>\n                        makeCategory(\n                            sc.serviceClient,\n                            client,\n                            sc.serviceBlocks,\n                            eventFieldBlocks\n                        ) as CategoryDefinition\n                )\n    }\n\n    compileEventToVM(options: CompileEventToVMOptions): CompileEventToVMResult {\n        const makeAwaitEvent = (\n            cmd: string,\n            role: string,\n            eventName: string\n        ) => {\n            return <CompileEventToVMResult>{\n                expression: <jsep.CallExpression>{\n                    type: \"CallExpression\",\n                    arguments:\n                        cmd == \"awaitEvent\"\n                            ? [\n                                  toMemberExpression(\n                                      role.toString(),\n                                      eventName.toString()\n                                  ),\n                              ]\n                            : [\n                                  toIdentifier(role.toString()),\n                                  toIdentifier(eventName.toString()),\n                              ],\n                    callee: toIdentifier(cmd),\n                },\n                event: {\n                    role: role.toString(),\n                    event: eventName.toString(),\n                },\n            }\n        }\n\n        const { block, definition, blockToExpression } = options\n        const { inputs } = block\n        const { template } = definition\n\n        switch (template) {\n            case \"event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { value: eventName } = inputs[0].fields[\"event\"]\n                return makeAwaitEvent(\n                    \"awaitEvent\",\n                    role.toString(),\n                    eventName.toString()\n                )\n            }\n            case \"register_change_event\": {\n                const { value: role } = inputs[0].fields[\"role\"]\n                const { register } = definition as RegisterBlockDefinition\n                const { expr, errors } = blockToExpression(\n                    undefined,\n                    inputs[0].child\n                )\n                return <CompileEventToVMResult>{\n                    expression: <jsep.CallExpression>{\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role.toString(), register.name),\n                            expr,\n                        ],\n                        callee: toIdentifier(\"awaitChange\"),\n                    },\n                    errors,\n                }\n            }\n            default: {\n                const { type } = block\n                switch (type) {\n                    case ROLE_BOUND_EVENT_BLOCK: {\n                        const { value: role } = inputs[0].fields[\"role\"]\n                        const { value: eventName } = inputs[0].fields[\"event\"]\n                        return makeAwaitEvent(\n                            \"roleBound\",\n                            role.toString(),\n                            eventName.toString()\n                        )\n                    }\n                }\n            }\n        }\n        return undefined\n    }\n\n    compileExpressionToVM(\n        options: CompileExpressionToVMOptions\n    ): ExpressionWithErrors {\n        const { event, definition, block } = options\n        const { inputs, id } = block\n        const { template } = definition\n        switch (template) {\n            case \"register_get\": {\n                const { register } = definition as RegisterBlockDefinition\n                const { value: role } = inputs[0].fields[\"role\"]\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        role as string,\n                        field\n                            ? toMemberExpression(\n                                  register.name,\n                                  field.value as string\n                              )\n                            : register.name\n                    ),\n                    errors: [],\n                }\n            }\n            case \"event_field\": {\n                const { event: eventInfo } = definition as EventFieldDefinition\n                const errors: VMError[] = []\n                if (event.event !== eventInfo.name) {\n                    errors.push({\n                        sourceId: id,\n                        message: `Event ${eventInfo.name} is not available in this handler.`,\n                    })\n                }\n                const field = inputs[0].fields[\"field\"]\n                return {\n                    expr: toMemberExpression(\n                        event.role,\n                        toMemberExpression(event.event, field.value as string)\n                    ),\n                    errors,\n                }\n            }\n            default: {\n                const { type } = block\n                const errors: VMError[] = []\n                switch (type) {\n                    case ROLE_BOUND_BLOCK: {\n                        const { value: role } = inputs[0].fields[\"role\"]\n                        return {\n                            expr: {\n                                type: \"CallExpression\",\n                                arguments: [toIdentifier(role.toString())],\n                                callee: toMemberExpression(\n                                    \"$fun\",\n                                    \"roleBoundExpression\"\n                                ),\n                            } as jsep.Expression,\n                            errors,\n                        }\n                    }\n                }\n            }\n        }\n        return undefined\n    }\n\n    compileCommandToVM(options: CompileCommandToVMOptions) {\n        const { event, block, definition, blockToExpression } = options\n        const { template } = definition\n        const { inputs } = block\n        switch (template) {\n            case \"register_set\": {\n                // TODO: need to handle the case of writing a register with fields\n                const { register } = definition as RegisterBlockDefinition\n                const exprsErrors = inputs.map(a => {\n                    return blockToExpression(event, a.child)\n                })\n                const { value: role } = inputs[0].fields.role\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [\n                            toMemberExpression(role as string, register.name),\n                            ...exprsErrors.map(p => p.expr),\n                        ],\n                        callee: toIdentifier(\"writeRegister\"),\n                    }),\n                    errors: exprsErrors.flatMap(p => p.errors),\n                }\n            }\n            case \"raiseNo\":\n            case \"raiseArgs\":\n            case \"command\": {\n                const { command: serviceCommand } =\n                    definition as CommandBlockDefinition\n                const { value: role } = inputs[0].fields.role\n                const eventName =\n                    template === \"raiseNo\"\n                        ? inputs[0].fields[\"event\"].value.toString()\n                        : \"\"\n                const exprsErrors =\n                    template === \"raiseNo\"\n                        ? []\n                        : inputs.map(a => {\n                              return blockToExpression(event, a.child)\n                          })\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: exprsErrors.map(p => p.expr),\n                        callee: toMemberExpression(\n                            role as string,\n                            eventName ? eventName : serviceCommand.name\n                        ),\n                    }),\n                    errors: exprsErrors.flatMap(p => p.errors),\n                }\n            }\n            case \"server\": {\n                return {\n                    cmd: makeVMBase(block, {\n                        type: \"CallExpression\",\n                        arguments: [],\n                        callee: toIdentifier(\"nop\"),\n                    }),\n                    errors: [],\n                }\n            }\n            default: {\n                const { type } = block\n                switch (type) {\n                    case SET_STATUS_LIGHT_BLOCK: {\n                        console.log(\"SET_STATUS\")\n                    }\n                }\n            }\n        }\n\n        return undefined\n    }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport workerProxy from \"./proxy\"\nimport type {\n    CsvDownloadRequest,\n    CsvSaveRequest,\n    CsvParseRequest,\n    CsvFile,\n    CsvFileResponse,\n    CsvUnparseRequest,\n    CsvUnparseResponse,\n    CsvMessage,\n} from \"../../../../workers/csv/dist/node_modules/csv.worker\"\n\nexport async function downloadCSV(url: string): Promise<CsvFile> {\n    const worker = workerProxy(\"csv\")\n    const res = await worker.postMessage<CsvDownloadRequest, CsvFileResponse>({\n        worker: \"csv\",\n        type: \"download\",\n        url,\n    })\n    return res?.file\n}\n\nexport async function saveCSV(\n    fileHandle: FileSystemFileHandle,\n    data: object[]\n): Promise<void> {\n    const worker = workerProxy(\"csv\")\n    await worker.postMessage<CsvSaveRequest, CsvMessage>({\n        worker: \"csv\",\n        type: \"save\",\n        fileHandle,\n        data,\n    })\n}\n\nexport async function unparseCSV(data: object[]): Promise<string> {\n    const worker = workerProxy(\"csv\")\n    const resp = await worker.postMessage<\n        CsvUnparseRequest,\n        CsvUnparseResponse\n    >({\n        worker: \"csv\",\n        type: \"unparse\",\n        data,\n    })\n    return resp?.text\n}\n\nexport async function parseCSV(source: string): Promise<CsvFile> {\n    const worker = workerProxy(\"csv\")\n    const resp = await worker.postMessage<CsvParseRequest, CsvFileResponse>({\n        worker: \"csv\",\n        type: \"parse\",\n        source,\n    })\n    return resp?.file\n}\n","import { BlockJSON, FieldJSON, InputJSON, WorkspaceJSON } from \"./workspacejson\"\n\nexport interface WorkspaceVisitor {\n    visitBlock?: (block: BlockJSON) => void\n    visitInput?: (input: InputJSON) => void\n    visitField?: (name: string, field: FieldJSON) => void\n}\n\nexport function visitBlock(block: BlockJSON, visitor: WorkspaceVisitor) {\n    if (!block) return\n    visitor.visitBlock?.(block)\n    const { inputs, children } = block\n    inputs?.forEach(input => visitInput(input, visitor))\n    children?.forEach(child => visitBlock(child, visitor))\n}\n\nexport function visitInput(input: InputJSON, visitor: WorkspaceVisitor) {\n    if (!input) return\n    visitor.visitInput?.(input)\n    const { fields, child } = input\n    if (fields) Object.keys(fields).map(k => visitField(k, fields[k], visitor))\n    visitBlock(child, visitor)\n}\n\nexport function visitField(\n    name: string,\n    field: FieldJSON,\n    visitor: WorkspaceVisitor\n) {\n    if (!field) return\n    visitor.visitField?.(name, field)\n}\n\nexport function visitWorkspace(\n    workspace: WorkspaceJSON,\n    visitor: WorkspaceVisitor\n) {\n    workspace?.blocks?.forEach(block => visitBlock(block, visitor))\n}\n","import { BlockWithServices, FieldWithServices } from \"../WorkspaceContext\"\nimport { Block, FieldDropdown } from \"blockly\"\nimport { withPrefix } from \"gatsby\"\nimport { downloadCSV } from \"../dsl/workers/csv.proxy\"\n\nconst builtins = {\n    cereal: withPrefix(\"/datasets/cereal.csv\"),\n    penguins: withPrefix(\"/datasets/penguins.csv\"),\n}\n\nexport default class BuiltinDataSetField\n    extends FieldDropdown\n    implements FieldWithServices\n{\n    static KEY = \"jacdac_field_data_builtin_dataset\"\n    private initialized = false\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    static fromJson(options: object) {\n        return new BuiltinDataSetField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    constructor(options: object) {\n        super(() => Object.keys(builtins).map(k => [k, k]), undefined, options)\n    }\n\n    init() {\n        super.init()\n        this.initialized = true\n        this.updateData()\n    }\n\n    private async updateData() {\n        if (!this.initialized) return\n\n        const url = builtins[this.getValue()]\n        if (!url) return\n\n        // load dataset as needed\n        const sourceBlock = this.getSourceBlock() as BlockWithServices\n        const marker = !!sourceBlock?.isInsertionMarker()\n        if (!sourceBlock || marker) return\n\n        const services = sourceBlock.jacdacServices\n        if (!services || services.cache[BuiltinDataSetField.KEY] === url) return // already downloaded\n        // avoid races\n        services.cache[BuiltinDataSetField.KEY] = url\n\n        const { data, errors } = await downloadCSV(url)\n        if (errors?.length)\n            console.debug(`csv parse errors`, {\n                id: sourceBlock.id,\n                marker,\n                data,\n                errors,\n                services,\n                url,\n            })\n        services.data = data\n    }\n\n    setSourceBlock(block: Block) {\n        super.setSourceBlock(block)\n        this.updateData()\n    }\n\n    doValueUpdate_(newValue) {\n        super.doValueUpdate_(newValue)\n        this.updateData()\n    }\n\n    notifyServicesChanged() {\n        this.updateData()\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport ReactField, { ReactFieldJSON } from \"./ReactField\"\nimport {\n    BlockDefinition,\n    DataPreviewInputDefinition,\n    identityTransformData,\n} from \"../toolbox\"\nimport Suspense from \"../../ui/Suspense\"\nconst DataTablePreviewWidget = lazy(() => import(\"./DataTablePreviewWidget\"))\n\nexport interface DataPreviewOptions extends ReactFieldJSON {\n    compare?: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default class DataPreviewField extends ReactField<ReactFieldJSON> {\n    static KEY = \"jacdac_field_data_preview\"\n    compare: boolean\n\n    static fromJson(options: DataPreviewOptions) {\n        return new DataPreviewField(options?.value, undefined, options)\n    }\n\n    // the first argument is a dummy and never used\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(value: string, validator?: any, options?: DataPreviewOptions) {\n        super(value, validator, options)\n        this.compare = !!options?.compare\n    }\n\n    protected initCustomView(): SVGElement {\n        const group = this.fieldGroup_\n        group.classList.add(\"blocklyFieldButton\")\n        return undefined\n    }\n\n    getText_() {\n        return \"👀\"\n    }\n\n    renderField(): ReactNode {\n        return (\n            <Suspense>\n                <DataTablePreviewWidget compare={this.compare} />\n            </Suspense>\n        )\n    }\n}\n\nexport function addDataPreviewField(block: BlockDefinition): BlockDefinition {\n    const preview = block?.dataPreviewField\n    if (preview) {\n        // don't add twice\n        block.dataPreviewField = false\n        // parse args and add one more arg\n        const { message0 } = block\n        const i = message0.lastIndexOf(\"%\")\n        const index = parseInt(message0.substr(i + 1)) || 0\n        block.message0 += ` %${index + 1}`\n\n        // does this mutate the data?\n        const identity =\n            preview === \"after\" || block.transformData === identityTransformData\n\n        // add field\n        block.args0.push({\n            type: DataPreviewField.KEY,\n            name: \"preview\",\n            compare: !identity,\n        } as DataPreviewInputDefinition)\n    }\n    return block\n}\n","import React from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport DataTableWidget from \"./DataTableWidget\"\nimport { SMALL_TABLE_HEIGHT } from \"../toolbox\"\n\nexport interface DataPreviewOptions extends ReactFieldJSON {\n    transformed?: boolean\n    small?: boolean\n    selectColumns?: boolean\n}\n\nconst MAX_ITEMS = 256\nexport default class DataTableField extends ReactInlineField {\n    static KEY = \"jacdac_field_data_table\"\n    EDITABLE = false\n    transformed: boolean\n    small: boolean\n    selectColumns: boolean\n\n    static fromJson(options: DataPreviewOptions) {\n        return new DataTableField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: DataPreviewOptions) {\n        super(options)\n        this.transformed = !!options?.transformed\n        this.small = !!options?.small\n        this.selectColumns = !!options?.selectColumns\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"block\"\n        c.style.minWidth = \"388px\"\n        c.style.maxWidth = \"80vh\"\n        c.style.maxHeight = \"60vh\"\n        return c\n    }\n\n    renderInlineField() {\n        const tableHeight = this.small ? SMALL_TABLE_HEIGHT : undefined\n        return (\n            <DataTableWidget\n                maxItems={MAX_ITEMS}\n                tableHeight={tableHeight}\n                transformed={this.transformed}\n                selectColumns={this.selectColumns}\n            />\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport useBlockData from \"../useBlockData\"\nimport { Grid, Typography } from \"@mui/material\"\nimport { TABLE_HEIGHT, TABLE_WIDTH } from \"../toolbox\"\nimport { PointerBoundary } from \"./PointerBoundary\"\nimport CopyButton from \"../../ui/CopyButton\"\nimport { unparseCSV } from \"../dsl/workers/csv.proxy\"\nimport { roundWithPrecision, toMap } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { tidyHeaders, tidyResolveHeader } from \"./tidy\"\nimport { humanify } from \"../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\n\nconst PREFIX = \"DataTableWidget\"\n\nconst classes = {\n    empty: `${PREFIX}-empty`,\n    button: `${PREFIX}-button`,\n    root: `${PREFIX}-root`,\n    table: `${PREFIX}-table`,\n}\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(() => ({\n    background: \"#fff\",\n\n    [`& .${classes.empty}`]: {\n        paddingLeft: \"0.5rem\",\n        paddingRight: \"0.5rem\",\n        color: \"#000\",\n        borderRadius: \"0.25rem\",\n    },\n\n    [`& .${classes.button}`]: {\n        color: \"grey\",\n    },\n\n    [`& .${classes.root}`]: (props: StylesProps) => ({\n        marginTop: \"0.25rem\",\n        paddingLeft: \"0.5rem\",\n        paddingRight: \"0.5rem\",\n        background: \"#fff\",\n        color: \"#000\",\n        borderRadius: \"0.25rem\",\n        width: `calc(${TABLE_WIDTH}px - 0.25rem)`,\n        height: `calc(${props.tableHeight}px - 0.25rem)`,\n        overflow: \"auto\",\n    }),\n\n    [`& .${classes.table}`]: {\n        margin: 0,\n        fontSize: \"0.8rem\",\n        lineHeight: \"1rem\",\n\n        \"& th, td\": {\n            backgroundClip: \"padding-box\",\n            scrollSnapAlign: \"start\",\n        },\n        \"& th\": {\n            position: \"sticky\",\n            top: 0,\n        },\n        \"& td\": {\n            borderColor: \"#ccc\",\n            borderRightStyle: \"solid 1px\",\n        },\n    },\n}))\n\ninterface StylesProps {\n    tableHeight: number\n}\n\nexport default function DataTableWidget(props: {\n    label?: string\n    transformed?: boolean\n    tableHeight?: number\n    empty?: ReactNode\n    maxItems?: number\n    selectColumns?: boolean\n}): JSX.Element {\n    const {\n        label,\n        transformed,\n        tableHeight = TABLE_HEIGHT,\n        empty,\n        maxItems,\n        selectColumns,\n    } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data, transformedData } = useBlockData<{ id?: string } & unknown>(\n        sourceBlock\n    )\n    const raw = transformed ? transformedData : data\n\n    if (!raw?.length)\n        return empty ? <span className={classes.empty}>{empty}</span> : null\n\n    const selectedColumns = selectColumns\n        ? [0, 1, 2, 3]\n              .map(i => `column${i}`)\n              .map(n => tidyResolveHeader(raw, sourceBlock?.getFieldValue(n)))\n              .filter(c => !!c)\n        : []\n    const columns = selectedColumns.length\n        ? selectedColumns\n        : tidyHeaders(raw).headers\n    const table =\n        raw.length > maxItems\n            ? [\n                  ...raw.slice(0, maxItems),\n                  toMap(\n                      columns,\n                      c => c,\n                      () => \"...\"\n                  ),\n              ]\n            : raw\n\n    // console.log({\n    //     raw,\n    //     transformed,\n    //     transformedData,\n    //     data,\n    //     table,\n    //     selectedColumns,\n    //     columns,\n    // })\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const renderCell = (v: any) =>\n        v === undefined\n            ? \"\"\n            : typeof v === \"boolean\"\n            ? v\n                ? \"true\"\n                : \"false\"\n            : typeof v === \"number\"\n            ? roundWithPrecision(v, 3)\n            : v + \"\"\n\n    const handleCopy = async () => {\n        const text = unparseCSV(raw)\n        return text\n    }\n\n    return (\n        <Root sx={{ height: `${tableHeight}px - 0.25rem)` }}>\n            <PointerBoundary className={classes.root}>\n                <Grid container direction=\"column\" spacing={1}>\n                    <Grid item xs={12}>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"flex-start\"\n                            alignItems=\"center\"\n                            spacing={1}\n                        >\n                            {label && (\n                                <Grid item>\n                                    <Typography variant=\"h6\">\n                                        {label}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <CopyButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onCopy={handleCopy}\n                                />\n                            </Grid>\n                            {raw.length > 1 && (\n                                <Grid item>\n                                    <Typography variant=\"caption\">\n                                        {raw.length} rows x {columns.length}{\" \"}\n                                        columns\n                                    </Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <table className={classes.table}>\n                            <thead>\n                                <tr>\n                                    {columns.map(c => (\n                                        <th key={c}>{humanify(c)}</th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {table.map((r, i) => (\n                                    <tr key={r.id || i}>\n                                        {columns.map(c => (\n                                            <td key={c}>{renderCell(r[c])}</td>\n                                        ))}\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </Grid>\n                </Grid>\n            </PointerBoundary>\n        </Root>\n    )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Block, FieldDropdown } from \"blockly\"\nimport { CHANGE } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport { parseCSV } from \"../dsl/workers/csv.proxy\"\nimport {\n    resolveBlockServices,\n    resolveWorkspaceServices,\n} from \"../WorkspaceContext\"\nimport { ReactFieldJSON } from \"./ReactField\"\n\nexport default class FileOpenField extends FieldDropdown {\n    static KEY = \"jacdac_field_file_open\"\n    SERIALIZABLE = true\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _data: object[]\n    private _unmount: () => void\n\n    static fromJson(options: ReactFieldJSON) {\n        return new FileOpenField(options)\n    }\n\n    constructor(options?: ReactFieldJSON) {\n        super(() => [[\"\", \"\"]], undefined, options)\n    }\n\n    fromXml(fieldElement: Element) {\n        this.setValue(fieldElement.textContent)\n    }\n\n    getOptions(): string[][] {\n        const options = this.resolveFiles()?.map(f => [f.name, f.name]) || []\n        const value = this.getValue()\n\n        return options.length < 1\n            ? [[value || \"\", value || \"\"]]\n            : [...options, [\"\", \"\"]]\n    }\n\n    doClassValidation_(newValue?: string) {\n        // skip super class validationervices chan\n        return newValue\n    }\n\n    init() {\n        super.init()\n        this.updateData()\n    }\n\n    setSourceBlock(block: Block) {\n        super.setSourceBlock(block)\n        this.updateData()\n    }\n\n    doValueUpdate_(newValue) {\n        super.doValueUpdate_(newValue)\n        this.parseSource()\n    }\n\n    notifyServicesChanged() {\n        this.updateData()\n    }\n\n    dispose() {\n        super.dispose()\n        this.unmount()\n    }\n\n    private resolveFiles() {\n        const sourceBlock = this.getSourceBlock()\n        const services = resolveWorkspaceServices(sourceBlock?.workspace)\n        const directory = services?.workingDirectory\n        return directory?.files.filter(f => /\\.csv$/i.test(f.name))\n    }\n\n    private async parseSource() {\n        const filename = this.getValue()\n        const file = this.resolveFiles()?.find(f => f.name === filename)\n        if (file) {\n            try {\n                console.debug(`file: loading ${file.name}`)\n                const source = await file.textAsync()\n                console.debug(`file: loaded ${(source?.length || 0) / 1024}kb`)\n                if (source) {\n                    const csv = await parseCSV(source)\n                    this._data = csv?.data\n                    this.updateData()\n                }\n            } catch (e) {\n                console.log(e)\n                this.value_ = undefined\n            }\n        }\n    }\n\n    private async updateData() {\n        const sourceBlock = this.getSourceBlock()\n        // update current data\n        const blockServices = resolveBlockServices(sourceBlock)\n        if (blockServices) blockServices.data = this._data\n\n        // register file system changes\n        this.unmount()\n        const wsServices = resolveWorkspaceServices(sourceBlock?.workspace)\n        if (wsServices) {\n            const { workingDirectory } = wsServices\n            this._unmount = workingDirectory?.subscribe(CHANGE, () =>\n                this.updateData()\n            )\n        }\n    }\n\n    private unmount() {\n        if (this._unmount) {\n            this._unmount()\n            this._unmount = undefined\n        }\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Field } from \"blockly\"\n\nexport default class FileSaveField extends Field {\n    static KEY = \"jacdac_field_file_save\"\n    SERIALIZABLE = true\n    private fileType: string\n\n    constructor(options?: any) {\n        super(\"...\", null, options)\n        this.fileType = options?.fileType || \"csv\"\n    }\n    fileHandle: FileSystemFileHandle\n\n    static fromJson(options: any) {\n        return new FileSaveField(options)\n    }\n\n    showEditor_() {\n        this.openFileHandle()\n    }\n\n    private async openFileHandle() {\n        const options: SaveFilePickerOptions = {\n            types: [\n                {\n                    id: \"text\",\n                    description: \"Text Files\",\n                    accept: {\n                        \"text/plain\": [\".txt\"],\n                    },\n                },\n                {\n                    id: \"csv\",\n                    description: \"CSV Files\",\n                    accept: {\n                        \"text/csv\": [\".csv\"],\n                    },\n                },\n                {\n                    id: \"json\",\n                    description: \"JSON Files\",\n                    accept: {\n                        \"application/json\": [\".json\"],\n                    },\n                },\n            ].filter(({ id }) => this.fileType === id),\n            excludeAcceptAllOption: true,\n        }\n        this.fileHandle = await window.showSaveFilePicker?.(options)\n        this.setValue(this.fileHandle?.name || \"\")\n    }\n}\n","import React, { lazy, useContext } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport useBlockData from \"../useBlockData\"\nimport Suspense from \"../../ui/Suspense\"\nimport { tidyFindLastValue } from \"./tidy\"\nimport { tidy, min as tidyMin, max as tidyMax, summarize } from \"@tidyjs/tidy\"\nimport { Grid } from \"@mui/material\"\nimport { roundWithPrecision } from \"../../../../jacdac-ts/src/jdom/utils\"\nconst GaugeWidget = lazy(() => import(\"../../widgets/GaugeWidget\"))\n\nfunction GaugeWidgetView() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { data } = useBlockData<any>(sourceBlock)\n    if (!data?.length) return null\n\n    const field = sourceBlock?.getFieldValue(\"field\") as string\n    let value = tidyFindLastValue(data, field)\n    if (value === undefined) return null\n\n    let min = Number(sourceBlock?.getFieldValue(\"min\"))\n    let max = Number(sourceBlock?.getFieldValue(\"max\"))\n    if (min === max) {\n        min = undefined\n        max = undefined\n    }\n\n    if (isNaN(min)) min = tidy(data, summarize({ min: tidyMin(field) }))[0].min\n    if (isNaN(max)) max = tidy(data, summarize({ max: tidyMax(field) }))[0].max\n\n    // round with precision\n    const step = Math.ceil(Math.abs(value)) / 10\n    const precision = step < 1 ? Math.ceil(-Math.log10(step)) : 0\n    value = roundWithPrecision(value, precision)\n\n    // clamp values\n    value = Math.min(max, Math.max(min, value))\n\n    return (\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid item>\n                <Suspense>\n                    <GaugeWidget value={value} min={min} max={max} />\n                </Suspense>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class GaugeWidgetField extends ReactInlineField {\n    static KEY = \"jacdac_field_gauge_widget\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new GaugeWidgetField(options)\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.width = \"20rem\"\n        return c\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <GaugeWidgetView />\n    }\n}\n","import { ReactFieldJSON } from \"./ReactField\"\nimport { FieldDropdown } from \"blockly\"\n\nexport interface IFrameDataChooserOptions extends ReactFieldJSON {\n    dataId: string\n}\n\nexport const AllOptions: Record<string, [string, string][]> = {}\n\nexport default class IFrameDataChooserField extends FieldDropdown {\n    static KEY = \"jacdac_field_iframe_data_chooser\"\n    SERIALIZABLE = true\n    dataId: string\n\n    static fromJson(options: ReactFieldJSON) {\n        return new IFrameDataChooserField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    // the first argument is a dummy and never used\n    constructor(options?: IFrameDataChooserOptions) {\n        super(() => [[\"\", \"\"]], undefined, options)\n        this.dataId = options.dataId || \"\"\n    }\n\n    fromXml(fieldElement: Element) {\n        this.setValue(fieldElement.textContent)\n    }\n\n    getOptions(): string[][] {\n        const options = AllOptions[this.dataId]?.slice(0)\n        return !options?.length ? [[\"\", \"\"]] : options\n    }\n\n    doClassValidation_(newValue?: string) {\n        // skip super class validationervices chan\n        return newValue\n    }\n}\n","import React, { lazy, useContext, PointerEvent } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport Suspense from \"../../ui/Suspense\"\nimport NoServiceAlert from \"./NoServiceAlert\"\n\nconst JDomServiceTreeView = lazy(\n    () => import(\"../../tools/JDomServiceTreeView\")\n)\n\nfunction JDomTreeWidget() {\n    const { twinService, flyout } = useContext(WorkspaceContext)\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        event.stopPropagation()\n    }\n\n    if (flyout) return null\n    if (!twinService) return <NoServiceAlert />\n\n    return (\n        <div\n            style={{ minWidth: \"12rem\", cursor: \"inherit\" }}\n            onPointerDown={onPointerStopPropagation}\n            onPointerUp={onPointerStopPropagation}\n            onPointerMove={onPointerStopPropagation}\n        >\n            {twinService && (\n                <Suspense>\n                    <JDomServiceTreeView\n                        service={twinService}\n                        defaultExpanded={[twinService.id]}\n                    />\n                </Suspense>\n            )}\n        </div>\n    )\n}\n\nexport default class JDomTreeField extends ReactInlineField {\n    static KEY = \"jacdac_field_jdom_service_tree\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new JDomTreeField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <JDomTreeWidget />\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport React, { lazy, ReactNode, useEffect, useState } from \"react\"\nimport ReactField, { ReactFieldJSON, UNMOUNT } from \"./ReactField\"\nimport type { JSONSchema4 } from \"json-schema\"\nimport Suspense from \"../../ui/Suspense\"\nimport { InputDefinition } from \"../toolbox\"\nimport { assert } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport JDEventSource from \"../../../../jacdac-ts/src/jdom/eventsource\"\nconst JSONSchemaForm = lazy(() => import(\"../../ui/JSONSchemaForm\"))\n\nexport interface JSONSettingsOptions extends ReactFieldJSON {\n    schema?: JSONSchema4\n}\n\nexport interface JSONSettingsInputDefinition extends InputDefinition {\n    type: \"jacdac_field_json_settings\"\n    schema: JSONSchema4\n}\n\nfunction JSONSettingsWidget(props: {\n    schema: JSONSchema4\n    value: any\n    events: JDEventSource\n    setValue: (newValue: any) => void\n}) {\n    const { schema, value, setValue, events } = props\n    const [editValue, setEditValue] = useState(value)\n\n    useEffect(\n        () => events.subscribe(UNMOUNT, () => setValue(editValue)),\n        [editValue]\n    )\n\n    return (\n        <div\n            style={{\n                maxWidth: \"22rem\",\n                minHeight: \"20rem\",\n                padding: \"0.5rem\",\n            }}\n        >\n            <Suspense>\n                <JSONSchemaForm\n                    schema={schema}\n                    value={editValue}\n                    setValue={setEditValue}\n                />\n            </Suspense>\n        </div>\n    )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default class JSONSettingsField extends ReactField<ReactFieldJSON> {\n    static KEY = \"jacdac_field_json_settings\"\n    SERIALIZABLE = true\n    schema: JSONSchema4\n\n    static fromJson(options: ReactFieldJSON) {\n        return new JSONSettingsField(options?.value, undefined, options)\n    }\n\n    // the first argument is a dummy and never used\n    constructor(value: string, validator?: any, options?: JSONSettingsOptions) {\n        super(value, validator, options)\n        this.schema = options?.schema || {}\n        this.darkMode = \"light\"\n        assert(!!this.schema, \"schema missing\")\n    }\n\n    protected initCustomView(): SVGElement {\n        const group = this.fieldGroup_\n        group.classList.add(\"blocklyFieldButton\")\n        return undefined\n    }\n\n    get defaultValue() {\n        return {}\n    }\n\n    getText_() {\n        return \"⚙️\"\n    }\n\n    renderField(): ReactNode {\n        const { schema, value = {}, events } = this\n        const setValue = (v: any) => (this.value = v)\n        return (\n            <JSONSettingsWidget\n                schema={schema}\n                value={value}\n                events={events}\n                setValue={setValue}\n            />\n        )\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { HidKeyboardModifiers } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport ReactField, { ReactFieldJSON } from \"./ReactField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { renderKeyboardKey } from \"../../../../jacdac-ts/src/servers/hidkeyboardserver\"\nconst KeyboardKeyInput = lazy(() => import(\"../../ui/KeyboardKeyInput\"))\n\nexport interface KeyboardFieldValue {\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nexport default class KeyboardKeyField extends ReactField<KeyboardFieldValue> {\n    static KEY = \"jacdac_field_keyboard_key\"\n\n    static fromJson(options: ReactFieldJSON) {\n        return new KeyboardKeyField(options?.value, undefined, options)\n    }\n\n    get defaultValue() {\n        return { selector: 4, modifiers: 0 }\n    }\n\n    getText_() {\n        const { selector, modifiers } = this.value\n        return renderKeyboardKey(selector, modifiers, true)\n    }\n\n    renderField(): ReactNode {\n        const { selector, modifiers } = this.value\n        const handleChange = (\n            newSelector: number,\n            newModifiers: HidKeyboardModifiers\n        ) => {\n            this.value = { selector: newSelector, modifiers: newModifiers }\n        }\n        return (\n            <Suspense>\n                <KeyboardKeyInput\n                    initialSelector={selector}\n                    initialModifiers={modifiers}\n                    onChange={handleChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport { rgbToHtmlColor } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { child } from \"../../widgets/svg\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst LEDWidget = lazy(() => import(\"../../widgets/LEDWidget\"))\n\nfunction LEDColorFieldWidget() {\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <LEDWidget\n                ledColor={value}\n                onLedColorChange={onValueChange}\n                ledCount={3}\n                color=\"secondary\"\n            />\n        </Suspense>\n    )\n}\n\nexport default class LEDColorField extends ReactField<number> {\n    static KEY = \"jacdac_field_led_color\"\n    static SHADOW = toShadowDefinition(LEDColorField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDColorField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 28, height: 28 })\n    }\n\n    protected initCustomView() {\n        const { width } = this.size_\n        const r = width >> 1\n        return child(this.fieldGroup_, \"circle\", {\n            r: width >> 1,\n            cx: r,\n            cy: r,\n            strokeWidth: 2,\n            stroke: \"#777\",\n        }) as SVGCircleElement\n    }\n\n    updateView() {\n        const c = rgbToHtmlColor(this.value)\n        const circle = this.view as SVGCircleElement\n        if (c) {\n            circle?.setAttribute(\"fill\", c)\n        }\n    }\n\n    getText_() {\n        return rgbToHtmlColor(this.value)\n    }\n\n    renderField(): ReactNode {\n        return <LEDColorFieldWidget />\n    }\n}\n","import ReactField from \"./ReactField\"\nimport { child } from \"../../widgets/svg\"\nimport { utils } from \"blockly\"\n\nexport default class ReactImageField<T> extends ReactField<T> {\n    constructor(value: string, width = 32, height = 32) {\n        super(value, undefined, undefined, { width, height })\n    }\n\n    setSize(width: number, height: number) {\n        this.size_ = new utils.Size(width, height)\n        const img = this.view as SVGImageElement\n        if (img) {\n            img.setAttribute(\"width\", width + \"\")\n            img.setAttribute(\"height\", height + \"\")\n        }\n    }\n\n    protected updateView() {\n        const imgUri = this.renderValue()\n        const img = this.view as SVGImageElement\n        if (imgUri) {\n            img?.setAttributeNS(\n                \"http://www.w3.org/1999/xlink\",\n                \"xlink:href\",\n                imgUri\n            )\n            img?.setAttribute(\"alt\", this.getText())\n        }\n    }\n\n    /**\n     * Renders the value to a data uri string\n     */\n    protected renderValue(): string {\n        return undefined\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        return child(this.fieldGroup_, \"image\", {\n            height,\n            width,\n            alt: this.getText(),\n        }) as SVGImageElement\n    }\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { fromHex, toHex } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, VALUE_CHANGE } from \"./ReactField\"\nimport ReactImageField from \"./ReactImageField\"\nconst LEDMatrixWidget = lazy(() => import(\"../../widgets/LEDMatrixWidget\"))\n\nexport interface LEDMatrixFieldValue {\n    // hex data\n    leds: string\n    rows: number\n    columns: number\n}\n\nexport default class LEDMatrixField extends ReactImageField<LEDMatrixFieldValue> {\n    static KEY = \"jacdac_field_led_matrix\"\n\n    constructor(value: string) {\n        super(value)\n\n        this.events.on(VALUE_CHANGE, () => {\n            const { rows, columns } = this.value\n            this.setSize(32, (32 / columns) * rows)\n        })\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LEDMatrixField(options?.value)\n    }\n\n    get defaultValue() {\n        return {\n            leds: toHex(new Uint8Array(0)),\n            rows: 5,\n            columns: 5,\n        }\n    }\n\n    getText_() {\n        const { leds, rows, columns } = this.value\n        return `${leds} (${rows}x${columns})`\n    }\n\n    renderValue(): string {\n        const { leds, rows, columns } = this.value\n        // render current state to LEDmatrix field\n        const columnspadded = columns + (8 - (columns % 8))\n        const ledsBytes = fromHex(leds)\n        const cvs = document.createElement(\"canvas\")\n        const b = 3\n        const pw = 8\n        const ph = 8\n        const w = rows * pw + (rows - 1) * b\n        const h = columns * ph + (columns - 1) * b\n        cvs.width = w + 2 * b\n        cvs.height = h + 2 * b\n        const ctx = cvs.getContext(\"2d\")\n        ctx.fillStyle = \"#444\"\n        ctx.fillRect(b, b, w, h)\n        ctx.fillStyle = \"blue\"\n        for (let x = 0; x < columns; ++x) {\n            for (let y = 0; y < rows; ++y) {\n                const bitindex = y * columnspadded + x\n                const byte = ledsBytes[bitindex >> 3]\n                const bit = bitindex % 8\n                const on = 1 === ((byte >> bit) & 1)\n                ctx.fillStyle = on ? \"#ffc400\" : \"#000\"\n                ctx.fillRect(x * (pw + b) + b, y * (ph + b) + b, pw, ph)\n            }\n        }\n        const dataUri = cvs.toDataURL(\"image/png\")\n        return dataUri\n    }\n\n    renderField(): ReactNode {\n        const { leds, rows, columns } = this.value\n        const ledsBytes = fromHex(leds)\n        console.log(`led bytes`, { leds, ledsBytes })\n        const onChange = (newLeds: Uint8Array) =>\n            (this.value = {\n                leds: toHex(newLeds),\n                rows,\n                columns,\n            })\n        return (\n            <Suspense>\n                <LEDMatrixWidget\n                    color=\"secondary\"\n                    brightness={1}\n                    leds={ledsBytes}\n                    rows={rows}\n                    columns={columns}\n                    onChange={onChange}\n                />\n            </Suspense>\n        )\n    }\n}\n","import React, { lazy } from \"react\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport ReactInlineField from \"./ReactInlineField\"\nconst LogViewWidget = lazy(() => import(\"./LogViewWidget\"))\n\nexport default class LogViewField extends ReactInlineField {\n    static KEY = \"jacdac_field_log_view\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LogViewField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return (\n            <Suspense>\n                <LogViewWidget />\n            </Suspense>\n        )\n    }\n}\n","import React, { CSSProperties, useContext } from \"react\"\nimport { Button, useTheme } from \"@mui/material\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport { startServiceProviderFromServiceClass } from \"../../../../jacdac-ts/src/servers/servers\"\nimport JacdacContext, { JacdacContextProps } from \"../../../jacdac/Context\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../../jacdac-ts/src/jdom/spec\"\nimport { Alert } from \"@mui/material\"\n\nexport default function NoServiceAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { twinService, roleServiceClass, flyout } =\n        useContext(WorkspaceContext)\n    const theme = useTheme()\n    const spec = serviceSpecificationFromClassIdentifier(roleServiceClass)\n    const handleStartSimulator = () =>\n        startServiceProviderFromServiceClass(bus, spec.classIdentifier)\n\n    // nothing to do here\n    if (twinService || flyout) return null\n\n    // unresolved, unknown service\n    if (!twinService && !roleServiceClass) return null\n\n    // unknown spec\n    if (!spec) return <Alert severity=\"warning\">Unknown service</Alert>\n\n    const { palette } = theme\n    const style: CSSProperties = {\n        color: palette.text.primary,\n    }\n\n    return (\n        <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={<AddIcon />}\n            onClick={handleStartSimulator}\n            style={style}\n        >\n            start {spec.name}\n        </Button>\n    )\n}\n","import React, { lazy, ReactNode } from \"react\"\nimport { createToneContext, ToneContext } from \"../../ui/WebAudioContext\"\nimport Suspense from \"../../ui/Suspense\"\nimport ReactField, { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nconst PianoWidget = lazy(() => import(\"../../widgets/PianoWidget\"))\n\nexport default class NoteField extends ReactField<number> {\n    static KEY = \"jacdac_field_note\"\n    static SHADOW = toShadowDefinition(NoteField)\n    toneContext: ToneContext\n\n    static fromJson(options: ReactFieldJSON) {\n        return new NoteField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options)\n    }\n\n    get defaultValue() {\n        return 440\n    }\n\n    getText_() {\n        return (this.value | 0) + \"\"\n    }\n\n    renderField(): ReactNode {\n        const handlePlayTone = async (newFrequency: number) => {\n            this.value = newFrequency\n            if (!this.toneContext) this.toneContext = createToneContext()\n            this.toneContext?.playTone(newFrequency, 400, 0.5)\n        }\n        return (\n            <Suspense>\n                <PianoWidget playTone={handlePlayTone} />\n            </Suspense>\n        )\n    }\n}\n","import React, { PointerEvent, ReactNode, useContext } from \"react\"\nimport WorkspaceContext from \"../WorkspaceContext\"\n\nexport function PointerBoundary(props: {\n    className?: string\n    children: ReactNode\n}) {\n    const { dragging } = useContext(WorkspaceContext)\n    const { className, children } = props\n    const onPointerStopPropagation = (event: PointerEvent<HTMLDivElement>) => {\n        // make sure blockly does not handle drags when interacting with UI\n        if (!dragging) event.stopPropagation()\n    }\n    return (\n        <div\n            className={className}\n            style={dragging ? undefined : { cursor: \"inherit\" }}\n            onPointerDown={dragging ? undefined : onPointerStopPropagation}\n            onPointerUp={dragging ? undefined : onPointerStopPropagation}\n            onPointerMove={dragging ? undefined : onPointerStopPropagation}\n        >\n            {children}\n        </div>\n    )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Blockly from \"blockly\"\nimport JacdacProvider from \"../../../jacdac/Provider\"\nimport { ReactNode } from \"react\"\nimport { IdProvider } from \"react-use-id-hook\"\nimport DarkModeProvider from \"../../ui/DarkModeProvider\"\nimport AppTheme from \"../../ui/AppTheme\"\nimport { Box } from \"@mui/material\"\nimport { BlockDefinition } from \"../toolbox\"\nimport { assert } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport { ValueProvider } from \"./ValueContext\"\nimport JDEventSource from \"../../../../jacdac-ts/src/jdom/eventsource\"\nimport { CHANGE } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport {\n    BlockServices,\n    BlockWithServices,\n    FieldWithServices,\n    WorkspaceProvider,\n} from \"../WorkspaceContext\"\nimport { WebAudioProvider } from \"../../ui/WebAudioContext\"\nimport { ReactFieldBase } from \"./ReactFieldBase\"\n\ndeclare module \"blockly\" {\n    interface Block {\n        getColourTertiary(): string\n    }\n}\n\nexport type ReactFieldJSON = any\n\nexport const SOURCE_BLOCK_CHANGE = \"sourceBlockChange\"\nexport const VALUE_CHANGE = \"valueChange\"\nexport const MOUNT = \"mount\"\nexport const UNMOUNT = \"unmount\"\n\nexport default class ReactField<T> extends ReactFieldBase<T> {\n    SERIALIZABLE = true\n    public readonly events = new JDEventSource()\n    protected div_: Element\n    protected view: SVGElement\n    protected darkMode: \"light\" | \"dark\" = \"dark\"\n\n    // override to support custom view\n    protected initCustomView(): SVGElement {\n        return null\n    }\n\n    // override to update view\n    protected updateView() {}\n\n    getText_() {\n        return JSON.stringify(this.value)\n    }\n\n    toXml(fieldElement: Element) {\n        fieldElement.textContent = JSON.stringify(this.value)\n        return fieldElement\n    }\n\n    fromXml(fieldElement: Element) {\n        try {\n            const v = JSON.parse(fieldElement.textContent)\n            this.value = v\n        } catch (e) {\n            console.log(e, { text: fieldElement.textContent })\n            this.value = undefined\n        }\n    }\n\n    emitChange() {\n        this.events.emit(CHANGE)\n    }\n\n    setSourceBlock(block: Blockly.Block) {\n        const changed = block !== this.sourceBlock_\n        super.setSourceBlock(block)\n        if (changed && !block?.isInsertionMarker()) {\n            const bs = block as unknown as BlockWithServices\n            if (!bs.jacdacServices) {\n                bs.jacdacServices = new BlockServices()\n                bs.inputList?.forEach(i =>\n                    i.fieldRow?.forEach(f =>\n                        (\n                            f as unknown as FieldWithServices\n                        ).notifyServicesChanged?.()\n                    )\n                )\n            }\n            this.events.emit(SOURCE_BLOCK_CHANGE, block)\n            this.emitChange()\n        }\n    }\n\n    initView() {\n        this.view = this.initCustomView()\n        if (this.view) this.updateView()\n        else super.initView()\n    }\n\n    updateSize_() {\n        if (!this.view) super.updateSize_()\n    }\n\n    doValueUpdate_(newValue: string) {\n        const change = this.value_ !== newValue\n        if (this.view) {\n            this.value_ = newValue\n            this.updateView()\n        } else super.doValueUpdate_(newValue)\n        if (change) {\n            this.events.emit(VALUE_CHANGE, this.value)\n            this.emitChange()\n        }\n    }\n\n    showEditor_() {\n        this.div_ = Blockly.DropDownDiv.getContentDiv()\n        ReactDOM.render(this.render(), this.div_)\n        const border = this.sourceBlock_.getColourTertiary()\n        Blockly.DropDownDiv.setColour(this.sourceBlock_.getColour(), border)\n\n        // the div_ size has not been computed yet, so let the browse handle this\n        setTimeout(() => {\n            Blockly.DropDownDiv.showPositionedByField(\n                this,\n                this.dropdownDispose_.bind(this)\n            )\n            this.events.emit(MOUNT)\n        }, 200)\n    }\n\n    hide() {\n        Blockly.DropDownDiv.hideIfOwner(this, true)\n    }\n\n    dropdownDispose_() {\n        // this blows on hot reloads\n        try {\n            this.events.emit(UNMOUNT)\n            ReactDOM.unmountComponentAtNode(this.div_)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    render() {\n        const onValueChange = (newValue: any) => (this.value = newValue)\n        return (\n            <WorkspaceProvider field={this}>\n                <DarkModeProvider fixedDarkMode={this.darkMode}>\n                    <IdProvider>\n                        <WebAudioProvider>\n                            <JacdacProvider>\n                                <AppTheme>\n                                    <ValueProvider\n                                        value={this.value}\n                                        onValueChange={onValueChange}\n                                    >\n                                        <Box\n                                            m={0.5}\n                                            borderRadius=\"0.25rempx\"\n                                            bgcolor=\"background.paper\"\n                                        >\n                                            {this.renderField()}\n                                        </Box>\n                                    </ValueProvider>\n                                </AppTheme>\n                            </JacdacProvider>\n                        </WebAudioProvider>\n                    </IdProvider>\n                </DarkModeProvider>\n            </WorkspaceProvider>\n        )\n    }\n\n    renderField(): ReactNode {\n        return <span>not implemented</span>\n    }\n\n    dispose() {\n        this.view = undefined\n        super.dispose()\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function toShadowDefinition(fieldType: any): BlockDefinition {\n    assert(!!fieldType.KEY)\n    const type = fieldType.KEY + \"_shadow\"\n    return {\n        kind: \"block\",\n        type,\n        message0: `%1`,\n        args0: [\n            {\n                type: fieldType.KEY,\n                name: \"value\",\n            },\n        ],\n        style: \"math_blocks\",\n        output: \"Number\",\n        template: \"shadow\",\n    }\n}\n","import Blockly from \"blockly\"\n\nexport class ReactFieldBase<T> extends Blockly.Field {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(\n        value: string,\n        validator?: any,\n        options?: any,\n        size?: { width: number; height: number }\n    ) {\n        super(value, validator, options)\n        if (size) this.size_ = new Blockly.utils.Size(size.width, size.height)\n    }\n\n    get defaultValue(): T {\n        return {} as T\n    }\n\n    get value(): T {\n        try {\n            const v = JSON.parse(this.getValue())\n            return (v || this.defaultValue) as T\n        } catch (e) {\n            console.warn(e)\n            return this.defaultValue\n        }\n    }\n\n    set value(v: T) {\n        this.setValue(JSON.stringify(v))\n    }\n}\n","import React, { ReactNode } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactField from \"./ReactField\"\nimport { child } from \"../../widgets/svg\"\nimport DarkModeProvider from \"../../ui/DarkModeProvider\"\nimport { IdProvider } from \"react-use-id-hook\"\nimport JacdacProvider from \"../../../jacdac/Provider\"\nimport AppTheme from \"../../ui/AppTheme\"\nimport Blockly, { Events } from \"blockly\"\nimport { WorkspaceProvider } from \"../WorkspaceContext\"\nimport { WebAudioProvider } from \"../../ui/WebAudioContext\"\n\nexport default class ReactInlineField extends ReactField<unknown> {\n    protected container: HTMLDivElement\n    protected resizeObserver: ResizeObserver\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options?.value, undefined, options, { width: 1, height: 1 })\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"14rem\"\n        return c\n    }\n\n    protected initCustomView() {\n        const { width, height } = this.size_\n        const fo = child(this.fieldGroup_, \"foreignObject\", {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        }) as SVGForeignObjectElement\n\n        this.container = this.createContainer()\n        fo.appendChild(this.container)\n\n        this.resizeObserver = new ResizeObserver(\n            (entries: ResizeObserverEntry[]) => {\n                const entry = entries[0]\n                const { contentRect } = entry\n                this.size_.width = contentRect.width\n                this.size_.height = contentRect.height\n                fo.setAttribute(\"width\", this.size_.width + \"\")\n                fo.setAttribute(\"height\", this.size_.height + \"\")\n                this.forceRerender()\n                const b = this.sourceBlock_\n                if (b?.workspace) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const ev = new (Events.get(Events.BLOCK_MOVE) as any)(b)\n                    Events.fire(ev)\n                }\n            }\n        )\n        this.resizeObserver.observe(this.container)\n\n        ReactDOM.render(this.renderBlock(), this.container)\n        return fo\n    }\n\n    dispose() {\n        if (this.container) {\n            ReactDOM.unmountComponentAtNode(this.container)\n            this.container = undefined\n        }\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect()\n            this.resizeObserver = undefined\n        }\n        super.dispose()\n    }\n\n    renderField(): ReactNode {\n        return <div>not used</div>\n    }\n\n    renderInlineField(): ReactNode {\n        return null\n    }\n\n    renderBlock(): ReactNode {\n        return (\n            <WorkspaceProvider field={this}>\n                <DarkModeProvider fixedDarkMode=\"dark\">\n                    <IdProvider>\n                        <WebAudioProvider>\n                            <JacdacProvider>\n                                <AppTheme>{this.renderInlineField()}</AppTheme>\n                            </JacdacProvider>\n                        </WebAudioProvider>\n                    </IdProvider>\n                </DarkModeProvider>\n            </WorkspaceProvider>\n        )\n    }\n\n    getText_() {\n        return \"...\"\n    }\n\n    // don't bind any mouse event\n    bindEvents_() {\n        Blockly.Tooltip.bindMouseEvents(this.getClickTarget_())\n    }\n}\n","import { Grid, Slider } from \"@mui/material\"\nimport React, { ReactNode, useContext } from \"react\"\nimport ReactField from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nfunction FieldWithSlider(props: { children: ReactNode }) {\n    const { children } = props\n    const { value, onValueChange } =\n        useContext<ValueContextProps<number>>(ValueContext)\n    const handleChange = async (ev: unknown, nv: number | number[]) => {\n        const newValue = nv as number\n        onValueChange(newValue)\n    }\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n            <Grid item xs={12}>\n                <Slider\n                    color=\"secondary\"\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={`${Math.round(value)}°`}\n                    min={-90}\n                    max={90}\n                    step={5}\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"angle\"\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class SliderField extends ReactField<number> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(value: string, options?: any) {\n        super(value, undefined, options)\n    }\n\n    get defaultValue() {\n        return 0\n    }\n\n    getText_() {\n        return this.value + \"\"\n    }\n\n    renderField(): ReactNode {\n        return <FieldWithSlider>{this.renderWidget()}</FieldWithSlider>\n    }\n\n    renderWidget(): ReactNode {\n        return null\n    }\n}\n","import React, { lazy, ReactNode, useContext } from \"react\"\nimport SliderField from \"./SliderField\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON, toShadowDefinition } from \"./ReactField\"\nimport ValueContext, { ValueContextProps } from \"./ValueContext\"\n\nconst ServoWidget = lazy(() => import(\"../../widgets/ServoWidget\"))\n\nfunction ServiceFieldWidget() {\n    const { value } = useContext<ValueContextProps<number>>(ValueContext)\n    return (\n        <Suspense>\n            <ServoWidget\n                angle={value}\n                offset={0}\n                color=\"secondary\"\n                enabled={true}\n            />\n        </Suspense>\n    )\n}\n\nexport default class ServoAngleField extends SliderField {\n    static KEY = \"jacdac_field_servo_angle\"\n    static SHADOW = toShadowDefinition(ServoAngleField)\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ServoAngleField(options?.value, options)\n    }\n\n    getText_() {\n        return this.value + \"°\"\n    }\n\n    renderWidget(): ReactNode {\n        return <ServiceFieldWidget />\n    }\n}\n","import React, { lazy } from \"react\"\nimport Suspense from \"../../ui/Suspense\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport ReactInlineField from \"./ReactInlineField\"\nconst TwinWidget = lazy(() => import(\"./TwinWidget\"))\n\nexport default class TwinField extends ReactInlineField {\n    static KEY = \"jacdac_field_twin\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new TwinField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return (\n            <Suspense>\n                <TwinWidget />\n            </Suspense>\n        )\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Block, FieldDropdown } from \"blockly\"\nimport { CHANGE } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport type { TFModelObj } from \"../../../workers/tf/dist/node_modules/tf.worker\"\n\nimport { resolveWorkspaceServices } from \"../WorkspaceContext\"\nimport { ReactFieldJSON } from \"./ReactField\"\n\nexport default class UseModelField extends FieldDropdown {\n    static KEY = \"jacdac_field_mlblocks_model_open\"\n    SERIALIZABLE = true\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _models: Record<string, TFModelObj>\n    private _unmount: () => void\n\n    static fromJson(options: ReactFieldJSON) {\n        return new UseModelField(options)\n    }\n\n    constructor(options?: ReactFieldJSON) {\n        super(() => [[\"\", \"\"]], undefined, options)\n        this._models = {}\n    }\n\n    fromXml(fieldElement: Element) {\n        this.setValue(fieldElement.textContent)\n    }\n\n    getOptions(): string[][] {\n        let options = []\n        if (this._models) options = Object.keys(this._models).map(m => [m, m])\n        const value = this.getValue()\n\n        return options.length < 1\n            ? [[value || \"\", value || \"\"]]\n            : [...options, [\"\", \"\"]]\n    }\n\n    doClassValidation_(newValue?: string) {\n        // skip super class validation\n        return newValue\n    }\n\n    init() {\n        super.init()\n        this.populateModels()\n    }\n\n    setSourceBlock(block: Block) {\n        super.setSourceBlock(block)\n        this.populateModels()\n    }\n\n    doValueUpdate_(newValue) {\n        super.doValueUpdate_(newValue)\n    }\n\n    notifyServicesChanged() {\n        this.populateModels()\n    }\n\n    dispose() {\n        super.dispose()\n        this.unmount()\n    }\n\n    private resolveFiles() {\n        const sourceBlock = this.getSourceBlock()\n        const services = resolveWorkspaceServices(sourceBlock?.workspace)\n        const directory = services?.workingDirectory\n        return directory?.files.filter(f => /\\.json$/i.test(f.name))\n    }\n\n    private async populateModels() {\n        const files = this.resolveFiles()\n        if (!files) return\n\n        files.forEach(async file => {\n            if (file) {\n                try {\n                    // grab the content of the JSON file\n                    const source = await file.textAsync()\n                    const model = JSON.parse(source)\n\n                    if (model && model.status == \"trained\")\n                        this._models[file.name] = model\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n        })\n    }\n\n    async getModel() {\n        const filename = this.getValue()\n\n        let selectedModel = this._models[filename]\n        if (!selectedModel) {\n            // if that did not work, refresh model list and try again\n            this.populateModels()\n            selectedModel = this._models[filename]\n        }\n\n        // if that did not work, this model cannot be loaded\n        if (!selectedModel) this.value_ = undefined\n\n        return selectedModel\n    }\n\n    private unmount() {\n        if (this._unmount) {\n            this._unmount()\n            this._unmount = undefined\n        }\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createContext, ReactNode, useState } from \"react\"\n\nexport interface ValueContextProps<T = any> {\n    value: T\n    onValueChange: (value: T) => void\n}\n\nexport const ValueContext = createContext<ValueContextProps>({\n    value: undefined,\n    onValueChange: undefined,\n})\nValueContext.displayName = \"Value\"\n\nexport default ValueContext\n\nexport function ValueProvider(props: {\n    value: any\n    onValueChange?: (newValue: any) => any\n    children: ReactNode\n}) {\n    const {\n        children,\n        value: initialValue,\n        onValueChange: onFieldValueChange,\n    } = props\n    const [value, setValue] = useState<any>(initialValue)\n    const onValueChange = (newValue: any) => {\n        setValue(newValue)\n        onFieldValueChange?.(newValue)\n    }\n    return (\n        // eslint-disable-next-line react/react-in-jsx-scope\n        <ValueContext.Provider value={{ value, onValueChange }}>\n            {children}\n        </ValueContext.Provider>\n    )\n}\n","import { styled } from \"@mui/material/styles\"\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { VM_GLOBAL_CHANGE } from \"../../../../jacdac-ts/src/vm/events\"\nimport { atomic } from \"../../../../jacdac-ts/src/vm/utils\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport ReactInlineField from \"./ReactInlineField\"\n\nconst PREFIX = \"VariablesFields\"\n\nconst classes = {\n    table: `${PREFIX}-table`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.table}`]: {\n        padding: 0,\n        margin: 0,\n        fontSize: \"0.9rem\",\n        lineHeight: \"1rem\",\n        color: theme.palette.text.primary,\n\n        \"& td\": {\n            borderColor: \"#ccc\",\n        },\n    },\n}))\n\nfunction VariablesWidget() {\n    const { runner } = useContext(WorkspaceContext)\n\n    const [variables, setVariables] = useState<\n        { name: string; value: atomic }[]\n    >(runner?.globals())\n    useEffect(\n        () =>\n            runner?.subscribe(VM_GLOBAL_CHANGE, () =>\n                setVariables(runner.globals())\n            ),\n        [runner]\n    )\n\n    return (\n        <>\n            {variables && (\n                <table className={classes.table}>\n                    <tbody>\n                        {variables?.map(({ name, value }) => (\n                            <tr key={name}>\n                                <td>{name}</td>\n                                <td>{value}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </>\n    )\n}\n\nexport default class VariablesField extends ReactInlineField {\n    static KEY = \"jacdac_field_variables_view\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new VariablesField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return (\n            <Root>\n                <VariablesWidget />\n            </Root>\n        )\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\"\nimport { ReactFieldJSON } from \"./ReactField\"\nimport { Box, Grid, Typography, useTheme } from \"@mui/material\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport ReactInlineField from \"./ReactInlineField\"\nimport { PointerBoundary } from \"./PointerBoundary\"\nimport { WatchValueType } from \"../../../../jacdac-ts/src/vm/runner\"\nimport { VM_WATCH_CHANGE } from \"../../../../jacdac-ts/src/vm/events\"\nimport { roundWithPrecision } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport useBlockData from \"../useBlockData\"\nimport JacdacContext, { JacdacContextProps } from \"../../../jacdac/Context\"\nimport SwitchWithLabel from \"../../ui/SwitchWithLabel\"\n\nconst HORIZON = 10\nfunction WatchValueWidget() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { runner, sourceId, sourceBlock } = useContext(WorkspaceContext)\n    const { data, setData } = useBlockData<{\n        time: number\n        value: number\n    }>(sourceBlock, [])\n    const theme = useTheme()\n\n    // track changes\n    const [value, setValue] = useState<WatchValueType>(\n        runner?.lookupWatch(sourceId)\n    )\n\n    useEffect(\n        () =>\n            runner?.subscribe(VM_WATCH_CHANGE, (watchSourceId: string) => {\n                if (watchSourceId === sourceId) {\n                    const newValue = runner.lookupWatch(sourceId)\n                    setValue(newValue)\n                    if (!isNaN(newValue)) {\n                        const newData = [\n                            ...(data || []),\n                            { time: bus.timestamp / 1000, value: newValue },\n                        ].slice(-HORIZON)\n                        setData(newData)\n                    }\n                }\n            }),\n        [runner, sourceId, data]\n    )\n\n    let valueNumber = typeof value === \"number\" ? (value as number) : undefined\n    if (!isNaN(valueNumber)) {\n        const step = Math.ceil(Math.abs(valueNumber)) / 10\n        const precision = step < 1 ? Math.ceil(-Math.log10(step)) : 0\n        valueNumber = roundWithPrecision(valueNumber, precision)\n    }\n\n    return (\n        <Box\n            bgcolor={theme.palette.background.paper}\n            borderRadius=\"undefinedpx\"\n            color={theme.palette.text.primary}\n        >\n            <Grid\n                container\n                alignItems=\"flex-end\"\n                alignContent=\"center\"\n                justifyContent=\"center\"\n                spacing={1}\n            >\n                <Grid item>\n                    <PointerBoundary>\n                        {!isNaN(valueNumber) ? (\n                            <Typography variant=\"body1\">\n                                {valueNumber}\n                            </Typography>\n                        ) : typeof value === \"boolean\" ? (\n                            <Box pl={1}>\n                                <SwitchWithLabel\n                                    readOnly={true}\n                                    checked={!!value}\n                                    label={value ? \"true\" : \"false\"}\n                                />\n                            </Box>\n                        ) : (\n                            <Typography variant=\"body1\">\n                                {value === undefined ? \"...\" : value + \"\"}\n                            </Typography>\n                        )}\n                    </PointerBoundary>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default class WatchValueField extends ReactInlineField {\n    static KEY = \"jacdac_field_watch_value\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new WatchValueField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"4rem\"\n        return c\n    }\n\n    renderInlineField() {\n        return <WatchValueWidget />\n    }\n}\n","import React, { useContext } from \"react\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport type { VisualizationSpec } from \"react-vega\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { tidyResolveHeader } from \"../tidy\"\nimport { BAR_CORNER_RADIUS, BAR_MAX_ITEMS } from \"../../toolbox\"\n\nfunction BarWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n    const index = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"index\"))\n    const value = tidyResolveHeader(\n        data,\n        sourceBlock?.getFieldValue(\"value\"),\n        \"number\"\n    )\n    if (!index || !value) return null\n\n    const sliceOptions = {\n        sliceMax: BAR_MAX_ITEMS,\n    }\n    const spec: VisualizationSpec = {\n        mark: { type: \"bar\", cornerRadius: BAR_CORNER_RADIUS, tooltip: true },\n        encoding: {\n            x: { field: index, type: \"nominal\" },\n            y: { field: value, type: \"quantitative\" },\n        },\n        data: { name: \"values\" },\n    }\n    return <VegaLiteWidget spec={spec} slice={sliceOptions} />\n}\n\nexport default class BarField extends ReactInlineField {\n    static KEY = \"jacdac_field_bar_plot\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new BarField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <BarWidget />\n    }\n}\n","import React, { useContext } from \"react\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport type { VisualizationSpec } from \"react-vega\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { tidyResolveHeader } from \"../tidy\"\nimport { BAR_CORNER_RADIUS } from \"../../toolbox\"\n\nfunction BoxPlotWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n    const index = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"index\"))\n    const value = tidyResolveHeader(\n        data,\n        sourceBlock?.getFieldValue(\"value\"),\n        \"number\"\n    )\n    if (!index || !value) return null\n\n    const spec: VisualizationSpec = {\n        mark: {\n            type: \"boxplot\",\n            cornerRadius: BAR_CORNER_RADIUS,\n            tooltip: true,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } as any,\n        encoding: {\n            x: { field: index, type: \"nominal\", scale: { zero: false } },\n            y: { field: value, type: \"quantitative\", scale: { zero: false } },\n        },\n        data: { name: \"values\" },\n    }\n\n    return <VegaLiteWidget spec={spec} />\n}\n\nexport default class BoxPlotField extends ReactInlineField {\n    static KEY = \"jacdac_field_box_plot\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new BoxPlotField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <BoxPlotWidget />\n    }\n}\n","import React, { useContext } from \"react\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport type { VisualizationSpec } from \"react-vega\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { tidyResolveHeader } from \"../tidy\"\nimport { LINE_MAX_ITEMS } from \"../../toolbox\"\n\nfunction HeatMapWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n    const x = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"x\"))\n    const y = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"y\"))\n    const color = tidyResolveHeader(\n        data,\n        sourceBlock?.getFieldValue(\"color\"),\n        \"number\"\n    )\n    if (!x || !y || !color) return null\n\n    const sliceOptions = {\n        sliceHead: LINE_MAX_ITEMS,\n    }\n    const spec: VisualizationSpec = {\n        mark: { type: \"rect\", tooltip: true },\n        encoding: {\n            x: { field: x, type: \"ordinal\" },\n            y: { field: y, type: \"ordinal\" },\n            color: {\n                field: color,\n                type: \"quantitative\",\n                scale: { zero: false },\n            },\n        },\n        data: { name: \"values\" },\n    }\n    return <VegaLiteWidget spec={spec} slice={sliceOptions} />\n}\n\nexport default class HeatMapPlotField extends ReactInlineField {\n    static KEY = \"jacdac_field_heat_map\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new HeatMapPlotField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <HeatMapWidget />\n    }\n}\n","import React, { useContext } from \"react\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport type { VisualizationSpec } from \"react-vega\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { tidyResolveHeader } from \"../tidy\"\nimport { BAR_CORNER_RADIUS } from \"../../toolbox\"\n\nfunction HistogramWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n    const index = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"index\"))\n\n    if (!index) return null\n\n    const spec: VisualizationSpec = {\n        mark: { type: \"bar\", cornerRadius: BAR_CORNER_RADIUS, tooltip: true },\n        encoding: {\n            x: { bin: true, field: index },\n            y: { aggregate: \"count\" },\n        },\n        data: { name: \"values\" },\n    }\n\n    return <VegaLiteWidget spec={spec} />\n}\n\nexport default class HistogramField extends ReactInlineField {\n    static KEY = \"jacdac_field_histogram\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new HistogramField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <HistogramWidget />\n    }\n}\n","import React, { useContext } from \"react\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport type { VisualizationSpec } from \"react-vega\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { tidyResolveHeader } from \"../tidy\"\nimport { LINE_MAX_ITEMS } from \"../../toolbox\"\n\nfunction LinePlotWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n    const x = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"x\"), \"number\")\n    const ys = [\"y\", \"y2\", \"y3\"]\n        .map(n =>\n            tidyResolveHeader(data, sourceBlock?.getFieldValue(n), \"number\")\n        )\n        .filter(y => !!y)\n    if (!x || !ys.length) return null\n\n    const timeSeries = x === \"time\"\n\n    const sliceOptions = {\n        sliceHead: LINE_MAX_ITEMS,\n    }\n    const spec: VisualizationSpec = {\n        layer: ys.map(y => ({\n            mark: {\n                type: \"line\",\n                tooltip: true,\n                point: { filled: timeSeries },\n            },\n            encoding: {\n                x: { field: x, type: \"quantitative\", scale: { zero: false } },\n                y: { field: y, type: \"quantitative\", scale: { zero: false } },\n            },\n            data: { name: \"values\" },\n        })),\n    }\n    return <VegaLiteWidget spec={spec} slice={sliceOptions} />\n}\n\nexport default class LinePlotField extends ReactInlineField {\n    static KEY = \"jacdac_field_line_plot\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new LinePlotField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <LinePlotWidget />\n    }\n}\n","import React, { useContext } from \"react\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { tidyResolveHeader } from \"../tidy\"\nimport { SCATTER_MAX_ITEMS } from \"../../toolbox\"\nimport { humanify } from \"../../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\n\nfunction ScatterPlotWidget(props: { linearRegression?: boolean }) {\n    const { linearRegression } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data, transformedData } = useBlockData(sourceBlock)\n    const x = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"x\"), \"number\")\n    const y = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"y\"), \"number\")\n    const size = tidyResolveHeader(\n        data,\n        sourceBlock?.getFieldValue(\"size\"),\n        \"number\"\n    )\n\n    if (!x || !y) return null\n\n    const sliceOptions = {\n        sliceSample: SCATTER_MAX_ITEMS,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let spec: any = {\n        mark: { type: \"point\", filled: true, tooltip: true },\n        encoding: {\n            x: {\n                field: x,\n                type: \"quantitative\",\n                scale: { zero: false },\n                title: humanify(x),\n            },\n            y: {\n                field: y,\n                title: humanify(y),\n                type: \"quantitative\",\n                scale: { zero: false },\n            },\n        },\n    }\n    if (size)\n        spec.encoding.size = {\n            field: size,\n            type: \"quantitative\",\n            scale: { zero: false },\n        }\n\n    if (linearRegression) {\n        const { slope, intercept } = (transformedData?.[0] || {}) as any\n        spec = {\n            title:\n                slope !== undefined\n                    ? `slope: ${slope}, intercept: ${intercept}`\n                    : undefined,\n            layer: [\n                spec,\n                {\n                    mark: {\n                        type: \"line\",\n                        color: \"firebrick\",\n                    },\n                    transform: [\n                        {\n                            regression: y,\n                            on: x,\n                        },\n                    ],\n                    encoding: {\n                        x: {\n                            field: x,\n                            type: \"quantitative\",\n                        },\n                        y: {\n                            field: y,\n                            type: \"quantitative\",\n                        },\n                    },\n                },\n            ],\n        }\n    }\n    spec.data = { name: \"values\" }\n\n    return <VegaLiteWidget spec={spec} slice={sliceOptions} />\n}\n\nexport interface ScatterPlotFieldProps {\n    linearRegression?: boolean\n}\n\nexport default class ScatterPlotField extends ReactInlineField {\n    static KEY = \"jacdac_field_scatter_plot\"\n    EDITABLE = false\n    linearRegression: boolean\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ScatterPlotField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: ScatterPlotFieldProps) {\n        super(options)\n        this.linearRegression = !!options?.linearRegression\n    }\n\n    renderInlineField() {\n        return <ScatterPlotWidget linearRegression={this.linearRegression} />\n    }\n}\n","import React, { useContext, useState } from \"react\"\nimport WorkspaceContext, {\n    WorkspaceServices,\n    WorkspaceWithServices,\n} from \"../../WorkspaceContext\"\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport useBlockData from \"../../useBlockData\"\nimport VegaLiteWidget from \"./VegaLiteWidget\"\nimport { blockToVisualizationSpec } from \"../../dsl/chartdsl\"\nimport { useEffect } from \"react\"\n\nfunction VegaChartWidget() {\n    const { sourceBlock, workspace } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n    const services = (workspace as any as WorkspaceWithServices)?.jacdacServices\n\n    // track workspace changes and re-render\n    const [, setWorkspaceJSON] = useState(services?.workspaceJSON)\n    useEffect(\n        () =>\n            services?.subscribe(WorkspaceServices.WORKSPACE_CHANGE, () =>\n                setWorkspaceJSON(services.workspaceJSON)\n            ),\n        [services]\n    )\n\n    const spec = blockToVisualizationSpec(sourceBlock, data)\n\n    return <VegaLiteWidget spec={spec} />\n}\n\nexport default class VegaChartField extends ReactInlineField {\n    static KEY = \"jacdac_field_vega_chart\"\n    EDITABLE = false\n\n    static fromJson(options: ReactFieldJSON) {\n        return new VegaChartField(options)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(options?: any) {\n        super(options)\n    }\n\n    renderInlineField() {\n        return <VegaChartWidget />\n    }\n}\n","import React, { lazy, useContext, useMemo, useRef, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\nimport useBlockData from \"../../useBlockData\"\nimport { PointerBoundary } from \"../PointerBoundary\"\nimport Suspense from \"../../../ui/Suspense\"\nimport { Grid, NoSsr } from \"@mui/material\"\nimport { CHART_HEIGHT, CHART_SVG_MAX_ITEMS, CHART_WIDTH } from \"../../toolbox\"\nimport type { View, VisualizationSpec } from \"react-vega\"\nimport type { DataSliceOptions } from \"../../../../workers/data/dist/node_modules/data.worker\"\nimport useEffectAsync from \"../../../useEffectAsync\"\nimport { tidyResolveHeader, tidySlice } from \"./../tidy\"\nimport { JSONTryParse } from \"../../../../../jacdac-ts/src/jdom/utils\"\nimport { humanify } from \"../../../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport CopyButton from \"../../../ui/CopyButton\"\nimport IconButtonWithTooltip from \"../../../ui/IconButtonWithTooltip\"\nimport { UIFlags } from \"../../../../jacdac/providerbus\"\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\"\nconst PREFIX = \"VegaLiteWidget\"\n\nconst classes = {\n    button: `${PREFIX}-button`,\n}\n\nconst Root = styled(\"div\")(() => ({\n    [`& .${classes.button}`]: {\n        color: \"grey\",\n    },\n}))\n\nconst VegaLite = lazy(() => import(\"../../../charts/VegaLite\"))\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction clone(v: any) {\n    return v ? JSON.parse(JSON.stringify(v)) : v\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isKV(v: any) {\n    return !!v && typeof v === \"object\" && !Array.isArray(v)\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction jsonMergeFrom(trg: object, src: object) {\n    if (!src) return\n    Object.keys(src).forEach(k => {\n        if (isKV(trg[k]) && isKV(src[k])) jsonMergeFrom(trg[k], src[k])\n        else trg[k] = clone(src[k])\n    })\n}\n\ntype VegaLiteChart = unknown\n\nexport default function VegaLiteWidget(props: {\n    spec: VisualizationSpec\n    slice?: DataSliceOptions\n}) {\n    const { spec, slice } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const { data } = useBlockData(sourceBlock)\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const [vegaData, setVegaData] = useState<{ values: object[] }>(undefined)\n    const viewRef = useRef<View>()\n\n    const group = tidyResolveHeader(data, sourceBlock?.getFieldValue(\"group\"))\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const settings = JSONTryParse<any>(sourceBlock?.getFieldValue(\"settings\"))\n    const handleNewView = (view: View) => (viewRef.current = view)\n\n    const fullSpec: VegaLiteChart = useMemo(() => {\n        if (!settings) return spec\n        const s = clone(spec)\n        if (s.encoding)\n            Object.values(s.encoding)\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                .filter((e: any) => !e.title)\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                .forEach((e: any) => (e.title = humanify(e.field)))\n        jsonMergeFrom(s, settings)\n        if (\n            Object.values(s.encoding || {}).some(\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (encoding: any) =>\n                    encoding?.scale?.domainMin !== undefined ||\n                    encoding?.scale?.domainMax !== undefined\n            )\n        ) {\n            s.mark.clip = true\n        }\n        if (group) {\n            s.encoding.color = {\n                field: group,\n                title: humanify(group),\n                type: \"nominal\",\n            }\n            s.encoding.strokeDash = {\n                field: group,\n                title: humanify(group),\n                type: \"nominal\",\n            }\n        }\n        return s\n    }, [spec, group, settings])\n\n    useEffectAsync(\n        async mounted => {\n            if (!slice) {\n                setVegaData({ values: data })\n            } else {\n                const sliced = await tidySlice(data, slice)\n                if (mounted()) setVegaData({ values: sliced })\n            }\n        },\n        [data]\n    )\n\n    if (!vegaData?.values?.length || !spec) return null\n\n    const renderer =\n        vegaData.values.length < CHART_SVG_MAX_ITEMS ? \"svg\" : \"canvas\"\n    const handleCopy = UIFlags.hosted\n        ? undefined\n        : async () => {\n              const view = viewRef.current\n              const canvas = await view?.toCanvas(2)\n              return canvas\n          }\n    const handleExport = UIFlags.hosted\n        ? async () => {\n              window.parent?.postMessage({\n                  type: \"dsl\",\n                  action: \"chartexport\",\n                  vega: fullSpec,\n                  slice,\n                  dataset: data,\n                  vegaDataset: vegaData,\n              })\n          }\n        : undefined\n    const showToolbar = !!handleCopy || !!handleExport\n\n    return (\n        <NoSsr>\n            <PointerBoundary>\n                <Root style={{ background: \"#fff\", borderRadius: \"0.25rem\" }}>\n                    <Grid container direction=\"column\" spacing={1}>\n                        {showToolbar && (\n                            <Grid item xs={12}>\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justifyContent=\"flex-start\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    {!!handleCopy && (\n                                        <Grid item>\n                                            <CopyButton\n                                                size=\"small\"\n                                                className={classes.button}\n                                                onCopy={handleCopy}\n                                            />\n                                        </Grid>\n                                    )}\n                                    {!!handleExport && (\n                                        <Grid item>\n                                            <IconButtonWithTooltip\n                                                title=\"save\"\n                                                size=\"small\"\n                                                className={classes.button}\n                                                onClick={handleExport}\n                                            >\n                                                <SaveAltIcon />\n                                            </IconButtonWithTooltip>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        )}\n                        <Grid item xs={12}>\n                            <Suspense>\n                                <VegaLite\n                                    actions={false}\n                                    width={CHART_WIDTH}\n                                    height={CHART_HEIGHT}\n                                    spec={fullSpec}\n                                    data={vegaData}\n                                    renderer={renderer}\n                                    tooltip={true}\n                                    onNewView={handleNewView}\n                                />\n                            </Suspense>\n                        </Grid>\n                    </Grid>\n                </Root>\n            </PointerBoundary>\n        </NoSsr>\n    )\n}\n","import Blockly from \"blockly\"\nimport NoteField from \"./NoteField\"\nimport KeyboardKeyField from \"./KeyboardKeyField\"\nimport LEDMatrixField from \"./LEDMatrixField\"\nimport ServoAngleField from \"./ServoAngleField\"\nimport { BlockDefinition } from \"../toolbox\"\nimport { assert } from \"../../../../jacdac-ts/src/jdom/utils\"\nimport LEDColorField from \"./LEDColorField\"\nimport TwinField from \"./TwinField\"\nimport JDomTreeField from \"./JDomTreeField\"\nimport WatchValueField from \"./WatchValueField\"\nimport LogViewField from \"./LogViewField\"\nimport VariablesField from \"./VariablesFields\"\nimport DataTableField from \"./DataTableField\"\nimport DataColumnChooserField from \"./DataColumnChooserField\"\nimport BuiltinDataSetField from \"./BuiltinDataSetField\"\nimport DataPreviewField from \"./DataPreviewField\"\n\nimport LinePlotField from \"./chart/LinePlotField\"\nimport GaugeWidgetField from \"./GaugeWidgetField\"\nimport ScatterPlotField from \"./chart/ScatterPlotField\"\nimport BarChartField from \"./chart/BarField\"\nimport HistogramField from \"./chart/HistogramField\"\nimport BoxPlotField from \"./chart/BoxPlotField\"\nimport HeatMapPlotField from \"./chart/HeatMapField\"\nimport VegaChartField from \"./chart/VegaChartField\"\n\nimport FileSaveField from \"./FileSaveField\"\nimport FileOpenField from \"./FileOpenField\"\nimport UseModelField from \"./UseModelField\"\n\nimport ExpandModelBlockField from \"./mb/ExpandModelBlockField\"\nimport DataSetBlockField from \"./mb/DataSetBlockField\"\nimport DataSetBlockButton from \"./mb/DataSetBlockButton\"\nimport RecordingBlockField from \"./mb/RecordingBlockField\"\nimport NeuralNetworkBlockField from \"./mb/NeuralNetworkBlockField\"\nimport NeuralNetworkBlockButton from \"./mb/NeuralNetworkBlockButtons\"\nimport ConvLayerBlockField from \"./mb/ConvLayerBlockField\"\nimport PoolingLayerBlockField from \"./mb/PoolingLayerBlockField\"\nimport DropoutLayerBlockField from \"./mb/DropoutLayerBlockField\"\nimport FlattenLayerBlockField from \"./mb/FlattenLayerBlockField\"\nimport DenseLayerBlockField from \"./mb/DenseLayerBlockField\"\nimport TrainedModelBlockField from \"./mb/TrainedModelBlockField\"\n\nimport JSONSettingsField from \"./JSONSettingsField\"\nimport IFrameDataChooserField from \"./IFrameDataChooserField\"\n\nlet reactFieldShadows: BlockDefinition[]\nexport function registerFields() {\n    if (reactFieldShadows) return\n\n    reactFieldShadows = []\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const registerType = (fieldType: any) => {\n        const key = fieldType.KEY\n        assert(!!key)\n        try {\n            Blockly.fieldRegistry.unregister(key) // hot reload issues\n        } catch (e) {\n            // ignore hot reload issues\n        }\n        Blockly.fieldRegistry.register(key, fieldType)\n        if (fieldType.SHADOW) reactFieldShadows.push(fieldType.SHADOW)\n    }\n    const fieldTypes = [\n        KeyboardKeyField,\n        NoteField,\n        LEDMatrixField,\n        ServoAngleField,\n        LEDColorField,\n\n        TwinField,\n        JDomTreeField,\n\n        GaugeWidgetField,\n\n        WatchValueField,\n        LogViewField,\n\n        VariablesField,\n        DataTableField,\n        DataPreviewField,\n        DataColumnChooserField,\n\n        BuiltinDataSetField,\n\n        ScatterPlotField,\n        LinePlotField,\n        BarChartField,\n        HistogramField,\n        BoxPlotField,\n        HeatMapPlotField,\n        VegaChartField,\n\n        ExpandModelBlockField,\n        DataSetBlockField,\n        DataSetBlockButton,\n        RecordingBlockField,\n        NeuralNetworkBlockField,\n        NeuralNetworkBlockButton,\n        ConvLayerBlockField,\n        PoolingLayerBlockField,\n        DropoutLayerBlockField,\n        FlattenLayerBlockField,\n        DenseLayerBlockField,\n        TrainedModelBlockField,\n\n        FileSaveField,\n        FileOpenField,\n        UseModelField,\n\n        JSONSettingsField,\n\n        IFrameDataChooserField,\n    ]\n    fieldTypes.forEach(registerType)\n}\n\nexport function fieldShadows() {\n    registerFields()\n    return reactFieldShadows.slice(0)\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Grid, MenuItem, Select, TextField, Tooltip } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nimport { useId } from \"react-use-id-hook\"\nimport ExpandModelBlockField from \"./ExpandModelBlockField\"\n\nconst PREFIX = \"ConvLayerBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n}))\n\nexport interface ConvLayerFieldValue {\n    percentParams: number\n    percentSize: number\n    runTimeInMs: number\n    outputShape: number[]\n    numFilters: number\n    kernelSize: number\n    strideSize: number\n    activation: string\n}\n\nfunction LayerParameterWidget(props: { initFieldValue: ConvLayerFieldValue }) {\n    const { initFieldValue } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const { percentSize, percentParams, outputShape, runTimeInMs } =\n        initFieldValue\n    let { numFilters, kernelSize, strideSize, activation } = initFieldValue\n\n    const updateParameters = () => {\n        // push changes to field values to the parent\n        const updatedValue = {\n            numFilters: numFilters,\n            kernelSize: kernelSize,\n            strideSize: strideSize,\n            activation: activation,\n        }\n\n        // send new value to the parameter holder\n        const expandField = sourceBlock.getField(\n            \"EXPAND_BUTTON\"\n        ) as ExpandModelBlockField\n        expandField.updateFieldValue(updatedValue)\n    }\n\n    const handleChangedFilters = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            numFilters = newValue\n            updateParameters()\n        }\n    }\n\n    const handleChangedKernelSize = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            kernelSize = newValue\n            updateParameters()\n        }\n    }\n\n    const handleChangedStrides = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            strideSize = newValue\n            updateParameters()\n        }\n    }\n\n    const handleChangedActivation = event => {\n        const newValue = event.target.value\n        if (newValue) {\n            activation = newValue\n            updateParameters()\n        }\n    }\n\n    return (\n        <Root>\n            <PointerBoundary>\n                <Grid container spacing={1} direction={\"column\"}>\n                    <Grid item className={classes.fieldContainer}>\n                        <Box color=\"text.secondary\">\n                            filters&emsp;\n                            <Tooltip title=\"Update the kernel size\">\n                                <TextField\n                                    id={useId() + \"filters\"}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    defaultValue={numFilters}\n                                    onChange={handleChangedFilters}\n                                    className={classes.field}\n                                />\n                            </Tooltip>\n                        </Box>\n                        <Box color=\"text.secondary\">\n                            kernel size&emsp;\n                            <Tooltip title=\"Update the kernel size\">\n                                <TextField\n                                    id={useId() + \"kernelSize\"}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    defaultValue={kernelSize}\n                                    onChange={handleChangedKernelSize}\n                                    className={classes.field}\n                                />\n                            </Tooltip>\n                        </Box>\n                        <Box color=\"text.secondary\">\n                            stride&emsp;\n                            <Tooltip title=\"Update the stride\">\n                                <TextField\n                                    id={useId() + \"stride\"}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    defaultValue={strideSize}\n                                    onChange={handleChangedStrides}\n                                    className={classes.field}\n                                />\n                            </Tooltip>\n                        </Box>\n                        <Box color=\"text.secondary\">\n                            activation&emsp;\n                            <Tooltip title=\"Update the activation function\">\n                                <Select\n                                    id={useId() + \"activation\"}\n                                    variant=\"outlined\"\n                                    defaultValue={activation}\n                                    onChange={handleChangedActivation}\n                                >\n                                    <MenuItem value=\"softmax\">softmax</MenuItem>\n                                    <MenuItem value=\"linear\">linear</MenuItem>\n                                    <MenuItem value=\"relu\">relu</MenuItem>\n                                </Select>\n                            </Tooltip>\n                        </Box>\n                    </Grid>\n                    <Grid item>\n                        <Box color=\"text.secondary\">\n                            Output shape: [{outputShape.join(\", \")}]<br />\n                            Percent of total size: {percentSize.toPrecision(2)}%\n                            <br />\n                            Percent of total params:{\" \"}\n                            {percentParams.toPrecision(2)}%\n                            <br />\n                            Run time: {runTimeInMs.toPrecision(2)} ms <br />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PointerBoundary>\n        </Root>\n    )\n}\n\nexport default class ConvLayerBlockField extends ReactInlineField {\n    static KEY = \"conv_layer_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ConvLayerBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            percentParams: 0,\n            percentSize: 0,\n            runTimeInMs: 0,\n            outputShape: [0, 0],\n            numFilters: 16,\n            kernelSize: 2,\n            strideSize: 1,\n        }\n    }\n\n    getText_() {\n        return ``\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <LayerParameterWidget\n                initFieldValue={this.value as ConvLayerFieldValue}\n            />\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { Button, Grid, Tooltip } from \"@mui/material\"\nimport ViewIcon from \"@mui/icons-material/Visibility\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DownloadIcon from \"@mui/icons-material/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nfunction DataSetButtonWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const handleViewDataSet = () => {\n        console.log(\"View and edit dataset modal\")\n        sourceBlock.data = \"click.edit\"\n    }\n    const handleDownloadDataSet = () => {\n        console.log(\"Download dataset\")\n        sourceBlock.data = \"click.download\"\n    }\n\n    return (\n        <Grid container spacing={1} direction={\"row\"}>\n            <Grid item style={{ display: \"inline-flex\", width: 300 }}>\n                <Tooltip title=\"View this data set and perform actions like splitting it\">\n                    <Button\n                        onClick={handleViewDataSet}\n                        startIcon={<ViewIcon />}\n                        variant=\"outlined\"\n                        size=\"small\"\n                    >\n                        View\n                    </Button>\n                </Tooltip>\n                &ensp;\n                <Tooltip title=\"Download dataset as csv file\">\n                    <Button\n                        onClick={handleDownloadDataSet}\n                        startIcon={<DownloadIcon />}\n                        variant=\"outlined\"\n                        size=\"small\"\n                    >\n                        Download\n                    </Button>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class DataSetBlockButtons extends ReactInlineField {\n    static KEY = \"ds_block_buttons_key\"\n\n    constructor(value: string) {\n        super(value)\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new DataSetBlockButtons(options?.value)\n    }\n\n    getText_() {\n        return `nn`\n    }\n\n    renderInlineField(): ReactNode {\n        return <DataSetButtonWidget />\n    }\n}\n","import React, { ReactNode, useContext, useEffect, useState } from \"react\"\nimport { Box, Grid } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext, { resolveBlockServices } from \"../../WorkspaceContext\"\nimport { CHANGE } from \"../../../../../jacdac-ts/src/jdom/constants\"\n\nexport interface DataSetBlockFieldValue {\n    numRecordings: number\n    numSamples: number\n    inputClasses: string[]\n    inputTypes: string[]\n}\n\nfunction DataSetParameterWidget(props: {\n    initFieldValue: DataSetBlockFieldValue\n}) {\n    const { initFieldValue } = props\n\n    const { inputClasses, inputTypes } = initFieldValue\n\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const services = resolveBlockServices(sourceBlock)\n\n    // track workspace changes and re-render\n    const [, setBlockData] = useState(services.data)\n    useEffect(\n        () =>\n            services?.subscribe(CHANGE, () => {\n                setBlockData(services.data)\n            }),\n        [services]\n    )\n\n    return (\n        <PointerBoundary>\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Classes:{\" \"}\n                        {inputClasses.length ? inputClasses.join(\", \") : \"none\"}{\" \"}\n                        <br />\n                        Input type(s):{\" \"}\n                        {inputTypes.length ? inputTypes.join(\", \") : \"none\"}\n                    </Box>\n                </Grid>\n            </Grid>\n        </PointerBoundary>\n    )\n}\n\nexport default class DataSetBlockField extends ReactInlineField {\n    static KEY = \"dataset_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new DataSetBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            numRecordings: 0,\n            numSamples: 0,\n            inputClasses: [],\n            inputTypes: [],\n        }\n    }\n\n    getText_() {\n        const totalRecordings = (this.value as DataSetBlockFieldValue)\n            .numRecordings\n\n        return `${totalRecordings} recording(s)`\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <DataSetParameterWidget\n                initFieldValue={this.value as DataSetBlockFieldValue}\n            />\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Grid, MenuItem, Select, TextField, Tooltip } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nimport { useId } from \"react-use-id-hook\"\nimport ExpandModelBlockField from \"./ExpandModelBlockField\"\n\nconst PREFIX = \"DenseLayerBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n}\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n}))\n\nexport interface DenseLayerFieldValue {\n    percentParams: number\n    percentSize: number\n    runTimeInMs: number\n    outputShape: number[]\n    numUnits: number\n    activation: string\n}\n\nfunction LayerParameterWidget(props: { initFieldValue: DenseLayerFieldValue }) {\n    const { initFieldValue } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const { percentSize, percentParams, outputShape, runTimeInMs } =\n        initFieldValue\n    let { numUnits, activation } = initFieldValue\n\n    const updateParameters = () => {\n        // push changes to field values to the parent\n        const updatedValue = {\n            numUnits: numUnits,\n            activation: activation,\n        }\n\n        // send new value to the parameter holder\n        const expandField = sourceBlock.getField(\n            \"EXPAND_BUTTON\"\n        ) as ExpandModelBlockField\n        expandField.updateFieldValue(updatedValue)\n    }\n\n    const handleChangedUnits = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            numUnits = newValue\n            updateParameters()\n        }\n    }\n\n    const handleChangedActivation = event => {\n        const newValue = event.target.value\n        if (newValue) {\n            activation = newValue\n            updateParameters()\n        }\n    }\n\n    return (\n        <Root>\n            <PointerBoundary>\n                <Grid container spacing={1} direction={\"column\"}>\n                    <Grid item className={classes.fieldContainer}>\n                        <Box color=\"text.secondary\">\n                            units&emsp;\n                            <Tooltip title=\"Update the number of units\">\n                                <TextField\n                                    id={useId() + \"filters\"}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    defaultValue={numUnits}\n                                    onChange={handleChangedUnits}\n                                    className={classes.field}\n                                />\n                            </Tooltip>\n                        </Box>\n                        <Box color=\"text.secondary\">\n                            activation&emsp;\n                            <Tooltip title=\"Update the activation function\">\n                                <Select\n                                    id={useId() + \"activation\"}\n                                    variant=\"outlined\"\n                                    defaultValue={activation}\n                                    onChange={handleChangedActivation}\n                                >\n                                    <MenuItem value=\"softmax\">softmax</MenuItem>\n                                    <MenuItem value=\"linear\">linear</MenuItem>\n                                    <MenuItem value=\"relu\">relu</MenuItem>\n                                </Select>\n                            </Tooltip>\n                        </Box>\n                    </Grid>\n                    <Grid item>\n                        <Box color=\"text.secondary\">\n                            Output shape: [{outputShape.join(\", \")}]<br />\n                            Percent of total size: {percentSize.toPrecision(2)}%\n                            <br />\n                            Percent of total params:{\" \"}\n                            {percentParams.toPrecision(2)}%\n                            <br />\n                            Run time: {runTimeInMs.toPrecision(2)} ms <br />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </PointerBoundary>\n        </Root>\n    )\n}\n\nexport default class DenseLayerBlockField extends ReactInlineField {\n    static KEY = \"dense_layer_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new DenseLayerBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            percentParams: 0,\n            percentSize: 0,\n            runTimeInMs: 0,\n            outputShape: [0],\n            numUnits: 4,\n            activation: \"relu\",\n        }\n    }\n\n    getText_() {\n        return ``\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <LayerParameterWidget\n                initFieldValue={this.value as DenseLayerFieldValue}\n            />\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Grid, TextField, Tooltip } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nimport { useId } from \"react-use-id-hook\"\nimport ExpandModelBlockField from \"./ExpandModelBlockField\"\n\nconst PREFIX = \"DropoutLayerBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n}))\n\nexport interface DropoutLayerFieldValue {\n    percentParams: number\n    percentSize: number\n    runTimeInMs: number\n    outputShape: number[]\n    rate: string\n}\n\nfunction LayerParameterWidget(props: {\n    initFieldValue: DropoutLayerFieldValue\n}) {\n    const { initFieldValue } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const { percentSize, percentParams, outputShape, runTimeInMs } =\n        initFieldValue\n    let rate = initFieldValue.rate\n\n    const updateParameters = () => {\n        let rateAsNum\n        if (rate == \"0.\") rateAsNum = 0\n        else rateAsNum = parseFloat(rate)\n        // push changes to field values to the parent\n        const updatedValue = {\n            rate: rateAsNum,\n        }\n\n        // send new value to the parameter holder\n        const expandField = sourceBlock.getField(\n            \"EXPAND_BUTTON\"\n        ) as ExpandModelBlockField\n        expandField.updateFieldValue(updatedValue)\n    }\n\n    const handleChangedRate = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = event.target.value\n        if (newValue) {\n            let valueAsNum\n\n            // catch edge case?\n            if (newValue == \"0.\") valueAsNum = 0\n            else valueAsNum = parseFloat(newValue)\n\n            if (valueAsNum >= 0 && valueAsNum < 1) {\n                rate = newValue\n                updateParameters()\n            }\n        }\n    }\n\n    return (\n        <PointerBoundary>\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item className={classes.fieldContainer}>\n                    <Box color=\"text.secondary\">\n                        rate&emsp;\n                        <Tooltip title=\"Update the dropout rate\">\n                            <TextField\n                                id={useId() + \"rate\"}\n                                type=\"text\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                defaultValue={rate}\n                                onChange={handleChangedRate}\n                                className={classes.field}\n                            />\n                        </Tooltip>\n                    </Box>\n                </Grid>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Output shape: [{outputShape.join(\", \")}]<br />\n                        Percent of total size: {percentSize.toPrecision(2)}%\n                        <br />\n                        Percent of total params: {percentParams.toPrecision(2)}%\n                        <br />\n                        Run time: {runTimeInMs.toPrecision(2)} ms <br />\n                    </Box>\n                </Grid>\n            </Grid>\n        </PointerBoundary>\n    )\n}\n\nexport default class DropoutLayerBlockField extends ReactInlineField {\n    static KEY = \"dropout_layer_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new DropoutLayerBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            percentParams: 0,\n            percentSize: 0,\n            runTimeInMs: 0,\n            outputShape: [0, 0],\n            rate: \"0.1\",\n        }\n    }\n\n    getText_() {\n        return ``\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <Root>\n                <LayerParameterWidget\n                    initFieldValue={this.value as DropoutLayerFieldValue}\n                />\n            </Root>\n        )\n    }\n}\n","import React, { useContext, useState } from \"react\"\n\nimport { Grid } from \"@mui/material\"\nimport AddCircleIcon from \"@mui/icons-material/AddCircleOutline\"\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircleOutline\"\nimport IconButtonWithTooltip from \"../../../ui/IconButtonWithTooltip\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nimport { MODEL_BLOCKS } from \"../../../model-editor/modelblockdsl\"\n\nimport DenseLayerBlockField from \"./DenseLayerBlockField\"\nimport DataSetBlockField from \"./DataSetBlockField\"\nimport RecordingBlockField from \"./RecordingBlockField\"\nimport NeuralNetworkBlockField from \"./NeuralNetworkBlockField\"\nimport ConvLayerBlockField from \"./ConvLayerBlockField\"\nimport PoolingLayerBlockField from \"./PoolingLayerBlockField\"\nimport DropoutLayerBlockField from \"./DropoutLayerBlockField\"\nimport FlattenLayerBlockField from \"./FlattenLayerBlockField\"\nimport { Block } from \"blockly\"\n\nconst REMOVABLE_INPUT = \"REMOVABLE_INPUT\"\nconst LAYER_INPUT = \"LAYER_INPUTS\"\n\nfunction ExpandIconWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const getCurrentValue = () => {\n        const expandField = sourceBlock.getField(\"EXPAND_BUTTON\")\n        if (expandField.getValue()) {\n            const value = JSON.parse(expandField.getValue())\n            return value\n        }\n        return null\n    }\n\n    const updateCurrentValue = (paramName: string, paramValue: any) => {\n        const expandField = sourceBlock.getField(\n            \"EXPAND_BUTTON\"\n        ) as ExpandModelBlockField\n\n        expandField.updateFieldValue({ paramName: paramValue })\n    }\n\n    const appendParamInput = (block: Block) => {\n        block\n            .appendDummyInput(REMOVABLE_INPUT)\n            .appendField(getBlockFieldType(block.type), \"BLOCK_PARAMS\")\n\n        // TODO. This is a hack, no moving blocks that are open\n        block.setMovable(false)\n\n        // place the new input before the input statement field\n        if (block.getInput(LAYER_INPUT))\n            block.moveInputBefore(REMOVABLE_INPUT, LAYER_INPUT)\n    }\n\n    const getBlockFieldType = (blockType: string) => {\n        const currentValue = getCurrentValue()\n        switch (blockType) {\n            case MODEL_BLOCKS + \"dataset\":\n                return new DataSetBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"recording\":\n                return new RecordingBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"nn\":\n                return new NeuralNetworkBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"conv1d_layer\":\n                return new ConvLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"conv2d_layer\":\n                return new ConvLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"dense_layer\":\n                return new DenseLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"dropout_layer\":\n                return new DropoutLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"flatten_layer\":\n                return new FlattenLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"maxpool1d_layer\":\n                return new PoolingLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"maxpool2d_layer\":\n                return new PoolingLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"avgpool1d_layer\":\n                return new PoolingLayerBlockField(\"\", currentValue)\n            case MODEL_BLOCKS + \"avgpool2d_layer\":\n                return new PoolingLayerBlockField(\"\", currentValue)\n            default:\n                console.error(\"Got inappropriate input for expanding block\")\n                return null\n        }\n    }\n\n    const [parametersVisible, setParametersVisible] = useState(() => {\n        const fieldValue = getCurrentValue()\n        if (fieldValue) {\n            const paramsVisible = fieldValue[\"parametersVisible\"]\n            if (paramsVisible) appendParamInput(sourceBlock)\n            return paramsVisible\n        }\n        return false\n    })\n\n    const handleExpandBlock = () => {\n        const parameterField = sourceBlock.getField(\n            \"BLOCK_PARAMS\"\n        ) as ReactInlineField\n        if (parameterField) {\n            // save the parameters written to that block\n            const paramValues = JSON.parse(parameterField.getValue())\n            Object.keys(paramValues).forEach(key => {\n                updateCurrentValue(key, paramValues[key])\n            })\n\n            // identify which input to remove and remove it\n            parameterField.getParentInput().name = REMOVABLE_INPUT\n            sourceBlock.removeInput(REMOVABLE_INPUT)\n            // TODO this is a hack. Need to implement textToDom and domToText for these mutator blocks\n            sourceBlock.setMovable(true)\n\n            // update the value of the expand button field\n            updateCurrentValue(\"parametersVisible\", false)\n            setParametersVisible(false)\n        } else {\n            // add a removable field with the appropriate field type\n            appendParamInput(sourceBlock)\n\n            // update the value of the expand button field\n            updateCurrentValue(\"parametersVisible\", true)\n            setParametersVisible(true)\n        }\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <IconButtonWithTooltip\n                    style={{ backgroundColor: \"transparent\" }}\n                    onClick={handleExpandBlock}\n                    title=\"Expand dataset block to see all dataset info\"\n                >\n                    {parametersVisible ? (\n                        <RemoveCircleIcon />\n                    ) : (\n                        <AddCircleIcon />\n                    )}\n                </IconButtonWithTooltip>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class ExpandModelBlockField extends ReactInlineField {\n    static KEY = \"model_field_key\"\n\n    constructor(value: string) {\n        super(value)\n    }\n\n    get defaultValue() {\n        return {\n            parametersVisible: false,\n        }\n    }\n\n    protected createContainer(): HTMLDivElement {\n        const c = document.createElement(\"div\")\n        c.style.display = \"inline-block\"\n        c.style.minWidth = \"2rem\"\n        return c\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new ExpandModelBlockField(options?.value)\n    }\n\n    fromXml(fieldElement: Element) {\n        this.setValue(fieldElement.textContent)\n        this.updateBlockName()\n    }\n\n    updateBlockName() {\n        const sourceBlock = this.getSourceBlock()\n\n        const nameField = sourceBlock.inputList[0].fieldRow[0]\n        const name: string = nameField.getValue()\n        const blockName = name.substr(0, name.indexOf(\"(\") - 1)\n\n        if (sourceBlock.type.indexOf(\"conv\") > 0) {\n            // display filters, kernel size, and stride size for convolutional blocks\n            nameField.setValue(\n                `${blockName} (${this.value.numFilters}, ${this.value.kernelSize}, ${this.value.strideSize})`\n            )\n        } else if (sourceBlock.type.indexOf(\"pool\") > 0) {\n            // display kernel size and stride for pooling blocks\n            // update the name of the block\n            nameField.setValue(\n                `${blockName} (${this.value.poolSize}, ${this.value.strideSize})`\n            )\n        } else if (sourceBlock.type.indexOf(\"dense\") > 0) {\n            // display number of units and activation functions for dense blocks\n            nameField.setValue(\n                `${blockName} (${this.value.numUnits}, ${this.value.activation})`\n            )\n        } else if (sourceBlock.type.indexOf(\"drop\") > 0) {\n            // display the dropout rate for dropout layers\n            nameField.setValue(`${blockName} (${this.value.rate})`)\n        }\n        // don't list parameters of other blocks\n    }\n\n    getText_() {\n        return \",\"\n    }\n\n    renderInlineField() {\n        return <ExpandIconWidget />\n    }\n\n    updateFieldValue(msg: any) {\n        this.value = {\n            ...this.value,\n            ...msg,\n        }\n        this.updateBlockName()\n    }\n}\n","import React, { ReactNode } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Grid } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nconst PREFIX = \"FlattenLayerBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n}\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n}))\n\nexport interface FlattenLayerFieldValue {\n    percentParams: number\n    percentSize: number\n    runTimeInMs: number\n    outputShape: number[]\n}\n\nfunction LayerParameterWidget(props: {\n    initFieldValue: FlattenLayerFieldValue\n}) {\n    const { initFieldValue } = props\n\n    const { percentSize, percentParams, outputShape, runTimeInMs } =\n        initFieldValue\n\n    return (\n        <PointerBoundary>\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Output shape: [{outputShape.join(\", \")}]<br />\n                        Percent of total size: {percentSize.toPrecision(2)}%\n                        <br />\n                        Percent of total params: {percentParams.toPrecision(2)}%\n                        <br />\n                        Run time: {runTimeInMs.toPrecision(2)} ms <br />\n                    </Box>\n                </Grid>\n            </Grid>\n        </PointerBoundary>\n    )\n}\n\nexport default class FlattenLayerBlockField extends ReactInlineField {\n    static KEY = \"flatten_layer_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new FlattenLayerBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            runTimeInMs: 0,\n            outputShape: [0],\n            percentParams: 0,\n            percentSize: 0,\n            numUnits: 4,\n            activation: \"relu\",\n        }\n    }\n\n    getText_() {\n        return ``\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <Root>\n                <LayerParameterWidget\n                    initFieldValue={this.value as FlattenLayerFieldValue}\n                />\n            </Root>\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Button, Grid, Tooltip } from \"@mui/material\"\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DownloadIcon from \"@mui/icons-material/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nconst PREFIX = \"NeuralNetworkBlockButtons\"\n\nconst classes = {\n    numberField: `${PREFIX}-numberField`,\n    buttonContainer: `${PREFIX}-buttonContainer`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.numberField}`]: {\n        marginBottom: theme.spacing(1),\n    },\n\n    [`& .${classes.buttonContainer}`]: {\n        display: \"inline-flex\",\n        width: 300,\n    },\n}))\n\nfunction NeuralNetworkButtonWidget() {\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const handleTrainModel = () => {\n        console.log(\"Open NN classifier modal\")\n        sourceBlock.data = \"click.train\"\n    }\n\n    const handleDownloadModel = () => {\n        console.log(\"Download model\")\n        sourceBlock.data = \"click.download\"\n    }\n\n    return (\n        <Grid container spacing={1} direction={\"row\"}>\n            <Grid item className={classes.buttonContainer}>\n                <Tooltip title=\"Open modal to view and run classifier\">\n                    <Button\n                        onClick={handleTrainModel}\n                        startIcon={<AutorenewIcon />}\n                        variant=\"outlined\"\n                        size=\"small\"\n                    >\n                        Train\n                    </Button>\n                </Tooltip>\n                &ensp;\n                <Tooltip title=\"Download model JSON and weights file\">\n                    <Button\n                        onClick={handleDownloadModel}\n                        startIcon={<DownloadIcon />}\n                        variant=\"outlined\"\n                        size=\"small\"\n                    >\n                        Download\n                    </Button>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default class NeuralNetworkBlockButtons extends ReactInlineField {\n    static KEY = \"nn_block_buttons_key\"\n\n    constructor(value: string) {\n        super(value)\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new NeuralNetworkBlockButtons(options?.value)\n    }\n\n    getText_() {\n        return `nn`\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <Root>\n                <NeuralNetworkButtonWidget />\n            </Root>\n        )\n    }\n}\n","import React, { ReactNode, useContext, useEffect, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Grid, MenuItem, Select, TextField, Tooltip } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nimport { useId } from \"react-use-id-hook\"\nimport ExpandModelBlockField from \"./ExpandModelBlockField\"\n\nconst PREFIX = \"NeuralNetworkBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n}\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n}))\n\nexport interface NeuralNetworkBlockFieldValue {\n    totalLayers: number\n    totalParams: number\n    totalSize: number\n    runTimeInMs: number\n    inputShape: number[]\n    optimizer: string\n    numEpochs: number\n    lossFn: string\n    metrics: string\n}\n\nfunction NNParameterWidget(props: {\n    initFieldValue: NeuralNetworkBlockFieldValue\n}) {\n    const { initFieldValue } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const { totalLayers, totalSize, totalParams, runTimeInMs, inputShape } =\n        initFieldValue\n    const [optimizer, setOptimizer] = useState<string>(initFieldValue.optimizer)\n    const [numEpochs, setNumEpochs] = useState(initFieldValue.numEpochs)\n    const [lossFn, setLossFn] = useState(initFieldValue.lossFn)\n    const [metrics, setMetrics] = useState(initFieldValue.metrics)\n\n    useEffect(() => {\n        // push changes to source block after state values update\n        updateParameters()\n    }, [optimizer, numEpochs, lossFn, metrics])\n\n    const updateParameters = () => {\n        // push changes to field values to the parent\n        const updatedValue = {\n            optimizer: optimizer,\n            numEpochs: numEpochs,\n            lossFn: lossFn,\n            metrics: metrics,\n        }\n\n        // send new value to the parameter holder\n        const expandField = sourceBlock.getField(\n            \"EXPAND_BUTTON\"\n        ) as ExpandModelBlockField\n        expandField.updateFieldValue(updatedValue)\n    }\n\n    const handleChangedEpochs = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            setNumEpochs(newValue)\n        }\n    }\n\n    const handleChangedOptimizer = event => {\n        const newValue = event.target.value\n        if (newValue) setOptimizer(newValue)\n    }\n\n    const handleChangedLossFn = event => {\n        const newValue = event.target.value\n        if (newValue) setLossFn(newValue)\n    }\n\n    return (\n        <PointerBoundary>\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item className={classes.fieldContainer}>\n                    <Box color=\"text.secondary\">\n                        optimizer&ensp;\n                        <Tooltip title=\"Update the optimizer\">\n                            <Select\n                                id={useId() + \"optimizer\"}\n                                variant=\"outlined\"\n                                value={optimizer}\n                                onChange={handleChangedOptimizer}\n                            >\n                                <MenuItem value=\"adam\">adam</MenuItem>\n                                <MenuItem value=\"sgd\">SGD</MenuItem>\n                                <MenuItem value=\"adagrad\">adagrad</MenuItem>\n                                <MenuItem value=\"adadelta\">adadelta</MenuItem>\n                            </Select>\n                        </Tooltip>\n                    </Box>\n                    <Box color=\"text.secondary\">\n                        loss&ensp;\n                        <Tooltip title=\"Update the loss function\">\n                            <Select\n                                id={useId() + \"lossFn\"}\n                                variant=\"outlined\"\n                                value={lossFn}\n                                onChange={handleChangedLossFn}\n                            >\n                                <MenuItem value=\"categoricalCrossentropy\">\n                                    CCE\n                                </MenuItem>\n                                <MenuItem value=\"meanSquaredError\">\n                                    MSE\n                                </MenuItem>\n                                <MenuItem value=\"hinge\">hinge</MenuItem>\n                            </Select>\n                        </Tooltip>\n                    </Box>\n                    <Box color=\"text.secondary\">\n                        epochs&ensp;\n                        <Tooltip title=\"Update the batch size to train on\">\n                            <TextField\n                                id={useId() + \"epochs\"}\n                                type=\"number\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                value={numEpochs}\n                                onChange={handleChangedEpochs}\n                                className={classes.field}\n                            />\n                        </Tooltip>\n                    </Box>\n                </Grid>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Input shape: [{inputShape.join(\", \")}]<br />\n                        No. of layers: {totalLayers} <br />\n                        No. of parameters: {totalParams} <br />\n                        Total size: {(totalSize / 1000).toPrecision(2)} KB{\" \"}\n                        <br />\n                        Run time: {runTimeInMs.toPrecision(2)}ms @ 64MHz <br />\n                    </Box>\n                </Grid>\n            </Grid>\n        </PointerBoundary>\n    )\n}\n\nexport default class NeuralNetworkBlockField extends ReactInlineField {\n    static KEY = \"nn_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new NeuralNetworkBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            totalLayers: 0,\n            totalParams: 0,\n            totalSize: 0,\n            runTimeInMs: 0,\n            inputShape: [0, 0],\n            optimizer: \"adam\",\n            numEpochs: 200,\n            lossFn: \"categoricalCrossentropy\",\n            metrics: \"acc\",\n        }\n    }\n\n    getText_() {\n        const { totalLayers } = this.value as NeuralNetworkBlockFieldValue\n\n        return `${totalLayers} layer(s)`\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <Root>\n                <NNParameterWidget\n                    initFieldValue={this.value as NeuralNetworkBlockFieldValue}\n                />\n            </Root>\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Grid, TextField, Tooltip } from \"@mui/material\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nimport { useId } from \"react-use-id-hook\"\nimport ExpandModelBlockField from \"./ExpandModelBlockField\"\n\nconst PREFIX = \"PoolingLayerBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n}))\n\nexport interface PoolingLayerFieldValue {\n    percentParams: number\n    percentSize: number\n    runTimeInMs: number\n    outputShape: number[]\n    poolSize: number\n    strideSize: number\n}\n\nfunction LayerParameterWidget(props: {\n    initFieldValue: PoolingLayerFieldValue\n}) {\n    const { initFieldValue } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const { percentSize, percentParams, outputShape, runTimeInMs } =\n        initFieldValue\n    let { poolSize, strideSize } = initFieldValue\n\n    const updateParameters = () => {\n        // push changes to field values to the parent\n        const updatedValue = {\n            poolSize: poolSize,\n            strideSize: strideSize,\n        }\n\n        // send new value to the parameter holder\n        const expandField = sourceBlock.getField(\n            \"EXPAND_BUTTON\"\n        ) as ExpandModelBlockField\n        expandField.updateFieldValue(updatedValue)\n    }\n\n    const handleChangedPoolSize = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            poolSize = newValue\n            updateParameters()\n        }\n    }\n\n    const handleChangedStrides = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newValue = event.target.valueAsNumber\n        if (newValue && !isNaN(newValue)) {\n            strideSize = newValue\n            updateParameters()\n        }\n    }\n\n    return (\n        <PointerBoundary>\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item className={classes.fieldContainer}>\n                    <Box color=\"text.secondary\">\n                        pool size&emsp;\n                        <Tooltip title=\"Update the pool size\">\n                            <TextField\n                                id={useId() + \"poolSize\"}\n                                type=\"number\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                defaultValue={poolSize}\n                                onChange={handleChangedPoolSize}\n                                className={classes.field}\n                            />\n                        </Tooltip>\n                    </Box>\n                    <Box color=\"text.secondary\">\n                        stride&emsp;\n                        <Tooltip title=\"Update the stride\">\n                            <TextField\n                                id={useId() + \"stride\"}\n                                type=\"number\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                defaultValue={strideSize}\n                                onChange={handleChangedStrides}\n                                className={classes.field}\n                            />\n                        </Tooltip>\n                    </Box>\n                </Grid>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Output shape: [{outputShape.join(\", \")}]<br />\n                        Percent of total size: {percentSize.toPrecision(2)}%\n                        <br />\n                        Percent of total params: {percentParams.toPrecision(2)}%\n                        <br />\n                        Run time: {runTimeInMs.toPrecision(2)} ms <br />\n                    </Box>\n                </Grid>\n            </Grid>\n        </PointerBoundary>\n    )\n}\n\nexport default class PoolingLayerBlockField extends ReactInlineField {\n    static KEY = \"pooling_layer_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new PoolingLayerBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            percentParams: 0,\n            percentSize: 0,\n            runTimeInMs: 0,\n            outputShape: [0, 0],\n            poolSize: 2,\n            strideSize: 1,\n        }\n    }\n\n    getText_() {\n        return ``\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <Root>\n                <LayerParameterWidget\n                    initFieldValue={this.value as PoolingLayerFieldValue}\n                />\n            </Root>\n        )\n    }\n}\n","import React, { ReactNode, useContext } from \"react\"\nimport { Box, Grid, Tooltip, Button } from \"@mui/material\"\nimport DownloadIcon from \"@mui/icons-material/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport WorkspaceContext from \"../../WorkspaceContext\"\n\nexport interface RecordingBlockFieldValue {\n    numSamples: number\n    timestamp: number\n    inputTypes: string[]\n}\n\nfunction RecordingParameterWidget(props: {\n    initFieldValue: RecordingBlockFieldValue\n}) {\n    const { initFieldValue } = props\n    const { sourceBlock } = useContext(WorkspaceContext)\n\n    const { numSamples, inputTypes } = initFieldValue\n\n    const handleDownloadDataSet = () => {\n        console.log(\"Download recording\")\n        sourceBlock.data = \"click.download\"\n    }\n\n    return (\n        <PointerBoundary>\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Total samples: {numSamples} <br />\n                        Input type(s):{\" \"}\n                        {inputTypes.length ? inputTypes.join(\", \") : \"none\"}\n                    </Box>\n                </Grid>\n                <Grid item style={{ display: \"inline-flex\" }}>\n                    <Tooltip title=\"Download recording as csv file\">\n                        <Button\n                            onClick={handleDownloadDataSet}\n                            startIcon={<DownloadIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            Download\n                        </Button>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        </PointerBoundary>\n    )\n}\n\nexport default class RecordingBlockField extends ReactInlineField {\n    static KEY = \"recording_block_field_key\"\n\n    constructor(value: string, previousValue?: any) {\n        super(value)\n        if (previousValue)\n            this.value = { ...this.defaultValue, ...previousValue }\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new RecordingBlockField(options?.value)\n    }\n\n    /* This default value is specified here and in modelblockdsl.ts */\n    get defaultValue() {\n        return {\n            numSamples: 0,\n            timestamp: 0,\n            inputTypes: [],\n        }\n    }\n\n    getText_() {\n        const { numSamples } = this.value\n\n        return `${numSamples} sample(s)`\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <RecordingParameterWidget\n                initFieldValue={this.value as RecordingBlockFieldValue}\n            />\n        )\n    }\n}\n","import React, { lazy, ReactNode, useContext, useEffect, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Button, Grid, Tooltip } from \"@mui/material\"\nimport Suspense from \"../../../ui/Suspense\"\n\nimport { ReactFieldJSON } from \"../ReactField\"\nimport ReactInlineField from \"../ReactInlineField\"\nimport { PointerBoundary } from \"../PointerBoundary\"\n\nimport ViewIcon from \"@mui/icons-material/Visibility\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DownloadIcon from \"@mui/icons-material/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n\nimport { predictRequest } from \"../../dsl/workers/tf.proxy\"\nimport type { TFModelPredictRequest } from \"../../../../workers/tf/dist/node_modules/tf.worker\"\n\nimport WorkspaceContext, { resolveBlockServices } from \"../../WorkspaceContext\"\nimport { CHANGE } from \"../../../../../jacdac-ts/src/jdom/constants\"\n\nimport MBDataSet, { arraysEqual } from \"../../../model-editor/MBDataSet\"\nimport MBModel from \"../../../model-editor/MBModel\"\n\nconst PREFIX = \"TrainedModelBlockField\"\n\nconst classes = {\n    fieldContainer: `${PREFIX}-fieldContainer`,\n    field: `${PREFIX}-field`,\n    inlineItem: `${PREFIX}-inlineItem`,\n}\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.fieldContainer}`]: {\n        lineHeight: \"2.5rem\",\n        width: \"15rem\",\n    },\n\n    [`& .${classes.field}`]: {\n        width: theme.spacing(10),\n    },\n\n    [`& .${classes.inlineItem}`]: {\n        height: theme.spacing(30),\n        overflowY: \"scroll\",\n    },\n}))\n\nconst ConfusionMatrixHeatMap = lazy(\n    () => import(\"../../../model-editor/components/ConfusionMatrixHeatMap\")\n)\nconst DataSetPlot = lazy(\n    () => import(\"../../../model-editor/components/DataSetPlot\")\n)\n\nfunction TrainedModelDisplayWidget() {\n    const chartProps = {\n        CHART_WIDTH: 150,\n        CHART_HEIGHT: 150,\n        MARK_SIZE: 75,\n        TOOLTIP_NUM_FORMAT: \"0.2f\",\n        PALETTE: [\n            \"#003f5c\",\n            \"#ffa600\",\n            \"#665191\",\n            \"#a05195\",\n            \"#ff7c43\",\n            \"#d45087\",\n            \"#f95d6a\",\n            \"#2f4b7c\",\n        ],\n    }\n\n    const [chartType, setChartType] = useState<\n        \"confusion matrix\" | \"dataset plot\"\n    >(\"confusion matrix\")\n\n    const { sourceBlock } = useContext(WorkspaceContext)\n    const services = resolveBlockServices(sourceBlock)\n\n    const [dataSet, setDataSet] = useState(undefined)\n    const [model, setModel] = useState(undefined)\n    const [trainingPredictionResult, setTrainingPredictionResult] =\n        useState(undefined)\n    const [trainTimestamp, setTrainTimestamp] = useState(Date.now())\n    const [errorMsg, setErrorMsg] = useState(\"\")\n\n    // track workspace changes and re-render\n    useEffect(\n        () =>\n            services?.subscribe(CHANGE, () => {\n                sourceBlock.data = \"click.refreshdisplay\"\n\n                if (!services.data) {\n                    setErrorMsg(\"Please select a valid dataset\")\n                    return\n                }\n                setErrorMsg(\"\")\n\n                // grab the model and dataset to test with\n                const updatedDataSet = services.data[0] as MBDataSet\n                const updatedModel = services.data[1] as MBModel\n\n                if (!updatedModel || !updatedDataSet) return\n\n                // make sure dataset and model are compatible (same input data)\n                if (\n                    !arraysEqual(\n                        updatedDataSet.inputTypes,\n                        updatedModel.inputTypes\n                    ) ||\n                    updatedDataSet.length != updatedModel.inputShape[0] ||\n                    updatedDataSet.width != updatedModel.inputShape[1]\n                ) {\n                    setErrorMsg(\n                        \"The selected dataset does not have the same input/output type as the trained model\"\n                    )\n                    setDataSet(updatedDataSet)\n                    setModel(updatedModel)\n                    return\n                }\n                setErrorMsg(\"\")\n\n                // get selected chart\n                const selectedChart = sourceBlock\n                    .getField(\"SELECTED_CHART\")\n                    .getText()\n\n                // for confusion matrix and dataset plot predict on dataset\n                if (\n                    selectedChart == \"confusion matrix\" ||\n                    selectedChart == \"dataset plot\"\n                ) {\n                    const predictMsg = {\n                        worker: \"tf\",\n                        type: \"predict\",\n                        data: {\n                            zData: updatedDataSet.xs,\n                            model: updatedModel.toJSON(),\n                        },\n                    } as TFModelPredictRequest\n                    predictRequest(predictMsg).then(result => {\n                        if (result && result.data) {\n                            // convert prediction result to string\n                            const predictions = []\n                            result.data.predictTop.forEach(prediction => {\n                                predictions.push(\n                                    updatedModel.labels[prediction]\n                                )\n                            })\n                            setTrainingPredictionResult(predictions)\n                            setTrainTimestamp(Date.now())\n                        }\n                    })\n                }\n\n                setDataSet(updatedDataSet)\n                setModel(updatedModel)\n                setChartType(selectedChart)\n            }),\n        [services]\n    )\n\n    const handleViewTrainedModel = () => {\n        // open modal to view model\n        sourceBlock.data = \"click.view\"\n    }\n    const handleDownloadModel = () => {\n        // set the model name to what the user typed into the box\n        const trainedModelName = sourceBlock\n            .getField(\"TRAINED_MODEL_NAME\")\n            .getText()\n        if (model) model.name = trainedModelName\n\n        sourceBlock.data = \"click.download\"\n    }\n\n    if (errorMsg.length)\n        return (\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item>\n                    <Box color=\"text.secondary\">\n                        Error: {errorMsg}\n                        <br />\n                    </Box>\n                    <br />\n                    {!!model && (\n                        <Box color=\"text.secondary\">\n                            Model input types: {model.inputTypes.join(\", \")}\n                            <br />\n                            Input shape: [{model.inputShape.join(\", \")}]\n                        </Box>\n                    )}\n                    <br />\n                    {!!dataSet && (\n                        <Box color=\"text.secondary\">\n                            Data set input types:{\" \"}\n                            {dataSet.inputTypes.join(\", \")}\n                            <br />\n                            Input shape: [{dataSet.length}, {dataSet.width}]\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item style={{ display: \"inline-flex\" }}>\n                    <Tooltip title=\"View this model and perform actions like testing with live data\">\n                        <Button\n                            onClick={handleViewTrainedModel}\n                            startIcon={<ViewIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            View\n                        </Button>\n                    </Tooltip>\n                    &ensp;\n                    <Tooltip title=\"Download trained model file\">\n                        <Button\n                            onClick={handleDownloadModel}\n                            startIcon={<DownloadIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            Download\n                        </Button>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        )\n    else if (chartType == \"confusion matrix\")\n        return (\n            <Grid container spacing={1} direction={\"column\"}>\n                {!!model && !!dataSet && (\n                    <Grid item>\n                        <PointerBoundary>\n                            <Suspense>\n                                <ConfusionMatrixHeatMap\n                                    chartProps={chartProps}\n                                    yActual={dataSet.ys.map(\n                                        val => dataSet.labels[val]\n                                    )}\n                                    yPredicted={trainingPredictionResult}\n                                    labels={model.labels}\n                                    timestamp={trainTimestamp}\n                                />\n                            </Suspense>\n                        </PointerBoundary>\n                    </Grid>\n                )}\n                <Grid item style={{ display: \"inline-flex\" }}>\n                    <Tooltip title=\"View this model and perform actions like testing with live data\">\n                        <Button\n                            onClick={handleViewTrainedModel}\n                            startIcon={<ViewIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            View\n                        </Button>\n                    </Tooltip>\n                    &ensp;\n                    <Tooltip title=\"Download trained model file\">\n                        <Button\n                            onClick={handleDownloadModel}\n                            startIcon={<DownloadIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            Download\n                        </Button>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        )\n    else if (chartType == \"dataset plot\")\n        return (\n            <Grid container spacing={1} direction={\"column\"}>\n                {!!model && !!dataSet && (\n                    <Grid item>\n                        <PointerBoundary>\n                            <Suspense>\n                                <DataSetPlot\n                                    chartProps={chartProps}\n                                    reactStyle={classes}\n                                    dataset={dataSet}\n                                    predictedLabels={trainingPredictionResult}\n                                    timestamp={trainTimestamp}\n                                />\n                            </Suspense>\n                        </PointerBoundary>\n                    </Grid>\n                )}\n                <Grid item style={{ display: \"inline-flex\" }}>\n                    <Tooltip title=\"View this model and perform actions like testing with live data\">\n                        <Button\n                            onClick={handleViewTrainedModel}\n                            startIcon={<ViewIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            View\n                        </Button>\n                    </Tooltip>\n                    &ensp;\n                    <Tooltip title=\"Download trained model file\">\n                        <Button\n                            onClick={handleDownloadModel}\n                            startIcon={<DownloadIcon />}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            Download\n                        </Button>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        )\n}\n\nexport default class TrainedModelBlockField extends ReactInlineField {\n    static KEY = \"trained_model_block_field_key\"\n\n    constructor(value: string) {\n        super(value)\n    }\n\n    static fromJson(options: ReactFieldJSON) {\n        return new TrainedModelBlockField(options?.value)\n    }\n\n    getText_() {\n        return ``\n    }\n\n    renderInlineField(): ReactNode {\n        return (\n            <Root>\n                <TrainedModelDisplayWidget />\n            </Root>\n        )\n    }\n\n    updateFieldValue(msg: any) {\n        this.value = {\n            ...(this.value as any),\n            ...msg,\n        }\n    }\n}\n","import Blockly, { Block } from \"blockly\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { SMap, toMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport BlockDomainSpecificLanguage, { resolveDsl } from \"./dsl/dsl\"\nimport { ReactFieldBase } from \"./fields/ReactFieldBase\"\nimport {\n    VariableJSON,\n    WorkspaceJSON,\n    BlockJSON,\n    InputJSON,\n} from \"./dsl/workspacejson\"\n\nexport function workspaceToJSON(\n    workspace: Blockly.Workspace,\n    dsls: BlockDomainSpecificLanguage[],\n    top?: Block[]\n): WorkspaceJSON {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const clean = (o: any) =>\n        Object.keys(o)\n            .filter(k => o[k] === undefined || o[k] === null)\n            .forEach(k => delete o[k])\n    const builtins: SMap<(block: Blockly.Block) => string | number | boolean> =\n        {\n            logic_null: () => null,\n            text: block => block.getFieldValue(\"TEXT\"),\n            text_input: block => block.getFieldValue(\"TEXT\"),\n            math_number: block => Number(block.getFieldValue(\"NUM\") || \"0\"),\n            logic_boolean: block => block.getFieldValue(\"BOOL\") === \"TRUE\",\n        }\n\n    const variableToJSON = (variable: Blockly.VariableModel): VariableJSON => ({\n        name: variable.name,\n        type: variable.type,\n        id: variable.getId(),\n    })\n    const fieldsToJSON = (fields: Blockly.Field[]) =>\n        !fields.length\n            ? undefined\n            : toMap(\n                  fields,\n                  field => (field.name as string)?.toLowerCase(),\n                  fieldToJSON\n              )\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const xmlToJSON = (xml: Element): any => {\n        const j = {}\n        if (Flags.diagnostics) j[\"xml\"] = xml.outerHTML\n        // dump attributes\n        for (const name of xml\n            .getAttributeNames()\n            .filter(n => n !== \"preview\")) {\n            const v = xml.getAttribute(name)\n            j[name.toLowerCase()] = v\n        }\n        for (const child of xml.childNodes) {\n            if (child.nodeType === Node.TEXT_NODE) j[\"value\"] = xml.textContent\n            else if (child.nodeType === Node.ELEMENT_NODE) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const children: any[] = j[\"children\"] || (j[\"children\"] = [])\n                children.push(xmlToJSON(child as Element))\n            }\n        }\n        return j\n    }\n    const fieldToJSON = (field: Blockly.Field) => {\n        if (field.isSerializable()) {\n            // custom field can just return the value\n            if (field instanceof ReactFieldBase) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const value = (field as ReactFieldBase<any>).value\n                return { value }\n            } else {\n                const container = Blockly.utils.xml.createElement(\"field\")\n                const fieldXml = field.toXml(container)\n                return xmlToJSON(fieldXml)\n            }\n        }\n        return undefined\n    }\n    const flattenNext = (block: BlockJSON) => {\n        // flatten the linked list of next into an array\n        const children: BlockJSON[] = []\n        let current = block.next\n        while (current) {\n            children.push(current)\n            current = current.next\n        }\n        if (children.length) {\n            block.children = children\n            block.next = undefined\n        }\n    }\n    const blockToJSON = (block: Blockly.Block): BlockJSON => {\n        const blockToJSONHidden = (block: Blockly.Block): BlockJSON => {\n            // skip disabled blocks\n            if (!block?.isEnabled()) return undefined\n            // skip over insertion markers.\n            if (block.isInsertionMarker()) {\n                const child = block.getChildren(false)[0]\n                if (child) return blockToJSON(child)\n                else return undefined\n            }\n\n            const { type } = block\n            // allow DSL to handle conversion\n            let value = builtins[block.type]?.(block)\n            if (value === undefined) {\n                const dsl = resolveDsl(dsls, type)\n                value = dsl?.blockToValue?.(block)\n            }\n            const element: BlockJSON = {\n                type: block.type,\n                id: block.id,\n                value,\n                inputs:\n                    value === undefined\n                        ? block.inputList.map(input => {\n                              const container: InputJSON = {\n                                  type: input.type,\n                                  name: input.name,\n                                  fields: fieldsToJSON(input.fieldRow),\n                                  child: blockToJSON(\n                                      input.connection?.targetBlock()\n                                  ),\n                              }\n                              return container\n                          })\n                        : undefined,\n                next: blockToJSONHidden(block.getNextBlock()),\n            }\n            clean(element)\n            return element\n        }\n        const top = blockToJSONHidden(block)\n        if (top) {\n            flattenNext(top)\n            clean(top)\n        }\n        return top\n    }\n\n    try {\n        const variables = Blockly.Variables.allUsedVarModels(workspace).sort(\n            (l, r) => l.name.localeCompare(r.name)\n        ) // stable sort name\n        const todo = top || workspace.getTopBlocks(true)\n        const json: WorkspaceJSON = {\n            variables: variables.map(variableToJSON),\n            blocks: todo.map(blockToJSON).filter(b => !!b),\n        }\n        dsls.forEach(dsl => dsl.visitWorkspaceJSON?.(workspace, json))\n        dsls.forEach(dsl => dsl.onWorkspaceJSONChange?.(json))\n        return json\n    } catch (e) {\n        console.error(e)\n        return undefined\n    }\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame). The throttled function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * const scrollHandler = useThrottledCallback(updatePosition, 100)\n * window.addEventListener('scroll', scrollHandler)\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const { callback } = useThrottledCallback(renewToken, 300000, { 'trailing': false })\n * <button onClick={callback}>click</button>\n *\n * // Cancel the trailing throttled invocation.\n * window.addEventListener('popstate', throttled.cancel);\n */\n\nexport default function useThrottledCallback(func, wait, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.leading,\n      leading = _c === void 0 ? true : _c,\n      _d = _b.trailing,\n      trailing = _d === void 0 ? true : _d;\n\n  return useDebouncedCallback(func, wait, {\n    maxWait: wait,\n    leading: leading,\n    trailing: trailing\n  });\n}","import { useState, useEffect } from \"react\"\nimport { CHANGE } from \"../../jacdac-ts/src/jdom/constants\"\nimport { IEventSource } from \"../../jacdac-ts/src/jdom/eventsource\"\nimport { useThrottledCallback } from \"use-debounce\"\n\nconst DEFAULT_THROTTLE = 200\nexport default function useChangeThrottled<TNode extends IEventSource, TValue>(\n    node: TNode,\n    query?: (n: TNode) => TValue,\n    time?: number,\n    deps?: React.DependencyList\n): TValue {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [version, setVersion] = useState(node?.changeId || 0)\n    const value = query ? query(node) : undefined\n    const throttledSetVersion = useThrottledCallback(\n        setVersion,\n        time || DEFAULT_THROTTLE\n    )\n\n    useEffect(\n        () => node?.subscribe(CHANGE, () => throttledSetVersion(node.changeId)),\n        [node, ...(deps || [])]\n    )\n\n    return value\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport WorkspaceContext from \"./WorkspaceContext\"\n\nexport default function useDragDebounce<T>(value: T): T {\n    const { dragging } = useContext(WorkspaceContext)\n    const [valueAtDragging, setValueAtDragging] = useState(value)\n\n    // record value when starting to drag\n    useEffect(() => {\n        if (dragging) setValueAtDragging(value)\n    }, [dragging])\n\n    // return value at dragging until drag is completed\n    return dragging ? valueAtDragging || value : value\n}\n","import { BlockServices, BlockWithServices } from \"./WorkspaceContext\"\nimport { Block } from \"blockly\"\nimport { useCallback, useEffect } from \"react\"\nimport useChangeThrottled from \"../../jacdac/useChangeThrottled\"\nimport useDragDebounce from \"./useDragDebounce\"\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport default function useBlockData<T extends object>(\n    block: Block,\n    initialValue?: T[],\n    throttleTime?: number\n) {\n    const services = (block as unknown as BlockWithServices)?.jacdacServices\n    // data on the current node\n    const { data, transformedData } = useChangeThrottled<\n        BlockServices,\n        { data: T[]; transformedData: T[] }\n    >(\n        services,\n        _ => ({\n            data: _?.data as T[],\n            transformedData: _?.transformedData as T[],\n        }),\n        throttleTime\n    )\n    const setData = useCallback(\n        (value: T[]) => {\n            if (services) services.data = value\n        },\n        [services]\n    )\n\n    // set initial value\n    useEffect(() => {\n        if (\n            services &&\n            initialValue !== undefined &&\n            services.data === undefined\n        )\n            services.data = initialValue\n    }, [services])\n\n    // debounce with dragging\n    const debounced = useDragDebounce(data)\n    const debouncedTransformedData = useDragDebounce(transformedData)\n\n    return {\n        data: debounced,\n        transformedData: debouncedTransformedData,\n        setData,\n    }\n}\n","import { Chip } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport OpenInBrowserIcon from \"@mui/icons-material/OpenInBrowser\"\nimport FileSystemContext from \"../FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FileSystemChip() {\n    const { fileSystem, showDirectoryPicker } = useContext(FileSystemContext)\n    const root = useChange(fileSystem, _ => _?.root)\n    const handleOpenDirectory = showDirectoryPicker\n    const handleCloseDirectory = () => (fileSystem.root = undefined)\n\n    if (!fileSystem) return null\n\n    return (\n        <Chip\n            clickable\n            avatar={<OpenInBrowserIcon />}\n            label={root?.name || \"open directory\"}\n            onClick={handleOpenDirectory}\n            onDelete={root ? handleCloseDirectory : undefined}\n        />\n    )\n}\n","import {\n    Chip,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    TextField,\n    DialogActions,\n    Button,\n} from \"@mui/material\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport { useId } from \"react-use-id-hook\"\nimport FileSystemContext from \"../FileSystemContext\"\n\nexport default function FileNewFileChip(props: {\n    name?: string\n    content: string\n    label?: string\n    extension?: string\n}) {\n    const {\n        name: newFileName,\n        content: newFileContent,\n        label,\n        extension,\n    } = props\n    const { fileSystem } = useContext(FileSystemContext)\n    const [open, setOpen] = useState(false)\n    const [value, setValue] = useState(\"\")\n    const valueId = useId()\n\n    const handleOpen = () => {\n        setValue(\"\")\n        setOpen(true)\n    }\n    const handleOk = async () => {\n        setOpen(false)\n        let name = value.toLocaleLowerCase().replace(/\\s+/g, \"\")\n        if (newFileName)\n            await fileSystem.createWorkingDirectory(\n                name,\n                newFileName,\n                newFileContent\n            )\n        else {\n            if (extension) name += `.${extension}`\n            const d = fileSystem.workingDirectory || fileSystem.root\n            const f = await d.fileAsync(name, { create: true })\n            await f.write(newFileContent)\n            fileSystem.workingFile = f\n        }\n    }\n    const handleCancel = () => setOpen(false)\n    const handleValueChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n    }\n\n    return (\n        <>\n            <Chip\n                clickable\n                label={label || \"new...\"}\n                icon={<AddIcon />}\n                onClick={handleOpen}\n            />\n            <Dialog open={open} fullWidth={true}>\n                <DialogContent>\n                    <DialogContentText>Choose a project name</DialogContentText>\n                    <TextField\n                        id={valueId}\n                        value={value}\n                        label=\"Value\"\n                        fullWidth={true}\n                        onChange={handleValueChange}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" onClick={handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!value}\n                        onClick={handleOk}\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n","import { Chip } from \"@mui/material\"\nimport React from \"react\"\nimport { FileSystemNode } from \"./fsdom\"\n\nexport default function FileSystemNodeChip(props: {\n    node: FileSystemNode\n    selected?: boolean\n    onClick: () => void\n}) {\n    const { node, selected, onClick } = props\n    const { name } = node\n    return (\n        <Chip\n            clickable\n            label={name.replace(/\\.json$/i, \"\")}\n            color={selected ? \"primary\" : undefined}\n            onClick={onClick}\n        />\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext, useRef } from \"react\"\nimport useKeyboardNavigationProps from \"../hooks/useKeyboardNavigationProps\"\nimport FileSystemContext from \"../FileSystemContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport FileSystemChip from \"./FileSystemChip\"\nimport FileNewFileChip from \"./FileNewFileChip\"\nimport FileSystemNodeChip from \"./FileSystemNodeChip\"\n\nexport default function FileTabs(props: {\n    newFileName?: string\n    newFileExtension?: string\n    newFileContent?: string\n    newFileLabel?: string\n    hideDirectories?: boolean\n    hideFiles?: boolean\n    directoryFilter?: (directory: string) => boolean\n    fileFilter?: (file: string) => boolean\n}) {\n    const {\n        newFileName,\n        newFileContent,\n        hideDirectories,\n        hideFiles,\n        directoryFilter,\n        fileFilter,\n        newFileLabel,\n        newFileExtension,\n    } = props\n    const { fileSystem } = useContext(FileSystemContext)\n    const root = useChange(fileSystem, _ => _?.root)\n    const workingDirectory = useChange(fileSystem, _ => _?.workingDirectory)\n    const workingFile = useChange(fileSystem, _ => _?.workingFile)\n    const directories = useChange(root, _ =>\n        _?.directories?.filter(d => !directoryFilter || directoryFilter(d.name))\n    )\n    const files = useChange(root, _ =>\n        _?.files?.filter(d => !fileFilter || fileFilter(d.name))\n    )\n    const gridRef = useRef()\n    const keyboardProps = useKeyboardNavigationProps(gridRef.current)\n    const handleDirectorySelected = handle => () =>\n        (fileSystem.workingDirectory = handle)\n    const handleFileSelected = handle => () => (fileSystem.workingFile = handle)\n\n    if (!fileSystem) return null\n\n    return (\n        <Grid ref={gridRef} container spacing={1} {...keyboardProps}>\n            <Grid item>\n                <FileSystemChip />\n            </Grid>\n            {!hideDirectories &&\n                directories?.map(node => (\n                    <Grid item key={node.name}>\n                        <FileSystemNodeChip\n                            node={node}\n                            selected={node === workingDirectory}\n                            onClick={handleDirectorySelected(node)}\n                        />\n                    </Grid>\n                ))}\n            {!hideFiles &&\n                files?.map(node => (\n                    <Grid item key={node.name}>\n                        <FileSystemNodeChip\n                            node={node}\n                            selected={node === workingFile}\n                            onClick={handleFileSelected(node)}\n                        />\n                    </Grid>\n                ))}\n            {root && newFileContent && (\n                <Grid item>\n                    <FileNewFileChip\n                        name={newFileName}\n                        content={newFileContent}\n                        label={newFileLabel}\n                        extension={newFileExtension}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import { KeyboardEvent } from \"react\"\nimport { keyCodeFromEvent } from \"./useFireKey\"\n\nconst LEFT_KEY = 37\nconst UP_KEY = 38\nconst RIGHT_KEY = 39\nconst DOWN_KEY = 40\n\nexport default function useArrowKeys(options: {\n    onLeft?: () => void\n    onRight?: () => void\n    onUp?: () => void\n    onDown?: () => void\n    symmetric?: boolean\n}) {\n    const { onLeft, onUp, onRight, onDown, symmetric } = options\n\n    if (!onLeft && !onUp && !onRight && !onDown) return undefined\n\n    const handlers = {\n        [LEFT_KEY]: onLeft,\n        [RIGHT_KEY]: onRight,\n        [UP_KEY]: onUp || (symmetric && onRight),\n        [DOWN_KEY]: onDown || (symmetric && onLeft),\n    }\n\n    return (e: KeyboardEvent<Element>) => {\n        const charCode = keyCodeFromEvent(e)\n        const handler = handlers[charCode]\n        if (handler) {\n            e.preventDefault()\n            handler()\n        }\n    }\n}\n","export default function useKeyboardNavigation(parentRef: Element) {\n    const query = '[tabindex=\"0\"]'\n    const onMove = (offset: number) => () => {\n        console.log(\"keyboard move\", { offset })\n        const focusable = Array.from<SVGElement>(\n            parentRef?.querySelectorAll(query) || []\n        )\n        if (focusable.length) {\n            const me = focusable.findIndex(f => f === document.activeElement)\n            const next = (me + offset + focusable.length) % focusable.length\n            focusable[next].focus()\n        }\n    }\n    return onMove\n}\n","import useArrowKeys from \"./useArrowKeys\"\nimport useKeyboardNavigation from \"./useKeyboardNavigation\"\n\nexport default function useKeyboardNavigationProps(\n    parentRef: Element,\n    vertical?: boolean\n) {\n    const onMove = useKeyboardNavigation(parentRef)\n\n    const onKeyDown = useArrowKeys({\n        onLeft: !vertical && onMove(-1),\n        onRight: !vertical && onMove(1),\n        onDown: vertical && onMove(1),\n        onUp: vertical && onMove(-1),\n    })\n\n    return {\n        onKeyDown: parentRef && onKeyDown,\n    }\n}\n","import { useContext } from \"react\"\nimport DeviceFilter from \"../../../jacdac-ts/src/jdom/filters/devicefilter\"\nimport ServiceFilter from \"../../../jacdac-ts/src/jdom/filters/servicefilter\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, _ => _?.services(options) || [], [\n        JSON.stringify(options),\n    ])\n    return services\n}\n","import {\n    BlockDefinition,\n    CategoryDefinition,\n    MODEL_BLOCK_CLASS_STATEMENT_TYPE,\n    MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n    TextInputDefinition,\n    VariableInputDefinition,\n} from \"../blockly/toolbox\"\nimport BlockDomainSpecificLanguage from \"../blockly/dsl/dsl\"\n\nimport ExpandModelBlockField from \"../blockly/fields/mb/ExpandModelBlockField\"\nimport DataSetBlockButton from \"../blockly/fields/mb/DataSetBlockButton\"\nimport NeuralNetworkBlockButton from \"../blockly/fields/mb/NeuralNetworkBlockButtons\"\nimport TrainedModelBlockField from \"../blockly/fields/mb/TrainedModelBlockField\"\n\nexport const MODEL_BLOCKS = \"model_block_\"\nexport const MB_DATASET_VAR_TYPE = \"ModelBlockDataSet\"\nexport const MB_CLASS_VAR_TYPE = \"ModelBlockClass\"\nexport const MB_CLASSIFIER_VAR_TYPE = \"ModelBlockClassifier\"\n\nconst dataset_color = \"#123456\"\nconst class_color = \"#2466A8\"\nconst learning_color = \"#561234\"\nconst layer_color = \"#97207a\"\n\nexport class ModelBlockDomainSpecificLanguage\n    implements BlockDomainSpecificLanguage\n{\n    id = \"modelBlocks\"\n    createBlocks() {\n        const blocks: BlockDefinition[] = [\n            /* DataSet blocks */\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"dataset\",\n                message0: \"dataset %1 %2\",\n                args0: [\n                    {\n                        type: \"field_variable\",\n                        name: \"DATASET_NAME\",\n                        variable: \"dataset1\",\n                        variableTypes: [MB_DATASET_VAR_TYPE],\n                        defaultType: MB_DATASET_VAR_TYPE,\n                    },\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                message1: \"%1\",\n                args1: [\n                    {\n                        type: DataSetBlockButton.KEY,\n                        name: \"DATASET_BUTTONS\",\n                    },\n                ],\n                message2: \"%1\",\n                args2: [\n                    {\n                        type: \"input_statement\",\n                        name: \"LAYER_INPUTS\",\n                        check: [MODEL_BLOCK_CLASS_STATEMENT_TYPE],\n                    },\n                ],\n                inputsInline: false,\n                colour: dataset_color,\n                tooltip:\n                    \"Use this block to define a dataset; it only takes class blocks. Add more information to datasets by creating new classes and stacking them inside dataset blocks. Click on the inspector icon to view more details about this dataset or to generate a new dataset from this one\",\n                helpUrl: \"\",\n                hat: true,\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"recording\",\n                message0: \"recording %1 %2 %3\",\n                args0: [\n                    {\n                        type: \"field_input\",\n                        name: \"RECORDING_NAME\",\n                        text: \"recording0\",\n                    },\n                    {\n                        type: \"field_variable\",\n                        name: \"CLASS_NAME\",\n                        variable: \"class1\",\n                        variableTypes: [MB_CLASS_VAR_TYPE],\n                        defaultType: MB_CLASS_VAR_TYPE,\n                    },\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: MODEL_BLOCK_CLASS_STATEMENT_TYPE,\n                nextStatement: MODEL_BLOCK_CLASS_STATEMENT_TYPE,\n                colour: class_color,\n                tooltip:\n                    \"Use this recording block to define your classes. Click on the plus icon to download this recording\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            /* Classifier Blocks */\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"nn\",\n                message0: \"neural network classifier %1\",\n                args0: [\n                    {\n                        type: \"field_variable\",\n                        name: \"CLASSIFIER_NAME\",\n                        variable: \"classifier1\",\n                        variableTypes: [MB_CLASSIFIER_VAR_TYPE],\n                        defaultType: MB_CLASSIFIER_VAR_TYPE,\n                    } as VariableInputDefinition,\n                ],\n                message1: \" training data %1 %2\",\n                args1: [\n                    {\n                        type: \"field_variable\",\n                        name: \"NN_TRAINING\",\n                        variable: \"dataset1\",\n                        variableTypes: [MB_DATASET_VAR_TYPE],\n                        defaultType: MB_DATASET_VAR_TYPE,\n                    },\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                message2: \"%1\",\n                args2: [\n                    {\n                        type: NeuralNetworkBlockButton.KEY,\n                        name: \"NN_BUTTONS\",\n                    },\n                ],\n                message3: \"%1\",\n                args3: [\n                    {\n                        type: \"input_statement\",\n                        name: \"LAYER_INPUTS\",\n                        check: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                    },\n                ],\n                inputsInline: false,\n                colour: learning_color,\n                tooltip:\n                    \"Use this block to define a neural network classifier; it only takes layer blocks.\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"trained_nn\",\n                message0: \"trained model %1\",\n                args0: [\n                    {\n                        type: \"field_input\",\n                        name: \"TRAINED_MODEL_NAME\",\n                        text: \"classifier1.t\",\n                    } as TextInputDefinition,\n                ],\n                message1: \"testing data %1\",\n                args1: [\n                    {\n                        type: \"field_variable\",\n                        name: \"MODEL_TEST_SET\",\n                        variable: \"dataset1\",\n                        variableTypes: [MB_DATASET_VAR_TYPE],\n                        defaultType: MB_DATASET_VAR_TYPE,\n                    },\n                ],\n                message2: \"display %1\",\n                args2: [\n                    {\n                        type: \"field_dropdown\",\n                        options: [\"confusion matrix\", \"dataset plot\"].map(s => [\n                            s,\n                            s,\n                        ]),\n                        name: \"SELECTED_CHART\",\n                    },\n                ],\n                message3: \"%1\",\n                args3: [\n                    {\n                        type: TrainedModelBlockField.KEY,\n                        name: \"TRAINED_MODEL_DISPLAY\",\n                    },\n                ],\n                inputsInline: false,\n                colour: learning_color,\n                tooltip:\n                    \"Use this block to test a trained model with different datasets.\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"conv1d_layer\",\n                message0: \"convolution1d (16, 2, 1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip:\n                    \"Use this block to add a 1D convolutional layer to a neural network classifier. Convolutional layers are often used to summarize key features from input data.\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"maxpool1d_layer\",\n                message0: \"max pool1d (2, 1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"avgpool1d_layer\",\n                message0: \"average pool1d (2, 1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"conv2d_layer\",\n                message0: \"convolution2d (16, 2, 1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip:\n                    \"Use this block to add a 2D convolutional layer to a neural network classifier. Convolutional layers are often used to summarize key features from input data.\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"maxpool2d_layer\",\n                message0: \"max pool2d (2, 1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"avgpool2d_layer\",\n                message0: \"average pool2d (2, 1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"dropout_layer\",\n                message0: \"dropout (0.1) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"flatten_layer\",\n                message0: \"flatten %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n            {\n                kind: \"block\",\n                type: MODEL_BLOCKS + \"dense_layer\",\n                message0: \"dense (4, relu) %1\",\n                args0: [\n                    {\n                        type: ExpandModelBlockField.KEY,\n                        name: \"EXPAND_BUTTON\",\n                    },\n                ],\n                inputsInline: false,\n                previousStatement: [MODEL_BLOCK_LAYER_STATEMENT_TYPE],\n                nextStatement: MODEL_BLOCK_LAYER_STATEMENT_TYPE,\n                colour: layer_color,\n                tooltip: \"\",\n                helpUrl: \"\",\n            } as BlockDefinition,\n        ]\n        return blocks\n    }\n\n    createCategory() {\n        return [<CategoryDefinition>(<unknown>{\n                kind: \"category\",\n                name: \"Data sets\",\n                colour: dataset_color,\n                contents: [\n                    {\n                        kind: \"label\",\n                        text: \"Recordings\",\n                    },\n                    {\n                        kind: \"button\",\n                        text: \"Create new recording...\",\n                        callbackKey: \"createNewRecordingButton\",\n                    },\n                    {\n                        kind: \"label\",\n                        text: \"Datasets\",\n                    },\n                    {\n                        kind: \"button\",\n                        text: \"Create new dataset variable...\",\n                        callbackKey: \"createNewDataSetButton\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: MODEL_BLOCKS + \"dataset\",\n                    },\n                ],\n            }), <CategoryDefinition>(<unknown>{\n                kind: \"category\",\n                name: \"Models\",\n                colour: learning_color,\n                contents: [\n                    {\n                        kind: \"label\",\n                        text: \"Classifiers\",\n                    },\n                    {\n                        kind: \"button\",\n                        text: \"Create new classifier variable...\",\n                        callbackKey: \"createNewClassifierButton\",\n                    },\n                    {\n                        kind: \"label\",\n                        text: \"Layers\",\n                    },\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_conv1d_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0],\"numFilters\":16,\"kernelSize\":2,\"strideSize\":1,\"activation\":\"relu\"}</field></block>`,\n                    },\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_maxpool1d_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0],\"poolSize\":2,\"strideSize\":1}</field></block>`,\n                    },\n                    /*{\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_avgpool1d_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0],\"poolSize\":2,\"strideSize\":1}</field></block>`,\n                    },*/\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_conv2d_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0,0],\"numFilters\":16,\"kernelSize\":2,\"strideSize\":1,\"activation\":\"relu\"}</field></block>`,\n                    },\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_maxpool2d_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0,0],\"poolSize\":2,\"strideSize\":1}</field></block>`,\n                    },\n                    /*{\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_avgpool2d_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0,0],\"poolSize\":2,\"strideSize\":1}</field></block>`,\n                    },*/\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_dropout_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0,0],\"rate\":0.1}</field></block>`,\n                    },\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_flatten_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0]}</field></block>`,\n                    },\n                    {\n                        kind: \"block\",\n                        blockxml: `<block type=\"model_block_dense_layer\"><field name=\"EXPAND_BUTTON\">{\"parametersVisible\":false,\"percentSize\":0,\"percentParams\":0,\"runTimeInMs\":0,\"outputShape\":[0],\"numUnits\":4,\"activation\":\"relu\"}</field></block>`,\n                    },\n                ],\n            })]\n    }\n}\n\nconst modelBlockDsl = new ModelBlockDomainSpecificLanguage()\nexport default modelBlockDsl\n","import {\n    createTheme,\n    responsiveFontSizes,\n    DeprecatedThemeOptions,\n    ThemeProvider,\n    Theme,\n    StyledEngineProvider,\n} from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport DarkModeContext from \"./DarkModeContext\"\n\ndeclare module \"@mui/styles/defaultTheme\" {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface DefaultTheme extends Theme {}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function AppTheme(props: any) {\n    const { darkMode } = useContext(DarkModeContext)\n    const isDark = darkMode === \"dark\"\n    const themeDef: DeprecatedThemeOptions = {\n        palette: {\n            primary: {\n                main: isDark ? \"#56d364\" : \"#2e7d32\",\n            },\n            secondary: {\n                main: \"#ffc400\",\n            },\n            contrastThreshold: isDark ? 5.1 : 3.1,\n            mode: darkMode,\n        },\n    }\n    const rawTheme = createTheme(themeDef)\n    const theme = responsiveFontSizes(rawTheme)\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme} {...props} />\n        </StyledEngineProvider>\n    )\n}\n","import React, { useState } from \"react\"\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\"\nimport DoneIcon from \"@mui/icons-material/Done\"\nimport ReportProblemIcon from \"@mui/icons-material/ReportProblem\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport { Button } from \"@mui/material\"\nimport useMounted from \"../hooks/useMounted\"\nimport { delay } from \"../../../jacdac-ts/src/jdom/utils\"\n\ndeclare class ClipboardItem {\n    constructor(input: { [contentType: string]: Blob })\n}\ndeclare type AsyncClipboardWriteFunction = (\n    input: ClipboardItem\n) => Promise<void>\n\ndeclare global {\n    interface Window {\n        ClipboardItem: ClipboardItem | undefined\n    }\n\n    interface Clipboard {\n        write?: AsyncClipboardWriteFunction\n    }\n}\n\nexport default function CopyButton(props: {\n    label?: string\n    title?: string\n    onCopy: () => Promise<string | HTMLCanvasElement>\n    className?: string\n    size?: \"small\"\n}) {\n    const { label, title = \"copy data to clipboard\", onCopy, ...rest } = props\n    const [copied, setCopied] = useState<boolean>(undefined)\n    const mounted = useMounted()\n    const handleClick = async (ev: React.MouseEvent<HTMLButtonElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        try {\n            setCopied(null)\n            const copied = await onCopy()\n            if (typeof copied === \"string\") {\n                const text = copied as string\n                await navigator.clipboard.writeText(text)\n            } else {\n                const canvas = copied as HTMLCanvasElement\n                const blob = await new Promise<Blob>(resolve =>\n                    canvas.toBlob(blob => resolve(blob))\n                )\n                const item = new ClipboardItem({ \"image/png\": blob })\n                navigator.clipboard.write([item])\n            }\n            if (mounted()) setCopied(true)\n        } catch (e) {\n            console.debug(e)\n            if (mounted()) setCopied(false)\n        } finally {\n            await delay(1000)\n            if (mounted()) setCopied(undefined)\n        }\n    }\n    const disabled = copied !== undefined\n    const text =\n        copied === true\n            ? \"Copied!\"\n            : copied === false\n            ? \"Copy failed\"\n            : label || \"copy to clipboard\"\n    return label ? (\n        <Button\n            title={title}\n            {...rest}\n            onClick={disabled ? undefined : handleClick}\n        >\n            {text}\n        </Button>\n    ) : (\n        <IconButtonWithTooltip\n            trackName=\"ui.copy\"\n            title={text}\n            {...rest}\n            onClick={disabled ? undefined : handleClick}\n        >\n            {copied === true ? (\n                <DoneIcon />\n            ) : copied === false ? (\n                <ReportProblemIcon />\n            ) : (\n                <FileCopyIcon />\n            )}\n        </IconButtonWithTooltip>\n    )\n}\n","import jsep from \"jsep\"\nimport {\n    VMBase,\n    VMHandler,\n    VMProgram,\n    VMRole,\n    VMIfThenElse,\n    VMError,\n} from \"../../../jacdac-ts/src/vm/ir\"\nimport { toIdentifier, RoleEvent } from \"../../../jacdac-ts/src/vm/compile\"\nimport {\n    BUILTIN_TYPES,\n    resolveBlockDefinition,\n    ServiceBlockDefinition,\n} from \"../blockly/toolbox\"\nimport Blockly from \"blockly\"\nimport BlockDomainSpecificLanguage, { resolveDsl } from \"../blockly/dsl/dsl\"\nimport { parseRoleType } from \"../blockly/dsl/servicesbase\"\nimport { splitFilter } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { BlockJSON, WorkspaceJSON } from \"../blockly/dsl/workspacejson\"\n\nexport interface ExpressionWithErrors {\n    expr: jsep.Expression\n    errors: VMError[]\n}\n\nexport interface CmdWithErrors {\n    cmd: VMBase\n    errors: VMError[]\n}\n\nexport const makeVMBase = (block: BlockJSON, command: jsep.CallExpression) => {\n    return {\n        sourceId: block.id,\n        type: \"cmd\",\n        command,\n    } as VMBase\n}\n\nexport const processErrors = (block: BlockJSON, errors: VMError[]) => {\n    return errors.map((e: VMError) => {\n        return {\n            sourceId: e.sourceId ? e.sourceId : block.id,\n            message: e.message,\n        }\n    })\n}\n\nexport default function workspaceJSONToVMProgram(\n    workspace: WorkspaceJSON,\n    dsls: BlockDomainSpecificLanguage[]\n): VMProgram {\n    //console.debug(`compile vm`, { workspace, dsls })\n\n    if (!workspace) return undefined\n\n    const [roles, serverRoles]: [VMRole[], VMRole[]] = splitFilter(\n        workspace.variables\n            .filter(v => BUILTIN_TYPES.indexOf(v.type) < 0)\n            .map(parseRoleType),\n        r => r.client\n    )\n\n    class EmptyExpression extends Error {}\n\n    const blockToExpression: (\n        ev: RoleEvent,\n        block: BlockJSON\n    ) => ExpressionWithErrors = (ev: RoleEvent, blockIn: BlockJSON) => {\n        const errors: VMError[] = []\n\n        const blockToExpressionInner = (ev: RoleEvent, block: BlockJSON) => {\n            if (!block) {\n                throw new EmptyExpression()\n            }\n            const { type, value, inputs } = block\n            console.log(`block2e`, { ev, block, type, value, inputs })\n\n            if (value !== undefined)\n                // literal\n                return <jsep.Literal>{\n                    type: \"Literal\",\n                    value: value,\n                    raw: value + \"\",\n                }\n\n            const dsl = resolveDsl(dsls, type)\n            if (!dsl) {\n                console.warn(`unknown block ${type}`, {\n                    type,\n                    ev,\n                    block,\n                    d: Blockly.Blocks[type],\n                })\n                errors.push({\n                    sourceId: block.id,\n                    message: `unknown block ${type}`,\n                })\n            } else {\n                const definition =\n                    resolveBlockDefinition<ServiceBlockDefinition>(type)\n                const res = dsl.compileExpressionToVM?.({\n                    event: ev,\n                    definition,\n                    block,\n                    blockToExpressionInner,\n                })\n                if (res) {\n                    if (res.errors) res.errors.forEach(e => errors.push(e))\n                    return res.expr\n                }\n\n                const { template } = definition\n                if (template === \"shadow\") {\n                    const field = inputs[0].fields[\"value\"]\n                    const v = field.value\n                    return <jsep.Literal>{\n                        type: \"Literal\",\n                        value: v,\n                        raw: v + \"\",\n                    }\n                }\n\n                errors.push({\n                    sourceId: block.id,\n                    message: `unknown block ${type}`,\n                })\n                console.warn(`unsupported expression block ${type}`, {\n                    ev,\n                    block,\n                    definition,\n                })\n            }\n            throw new EmptyExpression()\n        }\n        return {\n            expr: blockToExpressionInner(ev, blockIn),\n            errors,\n        }\n    }\n\n    const blockToCommand = (\n        event: RoleEvent,\n        block: BlockJSON\n    ): CmdWithErrors => {\n        const { type, inputs } = block\n        console.debug(`block2c`, { event, type, block, inputs })\n        switch (type) {\n            case \"dynamic_if\": {\n                const thenHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const elseHandler: VMHandler = {\n                    commands: [],\n                    errors: [],\n                }\n                const t = inputs[1]?.child\n                const e = inputs[2]?.child\n                if (t) {\n                    addCommands(\n                        event,\n                        [t, ...(t.children ? t.children : [])],\n                        thenHandler\n                    )\n                }\n                if (e) {\n                    addCommands(\n                        event,\n                        [e, ...(e.children ? e.children : [])],\n                        elseHandler\n                    )\n                }\n                let exprErrors: ExpressionWithErrors = undefined\n                try {\n                    exprErrors = blockToExpression(event, inputs[0]?.child)\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        exprErrors = {\n                            expr: {\n                                type: \"Literal\",\n                                value: false,\n                                raw: \"false \",\n                            } as jsep.Literal,\n                            errors: [],\n                        }\n                    } else {\n                        throw e\n                    }\n                }\n                const { expr, errors } = exprErrors\n\n                const ifThenElse: VMIfThenElse = {\n                    sourceId: block.id,\n                    type: \"ite\",\n                    expr,\n                    then: thenHandler.commands,\n                    else: elseHandler.commands,\n                }\n\n                console.log(\"dynamic if\")\n                return {\n                    cmd: ifThenElse,\n                    errors: processErrors(\n                        block,\n                        errors\n                            .concat(thenHandler.errors)\n                            .concat(elseHandler.errors)\n                    ),\n                }\n            }\n            // more builts\n            default: {\n                const dsl = resolveDsl(dsls, type)\n                if (dsl) {\n                    const definition =\n                        resolveBlockDefinition<ServiceBlockDefinition>(type)\n                    const template = definition?.template\n                    if (template === \"meta\") return undefined\n                    const dslRes = dsl.compileCommandToVM?.({\n                        event,\n                        block,\n                        definition,\n                        blockToExpression,\n                    })\n                    if (dslRes) {\n                        dslRes.errors = processErrors(block, dslRes.errors)\n                        return dslRes\n                    }\n                }\n                console.warn(`unsupported command block ${type}`, { block })\n                return {\n                    cmd: undefined,\n                    errors: [\n                        {\n                            sourceId: block.id,\n                            message: `unsupported command block ${type}`,\n                        },\n                    ],\n                }\n            }\n        }\n    }\n\n    const nop = {\n        type: \"CallExpression\",\n        arguments: [],\n        callee: toIdentifier(\"nop\"),\n    } as jsep.CallExpression\n\n    const addCommands = (\n        event: RoleEvent,\n        blocks: BlockJSON[],\n        handler: VMHandler\n    ) => {\n        blocks\n            ?.filter(child => !!child)\n            .forEach(child => {\n                try {\n                    const { cmd, errors } = blockToCommand(event, child) || {}\n                    if (cmd) handler.commands.push(cmd)\n                    errors?.forEach(e => handler.errors.push(e))\n                } catch (e) {\n                    if (e instanceof EmptyExpression) {\n                        handler.commands.push({\n                            sourceId: child.id,\n                            type: \"cmd\",\n                            command: nop,\n                        } as VMBase)\n                    } else {\n                        console.debug(e)\n                    }\n                }\n            })\n    }\n\n    const handlers: VMHandler[] = workspace.blocks\n        .map(top => {\n            const { type } = top\n            let command: jsep.CallExpression\n            let topEvent: RoleEvent\n            let topErrors: VMError[]\n            let topMeta = false\n\n            try {\n                const dsl = resolveDsl(dsls, type)\n                const definition =\n                    resolveBlockDefinition<ServiceBlockDefinition>(type)\n                const { expression, errors, event, meta } =\n                    dsl?.compileEventToVM?.({\n                        block: top,\n                        definition,\n                        blockToExpression,\n                    }) || {}\n                command = expression as jsep.CallExpression\n                topErrors = errors\n                topEvent = event\n                topMeta = meta\n\n                // if dsl didn't compile anything try again\n                const { template } = definition || {}\n                if (!command && !topErrors?.length) {\n                    switch (template) {\n                        case \"meta\": {\n                            break\n                        }\n                        default: {\n                            topErrors = [\n                                {\n                                    sourceId: top.id,\n                                    message: `unsupported handler block ${type}`,\n                                },\n                            ]\n                            console.debug(\n                                `unsupported handler template ${template} for ${type}`,\n                                { top }\n                            )\n                            break\n                        }\n                    }\n                }\n            } catch (e) {\n                console.debug(e)\n                if (e instanceof EmptyExpression) {\n                    return undefined\n                } else {\n                    throw e\n                }\n            }\n\n            // nothing to compile here\n            if (!command && !topErrors?.length) return undefined\n\n            const handler: VMHandler = {\n                commands: [\n                    {\n                        sourceId: top.id,\n                        type: \"cmd\",\n                        command,\n                    } as VMBase,\n                ],\n                errors: topErrors || [],\n                meta: !!topMeta,\n            }\n\n            addCommands(topEvent, top.children, handler)\n            return handler\n        })\n        .filter(handler => !!handler)\n\n    return {\n        roles,\n        serverRoles,\n        handlers,\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction mkTitle(txt: string): SVGTitleElement {\n    const t = <SVGTitleElement>elt(\"title\")\n    t.textContent = txt\n    return t\n}\nexport function title(el: SVGElement, txt: string): SVGTitleElement {\n    const t = mkTitle(txt)\n    el.appendChild(t)\n    return t\n}\n\nexport function hydrate(el: SVGElement, props: any) {\n    for (const k in props) {\n        if (k == \"title\") {\n            title(el, props[k])\n        } else el.setAttributeNS(null, k, props[k])\n    }\n}\n\nexport function elt(name: string, props?: any): SVGElement {\n    const el = document.createElementNS(\"http://www.w3.org/2000/svg\", name)\n    if (props) hydrate(el, props)\n    return el\n}\n\nexport function child(parent: Element, name: string, props?: any): SVGElement {\n    const el = elt(name, props)\n    parent.appendChild(el)\n    return el\n}\n"],"names":["VMFunctions","id","args","prompt","context","parseIntFloat","exprVisitor","parent","current","structVisit","Array","isArray","forEach","c","Object","keys","key","SpecSymbolResolver","spec","role2spec","error","reset","registers","events","roles","check","e","type","specResolve","ret","undefined","role","shortName","client","rest","object","obj","name","startsWith","property","indexOf","push","destructAccessPath","expectIdentifier","lookupEvent","resolve","_","packets","filter","pkt","kind","find","p","ev","lookupRegister","root","fld","lookupRegisterRaw","reg","getRegister","isBoolOrNumericFormat","packFormat","lookupReplace","child","replace","lookup","i","callee","k","val","lit","value","raw","toString","length","fields","f","VMChecker","resolver","supportedExpression","checkCommand","funs","cmdIndex","findIndex","r","theCommand","command","commands","processSpecCommandFunction","processTestFunction","arguments","arg","visitReplace","minArgs","argsRequiredOptional","maxArgs","newExpressions","def","concat","processTestArguments","optional","a","eventSymTable","argType","message","elements","member","computed","fmt","test","isRegister","lookupField","field","Error","serviceSpecificationFromClassIdentifier","serviceSpecificationFromName","assert","toIdentifier","toMemberExpression","handlerVisitor","handler","visitITE","visitCommand","visitBase","base","ite","else","then","compileProgram","serverRoles","handlers","newProgram","startBlock","map","h","removeIfThenElse","errors","checkCall","cmd","cid","shift","newSequence","labels","labelId","time","end","expr","pop","getServiceFromRole","info","roleFound","pair","serviceClass","checkProgram","prog","allErrors","goodHandlers","errorFun","sourceId","symbolResolver","checker","errorCount","s","split","register","event","VM_WATCH_CHANGE","VM_BREAKPOINT","VM_COMMAND_FAILED","VM_ROLE_MISSING","VM_GLOBAL_CHANGE","VM_GLOBAL_TYPE_MISMATCH","VM_INTERNAL_ERROR","VM_LOG_ENTRY","BOUND","CHANGE","DEVICE_ANNOUNCE","DEVICE_DISCONNECT","ROLE_BOUND","ROLE_UNBOUND","UNBOUND","JDClient","RoleManager","bus","_roles","mount","subscribe","addServices","bind","removeServices","bindServices","bound","service","slice","saveRoles","serviceId","updateRoles","newRoles","oldBound","isBound","oldHash","hash","supportedNewRoles","preferreds","Set","preferredDeviceId","preferredServiceIndex","has","add","splice","emit","newRole","existingRole","bindingChanged","otherBinding","device","deviceId","isNaN","serviceIndex","changed","emitBoundEvents","updateRole","binding","other","bindRole","unboundServices","services","ignoreInfrastructure","boundServices","srv","theOne","newOne","sort","l","localeCompare","dev","selfDevice","join","every","JSON","stringify","startRoles","bindings","onUpdate","options","incomplete","roleManager","update","unsubscribe","useContext","useMemo","JacdacContext","useRoleManager","visitWorkspace","collectWarnings","workspace","warnings","visitBlock","b","warning","identityTransformData","resolveBlockDefinition","resolveBlockServices","PROGRESS_DELAY","registerDataSolver","block","jacdacServices","transformData","applyTransform","isEnabled","isInFlyout","nextServices","nextConnection","targetBlock","setDataWarning","newData","data","progressid","setTimeout","clearTimeout","transformedData","passthroughData","console","debug","on","Blockly","useCallback","useWorkspaceEvent","useBlocklyEvents","handleChange","Events","BLOCK_CHANGE","change","getBlockById","blockId","twinInput","inputList","twinField","fieldRow","emitChange","ContextMenuRegistry","useEffect","DisableTopBlocks","useBlocklyPlugins","registry","getItem","unregister","addChangeListener","disableOrphans","disableTopBlocksPlugin","init","removeChangeListener","useState","useEffectAsync","useAsyncMemo","factory","deps","setValue","mounted","v","arrayConcatMany","useServices","Flags","useTheme","registerFields","visitToolbox","addDataPreviewField","BlockSvg","prototype","setHighlighted","highlighted","rendered","addSelect","removeSelect","loadBlocks","dsls","theme","blocks","dsl","dslBlocks","createBlocks","Blocks","jacdacDefinition","jsonInit","patchCategoryJSONtoXML","cat","contents","node","exists","diagnostics","warn","values","blockxml","shadow","useToolbox","source","liveServices","specification","toolboxConfiguration","dslsCategories","createCategory","order","useToolboxButtons","buttons","visitButton","btn","button","registerButtonCallback","callbackKey","callback","removeButtonCallback","Xml","React","createContext","toMap","useLocalStorage","workspaceToJSON","JSON_WARNINGS_CATEGORY","NEW_PROJET_XML","WORKSPACE_FILENAME","BlockServices","resolveWorkspaceServices","WorkspaceServices","AppContext","useChange","FileSystemContext","resolveBlockWarnings","useWindowEvent","AllOptions","toServiceName","toServiceType","BlockContext","editorId","setEditorId","workspaceXml","workspaceJSON","dragging","setWarnings","setWorkspace","setWorkspaceXml","displayName","DEFAULT_XML","BlockProvider","props","storageKey","children","onBeforeSaveWorkspaceFile","setError","fileSystem","workspaceDirectory","workingDirectory","workspaceFile","file","create","storedXml","setStoredXml","_setWorkspaceXml","setWorkspaceJSON","_setWarnings","setDragging","xml","category","entries","w","loadWorkspaceFile","editor","dom","textToDom","clear","domToWorkspace","initializeBlockServices","initialized","notifyServicesChanged","handleBlockChange","clearData","handleWorkspaceEvent","workspaceId","BLOCK_DRAG","dragEvent","isStart","FINISHED_LOADING","getAllBlocks","BLOCK_CREATE","bev","BLOCK_MOVE","cev","parentId","newParentId","unmounnts","u","wws","newWorkspaceJSON","newWarnings","text","textAsync","json","parse","onSave","fileContent","write","setWarningText","createWorkspaceChangeListener","backgroundRefreshRegisters","createVariable","msg","action","Grid","Typography","CodeBlock","BlockDiagnostics","Dialog","DialogActions","DialogContent","DialogContentText","TextField","Button","useRef","useId","BlocklyModalDialogs","dialogType","setDialogType","setMessage","valueId","showDialog","previous","alert","confirm","cb","defaultValue","handleCloseConfirm","handleCancel","handleOk","handleValueChange","target","utils","TOOLBOX_AT_LEFT","Scrollbar","ComponentManager","ReactDOM","svgPointerPoint","MINI_RADIUS","MARGIN_VERTICAL_","MARGIN_HORIZONTAL_","MIN_SCALE","MAX_WIDTH","MAX_HEIGHT","MiniBlock","x","y","width","height","color","MiniViewport","view","top","left","palette","vx","vy","primary","grey","BlockMiniMap","onSizeUpdate","svgRef","metrics","setMetrics","setView","handleMetrics","metricsManager","getMetricsManager","getViewMetrics","getContentMetrics","scroll","getScrollMetrics","tops","getTopBlocks","childBlocks_","rect","getBoundingRectangle","getColour","handleView","BLOCK_DELETE","VIEWPORT_CHANGE","handleCenterView","preventDefault","stopPropagation","pos","halfViewWidth","halfViewHeight","scrollToCenterX","scrollToCenterY","cleft","ctop","cwidth","cheight","right","bottom","MinimapPlugin","workspace_","top_","left_","width_","height_","scale_","componentManager","getComponentManager","addComponent","component","weight","capabilities","Capability","POSITIONABLE","createDom_","resize","svgGroup_","createSvgElement","Svg","G","class","insertAfter","getBubbleCanvas","render","handleSizeUpdate","position","hasVerticalScrollbars","scrollbar","canScrollHorizontally","toolboxMetrics","horizontalLayout","RTL","absoluteMetrics","viewMetrics","scrollbarThickness","positionSvgGroup","setAttribute","Rect","Math","min","dw","useBlockMinimap","getParser","Alert","AlertTitle","BrowserCompatibilityAlert","label","compatible","window","browser","navigator","userAgent","satisfies","styled","useBlocklyWorkspace","Theme","DarkTheme","DarkModeContext","clsx","withPrefix","UIFlags","PREFIX","classes","Root","hosted","fontFamily","typography","fontWeight","opacity","cursor","fill","SuspendedBlockEditor","className","darkMode","blocklyRef","ref","workspaceConfiguration","collapse","disable","comments","css","trashcan","sounds","renderer","oneBasedIndex","move","scrollbars","vertical","horizontal","media","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","pinch","initialXml","onImportXmlError","ResizeObserver","observer","observe","disconnect","chrome","edge","firefox","BlockEditor","ScatterPlotField","DATA_SCIENCE_STATEMENT_TYPE","DataColumnChooserField","LinePlotField","BarChartField","HistogramField","DataTableField","paletteColorByIndex","BoxPlotField","VegaChartField","tidyHeaders","tidyResolveFieldColumn","JSONSettingsField","HeatMapPlotField","SCATTERPLOT_BLOCK","LINEPLOT_BLOCK","HEATMAP_BLOCK","BARCHART_BLOCK","HISTOGRAM_BLOCK","BOX_PLOT_BLOCK","CHART_SHOW_TABLE_BLOCK","VEGA_LAYER_BLOCK","VEGA_ENCODING_BLOCK","VEGA_STATEMENT_TYPE","chartSettingsSchema","properties","title","axisSchema","scaleSchema","domainMin","description","domainMax","encodingSettingsSchema","axis","encodingNumberSettingsSchema","scale","char2DSettingsSchema","encoding","charMapSettingsSchema","index","colour","chartDsl","tooltip","message0","args0","KEY","selectColumns","previousStatement","nextStatement","template","inputsInline","dataPreviewField","dataType","schema","parentData","blockToVisualizationSpec","sourceBlock","headers","types","mark","getFieldValue","getInputTargetBlock","channel","fieldType","getNextBlock","resolveDsl","dslName","fieldShadows","fieldsDsl","dashify","humanify","isNumericType","BuzzerCmd","JoystickReg","ServoReg","SRV_BOOTLOADER","SRV_BUZZER","SRV_CONTROL","SRV_JOYSTICK","SRV_LOGGER","SRV_PROTO_TEST","SRV_ROLE_MANAGER","SRV_SERVO","SystemReg","isHighLevelEvent","isHighLevelRegister","isCommand","isSensor","serviceSpecifications","splitFilter","uniqueMap","NoteField","ServoAngleField","BOOLEAN_TYPE","CODE_STATEMENT_TYPE","JSON_TYPE","NUMBER_TYPE","STRING_TYPE","makeVMBase","Variables","SET_STATUS_LIGHT_BLOCK","ROLE_BOUND_EVENT_BLOCK","ROLE_BOUND_BLOCK","isBooleanField","isStringField","toBlocklyType","enumInfo","enums","ignoredServices","customMessages","Direction","get","customShadows","identifier","Angle","SHADOW","PlayNote","lookupCustomShadow","cs","classIdentifier","fieldsSupported","fieldName","fieldToShadow","unit","typicalMin","absoluteMin","max","typicalMax","absoluteMax","variableName","camelName","toLowerCase","isEnabledRegister","customMessage","m","eventFieldGroups","output","instanceName","shortId","toRoleType","parseRoleType","parseInt","fieldsToFieldInputs","fieldsToValues","fieldsToMessage","serviceHelp","sensorColor","otherColor","createServiceColor","serviceColor","roleVariable","variable","variableTypes","defaultType","getServiceInfo","allServices","supportedServices","status","registerSimples","registerComposites","registerSimpleTypes","registerSimpleOthers","registerSimpleEnumTypes","einfo","registerCompositeEnumTypes","kv","lowLevel","ServicesBaseDSL","_serviceBlocks","_eventFieldBlocks","makeRegisterSimpleGetBlocks","helpUrl","makeRegisterSetBlocks","makeRegisterChangeByEventBlocks","some","Intensity","makeRegisterNumericsGetBlocks","re","makeRegisterEnumGetBlocks","members","makeFieldBlocks","sps","worker","sp","createCategoryHelper","blockServices","variables","vt","usedEvents","definition","eventName","inputs","jdBlocks","toolboxServices","getFieldBlocks","fieldBlocks","makeCategory","isClient","serviceBlocks","eventFieldBLocks","createVariableButtonHandler","eventFieldBlocks","serviceClient","sc","compileEventToVM","makeAwaitEvent","expression","blockToExpression","compileExpressionToVM","eventInfo","compileCommandToVM","exprsErrors","flatMap","serviceCommand","log","workerProxy","downloadCSV","url","res","postMessage","saveCSV","fileHandle","unparseCSV","resp","parseCSV","visitor","input","visitInput","visitField","FieldDropdown","builtins","cereal","penguins","BuiltinDataSetField","fromJson","updateData","getValue","getSourceBlock","marker","isInsertionMarker","cache","setSourceBlock","doValueUpdate_","newValue","lazy","ReactField","Suspense","DataTablePreviewWidget","DataPreviewField","validator","compare","initCustomView","group","fieldGroup_","classList","getText_","renderField","preview","lastIndexOf","substr","identity","ReactInlineField","DataTableWidget","SMALL_TABLE_HEIGHT","MAX_ITEMS","EDITABLE","transformed","small","createContainer","document","createElement","style","display","minWidth","maxWidth","maxHeight","renderInlineField","tableHeight","WorkspaceContext","useBlockData","TABLE_HEIGHT","TABLE_WIDTH","PointerBoundary","CopyButton","roundWithPrecision","tidyResolveHeader","empty","table","background","paddingLeft","paddingRight","borderRadius","marginTop","overflow","margin","fontSize","lineHeight","backgroundClip","scrollSnapAlign","borderColor","borderRightStyle","maxItems","selectedColumns","n","columns","renderCell","handleCopy","FileOpenField","SERIALIZABLE","fromXml","fieldElement","textContent","getOptions","resolveFiles","doClassValidation_","parseSource","dispose","unmount","directory","files","filename","csv","_data","value_","wsServices","_unmount","Field","FileSaveField","fileType","showEditor_","openFileHandle","accept","excludeAcceptAllOption","showSaveFilePicker","tidyFindLastValue","tidy","tidyMin","tidyMax","summarize","GaugeWidget","GaugeWidgetView","Number","step","ceil","abs","precision","log10","GaugeWidgetField","IFrameDataChooserField","dataId","NoServiceAlert","JDomServiceTreeView","JDomTreeWidget","twinService","flyout","onPointerStopPropagation","JDomTreeField","UNMOUNT","JSONSchemaForm","JSONSettingsWidget","editValue","setEditValue","minHeight","padding","renderKeyboardKey","KeyboardKeyInput","KeyboardKeyField","selector","modifiers","newSelector","newModifiers","toShadowDefinition","rgbToHtmlColor","ValueContext","LEDWidget","LEDColorFieldWidget","onValueChange","LEDColorField","size_","cx","cy","strokeWidth","stroke","updateView","circle","ReactImageField","setSize","Size","img","imgUri","renderValue","setAttributeNS","getText","alt","fromHex","toHex","VALUE_CHANGE","LEDMatrixWidget","LEDMatrixField","rows","leds","columnspadded","ledsBytes","cvs","pw","ph","ctx","getContext","fillStyle","fillRect","bitindex","byte","bit","dataUri","toDataURL","onChange","newLeds","Uint8Array","LogViewWidget","LogViewField","AddIcon","startServiceProviderFromServiceClass","roleServiceClass","handleStartSimulator","createToneContext","PianoWidget","handlePlayTone","newFrequency","toneContext","playTone","JacdacProvider","IdProvider","DarkModeProvider","AppTheme","Box","ValueProvider","JDEventSource","WorkspaceProvider","WebAudioProvider","ReactFieldBase","SOURCE_BLOCK_CHANGE","MOUNT","toXml","sourceBlock_","bs","initView","updateSize_","div_","DropDownDiv","getContentDiv","border","getColourTertiary","setColour","showPositionedByField","dropdownDispose_","hide","hideIfOwner","unmountComponentAtNode","size","fo","container","appendChild","resizeObserver","entry","contentRect","forceRerender","fire","renderBlock","bindEvents_","Tooltip","bindMouseEvents","getClickTarget_","Slider","FieldWithSlider","nv","round","SliderField","renderWidget","ServoWidget","ServiceFieldWidget","TwinWidget","TwinField","UseModelField","_models","populateModels","model","getModel","selectedModel","initialValue","onFieldValueChange","VariablesWidget","runner","setVariables","globals","VariablesField","SwitchWithLabel","HORIZON","WatchValueWidget","setData","lookupWatch","watchSourceId","timestamp","valueNumber","paper","WatchValueField","VegaLiteWidget","BAR_CORNER_RADIUS","BAR_MAX_ITEMS","BarWidget","sliceOptions","sliceMax","cornerRadius","BarField","BoxPlotWidget","zero","LINE_MAX_ITEMS","HeatMapWidget","sliceHead","HistogramWidget","bin","aggregate","LinePlotWidget","ys","timeSeries","layer","point","filled","SCATTER_MAX_ITEMS","ScatterPlotWidget","linearRegression","sliceSample","slope","intercept","transform","regression","VegaChartWidget","WORKSPACE_CHANGE","NoSsr","CHART_HEIGHT","CHART_SVG_MAX_ITEMS","CHART_WIDTH","tidySlice","JSONTryParse","IconButtonWithTooltip","SaveAltIcon","VegaLite","clone","isKV","jsonMergeFrom","trg","src","vegaData","setVegaData","viewRef","settings","handleNewView","fullSpec","clip","strokeDash","sliced","canvas","toCanvas","handleExport","vega","dataset","vegaDataset","showToolbar","ExpandModelBlockField","DataSetBlockField","DataSetBlockButton","RecordingBlockField","NeuralNetworkBlockField","NeuralNetworkBlockButton","ConvLayerBlockField","PoolingLayerBlockField","DropoutLayerBlockField","FlattenLayerBlockField","DenseLayerBlockField","TrainedModelBlockField","reactFieldShadows","registerType","fieldRegistry","fieldTypes","MenuItem","Select","fieldContainer","spacing","LayerParameterWidget","initFieldValue","percentSize","percentParams","outputShape","runTimeInMs","numFilters","kernelSize","strideSize","activation","updateParameters","updatedValue","expandField","getField","updateFieldValue","handleChangedFilters","valueAsNumber","handleChangedKernelSize","handleChangedStrides","handleChangedActivation","toPrecision","previousValue","ViewIcon","DownloadIcon","DataSetButtonWidget","handleViewDataSet","handleDownloadDataSet","DataSetBlockButtons","DataSetParameterWidget","inputClasses","inputTypes","setBlockData","totalRecordings","numRecordings","numSamples","numUnits","handleChangedUnits","rate","rateAsNum","parseFloat","handleChangedRate","valueAsNum","AddCircleIcon","RemoveCircleIcon","MODEL_BLOCKS","REMOVABLE_INPUT","LAYER_INPUT","ExpandIconWidget","getCurrentValue","updateCurrentValue","paramName","paramValue","appendParamInput","appendDummyInput","appendField","getBlockFieldType","setMovable","getInput","moveInputBefore","blockType","currentValue","parametersVisible","setParametersVisible","fieldValue","paramsVisible","handleExpandBlock","parameterField","paramValues","getParentInput","removeInput","backgroundColor","updateBlockName","nameField","blockName","poolSize","AutorenewIcon","numberField","buttonContainer","marginBottom","NeuralNetworkButtonWidget","handleTrainModel","handleDownloadModel","NeuralNetworkBlockButtons","NNParameterWidget","totalLayers","totalSize","totalParams","inputShape","optimizer","setOptimizer","numEpochs","setNumEpochs","lossFn","setLossFn","handleChangedEpochs","handleChangedOptimizer","handleChangedLossFn","handleChangedPoolSize","RecordingParameterWidget","predictRequest","arraysEqual","inlineItem","overflowY","ConfusionMatrixHeatMap","DataSetPlot","TrainedModelDisplayWidget","chartProps","MARK_SIZE","TOOLTIP_NUM_FORMAT","PALETTE","chartType","setChartType","dataSet","setDataSet","setModel","trainingPredictionResult","setTrainingPredictionResult","trainTimestamp","setTrainTimestamp","Date","now","errorMsg","setErrorMsg","updatedDataSet","updatedModel","selectedChart","predictMsg","zData","xs","toJSON","result","predictions","predictTop","prediction","handleViewTrainedModel","trainedModelName","clean","o","logic_null","text_input","math_number","logic_boolean","variableToJSON","getId","fieldsToJSON","fieldToJSON","xmlToJSON","j","outerHTML","getAttributeNames","getAttribute","childNodes","nodeType","Node","TEXT_NODE","ELEMENT_NODE","isSerializable","fieldXml","flattenNext","next","blockToJSON","blockToJSONHidden","getChildren","blockToValue","element","connection","allUsedVarModels","todo","visitWorkspaceJSON","onWorkspaceJSONChange","useThrottledCallback","DEFAULT_THROTTLE","useChangeThrottled","query","version","setVersion","changeId","throttledSetVersion","useDragDebounce","valueAtDragging","setValueAtDragging","throttleTime","debounced","debouncedTransformedData","Chip","OpenInBrowserIcon","FileSystemChip","showDirectoryPicker","handleOpenDirectory","handleCloseDirectory","FileNewFileChip","newFileName","content","newFileContent","extension","open","setOpen","handleOpen","toLocaleLowerCase","createWorkingDirectory","d","fileAsync","workingFile","FileSystemNodeChip","selected","onClick","useKeyboardNavigationProps","FileTabs","hideDirectories","hideFiles","directoryFilter","fileFilter","newFileLabel","newFileExtension","directories","gridRef","keyboardProps","handleDirectorySelected","handle","handleFileSelected","keyCodeFromEvent","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","useArrowKeys","onLeft","onUp","onRight","onDown","symmetric","charCode","useKeyboardNavigation","parentRef","onMove","offset","focusable","from","querySelectorAll","me","activeElement","focus","onKeyDown","MODEL_BLOCK_CLASS_STATEMENT_TYPE","MODEL_BLOCK_LAYER_STATEMENT_TYPE","MB_DATASET_VAR_TYPE","MB_CLASS_VAR_TYPE","MB_CLASSIFIER_VAR_TYPE","dataset_color","class_color","learning_color","layer_color","ModelBlockDomainSpecificLanguage","message1","args1","message2","args2","hat","message3","args3","modelBlockDsl","createTheme","responsiveFontSizes","ThemeProvider","StyledEngineProvider","isDark","themeDef","main","secondary","contrastThreshold","mode","rawTheme","FileCopyIcon","DoneIcon","ReportProblemIcon","useMounted","delay","onCopy","copied","setCopied","handleClick","clipboard","writeText","blob","Promise","toBlob","item","ClipboardItem","disabled","BUILTIN_TYPES","processErrors","workspaceJSONToVMProgram","EmptyExpression","blockIn","blockToExpressionInner","blockToCommand","thenHandler","elseHandler","t","addCommands","exprErrors","ifThenElse","dslRes","nop","topEvent","topErrors","topMeta","meta","mkTitle","txt","elt","el","hydrate","createElementNS"],"sourceRoot":""}