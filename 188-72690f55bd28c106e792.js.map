{"version":3,"file":"188-72690f55bd28c106e792.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;CAEA;;CAEA;;CAEA;;CAEA;AACA;;AACA;AACA;AACA;AAEA,IAAMU,MAAM,GAAG,cAAf;AACA,IAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAKF,MAAL,UADQ;AAEZG,EAAAA,OAAO,EAAKH,MAAL;AAFK,CAAhB;AAIA,IAAMI,cAAc,GAAGZ,0EAAM,CAACE,kEAAD,CAAN,CAAiB;AAAA,MAAC;AAAEW,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACpD,YAAMJ,OAAO,CAACC,IAAd,GAAuB;AACnBI,MAAAA,QAAQ,EAAE;AADS,KAD6B;AAKpD,YAAML,OAAO,CAACE,OAAd,GAA0B;AACtBI,MAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,GAAd,CADU;AAEtBC,MAAAA,WAAW,EAAEJ,KAAK,CAACG,OAAN,CAAc,GAAd;AAFS;AAL0B,GAAhB;AAAA,CAAjB,CAAvB;AAWe,SAASE,YAAT,CAAsBC,KAAtB,EAAgD;AAC3D,MAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAiDF,KAAvD;AAAA,MAA6CG,KAA7C,2GAAuDH,KAAvD;;AAEA,MAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0BzB,+CAAQ,CAAWqB,eAAe,IAAI,EAA9B,CAAxC;AACA,MAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0B3B,+CAAQ,CAAWsB,eAAe,IAAI,EAA9B,CAAxC;AACA,MAAMM,OAAO,GAAGtB,sEAAU,CAAC;AAAEuB,IAAAA,oBAAoB,EAAE,CAACrB,kGAAiBsB;AAA1C,GAAD,CAA1B;;AAEA,MAAMC,YAAY,GAAG,CACjBC,KADiB,EAEjBC,OAFiB,KAGhB;AACDR,IAAAA,WAAW,CAACQ,OAAD,CAAX;AACH,GALD;;AAOA,MAAMC,YAAY,GAAG,CACjBF,KADiB,EAEjBC,OAFiB,KAGhB;AACDN,IAAAA,WAAW,CAACM,OAAD,CAAX;AACH,GALD;;AAOA,sBACI,iDAAC,cAAD;AACI,aAAS,EAAE/B,gDAAI,CAACQ,OAAO,CAACC,IAAT,EAAeD,OAAO,CAACE,OAAvB,CADnB;AAEI,uBAAmB,eAAE,iDAAC,kFAAD,OAFzB;AAGI,qBAAiB,eAAE,iDAAC,+EAAD,OAHvB;AAII,kBAAc,eAAE;AAAK,WAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT;AAAZ,MAJpB;AAKI,YAAQ,EAAEX,QALd;AAMI,YAAQ,EAAEE,QANd;AAOI,gBAAY,EAAEK,YAPlB;AAQI,gBAAY,EAAEG;AARlB,KAUKN,OAVL,aAUKA,OAVL,uBAUKA,OAAO,CAAEQ,GAAT,CAAaC,MAAM,iBAChB,iDAAC,wEAAD;AACI,OAAG,EAAEA,MAAM,CAACC,EADhB;AAEI,UAAM,EAAED,MAFZ;AAGI,YAAQ,EAAEb,QAHd;AAII,YAAQ,EAAEE;AAJd,KAKQH,KALR,EADH,CAVL,CADJ;AAsBH","sources":["webpack://jacdac-docs/./src/components/tools/JDomTreeView.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport clsx from \"clsx\"\n// tslint:disable-next-line: no-submodule-imports\nimport TreeView from \"@mui/lab/TreeView\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport useDevices from \"../hooks/useDevices\"\nimport { DeviceTreeItem, JDomTreeViewProps } from \"./JDomTreeViewItems\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nconst PREFIX = \"JDomTreeView\"\nconst classes = {\n    root: `${PREFIX}-root`,\n    margins: `${PREFIX}-margins`,\n}\nconst StyledTreeView = styled(TreeView)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        flexGrow: 1,\n    },\n\n    [`&.${classes.margins}`]: {\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n    },\n}))\n\nexport default function JDomTreeView(props: JDomTreeViewProps) {\n    const { defaultExpanded, defaultSelected, ...other } = props\n\n    const [expanded, setExpanded] = useState<string[]>(defaultExpanded || [])\n    const [selected, setSelected] = useState<string[]>(defaultSelected || [])\n    const devices = useDevices({ ignoreInfrastructure: !Flags.diagnostics })\n\n    const handleToggle = (\n        event: React.ChangeEvent<unknown>,\n        nodeIds: string[]\n    ) => {\n        setExpanded(nodeIds)\n    }\n\n    const handleSelect = (\n        event: React.ChangeEvent<unknown>,\n        nodeIds: string[]\n    ) => {\n        setSelected(nodeIds)\n    }\n\n    return (\n        <StyledTreeView\n            className={clsx(classes.root, classes.margins)}\n            defaultCollapseIcon={<ArrowDropDownIcon />}\n            defaultExpandIcon={<ArrowRightIcon />}\n            defaultEndIcon={<div style={{ width: 12 }} />}\n            expanded={expanded}\n            selected={selected}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n        >\n            {devices?.map(device => (\n                <DeviceTreeItem\n                    key={device.id}\n                    device={device}\n                    expanded={expanded}\n                    selected={selected}\n                    {...other}\n                />\n            ))}\n        </StyledTreeView>\n    )\n}\n"],"names":["React","useState","styled","clsx","TreeView","ArrowDropDownIcon","ArrowRightIcon","useDevices","DeviceTreeItem","Flags","PREFIX","classes","root","margins","StyledTreeView","theme","flexGrow","marginLeft","spacing","marginRight","JDomTreeView","props","defaultExpanded","defaultSelected","other","expanded","setExpanded","selected","setSelected","devices","ignoreInfrastructure","diagnostics","handleToggle","event","nodeIds","handleSelect","width","map","device","id"],"sourceRoot":""}