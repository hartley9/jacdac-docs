{"version":3,"file":"3717-7a0d4a79b28d6419cfb8.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardBrailleDisplay.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\"\nimport { BrailleDisplayReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport { Grid, TextField } from \"@material-ui/core\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\nimport CmdButton from \"../CmdButton\"\nimport ClearIcon from \"@material-ui/icons/Clear\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport CharacterScreenWidget from \"../widgets/CharacterScreenWidget\"\nimport { useId } from \"react-use-id-hook\"\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\"\n\n// https://en.wikipedia.org/wiki/Braille_ASCII\nconst BRAILE_CHARACTERS = {\n    \" \": \"⠀\", // space bar to dot-0\n    \"-\": \"⠤\",\n    \",\": \"⠠\",\n    \";\": \"⠰\",\n    \":\": \"⠱\",\n    \"!\": \"⠮\",\n    \"?\": \"⠹\",\n    \".\": \"⠨\",\n    \"(\": \"⠷\",\n    \"[\": \"⠪\",\n    \"@\": \"⠈\",\n    \"*\": \"⠡\",\n    \"/\": \"⠌\",\n    \"'\": \"⠄\",\n    '\"': \"⠐\",\n    \"\\\\\": \"⠳\",\n    \"&\": \"⠯\",\n    \"%\": \"⠩\",\n    \"^\": \"⠘\",\n    \"+\": \"⠬\",\n    \"<\": \"⠣\",\n    \">\": \"⠜\",\n    $: \"⠫\",\n    \"0\": \"⠴\",\n    \"1\": \"⠂\",\n    \"2\": \"⠆\",\n    \"3\": \"⠒\",\n    \"4\": \"⠲\",\n    \"5\": \"⠢\",\n    \"6\": \"⠖\",\n    \"7\": \"⠶\",\n    \"8\": \"⠦\",\n    \"9\": \"⠔\",\n    A: \"⠁\",\n    B: \"⠃\",\n    C: \"⠉\",\n    D: \"⠙\",\n    E: \"⠑\",\n    F: \"⠋\",\n    G: \"⠛\",\n    H: \"⠓\",\n    I: \"⠊\",\n    J: \"⠚\",\n    K: \"⠅\",\n    L: \"⠇\",\n    M: \"⠍\",\n    N: \"⠝\",\n    O: \"⠕\",\n    P: \"⠏\",\n    Q: \"⠟\",\n    R: \"⠗\",\n    S: \"⠎\",\n    T: \"⠞\",\n    U: \"⠥\",\n    V: \"⠧\",\n    W: \"⠺\",\n    X: \"⠭\",\n    Z: \"⠵\",\n    \"]\": \"⠻\",\n    \"#\": \"⠼\",\n    Y: \"⠽\",\n    \")\": \"⠾\",\n    \"=\": \"⠿\",\n    _: \"⠸\",\n}\nfunction brailify(s: string) {\n    if (!s) return s\n    let r = \"\"\n    const su = s.toLocaleUpperCase()\n    for (let i = 0; i < su.length; ++i) {\n        const c = su.charCodeAt(i)\n        if (c >= 0x2800 && c <= 0x28ff) r += String.fromCharCode(c)\n        else r += BRAILE_CHARACTERS[su.charAt(i)] || \"\"\n    }\n    return r\n}\n\nexport default function DashboardBrailleDisplay(props: DashboardServiceProps) {\n    const { service } = props\n    const textId = useId()\n\n    const patternsRegister = useRegister(service, BrailleDisplayReg.Patterns)\n    const lengthRegister = useRegister(service, BrailleDisplayReg.Length)\n    const enabledRegister = useRegister(service, BrailleDisplayReg.Enabled)\n    const [patterns] = useRegisterUnpackedValue<[string]>(\n        patternsRegister,\n        props\n    )\n    const enabled = useRegisterBoolValue(enabledRegister, props)\n    const [length] = useRegisterUnpackedValue<[number]>(lengthRegister, props)\n\n    const [edit, setEdit] = useState(false)\n    const [fieldMessage, setFieldMessage] = useState(patterns)\n    const handleFieldMessageChange = async (\n        ev: ChangeEvent<HTMLTextAreaElement>\n    ) => {\n        const text = ev.target.value\n        const brailled = brailify(text)\n        console.log({ text, brailled })\n        setFieldMessage(brailled)\n        await patternsRegister.sendSetStringAsync(brailled, true)\n    }\n    const handleEdit = () => setEdit(e => !e)\n    const handleClear = async () => {\n        setFieldMessage(\"\")\n        await patternsRegister.sendSetStringAsync(\"\", true)\n    }\n    const handleEnabled = async () =>\n        enabledRegister.sendSetBoolAsync(!enabled, true)\n    // set first value of message\n    useEffect(() => {\n        if (!fieldMessage && patterns) setFieldMessage(patterns)\n    }, [patterns])\n\n    if (length === undefined) return <LoadingProgress /> // size unknown\n\n    return (\n        <Grid container spacing={1}>\n            {edit && (\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs>\n                            <TextField\n                                id={textId}\n                                label=\"text\"\n                                helperText=\"Unicode Braille patterns or Braille ASCII\"\n                                aria-label=\"text field to enter Braille unicode pattersn or Braille ASCII\"\n                                value={fieldMessage}\n                                onChange={handleFieldMessageChange}\n                                multiline={false}\n                                fullWidth={true}\n                                disabled={!enabled}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <CmdButton\n                                title=\"clear the entire display\"\n                                onClick={handleClear}\n                                icon={<ClearIcon />}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n            <Grid item xs>\n                <CharacterScreenWidget\n                    rows={1}\n                    columns={length}\n                    message={patterns}\n                    disabled={!enabled}\n                />\n            </Grid>\n            <Grid item>\n                <CmdButton\n                    title={enabled ? \"disable display\" : \"enable display\"}\n                    onClick={handleEnabled}\n                    color={enabled ? \"primary\" : undefined}\n                    icon={<PowerSettingsNewIcon />}\n                />\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip\n                    title={!edit ? \"show editor\" : \"hide editor\"}\n                    onClick={handleEdit}\n                >\n                    <EditIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["React","useEffect","useState","BrailleDisplayReg","useRegisterBoolValue","useRegisterUnpackedValue","Grid","TextField","LoadingProgress","useRegister","CmdButton","ClearIcon","EditIcon","IconButtonWithTooltip","CharacterScreenWidget","useId","PowerSettingsNewIcon","BRAILE_CHARACTERS","$","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Z","Y","_","brailify","s","r","su","toLocaleUpperCase","i","length","c","charCodeAt","String","fromCharCode","charAt","DashboardBrailleDisplay","props","service","textId","patternsRegister","Patterns","lengthRegister","Length","enabledRegister","Enabled","patterns","enabled","edit","setEdit","fieldMessage","setFieldMessage","handleFieldMessageChange","ev","text","target","value","brailled","console","log","sendSetStringAsync","handleEdit","e","handleClear","handleEnabled","sendSetBoolAsync","undefined"],"sourceRoot":""}