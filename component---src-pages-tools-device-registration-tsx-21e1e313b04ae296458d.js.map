{"version":3,"file":"component---src-pages-tools-device-registration-tsx-21e1e313b04ae296458d.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./src/components/AddServiceIconButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/useBlobCanvas.ts","webpack://jacdac-docs/./src/components/ui/ImageImportCanvas.tsx","webpack://jacdac-docs/./src/pages/tools/device-registration.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import React, { useMemo, useState } from \"react\"\nimport { Menu, MenuItem, Typography } from \"@mui/material\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function AddServiceIconButton(props: {\n    onAdd: (service: jdspec.ServiceSpec) => void\n    serviceFilter?: (service: jdspec.ServiceSpec) => boolean\n    error?: string\n    children?: JSX.Element | JSX.Element[]\n}) {\n    const { error, onAdd, children, serviceFilter } = props\n    const [servicesAnchorEl, setServicesAnchorEl] =\n        useState<null | HTMLElement>(null)\n    const servicesMenuId = useId()\n    const services = useMemo(\n        () =>\n            serviceSpecifications()\n                .filter(srv => !isInfrastructure(srv))\n                .filter(srv => !serviceFilter || serviceFilter(srv)),\n        [serviceFilter]\n    )\n\n    const handleServiceAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setServicesAnchorEl(event.currentTarget)\n    }\n    const handleServiceAddClose = (id: number) => () => {\n        setServicesAnchorEl(null)\n        if (id !== undefined) {\n            const srv = serviceSpecificationFromClassIdentifier(id)\n            onAdd(srv)\n        }\n    }\n\n    return (\n        <>\n            <IconButtonWithTooltip\n                title=\"Add a service\"\n                aria-controls={servicesMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleServiceAddClick}\n            >\n                {children || <AddIcon />}\n            </IconButtonWithTooltip>\n            <Menu\n                id={servicesMenuId}\n                anchorEl={servicesAnchorEl}\n                keepMounted\n                open={Boolean(servicesAnchorEl)}\n                onClose={handleServiceAddClose(undefined)}\n            >\n                {services.map(srv => (\n                    <MenuItem\n                        key={srv.classIdentifier}\n                        value={srv.classIdentifier.toString(16)}\n                        onClick={handleServiceAddClose(srv.classIdentifier)}\n                    >\n                        {srv.name}\n                    </MenuItem>\n                ))}\n            </Menu>\n            <Typography\n                variant=\"caption\"\n                color={error ? \"error\" : \"inherit\"}\n                component=\"div\"\n            >\n                {error || \"Select one or more services.\"}\n            </Typography>\n        </>\n    )\n}\n","import React from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import {\n    ControlReg,\n    JD_SERVICE_INDEX_CTRL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Grid, Typography } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useChange from \"../../jacdac/useChange\"\nimport useRegister from \"../hooks/useRegister\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const control = useChange(device, _ => _?.service(JD_SERVICE_INDEX_CTRL))\n    const productIdentifierRegister = useRegister(\n        control,\n        ControlReg.ProductIdentifier\n    )\n    const [productIdentifier] = useRegisterUnpackedValue<[number]>(\n        productIdentifierRegister\n    )\n    const firmwareVersionRegister = useRegister(\n        control,\n        ControlReg.FirmwareVersion\n    )\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n    if (firmwareVersion == undefined) return null\n\n    const firmwareName =\n        !!productIdentifier &&\n        specification?.firmwares?.find(\n            fw => fw.productIdentifier === productIdentifier\n        )?.name\n\n    return (\n        <Chip\n            size=\"small\"\n            label={[firmwareName, firmwareVersion].filter(f => !!f).join(\" \")}\n        />\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.McuTemperature)\n    )\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    if (isNaN(temperature)) return null\n    return <Chip size=\"small\" label={`${temperature}°`} />\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        underline=\"hover\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Typography variant=\"caption\" gutterBottom>\n                                {[\n                                    specification?.name,\n                                    showDeviceId && device.deviceId,\n                                ]\n                                    .filter(s => !!s)\n                                    .join(\", \")}\n                            </Typography>\n                        </Grid>\n                        {showFirmware && (\n                            <Grid item>\n                                <DeviceFirmwareVersionChip device={device} />\n                            </Grid>\n                        )}\n                        {showTemperature && (\n                            <Grid item>\n                                <DeviceTemperatureChip device={device} />\n                            </Grid>\n                        )}\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","import { DependencyList, useEffect } from \"react\"\n\ntype RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n    timeout: number\n}\ntype RequestIdleCallbackDeadline = {\n    readonly didTimeout: boolean\n    timeRemaining: () => number\n}\n\ndeclare global {\n    interface Window {\n        requestIdleCallback: (\n            callback: (deadline: RequestIdleCallbackDeadline) => void,\n            opts?: RequestIdleCallbackOptions\n        ) => RequestIdleCallbackHandle\n        cancelIdleCallback: (handle: RequestIdleCallbackHandle) => void\n    }\n}\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { fetchLatestFirmwareRelease, fetchFirmwareReleaseBinary } from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\nimport useMounted from \"../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { trackEvent } = useAnalytics()\n    const [throttled, setThrottled] = useState(false)\n    const mounted = useMounted()\n    const firmwares = db?.firmwares\n    const specifications = useDeviceSpecifications()\n\n    const loadFirmwares = useCallback(async () => {\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const slugs = unique(\n            specifications\n                .filter(spec => !!spec?.productIdentifiers?.length) // needs some product identifiers\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substr(\"https://github.com/\".length))\n        )\n        console.debug(`firmware: found ${slugs.join(\", \")}`)\n        for (const slug of slugs) {\n            const fw = await firmwares.get(slug)\n            if (fw) {\n                const { time } = fw\n                const age = Date.now() - time\n                console.debug(`firmware: ${slug} age ${prettyDuration(age)}`)\n                if (age < 3600_000) {\n                    console.debug(`firmware: skipping fresh firmware ${slug}`)\n                    continue\n                }\n            }\n            console.debug(`firmware: fetch latest release of ${slug}`)\n            const { status, release } = await fetchLatestFirmwareRelease(slug, {\n                ignoreThrottled: true,\n            })\n            trackEvent(\"github.fetch\", { status, slug })\n            if (status === 403) {\n                trackEvent(\"github.fetch.throttled\", { repo: slug })\n                if (mounted()) setThrottled(true)\n            }\n            if (!release?.version) {\n                trackEvent(\"github.fetch.notfound\", { repo: slug })\n                console.warn(`firmware: release not found`)\n                return\n            }\n            setThrottled(false)\n            console.log(\n                `firmware: fetch binary release ${slug} ${release.version}`\n            )\n            const firmware = await fetchFirmwareReleaseBinary(\n                slug,\n                release.version\n            )\n            if (firmware) {\n                console.debug(\n                    `firmware: binary release ${slug} ${release.version} downloaded`\n                )\n                firmwares.set(slug, { time: Date.now(), firmware })\n            }\n            // throttle github queries\n            await bus.delay(5000)\n        }\n    }, [db, firmwares, throttled])\n    // reload firmwares\n    useIdleCallback(loadFirmwares, 5000, [db, firmwares])\n    // update bus with info on changes\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            const names = await fw?.list()\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const { firmware } = (await fw.get(name)) || {}\n                    if (firmware) {\n                        const uf2Blobs = await parseFirmwareFile(firmware, name)\n                        uf2Blobs?.forEach(uf2Blob => {\n                            uf2s.push(uf2Blob)\n                        })\n                    }\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return { throttled }\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug?.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const { firmware } = (await firmwares?.get(repoSlug)) || {}\n            if (!firmware) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(firmware, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        if (!f) await firmwares?.set(repoSlug, undefined)\n        else await firmwares?.set(repoSlug, { time: Date.now(), firmware: f })\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nexport interface GithubRelease {\n    url: string\n    tag_name: string\n    name: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    if (!slug) return {}\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchFirmwareReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(path ? `${ROOT}${path}` : undefined)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = repoPath ? `repos/${repoPath}` : undefined\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}/releases/latest`\n    const res = useFetchApi<GithubRelease>(path)\n    return res\n}\n\nexport function useLatestReleaseAsset(url: string) {\n    const [, slug, filename] =\n        /^https:\\/\\/github.com\\/(.+)\\/releases\\/latest\\/download\\/(.+)$/i.exec(\n            url\n        ) || []\n    //console.log(`asset slug`, { url, slug })\n    if (!slug) return { status: 404 }\n    const { status, response } = useLatestRelease(slug)\n    if (status === 200 && response) {\n        const { tag_name, name } = response\n        return {\n            name,\n            version: tag_name,\n            assertUrl: `https://github.com/${slug}/releases/download/${tag_name}/${filename}`,\n        }\n    } else return {}\n}\n\nexport function useLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    const resp = useLatestFirmwareReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestFirmwareReleases(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m =\n        /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n            v\n        )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { BoxProps, Paper } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding = 1, elevation = 1, bgcolor, ...others } = props\n    return (\n        <Paper\n            sx={{ mb: 1, bgcolor, p: padding, ...others }}\n            square\n            elevation={elevation}\n        >\n            {children}\n        </Paper>\n    )\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nfunction readBlobToCanvas(\n    blob: Blob,\n    width: number,\n    height: number\n): Promise<HTMLCanvasElement> {\n    return new Promise((resolve, reject) => {\n        const url = URL.createObjectURL(blob)\n        const img = new Image()\n        img.onload = () => {\n            URL.revokeObjectURL(url)\n\n            const cvs = document.createElement(\"canvas\")\n            cvs.width = width\n            cvs.height = height\n            const ctx = cvs.getContext(\"2d\")\n\n            // compute center of image to be copied into canvas\n            const cw = cvs.width\n            const ch = cvs.height\n            const car = cw / ch\n            const iw = img.width\n            const ih = img.height\n            const iar = iw / ih\n            let sx = 0,\n                sy = 0,\n                sw = iw,\n                sh = ih\n\n            //console.log(`image (${iw}x${ih}:${iar}), target (${cw}x${ch}:${car})`)\n            if (iar > car) {\n                const dw = iw * (1 - car / iar)\n                sx = dw >> 1\n                sw = iw - dw\n                //console.log({ dw, sx, sw })\n            } else if (iar < car) {\n                // klip top\n                const dh = ih * (1 - iar / car)\n                sy = dh >> 1\n                sh = ih - dh\n                //console.log({ dh, sy, sh })\n            }\n            //console.log({ sx, sy, sw, sh, cw, ch })\n            ctx.drawImage(img, sx, sy, sw, sh, 0, 0, cw, ch)\n\n            // done\n            resolve(cvs)\n        }\n        img.onerror = () => {\n            // error\n            URL.revokeObjectURL(url)\n            reject(undefined)\n        }\n        img.src = url\n    })\n}\n\nexport default function useBlobCanvas(\n    blob: Blob,\n    width: number,\n    height: number\n) {\n    const [canvas, setCanvas] = useState<HTMLCanvasElement>(undefined)\n    useEffectAsync(async () => {\n        if (!blob) setCanvas(undefined)\n        else {\n            try {\n                const cvs = await readBlobToCanvas(blob, width, height)\n                setCanvas(cvs)\n            } catch (e) {\n                setCanvas(undefined)\n            }\n        }\n    }, [blob, width, height])\n    return canvas\n}\n","import React, { lazy, useEffect, useMemo, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box } from \"@mui/material\"\nimport { Skeleton } from \"@mui/material\"\nimport useBlobCanvas from \"../useBlobCanvas\"\n\nimport Suspense from \"./Suspense\"\nconst PREFIX = \"ImageImportCanvas\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    img: `${PREFIX}-img`,\n    btn: `${PREFIX}-btn`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        position: \"relative\",\n    },\n\n    [`& .${classes.img}`]: {\n        margin: \"auto\",\n        display: \"block\",\n        width: \"100%\",\n    },\n\n    [`& .${classes.btn}`]: {\n        position: \"absolute\",\n        borderRadius: \"6rem\",\n        left: \"calc(50% - 2rem)\",\n        top: \"calc(50% - 2rem)\",\n        background: theme.palette.background.paper,\n    },\n}))\n\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nexport default function ImportImageCanvas(props: {\n    width: number\n    height: number\n    onImageImported?: (cvs: HTMLCanvasElement) => void\n}) {\n    const { width, height, onImageImported } = props\n    const [imageBlob, setImageBlob] = useState<Blob>(undefined)\n    const canvas = useBlobCanvas(imageBlob, width, height)\n    const canvasUrl = useMemo(() => canvas?.toDataURL(\"image/png\"), [canvas])\n\n    const handleFilesUploaded = async (files: File[]) => {\n        const file = files[0]\n        setImageBlob(file)\n    }\n    // notify of new canvas\n    useEffect(() => canvas && onImageImported(canvas), [canvas])\n\n    return (\n        <Root className={classes.root}>\n            <div className={classes.img}>\n                {!canvasUrl && (\n                    <Skeleton\n                        variant=\"rectangular\"\n                        width={\"100%\"}\n                        height={\"18rem\"}\n                    />\n                )}\n                {canvasUrl && (\n                    <img\n                        alt=\"preview\"\n                        src={canvasUrl}\n                        width={\"100%\"}\n                        height={\"100%\"}\n                    />\n                )}\n            </div>\n            <Box className={classes.btn}>\n                <Suspense>\n                    <ImportButton\n                        icon={true}\n                        text=\"Import 4:3 image\"\n                        onFilesUploaded={handleFilesUploaded}\n                        acceptedFiles={[\"image/jpeg\", \"image/png\"]}\n                    />\n                </Suspense>\n            </Box>\n        </Root>\n    )\n}\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { lazy, useMemo, useState } from \"react\"\nimport { Grid, Link } from \"@mui/material\"\nimport useLocalStorage from \"../../components/hooks/useLocalStorage\"\nimport { clone, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    Box,\n    Chip,\n    Menu,\n    MenuItem,\n    TextField,\n    Typography,\n    Card,\n    CardActions,\n    Button,\n} from \"@mui/material\"\nimport { ChangeEvent } from \"react\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../../components/ui/PaperBox\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport CreateIcon from \"@mui/icons-material/Create\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport { parseRepoUrl } from \"../../components/github\"\nimport {\n    DEVICE_IMAGE_HEIGHT,\n    DEVICE_IMAGE_WIDTH,\n    generateDeviceSpecificationId,\n    normalizeDeviceSpecification,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ImportImageCanvas from \"../../components/ui/ImageImportCanvas\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Autocomplete } from \"@mui/material\"\nimport { useFirmwareBlob } from \"../../components/firmware/useFirmwareBlobs\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { useId } from \"react-use-id-hook\"\nimport AddServiceIconButton from \"../../components/AddServiceIconButton\"\nimport useDevices from \"../../components/hooks/useDevices\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport { ControlReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Alert from \"../../components/ui/Alert\"\nimport { GithubPullRequestFiles } from \"../../components/buttons/GithubPullRequestButton\"\nimport useDeviceSpecifications from \"../../components/devices/useDeviceSpecifications\"\nimport useDeviceCatalog from \"../../components/devices/useDeviceCatalog\"\n\nconst GithubPullRequestButton = lazy(\n    () => import(\"../../components/buttons/GithubPullRequestButton\")\n)\n\nfunction CompanySelect(props: {\n    error?: string\n    value?: string\n    onValueChange?: (name: string) => void\n}) {\n    const { onValueChange, value, error } = props\n    const [company, setCompany] = useState(value)\n    const specifications = useDeviceSpecifications()\n    const companies = useMemo(\n        () => unique(specifications.map(dev => dev.company)),\n        [specifications]\n    )\n    const companyId = useId()\n    const helperText =\n        \"Name of the company manufacturing this device. The company name will be used to generate the module identifier.\"\n\n    const handleChange = (ev: unknown, newValue: string) => {\n        setCompany(newValue)\n        onValueChange?.(newValue)\n    }\n    const renderInputs = params => (\n        <TextField\n            {...params}\n            error={!!error}\n            label=\"Company\"\n            helperText={error || helperText}\n            variant=\"outlined\"\n        />\n    )\n\n    return (\n        <Autocomplete\n            id={companyId}\n            freeSolo={true}\n            fullWidth={true}\n            includeInputInList\n            autoComplete\n            options={companies}\n            renderInput={renderInputs}\n            inputValue={company}\n            aria-label={helperText}\n            onInputChange={handleChange}\n        />\n    )\n}\n\nexport default function DeviceRegistration() {\n    const [device, setDevice] = useLocalStorage<jdspec.DeviceSpec>(\n        \"jacdac:devicedesigner;2\",\n        {\n            id: \"my-device\",\n            name: \"My device\",\n            services: [],\n            productIdentifiers: [],\n            repo: \"\",\n        } as jdspec.DeviceSpec\n    )\n    const gridBreakpoints = useGridBreakpoints()\n    const devices = useDevices({\n        announced: true,\n        physical: true,\n        ignoreInfrastructure: true,\n        productIdentifier: true,\n    })\n    const updateDevice = () => {\n        const dev = clone(device)\n        dev.id = generateDeviceSpecificationId(dev)\n        setDevice(dev)\n    }\n    const [firmwaresAnchorEl, setFirmwaresAnchorEl] =\n        React.useState<null | HTMLElement>(null)\n    const [imageDataURI, setImageDataURI] = useState<string>(undefined)\n    const deviceCatalog = useDeviceCatalog()\n    const nameId = useId()\n    const firmwareMenuId = useId()\n    const repoId = useId()\n    const identifierId = useId()\n    const descriptionId = useId()\n    const homepageId = useId()\n    const hardwareVersionId = useId()\n    const hardwareDesignId = useId()\n    const specifications = useDeviceSpecifications({\n        includeDeprecated: true,\n        includeExperimental: true,\n    })\n    const handleServiceAdd = (srv: jdspec.ServiceSpec) => {\n        console.log(`add`, srv.classIdentifier)\n        device.services.push(srv.classIdentifier)\n        updateDevice()\n    }\n    const companyRepos = useMemo(\n        () =>\n            unique(\n                specifications\n                    .filter(d => d.company === device.company)\n                    .map(d => d.repo)\n                    .filter(repo => !!repo)\n            ),\n        [device?.company, specifications]\n    )\n    const { firmwareBlobs } = useFirmwareBlob(device.repo)\n    const variant = \"outlined\"\n    const companyError = !device.company ? \"select a company\" : \"\"\n    const nameError = device.name?.length > 32 ? \"name too long\" : undefined\n    const parsedRepo = parseRepoUrl(device.repo)\n    const githubError =\n        device.repo && !parsedRepo ? \"invalid GitHub repository\" : \"\"\n    const linkError =\n        !device.link || /^https:\\/\\//.test(device.link)\n            ? \"\"\n            : \"Must be https://...\"\n    const idError = !device.id\n        ? \"missing identifier\"\n        : specifications.find(dev => dev.id == device.id)\n        ? \"identifer already used\"\n        : \"\"\n    const imageError = !imageDataURI ? \"missing image\" : \"\"\n    const versionError =\n        device?.version &&\n        !/^(v\\d+\\.\\d+(\\.\\d+(\\.\\d+)?)?\\w?)?$/.test(device?.version)\n            ? \"Preferred format is vN.N\"\n            : \"\"\n    const ok =\n        !nameError && !linkError && !idError && !imageError && !companyError\n\n    const route = device.id?.split(\"-\").join(\"/\")\n    const modulePath = ok && `devices/${route}.json`\n    const imagePath = ok && `devices/${route}.jpg`\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.name = ev.target.value\n        updateDevice()\n    }\n    const handleRepoChange = (ev: unknown, newValue: string) => {\n        console.log(`new repo`, { newValue })\n        device.repo = newValue\n        updateDevice()\n    }\n    const handleLinkChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.link = ev.target.value\n        updateDevice()\n    }\n    const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.description = ev.target.value\n        updateDevice()\n    }\n    const handleDeleteService = (i: number) => () => {\n        device.services.splice(i, 1)\n        updateDevice()\n    }\n    const handleDeleteFirmware = (i: number) => () => {\n        device.productIdentifiers.splice(i, 1)\n        updateDevice()\n    }\n    const handleHardwareDesign = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.designIdentifier = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleVersion = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.version = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleFirmwareAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setFirmwaresAnchorEl(event.currentTarget)\n        updateDevice()\n    }\n    const handleProductIdentifierAddRandomClick = () => {\n        device.productIdentifiers.push(\n            parseInt(deviceCatalog.uniqueFirmwareId(), 16)\n        )\n        updateDevice()\n    }\n    const handleFirmwareAddClose = (blob: FirmwareBlob) => () => {\n        setFirmwaresAnchorEl(null)\n        const id = blob?.productIdentifier\n        if (id !== undefined) {\n            device.productIdentifiers.push(id)\n            device.name = blob.name\n            updateDevice()\n        }\n    }\n    const handleImageImported = (cvs: HTMLCanvasElement) => {\n        const url = cvs.toDataURL(\"image/jpeg\", 100)\n        setImageDataURI(url)\n    }\n    const handleCompanyChanged = (value: string) => {\n        device.company = value\n        updateDevice()\n    }\n    const renderRepoInput = params => (\n        <TextField\n            {...params}\n            error={!!githubError}\n            type=\"url\"\n            label=\"Firmware repository\"\n            helperText={\n                githubError ||\n                \"GitHub Repository hosting the firmware binaries.\"\n            }\n            variant=\"outlined\"\n        />\n    )\n    const handleImportDevice = (dev: JDDevice) => async () => {\n        const controlService = dev.service(0)\n        const descrReg = controlService.register(ControlReg.DeviceDescription)\n        await descrReg.refresh(true)\n\n        const fw = await dev.resolveProductIdentifier()\n        if (fw) device.productIdentifiers = [fw]\n        device.services = dev\n            .services()\n            .filter(srv => !isInfrastructure(srv.specification))\n            .map(srv => srv.serviceClass)\n        device.description = descrReg.stringValue\n        updateDevice()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const files = useMemo<GithubPullRequestFiles>(\n        () =>\n            modulePath && {\n                [modulePath]: JSON.stringify(\n                    normalizeDeviceSpecification(device),\n                    null,\n                    2\n                ),\n                [imagePath]: {\n                    content: imageDataURI?.slice(imageDataURI?.indexOf(\",\")),\n                    encoding: \"base64\",\n                },\n            },\n        [modulePath, imagePath, imageDataURI, JSON.stringify(device)]\n    )\n\n    return (\n        <>\n            <h1>Device Registration</h1>\n            <p>\n                Compose a device from various services, prepare the metadata and\n                register it to the{\" \"}\n                <Link href=\"/devices/\" underline=\"hover\">\n                    Devices catalog\n                </Link>\n                .\n            </p>\n            <Grid container spacing={3}>\n                {devices.map(dev => (\n                    <Grid item key={dev.id} {...gridBreakpoints}>\n                        <Card>\n                            <DeviceCardHeader device={dev} />\n                            <CardActions>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleImportDevice(dev)}\n                                >\n                                    Import\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <TextField\n                        id={nameId}\n                        required\n                        error={!!nameError}\n                        helperText={nameError}\n                        fullWidth={true}\n                        label=\"Name\"\n                        placeholder=\"My module\"\n                        value={device.name || \"\"}\n                        onChange={handleNameChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Autocomplete\n                        id={repoId}\n                        freeSolo={true}\n                        autoComplete\n                        placeholder=\"https://github.com/...\"\n                        inputValue={device.repo || \"\"}\n                        onInputChange={handleRepoChange}\n                        options={companyRepos}\n                        renderInput={renderRepoInput}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <CompanySelect\n                        value={device?.company}\n                        error={companyError}\n                        onValueChange={handleCompanyChanged}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareDesignId}\n                        fullWidth={true}\n                        helperText=\"A unique identifier for this hardware design.\"\n                        label=\"Hardware design\"\n                        value={device?.designIdentifier}\n                        onChange={handleHardwareDesign}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareVersionId}\n                        fullWidth={true}\n                        error={!!versionError}\n                        helperText={versionError}\n                        label=\"Version\"\n                        value={device?.version}\n                        onChange={handleVersion}\n                        variant={variant}\n                    />\n                    <Typography variant=\"caption\">\n                        Revision identifier for this hardware design using\n                        semver format (v1.0, v1.1, ...).\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography>Product Identifiers</Typography>\n                        {device.productIdentifiers?.map((id, i) => {\n                            const blob = firmwareBlobs?.find(\n                                b => b.productIdentifier == id\n                            )\n                            return (\n                                <Box\n                                    component=\"span\"\n                                    ml={0.5}\n                                    mb={0.5}\n                                    key={id}\n                                >\n                                    <Chip\n                                        label={\n                                            blob\n                                                ? `${\n                                                      blob.name\n                                                  } (0x${id.toString(16)})`\n                                                : `0x${id.toString(16)}`\n                                        }\n                                        onDelete={handleDeleteFirmware(i)}\n                                    />\n                                </Box>\n                            )\n                        })}\n                        <IconButtonWithTooltip\n                            title=\"Add random product identifier\"\n                            onClick={handleProductIdentifierAddRandomClick}\n                        >\n                            <CreateIcon />\n                        </IconButtonWithTooltip>\n                        {firmwareBlobs && (\n                            <IconButtonWithTooltip\n                                title=\"Add product identifier from repository\"\n                                aria-controls={firmwareMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleFirmwareAddClick}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <Menu\n                            id={firmwareMenuId}\n                            anchorEl={firmwaresAnchorEl}\n                            keepMounted\n                            open={Boolean(firmwaresAnchorEl)}\n                            onClose={handleFirmwareAddClose(undefined)}\n                        >\n                            {firmwareBlobs?.map(blob => (\n                                <MenuItem\n                                    key={blob.productIdentifier}\n                                    value={blob.productIdentifier.toString(16)}\n                                    onClick={handleFirmwareAddClose(blob)}\n                                >\n                                    {blob.name}\n                                    <Typography\n                                        variant=\"caption\"\n                                        component=\"span\"\n                                    >\n                                        {blob.version}\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        <Typography variant=\"caption\" component=\"div\">\n                            Product identifiers uniquely identify your hardware\n                            on the Jacdac bus. Each revision of your hardware\n                            may have a different identifier.\n                        </Typography>\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography color=\"inherit\">Services</Typography>\n                        {device.services?.map((id, i) => (\n                            <Box component=\"span\" m={0.5} key={id}>\n                                <Chip\n                                    label={\n                                        serviceSpecificationFromClassIdentifier(\n                                            id\n                                        )?.name || id\n                                    }\n                                    onDelete={handleDeleteService(i)}\n                                />\n                            </Box>\n                        ))}\n                        <AddServiceIconButton onAdd={handleServiceAdd} />\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={identifierId}\n                        disabled\n                        error={!!idError}\n                        fullWidth={true}\n                        label=\"Identifier\"\n                        variant={variant}\n                        value={device.id || \"\"}\n                    />\n                    <Typography variant=\"caption\">\n                        This generated identifer is a URL friendly string\n                        created from your company and product name.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={descriptionId}\n                        fullWidth={true}\n                        required\n                        label=\"Description\"\n                        multiline={true}\n                        rows={4}\n                        value={device.description || \"\"}\n                        onChange={handleDescriptionChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={homepageId}\n                        label=\"Home page url\"\n                        error={!!linkError}\n                        helperText={linkError}\n                        fullWidth={true}\n                        placeholder=\"https://...\"\n                        value={device.link || \"\"}\n                        onChange={handleLinkChange}\n                        variant={variant}\n                        type=\"url\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox>\n                        <Typography>Catalog image</Typography>\n                        <ImportImageCanvas\n                            width={DEVICE_IMAGE_WIDTH}\n                            height={DEVICE_IMAGE_HEIGHT}\n                            onImageImported={handleImageImported}\n                        />\n                        <Typography variant=\"caption\" component=\"div\">\n                            {`Import an image of the device, at least ${DEVICE_IMAGE_WIDTH}x${DEVICE_IMAGE_HEIGHT}.`}\n                        </Typography>\n                        {imageError && (\n                            <Alert severity=\"error\">{imageError}</Alert>\n                        )}\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            label={\"register device\"}\n                            title={`Device: ${device.name}`}\n                            head={`devices/${device.id}`}\n                            description={`This pull request registers a new device for Jacdac.`}\n                            files={files}\n                        />\n                    </Suspense>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"names":["React","useMemo","useState","Menu","MenuItem","Typography","isInfrastructure","serviceSpecificationFromClassIdentifier","serviceSpecifications","AddIcon","IconButtonWithTooltip","useId","AddServiceIconButton","props","error","onAdd","children","serviceFilter","servicesAnchorEl","setServicesAnchorEl","servicesMenuId","services","filter","srv","handleServiceAddClick","event","currentTarget","handleServiceAddClose","id","undefined","Boolean","map","classIdentifier","toString","name","useDeviceSpecification","useDeviceImage","CardMediaWithSkeleton","DeviceCardMedia","device","specification","imageUrl","ControlReg","JD_SERVICE_INDEX_CTRL","CardHeader","Chip","Grid","Link","useRegisterUnpackedValue","DeviceActions","DeviceName","identifierToUrlPath","DeviceAvatar","useChange","useRegister","DeviceFirmwareVersionChip","control","_","service","productIdentifierRegister","ProductIdentifier","productIdentifier","firmwareVersionRegister","FirmwareVersion","firmwareVersion","firmwareName","firmwares","find","fw","f","join","DeviceTemperatureChip","tempRegister","register","McuTemperature","temperature","isNaN","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","showSettings","showReset","deviceId","s","useEffect","useIdleCallback","cb","timeout","deps","window","requestIdleCallback","cancelIdleCallback","setTimeout","clearTimeout","useCallback","useContext","JacdacContext","parseFirmwareFile","DbContext","useChangeAsync","unique","fetchLatestFirmwareRelease","fetchFirmwareReleaseBinary","useMounted","useAnalytics","prettyDuration","useDeviceSpecifications","useFirmwareBlobs","bus","db","trackEvent","throttled","setThrottled","mounted","specifications","loadFirmwares","names","list","slugs","spec","productIdentifiers","length","repo","test","substr","console","debug","slug","get","time","age","Date","now","status","release","ignoreThrottled","version","warn","log","firmware","set","delay","uf2s","uf2Blobs","forEach","uf2Blob","push","firmwareBlobs","useFirmwareBlob","repoSlug","replace","blobs","setFirmwareFile","tag","useEffectAsync","useFetch","url","options","response","setResponse","setError","setStatus","loading","setLoading","res","fetch","json","semverCmp","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","exec","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","cleaned","parts","split","repoPath","folder","slice","parseRepoUrl","m","owner","uri","resp","releases","Error","downloadUrl","req","headers","Accept","blob","fetchText","path","mimeType","src","text","useFetchApi","useFetchJSON","useRepository","useLatestRelease","useLatestReleaseAsset","filename","tag_name","assertUrl","useLatestFirmwareRelease","useLatestFirmwareReleases","cmp","a","b","d","major","minor","patch","pre","i","aa","bb","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","Paper","PaperBox","padding","elevation","bgcolor","others","mb","p","readBlobToCanvas","width","height","Promise","resolve","reject","URL","createObjectURL","img","Image","onload","revokeObjectURL","cvs","document","createElement","ctx","getContext","cw","ch","car","iw","ih","iar","sx","sy","sw","sh","dw","dh","drawImage","onerror","useBlobCanvas","canvas","setCanvas","e","lazy","styled","Box","Skeleton","Suspense","PREFIX","classes","root","btn","Root","theme","position","margin","display","borderRadius","left","top","background","palette","paper","ImportButton","ImportImageCanvas","onImageImported","imageBlob","setImageBlob","canvasUrl","toDataURL","handleFilesUploaded","files","file","useLocalStorage","clone","TextField","Card","CardActions","Button","CreateIcon","DEVICE_IMAGE_HEIGHT","DEVICE_IMAGE_WIDTH","generateDeviceSpecificationId","normalizeDeviceSpecification","Autocomplete","useDevices","useGridBreakpoints","Alert","useDeviceCatalog","GithubPullRequestButton","CompanySelect","onValueChange","value","company","setCompany","companies","dev","companyId","helperText","handleChange","ev","newValue","renderInputs","params","DeviceRegistration","setDevice","gridBreakpoints","devices","announced","physical","ignoreInfrastructure","updateDevice","firmwaresAnchorEl","setFirmwaresAnchorEl","imageDataURI","setImageDataURI","deviceCatalog","nameId","firmwareMenuId","repoId","identifierId","descriptionId","homepageId","hardwareVersionId","hardwareDesignId","includeDeprecated","includeExperimental","handleServiceAdd","companyRepos","variant","companyError","nameError","parsedRepo","githubError","linkError","link","idError","imageError","versionError","ok","route","modulePath","imagePath","handleNameChange","target","handleRepoChange","handleLinkChange","handleDescriptionChange","description","handleDeleteService","splice","handleDeleteFirmware","handleHardwareDesign","designIdentifier","trim","handleVersion","handleFirmwareAddClick","handleProductIdentifierAddRandomClick","uniqueFirmwareId","handleFirmwareAddClose","handleImageImported","handleCompanyChanged","renderRepoInput","handleImportDevice","controlService","descrReg","DeviceDescription","refresh","resolveProductIdentifier","serviceClass","stringValue","JSON","stringify","indexOf","encoding"],"sourceRoot":""}