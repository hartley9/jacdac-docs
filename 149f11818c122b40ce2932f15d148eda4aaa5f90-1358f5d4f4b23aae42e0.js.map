{"version":3,"file":"149f11818c122b40ce2932f15d148eda4aaa5f90-1358f5d4f4b23aae42e0.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Category.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/CardActions.js","webpack://jacdac-docs/./src/components/IDChip.tsx","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCard.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/ui/AutoGrid.tsx","webpack://jacdac-docs/./src/components/ServiceRegisters.tsx","webpack://jacdac-docs/./src/components/EventInput.tsx","webpack://jacdac-docs/./src/components/ServiceEvents.tsx","webpack://jacdac-docs/./jacdac-ts/src/jdom/command.ts","webpack://jacdac-docs/./src/components/CommandInput.tsx","webpack://jacdac-docs/./src/components/DecodedPacketItem.tsx","webpack://jacdac-docs/./src/components/ServiceCard.tsx","webpack://jacdac-docs/./src/components/devices/DeviceList.tsx","webpack://jacdac-docs/./src/components/KindChip.tsx","webpack://jacdac-docs/./src/components/PacketMembersChip.tsx","webpack://jacdac-docs/./src/components/specification/PacketSpecificationSource.tsx","webpack://jacdac-docs/./src/components/specification/PacketSpecification.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecificationStatusAlert.tsx","webpack://jacdac-docs/./src/components/ui/Markdown.tsx","webpack://jacdac-docs/./src/components/ui/Snippet.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/jacdac/useEventCount.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nvar cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disableSpacing\n  } = ownerState;\n  var slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nvar CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(_ref => {\n  var {\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  }, !ownerState.disableSpacing && {\n    '& > :not(:first-of-type)': {\n      marginLeft: 8\n    }\n  });\n});\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  var {\n    disableSpacing = false,\n    className\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default CardActions;","import React, { useContext } from \"react\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport FingerprintIcon from \"@mui/icons-material/Fingerprint\"\nimport { Chip, IconButton } from \"@mui/material\"\nimport PacketsContext from \"./PacketsContext\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function IDChip(props: {\n    id: number | string\n    className?: string\n    filter?: string\n}) {\n    const { id, className, filter } = props\n    const { filter: packetFilter, setFilter: setPacketFilter } =\n        useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n\n    const ids =\n        typeof id === \"string\"\n            ? id\n            : `0x${id !== undefined ? (id as number).toString(16) : \"???\"}`\n    const filtered = packetFilter && packetFilter.indexOf(filter) > -1\n    const handleFilterClick = () => {\n        if (filtered) setPacketFilter(packetFilter?.replace(filter, \"\")?.trim())\n        else setPacketFilter(packetFilter?.trim() + \" \" + filter)\n        setDrawerType(DrawerType.Packets)\n    }\n    const icon = <FingerprintIcon />\n    const title = filtered ? `remove filter ${filter}` : `add filter ${filter}`\n    if (filter)\n        return (\n            <Tooltip\n                title={\n                    filtered\n                        ? `remove filter ${filter}`\n                        : `add filter ${filter}`\n                }\n            >\n                <span>\n                    <Chip\n                        className={className}\n                        size=\"small\"\n                        icon={\n                            <IconButton\n                                aria-label={title}\n                                onClick={handleFilterClick}\n                                size=\"small\"\n                            >\n                                {icon}\n                            </IconButton>\n                        }\n                        label={ids}\n                    />\n                </span>\n            </Tooltip>\n        )\n    else\n        return (\n            <Chip\n                aria-label={title}\n                className={className}\n                size=\"small\"\n                icon={icon}\n                title={`identifier ${ids}`}\n                label={ids}\n            />\n        )\n}\n","import { ButtonProps } from \"@mui/material\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"../ServiceButton\"\nimport useChange from \"../../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { CardActions } from \"@mui/material\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\n\nconst PREFIX = \"DeviceCard\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n}\n\nconst StyledCard = styled(Card)(() => ({\n    [`&.${classes.root}`]: {},\n\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n}))\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n\n    const services = useChange(device, () =>\n        device.services().filter(srv => !isInfrastructure(srv.specification))\n    )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.nodeId}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import {\n    ControlReg,\n    JD_SERVICE_INDEX_CTRL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Grid, Typography } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useChange from \"../../jacdac/useChange\"\nimport useRegister from \"../hooks/useRegister\"\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const control = useChange(device, _ => _?.service(JD_SERVICE_INDEX_CTRL))\n    const productIdentifierRegister = useRegister(\n        control,\n        ControlReg.ProductIdentifier\n    )\n    const [productIdentifier] = useRegisterUnpackedValue<[number]>(\n        productIdentifierRegister\n    )\n    const firmwareVersionRegister = useRegister(\n        control,\n        ControlReg.FirmwareVersion\n    )\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n    if (firmwareVersion == undefined) return null\n\n    const firmwareName =\n        !!productIdentifier &&\n        specification?.firmwares?.find(\n            fw => fw.productIdentifier === productIdentifier\n        )?.name\n\n    return (\n        <Chip\n            size=\"small\"\n            label={[firmwareName, firmwareVersion].filter(f => !!f).join(\" \")}\n        />\n    )\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.McuTemperature)\n    )\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    if (isNaN(temperature)) return null\n    return <Chip size=\"small\" label={`${temperature}°`} />\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        underline=\"hover\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Typography variant=\"caption\" gutterBottom>\n                                {[\n                                    specification?.name,\n                                    showDeviceId && device.deviceId,\n                                ]\n                                    .filter(s => !!s)\n                                    .join(\", \")}\n                            </Typography>\n                        </Grid>\n                        {showFirmware && (\n                            <Grid item>\n                                <DeviceFirmwareVersionChip device={device} />\n                            </Grid>\n                        )}\n                        {showTemperature && (\n                            <Grid item>\n                                <DeviceTemperatureChip device={device} />\n                            </Grid>\n                        )}\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","import { Grid, GridSpacing } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function AutoGrid(props: {\n    children: JSX.Element | JSX.Element[]\n    spacing?: GridSpacing\n}) {\n    const { children, spacing } = props\n    if (children && Array.isArray(children))\n        return (\n            <Grid container spacing={spacing}>\n                {(children as JSX.Element[]).map((child, i) => (\n                    <Grid item xs={12} key={child.key || i}>\n                        {child}\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    else return children as JSX.Element\n}\n","import React, { useMemo } from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport { isRegister } from \"../../jacdac-ts/src/jdom/spec\"\nimport RegisterInput from \"./RegisterInput\"\nimport useChange from \"../jacdac/useChange\"\nimport AutoGrid from \"./ui/AutoGrid\"\nimport JDRegister from \"../../jacdac-ts/src/jdom/register\"\nimport { SystemReg } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function ServiceRegisters(props: {\n    service: JDService\n    registerIdentifiers?: number[]\n    filter?: (register: JDRegister) => boolean\n    showRegisterName?: boolean\n    hideMissingValues?: boolean\n    showTrends?: boolean\n}) {\n    const {\n        service,\n        registerIdentifiers,\n        filter,\n        showRegisterName,\n        hideMissingValues,\n        showTrends,\n    } = props\n    const specification = useChange(service, spec => spec.specification)\n    const registers = useMemo(() => {\n        const packets = specification?.packets\n        const ids =\n            registerIdentifiers ||\n            packets?.filter(pkt => isRegister(pkt))?.map(pkt => pkt.identifier)\n        let r = ids?.map(id => service.register(id))?.filter(reg => !!reg) || []\n        if (filter) r = r.filter(filter)\n        return r\n    }, [specification, registerIdentifiers, filter])\n\n    return (\n        <AutoGrid spacing={1}>\n            {registers.map(register => (\n                <RegisterInput\n                    key={register.id}\n                    register={register}\n                    showRegisterName={showRegisterName}\n                    hideMissingValues={hideMissingValues}\n                    showTrend={\n                        showTrends && register.code === SystemReg.Reading\n                    }\n                    visible={true}\n                />\n            ))}\n        </AutoGrid>\n    )\n}\n","import React from \"react\"\nimport JDEvent from \"../../jacdac-ts/src/jdom/event\"\nimport { Typography, Badge } from \"@mui/material\"\nimport KindIcon from \"./KindIcon\"\nimport useEventCount from \"../jacdac/useEventCount\"\nimport DeviceName from \"./devices/DeviceName\"\n\nexport default function EventInput(props: {\n    event: JDEvent\n    showDeviceName?: boolean\n    showName?: boolean\n}) {\n    const { event, showName, showDeviceName } = props\n    const count = useEventCount(event)\n    const spec = event.specification\n\n    return (\n        <>\n            {showDeviceName && (\n                <Typography>\n                    <DeviceName device={event.service.device} />/\n                </Typography>\n            )}\n            {showName && spec && (\n                <Typography gutterBottom>{spec.name}</Typography>\n            )}\n            <Badge badgeContent={count} color=\"primary\">\n                <KindIcon kind={\"event\"} />\n            </Badge>\n        </>\n    )\n}\n","import React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport { isEvent } from \"../../jacdac-ts/src/jdom/spec\"\nimport EventInput from \"./EventInput\"\nimport AutoGrid from \"./ui/AutoGrid\"\n\nexport default function ServiceEvents(props: {\n    service: JDService\n    eventIdentifiers?: number[]\n    showEventName?: boolean\n}) {\n    const { service, eventIdentifiers, showEventName } = props\n    const spec = service.specification\n    const packets = spec.packets\n    let events = packets.filter(isEvent)\n    if (eventIdentifiers !== undefined)\n        events = events.filter(\n            event => eventIdentifiers.indexOf(event.identifier) > -1\n        )\n\n    return (\n        <AutoGrid spacing={1}>\n            {events.map(event => (\n                <EventInput\n                    key={`event${event.identifier}`}\n                    event={service.event(event.identifier)}\n                    showName={showEventName}\n                />\n            ))}\n        </AutoGrid>\n    )\n}\n","import { setNumber, sizeOfNumberFormat } from \"./buffer\"\nimport { CMD_SET_REG, JD_SERIAL_MAX_PAYLOAD_SIZE } from \"./constants\"\nimport { PackedValues } from \"./pack\"\nimport Packet from \"./packet\"\nimport {\n    clampToStorage,\n    isRegister,\n    numberFormatFromStorageType,\n    scaleFloatToInt,\n} from \"./spec\"\nimport { stringToUint8Array, toUTF8 } from \"./utils\"\n\n/**\n * @internal\n */\nexport function packArguments(info: jdspec.PacketInfo, args: PackedValues) {\n    let repeatIdx = -1\n    let numReps = 0\n    let argIdx = 0\n    let dst = 0\n\n    const buf = new Uint8Array(256)\n\n    for (let i = 0; i < info.fields.length; ++argIdx, ++i) {\n        if (argIdx >= args.length && numReps > 0) break\n        const arg0 = argIdx < args.length ? args[argIdx] : 0\n        const fld = info.fields[i]\n\n        if (repeatIdx == -1 && fld.startRepeats) repeatIdx = i\n\n        const arg1 =\n            fld.type == \"string0\" && typeof arg0 == \"string\"\n                ? arg0 + \"\\u0000\"\n                : arg0\n\n        const arg =\n            typeof arg1 == \"boolean\"\n                ? arg1\n                    ? 1\n                    : 0\n                : typeof arg1 == \"string\"\n                ? stringToUint8Array(toUTF8(arg1))\n                : arg1\n\n        if (typeof arg == \"number\") {\n            const intVal = scaleFloatToInt(arg, fld)\n            if (fld.storage == 0)\n                throw new Error(`expecting ${fld.type} got number`)\n\n            const fmt = numberFormatFromStorageType(fld.storage)\n            setNumber(buf, fmt, dst, clampToStorage(intVal, fld.storage))\n            dst += sizeOfNumberFormat(fmt)\n        } else {\n            let size = Math.abs(fld.storage)\n            if (typeof arg1 == \"string\") {\n                if (size == 0) size = arg.length\n                const argCut = arg.slice(0, size)\n                buf.set(argCut, dst)\n                dst += size\n            } else if (size == 0 || size == arg.length) {\n                buf.set(arg, dst)\n                dst += arg.length\n            } else {\n                throw new Error(\n                    `expecting ${Math.abs(fld.storage)} bytes; got ${\n                        arg.length\n                    }`\n                )\n            }\n        }\n\n        if (dst >= JD_SERIAL_MAX_PAYLOAD_SIZE)\n            throw new Error(\n                `jacdac packet length too large, ${dst} > ${JD_SERIAL_MAX_PAYLOAD_SIZE} bytes`\n            )\n\n        if (repeatIdx != -1 && i + 1 >= info.fields.length) {\n            i = repeatIdx - 1\n            numReps++\n        }\n    }\n\n    const cmd = isRegister(info)\n        ? info.identifier | CMD_SET_REG\n        : info.identifier\n    const pkt = Packet.from(cmd, buf.slice(0, dst))\n    if (info.kind != \"report\") pkt.isCommand = true\n    return pkt\n}\n","import React, { useContext } from \"react\"\nimport { Typography } from \"@mui/material\"\nimport { InPipeReader } from \"../../jacdac-ts/src/jdom/pipes\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport DeviceName from \"./devices/DeviceName\"\nimport { isReportOf } from \"../../jacdac-ts/src/jdom/spec\"\nimport { packArguments } from \"../../jacdac-ts/src/jdom/command\"\nimport {\n    DecodedPacket,\n    printPacket,\n    serviceName,\n} from \"../../jacdac-ts/src/jdom/pretty\"\nimport Packet from \"../../jacdac-ts/src/jdom/packet\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport CmdButton from \"./CmdButton\"\nimport { PackedValues } from \"../../jacdac-ts/src/jdom/pack\"\n\nfunction hasPipeReport(info: jdspec.PacketInfo) {\n    return info.fields.find(f => f.type == \"pipe\")\n}\n\nexport default function CommandInput(props: {\n    service: JDService\n    command: jdspec.PacketInfo\n    showDeviceName?: boolean\n    args?: PackedValues\n    setReports?: (reports: DecodedPacket[]) => void\n}) {\n    const { service, command, showDeviceName, args, setReports } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n\n    const { specification } = service\n    const requiredArgLength =\n        command.fields.length - (hasPipeReport(command) ? 1 : 0)\n    const missingArguments = (args?.length || 0) !== requiredArgLength\n    const disabled = missingArguments\n    const reportSpec =\n        command.hasReport &&\n        specification.packets.find(p => isReportOf(command, p))\n    const handleClick = async mounted => {\n        const pkt = !args?.length\n            ? Packet.onlyHeader(command.identifier)\n            : packArguments(command, args)\n        if (setReports && reportSpec) {\n            const reportPacket = await service.sendCmdAwaitResponseAsync(pkt)\n            if (!mounted()) return\n            const decoded = reportPacket?.decoded\n            setReports([decoded])\n        } else if (setReports && hasPipeReport(command)) {\n            let inp: InPipeReader\n            try {\n                inp = new InPipeReader(bus)\n                const cmd = inp.openCommand(command.identifier)\n                await service.sendPacketAsync(cmd, true)\n                console.log(printPacket(cmd)) // keep this call, it sets up pretty to understand packages\n                const { output } = await inp.readAll()\n                const reports = output\n                    .filter(ot => !!ot.data?.length)\n                    .map(ot => ot?.decoded)\n                if (!mounted()) return\n                setReports(reports)\n            } finally {\n                inp?.unmount()\n            }\n        } else await service.sendPacketAsync(pkt, true)\n    }\n\n    return (\n        <CmdButton\n            trackName=\"command.input\"\n            trackProperties={{\n                service: serviceName(service.serviceClass),\n                serviceClass: service.serviceClass,\n            }}\n            variant=\"contained\"\n            disabled={disabled}\n            onClick={handleClick}\n        >\n            {showDeviceName && (\n                <Typography>\n                    <DeviceName device={service.device} />/\n                </Typography>\n            )}\n            {command.name.replace(/_/g, \" \")}\n        </CmdButton>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport { DecodedPacket } from \"../../jacdac-ts/src/jdom/pretty\"\nimport MembersInput from \"./fields/MembersInput\"\n\nexport default function DecodedPacketItem(props: { pkt: DecodedPacket }) {\n    const { pkt } = props\n    const { decoded, service } = pkt\n    const specifications = useMemo(() => decoded.map(d => d.info), [decoded])\n    const values = useMemo(() => decoded.map(d => d.value), [decoded])\n    return (\n        <MembersInput\n            serviceSpecification={service}\n            specifications={specifications}\n            values={values}\n        />\n    )\n}\n","import React, { useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@mui/material/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@mui/material/CardContent\"\n// tslint:disable-next-line: no-submodule-imports\nimport Typography from \"@mui/material/Typography\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport ServiceRegisters from \"./ServiceRegisters\"\nimport ServiceEvents from \"./ServiceEvents\"\nimport { isCommand } from \"../../jacdac-ts/src/jdom/spec\"\nimport { CardActions, List, ListItem } from \"@mui/material\"\nimport DeviceCardHeader from \"./devices/DeviceCardHeader\"\nimport { DeviceLostAlert } from \"./alert/DeviceLostAlert\"\nimport CommandInput from \"./CommandInput\"\nimport { DecodedPacket } from \"../../jacdac-ts/src/jdom/pretty\"\nimport DecodedPacketItem from \"./DecodedPacketItem\"\nimport ServiceSpecificationStatusAlert from \"./specification/ServiceSpecificationStatusAlert\"\nimport MembersInput from \"./fields/MembersInput\"\n\nconst PREFIX = \"ServiceCard\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n}\n\nconst StyledCard = styled(Card)({\n    [`&.${classes.root}`]: {\n        minWidth: 275,\n    },\n    [`& .${classes.bullet}`]: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n})\n\nexport default function ServiceCard(props: {\n    service: JDService\n    linkToService?: boolean\n    showServiceName?: boolean\n    showMemberName?: boolean\n    registerIdentifiers?: number[]\n    eventIdentifiers?: number[]\n    commandIdentifier?: number\n}) {\n    const {\n        service,\n        linkToService,\n        registerIdentifiers,\n        showServiceName,\n        showMemberName,\n        eventIdentifiers,\n        commandIdentifier,\n    } = props\n    const { specification } = service\n    const [reports, setReports] = useState<DecodedPacket[]>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [commandArgs, setCommandArgs] = useState<any[]>([])\n\n    const hasCommandIdentifier = commandIdentifier !== undefined\n    const hasRegisterIdentifiers = !!registerIdentifiers?.length\n    const hasEventIdentifiers = !!eventIdentifiers?.length\n    const command =\n        commandIdentifier !== undefined &&\n        specification?.packets.find(\n            pkt => isCommand(pkt) && pkt.identifier === commandIdentifier\n        )\n\n    return (\n        <StyledCard className={classes.root}>\n            <DeviceCardHeader device={service.device} showAvatar={true} />\n            <CardContent>\n                {showServiceName && (\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                    >\n                        <Link\n                            to={\n                                linkToService && service.specification\n                                    ? `/services/${service.specification.shortId}/`\n                                    : \"/clients/javascript/jdom/service\"\n                            }\n                        >\n                            {service.name}\n                        </Link>\n                    </Typography>\n                )}\n                <Typography variant=\"body2\" component=\"div\">\n                    {hasRegisterIdentifiers && (\n                        <ServiceRegisters\n                            service={service}\n                            showRegisterName={showMemberName}\n                            registerIdentifiers={registerIdentifiers}\n                        />\n                    )}\n                    {hasEventIdentifiers && (\n                        <ServiceEvents\n                            service={service}\n                            showEventName={showMemberName}\n                            eventIdentifiers={eventIdentifiers}\n                        />\n                    )}\n                    {command && (\n                        <MembersInput\n                            serviceSpecification={specification}\n                            serviceMemberSpecification={command}\n                            specifications={command.fields}\n                            values={commandArgs}\n                            setValues={setCommandArgs}\n                            showDataType={true}\n                        />\n                    )}\n                    {!!reports?.length && (\n                        <List key={\"reports\"} dense>\n                            {reports?.map((report, ri) => (\n                                <ListItem key={`report${ri}`}>\n                                    <DecodedPacketItem pkt={report} />\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Typography>\n                {!hasCommandIdentifier &&\n                    !hasRegisterIdentifiers &&\n                    !hasEventIdentifiers && (\n                        <ServiceSpecificationStatusAlert\n                            specification={specification}\n                        />\n                    )}\n                <DeviceLostAlert device={service?.device} />\n            </CardContent>\n            <CardActions>\n                {command && (\n                    <CommandInput\n                        service={service}\n                        command={command}\n                        args={commandArgs}\n                        setReports={setReports}\n                    />\n                )}\n            </CardActions>\n        </StyledCard>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Grid } from \"@mui/material\"\nimport DeviceCard from \"./DeviceCard\"\nimport ServiceCard from \"../ServiceCard\"\nimport useChange from \"../../jacdac/useChange\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\n\nconst PREFIX = \"DeviceList\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n}))\n\nexport default function DeviceList(props: {\n    serviceClass?: number\n    linkToService?: boolean\n    registerIdentifiers?: number[]\n    eventIdentifiers?: number[]\n    commandIdentifier?: number\n    showServiceName?: boolean\n    showMemberName?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showServiceButtons?: boolean\n}) {\n    const {\n        serviceClass,\n        linkToService,\n        registerIdentifiers,\n        showServiceName,\n        showMemberName,\n        showFirmware,\n        showTemperature,\n        showServiceButtons,\n        eventIdentifiers,\n        commandIdentifier,\n    } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, n => n.devices({ serviceClass }))\n    const services = useChange(bus, n => n.services({ serviceClass }))\n\n    const hasServiceClass = serviceClass !== undefined\n    const gridBreakpoints = useGridBreakpoints(devices?.length)\n\n    return (\n        <StyledGrid container spacing={2} className={classes.root}>\n            {!hasServiceClass &&\n                devices.map(device => (\n                    <Grid key={device.id} item {...gridBreakpoints}>\n                        <DeviceCard\n                            device={device}\n                            showDescription={true}\n                            showTemperature={showTemperature}\n                            showFirmware={showFirmware}\n                            showServices={showServiceButtons}\n                        />\n                    </Grid>\n                ))}\n            {hasServiceClass &&\n                services.map(service => {\n                    return (\n                        <Grid key={service.nodeId} item {...gridBreakpoints}>\n                            <ServiceCard\n                                service={service}\n                                linkToService={linkToService}\n                                showServiceName={showServiceName}\n                                showMemberName={showMemberName}\n                                registerIdentifiers={registerIdentifiers}\n                                eventIdentifiers={eventIdentifiers}\n                                commandIdentifier={commandIdentifier}\n                            />\n                        </Grid>\n                    )\n                })}\n        </StyledGrid>\n    )\n}\n","import React, { useContext } from \"react\"\nimport { Chip } from \"@mui/material\"\nimport KindIcon, { kindName } from \"./KindIcon\"\nimport PacketsContext from \"./PacketsContext\"\nimport AppContext, { DrawerType } from \"./AppContext\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function KindChip(props: { kind: string; className?: string }) {\n    const { kind, className } = props\n    const { filter, setFilter } = useContext(PacketsContext)\n    const { setDrawerType } = useContext(AppContext)\n    const icon = KindIcon({ kind })\n    const chipFilter = `kind:${kind}`\n    const filtered = filter && filter.indexOf(chipFilter) > -1\n    const handleClick = () => {\n        if (filtered) setFilter(filter?.replace(chipFilter, \"\")?.trim())\n        else setFilter(filter?.trim() + \" \" + chipFilter)\n        setDrawerType(DrawerType.Packets)\n    }\n    return (\n        <Tooltip\n            title={\n                filtered\n                    ? `remove filter ${chipFilter}`\n                    : `add filter ${chipFilter}`\n            }\n        >\n            <span>\n                <Chip\n                    onClick={handleClick}\n                    className={className}\n                    size=\"small\"\n                    label={kindName(kind)}\n                    icon={icon}\n                />\n            </span>\n        </Tooltip>\n    )\n}\n","import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport Chip from \"@mui/material/Chip\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CategoryIcon from \"@mui/icons-material/Category\"\nimport Tooltip from \"./ui/Tooltip\"\n\nexport default function PacketMembersChip(props: {\n    spec: jdspec.PacketInfo\n    members: jdspec.PacketMember[]\n    className?: string\n}) {\n    const { members, className, spec } = props\n    if (!members?.length) return null\n\n    const label = spec?.packFormat\n    const title = \"pack format\"\n    return (\n        <Tooltip title={title}>\n            <Chip\n                style={{ textDecoration: \"none\" }}\n                href=\"/reference/pack-format/\"\n                component=\"a\"\n                clickable\n                className={className}\n                size=\"small\"\n                icon={<CategoryIcon />}\n                label={label}\n            />\n        </Tooltip>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Tabs, Tab } from \"@mui/material\"\nimport TabPanel from \"../ui/TabPanel\"\nimport Snippet from \"../ui/Snippet\"\nimport { packInfo } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport {\n    isCommand,\n    isRegister,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../ui/PaperBox\"\n\nexport default function PacketSpecificationSource(props: {\n    serviceClass: number\n    packetInfo: jdspec.PacketInfo\n    reportInfo?: jdspec.PacketInfo\n    pipeReportInfo?: jdspec.PacketInfo\n}) {\n    const { serviceClass, packetInfo } = props\n    const [tab, setTab] = useState(0)\n\n    const info = serviceSpecificationFromClassIdentifier(serviceClass)\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    // TODO: render commands\n    if (\n        !info ||\n        !packetInfo?.fields?.length ||\n        !(isRegister(packetInfo) || isCommand(packetInfo))\n    )\n        return null\n\n    let index = 0\n    return (\n        <PaperBox>\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                {[\"TypeScript\"]\n                    .filter(n => !!n)\n                    .map(n => (\n                        <Tab key={n} label={n} />\n                    ))}\n            </Tabs>\n            <TabPanel value={tab} index={index++}>\n                <Snippet\n                    value={() =>\n                        packInfo(info, packetInfo, {\n                            isStatic: false,\n                            useBooleans: false,\n                            useJDOM: true,\n                        }).buffers\n                    }\n                    mode={\"typescript\"}\n                />\n            </TabPanel>\n        </PaperBox>\n    )\n}\n","import {\n    isRegister,\n    isEvent,\n    isCommand,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport { styled } from \"@mui/material/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport Chip from \"@mui/material/Chip\"\nimport DeviceList from \"../devices/DeviceList\"\nimport IDChip from \"../IDChip\"\nimport KindChip from \"../KindChip\"\nimport PacketMembersChip from \"../PacketMembersChip\"\nimport Markdown from \"../ui/Markdown\"\nimport { prettyMemberUnit } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport PacketSpecificationSource from \"./PacketSpecificationSource\"\n\nconst PREFIX = \"PacketSpecification\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    field: `${PREFIX}-field`,\n    chip: `${PREFIX}-chip`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n\n    [`& .${classes.field}`]: {\n        \"& > div\": { verticalAlign: \"middle\" },\n    },\n\n    [`& .${classes.chip}`]: {\n        margin: theme.spacing(0.5),\n    },\n}))\n\nfunction MemberType(props: { member: jdspec.PacketMember }) {\n    const { member } = props\n\n    const helperText = prettyMemberUnit(member, true)\n\n    return (\n        <>\n            <li className={classes.field}>\n                {member.name !== \"_\" && `${member.name}: `}\n                <code>{helperText}</code>\n            </li>\n        </>\n    )\n}\n\nfunction MembersType(props: {\n    members: jdspec.PacketMember[]\n    title?: string\n}) {\n    const { members, title } = props\n\n    let repeatIndex = members.findIndex(m => !!m.startRepeats)\n    if (repeatIndex < 0) repeatIndex = members.length\n    const beforeRepeat = members.slice(0, repeatIndex)\n    const afterRepeat = members.slice(repeatIndex)\n\n    return (\n        <>\n            {!!title && <h4>{title}</h4>}\n            {!!beforeRepeat.length && (\n                <ul>\n                    {beforeRepeat.map(member => (\n                        <MemberType key={member.name} member={member} />\n                    ))}\n                </ul>\n            )}\n            {!!afterRepeat.length && (\n                <>\n                    <h5>starts repeating</h5>\n                    <ul>\n                        {afterRepeat.map(member => (\n                            <MemberType key={member.name} member={member} />\n                        ))}\n                    </ul>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default function PacketSpecification(props: {\n    serviceClass: number\n    packetInfo: jdspec.PacketInfo\n    reportInfo?: jdspec.PacketInfo\n    pipeReportInfo?: jdspec.PacketInfo\n    showDevices?: boolean\n}) {\n    const {\n        serviceClass,\n        packetInfo,\n        reportInfo,\n        pipeReportInfo,\n        showDevices,\n    } = props\n\n    if (!packetInfo)\n        return (\n            <Alert severity=\"error\">{`Unknown member ${serviceClass.toString(\n                16\n            )}:${packetInfo.identifier}`}</Alert>\n        )\n    const { fields } = packetInfo\n    const isCmd = isCommand(packetInfo)\n\n    return (\n        <Root className={classes.root}>\n            <h3 id={`${packetInfo.kind}:${packetInfo.identifier}`}>\n                {packetInfo.name}\n                <PacketMembersChip\n                    spec={packetInfo}\n                    className={classes.chip}\n                    members={packetInfo.fields}\n                />\n                {packetInfo.identifier !== undefined && (\n                    <IDChip\n                        className={classes.chip}\n                        id={packetInfo.identifier}\n                        filter={`pkt:0x${packetInfo.identifier.toString(16)}`}\n                    />\n                )}\n                <KindChip className={classes.chip} kind={packetInfo.kind} />\n                {packetInfo.optional && (\n                    <Chip\n                        className={classes.chip}\n                        size=\"small\"\n                        label=\"optional\"\n                    />\n                )}\n                {packetInfo.derived && (\n                    <Chip\n                        className={classes.chip}\n                        size=\"small\"\n                        label=\"derived\"\n                    />\n                )}\n            </h3>\n            <Markdown source={packetInfo.description} />\n            {!!fields.length && (\n                <MembersType members={fields} title={isCmd && \"Arguments\"} />\n            )}\n            {!!reportInfo && (\n                <MembersType members={reportInfo.fields} title=\"Report\" />\n            )}\n            {!!pipeReportInfo && (\n                <MembersType\n                    members={pipeReportInfo.fields}\n                    title=\"Pipe report\"\n                />\n            )}\n            <PacketSpecificationSource\n                serviceClass={serviceClass}\n                packetInfo={packetInfo}\n                reportInfo={reportInfo}\n            />\n            {showDevices && isCommand(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    commandIdentifier={packetInfo.identifier}\n                />\n            )}\n            {showDevices && isRegister(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    registerIdentifiers={[packetInfo.identifier]}\n                />\n            )}\n            {showDevices && isEvent(packetInfo) && (\n                <DeviceList\n                    serviceClass={serviceClass}\n                    eventIdentifiers={[packetInfo.identifier]}\n                />\n            )}\n        </Root>\n    )\n}\n","import React from \"react\"\nimport Alert from \"../ui/Alert\"\n\nexport function StatusAlert(props: { specification: jdspec.ServiceSpec }) {\n    const { specification } = props\n\n    switch (specification?.status) {\n        case \"deprecated\":\n            return <Alert severity=\"error\">Deprecated</Alert>\n        case \"experimental\":\n            return <Alert severity=\"info\">Experimental</Alert>\n        default:\n            return null\n    }\n}\n\nconst ServiceSpecificationStatusAlert = React.memo(StatusAlert)\n\nexport default ServiceSpecificationStatusAlert\n","import React, { lazy } from \"react\"\nimport Suspense from \"./Suspense\"\nconst ReactMarkdown = lazy(() => import(\"react-markdown\"))\n\nexport default function Markdown(props: {\n    source: string\n    className?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    components?: Partial<any>\n}) {\n    const { source, ...others } = props\n    return (\n        <Suspense>\n            <ReactMarkdown {...others}>{source}</ReactMarkdown>\n        </Suspense>\n    )\n}\n","import { Typography } from \"@mui/material\"\nimport React, { ReactNode } from \"react\"\nimport CodeBlock from \"../CodeBlock\"\n\nexport default function Snippet(props: {\n    value: string | (() => string)\n    mode?: string\n    download?: string\n    actions?: ReactNode\n    url?: string\n    caption?: string | JSX.Element | JSX.Element[]\n}) {\n    const { value, mode, download, url, caption, actions } = props\n    const v: string = typeof value === \"function\" ? value() : value\n    const className = mode && `language-${mode === \"sts\" ? \"ts\" : mode}`\n    return (\n        <>\n            <CodeBlock\n                className={className}\n                downloadName={download}\n                downloadText={download && v}\n                actions={actions}\n                url={url}\n            >\n                {v}\n            </CodeBlock>\n            {caption && <Typography variant=\"caption\">{caption}</Typography>}\n        </>\n    )\n}\n","import { GridSize } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize\n    md?: GridSize\n    sm?: GridSize\n    lg?: GridSize\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(\n    itemCount?: number\n): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n    const hasDrawer = drawerType !== DrawerType.None\n\n    if (!drawerType && itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2:\n                return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3:\n                return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (hasDrawer) return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else\n        return {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            xl: 3,\n        }\n}\n","import { useState, useEffect } from \"react\"\nimport JDEvent from \"../../jacdac-ts/src/jdom/event\"\nimport { CHANGE } from \"../../jacdac-ts/src/jdom/constants\"\n\nexport default function useEventCount(event: JDEvent) {\n    const [count, setCount] = useState(event?.count || 0)\n    useEffect(\n        () =>\n            event?.subscribe(CHANGE, () => {\n                setCount(event.count)\n            }),\n        [event]\n    )\n\n    return count\n}\n"],"names":["React","useContext","FingerprintIcon","Chip","IconButton","PacketsContext","AppContext","DrawerType","Tooltip","IDChip","props","id","className","filter","packetFilter","setFilter","setPacketFilter","setDrawerType","ids","undefined","toString","filtered","indexOf","handleFilterClick","replace","trim","Packets","icon","title","Button","ServiceButton","service","onClick","others","name","styled","Card","CardContent","ControlReg","useChange","navigate","CardActions","DeviceCardHeader","useRegisterUnpackedValue","DeviceLostAlert","isInfrastructure","PREFIX","classes","root","bullet","pos","StyledCard","display","margin","transform","fontSize","marginBottom","navigateToService","spec","specification","shortId","DeviceDescription","device","register","_","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","services","srv","map","nodeId","useDeviceSpecification","useDeviceImage","CardMediaWithSkeleton","DeviceCardMedia","imageUrl","JD_SERVICE_INDEX_CTRL","CardHeader","Grid","Typography","Link","DeviceActions","DeviceName","identifierToUrlPath","DeviceAvatar","useRegister","DeviceFirmwareVersionChip","control","productIdentifierRegister","ProductIdentifier","productIdentifier","firmwareVersionRegister","FirmwareVersion","firmwareVersion","firmwareName","firmwares","find","fw","f","join","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","isNaN","showMedia","showAvatar","showSettings","showReset","deviceId","s","AutoGrid","spacing","Array","isArray","child","i","key","useMemo","isRegister","RegisterInput","SystemReg","ServiceRegisters","registerIdentifiers","showRegisterName","hideMissingValues","showTrends","registers","packets","pkt","identifier","r","reg","code","Reading","Badge","KindIcon","useEventCount","EventInput","event","showName","showDeviceName","count","isEvent","ServiceEvents","eventIdentifiers","showEventName","events","setNumber","sizeOfNumberFormat","CMD_SET_REG","JD_SERIAL_MAX_PAYLOAD_SIZE","Packet","clampToStorage","numberFormatFromStorageType","scaleFloatToInt","stringToUint8Array","toUTF8","packArguments","info","args","repeatIdx","numReps","argIdx","dst","buf","Uint8Array","fields","length","arg0","fld","startRepeats","arg1","type","arg","intVal","storage","Error","fmt","size","Math","abs","argCut","slice","set","cmd","from","kind","isCommand","InPipeReader","isReportOf","printPacket","serviceName","JacdacContext","CmdButton","hasPipeReport","CommandInput","command","setReports","bus","requiredArgLength","missingArguments","disabled","reportSpec","hasReport","p","handleClick","mounted","onlyHeader","reportPacket","sendCmdAwaitResponseAsync","decoded","inp","openCommand","sendPacketAsync","console","log","output","readAll","reports","ot","data","unmount","serviceClass","MembersInput","DecodedPacketItem","specifications","d","values","value","useState","List","ListItem","ServiceSpecificationStatusAlert","minWidth","ServiceCard","linkToService","showServiceName","showMemberName","commandIdentifier","commandArgs","setCommandArgs","hasCommandIdentifier","hasRegisterIdentifiers","hasEventIdentifiers","report","ri","useGridBreakpoints","StyledGrid","theme","DeviceList","showServiceButtons","devices","n","hasServiceClass","gridBreakpoints","kindName","KindChip","chipFilter","CategoryIcon","PacketMembersChip","members","label","packFormat","textDecoration","Tabs","Tab","TabPanel","Snippet","packInfo","serviceSpecificationFromClassIdentifier","PaperBox","PacketSpecificationSource","packetInfo","tab","setTab","handleTabChange","newValue","index","isStatic","useBooleans","useJDOM","buffers","Alert","Markdown","prettyMemberUnit","field","chip","Root","verticalAlign","MemberType","member","helperText","MembersType","repeatIndex","findIndex","m","beforeRepeat","afterRepeat","PacketSpecification","reportInfo","pipeReportInfo","showDevices","isCmd","optional","derived","StatusAlert","status","memo","lazy","Suspense","ReactMarkdown","source","CodeBlock","mode","download","url","caption","actions","v","itemCount","drawerType","hasDrawer","None","xs","sm","md","lg","xl","useEffect","CHANGE","setCount","subscribe"],"sourceRoot":""}