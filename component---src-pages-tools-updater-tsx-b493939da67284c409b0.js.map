{"version":3,"file":"component---src-pages-tools-updater-tsx-b493939da67284c409b0.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Bluetooth.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/DeleteForever.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Usb.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Wifi.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/buttons/ConnectButton.tsx","webpack://jacdac-docs/./src/components/buttons/ConnectButtons.tsx","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCard.tsx","webpack://jacdac-docs/./src/components/icons/SerialIcon.tsx","webpack://jacdac-docs/./src/components/icons/TransportIcon.tsx","webpack://jacdac-docs/./src/components/ui/Button.tsx","webpack://jacdac-docs/./src/components/ui/CircularProgressWithLabel.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/firmware/useFirmwareRepos.ts","webpack://jacdac-docs/./src/components/firmware/LocalFileFirmwareCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareCardGrid.tsx","webpack://jacdac-docs/./src/components/firmware/FlashDeviceButton.tsx","webpack://jacdac-docs/./src/components/UpdateDeviceList.tsx","webpack://jacdac-docs/./src/components/firmware/SafeBootAlert.tsx","webpack://jacdac-docs/./src/components/select/SelectDevice.tsx","webpack://jacdac-docs/./src/components/firmware/ManualFirmwareAlert.tsx","webpack://jacdac-docs/./src/components/tools/Flash.tsx","webpack://jacdac-docs/./src/pages/tools/updater.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.71 7.71L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88z\"\n}), 'Bluetooth');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 7v4h1v2h-3V5h2l-3-4-3 4h2v8H8v-2.07c.7-.37 1.2-1.08 1.2-1.93 0-1.21-.99-2.2-2.2-2.2-1.21 0-2.2.99-2.2 2.2 0 .85.5 1.56 1.2 1.93V13c0 1.11.89 2 2 2h3v3.05c-.71.37-1.2 1.1-1.2 1.95 0 1.22.99 2.2 2.2 2.2 1.21 0 2.2-.98 2.2-2.2 0-.85-.49-1.58-1.2-1.95V15h3c1.11 0 2-.89 2-2v-2h1V7h-4z\"\n}), 'Usb');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3c-1.65-1.66-4.34-1.66-6 0zm-4-4l2 2c2.76-2.76 7.24-2.76 10 0l2-2C15.14 9.14 8.87 9.14 5 13z\"\n}), 'Wifi');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@material-ui/core\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import React from \"react\"\nimport Button from \"../ui/Button\"\nimport Transport, {\n    ConnectionState,\n} from \"../../../jacdac-ts/src/jdom/transport/transport\"\nimport { Badge } from \"@material-ui/core\"\nimport IconButtonWithProgress from \"../ui/IconButtonWithProgress\"\nimport TransportIcon from \"../icons/TransportIcon\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\n\nexport default function ConnectButton(props: {\n    full?: boolean\n    className?: string\n    transparent?: boolean\n    specification?: jdspec.DeviceSpec\n    transport: Transport\n    onClick?: () => void\n}) {\n    const { full, className, transparent, transport, onClick, specification } =\n        props\n    const { type } = transport\n    const connectionState = useChange(transport, t => t.connectionState)\n    const showDisconnect =\n        connectionState == ConnectionState.Connected ||\n        connectionState == ConnectionState.Disconnecting\n    const inProgress =\n        connectionState == ConnectionState.Connecting ||\n        connectionState == ConnectionState.Disconnecting\n    const { mobile } = useMediaQueries()\n    const small = full !== true && (!full || mobile)\n    const disabled =\n        connectionState != ConnectionState.Connected &&\n        connectionState != ConnectionState.Disconnected\n    const handleClick = showDisconnect\n        ? async () => {\n              onClick?.()\n              await transport.disconnect()\n          }\n        : async () => {\n              onClick?.()\n              await transport.connect()\n          }\n    const icon = (\n        <Badge color=\"primary\" variant=\"dot\" invisible={!showDisconnect}>\n            <TransportIcon type={transport.type} />\n        </Badge>\n    )\n    const label = showDisconnect\n        ? `disconnect from ${type}`\n        : `connect to ${specification?.name || type}`\n    const title = showDisconnect ? `disconnect` : `connect`\n    const trackName = `transport.connect.${type}`\n    const trackProperties = {\n        transport: type,\n    }\n\n    if (small)\n        return (\n            <span>\n                <IconButtonWithProgress\n                    aria-label={label}\n                    title={label}\n                    color={transparent ? \"inherit\" : \"primary\"}\n                    className={className}\n                    disabled={disabled}\n                    indeterminate={inProgress}\n                    onClick={handleClick}\n                >\n                    {icon}\n                </IconButtonWithProgress>\n            </span>\n        )\n    else\n        return (\n            <Button\n                trackName={trackName}\n                trackProperties={trackProperties}\n                aria-label={label}\n                title={label}\n                size=\"small\"\n                variant={transparent ? \"outlined\" : \"contained\"}\n                color={transparent ? \"inherit\" : \"primary\"}\n                className={className}\n                startIcon={icon}\n                disabled={disabled}\n                onClick={handleClick}\n            >\n                {title}\n            </Button>\n        )\n}\n","import React, { useContext, useState } from \"react\"\nimport ConnectButton from \"./ConnectButton\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport useChange from \"../../jacdac/useChange\"\nimport Button from \"../ui/Button\"\nimport AppContext from \"../AppContext\"\nimport JacdacIcon from \"../icons/JacdacIcon\"\n\nfunction DisconnectedButton(props: {\n    full?: \"disconnected\" | \"always\"\n    className?: string\n    transparent?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { mobile } = useMediaQueries()\n    const { toggleShowConnectTransportDialog } = useContext(AppContext)\n    const { full, transparent, className } = props\n    const [working, setWorking] = useState(false)\n    const small = !full || mobile\n    const trackName = `transport.connect.start`\n\n    const handleConnect = async () => {\n        try {\n            setWorking(true)\n            await bus.connect(true)\n            if (!bus.connected) toggleShowConnectTransportDialog()\n        } finally {\n            setWorking(false)\n        }\n    }\n\n    if (small)\n        return (\n            <span>\n                <IconButtonWithTooltip\n                    title={\"Connect to a physical device\"}\n                    color={transparent ? \"inherit\" : \"primary\"}\n                    className={className}\n                    onClick={handleConnect}\n                    disabled={working}\n                >\n                    <JacdacIcon />\n                </IconButtonWithTooltip>\n            </span>\n        )\n    else\n        return (\n            <Button\n                trackName={trackName}\n                title=\"Connect to a physical device\"\n                size=\"small\"\n                variant={transparent ? \"outlined\" : \"contained\"}\n                color={transparent ? \"inherit\" : \"primary\"}\n                className={className}\n                startIcon={<JacdacIcon />}\n                onClick={handleConnect}\n                disabled={working}\n            >\n                Connect\n            </Button>\n        )\n}\n\nexport default function ConnectButtons(props: {\n    full?: \"disconnected\" | \"always\"\n    className?: string\n    transparent?: boolean\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { full, ...rest } = props\n    const { transports } = bus\n    const disconnected = useChange(bus, _ => _.disconnected)\n\n    if (!transports?.length) return null\n\n    return disconnected ? (\n        <DisconnectedButton {...props} />\n    ) : (\n        <>\n            {transports\n                .filter(tr => !tr.disconnected)\n                .map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        {...rest}\n                        full={full === \"always\"}\n                    />\n                ))}\n        </>\n    )\n}\n","import { ButtonProps } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@material-ui/core/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@material-ui/core/CardContent\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"../ServiceButton\"\nimport useChange from \"../../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { CardActions, createStyles } from \"@material-ui/core\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {},\n        bullet: {\n            display: \"inline-block\",\n            margin: \"0 2px\",\n            transform: \"scale(0.8)\",\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    })\n)\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n    const classes = useStyles()\n    const services = useChange(device, () =>\n        device.services().filter(srv => !isInfrastructure(srv.specification))\n    )\n\n    return (\n        <Card className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.id}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </Card>\n    )\n}\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function SerialIcon(props: SvgIconProps) {\n    return <SvgIcon titleAccess=\"Serial port\" {...props}>\n        <path d=\"M20.605,7.172l-17.21,-0c0,-0 -0.299,0.052 -0.507,0.097c-0.993,0.213 -1.745,1.03 -1.873,2.039l-0.009,0.126c-0.03,0.586 0.059,1.173 0.261,1.724c0.47,1.283 1.396,3.811 1.489,4.066l0.083,0.187l-0.004,-0.009c0.371,0.802 1.174,1.315 2.057,1.315l14.216,-0c0.883,-0 1.686,-0.513 2.057,-1.315l0.079,-0.178c0.093,-0.255 1.02,-2.783 1.489,-4.066c0.201,-0.547 0.29,-1.129 0.262,-1.711l-0.009,-0.139c-0.129,-1.009 -0.88,-1.826 -1.874,-2.039l-0.397,-0.085c-0.035,-0.008 -0.072,-0.012 -0.11,-0.012Zm-17.156,1.023l17.102,-0l0.346,0.074c0.566,0.121 0.994,0.584 1.072,1.156l0.005,0.068c0.02,0.452 -0.048,0.896 -0.201,1.314l-1.483,4.049l-0.054,0.119c-0.204,0.439 -0.644,0.719 -1.128,0.719l-14.216,0c-0.484,0 -0.925,-0.281 -1.129,-0.72l-0.053,-0.118l-1.483,-4.049c-0.154,-0.422 -0.223,-0.871 -0.2,-1.32l0.004,-0.062c0.078,-0.572 0.506,-1.035 1.072,-1.156l0.346,-0.074Zm0.326,6.805l0.002,0.008l-0.002,-0.008Zm6.531,-2.571c0.47,-0 0.852,0.382 0.852,0.852c-0,0.47 -0.382,0.852 -0.852,0.852c-0.471,0 -0.853,-0.382 -0.853,-0.852c0,-0.47 0.382,-0.852 0.853,-0.852Zm-3.389,-0c0.47,-0 0.852,0.382 0.852,0.852c-0,0.47 -0.382,0.852 -0.852,0.852c-0.471,0 -0.853,-0.382 -0.853,-0.852c0,-0.47 0.382,-0.852 0.853,-0.852Zm6.777,-0c0.471,-0 0.853,0.382 0.853,0.852c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,0 -0.852,-0.382 -0.852,-0.852c0,-0.47 0.382,-0.852 0.852,-0.852Zm3.389,-0c0.471,-0 0.853,0.382 0.853,0.852c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,0 -0.852,-0.382 -0.852,-0.852c0,-0.47 0.382,-0.852 0.852,-0.852Zm-11.861,-2.674c0.471,0 0.853,0.382 0.853,0.853c-0,0.47 -0.382,0.852 -0.853,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.471,0 0.852,0.382 0.852,0.853c0,0.47 -0.381,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.47,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.382,-0.853 0.852,-0.853Zm3.389,0c0.47,0 0.852,0.382 0.852,0.853c0,0.47 -0.382,0.852 -0.852,0.852c-0.471,-0 -0.852,-0.382 -0.852,-0.852c-0,-0.471 0.381,-0.853 0.852,-0.853Zm-16.752,-0.26l-0.003,0.029l0.003,-0.029Z\" />\n    </SvgIcon>\n}\n\n","import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport UsbIcon from \"@material-ui/icons/Usb\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport BluetoothIcon from \"@material-ui/icons/Bluetooth\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport WifiIcon from \"@material-ui/icons/Wifi\"\nimport {\n    BLUETOOTH_TRANSPORT,\n    PACKETIO_TRANSPORT,\n    SERIAL_TRANSPORT,\n    USB_TRANSPORT,\n    WEBSOCKET_TRANSPORT,\n    VIRTUAL_DEVICE_NODE_NAME,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport KindIcon from \"../KindIcon\"\nimport SerialIcon from \"./SerialIcon\"\n\nexport default function TransportIcon(props: {\n    type: string\n    className?: string\n}) {\n    const { type, className } = props\n    switch (type) {\n        case PACKETIO_TRANSPORT:\n        case USB_TRANSPORT:\n            return <UsbIcon className={className} />\n        case BLUETOOTH_TRANSPORT:\n            return <BluetoothIcon className={className} />\n        case SERIAL_TRANSPORT:\n            return <SerialIcon className={className} />\n        case WEBSOCKET_TRANSPORT:\n            return <WifiIcon className={className} />\n        default:\n            return (\n                <KindIcon\n                    kind={VIRTUAL_DEVICE_NODE_NAME}\n                    className={className}\n                />\n            )\n    }\n}\n","import React from \"react\"\nimport { ButtonProps } from \"@material-ui/core\"\nimport { Button as GatsbyButton } from \"gatsby-theme-material-ui\"\nimport useAnalytics, { EventProperties } from \"../hooks/useAnalytics\"\n\nexport default function Button(\n    props: {\n        trackName?: string\n        trackProperties?: EventProperties\n    } & ButtonProps\n) {\n    const { trackName, trackProperties, onClick, ...rest } = props\n    const { trackEvent } = useAnalytics()\n    const handleClick =\n        !trackName || !trackEvent || !onClick\n            ? onClick\n            : ev => {\n                  trackEvent(trackName, trackProperties)\n                  onClick(ev)\n              }\n    return <GatsbyButton onClick={handleClick} {...rest} />\n}\n","import React from \"react\"\nimport { CircularProgressProps, Box, CircularProgress, Typography } from \"@material-ui/core\";\n\nexport default function CircularProgressWithLabel(props: CircularProgressProps & { value: number }) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: { label: ReactNode } & SwitchProps\n) {\n    const { label, ...rest } = props\n    return <FormControlLabel control={<Switch {...rest} />} label={label} />\n}\n","import { useContext, useState } from \"react\";\nimport { deviceSpecificationFromProductIdentifier, deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useEffectAsync from \"../useEffectAsync\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { BootloaderCmd, ControlReg, DEVICE_CHANGE, SRV_BOOTLOADER } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useEventRaised from \"../../jacdac/useEventRaised\";\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\";\n\nexport default function useFirmwareRepos(showAllRepos?: boolean) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [repos, setRepos] = useState<string[]>([])\n\n    const devices = useEventRaised(DEVICE_CHANGE, bus, () => bus.devices({ announced: true, ignoreInfrastructure: true }))\n    const bootloaders = devices.filter(device => device.hasService(SRV_BOOTLOADER));\n    const registers = devices\n        .filter(device => !device.hasService(SRV_BOOTLOADER)) // not a bootloader\n        .map(device => device.service(0)?.register(ControlReg.ProductIdentifier))\n        .filter(reg => !!reg);\n\n    useEffectAsync(async (mounted) => {\n        let repos: string[] = [];\n        if (showAllRepos)\n            repos = deviceSpecifications().map(spec => spec.repo);\n        else {\n            const productIdentifiers: number[] = [];\n            // ask firmware registers\n            for (const register of registers) {\n                await register.refresh(true)\n                const productIdentifier = register.intValue;\n                if (productIdentifier !== undefined && productIdentifiers.indexOf(productIdentifier) < 0)\n                    productIdentifiers.push(productIdentifier);\n            }\n\n            // ask bootloaders\n            for (const bootloader of bootloaders) {\n                const boot = bootloader.services({ serviceClass: SRV_BOOTLOADER })[0];\n                const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n                try {\n                    const resp = await boot.sendCmdAwaitResponseAsync(bl_announce);\n                    const [, , , productIdentifier] = resp.jdunpack<[number, number, number, number]>(\"u32 u32 u32 u32\");\n                    if (productIdentifier !== undefined && productIdentifiers.indexOf(productIdentifier) < 0)\n                        productIdentifiers.push(productIdentifier);\n                }\n                catch (e) {\n                    console.warn(`bootloader product identifier failed`, e)\n                }\n            }\n            repos = productIdentifiers.map(fw => deviceSpecificationFromProductIdentifier(fw)?.repo)\n                .filter(repo => !!repo);\n        }\n        if (mounted) {\n            const urepos = unique(repos);\n            setRepos(urepos)\n        }\n    }, [devices.map(dev => dev.id).join(), registers.map(reg => reg.id).join(), showAllRepos])\n    return repos;\n}","import React, { lazy, useState } from \"react\"\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    ListItem,\n    List,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\"\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\"\nimport Alert from \"../ui/Alert\"\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst LOCAL_FILE_SLUG = \"local file\"\n\nexport default function LocalFileFirmwareCard() {\n    const slug = LOCAL_FILE_SLUG\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const disabled = downloading\n    const version = firmwareBlobs?.[0].version\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setDownloading(true)\n                await setFirmwareFile(undefined, file)\n            } finally {\n                setDownloading(false)\n            }\n        }\n    }\n\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(undefined, undefined)\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader title={slug} />\n            <CardContent>\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                {version && (\n                    <Typography variant=\"body2\">\n                        version <code>{version}</code>\n                    </Typography>\n                )}\n                {!!firmwareBlobs?.length && (\n                    <List dense>\n                        {firmwareBlobs.map(blob => (\n                            <ListItem key={blob.productIdentifier}>\n                                <ListItemText\n                                    primary={blob.name}\n                                    secondary={`0x${blob.productIdentifier.toString(\n                                        16\n                                    )}`}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                )}\n            </CardContent>\n            <CardActions>\n                {!downloading && (\n                    <Suspense>\n                        <ImportButton\n                            text={\"Import UF2 file\"}\n                            onFilesUploaded={handleFiles}\n                        />\n                    </Suspense>\n                )}\n                {!downloading && firmwareBlobs?.length && (\n                    <Button\n                        disabled={disabled}\n                        variant=\"text\"\n                        arial-label={\"Clear\"}\n                        onClick={handleClear}\n                    >\n                        Clear\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport FirmwareCard from \"./FirmwareCard\"\n// tslint:disable-next-line: no-submodule-imports\nimport useFirmwareRepos from \"./useFirmwareRepos\"\nimport LocalFileFirmwareCard from \"./LocalFileFirmwareCard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FirmwareCardGrid() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const firmwareRepos = useFirmwareRepos(safeBoot)\n\n    return (\n        <Grid container spacing={2}>\n            <Grid {...gridBreakpoints} item key=\"localfile\">\n                <LocalFileFirmwareCard />\n            </Grid>\n            {firmwareRepos.map(firmwareRepo => (\n                <Grid\n                    {...gridBreakpoints}\n                    item\n                    key={`firmwarerepo${firmwareRepo}`}\n                >\n                    <FirmwareCard slug={firmwareRepo} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Button } from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\nimport React, { useContext, useState } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    flashFirmwareBlob,\n    updateApplicable,\n    FirmwareBlob,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport CircularProgressWithLabel from \"../ui/CircularProgressWithLabel\"\nimport AppContext from \"../AppContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMounted from \"./../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\n\nexport function FlashDeviceButton(props: {\n    device: JDDevice\n    blob: FirmwareBlob\n    ignoreFirmwareCheck?: boolean\n}) {\n    const { device, blob, ignoreFirmwareCheck } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const { trackEvent, trackError } = useAnalytics()\n    const [progress, setProgress] = useState(0)\n    const specification = useDeviceSpecification(device)\n    const firmwareInfo = useChange(device, d => d?.firmwareInfo)\n    const update =\n        ignoreFirmwareCheck ||\n        (blob?.version &&\n            firmwareInfo?.version &&\n            updateApplicable(firmwareInfo, blob))\n    const upToDate =\n        blob?.version &&\n        firmwareInfo?.version &&\n        blob.version === firmwareInfo.version\n    const flashing = useChange(device, d => !!d?.flashing)\n    const unsupported = specification && !specification.repo\n    const missing = !device || !blob\n    const disabled = flashing\n    const color = update && !upToDate ? \"primary\" : \"inherit\"\n    const mounted = useMounted()\n\n    const handleFlashing = async () => {\n        if (device.flashing) return\n        const props = {\n            productId: firmwareInfo.productIdentifier,\n            name: firmwareInfo.name,\n            version: firmwareInfo.version,\n        }\n        trackEvent(\"flash.start\", props)\n        try {\n            setProgress(0)\n            device.flashing = true // don't refresh registers while flashing\n            const updateCandidates = [firmwareInfo]\n            await flashFirmwareBlob(\n                bus,\n                blob,\n                updateCandidates,\n                ignoreFirmwareCheck,\n                prog => {\n                    if (mounted()) setProgress(prog)\n                }\n            )\n            trackEvent(\"flash.success\", props)\n        } catch (e) {\n            trackError(e, props)\n            trackEvent(\"flash.error\", props)\n            if (mounted()) setError(e)\n        } finally {\n            device.flashing = false\n        }\n    }\n\n    // tslint:disable-next-line: react-this-binding-issue\n    return unsupported ? (\n        <Alert severity=\"info\">No registered firmware</Alert>\n    ) : missing ? (\n        <Alert severity=\"info\">No firmware available</Alert>\n    ) : flashing ? (\n        <CircularProgressWithLabel value={progress} />\n    ) : firmwareInfo || update ? (\n        <>\n            {upToDate ? (\n                <Alert severity=\"success\">Up to date!</Alert>\n            ) : (\n                <Alert severity=\"warning\">{blob.version} available</Alert>\n            )}\n            {(!upToDate || ignoreFirmwareCheck) && firmwareInfo && (\n                <Button\n                    title={`Flash ${blob.version}`}\n                    disabled={disabled}\n                    variant=\"contained\"\n                    color={color}\n                    onClick={handleFlashing}\n                >\n                    Flash\n                </Button>\n            )}\n        </>\n    ) : (\n        <Alert severity=\"info\">No firmware available</Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { SRV_BOOTLOADER } from \"../../jacdac-ts/src/jdom/constants\"\nimport JDDevice from \"../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport DeviceCard from \"./devices/DeviceCard\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport useChange from \"../jacdac/useChange\"\nimport useDevices from \"./hooks/useDevices\"\nimport { FlashDeviceButton } from \"./firmware/FlashDeviceButton\"\n\nfunction UpdateDeviceCard(props: { device: JDDevice }) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { device } = props\n    const blobs = useChange(bus, _ => _.firmwareBlobs)\n    const firmwareInfo = useChange(device, d => d.firmwareInfo)\n    const blob =\n        firmwareInfo &&\n        blobs?.find(b => firmwareInfo.productIdentifier == b.productIdentifier)\n\n    return (\n        <DeviceCard\n            device={device}\n            showFirmware={true}\n            // tslint:disable-next-line: react-this-binding-issue\n            action={<FlashDeviceButton device={device} blob={blob} />}\n        />\n    )\n}\n\nexport default function UpdateDeviceList() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints(3)\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const devices = useDevices(\n        {\n            announced: true,\n            ignoreInfrastructure: true,\n            ignoreSimulators: true,\n        },\n        [safeBoot]\n    )\n        .filter(dev => safeBoot || !dev.hasService(SRV_BOOTLOADER))\n        .sort(\n            (l, r) => -(l.productIdentifier || 0) + (r.productIdentifier || 0)\n        )\n\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <Grid key={device.id} item {...gridBreakpoints}>\n                    <UpdateDeviceCard device={device} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Box, Button, Typography } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\n// tslint:disable-next-line: match-default-export-name tslint:disable-next-line: no-submodule-imports\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\"\nimport AppContext from \"../AppContext\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\n\nexport default function SafeBootAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const [safeBoot, setSafeBoot] = useState(bus.safeBoot)\n    const firmwares = db?.firmwares\n\n    const handleRecovery = async () => {\n        const v = !safeBoot\n        setSafeBoot(v)\n    }\n    const handleClear = async () => {\n        await firmwares.clear()\n        enqueueSnackbar(\"firmwares cleared\", \"info\")\n    }\n\n    // turn on and off safeboot mode\n    useEffect(() => {\n        bus.safeBoot = safeBoot\n        return () => {\n            bus.safeBoot = false\n        }\n    }, [safeBoot])\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={safeBoot}\n                    onChange={handleRecovery}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            recovery mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        If your module is malfunctioning from the start, you can\n                        flash it in bootloader mode. Turn on recovery mode and\n                        unplug/replug any malfunctioning device to switch it to\n                        bootloader mode (glowing status LED). Once your module\n                        is flashed, turn off recovery mode and unplug/replug\n                        your module again.\n                    </Typography>\n                </Box>\n            </Alert>\n            {safeBoot && (\n                <Alert severity=\"warning\">\n                    <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        disabled={!firmwares}\n                        onClick={handleClear}\n                        startIcon={<DeleteForeverIcon />}\n                    >\n                        clear cache\n                    </Button>\n                    <Box mr={1}>\n                        <Typography component=\"span\" variant=\"caption\">\n                            Delete all firmware cached in the browser. The\n                            firmware will have to be deleted again from this\n                            interface.\n                        </Typography>\n                    </Box>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { MenuItem } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectDevice(props: {\n    devices: JDDevice[]\n    deviceId: string\n    onChange: (newDeviceId: string) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { devices, deviceId, onChange } = props\n\n    const handleDeviceChange = async (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        onChange(id)\n        const device = bus.node(id) as JDDevice\n        await device?.identify()\n    }\n    return (\n        <SelectWithLabel\n            helperText=\"choose a device\"\n            value={deviceId}\n            onChange={handleDeviceChange}\n            disabled={!devices?.length}\n        >\n            {devices?.map(dev => (\n                <MenuItem key={dev.id} value={dev.id}>\n                    {dev.describe()}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Box, Grid, MenuItem, Typography } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport useDevices from \"../hooks/useDevices\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { FlashDeviceButton } from \"./FlashDeviceButton\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport SelectDevice from \"../select/SelectDevice\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst fwid = (fw: FirmwareBlob) =>\n    fw ? `${fw.store},${fw.productIdentifier},${fw.version}` : \"\"\n\nfunction ManualFirmware() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreInfrastructure: true,\n        ignoreSimulators: true,\n    })\n    const firmwares = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = unique(firmwares.map(fw => fw.store))\n    const [deviceId, setDeviceId] = useState(devices?.[0]?.id)\n    const [firmwareId, setFirmwareId] = useState<string>(fwid(firmwares?.[0]))\n    const [store, setStore] = useState<string>(stores?.[0] || \"\")\n\n    const handleDeviceChange = (newId: string) => setDeviceId(newId)\n    const handleStoreChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const store = ev.target.value as string\n        setStore(store)\n    }\n    const handleFirmwareChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        setFirmwareId(id)\n    }\n\n    const device = bus.node(deviceId) as JDDevice\n    const blob = firmwares.find(fw => fwid(fw) === firmwareId)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SelectDevice\n                    devices={devices}\n                    deviceId={deviceId}\n                    onChange={handleDeviceChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={1}>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a firmware\"\n                            value={store}\n                            onChange={handleStoreChange}\n                        >\n                            {stores?.map(store => (\n                                <MenuItem key={store} value={store}>\n                                    {store}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a module\"\n                            value={firmwareId}\n                            onChange={handleFirmwareChange}\n                        >\n                            {firmwares\n                                ?.filter(fw => fw.store === store)\n                                .map(fw => (\n                                    <MenuItem key={fwid(fw)} value={fwid(fw)}>\n                                        {fw.name} &nbsp;\n                                        <Typography variant=\"caption\">\n                                            {fw.version}, &nbsp;\n                                            {`0x${fw.productIdentifier.toString(\n                                                16\n                                            )}`}\n                                        </Typography>\n                                    </MenuItem>\n                                ))}\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <FlashDeviceButton\n                    device={device}\n                    blob={blob}\n                    ignoreFirmwareCheck={true}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ManualFirmwareAlert() {\n    const [enabled, setEnabled] = useState(false)\n    const handleToggle = async () => {\n        const v = !enabled\n        setEnabled(v)\n    }\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={enabled}\n                    onChange={handleToggle}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            manual mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        Manually select which firmware to upload on your device.\n                    </Typography>\n                </Box>\n            </Alert>\n            {enabled && (\n                <Alert severity=\"warning\">\n                    <ManualFirmware />\n                </Alert>\n            )}\n        </>\n    )\n}\n","import {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Tab,\n    Tabs,\n} from \"@material-ui/core\"\nimport React, { Fragment, useContext, useEffect, useState } from \"react\"\nimport TabPanel from \"../ui/TabPanel\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport FirmwareCardGrid from \"../firmware/FirmwareCardGrid\"\n// tslint:disable-next-line: no-submodule-imports\nimport UpdateDeviceList from \"../UpdateDeviceList\"\nimport SafeBootAlert from \"../firmware/SafeBootAlert\"\nimport ManualFirmwareAlert from \"../firmware/ManualFirmwareAlert\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useFirmwareBlobs from \"../firmware/useFirmwareBlobs\"\nimport GridHeader from \"../ui/GridHeader\"\nimport { groupBy } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    ControlCmd,\n    DEVICE_ANNOUNCE,\n    FLASH_MAX_DEVICES,\n    SRV_CONTROL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport useChange from \"../../jacdac/useChange\"\nimport Alert from \"../ui/Alert\"\nimport { AlertTitle } from \"@material-ui/lab\"\n\nfunction FlashDiagnostics() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const blobs = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = groupBy(blobs, blob => blob.store)\n    return (\n        <Grid container spacing={2}>\n            {Object.entries(stores).map(([store, blobs]) => (\n                <Fragment key={store}>\n                    <GridHeader title={store} />\n                    {blobs?.map(blob => (\n                        <Grid item key={blob.store + blob.productIdentifier}>\n                            <Card>\n                                <CardHeader\n                                    title={blob.name}\n                                    subheader={blob.version}\n                                />\n                                <CardContent>\n                                    pid: 0x{blob.productIdentifier.toString(16)}\n                                    , {blob.pages.length} pages\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Fragment>\n            ))}\n        </Grid>\n    )\n}\n\nexport default function Flash() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [tab, setTab] = useState(0)\n    const { throttled } = useFirmwareBlobs()\n    const devices = useChange(bus, _ => _.devices({ physical: true }))\n\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    // put brains into proxy mode\n    useEffect(() => {\n        const forceProxy = () => {\n            console.debug(`jacdac: force clients to proxy mode`)\n            const pkt = Packet.onlyHeader(ControlCmd.Proxy)\n            pkt.sendAsMultiCommandAsync(bus, SRV_CONTROL)\n        }\n        const unsub = bus.subscribe(DEVICE_ANNOUNCE, forceProxy)\n        forceProxy()\n        return unsub\n    }, [])\n\n    return (\n        <Box mb={2}>\n            {throttled && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Try again later...</AlertTitle>\n                    Oops, it looks like we have been polling firmware too much\n                    from GitHub. Please try again later.\n                </Alert>\n            )}\n            {devices?.length > FLASH_MAX_DEVICES && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Too many connected devices</AlertTitle>\n                    Please unplug some of your devices before updating.\n                </Alert>\n            )}\n            <ConnectAlert />\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Update firmware of modules\"\n            >\n                <Tab label={`Updates`} />\n                <Tab label={`Firmwares`} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <UpdateDeviceList />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <FirmwareCardGrid />\n            </TabPanel>\n            <SafeBootAlert />\n            <ManualFirmwareAlert />\n            {Flags.diagnostics && <FlashDiagnostics />}\n        </Box>\n    )\n}\n","import React from \"react\"\nimport Flash from \"../../components/tools/Flash\"\n\nexport default function Page() {\n    return <>\n        <h1>Firmware Updater</h1>\n        <p>\n        This page allows you to update your Jacdac module with new firmware. Find the latest UF2 firmware file from your manufacturer \nand import it with the button below.\n            \n        </p>\n        <Flash />\n    </>\n}"],"names":["Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","ConnectButtons","useDevices","NoSsrConnectAlert","props","serviceClass","closeable","bus","transports","devices","ignoreInfrastructure","spec","length","name","ConnectAlert","Button","ConnectionState","Badge","IconButtonWithProgress","TransportIcon","useChange","useMediaQueries","ConnectButton","full","className","transparent","transport","onClick","specification","type","connectionState","t","showDisconnect","Connected","Disconnecting","inProgress","Connecting","mobile","small","disabled","Disconnected","handleClick","disconnect","connect","icon","label","title","trackName","trackProperties","useState","IconButtonWithTooltip","AppContext","JacdacIcon","DisconnectedButton","toggleShowConnectTransportDialog","working","setWorking","handleConnect","connected","rest","disconnected","_","filter","tr","map","ServiceButton","service","others","makeStyles","Card","CardContent","ControlReg","navigate","CardActions","createStyles","DeviceCardHeader","useRegisterUnpackedValue","DeviceLostAlert","isInfrastructure","useStyles","root","bullet","display","margin","transform","fontSize","pos","marginBottom","navigateToService","shortId","DeviceDescription","device","register","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","classes","services","srv","id","SvgIcon","SerialIcon","UsbIcon","BluetoothIcon","WifiIcon","BLUETOOTH_TRANSPORT","PACKETIO_TRANSPORT","SERIAL_TRANSPORT","USB_TRANSPORT","WEBSOCKET_TRANSPORT","VIRTUAL_DEVICE_NODE_NAME","KindIcon","GatsbyButton","useAnalytics","trackEvent","ev","CircularProgress","Typography","CircularProgressWithLabel","Math","round","value","Chip","Grid","clsx","theme","hr","background","palette","text","start","width","spacing","GridHeader","count","variant","undefined","FormControlLabel","Switch","SwitchWithLabel","deviceSpecificationFromProductIdentifier","deviceSpecifications","useEffectAsync","unique","BootloaderCmd","DEVICE_CHANGE","SRV_BOOTLOADER","useEventRaised","Packet","useFirmwareRepos","showAllRepos","repos","setRepos","announced","bootloaders","hasService","registers","ProductIdentifier","reg","mounted","repo","productIdentifiers","refresh","productIdentifier","intValue","indexOf","push","bootloader","boot","bl_announce","onlyHeader","Info","resp","sendCmdAwaitResponseAsync","jdunpack","e","console","warn","fw","urepos","dev","join","lazy","CardHeader","ListItem","List","ListItemText","useFirmwareBlob","Suspense","ImportButton","LOCAL_FILE_SLUG","LocalFileFirmwareCard","slug","downloading","setDownloading","error","setError","setFirmwareFile","firmwareBlobs","version","handleFiles","files","file","handleClear","blob","toString","useGridBreakpoints","FirmwareCard","FirmwareCardGrid","gridBreakpoints","safeBoot","b","firmwareRepos","firmwareRepo","flashFirmwareBlob","updateApplicable","useMounted","useDeviceSpecification","FlashDeviceButton","ignoreFirmwareCheck","trackError","progress","setProgress","firmwareInfo","d","update","upToDate","flashing","unsupported","missing","color","handleFlashing","productId","updateCandidates","prog","UpdateDeviceCard","blobs","find","UpdateDeviceList","ignoreSimulators","sort","l","r","useEffect","DbContext","DeleteForeverIcon","SafeBootAlert","db","enqueueSnackbar","setSafeBoot","firmwares","handleRecovery","v","clear","MenuItem","SelectWithLabel","SelectDevice","deviceId","onChange","handleDeviceChange","target","node","identify","describe","fwid","store","ManualFirmware","stores","setDeviceId","firmwareId","setFirmwareId","setStore","newId","handleStoreChange","handleFirmwareChange","ManualFirmwareAlert","enabled","setEnabled","handleToggle","Tab","Tabs","Fragment","TabPanel","Flags","useFirmwareBlobs","groupBy","ControlCmd","DEVICE_ANNOUNCE","FLASH_MAX_DEVICES","SRV_CONTROL","AlertTitle","FlashDiagnostics","Object","entries","pages","Flash","tab","setTab","throttled","physical","handleTabChange","event","newValue","forceProxy","debug","pkt","Proxy","sendAsMultiCommandAsync","unsub","subscribe","diagnostics","Page"],"sourceRoot":""}