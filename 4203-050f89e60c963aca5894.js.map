{"version":3,"file":"4203-050f89e60c963aca5894.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Fullscreen.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Maximize.js","webpack://jacdac-docs/./node_modules/@material-ui/icons/Minimize.js","webpack://jacdac-docs/./src/components/ui/WebCam.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 3h18v2H3z\"\n}), 'Maximize');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h12v2H6z\"\n}), 'Minimize');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/media-has-caption */\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    createStyles,\n    FormControl,\n    makeStyles,\n    MenuItem,\n    Select,\n} from \"@material-ui/core\"\nimport React, {\n    ChangeEvent,\n    lazy,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport useEffectAsync from \"../useEffectAsync\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport useMounted from \"../hooks/useMounted\"\nimport Suspense from \"./Suspense\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport AppContext from \"../AppContext\"\nimport { Alert } from \"@material-ui/lab\"\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\"\nimport MinimizeIcon from \"@material-ui/icons/Minimize\"\nimport MaximizeIcon from \"@material-ui/icons/Maximize\"\nconst Draggable = lazy(() => import(\"react-draggable\"))\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cardContainer: {\n            zIndex: 1101,\n            position: \"absolute\",\n            right: \"5rem\",\n            bottom: \"5rem\",\n        },\n        card: {\n            \"& .hostedcontainer\": {\n                position: \"relative\",\n                width: \"40vw\",\n            },\n            \"& video\": {\n                border: \"none\",\n                position: \"relative\",\n                width: \"100%\",\n                height: \"100%\",\n            },\n        },\n    })\n)\n\nasync function requestVideoStream() {\n    // first ask for permission from ther user so that\n    // labels are populated in enumerateDevices\n    return await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: true,\n    })\n}\n\nexport default function WebCam() {\n    const { setShowWebCam } = useContext(AppContext)\n    const [minimize, setMinimize] = useState(false)\n    const [devices, setDevices] = useState<MediaDeviceInfo[]>()\n    const [deviceId, setDeviceId] = useLocalStorage(\"webcam_deviceid\", \"\")\n    const nodeRef = useRef<HTMLSpanElement>()\n    const streamRef = useRef<MediaStream>()\n    const videoRef = useRef<HTMLVideoElement>()\n    const [settingsOpen, setSettingsOpen] = useState(!deviceId)\n    const mounted = useMounted()\n    const classes = useStyles()\n    const supportsFullScreen =\n        typeof document !== \"undefined\" && !!document.fullscreenEnabled\n\n    const handleClose = () => setShowWebCam(false)\n    const handleMinimize = () => setMinimize(v => !v)\n    const handleSettings = () => setSettingsOpen(newValue => !newValue)\n    const handleDeviceChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => setDeviceId(ev.target.value as any as string)\n    const handleFullScreen = () => videoRef.current?.requestFullscreen()\n    const stop = () => {\n        const stream = streamRef.current\n        if (stream) {\n            try {\n                const tracks = stream.getTracks()\n                if (tracks) tracks.forEach(track => track.stop())\n            } catch (e) {\n                console.debug(e)\n            }\n            streamRef.current = undefined\n        }\n        const video = videoRef.current\n        if (video) {\n            try {\n                video.srcObject = undefined\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n    }\n\n    // start camera\n    useEffectAsync(async () => {\n        console.debug(`greenscreen: start`)\n        // deviceId is \"\" if green screen selected\n        if (deviceId) {\n            console.debug(`greenscreen: stream acquired`)\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({\n                    video: {\n                        width: { ideal: 1920 },\n                        height: { ideal: 1080 },\n                        advanced: [{ deviceId: deviceId }],\n                    },\n                    audio: false,\n                })\n                streamRef.current = stream\n                const video = videoRef.current\n                video.srcObject = stream\n                video.play()\n\n                if (mounted()) setSettingsOpen(false)\n            } catch (e) {\n                console.debug(`greenscreen: play failed`)\n                console.error(e)\n                if (mounted()) setDeviceId(undefined)\n            }\n        }\n    }, [deviceId])\n\n    const updateDevices = async () => {\n        try {\n            // enumerate devices\n            const devices = await navigator.mediaDevices.enumerateDevices()\n            const webcams = devices.filter(\n                device => device.kind == \"videoinput\"\n            )\n            if (mounted()) {\n                setDevices(webcams)\n                if (!webcams.find(webcam => webcam.deviceId === deviceId)) {\n                    const did = webcams[0]?.deviceId\n                    setDeviceId(did)\n                }\n            }\n        } catch (e) {\n            if (mounted()) setDevices([])\n        }\n    }\n\n    // startup\n    useEffectAsync(async () => {\n        // first ask for permission from ther user so that\n        // labels are populated in enumerateDevices\n        await requestVideoStream()\n        await updateDevices()\n    }, [])\n\n    useEffect(() => {\n        navigator.mediaDevices.addEventListener(\"devicechange\", updateDevices)\n        return () =>\n            navigator.mediaDevices.removeEventListener(\n                \"devicechange\",\n                updateDevices\n            )\n    })\n\n    // cleanup\n    useEffect(() => stop, [deviceId])\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const draggableProps: any = {\n        nodeRef,\n    }\n\n    return (\n        <Suspense>\n            <Draggable {...draggableProps}>\n                <span ref={nodeRef} className={classes.cardContainer}>\n                    <Card className={classes.card}>\n                        <CardHeader\n                            title={\n                                settingsOpen &&\n                                devices && (\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                    >\n                                        <Select\n                                            title=\"select a webcam\"\n                                            open={settingsOpen}\n                                            onChange={handleDeviceChange}\n                                            value={deviceId}\n                                        >\n                                            {devices?.map(\n                                                ({ deviceId, label }) => (\n                                                    <MenuItem\n                                                        key={deviceId}\n                                                        value={deviceId}\n                                                    >\n                                                        {label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                    </FormControl>\n                                )\n                            }\n                            action={\n                                <>\n                                    {supportsFullScreen && (\n                                        <IconButtonWithTooltip\n                                            size=\"small\"\n                                            onClick={handleFullScreen}\n                                            title=\"full screen\"\n                                        >\n                                            <FullscreenIcon />\n                                        </IconButtonWithTooltip>\n                                    )}\n                                    <IconButtonWithTooltip\n                                        size=\"small\"\n                                        onClick={handleMinimize}\n                                        title=\"minimize\"\n                                    >\n                                        {minimize ? (\n                                            <MaximizeIcon />\n                                        ) : (\n                                            <MinimizeIcon />\n                                        )}\n                                    </IconButtonWithTooltip>\n                                    <IconButtonWithTooltip\n                                        size=\"small\"\n                                        onClick={handleSettings}\n                                        title=\"Settings\"\n                                    >\n                                        <SettingsIcon />\n                                    </IconButtonWithTooltip>\n                                    <IconButtonWithTooltip\n                                        size=\"small\"\n                                        onClick={handleClose}\n                                        title=\"Close\"\n                                    >\n                                        <CloseIcon />\n                                    </IconButtonWithTooltip>\n                                </>\n                            }\n                        />\n                        {!devices && (\n                            <CardContent>\n                                <Alert severity=\"warning\">\n                                    Please allow access to use your camera.\n                                </Alert>\n                            </CardContent>\n                        )}\n                        <CardMedia>\n                            <div\n                                className=\"hostedcontainer\"\n                                style={minimize ? { height: \"0px\" } : undefined}\n                            >\n                                <video\n                                    autoPlay\n                                    playsInline\n                                    ref={videoRef}\n                                    title=\"webcam\"\n                                />\n                            </div>\n                        </CardMedia>\n                    </Card>\n                </span>\n            </Draggable>\n        </Suspense>\n    )\n}\n"],"names":["Card","CardContent","CardHeader","CardMedia","createStyles","FormControl","makeStyles","MenuItem","Select","React","lazy","useContext","useEffect","useRef","useState","useLocalStorage","useEffectAsync","SettingsIcon","IconButtonWithTooltip","useMounted","Suspense","CloseIcon","AppContext","Alert","FullscreenIcon","MinimizeIcon","MaximizeIcon","Draggable","useStyles","cardContainer","zIndex","position","right","bottom","card","width","border","height","requestVideoStream","navigator","mediaDevices","getUserMedia","audio","video","WebCam","setShowWebCam","minimize","setMinimize","devices","setDevices","deviceId","setDeviceId","nodeRef","streamRef","videoRef","settingsOpen","setSettingsOpen","mounted","classes","supportsFullScreen","document","fullscreenEnabled","handleClose","handleMinimize","v","handleSettings","newValue","handleDeviceChange","ev","target","value","handleFullScreen","current","requestFullscreen","stop","stream","tracks","getTracks","forEach","track","e","console","debug","undefined","srcObject","ideal","advanced","play","error","updateDevices","enumerateDevices","webcams","filter","device","kind","find","webcam","did","addEventListener","removeEventListener","draggableProps","map","label"],"sourceRoot":""}