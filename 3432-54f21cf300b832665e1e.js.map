{"version":3,"file":"3432-54f21cf300b832665e1e.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/firmware/FirmwareLoader.tsx","webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/semver.ts"],"sourcesContent":["import React from \"react\"\nimport useFirmwareBlobs from \"./useFirmwareBlobs\"\n\nexport default function FirmwareLoader() {\n    useFirmwareBlobs()\n    return <></>\n}\n","import { DependencyList, useEffect } from \"react\"\n\ntype RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n    timeout: number\n}\ntype RequestIdleCallbackDeadline = {\n    readonly didTimeout: boolean\n    timeRemaining: () => number\n}\n\ndeclare global {\n    interface Window {\n        requestIdleCallback: (\n            callback: (deadline: RequestIdleCallbackDeadline) => void,\n            opts?: RequestIdleCallbackOptions\n        ) => RequestIdleCallbackHandle\n        cancelIdleCallback: (handle: RequestIdleCallbackHandle) => void\n    }\n}\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { fetchLatestFirmwareRelease, fetchFirmwareReleaseBinary } from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\nimport useMounted from \"../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { trackEvent } = useAnalytics()\n    const [throttled, setThrottled] = useState(false)\n    const mounted = useMounted()\n    const firmwares = db?.firmwares\n    const specifications = useDeviceSpecifications()\n\n    const loadFirmwares = useCallback(async () => {\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const slugs = unique(\n            specifications\n                .filter(spec => !!spec?.productIdentifiers?.length) // needs some product identifiers\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substr(\"https://github.com/\".length))\n        )\n        console.debug(`firmware: found ${slugs.join(\", \")}`)\n        for (const slug of slugs) {\n            const fw = await firmwares.get(slug)\n            if (fw) {\n                const { time } = fw\n                const age = Date.now() - time\n                console.debug(`firmware: ${slug} age ${prettyDuration(age)}`)\n                if (age < 3600_000) {\n                    console.debug(`firmware: skipping fresh firmware ${slug}`)\n                    continue\n                }\n            }\n            console.debug(`firmware: fetch latest release of ${slug}`)\n            const { status, release } = await fetchLatestFirmwareRelease(slug, {\n                ignoreThrottled: true,\n            })\n            trackEvent(\"github.fetch\", { status, slug })\n            if (status === 403) {\n                trackEvent(\"github.fetch.throttled\", { repo: slug })\n                if (mounted()) setThrottled(true)\n            }\n            if (!release?.version) {\n                trackEvent(\"github.fetch.notfound\", { repo: slug })\n                console.warn(`firmware: release not found`)\n                return\n            }\n            setThrottled(false)\n            console.log(\n                `firmware: fetch binary release ${slug} ${release.version}`\n            )\n            const firmware = await fetchFirmwareReleaseBinary(\n                slug,\n                release.version\n            )\n            if (firmware) {\n                console.debug(\n                    `firmware: binary release ${slug} ${release.version} downloaded`\n                )\n                firmwares.set(slug, { time: Date.now(), firmware })\n            }\n            // throttle github queries\n            await bus.delay(5000)\n        }\n    }, [db, firmwares, throttled])\n    // reload firmwares\n    useIdleCallback(loadFirmwares, 5000, [db, firmwares])\n    // update bus with info on changes\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            const names = await fw?.list()\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const { firmware } = (await fw.get(name)) || {}\n                    if (firmware) {\n                        const uf2Blobs = await parseFirmwareFile(firmware, name)\n                        uf2Blobs?.forEach(uf2Blob => {\n                            uf2s.push(uf2Blob)\n                        })\n                    }\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return { throttled }\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug?.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const { firmware } = (await firmwares?.get(repoSlug)) || {}\n            if (!firmware) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(firmware, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        if (!f) await firmwares?.set(repoSlug, undefined)\n        else await firmwares?.set(repoSlug, { time: Date.now(), firmware: f })\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nexport interface GithubRelease {\n    url: string\n    tag_name: string\n    name: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    if (!slug) return {}\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchFirmwareReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(path ? `${ROOT}${path}` : undefined)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = repoPath ? `repos/${repoPath}` : undefined\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}/releases/latest`\n    const res = useFetchApi<GithubRelease>(path)\n    return res\n}\n\nexport function useLatestReleaseAsset(url: string) {\n    const [, slug, filename] =\n        /^https:\\/\\/github.com\\/(.+)\\/releases\\/download\\/.+\\/(.+)$/i.exec(\n            url\n        ) || []\n    const { status, response } = useLatestRelease(slug)\n    console.log({ url, slug, filename, status, response })\n    if (status === 200 && response) {\n        const { tag_name, name } = response\n        return {\n            name,\n            version: tag_name,\n            assertUrl: `https://github.com/${normalizeSlug(\n                slug\n            )}/releases/download/${tag_name}/${filename}`,\n        }\n    } else return {}\n}\n\nexport function useLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    const resp = useLatestFirmwareReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestFirmwareReleases(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m =\n        /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n            v\n        )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n"],"names":["React","useFirmwareBlobs","FirmwareLoader","useEffect","useIdleCallback","cb","timeout","deps","window","id","requestIdleCallback","cancelIdleCallback","setTimeout","clearTimeout","useCallback","useContext","useState","JacdacContext","parseFirmwareFile","DbContext","useChangeAsync","unique","fetchLatestFirmwareRelease","fetchFirmwareReleaseBinary","useMounted","useAnalytics","prettyDuration","useDeviceSpecifications","bus","db","trackEvent","throttled","setThrottled","mounted","firmwares","specifications","loadFirmwares","names","list","slugs","filter","spec","productIdentifiers","length","map","repo","test","substr","console","debug","join","slug","fw","get","time","age","Date","now","status","release","ignoreThrottled","version","warn","log","firmware","set","delay","uf2s","name","uf2Blobs","forEach","uf2Blob","push","firmwareBlobs","useFirmwareBlob","repoSlug","replace","blobs","undefined","setFirmwareFile","tag","f","useEffectAsync","useFetch","url","options","response","setResponse","error","setError","setStatus","loading","setLoading","res","fetch","json","semverCmp","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","exec","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","cleaned","parts","split","repoPath","folder","slice","parseRepoUrl","m","owner","uri","resp","releases","Error","downloadUrl","req","headers","Accept","blob","fetchText","path","mimeType","src","text","useFetchApi","useFetchJSON","useRepository","useLatestRelease","useLatestReleaseAsset","filename","tag_name","assertUrl","useLatestFirmwareRelease","useLatestFirmwareReleases","cmp","a","b","d","major","minor","patch","pre","i","aa","bb","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build"],"sourceRoot":""}