{"version":3,"file":"8282-43a85f068e484964d26c.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardLED.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport LEDServer from \"../../../jacdac-ts/src/servers/ledserver\"\nimport {\n    COMMAND_RECEIVE,\n    LedCmd,\n    LedReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport AppContext from \"../AppContext\"\nimport LEDWidget from \"../widgets/LEDWidget\"\nimport useRegister from \"../hooks/useRegister\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\n\nexport default function DashboardLED(props: DashboardServiceProps) {\n    const { service } = props\n    const { setError } = useContext(AppContext)\n    const server = useServiceServer<LEDServer>(service)\n    const themeColor = server ? \"secondary\" : \"primary\"\n\n    const [speed, setSpeed] = useState(64)\n    const [brightness, setBrightness] = useState(32)\n\n    const colorRegister = useRegister(service, LedReg.Color)\n    const [r, g, b] = useRegisterUnpackedValue<[number, number, number]>(\n        colorRegister,\n        props\n    )\n    const [uiColor, setUiColor] = useState((r << 16) | (g << 8) | b)\n    const [uiSpeed, setUiSpeed] = useState(speed)\n\n    const waveLengthRegister = useRegister(service, LedReg.WaveLength)\n    const [waveLength] = useRegisterUnpackedValue<[number]>(\n        waveLengthRegister,\n        props\n    )\n    const ledCountRegister = useRegister(service, LedReg.LedCount)\n    const [ledCount] = useRegisterUnpackedValue<[number]>(\n        ledCountRegister,\n        props\n    )\n\n    const setRgb = async (rgb: number) => {\n        const r = ((((rgb >> 16) & 0xff) * brightness) >> 8) & 0xff\n        const g = ((((rgb >> 8) & 0xff) * brightness) >> 8) & 0xff\n        const b = ((((rgb >> 0) & 0xff) * brightness) >> 8) & 0xff\n        try {\n            await service.sendCmdAsync(\n                LedCmd.Animate,\n                jdpack<[number, number, number, number]>(\"u8 u8 u8 u8\", [\n                    r,\n                    g,\n                    b,\n                    speed,\n                ])\n            )\n            setUiColor((r << 16) | (g << 8) | b)\n            setUiSpeed(speed)\n        } catch (e) {\n            setError(e)\n        }\n    }\n\n    // sniff animate call\n    useEffect(\n        () =>\n            service?.subscribe(COMMAND_RECEIVE, (pkt: Packet) => {\n                if (pkt.serviceCommand === LedCmd.Animate) {\n                    const [r, g, b, s] =\n                        pkt.jdunpack<[number, number, number, number]>(\n                            \"u8 u8 u8 u8\"\n                        )\n                    setUiColor((r << 16) | (g << 8) | b)\n                    setUiSpeed(s)\n                }\n            }),\n        [service]\n    )\n\n    // sync color\n    useEffect(() => setUiColor((r << 16) | (g << 8) | b), [r, g, b])\n    // nothing to see\n    if (isNaN(uiColor)) return <LoadingProgress />\n\n    return (\n        <LEDWidget\n            color={themeColor}\n            ledColor={uiColor}\n            waveLength={waveLength}\n            ledCount={ledCount}\n            onLedColorChange={setRgb}\n            speed={speed}\n            onSpeedChange={setSpeed}\n            brightness={brightness}\n            onBrightnessChange={setBrightness}\n        />\n    )\n}\n"],"names":["React","useContext","useEffect","useState","useServiceServer","useRegisterUnpackedValue","COMMAND_RECEIVE","LedCmd","LedReg","LoadingProgress","jdpack","AppContext","LEDWidget","useRegister","DashboardLED","props","service","setError","server","themeColor","speed","setSpeed","brightness","setBrightness","colorRegister","Color","r","g","b","uiColor","setUiColor","uiSpeed","setUiSpeed","waveLengthRegister","WaveLength","waveLength","ledCountRegister","LedCount","ledCount","setRgb","rgb","sendCmdAsync","Animate","e","subscribe","pkt","serviceCommand","s","jdunpack","isNaN"],"sourceRoot":""}