{"version":3,"file":"component---src-pages-experiments-razor-chroma-tsx-370146d1945d285320d4.js","mappings":"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","sources":["webpack://jacdac-docs/./src/pages/experiments/razor-chroma.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { JDClient } from \"../../../jacdac-ts/src/jdom/client\"\nimport { CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useChange from \"../../jacdac/useChange\"\nimport { Button, Grid } from \"@mui/material\"\n\n/**\n * Razor Chroma SDK client\n * Docs: https://assets.razerzone.com/dev_portal/REST/html/index.html\n */\nclass ChromaClient extends JDClient {\n    private connectionInfo: {\n        sessionid: string\n        uri: string\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private heartbeatInterval: any\n    private supported = true\n\n    constructor() {\n        super()\n        this.mount(() => this.stop())\n    }\n\n    get connected() {\n        return !!this.connectionInfo\n    }\n\n    private startHeartbeat() {\n        this.heartbeatInterval = setInterval(() => {\n            if (this.unmounted) clearInterval(this.heartbeatInterval)\n            this.fetch(\"/heartbeat\", \"PUT\")\n        }, 2000)\n    }\n\n    async start() {\n        if (!this.supported || this.connected) return\n\n        console.debug(\"razor: connecting\", { conn: this.connectionInfo })\n        const resp = await fetch(\"https://chromasdk.io:54236/razer/chromasdk\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                title: \"Microsoft Jacdac\",\n                description: \"Jacdac interface to Razer\",\n                author: {\n                    name: \"Microsoft\",\n                    contact: \"jacdac@microsoft.com\",\n                },\n                device_supported: [\n                    \"keyboard\",\n                    \"mouse\",\n                    \"headset\",\n                    \"mousepad\",\n                    \"keypad\",\n                    \"chromalink\",\n                ],\n                category: \"application\",\n            }),\n        })\n        console.log({ resp })\n        if (this.unmounted) return\n        if (resp.status === 200) {\n            this.connectionInfo = await resp.json()\n            if (this.unmounted) return\n            this.startHeartbeat()\n            this.emit(CHANGE)\n        } else if (resp.status == 404) {\n            this.supported = false\n            console.log(`razor not supported`)\n            this.emit(CHANGE)\n        }\n    }\n\n    private async stop() {\n        console.debug(\"razor: disconnecting\")\n        if (this.heartbeatInterval) {\n            clearInterval(this.heartbeatInterval)\n            this.heartbeatInterval = undefined\n        }\n        if (this.connectionInfo) {\n            const { uri } = this.connectionInfo\n            this.connectionInfo = undefined\n            try {\n                await fetch(uri, {\n                    method: \"DELETE\",\n                    headers: { \"content-type\": \"application/json\" },\n                })\n            } catch (e) {\n                console.debug(e)\n            }\n        }\n    }\n\n    async startHeadsetEffect(\n        effect: \"none\" | \"custom\" | \"static\",\n        data: number | [number, number, number, number, number]\n    ) {\n        let body: unknown\n        const ceffect = `CHROMA_${effect.toUpperCase()}`\n        if (ceffect === \"CHROMA_NONE\") {\n            body = { effect: ceffect }\n        } else if (ceffect === \"CHROMA_CUSTOM\") {\n            body = { effect: ceffect, param: data }\n        } else if (ceffect === \"CHROMA_STATIC\") {\n            const color = { color: data }\n            body = { effect: ceffect, param: color }\n        }\n        await this.fetch(\"/headset\", \"PUT\", body)\n    }\n\n    private async fetch(path: string, method: string, body?: unknown) {\n        await this.start()\n        if (!this.connected) return\n        try {\n            await fetch(this.connectionInfo.uri + path, {\n                method,\n                body: body && JSON.stringify(body),\n                headers: { \"content-type\": \"application/json\" },\n            })\n        } catch (e) {\n            this.connectionInfo = undefined\n        }\n    }\n}\n\nexport default function Chroma() {\n    const [client] = useState(new ChromaClient())\n    const connected = useChange(client, c => c.connected)\n    // make sure to cleanup\n    useEffect(() => {\n        client.start() // async\n        return () => client.unmount()\n    }, [])\n\n    const handleStatic = (v: number) => async () => {\n        await client.startHeadsetEffect(\"static\", v)\n    }\n    const handleCustom =\n        (v: [number, number, number, number, number]) => async () => {\n            await client.startHeadsetEffect(\"custom\", v)\n        }\n\n    // color: BGR\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <div>connected: {connected ? \"connected\" : \"disconnected\"}</div>\n            </Grid>\n            <Grid item>\n                <Button onClick={handleStatic(0xff0000)}>headset 255</Button>\n                <Button onClick={handleStatic(0x00ff00)}>headset 128</Button>\n                <Button onClick={handleStatic(0x0000ff)}>headset 0</Button>\n                <Button onClick={handleCustom([0, 64, 128, 196, 255])}>\n                    headset custom\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["React","useEffect","useState","JDClient","CHANGE","useChange","Button","Grid","ChromaClient","supported","mount","stop","startHeartbeat","heartbeatInterval","setInterval","unmounted","clearInterval","fetch","start","connected","console","debug","conn","connectionInfo","resp","method","headers","body","JSON","stringify","title","description","author","name","contact","device_supported","category","log","status","json","emit","undefined","uri","e","startHeadsetEffect","effect","data","ceffect","toUpperCase","param","color","path","Chroma","client","c","unmount","handleStatic","v","handleCustom"],"sourceRoot":""}