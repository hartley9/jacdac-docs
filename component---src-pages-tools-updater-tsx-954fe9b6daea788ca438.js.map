{"version":3,"file":"component---src-pages-tools-updater-tsx-954fe9b6daea788ca438.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/DeleteForever.js","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/ServiceButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCard.tsx","webpack://jacdac-docs/./src/components/ui/CircularProgressWithLabel.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx","webpack://jacdac-docs/./src/components/firmware/useFirmwareRepos.ts","webpack://jacdac-docs/./src/components/firmware/LocalFileFirmwareCard.tsx","webpack://jacdac-docs/./src/components/firmware/FirmwareCardGrid.tsx","webpack://jacdac-docs/./src/components/firmware/FlashDeviceButton.tsx","webpack://jacdac-docs/./src/components/UpdateDeviceList.tsx","webpack://jacdac-docs/./src/components/firmware/SafeBootAlert.tsx","webpack://jacdac-docs/./src/components/select/SelectDevice.tsx","webpack://jacdac-docs/./src/components/firmware/ManualFirmwareAlert.tsx","webpack://jacdac-docs/./src/components/tools/Flash.tsx","webpack://jacdac-docs/./src/pages/tools/updater.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreInfrastructure: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full={true} transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { ButtonProps } from \"@material-ui/core\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\n\nexport default function ServiceButton(\n    props: { service: JDService; onClick?: () => void } & ButtonProps\n) {\n    const { service, onClick, ...others } = props\n    return (\n        <Button\n            {...others}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n        >\n            {service.name}\n        </Button>\n    )\n}\n","import React, { ReactNode } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { makeStyles } from \"@material-ui/core/styles\"\n// tslint:disable-next-line: no-submodule-imports\nimport Card from \"@material-ui/core/Card\"\n// tslint:disable-next-line: no-submodule-imports\nimport CardContent from \"@material-ui/core/CardContent\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ServiceButton from \"../ServiceButton\"\nimport useChange from \"../../jacdac/useChange\"\nimport { navigate } from \"gatsby\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { CardActions, createStyles } from \"@material-ui/core\"\nimport DeviceCardHeader from \"./DeviceCardHeader\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport { DeviceLostAlert } from \"../alert/DeviceLostAlert\"\nimport { isInfrastructure } from \"../../../jacdac-ts/src/jdom/spec\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {},\n        bullet: {\n            display: \"inline-block\",\n            margin: \"0 2px\",\n            transform: \"scale(0.8)\",\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    })\n)\n\nfunction navigateToService(service: JDService) {\n    const spec = service.specification\n    if (spec) navigate(`/services/${spec.shortId}/`) // todo spec\n}\n\nfunction DeviceDescription(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.DeviceDescription)\n    )\n    const [description] = useRegisterUnpackedValue<[string]>(register)\n    return <span>{description || \"\"}</span>\n}\n\nexport default function DeviceCard(props: {\n    device: JDDevice\n    children?: ReactNode\n    action?: ReactNode\n    content?: ReactNode\n    showDeviceId?: boolean\n    showServices?: boolean\n    showTemperature?: boolean\n    showFirmware?: boolean\n    showDescription?: boolean\n}) {\n    const {\n        device,\n        children,\n        action,\n        content,\n        showDeviceId,\n        showDescription,\n        showTemperature,\n        showFirmware,\n        showServices,\n    } = props\n    const classes = useStyles()\n    const services = useChange(device, () =>\n        device.services().filter(srv => !isInfrastructure(srv.specification))\n    )\n\n    return (\n        <Card className={classes.root}>\n            <DeviceCardHeader\n                device={device}\n                showDeviceId={showDeviceId}\n                showTemperature={showTemperature}\n                showFirmware={showFirmware}\n                showMedia={true}\n            />\n            {(showDescription || content) && (\n                <CardContent>\n                    {<DeviceLostAlert device={device} />}\n                    {showDescription && <DeviceDescription device={device} />}\n                    {content}\n                </CardContent>\n            )}\n            <CardActions>\n                {action}\n                {showServices &&\n                    services?.map(service => (\n                        <ServiceButton\n                            key={service.id}\n                            service={service}\n                            onClick={() => navigateToService(service)}\n                        />\n                    ))}\n            </CardActions>\n            {children}\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { CircularProgressProps, Box, CircularProgress, Typography } from \"@material-ui/core\";\n\nexport default function CircularProgressWithLabel(props: CircularProgressProps & { value: number }) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@material-ui/core\"\nimport React, { ReactNode } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: { label: ReactNode } & SwitchProps\n) {\n    const { label, ...rest } = props\n    return <FormControlLabel control={<Switch {...rest} />} label={label} />\n}\n","import { useContext, useState } from \"react\";\nimport { deviceSpecificationFromProductIdentifier, deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\";\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\";\nimport useEffectAsync from \"../useEffectAsync\";\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\";\nimport { BootloaderCmd, ControlReg, DEVICE_CHANGE, SRV_BOOTLOADER } from \"../../../jacdac-ts/src/jdom/constants\";\nimport useEventRaised from \"../../jacdac/useEventRaised\";\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\";\n\nexport default function useFirmwareRepos(showAllRepos?: boolean) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [repos, setRepos] = useState<string[]>([])\n\n    const devices = useEventRaised(DEVICE_CHANGE, bus, () => bus.devices({ announced: true, ignoreInfrastructure: true }))\n    const bootloaders = devices.filter(device => device.hasService(SRV_BOOTLOADER));\n    const registers = devices\n        .filter(device => !device.hasService(SRV_BOOTLOADER)) // not a bootloader\n        .map(device => device.service(0)?.register(ControlReg.ProductIdentifier))\n        .filter(reg => !!reg);\n\n    useEffectAsync(async (mounted) => {\n        let repos: string[] = [];\n        if (showAllRepos)\n            repos = deviceSpecifications().map(spec => spec.repo);\n        else {\n            const productIdentifiers: number[] = [];\n            // ask firmware registers\n            for (const register of registers) {\n                await register.refresh(true)\n                const productIdentifier = register.intValue;\n                if (productIdentifier !== undefined && productIdentifiers.indexOf(productIdentifier) < 0)\n                    productIdentifiers.push(productIdentifier);\n            }\n\n            // ask bootloaders\n            for (const bootloader of bootloaders) {\n                const boot = bootloader.services({ serviceClass: SRV_BOOTLOADER })[0];\n                const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n                try {\n                    const resp = await boot.sendCmdAwaitResponseAsync(bl_announce);\n                    const [, , , productIdentifier] = resp.jdunpack<[number, number, number, number]>(\"u32 u32 u32 u32\");\n                    if (productIdentifier !== undefined && productIdentifiers.indexOf(productIdentifier) < 0)\n                        productIdentifiers.push(productIdentifier);\n                }\n                catch (e) {\n                    console.warn(`bootloader product identifier failed`, e)\n                }\n            }\n            repos = productIdentifiers.map(fw => deviceSpecificationFromProductIdentifier(fw)?.repo)\n                .filter(repo => !!repo);\n        }\n        if (mounted) {\n            const urepos = unique(repos);\n            setRepos(urepos)\n        }\n    }, [devices.map(dev => dev.id).join(), registers.map(reg => reg.id).join(), showAllRepos])\n    return repos;\n}","import React, { lazy, useState } from \"react\"\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    ListItem,\n    List,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\"\nimport { useFirmwareBlob } from \"./useFirmwareBlobs\"\nimport Alert from \"../ui/Alert\"\nimport Suspense from \"../ui/Suspense\"\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nconst LOCAL_FILE_SLUG = \"local file\"\n\nexport default function LocalFileFirmwareCard() {\n    const slug = LOCAL_FILE_SLUG\n    const [downloading, setDownloading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const { setFirmwareFile, firmwareBlobs } = useFirmwareBlob(slug)\n    const disabled = downloading\n    const version = firmwareBlobs?.[0].version\n\n    const handleFiles = async (files: File[]) => {\n        const file = files[0]\n        if (file) {\n            try {\n                setDownloading(true)\n                await setFirmwareFile(undefined, file)\n            } finally {\n                setDownloading(false)\n            }\n        }\n    }\n\n    const handleClear = async () => {\n        try {\n            setError(\"\")\n            setDownloading(true)\n            setFirmwareFile(undefined, undefined)\n        } finally {\n            setDownloading(false)\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader title={slug} />\n            <CardContent>\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                {version && (\n                    <Typography variant=\"body2\">\n                        version <code>{version}</code>\n                    </Typography>\n                )}\n                {!!firmwareBlobs?.length && (\n                    <List dense>\n                        {firmwareBlobs.map(blob => (\n                            <ListItem key={blob.productIdentifier}>\n                                <ListItemText\n                                    primary={blob.name}\n                                    secondary={`0x${blob.productIdentifier.toString(\n                                        16\n                                    )}`}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                )}\n            </CardContent>\n            <CardActions>\n                {!downloading && (\n                    <Suspense>\n                        <ImportButton\n                            text={\"Import UF2 file\"}\n                            onFilesUploaded={handleFiles}\n                        />\n                    </Suspense>\n                )}\n                {!downloading && firmwareBlobs?.length && (\n                    <Button\n                        disabled={disabled}\n                        variant=\"text\"\n                        arial-label={\"Clear\"}\n                        onClick={handleClear}\n                    >\n                        Clear\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport FirmwareCard from \"./FirmwareCard\"\n// tslint:disable-next-line: no-submodule-imports\nimport useFirmwareRepos from \"./useFirmwareRepos\"\nimport LocalFileFirmwareCard from \"./LocalFileFirmwareCard\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function FirmwareCardGrid() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints()\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const firmwareRepos = useFirmwareRepos(safeBoot)\n\n    return (\n        <Grid container spacing={2}>\n            <Grid {...gridBreakpoints} item key=\"localfile\">\n                <LocalFileFirmwareCard />\n            </Grid>\n            {firmwareRepos.map(firmwareRepo => (\n                <Grid\n                    {...gridBreakpoints}\n                    item\n                    key={`firmwarerepo${firmwareRepo}`}\n                >\n                    <FirmwareCard slug={firmwareRepo} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Button } from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\nimport React, { useContext, useState } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport {\n    flashFirmwareBlob,\n    updateApplicable,\n    FirmwareBlob,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport CircularProgressWithLabel from \"../ui/CircularProgressWithLabel\"\nimport AppContext from \"../AppContext\"\nimport useChange from \"../../jacdac/useChange\"\nimport useMounted from \"./../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\n\nexport function FlashDeviceButton(props: {\n    device: JDDevice\n    blob: FirmwareBlob\n    ignoreFirmwareCheck?: boolean\n}) {\n    const { device, blob, ignoreFirmwareCheck } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const { trackEvent, trackError } = useAnalytics()\n    const [progress, setProgress] = useState(0)\n    const specification = useDeviceSpecification(device)\n    const firmwareInfo = useChange(device, d => d?.firmwareInfo)\n    const update =\n        ignoreFirmwareCheck ||\n        (blob?.version &&\n            firmwareInfo?.version &&\n            updateApplicable(firmwareInfo, blob))\n    const upToDate =\n        blob?.version &&\n        firmwareInfo?.version &&\n        blob.version === firmwareInfo.version\n    const flashing = useChange(device, d => !!d?.flashing)\n    const unsupported = specification && !specification.repo\n    const missing = !device || !blob\n    const disabled = flashing\n    const color = update && !upToDate ? \"primary\" : \"inherit\"\n    const mounted = useMounted()\n\n    const handleFlashing = async () => {\n        if (device.flashing) return\n        const props = {\n            productId: firmwareInfo.productIdentifier,\n            name: firmwareInfo.name,\n            version: firmwareInfo.version,\n        }\n        trackEvent(\"flash.start\", props)\n        try {\n            setProgress(0)\n            device.flashing = true // don't refresh registers while flashing\n            const updateCandidates = [firmwareInfo]\n            await flashFirmwareBlob(\n                bus,\n                blob,\n                updateCandidates,\n                ignoreFirmwareCheck,\n                prog => {\n                    if (mounted()) setProgress(prog)\n                }\n            )\n            trackEvent(\"flash.success\", props)\n        } catch (e) {\n            trackError(e, props)\n            trackEvent(\"flash.error\", props)\n            if (mounted()) setError(e)\n        } finally {\n            device.flashing = false\n        }\n    }\n\n    // tslint:disable-next-line: react-this-binding-issue\n    return unsupported ? (\n        <Alert severity=\"info\">No registered firmware</Alert>\n    ) : missing ? (\n        <Alert severity=\"info\">No firmware available</Alert>\n    ) : flashing ? (\n        <CircularProgressWithLabel value={progress} />\n    ) : firmwareInfo || update ? (\n        <>\n            {upToDate ? (\n                <Alert severity=\"success\">Up to date!</Alert>\n            ) : (\n                <Alert severity=\"warning\">{blob.version} available</Alert>\n            )}\n            {(!upToDate || ignoreFirmwareCheck) && (\n                <Button\n                    title={`Flash ${blob.version}`}\n                    disabled={disabled}\n                    variant=\"contained\"\n                    color={color}\n                    onClick={handleFlashing}\n                >\n                    Flash\n                </Button>\n            )}\n        </>\n    ) : (\n        <Alert severity=\"info\">No firmware available</Alert>\n    )\n}\n","import { Grid } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport { SRV_BOOTLOADER } from \"../../jacdac-ts/src/jdom/constants\"\nimport JDDevice from \"../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../jacdac/Context\"\nimport DeviceCard from \"./devices/DeviceCard\"\nimport useGridBreakpoints from \"./useGridBreakpoints\"\nimport useChange from \"../jacdac/useChange\"\nimport useDevices from \"./hooks/useDevices\"\nimport { FlashDeviceButton } from \"./firmware/FlashDeviceButton\"\n\nfunction UpdateDeviceCard(props: { device: JDDevice }) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { device } = props\n    const blobs = useChange(bus, _ => _.firmwareBlobs)\n    const firmwareInfo = useChange(device, d => d.firmwareInfo)\n    const blob =\n        firmwareInfo &&\n        blobs?.find(b => firmwareInfo.productIdentifier == b.productIdentifier)\n\n    return (\n        <DeviceCard\n            device={device}\n            showFirmware={true}\n            // tslint:disable-next-line: react-this-binding-issue\n            action={<FlashDeviceButton device={device} blob={blob} />}\n        />\n    )\n}\n\nexport default function UpdateDeviceList() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const gridBreakpoints = useGridBreakpoints(3)\n    const safeBoot = useChange(bus, b => b.safeBoot)\n    const devices = useDevices(\n        {\n            announced: true,\n            ignoreInfrastructure: true,\n            ignoreSimulators: true,\n        },\n        [safeBoot]\n    )\n        .filter(dev => safeBoot || !dev.hasService(SRV_BOOTLOADER))\n        .sort(\n            (l, r) => -(l.productIdentifier || 0) + (r.productIdentifier || 0)\n        )\n\n    return (\n        <Grid container spacing={2}>\n            {devices.map(device => (\n                <Grid key={device.id} item {...gridBreakpoints}>\n                    <UpdateDeviceCard device={device} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Box, Button, Typography } from \"@material-ui/core\"\nimport React, { useContext, useEffect, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\n// tslint:disable-next-line: match-default-export-name tslint:disable-next-line: no-submodule-imports\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\"\nimport AppContext from \"../AppContext\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\n\nexport default function SafeBootAlert() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const [safeBoot, setSafeBoot] = useState(bus.safeBoot)\n    const firmwares = db?.firmwares\n\n    const handleRecovery = async () => {\n        const v = !safeBoot\n        setSafeBoot(v)\n    }\n    const handleClear = async () => {\n        await firmwares.clear()\n        enqueueSnackbar(\"firmwares cleared\", \"info\")\n    }\n\n    // turn on and off safeboot mode\n    useEffect(() => {\n        bus.safeBoot = safeBoot\n        return () => {\n            bus.safeBoot = false\n        }\n    }, [safeBoot])\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={safeBoot}\n                    onChange={handleRecovery}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            recovery mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        If your module is malfunctioning from the start, you can\n                        flash it in bootloader mode. Turn on recovery mode and\n                        unplug/replug any malfunctioning device to switch it to\n                        bootloader mode (glowing status LED). Once your module\n                        is flashed, turn off recovery mode and unplug/replug\n                        your module again.\n                    </Typography>\n                </Box>\n            </Alert>\n            {safeBoot && (\n                <Alert severity=\"warning\">\n                    <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        disabled={!firmwares}\n                        onClick={handleClear}\n                        startIcon={<DeleteForeverIcon />}\n                    >\n                        clear cache\n                    </Button>\n                    <Box mr={1}>\n                        <Typography component=\"span\" variant=\"caption\">\n                            Delete all firmware cached in the browser. The\n                            firmware will have to be deleted again from this\n                            interface.\n                        </Typography>\n                    </Box>\n                </Alert>\n            )}\n        </>\n    )\n}\n","import { MenuItem } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\n\nexport default function SelectDevice(props: {\n    devices: JDDevice[]\n    deviceId: string\n    onChange: (newDeviceId: string) => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { devices, deviceId, onChange } = props\n\n    const handleDeviceChange = async (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        onChange(id)\n        const device = bus.node(id) as JDDevice\n        await device?.identify()\n    }\n    return (\n        <SelectWithLabel\n            helperText=\"choose a device\"\n            value={deviceId}\n            onChange={handleDeviceChange}\n            disabled={!devices?.length}\n        >\n            {devices?.map(dev => (\n                <MenuItem key={dev.id} value={dev.id}>\n                    {dev.describe()}\n                </MenuItem>\n            ))}\n        </SelectWithLabel>\n    )\n}\n","import { Box, Grid, MenuItem, Typography } from \"@material-ui/core\"\nimport React, { ChangeEvent, useContext, useState } from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport Alert from \"../ui/Alert\"\nimport useDevices from \"../hooks/useDevices\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { FlashDeviceButton } from \"./FlashDeviceButton\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport SelectDevice from \"../select/SelectDevice\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useChange from \"../../jacdac/useChange\"\n\nconst fwid = (fw: FirmwareBlob) =>\n    fw ? `${fw.store},${fw.productIdentifier},${fw.version}` : \"\"\n\nfunction ManualFirmware() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useDevices({\n        announced: true,\n        ignoreInfrastructure: true,\n        ignoreSimulators: true,\n    })\n    const firmwares = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = unique(firmwares.map(fw => fw.store))\n    const [deviceId, setDeviceId] = useState(devices?.[0]?.id)\n    const [firmwareId, setFirmwareId] = useState<string>(fwid(firmwares?.[0]))\n    const [store, setStore] = useState<string>(stores?.[0] || \"\")\n\n    const handleDeviceChange = (newId: string) => setDeviceId(newId)\n    const handleStoreChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const store = ev.target.value as string\n        setStore(store)\n    }\n    const handleFirmwareChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const id = ev.target.value as string\n        setFirmwareId(id)\n    }\n\n    const device = bus.node(deviceId) as JDDevice\n    const blob = firmwares.find(fw => fwid(fw) === firmwareId)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SelectDevice\n                    devices={devices}\n                    deviceId={deviceId}\n                    onChange={handleDeviceChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={1}>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a firmware\"\n                            value={store}\n                            onChange={handleStoreChange}\n                        >\n                            {stores?.map(store => (\n                                <MenuItem key={store} value={store}>\n                                    {store}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item>\n                        <SelectWithLabel\n                            helperText=\"choose a module\"\n                            value={firmwareId}\n                            onChange={handleFirmwareChange}\n                        >\n                            {firmwares\n                                ?.filter(fw => fw.store === store)\n                                .map(fw => (\n                                    <MenuItem key={fwid(fw)} value={fwid(fw)}>\n                                        {fw.name} &nbsp;\n                                        <Typography variant=\"caption\">\n                                            {fw.version}, &nbsp;\n                                            {`0x${fw.productIdentifier.toString(\n                                                16\n                                            )}`}\n                                        </Typography>\n                                    </MenuItem>\n                                ))}\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <FlashDeviceButton\n                    device={device}\n                    blob={blob}\n                    ignoreFirmwareCheck={true}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function ManualFirmwareAlert() {\n    const [enabled, setEnabled] = useState(false)\n    const handleToggle = async () => {\n        const v = !enabled\n        setEnabled(v)\n    }\n\n    return (\n        <>\n            <Alert severity=\"info\">\n                <SwitchWithLabel\n                    value={enabled}\n                    onChange={handleToggle}\n                    label={\n                        <Typography component=\"span\" variant=\"body1\">\n                            manual mode\n                        </Typography>\n                    }\n                />\n                <Box mr={1}>\n                    <Typography component=\"span\" variant=\"caption\">\n                        Manually select which firmware to upload on your device.\n                    </Typography>\n                </Box>\n            </Alert>\n            {enabled && (\n                <Alert severity=\"warning\">\n                    <ManualFirmware />\n                </Alert>\n            )}\n        </>\n    )\n}\n","import {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Grid,\n    Tab,\n    Tabs,\n} from \"@material-ui/core\"\nimport React, { Fragment, useContext, useEffect, useState } from \"react\"\nimport TabPanel from \"../ui/TabPanel\"\nimport ConnectAlert from \"../alert/ConnectAlert\"\nimport FirmwareCardGrid from \"../firmware/FirmwareCardGrid\"\n// tslint:disable-next-line: no-submodule-imports\nimport UpdateDeviceList from \"../UpdateDeviceList\"\nimport SafeBootAlert from \"../firmware/SafeBootAlert\"\nimport ManualFirmwareAlert from \"../firmware/ManualFirmwareAlert\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport useFirmwareBlobs from \"../firmware/useFirmwareBlobs\"\nimport GridHeader from \"../ui/GridHeader\"\nimport { groupBy } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    ControlCmd,\n    DEVICE_ANNOUNCE,\n    FLASH_MAX_DEVICES,\n    SRV_CONTROL,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport Packet from \"../../../jacdac-ts/src/jdom/packet\"\nimport useChange from \"../../jacdac/useChange\"\nimport Alert from \"../ui/Alert\"\nimport { AlertTitle } from \"@material-ui/lab\"\n\nfunction FlashDiagnostics() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const blobs = useChange(bus, _ => _?.firmwareBlobs)\n    const stores = groupBy(blobs, blob => blob.store)\n    return (\n        <Grid container spacing={2}>\n            {Object.entries(stores).map(([store, blobs]) => (\n                <Fragment key={store}>\n                    <GridHeader title={store} />\n                    {blobs?.map(blob => (\n                        <Grid item key={blob.store + blob.productIdentifier}>\n                            <Card>\n                                <CardHeader\n                                    title={blob.name}\n                                    subheader={blob.version}\n                                />\n                                <CardContent>\n                                    pid: 0x{blob.productIdentifier.toString(16)}\n                                    , {blob.pages.length} pages\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Fragment>\n            ))}\n        </Grid>\n    )\n}\n\nexport default function Flash() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const [tab, setTab] = useState(0)\n    const { throttled } = useFirmwareBlobs()\n    const devices = useChange(bus, _ => _.devices({ physical: true }))\n\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newValue: number\n    ) => {\n        setTab(newValue)\n    }\n\n    // put brains into proxy mode\n    useEffect(() => {\n        const forceProxy = () => {\n            console.debug(`jacdac: force clients to proxy mode`)\n            const pkt = Packet.onlyHeader(ControlCmd.Proxy)\n            pkt.sendAsMultiCommandAsync(bus, SRV_CONTROL)\n        }\n        const unsub = bus.subscribe(DEVICE_ANNOUNCE, forceProxy)\n        forceProxy()\n        return unsub\n    }, [])\n\n    return (\n        <Box mb={2}>\n            {throttled && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Try again later...</AlertTitle>\n                    Oops, it looks like we have been polling firmware too much\n                    from GitHub. Please try again later.\n                </Alert>\n            )}\n            {devices?.length > FLASH_MAX_DEVICES && (\n                <Alert severity=\"error\">\n                    <AlertTitle>Too many connected devices</AlertTitle>\n                    Please unplug some of your devices before updating.\n                </Alert>\n            )}\n            <ConnectAlert />\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"Update firmware of modules\"\n            >\n                <Tab label={`Updates`} />\n                <Tab label={`Firmwares`} />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <UpdateDeviceList />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <FirmwareCardGrid />\n            </TabPanel>\n            <SafeBootAlert />\n            <ManualFirmwareAlert />\n            {Flags.diagnostics && <FlashDiagnostics />}\n        </Box>\n    )\n}\n","import React from \"react\"\nimport Flash from \"../../components/tools/Flash\"\n\nexport default function Page() {\n    return <>\n        <h1>Firmware Updater</h1>\n        <p>\n        This page allows you to update your Jacdac module with new firmware. Find the latest UF2 firmware file from your manufacturer \nand import it with the button below.\n            \n        </p>\n        <Flash />\n    </>\n}"],"names":["Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","useChange","ConnectButtons","NoSsrConnectAlert","props","serviceClass","closeable","bus","transports","devices","b","ignoreInfrastructure","spec","length","name","ConnectAlert","Button","ServiceButton","service","onClick","others","makeStyles","Card","CardContent","ControlReg","navigate","CardActions","createStyles","DeviceCardHeader","useRegisterUnpackedValue","DeviceLostAlert","isInfrastructure","useStyles","root","bullet","display","margin","transform","title","fontSize","pos","marginBottom","navigateToService","specification","shortId","DeviceDescription","device","register","_","description","DeviceCard","children","action","content","showDeviceId","showDescription","showTemperature","showFirmware","showServices","classes","services","filter","srv","map","id","CircularProgress","Typography","CircularProgressWithLabel","Math","round","value","Chip","Grid","clsx","theme","hr","background","palette","text","disabled","start","width","spacing","GridHeader","count","variant","undefined","FormControlLabel","Switch","SwitchWithLabel","label","rest","useState","deviceSpecificationFromProductIdentifier","deviceSpecifications","useEffectAsync","unique","BootloaderCmd","DEVICE_CHANGE","SRV_BOOTLOADER","useEventRaised","Packet","useFirmwareRepos","showAllRepos","repos","setRepos","announced","bootloaders","hasService","registers","ProductIdentifier","reg","mounted","repo","productIdentifiers","refresh","productIdentifier","intValue","indexOf","push","bootloader","boot","bl_announce","onlyHeader","Info","resp","sendCmdAwaitResponseAsync","jdunpack","e","console","warn","fw","urepos","dev","join","lazy","CardHeader","ListItem","List","ListItemText","useFirmwareBlob","Suspense","ImportButton","LOCAL_FILE_SLUG","LocalFileFirmwareCard","slug","downloading","setDownloading","error","setError","setFirmwareFile","firmwareBlobs","version","handleFiles","files","file","handleClear","blob","toString","useGridBreakpoints","FirmwareCard","FirmwareCardGrid","gridBreakpoints","safeBoot","firmwareRepos","firmwareRepo","flashFirmwareBlob","updateApplicable","AppContext","useMounted","useAnalytics","useDeviceSpecification","FlashDeviceButton","ignoreFirmwareCheck","trackEvent","trackError","progress","setProgress","firmwareInfo","d","update","upToDate","flashing","unsupported","missing","color","handleFlashing","productId","updateCandidates","prog","useDevices","UpdateDeviceCard","blobs","find","UpdateDeviceList","ignoreSimulators","sort","l","r","useEffect","DbContext","DeleteForeverIcon","SafeBootAlert","db","enqueueSnackbar","setSafeBoot","firmwares","handleRecovery","v","clear","MenuItem","SelectWithLabel","SelectDevice","deviceId","onChange","handleDeviceChange","ev","target","node","identify","describe","fwid","store","ManualFirmware","stores","setDeviceId","firmwareId","setFirmwareId","setStore","newId","handleStoreChange","handleFirmwareChange","ManualFirmwareAlert","enabled","setEnabled","handleToggle","Tab","Tabs","Fragment","TabPanel","Flags","useFirmwareBlobs","groupBy","ControlCmd","DEVICE_ANNOUNCE","FLASH_MAX_DEVICES","SRV_CONTROL","AlertTitle","FlashDiagnostics","Object","entries","pages","Flash","tab","setTab","throttled","physical","handleTabChange","event","newValue","forceProxy","debug","pkt","Proxy","sendAsMultiCommandAsync","unsub","subscribe","diagnostics","Page"],"sourceRoot":""}