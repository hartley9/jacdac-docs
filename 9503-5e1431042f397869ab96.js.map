{"version":3,"file":"9503-5e1431042f397869ab96.js","mappings":"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","sources":["webpack://jacdac-docs/../src/components/lazy-hydrate.tsx"],"sourcesContent":["import React, { MutableRefObject } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { GatsbyImageProps } from \"./gatsby-image.browser\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImageProps, MainImage } from \"./main-image\"\nimport { getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { ReactElement } from \"react\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean // alwaystype SetStateAction<S> = S | ((prevState: S) => S);\n  toggleIsLoaded: (toggle: boolean) => void\n  ref: MutableRefObject<HTMLImageElement | undefined>\n}\n\nexport function lazyHydrate(\n  {\n    image,\n    loading,\n    isLoading,\n    isLoaded,\n    toggleIsLoaded,\n    ref,\n    imgClassName,\n    imgStyle = {},\n    objectPosition,\n    backgroundColor,\n    objectFit = `cover`,\n    ...props\n  }: LazyHydrateProps,\n  root: MutableRefObject<HTMLElement | undefined>,\n  hydrated: MutableRefObject<boolean>,\n  forceHydrate: MutableRefObject<boolean>\n): (() => void) | null {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  const cacheKey = JSON.stringify(images)\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  const component = (\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      <Placeholder\n        {...getPlaceholderProps(\n          placeholder,\n          isLoaded,\n          layout,\n          width,\n          height,\n          wrapperBackgroundColor,\n          objectFit,\n          objectPosition\n        )}\n      />\n\n      <MainImage\n        {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n        width={width}\n        height={height}\n        className={imgClassName}\n        {...getMainProps(\n          isLoading,\n          isLoaded,\n          images,\n          loading,\n          toggleIsLoaded,\n          cacheKey,\n          ref,\n          imgStyle\n        )}\n      />\n    </LayoutWrapper>\n  )\n\n  if (root.current) {\n    // Force render to mitigate \"Expected server HTML to contain a matching\" in develop\n    // @ts-ignore react 18 typings\n    if (ReactDOM.createRoot) {\n      if (!hydrated.current) {\n        // @ts-ignore react 18 typings\n        hydrated.current = ReactDOM.createRoot(root.current)\n      }\n\n      // @ts-ignore react 18 typings\n      hydrated.current.render(component)\n    } else {\n      const doRender =\n        hydrated.current || forceHydrate.current\n          ? ReactDOM.render\n          : ReactDOM.hydrate\n      doRender(component, root.current)\n      hydrated.current = true\n    }\n  }\n\n  return (): void => {\n    if (root.current) {\n      // @ts-ignore react 18 typings\n      if (ReactDOM.createRoot) {\n        // @ts-ignore react 18 typings\n        hydrated.current.render(null)\n      } else {\n        ReactDOM.render(null as unknown as ReactElement, root.current)\n      }\n    }\n  }\n}\n"],"names":["lazyHydrate","image","loading","isLoading","isLoaded","toggleIsLoaded","ref","imgClassName","imgStyle","objectPosition","backgroundColor","objectFit","props","root","hydrated","forceHydrate","width","height","layout","images","placeholder","wrapperBackgroundColor","cacheKey","JSON","stringify","component","React","LayoutWrapper","Placeholder","getPlaceholderProps","MainImage","className","getMainProps","current","ReactDOM","createRoot","render","hydrate"],"sourceRoot":""}