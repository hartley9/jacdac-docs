{"version":3,"file":"3887-35b357164378454217de.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,KAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;;;;;;ACjBf;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASW,wBAAT,CAAkCC,KAAlC,EAAgE;AAC3E,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAME,OAAO,GAAGJ,uEAAW,CAACG,OAAD,EAAUV,wGAAV,CAA3B;AACA,MAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,+CAAQ,CAAC,QAAD,CAAhC;AACA,MAAMiB,MAAM,GAAGT,kEAAK,EAApB;;AAEA,MAAMU,YAAY,GAAGC,EAAE,IAAI;AACvB,QAAMC,QAAQ,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAA3B;AACAN,IAAAA,OAAO,CAACI,QAAD,CAAP;AACH,GAHD;;AAKA,MAAMG,WAAW;AAAA,gHAAG,aAAY;AAC5BC,MAAAA,OAAO,CAACC,GAAR,YAAqBV,IAArB;AACA,UAAI,CAACF,OAAO,CAACa,SAAb,EACI,MAAMb,OAAO,CAACc,YAAR,CAAqBpB,0EAAM,CAAY,IAAZ,EAAkB,CAAC,IAAD,CAAlB,CAA3B,EAAsD,IAAtD,CAAN;AACJ,YAAMK,OAAO,CAACgB,YAAR,CACF3B,oGADE,EAEFM,0EAAM,CAAW,GAAX,EAAgB,CAACQ,IAAD,CAAhB,CAFJ,CAAN;AAIH,KARgB;;AAAA,oBAAXQ,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAUA,sBACI,iHACI,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,8DAAD;AACI,MAAE,EAAEN,MADR;AAEI,cAAU,EAAE,KAFhB;AAGI,SAAK,EAAEF,IAHX;AAII,SAAK,EAAE,kBAJX;AAKI,cAAU,EAAE,yBALhB;AAMI,YAAQ,EAAEG,YANd;AAOI,QAAI,EAAE;AAPV,IADJ,eAUI,iDAAC,2DAAD;AACI,YAAQ,EAAE,CAACH,IADf;AAEI,SAAK,EAAC,YAFV;AAGI,WAAO,EAAEQ,WAHb;AAII,QAAI,eAAE,iDAAC,8EAAD;AAJV,IAVJ,CADJ,CADJ;AAqBH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/VoiceChat.js","webpack://jacdac-docs/./src/components/dashboard/DashboardSpeechSynthesis.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12-4-3.2V14H6V6h8v3.2L18 6v8z\"\n}), 'VoiceChat');\n\nexports.default = _default;","import React, { useState } from \"react\"\nimport {\n    SpeechSynthesisCmd,\n    SpeechSynthesisReg,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { Grid, TextField } from \"@mui/material\"\nimport VoiceChatIcon from \"@mui/icons-material/VoiceChat\"\nimport CmdButton from \"../CmdButton\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { useId } from \"react-use-id-hook\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardSpeechSynthesis(props: DashboardServiceProps) {\n    const { service } = props\n    const enabled = useRegister(service, SpeechSynthesisReg.Enabled)\n    const [text, setText] = useState(\"jacdac\")\n    const textId = useId()\n\n    const handleChange = ev => {\n        const newValue = ev.target.value\n        setText(newValue)\n    }\n\n    const handleSpeak = async () => {\n        console.log(`speak ${text}`)\n        if (!enabled.boolValue)\n            await enabled.sendSetAsync(jdpack<[boolean]>(\"u8\", [true]), true)\n        await service.sendCmdAsync(\n            SpeechSynthesisCmd.Speak,\n            jdpack<[string]>(\"s\", [text])\n        )\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <TextField\n                    id={textId}\n                    spellCheck={false}\n                    value={text}\n                    label={\"speech synthesis\"}\n                    helperText={\"Enter text to speak out\"}\n                    onChange={handleChange}\n                    type={\"text\"}\n                />\n                <CmdButton\n                    disabled={!text}\n                    title=\"speak text\"\n                    onClick={handleSpeak}\n                    icon={<VoiceChatIcon />}\n                />\n            </Grid>\n        </>\n    )\n}\n"],"names":["React","useState","SpeechSynthesisCmd","SpeechSynthesisReg","Grid","TextField","VoiceChatIcon","CmdButton","jdpack","useId","useRegister","DashboardSpeechSynthesis","props","service","enabled","Enabled","text","setText","textId","handleChange","ev","newValue","target","value","handleSpeak","console","log","boolValue","sendSetAsync","sendCmdAsync","Speak"],"sourceRoot":""}