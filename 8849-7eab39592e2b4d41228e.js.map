{"version":3,"file":"8849-7eab39592e2b4d41228e.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASS,UAAT,GAAsB;AAClB,MAAMC,UAAU,GAAGR,8CAAO,CACtB;AAAA;;AAAA,WACI,OAAOS,MAAP,KAAkB,WAAlB,IACA,CAAC,wBAAC,WAAAA,MAAM,EAACC,UAAR,wEAAC,iCAAoB,4BAApB,CAAD,kDAAC,sBAAmDC,OAApD,CAFL;AAAA,GADsB,EAItB,EAJsB,CAA1B;AAMA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACH;;AAEc,SAASI,gBAAT,CAA0BC,KAA1B,EAA8C;AACzD,MAAM;AAAEL,IAAAA;AAAF,MAAiBD,UAAU,EAAjC;AACA,MAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBd,+CAAQ,CAAC,KAAD,CAAtC;AACA,MAAM;AAAA,OAACe,aAAD;AAAA,OAAgBC;AAAhB,MAAoChB,+CAAQ,CAAC,IAAD,CAAlD;AACA,MAAM;AAAEiB,IAAAA;AAAF,MAAsBnB,iDAAU,CAACK,6DAAD,CAAtC;AACA,MAAM;AAAEe,IAAAA;AAAF,MAAiBd,yEAAY,EAAnC,CALyD,CAOzD;;AACAH,EAAAA,0EAAc,EACV;AACA,uBAFU,EAGVkB,CAAC,IAAI;AACDD,IAAAA,UAAU,CAAC,mBAAD,CAAV;AACAC,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,gBAAgB,CAACG,CAAD,CAAhB;AACH,GARS,EASV,KATU,EAUV,EAVU,CAAd,CARyD,CAqBzD;;AACAlB,EAAAA,0EAAc,CAAC,cAAD,EAAwB,MAAM;AACxCiB,IAAAA,UAAU,CAAC,eAAD,CAAV;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,IAAAA,eAAe,CAAC,uBAAD,EAA0B,SAA1B,CAAf;AACH,GAJa,CAAd,CAtByD,CA4BzD;;AACAZ,EAAAA,oEAAc,gHAAC,aAAY;AACvB,QACI,OAAOG,MAAP,KAAkB,WAAlB,IACA,EAAE,6BAA6Ba,SAA/B,CAFJ,EAII;;AAEJ,QAAI;AACA;AACA,UAAMC,IAAI,SAAUD,SAAD,CAAmBE,uBAAnB,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B;AAAEH,QAAAA;AAAF,OAA9B;AACH,KAJD,CAIE,OAAOH,CAAP,EAAU;AACRK,MAAAA,OAAO,CAACE,KAAR,CAAcP,CAAd;AACH;AACJ,GAda,GAcX,EAdW,CAAd;AAgBA,MAAI,CAACN,OAAD,IAAYN,UAAhB,EAA4B,OAAO,IAAP;;AAE5B,MAAMoB,OAAO;AAAA,iHAAG,WAAOC,GAAP,EAAoD;AAChEA,MAAAA,GAAG,CAACR,cAAJ;AACA,YAAML,aAAN,aAAMA,aAAN,uBAAMA,aAAa,CAAEc,MAAf,EAAN;AACH,KAHY;;AAAA,oBAAPF,OAAO;AAAA;AAAA;AAAA,KAAb;;AAIA,sBACI,iDAAC,8DAAD;AACI,kBAAW,qBADf;AAEI,SAAK,EAAC,qBAFV;AAGI,WAAO,EAAEA,OAHb;AAII,WAAO,EAAC;AAJZ,KAKQf,KALR,aADJ;AAWH","sources":["webpack://jacdac-docs/./src/components/ui/InstallPWAButton.tsx"],"sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\"\nimport useWindowEvent from \"../hooks/useWindowEvent\"\nimport { Button, ButtonProps } from \"@mui/material\"\nimport AppContext from \"../AppContext\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport useEffectAsync from \"../useEffectAsync\"\n\nfunction usePWAInfo() {\n    const standAlone = useMemo(\n        () =>\n            typeof window !== \"undefined\" &&\n            !!window.matchMedia?.(\"(display-mode: standalone)\")?.matches,\n        []\n    )\n    return { standAlone }\n}\n\nexport default function InstallPWAButton(props: ButtonProps) {\n    const { standAlone } = usePWAInfo()\n    const [visible, setVisible] = useState(false)\n    const [promptInstall, setPromptInstall] = useState(null)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const { trackEvent } = useAnalytics()\n\n    // listen for prompt\n    useWindowEvent(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        \"beforeinstallprompt\" as any,\n        e => {\n            trackEvent(\"app.beforeinstall\")\n            e.preventDefault()\n            setVisible(true)\n            setPromptInstall(e)\n        },\n        false,\n        []\n    )\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    useWindowEvent(\"appinstalled\" as any, () => {\n        trackEvent(\"app.installed\")\n        setVisible(false)\n        enqueueSnackbar(\"Jacdac app installed!\", \"success\")\n    })\n\n    // detect installed apps\n    useEffectAsync(async () => {\n        if (\n            typeof window === \"undefined\" ||\n            !(\"getInstalledRelatedApps\" in navigator)\n        )\n            return\n\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const apps = await (navigator as any).getInstalledRelatedApps()\n            console.log(\"installed apps\", { apps })\n        } catch (e) {\n            console.debug(e)\n        }\n    }, [])\n\n    if (!visible || standAlone) return null\n\n    const onClick = async (evt: React.MouseEvent<HTMLButtonElement>) => {\n        evt.preventDefault()\n        await promptInstall?.prompt()\n    }\n    return (\n        <Button\n            aria-label=\"Install application\"\n            title=\"Install application\"\n            onClick={onClick}\n            variant=\"outlined\"\n            {...props}\n        >\n            Install\n        </Button>\n    )\n}\n"],"names":["React","useContext","useMemo","useState","useWindowEvent","Button","AppContext","useAnalytics","useEffectAsync","usePWAInfo","standAlone","window","matchMedia","matches","InstallPWAButton","props","visible","setVisible","promptInstall","setPromptInstall","enqueueSnackbar","trackEvent","e","preventDefault","navigator","apps","getInstalledRelatedApps","console","log","debug","onClick","evt","prompt"],"sourceRoot":""}