{"version":3,"file":"7628c7cf432e38cc6b3ac207aff24a39a272b1ce-0a63ea1e91d668bafe81.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,KAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBgB;AACuB;AACtD;AACA;AACA;;AAEgD;AAChD,2CAAe,gCAAa,eAAe,mBAAI;AAC/C;AACA,CAAC,YAAY;;;;;;;;;;;;;;;;ACT4D;AAClE;AACP,SAAS,uCAAoB;AAC7B;AACA,kBAAkB,yCAAsB;AACxC,qDAAe,WAAW;;ACL0E;AAC1C;AAC1D;AAC+B;AACP;AAC8C;AAClC;AACkB;AACT;AACU;AACV;AACN;AACa;AACd;AAC2B;AACjB;AACE;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,kEAAkE,6BAAU,wBAAwB,6BAAU,yEAAyE,6BAAU,uEAAuE,6BAAU,oCAAoC,6BAAU;AAChU,oCAAoC,6BAAU;AAC9C,uCAAuC,6BAAU,8BAA8B,6BAAU;AACzF,iCAAiC,6BAAU,4BAA4B,6BAAU;AACjF,mDAAmD,6BAAU,kCAAkC,6BAAU,2CAA2C,6BAAU;AAC9J;AACA,SAAS,iCAAc,QAAQ,mBAAmB;AAClD;;AAEA,eAAe,0BAAM;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,oBAAoB,uBAAkB;AACtC,KAAK;AACL,oBAAoB,uBAAkB,2BAA2B,6BAAU;AAC3E,KAAK;AACL,oBAAoB,uBAAkB,gCAAgC,6BAAU;AAChF,KAAK;AACL,oBAAoB,qBAAgB;AACpC,KAAK;AACL,oBAAoB,qBAAgB,yBAAyB,6BAAU;AACvE,KAAK;AACL,oBAAoB,qBAAgB,8BAA8B,6BAAU;AAC5E,KAAK;AACL,oBAAoB,2BAAsB;AAC1C,KAAK;AACL,oBAAoB,2BAAsB,+BAA+B,6BAAU;AACnF,KAAK;AACL,oBAAoB,2BAAsB,oCAAoC,6BAAU;AACxF,KAAK;AACL,oBAAoB,2BAAsB,4CAA4C,6BAAU;AAChG,KAAK,oCAAoC,6BAAU,gCAAgC,6BAAU,6GAA6G,6BAAU,gHAAgH,6BAAU,+EAA+E,6BAAU;AACva;AACA,CAAC;AACD;AACA;AACA;AACA,IAAI;AACJ,wBAAwB,kCAAK;AAC7B,SAAS,8BAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAoB;AACrC;AACA;AACA,KAAK;AACL,kBAAkB,uBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB,mCAA8B;AAChD;AACA;AACA,KAAK;AACL,kBAAkB,qCAAgC;AAClD;AACA;AACA,KAAK;AACL,kBAAkB,4BAAuB;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB,qBAAgB,IAAI,8BAAQ;AAC9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,kBAAkB,2BAAsB,IAAI,8BAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAK;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,aAAa,kCAAK;AAClB;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,iBAAiB,6BAAwB;AACzC,uBAAuB,kCAAK;AAC5B;AACA,GAAG;AACH,iBAAiB,6BAAwB;AACzC;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA,IAAI;AACJ,SAAS,8BAAQ,GAAG;AACpB;AACA;AACA;AACA;AACA,uBAAuB,kCAAK;AAC5B,KAAK;AACL,iBAAiB,6BAAwB;AACzC,uBAAuB,kCAAK;AAC5B,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,0BAA0B,6BAAwB;AAClD;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA,IAAI;AACJ,SAAS,8BAAQ,GAAG;AACpB;AACA;AACA,iBAAiB,0BAAqB;AACtC;AACA,KAAK;AACL,iBAAiB,6BAAwB;AACzC;AACA,KAAK;AACL,kBAAkB,uBAAkB;AACpC;AACA,KAAK;AACL,kBAAkB,4BAAuB;AACzC;AACA,KAAK;AACL,kBAAkB,qBAAgB;AAClC;AACA,KAAK;AACL,kBAAkB,0BAAqB;AACvC;AACA,KAAK;AACL,kBAAkB,2BAAsB;AACxC;AACA,KAAK;AACL,kBAAkB,gCAA2B;AAC7C;AACA;AACA,GAAG;AACH;AACA,gCAAgC,kCAAK;AACrC,iBAAiB,0BAAqB;AACtC,uBAAuB,kCAAK;AAC5B,KAAK;AACL,iBAAiB,6BAAwB;AACzC,uBAAuB,kCAAK;AAC5B,KAAK;AACL,kBAAkB,2BAAsB;AACxC,aAAa,kCAAK;AAClB;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,gBAAgB,0BAAM;AACtB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN,gDAAgD,6BAAU;AAC1D;AACA,CAAC;AACD;AACA;AACA,IAAI;AACJ,SAAS,8BAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;AAGA,wBAAwB,gBAAgB;AACxC,cAAc,gCAAa;AAC3B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,cAAc,+CAA6B;;AAE3C,gBAAgB,YAAY;AAC5B,kBAAkB,6BAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,yBAAU;;AAEpD,mBAAmB,8BAAQ,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gCAAgC,yBAAU,GAAG,8BAAQ;AACrD;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB,qBAAI,2FAA2F,6BAAU,6CAA6C,6BAAU;AACxL,gDAAgD,oBAAoB,gCAAgC,kBAAkB;AACtH,iBAAiB,qBAAI;AACrB;AACA,KAAK,iBAAiB,mBAAI,CAAC,MAAU;AACrC,iBAAiB,qBAAI;AACrB;AACA,KAAK;AACL;;AAEA;;AAEA,iCAAiC,oBAAoB;AACrD,0BAA0B,kBAAkB;AAC5C,iBAAiB,qBAAI;AACrB,KAAK;AACL;;AAEA;;AAEA,+BAA+B,oBAAoB;AACnD,wBAAwB,kBAAkB;AAC1C,iBAAiB,qBAAI;AACrB,KAAK;AACL;;AAEA,MAAM,KAAqC,EAAE,EAI1C;;AAEH,sBAAsB,oBAAK,WAAW,8BAAQ;AAC9C;AACA,eAAe,qBAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,4CAA4C,mBAAI;AAChD,iBAAiB,qBAAI;AACrB;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,8CAAe,IAAI;;;;;;;;;;;;;;;;AC5ZnB;AAEO,SAAeC,gBAAtB;AAAA;AAAA;;;wCAAO,WACHC,OADG,EAGS;AACZ,QAAMC,MAAM,GAAGH,WAAW,CAAC,IAAD,CAA1B;AACA,QAAMI,GAAG,SAASD,MAAM,CAACE,WAAP,CACdH,OADc,CAAlB;AAGA,WAAOE,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEE,IAAZ;AACH;;;;AAEM,SAAeC,cAAtB;AAAA;AAAA;;;qHAAO,WACHL,OADG,EAG4B;AAC/B,QAAI,CAACA,OAAO,CAACI,IAAR,CAAaE,KAAd,IAAuB,CAACN,OAAO,CAACI,IAAR,CAAaG,cAAzC,EAAyD;AACrDC,MAAAA,OAAO,CAACC,KAAR,CACI,8CADJ,EAEIT,OAAO,CAACI,IAFZ;AAIA,aAAOM,SAAP;AACH;;AAED,QAAMT,MAAM,GAAGH,2DAAW,CAAC,IAAD,CAA1B;AACA,QAAMI,GAAG,SAASD,MAAM,CAACE,WAAP,CAGhBH,OAHgB,CAAlB;AAIA,WAAOE,GAAP;AACH;;;;AAEM,SAAeS,YAAtB;AAAA;AAAA;;;mHAAO,WACHX,OADG,EAG0B;AAC7B,QACI,CAACA,OAAO,CAACI,IAAR,CAAaE,KAAd,IACA,CAACN,OAAO,CAACI,IAAR,CAAaQ,cADd,IAEA,CAACZ,OAAO,CAACI,IAAR,CAAaS,KAFd,IAGA,CAACb,OAAO,CAACI,IAAR,CAAaU,KAJlB,EAKE;AACEN,MAAAA,OAAO,CAACC,KAAR,CACI,6CADJ,EAEIT,OAAO,CAACI,IAFZ;AAIA,aAAOM,SAAP;AACH;;AAED,QAAMT,MAAM,GAAGH,2DAAW,CAAC,IAAD,CAA1B;AACA,QAAMI,GAAG,SAASD,MAAM,CAACE,WAAP,CAGhBH,OAHgB,CAAlB;AAIA,WAAOE,GAAP;AACH;;;;AAEM,SAAea,cAAtB;AAAA;AAAA;;;qHAAO,WACHf,OADG,EAG4B;AAC/B,QAAI,CAACA,OAAO,CAACI,IAAR,CAAaE,KAAd,IAAuB,CAACN,OAAO,CAACI,IAAR,CAAaY,KAAzC,EAAgD;AAC5CR,MAAAA,OAAO,CAACC,KAAR,CACI,+CADJ,EAEIT,OAAO,CAACI,IAFZ;AAIA,aAAOM,SAAP;AACH;;AAED,QAAMT,MAAM,GAAGH,2DAAW,CAAC,IAAD,CAA1B;AACA,QAAMI,GAAG,SAASD,MAAM,CAACE,WAAP,CAGhBH,OAHgB,CAAlB;AAIA,WAAOE,GAAP;AACH;;;;;;;;;;;;;;;;;;;;;;ACrFD;AACA;AAEA;AAEO,IAAMkB,OAAb,GACI,iBACoBC,UADpB,EAEoBC,UAFpB,EAGoBC,WAHpB,EAIoBC,eAJpB,EAKE;AAAA,OAJkBH,UAIlB,GAJkBA,UAIlB;AAAA,OAHkBC,UAGlB,GAHkBA,UAGlB;AAAA,OAFkBC,WAElB,GAFkBA,WAElB;AAAA,OADkBC,eAClB,GADkBA,eAClB;AAAE,CANR;AASO,SAASC,WAAT,CAAqBC,CAArB,EAAkCC,CAAlC,EAAwD;AAC3D,MAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,IAAP;AACb,MAAID,CAAC,IAAI,IAAL,IAAaC,CAAC,IAAI,IAAtB,EAA4B,OAAO,KAAP;AAC5B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B,OAAO,KAAP;;AAE3B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,CAACE,MAAtB,EAA8B,EAAEC,CAAhC,EAAmC;AAC/B,QAAIH,CAAC,CAACG,CAAD,CAAD,KAASF,CAAC,CAACE,CAAD,CAAd,EAAmB,OAAO,KAAP;AACtB;;AACD,SAAO,IAAP;AACH;AAEM,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAAA;;AACxC,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,UAAU,GAAG,EAAnB,CAFwC,CAIxC;;AACA,MAAI,CAACF,SAAL,EAAgB,OAAOrB,SAAP,CALwB,CAOxC;;AACA,MAAMwB,UAAU,GAAGH,SAAS,CAACI,MAAV,CAAiBC,MAAjB,CACfC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAc,cADR,EAEjB,CAFiB,EAEdC,KAFL;;AAGA,MAAI,CAACL,UAAL,EAAiB;AACbF,IAAAA,QAAQ,CAACD,SAAS,CAACS,EAAX,CAAR,GACI,gDADJ;AAEA,WAAOR,QAAP;AACH,GAfuC,CAiBxC;;;AACA,MAAMX,UAAU,GACZa,UAAU,CAACC,MAAX,CAAkB,CAAlB,EAAqBM,MAArB,CAA4BC,aAA5B,CAA0CC,KAA1C,CAAgDtB,UADpD;AAEAY,EAAAA,UAAU,CAACW,IAAX,CAAgBV,UAAU,CAACC,MAAX,CAAkB,CAAlB,EAAqBM,MAArB,CAA4BI,UAA5B,CAAuCF,KAAvD;AACA,0BAAAT,UAAU,CAACY,QAAX,8EAAqBC,OAArB,CAA6BC,UAAU,IAAI;AACvC;AACA,QAAMC,mBAAmB,GACrBD,UAAU,CAACb,MAAX,CAAkB,CAAlB,EAAqBM,MAArB,CAA4BC,aAA5B,CAA0CC,KAA1C,CAAgDtB,UADpD;;AAEA,QAAI,CAACI,WAAW,CAACwB,mBAAD,EAAsB5B,UAAtB,CAAhB,EAAmD;AAC/CW,MAAAA,QAAQ,CAACgB,UAAU,CAACR,EAAZ,CAAR,GACI,6CADJ;AAEH;;AAED,QAAMU,SAAS,GAAGF,UAAU,CAACb,MAAX,CAAkB,CAAlB,EAAqBM,MAArB,CAA4BI,UAA5B,CAAuCF,KAAzD;AACA,QAAIV,UAAU,CAACkB,OAAX,CAAmBD,SAAnB,IAAgC,CAApC,EAAuCjB,UAAU,CAACW,IAAX,CAAgBM,SAAhB;AAC1C,GAXD,EArBwC,CAkCxC;;AACA,MAAIjB,UAAU,CAACL,MAAX,GAAoB,CAAxB,EACII,QAAQ,CAACD,SAAS,CAACS,EAAX,CAAR,GACI,mEADJ;AAGJ,SAAOR,QAAP;AACH;;IAEoBoB;;;YACVC,iBAAP,wBAAsBf,IAAtB,EAAoCgB,cAApC,EAAwE;AACpE,QAAMC,GAAG,GAAG,IAAIH,SAAJ,CAAcd,IAAd,CAAZ;AACA,QAAM;AAAEhB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8B+B,cAApC;AACAC,IAAAA,GAAG,CAACC,qBAAJ,CAA0BlC,UAA1B,EAAsCC,WAAtC,EAHoE,CAGjB;;AACnD,WAAOgC,GAAP;AACH,IAED;;;AAaA,qBACWjB,IADX,EAEWmB,MAFX,EAGWnC,UAHX,EAIWD,UAJX,EAKE;AAAA;;AACE;AADF,UAJSiB,IAIT,GAJSA,IAIT;AAAA,UAHSmB,MAGT,GAHSA,MAGT;AAAA,UAFSnC,UAET,GAFSA,UAET;AAAA,UADSD,UACT,GADSA,UACT;AAGE,UAAKiB,IAAL,GAAYA,IAAZ;AACA,UAAKmB,MAAL,GAAcA,MAAM,IAAI,EAAxB;AACA,UAAKnC,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACA,UAAKE,eAAL,GAAuB,MAAKkC,oBAAL,EAAvB;AACA,UAAKrC,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AAPF;AAQD;;;;SAODsC,yBAAA,gCAAuBC,KAAvB,EAAsC;AAClC,WAAO,KAAKtC,UAAL,CAAgBsC,KAAhB,CAAP;AACH;;SAEDC,eAAA,sBACIC,SADJ,EAEIF,KAFJ,EAGIrC,WAHJ,EAIE;AACE,QAAI,KAAKC,eAAL,IAAwB,CAA5B,EAA+B;AAC3B;AACA,WAAKiC,MAAL,CAAYb,IAAZ,CAAiBgB,KAAjB;AACA,WAAKtC,UAAL,CAAgBsC,KAAhB,IAAyB,CAACE,SAAD,CAAzB;AACA,WAAKzC,UAAL,GAAkByC,SAAS,CAACC,OAA5B;AACA,WAAKC,QAAL,GAAgBF,SAAS,CAACE,QAA1B;AACA,WAAKzC,WAAL,GAAmBA,WAAnB;AAEA,WAAKC,eAAL,IAAwB,CAAxB;AACA,WAAKyC,IAAL,CAAUhD,4EAAV;AACH,KAVD,MAUO,IAAIQ,WAAW,CAACqC,SAAS,CAACC,OAAX,EAAoB,KAAK1C,UAAzB,CAAf,EAAqD;AACxD;AACA,UAAI,KAAKoC,MAAL,CAAYN,OAAZ,CAAoBS,KAApB,IAA6B,CAAjC,EAAoC;AAChC;AACA,aAAKH,MAAL,CAAYb,IAAZ,CAAiBgB,KAAjB;AACA,aAAKtC,UAAL,CAAgBsC,KAAhB,IAAyB,CAACE,SAAD,CAAzB;AACH,OAJD,MAIO;AACH,aAAKxC,UAAL,CAAgBsC,KAAhB,EAAuBhB,IAAvB,CAA4BkB,SAA5B;AACH;;AAED,WAAKtC,eAAL,IAAwB,CAAxB;AACA,WAAKyC,IAAL,CAAUhD,4EAAV;AACH,KAZM,MAYA;AACHT,MAAAA,OAAO,CAACC,KAAR,8BAC+BqD,SAAS,CAACC,OADzC,+BAC0E,KAAK1C,UAD/E;AAGH;AACJ;;SAEDmC,wBAAA,+BACIlC,UADJ,EAEIC,WAFJ,EAGE;AACE;AACA2C,IAAAA,MAAM,CAACC,IAAP,CAAY7C,UAAZ,EAAwByB,OAAxB,CAAgCa,KAAK,IAAI;AACrCtC,MAAAA,UAAU,CAACsC,KAAD,CAAV,CAAkBb,OAAlB,CAA0Be,SAAS,IAAI;AACnC,YAAMP,GAAG,GAAGpC,6FAAA,CAA4B2C,SAA5B,CAAZ;AACA,aAAKD,YAAL,CAAkBN,GAAlB,EAAuBK,KAAvB,EAA8BrC,WAA9B;AACH,OAHD;AAIH,KALD;AAMH;;SAED6C,kBAAA,yBAAgBN,SAAhB,EAAyC;AACrC,QAAMO,cAAc,GAAGP,SAAS,CAACxB,IAAV,CAAegC,KAAf,CACnB,CADmB,EAEnBR,SAAS,CAACxB,IAAV,CAAea,OAAf,CAAuB,GAAvB,CAFmB,CAAvB;AAIA,QAAMtB,CAAC,GAAG,KAAKP,UAAL,CAAgB+C,cAAhB,EAAgClB,OAAhC,CAAwCW,SAAxC,CAAV;;AAEA,QAAIjC,CAAC,GAAG,CAAC,CAAT,EAAY;AACR,WAAKP,UAAL,CAAgB+C,cAAhB,EAAgCE,MAAhC,CAAuC1C,CAAvC,EAA0C,CAA1C,EADQ,CAGR;;AACA,UAAI,KAAKP,UAAL,CAAgB+C,cAAhB,EAAgCzC,MAAhC,IAA0C,CAA9C,EAAiD;AAC7C,YAAM4C,CAAC,GAAG,KAAKf,MAAL,CAAYN,OAAZ,CAAoBkB,cAApB,CAAV;AACA,aAAKZ,MAAL,CAAYc,MAAZ,CAAmBC,CAAnB,EAAsB,CAAtB;AACH;;AAED,WAAKhD,eAAL,IAAwB,CAAxB;AACH;AACJ;;SAEDkC,uBAAA,gCAAuB;AACnB,QAAIe,KAAK,GAAG,CAAZ;AAEA,SAAKhB,MAAL,CAAYV,OAAZ,CAAoBa,KAAK,IAAI;AACzB,WAAKtC,UAAL,CAAgBsC,KAAhB,EAAuBb,OAAvB,CAA+B,MAAM;AACjC0B,QAAAA,KAAK,IAAI,CAAT;AACH,OAFD;AAGH,KAJD;AAMA,WAAOA,KAAP;AACH;;SAiBDC,QAAA,iBAAQ;AACJ,QAAMC,oBAAoB,6BAA2B,KAAKnD,eAA1D;AACA,QAAMoD,uBAAuB,iBAAe,KAAKZ,QAAjD;AAEA,QAAMa,aAAuB,GAAG,EAAhC;AACA,SAAKpB,MAAL,CAAYV,OAAZ,CAAoBa,KAAK,IAAI;AACzB,WAAKtC,UAAL,CAAgBsC,KAAhB,EAAuBb,OAAvB,CAA+Be,SAAS,IAAI;AACxCe,QAAAA,aAAa,CAACjC,IAAd,CACI,wBACIkB,SAAS,CAACxB,IADd,GAEI,GAFJ,GAGIwB,SAAS,CAACgB,IAAV,CAAelD,MAHnB,GAII,GAJJ,GAKIgC,KANR;AAQAiB,QAAAA,aAAa,CAACjC,IAAd,CAAmBkB,SAAS,CAACY,KAAV,EAAnB;AACH,OAVD;AAWH,KAZD;AAaA,QAAMK,UAAU,GAAGF,aAAa,CAACG,IAAd,CAAmB,IAAnB,CAAnB;AAEA,QAAMC,GAAa,GAAG,CAClBN,oBADkB,EAElBC,uBAFkB,EAGlBG,UAHkB,CAAtB;AAKA,WAAOE,GAAG,CAACD,IAAJ,CAAS,IAAT,CAAP;AACH;;SAEDE,SAAA,kBAAS;AACL,QAAMC,UAAU,GAAG;AACf7D,MAAAA,UAAU,EAAE,KAAKA,UADF;AAEf8D,MAAAA,WAAW,EAAE,KAAK7D,WAFH;AAGfe,MAAAA,IAAI,EAAE,KAAKA;AAHI,KAAnB;AAKA,WAAO6C,UAAP;AACH;;;;SA1ID,eAAmB;AACf,UAAI,KAAK1B,MAAL,CAAY7B,MAAZ,IAAsB,CAA1B,EAA6B,OAAO,CAAC,QAAD,CAAP;AAC7B,aAAO,KAAK6B,MAAZ;AACH;;;SAqFD,eAAc;AACV,UAAI,KAAKA,MAAL,CAAY7B,MAAZ,IAAsB,CAA1B,EAA6B,OAAO,CAAC,eAAD,CAAP;AAE7B,UAAMyD,SAAS,GAAG,EAAlB;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,WAAK7B,MAAL,CAAYV,OAAZ,CAAoBa,KAAK,IAAI;AACzB0B,QAAAA,OAAO,CAAC1C,IAAR,CACIgB,KAAK,GAAG,IAAR,GAAe,KAAKtC,UAAL,CAAgBsC,KAAhB,EAAuBhC,MAAtC,GAA+C,aADnD;AAGH,OAJD;AAKAyD,MAAAA,SAAS,CAACzC,IAAV,CAAe,cAAc0C,OAAO,CAACN,IAAR,CAAa,IAAb,CAA7B;AAEA,aAAOK,SAAP;AACH;;;;EAzIkCnE;;;;;;;;;;;;;;;;;;ACnEvC;AACA;AAEe,SAASwE,eAAT,CACXC,KADW,EAMb;AACE,MAAM;AAAE/B,IAAAA,KAAF;AAASgC,IAAAA,cAAT;AAAyBC,IAAAA;AAAzB,MAAiDF,KAAvD;AAAA,MAA8CG,IAA9C,2GAAuDH,KAAvD;;AACA,sBACI,iDAAC,8DAAD;AACI,WAAO,eAAE,iDAAC,8DAAD,EAAYG,IAAZ,CADb;AAEI,SAAK,EAAElC,KAFX;AAGI,SAAK,EAAEiC,UAHX;AAII,kBAAc,EAAED;AAJpB,IADJ;AAQH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/material/internal/svg-icons/Cancel.js","webpack://jacdac-docs/./node_modules/@mui/material/Chip/chipClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/Chip/Chip.js","webpack://jacdac-docs/./src/components/blockly/dsl/workers/tf.proxy.ts","webpack://jacdac-docs/./src/components/model-editor/MBDataSet.ts","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nvar chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  var slots = {\n    root: ['root', variant, disabled && 'disabled', \"size\".concat(capitalize(size)), \"color\".concat(capitalize(color)), clickable && 'clickable', clickable && \"clickableColor\".concat(capitalize(color)), onDelete && 'deletable', onDelete && \"deletableColor\".concat(capitalize(color)), \"\".concat(variant).concat(capitalize(color))],\n    label: ['label', \"label\".concat(capitalize(size))],\n    avatar: ['avatar', \"avatar\".concat(capitalize(size)), \"avatarColor\".concat(capitalize(color))],\n    icon: ['icon', \"icon\".concat(capitalize(size)), \"iconColor\".concat(capitalize(color))],\n    deleteIcon: ['deleteIcon', \"deleteIcon\".concat(capitalize(size)), \"deleteIconColor\".concat(capitalize(color)), \"deleteIconOutlinedColor\".concat(capitalize(color))]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nvar ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    var {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [\"& .\".concat(chipClasses.avatar)]: styles.avatar\n    }, {\n      [\"& .\".concat(chipClasses.avatar)]: styles[\"avatar\".concat(capitalize(size))]\n    }, {\n      [\"& .\".concat(chipClasses.avatar)]: styles[\"avatarColor\".concat(capitalize(color))]\n    }, {\n      [\"& .\".concat(chipClasses.icon)]: styles.icon\n    }, {\n      [\"& .\".concat(chipClasses.icon)]: styles[\"icon\".concat(capitalize(size))]\n    }, {\n      [\"& .\".concat(chipClasses.icon)]: styles[\"iconColor\".concat(capitalize(color))]\n    }, {\n      [\"& .\".concat(chipClasses.deleteIcon)]: styles.deleteIcon\n    }, {\n      [\"& .\".concat(chipClasses.deleteIcon)]: styles[\"deleteIcon\".concat(capitalize(size))]\n    }, {\n      [\"& .\".concat(chipClasses.deleteIcon)]: styles[\"deleteIconColor\".concat(capitalize(color))]\n    }, {\n      [\"& .\".concat(chipClasses.deleteIcon)]: styles[\"deleteIconOutlinedColor\".concat(capitalize(color))]\n    }, styles.root, styles[\"size\".concat(capitalize(size))], styles[\"color\".concat(capitalize(color))], clickable && styles.clickable, clickable && color !== 'default' && styles[\"clickableColor\".concat(capitalize(color), \")\")], onDelete && styles.deletable, onDelete && color !== 'default' && styles[\"deletableColor\".concat(capitalize(color))], styles[variant], variant === 'outlined' && styles[\"outlined\".concat(capitalize(color))]];\n  }\n})(_ref => {\n  var {\n    theme,\n    ownerState\n  } = _ref;\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [\"&.\".concat(chipClasses.disabled)]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [\"& .\".concat(chipClasses.avatar)]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [\"& .\".concat(chipClasses.avatarColorPrimary)]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [\"& .\".concat(chipClasses.avatarColorSecondary)]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [\"& .\".concat(chipClasses.avatarSmall)]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [\"& .\".concat(chipClasses.icon)]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [\"& .\".concat(chipClasses.deleteIcon)]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [\"&.\".concat(chipClasses.focusVisible)]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [\"&.\".concat(chipClasses.focusVisible)]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, _ref2 => {\n  var {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({}, ownerState.clickable && {\n    userSelect: 'none',\n    WebkitTapHighlightColor: 'transparent',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    },\n    [\"&.\".concat(chipClasses.focusVisible)]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1]\n    }\n  }, ownerState.clickable && ownerState.color !== 'default' && {\n    [\"&:hover, &.\".concat(chipClasses.focusVisible)]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, _ref3 => {\n  var {\n    theme,\n    ownerState\n  } = _ref3;\n  return _extends({}, ownerState.variant === 'outlined' && {\n    backgroundColor: 'transparent',\n    border: \"1px solid \".concat(theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]),\n    [\"&.\".concat(chipClasses.clickable, \":hover\")]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [\"&.\".concat(chipClasses.focusVisible)]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    [\"& .\".concat(chipClasses.avatar)]: {\n      marginLeft: 4\n    },\n    [\"& .\".concat(chipClasses.avatarSmall)]: {\n      marginLeft: 2\n    },\n    [\"& .\".concat(chipClasses.icon)]: {\n      marginLeft: 4\n    },\n    [\"& .\".concat(chipClasses.iconSmall)]: {\n      marginLeft: 2\n    },\n    [\"& .\".concat(chipClasses.deleteIcon)]: {\n      marginRight: 5\n    },\n    [\"& .\".concat(chipClasses.deleteIconSmall)]: {\n      marginRight: 3\n    }\n  }, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n    color: theme.palette[ownerState.color].main,\n    border: \"1px solid \".concat(alpha(theme.palette[ownerState.color].main, 0.7)),\n    [\"&.\".concat(chipClasses.clickable, \":hover\")]: {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n    },\n    [\"&.\".concat(chipClasses.focusVisible)]: {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n    },\n    [\"& .\".concat(chipClasses.deleteIcon)]: {\n      color: alpha(theme.palette[ownerState.color].main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].main\n      }\n    }\n  });\n});\nvar ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    var {\n      size\n    } = ownerState;\n    return [styles.label, styles[\"label\".concat(capitalize(size))]];\n  }\n})(_ref4 => {\n  var {\n    ownerState\n  } = _ref4;\n  return _extends({\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingLeft: 12,\n    paddingRight: 12,\n    whiteSpace: 'nowrap'\n  }, ownerState.size === 'small' && {\n    paddingLeft: 8,\n    paddingRight: 8\n  });\n});\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  var {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  var ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[\"deleteIconOutlinedColor\".concat(capitalize(color))] : classes[\"deleteIconColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default Chip;","import type {\n    TFModelCompileRequest,\n    TFModelCompileResponse,\n    TFModelTrainRequest,\n    TFModelTrainResponse,\n    TFModelPredictRequest,\n    TFModelPredictResponse,\n    TFModelMessage,\n} from \"../../../../workers/tf/dist/node_modules/tf.worker\"\nimport workerProxy from \"./proxy\"\n\nexport async function postModelRequest(\n    message: TFModelMessage\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<any> {\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<TFModelMessage, TFModelMessage>(\n        message\n    )\n    return res?.data\n}\n\nexport async function compileRequest(\n    message: TFModelCompileRequest\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<TFModelCompileResponse> {\n    if (!message.data.model || !message.data.modelBlockJSON) {\n        console.error(\n            \"Missing piece of message data for compiling \",\n            message.data\n        )\n        return undefined\n    }\n\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<\n        TFModelCompileRequest,\n        TFModelCompileResponse\n    >(message)\n    return res\n}\n\nexport async function trainRequest(\n    message: TFModelTrainRequest\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<TFModelTrainResponse> {\n    if (\n        !message.data.model ||\n        !message.data.trainingParams ||\n        !message.data.xData ||\n        !message.data.yData\n    ) {\n        console.error(\n            \"Missing piece of message data for training \",\n            message.data\n        )\n        return undefined\n    }\n\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<\n        TFModelTrainRequest,\n        TFModelTrainResponse\n    >(message)\n    return res\n}\n\nexport async function predictRequest(\n    message: TFModelPredictRequest\n    // eslint-disable-next-line @typescript-eslint/ban-types\n): Promise<TFModelPredictResponse> {\n    if (!message.data.model || !message.data.zData) {\n        console.error(\n            \"Missing piece of message data for predicting \",\n            message.data\n        )\n        return undefined\n    }\n\n    const worker = workerProxy(\"tf\")\n    const res = await worker.postMessage<\n        TFModelPredictRequest,\n        TFModelPredictResponse\n    >(message)\n    return res\n}\n","import { CHANGE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport JDEventSource from \"../../../jacdac-ts/src/jdom/eventsource\"\n\nimport FieldDataSet, { Recording } from \"../FieldDataSet\"\n\nexport class DataSet {\n    constructor(\n        public readonly inputTypes: string[],\n        public readonly recordings: { [label: string]: Recording[] },\n        public readonly registerIds: string[],\n        public readonly totalRecordings: number\n    ) {}\n}\n\nexport function arraysEqual(a: string[], b: string[]): boolean {\n    if (a === b) return true\n    if (a == null || b == null) return false\n    if (a.length !== b.length) return false\n\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false\n    }\n    return true\n}\n\nexport function validDataSetJSON(blockJSON) {\n    const warnings = {}\n    const classNames = []\n\n    // don't check empty block JSON\n    if (!blockJSON) return undefined\n\n    // 1. make sure there is at least one recording\n    const firstLayer = blockJSON.inputs.filter(\n        input => input.name == \"LAYER_INPUTS\"\n    )[0].child\n    if (!firstLayer) {\n        warnings[blockJSON.id] =\n            \"Valid datasets should contain recording blocks\"\n        return warnings\n    }\n\n    // the first recording block determines the input type\n    const inputTypes =\n        firstLayer.inputs[0].fields.expand_button.value.inputTypes\n    classNames.push(firstLayer.inputs[0].fields.class_name.value)\n    firstLayer.children?.forEach(childBlock => {\n        // 2. make sure subsequent recordings have the same input type as the first recording\n        const recordingInputTypes =\n            childBlock.inputs[0].fields.expand_button.value.inputTypes\n        if (!arraysEqual(recordingInputTypes, inputTypes)) {\n            warnings[childBlock.id] =\n                \"Recording does not match dataset input type\"\n        }\n\n        const className = childBlock.inputs[0].fields.class_name.value\n        if (classNames.indexOf(className) < 0) classNames.push(className)\n    })\n\n    // 3. make sure there are at least two classes in the dataset\n    if (classNames.length < 2)\n        warnings[blockJSON.id] =\n            \"Valid datasets should contain at least two different class labels\"\n\n    return warnings\n}\n\nexport default class MBDataSet extends JDEventSource {\n    static createFromFile(name: string, datasetJSONObj: DataSet): MBDataSet {\n        const set = new MBDataSet(name)\n        const { recordings, registerIds } = datasetJSONObj\n        set.addRecordingsFromFile(recordings, registerIds) // add recordings and update total recordings\n        return set\n    }\n\n    // maintain computed number of recordings and input data types to avoid recomputation\n    totalRecordings: number\n    interval: number\n\n    // save what registers this dataset was created with\n    registerIds: string[]\n\n    // maintain data computed as arrays for tensorflow\n    xs: number[][][]\n    ys: number[]\n    length: number\n    width: number\n\n    constructor(\n        public name: string,\n        public labels?: string[],\n        public recordings?: { [label: string]: FieldDataSet[] },\n        public inputTypes?: string[]\n    ) {\n        super()\n\n        this.name = name\n        this.labels = labels || []\n        this.recordings = recordings || {}\n        this.totalRecordings = this.countTotalRecordings()\n        this.inputTypes = inputTypes || []\n    }\n\n    get labelOptions() {\n        if (this.labels.length == 0) return [\"class1\"]\n        return this.labels\n    }\n\n    getRecordingsWithLabel(label: string) {\n        return this.recordings[label]\n    }\n\n    addRecording(\n        recording: FieldDataSet,\n        label: string,\n        registerIds: string[]\n    ) {\n        if (this.totalRecordings == 0) {\n            // the first recording added to the dataset determines its parameters\n            this.labels.push(label)\n            this.recordings[label] = [recording]\n            this.inputTypes = recording.headers\n            this.interval = recording.interval\n            this.registerIds = registerIds\n\n            this.totalRecordings += 1\n            this.emit(CHANGE)\n        } else if (arraysEqual(recording.headers, this.inputTypes)) {\n            // Check if label is already in dataset\n            if (this.labels.indexOf(label) < 0) {\n                // If not, add the new label to the dataset\n                this.labels.push(label)\n                this.recordings[label] = [recording]\n            } else {\n                this.recordings[label].push(recording)\n            }\n\n            this.totalRecordings += 1\n            this.emit(CHANGE)\n        } else {\n            console.error(\n                `Cannot add data of type ${recording.headers} to dataset with types ${this.inputTypes}`\n            )\n        }\n    }\n\n    addRecordingsFromFile(\n        recordings: { [label: string]: Recording[] },\n        registerIds: string[]\n    ) {\n        //totalRecordings\n        Object.keys(recordings).forEach(label => {\n            recordings[label].forEach(recording => {\n                const set = FieldDataSet.createFromFile(recording)\n                this.addRecording(set, label, registerIds)\n            })\n        })\n    }\n\n    removeRecording(recording: FieldDataSet) {\n        const recordingLabel = recording.name.slice(\n            0,\n            recording.name.indexOf(\"$\")\n        )\n        const i = this.recordings[recordingLabel].indexOf(recording)\n\n        if (i > -1) {\n            this.recordings[recordingLabel].splice(i, 1)\n\n            // If this emptied out a label, then remove that label\n            if (this.recordings[recordingLabel].length == 0) {\n                const j = this.labels.indexOf(recordingLabel)\n                this.labels.splice(j, 1)\n            }\n\n            this.totalRecordings -= 1\n        }\n    }\n\n    countTotalRecordings() {\n        let total = 0\n\n        this.labels.forEach(label => {\n            this.recordings[label].forEach(() => {\n                total += 1\n            })\n        })\n\n        return total\n    }\n\n    get summary() {\n        if (this.labels.length <= 0) return [\"Classes: none\"]\n\n        const modelInfo = []\n        const classes = []\n        this.labels.forEach(label => {\n            classes.push(\n                label + \" [\" + this.recordings[label].length + \" sample(s)]\"\n            )\n        })\n        modelInfo.push(\"Classes: \" + classes.join(\", \"))\n\n        return modelInfo\n    }\n\n    toCSV() {\n        const recordingCountHeader = `Number of recordings,${this.totalRecordings}`\n        const recordingIntervalHeader = `Interval,${this.interval}`\n\n        const recordingData: string[] = []\n        this.labels.forEach(label => {\n            this.recordings[label].forEach(recording => {\n                recordingData.push(\n                    \"Recording metadata,\" +\n                        recording.name +\n                        \",\" +\n                        recording.rows.length +\n                        \",\" +\n                        label\n                )\n                recordingData.push(recording.toCSV())\n            })\n        })\n        const recordData = recordingData.join(\"\\n\")\n\n        const csv: string[] = [\n            recordingCountHeader,\n            recordingIntervalHeader,\n            recordData,\n        ]\n        return csv.join(\"\\n\")\n    }\n\n    toJSON() {\n        const datasetObj = {\n            recordings: this.recordings,\n            reigsterIds: this.registerIds,\n            name: this.name,\n        }\n        return datasetObj\n    }\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@mui/material\"\nimport React, { CSSProperties } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: {\n        label: string | number | JSX.Element\n        labelPlacement?: \"end\" | \"start\" | \"top\" | \"bottom\"\n        labelStyle?: CSSProperties\n    } & SwitchProps\n) {\n    const { label, labelPlacement, labelStyle, ...rest } = props\n    return (\n        <FormControlLabel\n            control={<Switch {...rest} />}\n            label={label}\n            style={labelStyle}\n            labelPlacement={labelPlacement}\n        />\n    )\n}\n"],"names":["workerProxy","postModelRequest","message","worker","res","postMessage","data","compileRequest","model","modelBlockJSON","console","error","undefined","trainRequest","trainingParams","xData","yData","predictRequest","zData","CHANGE","JDEventSource","FieldDataSet","DataSet","inputTypes","recordings","registerIds","totalRecordings","arraysEqual","a","b","length","i","validDataSetJSON","blockJSON","warnings","classNames","firstLayer","inputs","filter","input","name","child","id","fields","expand_button","value","push","class_name","children","forEach","childBlock","recordingInputTypes","className","indexOf","MBDataSet","createFromFile","datasetJSONObj","set","addRecordingsFromFile","labels","countTotalRecordings","getRecordingsWithLabel","label","addRecording","recording","headers","interval","emit","Object","keys","removeRecording","recordingLabel","slice","splice","j","total","toCSV","recordingCountHeader","recordingIntervalHeader","recordingData","rows","recordData","join","csv","toJSON","datasetObj","reigsterIds","modelInfo","classes","FormControlLabel","Switch","React","SwitchWithLabel","props","labelPlacement","labelStyle","rest"],"sourceRoot":""}