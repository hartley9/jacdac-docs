{"version":3,"file":"876-972c0e725efbb9cd8d80.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardLightBulb.tsx"],"sourcesContent":["import React from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport SensorServer from \"../../../jacdac-ts/src/servers/sensorserver\"\nimport { LightBulbReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport useRegister from \"../hooks/useRegister\"\nimport { CircularProgress, Grid, Slider } from \"@material-ui/core\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport PowerButton from \"../widgets/PowerButton\"\n\nexport default function DashboardLightBulb(props: DashboardServiceProps) {\n    const { service } = props\n    const server = useServiceServer<SensorServer<[boolean]>>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { controlBackground, active, textProps } = useWidgetTheme(color)\n    const brightnessRegister = useRegister(service, LightBulbReg.Brightness)\n    const [brightness] = useRegisterUnpackedValue<[number]>(\n        brightnessRegister,\n        props\n    )\n    const brightnessPercent = useThrottledValue(\n        Math.round(brightness * 100),\n        400,\n        5\n    )\n    const dimmeableRegister = useRegister(service, LightBulbReg.Dimmeable)\n    const dimmeable = useRegisterBoolValue(dimmeableRegister, props)\n\n    if (brightness === undefined) return <CircularProgress />\n\n    const handleChecked = () =>\n        brightnessRegister.sendSetPackedAsync([brightness > 0 ? 0 : 1], true)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleChange: any = (event: unknown, value: number | number[]) => {\n        const b = (value as number) / 100\n        brightnessRegister.sendSetPackedAsync([b], true)\n    }\n\n    const w = 96\n    const sw = 2\n    const cx = w / 2\n    const cy = w / 2\n    const r = w / 2 - 4\n    const ri = (r * brightnessPercent) / 100\n    const roff = r / 3\n    const riff = roff - 4\n    const on = brightnessPercent > 0\n    const off = !on\n    const tvalue = dimmeable\n        ? `${Math.round(brightnessPercent)}%`\n        : on\n        ? \"on\"\n        : \"off\"\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SvgWidget tabIndex={0} width={w} height={w}>\n                    <circle\n                        cx={cx}\n                        cy={cx}\n                        r={r}\n                        fill={controlBackground}\n                        strokeWidth={sw}\n                    />\n                    <circle\n                        cx={cy}\n                        cy={cy}\n                        r={ri}\n                        fill={active}\n                        stroke={controlBackground}\n                        strokeWidth={sw}\n                    />\n                    {dimmeable !== true ? (\n                        <PowerButton\n                            off={off}\n                            label={tvalue}\n                            cx={cx}\n                            cy={cy}\n                            r={roff}\n                            ri={riff}\n                            color={color}\n                            onClick={handleChecked}\n                        />\n                    ) : (\n                        <text {...textProps} x={cx} y={cy} aria-label={tvalue}>\n                            {tvalue}\n                        </text>\n                    )}\n                </SvgWidget>\n            </Grid>\n            {dimmeable === true && (\n                <Grid item xs={12}>\n                    <Slider\n                        value={brightnessPercent}\n                        min={0}\n                        max={100}\n                        valueLabelDisplay=\"off\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["React","useRegisterBoolValue","useRegisterUnpackedValue","useServiceServer","useWidgetTheme","LightBulbReg","useRegister","CircularProgress","Grid","Slider","SvgWidget","useThrottledValue","PowerButton","DashboardLightBulb","props","service","server","color","controlBackground","active","textProps","brightnessRegister","Brightness","brightness","brightnessPercent","Math","round","dimmeableRegister","Dimmeable","dimmeable","undefined","handleChecked","sendSetPackedAsync","handleChange","event","value","b","w","sw","cx","cy","r","ri","roff","riff","on","off","tvalue"],"sourceRoot":""}