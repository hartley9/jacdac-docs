{"version":3,"file":"component---src-pages-tools-hid-events-tsx-83ad3e0581549eef14d7.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/clients/settingsclient.ts","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/KeyboardKeyInput.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts","webpack://jacdac-docs/./src/pages/tools/hid-events.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import { CHANGE, SettingsCmd } from \"../constants\"\nimport { jdpack, jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport { InPipeReader } from \"../pipes\"\nimport JDService from \"../service\"\nimport { JDServiceClient } from \"../serviceclient\"\nimport { bufferToString, stringToBuffer } from \"../utils\"\n\n/**\n * A settings service client implementation.\n * @category Clients\n */\nexport class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear)\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.ListKeys),\n            true\n        )\n        const { output } = await inp.readAll()\n        const keys = output.map(pkt => pkt.stringData)\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string; value?: Uint8Array }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.List),\n            true\n        )\n        const { output } = await inp.readAll()\n        return output\n            .map(pkt => {\n                const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n                return key && { key, value }\n            })\n            .filter(kv => !!kv)\n    }\n\n    async setValue(key: string, value: Uint8Array) {\n        key = key.trim()\n        if (value === undefined) {\n            await this.deleteValue(key)\n        } else {\n            const pkt = Packet.from(\n                SettingsCmd.Set,\n                jdpack(\"z b\", [key, value])\n            )\n            await this.service.sendPacketAsync(pkt)\n            this.emit(CHANGE)\n        }\n    }\n\n    async setStringValue(key: string, value: string) {\n        await this.setValue(key, value ? stringToBuffer(value) : undefined)\n    }\n\n    async getValue(key: string): Promise<Uint8Array> {\n        if (!key) return undefined\n\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]))\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt)\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\")\n        if (key !== rkey) {\n            console.error(\n                `device returned different key, got \"${rkey}\", expected \"${key}\"`\n            )\n            return undefined\n        }\n        return value\n    }\n\n    async getStringValue(key: string) {\n        const value = await this.getValue(key)\n        return value && bufferToString(value)\n    }\n\n    async deleteValue(key: string) {\n        if (!key) return\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]))\n        await this.service.sendPacketAsync(pkt)\n\n        this.emit(CHANGE)\n    }\n}\nexport default SettingsClient\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@mui/material\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\nimport useDevices from \"../hooks/useDevices\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useDevices({ serviceClass, ignoreInfrastructure: true })\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useContext } from \"react\"\nimport DeviceFilter from \"../../../jacdac-ts/src/jdom/filters/devicefilter\"\nimport ServiceFilter from \"../../../jacdac-ts/src/jdom/filters/servicefilter\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, _ => _?.services(options) || [], [\n        JSON.stringify(options),\n    ])\n    return services\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}-hr`,\n    start: `${PREFIX}-start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { HidKeyboardModifiers } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport Keyboard from \"react-simple-keyboard\"\nimport \"react-simple-keyboard/build/css/index.css\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useId } from \"react-use-id-hook\"\nimport {\n    modifierCodes,\n    renderKeyboardKey,\n    selectors,\n} from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\n\nconst PREFIX = \"KeyboardKeyInput\"\n\nconst classes = {\n    capture: `${PREFIX}-capture`,\n    darkKeyboard: `${PREFIX}-darkKeyboard`,\n    keyboard: `${PREFIX}-keyboard`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`& .${classes.capture}`]: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            borderColor: theme.palette.primary.main,\n        },\n        \"&:focus\": {\n            borderColor: theme.palette.action.active,\n        },\n    },\n\n    [`& .${classes.darkKeyboard}`]: {\n        backgroundColor: \"#333 !important\",\n        borderColor: \"#777 !important\",\n        color: \"white !important\",\n        \"& .hg-button\": {\n            background: \"rgba(0, 0, 0, 0.5) !important\",\n            color: \"white\",\n        },\n        \"& .hg-button.buttonSelected\": {\n            background: `${theme.palette.primary.dark} !important`,\n            color: \"white !important\",\n        },\n    },\n\n    [`& .${classes.keyboard}`]: {\n        \"& .buttonSelected\": {\n            background: `${theme.palette.primary.dark} !important`,\n            color: \"white !important\",\n        },\n    },\n}))\n\nexport default function KeyboardKeyInput(props: {\n    initialSelector?: number\n    initialModifiers?: HidKeyboardModifiers\n    selector?: number\n    modifiers?: HidKeyboardModifiers\n    onChange: (newSelector: number, newModifiers: HidKeyboardModifiers) => void\n}) {\n    const { initialSelector, initialModifiers, selector, modifiers, onChange } =\n        props\n    const uncontrolled = useMemo(\n        () => selector === undefined || modifiers === undefined,\n        []\n    )\n    const [selector_, setSelector_] = useState<number>(initialSelector || 0)\n    const [modifiers_, setModifiters_] = useState<HidKeyboardModifiers>(\n        initialModifiers || HidKeyboardModifiers.None\n    )\n    const { darkMode } = useContext(DarkModeContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const keyboardRef = useRef<any>()\n\n    const theme = `hg-theme-default hg-layout-default ${\n        darkMode === \"dark\" ? classes.darkKeyboard : classes.keyboard\n    }`\n    const { mobile } = useMediaQueries()\n    const layoutName = mobile ? \"mobile\" : \"default\"\n    const keyboardId = useId()\n\n    const layout = {\n        default: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6 7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space} {metaright} {altright}\",\n        ],\n        mobile: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5}\",\n            \"{f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6\",\n            \"7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t\",\n            \"y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g\",\n            \"h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b\",\n            \"n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space}\",\n            \"{metaright} {altright}\",\n        ],\n    }\n    const display = {\n        \"{escape}\": \"esc ⎋\",\n        \"{tab}\": \"tab ⇥\",\n        \"{backspace}\": \"backspace ⌫\",\n        \"{enter}\": \"enter ↵\",\n        \"{capslock}\": \"caps lock ⇪\",\n        \"{shiftleft}\": \"shift ⇧\",\n        \"{shiftright}\": \"shift ⇧\",\n        \"{controlleft}\": \"ctrl ⌃\",\n        \"{controlright}\": \"ctrl ⌃\",\n        \"{altleft}\": \"alt ⌥\",\n        \"{altright}\": \"alt ⌥\",\n        \"{metaleft}\": \"cmd ⌘\",\n        \"{metaright}\": \"cmd ⌘\",\n        \"{space}\": \"⎵\",\n    }\n    const handleKeyboardKeyPress = (code: string) => {\n        code = code.toLowerCase().replace(/[{}]/g, \"\")\n        let newSelector = selector_\n        let newModifiers = modifiers_\n        const msel = selectors[code]\n        const mcode = modifierCodes[code]\n        if (msel) {\n            if (msel === selector) newSelector = undefined\n            else newSelector = msel\n        } else {\n            if (mcode) {\n                if (newModifiers & mcode) newModifiers &= ~mcode\n                else newModifiers |= mcode\n            }\n        }\n        setSelector_(newSelector)\n        setModifiters_(newModifiers)\n        onChange(newSelector, newModifiers)\n    }\n\n    // update external values\n    useEffect(() => {\n        if (selector !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled selector`)\n            setSelector_(selector)\n        }\n    }, [selector])\n    useEffect(() => {\n        if (modifiers !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled modifier`)\n            setModifiters_(modifiers)\n        }\n    }, [modifiers])\n\n    const value = renderKeyboardKey(selector_, modifiers_, false)\n    useEffect(() => {\n        keyboardRef.current?.addButtonTheme(value, \"buttonSelected\")\n        return () =>\n            keyboardRef.current?.removeButtonTheme(value, \"buttonSelected\")\n    }, [value])\n\n    return (\n        <Root>\n            <Keyboard\n                baseClass={keyboardId}\n                keyboardRef={r => (keyboardRef.current = r)}\n                onKeyPress={handleKeyboardKeyPress}\n                layout={layout}\n                layoutName={layoutName}\n                theme={theme}\n                display={display}\n                mergeDisplay={true}\n            />\n        </Root>\n    )\n}\n","import { GridSize } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize\n    md?: GridSize\n    sm?: GridSize\n    lg?: GridSize\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(\n    itemCount?: number\n): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n    const hasDrawer = drawerType !== DrawerType.None\n\n    if (!drawerType && itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2:\n                return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3:\n                return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (hasDrawer) return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else\n        return {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            xl: 3,\n        }\n}\n","import { useEffect, useState } from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(\n    service: JDService,\n    factory: (service: JDService) => T,\n    deps: React.DependencyList = []\n) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client\n}\n","import React, {\n    lazy,\n    useCallback,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Dialog,\n    DialogContent,\n    Grid,\n    Typography,\n} from \"@mui/material\"\nimport useChange from \"../../jacdac/useChange\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    HidKeyboardModifiers,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n    SystemEvent,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport KeyboardKeyInput from \"../../components/ui/KeyboardKeyInput\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport SettingsClient from \"../../../jacdac-ts/src/jdom/clients/settingsclient\"\nimport useServiceClient from \"../../components/useServiceClient\"\nimport {\n    arrayConcatMany,\n    clone,\n    fromHex,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport { jdpack, jdunpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { randomDeviceId } from \"../../../jacdac-ts/src/jdom/random\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport useServices from \"../../components/hooks/useServices\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport Alert from \"../../components/ui/Alert\"\nimport GridHeader from \"../../components/ui/GridHeader\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\nimport AppContext from \"../../components/AppContext\"\nimport { AlertTitle } from \"@mui/material\"\nimport { renderKeyboardKey } from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nimport DialogTitleWithClose from \"../../components/ui/DialogTitleWithClose\"\nconst ImportButton = lazy(() => import(\"../../components/ImportButton\"))\n\n// all settings keys are prefixed with this string\nconst PREFIX = \"@ke_\"\n// data layout format (18bytes)\nconst FORMAT = \"b[8] u32 u8 u8 u16 u16\"\n// data layout types\ntype FORMAT_TYPE = [Uint8Array, number, number, number, number, number]\n\ninterface HIDEvent {\n    key?: string\n    eventId: string\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nfunction HIDEventToBuffer(event: JDEvent, ev: HIDEvent) {\n    const deviceId = fromHex(event.service.device.deviceId)\n    const { service, code } = event\n    const { serviceClass, serviceIndex } = service\n    const { selector, modifiers } = ev\n    const payload = jdpack<FORMAT_TYPE>(FORMAT, [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        code,\n        selector,\n        modifiers,\n    ])\n    return payload\n}\n\nfunction bufferToHIDEvent(key: string, data: Uint8Array, bus: JDBus): HIDEvent {\n    if (data?.length !== 18) return undefined\n    const [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        eventCode,\n        selector,\n        modifiers,\n    ] = jdunpack<FORMAT_TYPE>(data, FORMAT)\n    const deviceIds = toHex(deviceId)\n    const device = bus.device(deviceIds, true)\n    const event = device?.service(serviceIndex)?.event(eventCode)\n\n    if (!event || event.service.serviceClass !== serviceClass) return undefined\n    return {\n        key,\n        eventId: event.id,\n        selector,\n        modifiers,\n    }\n}\n\nfunction SelectHIDEvent(props: { onAdd: (hidEvent: HIDEvent) => void }) {\n    const { onAdd } = props\n    const [event, setEvent] = useState<JDEvent>()\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n\n    const excludedServices = [\n        SRV_CONTROL,\n        SRV_PROTO_TEST,\n        SRV_ROLE_MANAGER,\n        SRV_SETTINGS,\n        SRV_LOGGER,\n    ]\n    const eventFilter = (ev: JDEvent) =>\n        ev.code !== SystemEvent.StatusCodeChanged\n    const services = useServices({\n        ignoreInfrastructure: true,\n        specification: true,\n    })\n        .filter(srv => excludedServices.indexOf(srv.serviceClass) < 0)\n        .filter(srv => srv.events.some(eventFilter))\n    const events = arrayConcatMany(\n        services.map(service => service.events.filter(eventFilter))\n    )\n\n    const handleClickEvent = (newEvent: JDEvent) => () =>\n        setEvent(event === newEvent ? undefined : newEvent)\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n    const disabled = !event || !selector\n    const handleAdd = () => onAdd({ eventId: event.id, selector, modifiers })\n\n    return (\n        <Grid container spacing={2}>\n            {!events?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        Connect your devices to bind keyboard commands.\n                    </Alert>\n                </Grid>\n            )}\n            {events\n                .filter(ev => !event || ev === event)\n                .map(ev => (\n                    <Grid item xs={12} sm={6} lg={4} xl={3} key={ev.id}>\n                        <Card>\n                            <DeviceCardHeader\n                                device={ev.service.device}\n                                showAvatar={true}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\">\n                                    {ev.service.name}\n                                </Typography>\n                                <Typography variant=\"h4\">\n                                    {humanify(ev.name)}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button\n                                    onClick={handleClickEvent(ev)}\n                                    variant={\"outlined\"}\n                                >\n                                    {ev === event ? \"unselect\" : \"select\"}\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            {event && (\n                <>\n                    <GridHeader title=\"Enter your keyboard/mouse command\" />\n                    <Grid item xs={12}>\n                        <KeyboardKeyInput\n                            selector={selector}\n                            modifiers={modifiers}\n                            onChange={handleKeyChange}\n                        />\n                    </Grid>\n                </>\n            )}\n            {!disabled && (\n                <>\n                    <GridHeader title=\"Save your binding\" />\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={disabled}\n                            onClick={handleAdd}\n                        >\n                            Save binding\n                        </Button>\n                    </Grid>\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function HIDEvents() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const settingsServices = useServices({ serviceClass: SRV_SETTINGS })\n    const [settingsService, setSettingsService] = useState<JDService>()\n    const [hidEvents, setHIDEvents] = useState<HIDEvent[]>([])\n    const [open, setOpen] = useState(false)\n    const gridBreakpoints = useGridBreakpoints()\n    const exportRef = useRef()\n\n    const handleOpenAdd = () => setOpen(true)\n    const handleCloseAdd = () => setOpen(false)\n\n    const factory = useCallback(srv => new SettingsClient(srv), [])\n    const settings = useServiceClient(settingsService, factory)\n\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    useChange(settings, async () => {\n        const hes: HIDEvent[] = []\n        if (settings) {\n            const all = await settings.list()\n            for (const kv of all.filter(entry =>\n                entry.key?.startsWith(PREFIX)\n            )) {\n                const { key, value } = kv\n                const he = bufferToHIDEvent(key, value, bus)\n                if (he) hes.push(he)\n            }\n        }\n        if (JSON.stringify(hes) !== JSON.stringify(hidEvents)) setHIDEvents(hes)\n    })\n    const handleAdd = async (hidEvent: HIDEvent) => {\n        setOpen(false)\n\n        const event = bus.node(hidEvent.eventId) as JDEvent\n        if (!event) return\n\n        const payload = HIDEventToBuffer(event, hidEvent)\n        settings.setValue(PREFIX + randomDeviceId(), payload)\n    }\n    const handleRemoveBinding = (index: number) => () => {\n        const { key } = hidEvents[index]\n        if (key) settings.deleteValue(key)\n    }\n    const handleSelectSettingsService = (service: JDService) => () =>\n        setSettingsService(settingsService === service ? undefined : service)\n\n    const exportUri =\n        hidEvents &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            JSON.stringify(\n                clone(hidEvents).map(h => {\n                    delete h.key\n                    return h\n                })\n            )\n        )}`\n    useEffect(() => {\n        if (exportRef.current)\n            (exportRef.current as HTMLAnchorElement).download = \"bindings.json\"\n    }, [exportRef.current])\n    const handleFilesUploaded = async (files: File[]) => {\n        for (const file of files) {\n            try {\n                const text = await file.text()\n                const json = JSON.parse(text)\n                if (Array.isArray(json)) {\n                    for (const hidEvent of json as HIDEvent[]) {\n                        const event = bus.node(hidEvent.eventId) as JDEvent\n                        if (event) {\n                            const payload = HIDEventToBuffer(event, hidEvent)\n                            settings.setValue(\n                                PREFIX + randomDeviceId(),\n                                payload\n                            )\n                        }\n                    }\n                }\n            } catch (e) {\n                console.warn(e)\n                setError(`invalid file ${file.name}`)\n            }\n        }\n    }\n    return (\n        <>\n            <h1>Accessibility Adapter</h1>\n            <Grid container spacing={1}>\n                <GridHeader title=\"Select an adapter\" />\n                {!settingsServices?.length && (\n                    <Grid item xs>\n                        <ConnectAlert serviceClass={SRV_SETTINGS} />\n                    </Grid>\n                )}\n                {settingsServices\n                    .filter(srv => !settingsService || srv === settingsService)\n                    .map(srv => (\n                        <Grid item key={srv.id} {...gridBreakpoints}>\n                            <Card>\n                                <DeviceCardHeader\n                                    device={srv.device}\n                                    showAvatar={true}\n                                    showMedia={true}\n                                />\n                                <CardActions>\n                                    <Button\n                                        variant={\"outlined\"}\n                                        onClick={handleSelectSettingsService(\n                                            srv\n                                        )}\n                                    >\n                                        {settingsService === srv\n                                            ? \"unselect\"\n                                            : \"select\"}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                {settings && (\n                    <>\n                        <GridHeader title=\"Command Bindings\" />\n                        {!hidEvents?.length && (\n                            <Grid item xs>\n                                <Alert severity=\"info\">\n                                    No bindings yet! Click{\" \"}\n                                    <strong>Add binding</strong> to start\n                                    building your adapter.\n                                </Alert>\n                            </Grid>\n                        )}\n                        {hidEvents\n                            ?.map(({ eventId, selector, modifiers }) => ({\n                                eventId,\n                                event: bus.node(eventId) as JDEvent,\n                                selector,\n                                modifiers,\n                            }))\n                            .map(\n                                (\n                                    { eventId, event, selector, modifiers },\n                                    index\n                                ) => (\n                                    <Grid\n                                        item\n                                        {...gridBreakpoints}\n                                        key={eventId}\n                                    >\n                                        <Card>\n                                            <DeviceCardHeader\n                                                device={event?.service.device}\n                                                showAvatar={true}\n                                            />\n                                            <CardContent>\n                                                {event ? (\n                                                    <Typography variant=\"h6\">\n                                                        {`${\n                                                            event.service.name\n                                                        } ${humanify(\n                                                            event.name\n                                                        )}`}\n                                                    </Typography>\n                                                ) : (\n                                                    <Alert severity=\"warning\">\n                                                        <AlertTitle>\n                                                            Device not found\n                                                        </AlertTitle>\n                                                    </Alert>\n                                                )}\n\n                                                <Typography variant=\"h5\">\n                                                    {renderKeyboardKey(\n                                                        selector,\n                                                        modifiers,\n                                                        true\n                                                    )}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <IconButtonWithTooltip\n                                                    title={\"Remove binding\"}\n                                                    onClick={handleRemoveBinding(\n                                                        index\n                                                    )}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButtonWithTooltip>\n                                            </CardActions>\n                                        </Card>\n                                    </Grid>\n                                )\n                            )}\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleOpenAdd}\n                                    >\n                                        Add binding\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        ref={exportRef}\n                                        variant=\"outlined\"\n                                        href={exportUri}\n                                    >\n                                        Export\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Suspense>\n                                        <ImportButton\n                                            icon={false}\n                                            text=\"Import\"\n                                            onFilesUploaded={\n                                                handleFilesUploaded\n                                            }\n                                            acceptedFiles={[\"application/json\"]}\n                                        />\n                                    </Suspense>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n            <Dialog\n                open={open}\n                onClose={handleCloseAdd}\n                maxWidth={\"lg\"}\n                fullWidth={true}\n            >\n                <DialogTitleWithClose onClose={handleCloseAdd}>\n                    Add binding\n                </DialogTitleWithClose>\n                <DialogContent>\n                    <SelectHIDEvent onAdd={handleAdd} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n"],"names":["CHANGE","SettingsCmd","jdpack","jdunpack","Packet","InPipeReader","JDServiceClient","bufferToString","stringToBuffer","SettingsClient","service","registersUseAcks","clear","sendCmdAsync","Clear","listKeys","inp","bus","sendPacketAsync","openCommand","ListKeys","output","readAll","keys","map","pkt","stringData","filter","k","list","List","key","value","kv","setValue","trim","undefined","deleteValue","from","Set","emit","setStringValue","getValue","Get","resp","sendCmdAwaitResponseAsync","rkey","data","console","error","getStringValue","Delete","Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","ConnectButtons","useDevices","NoSsrConnectAlert","props","serviceClass","closeable","transports","devices","ignoreInfrastructure","spec","length","name","ConnectAlert","useChange","useServices","options","services","_","JSON","stringify","Chip","Grid","Typography","styled","clsx","PREFIX","classes","hr","start","StyledGrid","theme","background","palette","text","disabled","marginBottom","width","spacing","GridHeader","title","count","variant","action","useEffect","useMemo","useRef","useState","HidKeyboardModifiers","Keyboard","DarkModeContext","useId","modifierCodes","renderKeyboardKey","selectors","useMediaQueries","capture","darkKeyboard","keyboard","Root","cursor","borderColor","primary","main","active","backgroundColor","color","dark","KeyboardKeyInput","initialSelector","initialModifiers","selector","modifiers","onChange","uncontrolled","selector_","setSelector_","modifiers_","setModifiters_","None","darkMode","keyboardRef","mobile","layoutName","keyboardId","layout","default","display","handleKeyboardKeyPress","code","toLowerCase","replace","newSelector","newModifiers","msel","mcode","warn","current","addButtonTheme","removeButtonTheme","r","AppContext","DrawerType","useGridBreakpoints","itemCount","drawerType","hasDrawer","xs","sm","md","lg","xl","useServiceClient","factory","deps","client","setClient","c","unmount","lazy","useCallback","Card","CardActions","CardContent","Dialog","DialogContent","SRV_CONTROL","SRV_LOGGER","SRV_PROTO_TEST","SRV_ROLE_MANAGER","SRV_SETTINGS","SystemEvent","IconButtonWithTooltip","DeleteIcon","arrayConcatMany","clone","fromHex","toHex","randomDeviceId","Button","humanify","DeviceCardHeader","Suspense","useServiceProviderFromServiceClass","AlertTitle","DialogTitleWithClose","ImportButton","FORMAT","HIDEventToBuffer","event","ev","deviceId","device","serviceIndex","payload","bufferToHIDEvent","eventCode","deviceIds","eventId","id","SelectHIDEvent","onAdd","setEvent","setSelector","setModifiers","excludedServices","eventFilter","StatusCodeChanged","specification","srv","indexOf","events","some","handleClickEvent","newEvent","handleKeyChange","handleAdd","HIDEvents","setError","settingsServices","settingsService","setSettingsService","hidEvents","setHIDEvents","open","setOpen","gridBreakpoints","exportRef","handleOpenAdd","handleCloseAdd","settings","hes","all","entry","startsWith","he","push","hidEvent","node","handleRemoveBinding","index","handleSelectSettingsService","exportUri","encodeURIComponent","h","download","handleFilesUploaded","files","file","json","parse","Array","isArray","e"],"sourceRoot":""}