{"version":3,"file":"component---src-pages-tools-service-editor-tsx-61f94696b733d85f221b.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Check.js","webpack://jacdac-docs/./src/components/RandomGenerator.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardDeviceItem.tsx","webpack://jacdac-docs/./src/components/EnumSpecification.tsx","webpack://jacdac-docs/./src/components/specification/ServiceSpecification.tsx","webpack://jacdac-docs/./src/components/tools/ServiceSpecificationEditor.tsx","webpack://jacdac-docs/./src/pages/tools/service-editor.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","import React, { useState } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    CardHeader,\n    Typography,\n    Input,\n} from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport CheckIcon from \"@mui/icons-material/Check\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"./ui/Alert\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport { NoSsr } from \"@mui/material\"\nimport { useId } from \"react-use-id-hook\"\nimport { cryptoRandomUint32 } from \"../../jacdac-ts/src/jdom/random\"\nimport { toFullHex } from \"../../jacdac-ts/src/jdom/utils\"\nimport useDeviceCatalog from \"./devices/useDeviceCatalog\"\n\nfunction looksRandom(n: number) {\n    const s = n.toString(16)\n    const h = \"0123456789abcdef\"\n    for (let i = 0; i < h.length; ++i) {\n        const hh = h[i]\n        if (s.indexOf(hh + hh + hh) >= 0) return false\n    }\n    if (/f00d|dead|deaf|beef/.test(s)) return false\n    return true\n}\n\nfunction genServId() {\n    const n = cryptoRandomUint32(1)\n    if (n === undefined) return undefined\n    return (n[0] & 0xfff_ffff) | 0x1000_0000\n}\n\nfunction genFirmwareId() {\n    const n = cryptoRandomUint32(1)\n    if (n === undefined) return undefined\n    return (n[0] & 0xfff_ffff) | 0x3000_0000\n}\n\nexport function uniqueServiceId() {\n    let id = genServId()\n    while (\n        id !== undefined &&\n        (!looksRandom(id) || serviceSpecificationFromClassIdentifier(id))\n    ) {\n        id = genServId()\n    }\n    return id !== undefined && toFullHex([id])\n}\n\nexport function uniqueDeviceId() {\n    const n = cryptoRandomUint32(2)\n    return n !== undefined && toFullHex([n[0], n[1]])\n}\n\nexport default function RandomGenerator(props: {\n    device?: boolean\n    firmware?: boolean\n}) {\n    const { device, firmware } = props\n    const labelId = useId()\n    const fieldId = useId()\n    const deviceCatalog = useDeviceCatalog()\n\n    const [value, setValue] = useState(\n        device ? uniqueDeviceId() : uniqueServiceId()\n    )\n    const [copySuccess, setCopySuccess] = useState(false)\n\n    const uniqueFirmwareId = () => {\n        let id = genFirmwareId()\n        while (\n            id !== undefined &&\n            (!looksRandom(id) ||\n                deviceCatalog.specificationFromProductIdentifier(id))\n        ) {\n            id = genFirmwareId()\n        }\n        return id !== undefined && toFullHex([id])\n    }\n    const handleRegenerate = () => {\n        const v = device\n            ? uniqueDeviceId()\n            : firmware\n            ? uniqueFirmwareId()\n            : uniqueServiceId()\n        setValue(v)\n        setCopySuccess(false)\n    }\n    const handleCopy = async () => {\n        try {\n            await navigator.clipboard.writeText(value)\n            setCopySuccess(true)\n        } catch (err) {\n            setCopySuccess(false)\n        }\n    }\n    const title = device\n        ? \"Random Device Identifier\"\n        : firmware\n        ? \"Random Product Identifier\"\n        : \"Random Service Identifier\"\n    return (\n        <NoSsr>\n            <Card>\n                <CardHeader title={title} />\n                <CardContent>\n                    {value !== undefined && (\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <Input\n                                id={fieldId}\n                                value={value}\n                                readOnly={true}\n                                inputProps={{\n                                    \"aria-labelledby\": labelId,\n                                }}\n                            />\n                            {copySuccess && <CheckIcon />}\n                        </Typography>\n                    )}\n                    {value === undefined && (\n                        <Alert severity=\"error\">\n                            Oops, unable to generate a strong random number.\n                        </Alert>\n                    )}\n                </CardContent>\n                <CardActions>\n                    <Button\n                        aria-label=\"copy random number to clipboard\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        onClick={handleCopy}\n                    >\n                        Copy\n                    </Button>\n                    <Button\n                        aria-label=\"regenerate random number\"\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleRegenerate}\n                    >\n                        Regenerate\n                    </Button>\n                </CardActions>\n            </Card>\n        </NoSsr>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport DashboardDevice from \"./DashboardDevice\"\nimport { GridBreakpoints } from \"../useGridBreakpoints\"\nimport { DashboardDeviceProps } from \"./Dashboard\"\nimport useChange from \"../../jacdac/useChange\"\nimport { dashboardServiceWeight } from \"./DashboardServiceWidget\"\nimport AppContext, { DrawerType } from \"../AppContext\"\n\nexport default function DashboardDeviceItem(\n    props: {\n        device: JDDevice\n        variant?: \"icon\" | \"\"\n    } & DashboardDeviceProps\n) {\n    const { device, variant, ...other } = props\n    const { drawerType } = useContext(AppContext)\n    const breakpoints: GridBreakpoints = useChange(\n        device,\n        () => {\n            const breakpointWeight = device\n                .services()\n                .map(srv => {\n                    return (\n                        dashboardServiceWeight(srv) ||\n                        (srv.readingRegister ||\n                        srv.valueRegister ||\n                        srv.intensityRegister\n                            ? 1\n                            : 0)\n                    )\n                })\n                .reduce((c: number, v) => c + v, 0)\n\n            if (breakpointWeight > 3 || drawerType !== DrawerType.None)\n                return { xs: 12, sm: 12, md: 12, lg: 6, xl: 6 }\n            else if (breakpointWeight == 3)\n                return { xs: 12, sm: 12, md: 4, lg: 4, xl: 4 }\n            else if (breakpointWeight == 2)\n                return { xs: 12, sm: 6, md: 4, lg: 3, xl: 4 }\n            else\n                return {\n                    xs: 6,\n                    sm: 4,\n                    md: 3,\n                    lg: 2,\n                    xl: \"auto\",\n                }\n        },\n        [drawerType]\n    )\n\n    // based on size, expanded or reduce widget size\n    return (\n        <Grid item {...breakpoints}>\n            <DashboardDevice device={device} variant={variant} {...other} />\n        </Grid>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../jacdac-ts/src/jdom/spec\"\nimport { Chip } from \"@mui/material\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {}).filter(en => !en.derived)\n    if (!enums.length) return <></>\n\n    return (\n        <Fragment>\n            <h2>Enums</h2>\n            {enums.map(e => (\n                <Fragment key={e.name}>\n                    <h3>\n                        {e.name}{\" \"}\n                        {e.isFlags && <Chip label=\"flags\" size=\"small\" />}\n                    </h3>\n                    <ul>\n                        {Object.keys(e.members).map(en => (\n                            <li key={en}>\n                                {en}:{\" \"}\n                                <code>0x{e.members[en].toString(16)}</code>\n                            </li>\n                        ))}\n                    </ul>\n                </Fragment>\n            ))}\n        </Fragment>\n    )\n}\n","import React, { Fragment, useContext } from \"react\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport {\n    serviceSpecificationFromName,\n    isRegister,\n    isEvent,\n    isCommand,\n    isPipeReport,\n    isReportOf,\n    isPipeReportOf,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PacketSpecification from \"./PacketSpecification\"\nimport IDChip from \"../IDChip\"\nimport Markdown from \"../ui/Markdown\"\nimport EnumSpecification from \"../EnumSpecification\"\nimport { Box, Grid } from \"@mui/material\"\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport useServiceProviderFromServiceClass from \"../hooks/useServiceProviderFromServiceClass\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport DashbardDeviceItem from \"../dashboard/DashboardDeviceItem\"\n\nfunction DashboardServiceDevices(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const devices = useChange(bus, b => b.devices({ serviceClass }))\n    return (\n        <Grid container spacing={1}>\n            {devices.map(device => (\n                <DashbardDeviceItem\n                    key={device.id}\n                    device={device}\n                    showAvatar={true}\n                    showHeader={true}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec\n    showDerived?: boolean\n}) {\n    const { service: node, showDerived } = props\n    const { shortId, name, classIdentifier } = node\n    const packets = node.packets.filter(pkt => showDerived || !pkt.derived)\n    const registers = packets.filter(isRegister)\n    const events = packets.filter(isEvent)\n    const commands = packets.filter(isCommand)\n    const reports = packets.filter(r => r.secondary)\n    const pipeReports = packets.filter(isPipeReport)\n    const others = packets.filter(\n        r =>\n            registers.indexOf(r) < 0 &&\n            events.indexOf(r) < 0 &&\n            commands.indexOf(r) < 0 &&\n            reports.indexOf(r) < 0 &&\n            pipeReports.indexOf(r) < 0\n    )\n    // spin up provider on demand\n    useServiceProviderFromServiceClass(node.classIdentifier)\n\n    const reportOf = (pkt: jdspec.PacketInfo) =>\n        reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) =>\n        pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (\n        <>\n            <h1 key=\"title\">\n                {name}\n                <Box ml={1} component=\"span\">\n                    <IDChip\n                        id={node.classIdentifier}\n                        filter={`srv:${shortId}`}\n                    />\n                </Box>\n            </h1>\n            <ServiceSpecificationStatusAlert specification={node} />\n            <Markdown key=\"notesshort\" source={node.notes.short} />\n            {!!node.extends?.length && (\n                <p key=\"extends\">\n                    <span>Extends </span>\n                    {node.extends.map((extend, i) => (\n                        <Fragment key={`extend${extend}`}>\n                            {i > 0 && <span>, </span>}\n                            <Link\n                                key={`extend${extend}`}\n                                to={`/services/${extend}/`}\n                            >\n                                {serviceSpecificationFromName(extend).name}\n                            </Link>\n                        </Fragment>\n                    ))}\n                    .\n                </p>\n            )}\n            <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n            <DashboardServiceDevices serviceClass={classIdentifier} />\n            <EnumSpecification key=\"enums\" serviceClass={classIdentifier} />\n            {[\n                {\n                    name: \"Registers\",\n                    packets: registers,\n                    note: node.notes[\"registers\"],\n                },\n                { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n                {\n                    name: \"Commands\",\n                    packets: commands,\n                    note: node.notes[\"commands\"],\n                },\n                { name: \"Others\", packets: others, note: node.notes[\"others\"] },\n            ]\n                .filter(group => group.packets.length)\n                .map(group => (\n                    <Fragment key={`group${group.name}`}>\n                        <h2>{group.name}</h2>\n                        {group.note && (\n                            <Markdown\n                                key={`node${group.name}`}\n                                source={group.note}\n                            />\n                        )}\n                        {group.packets\n                            .sort(\n                                (l, r) =>\n                                    (l.derived ? 1 : -1) - (r.derived ? 1 : -1)\n                            )\n                            .map(pkt => (\n                                <PacketSpecification\n                                    key={`pkt${pkt.identifier}`}\n                                    serviceClass={node.classIdentifier}\n                                    packetInfo={pkt}\n                                    reportInfo={reportOf(pkt)}\n                                    pipeReportInfo={pipeReportOf(pkt)}\n                                    showDevices={true}\n                                />\n                            ))}\n                    </Fragment>\n                ))}\n        </>\n    )\n}\n","import React, { useMemo } from \"react\"\nimport { Grid } from \"@mui/material\"\nimport { parseServiceSpecificationMarkdownToJSON } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport { serviceMap } from \"../../../jacdac-ts/src/jdom/spec\"\nimport RandomGenerator from \"../RandomGenerator\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\nimport HighlightTextField from \"../ui/HighlightTextField\"\nimport ServiceSpecification from \"../specification/ServiceSpecification\"\n\nconst SERVICE_SPECIFICATION_STORAGE_KEY =\n    \"jacdac:servicespecificationeditorsource\"\n\nexport default function ServiceSpecificationEditor() {\n    const [source, setSource] = useLocalStorage(\n        SERVICE_SPECIFICATION_STORAGE_KEY,\n        \"\"\n    )\n    const json = useMemo(\n        () => parseServiceSpecificationMarkdownToJSON(source, serviceMap()),\n        [source]\n    )\n    const servicePath =\n        json &&\n        `services/${(\n            json.camelName ||\n            json.shortId ||\n            `0x${json.classIdentifier.toString(16)}`\n        ).toLowerCase()}`\n    return (\n        <Grid spacing={1} container>\n            <Grid item xs={12}>\n                <HighlightTextField\n                    code={source}\n                    language={\"markdown\"}\n                    onChange={setSource}\n                    annotations={json?.errors}\n                    pullRequestTitle={json && `Service: ${json.name}`}\n                    pullRequestPath={servicePath}\n                    pullRequestDescription={`This pull request defines a new service.`}\n                />\n            </Grid>\n            <Grid item>\n                <RandomGenerator device={false} />\n                {json && <ServiceSpecification service={json} />}\n            </Grid>\n        </Grid>\n    )\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport ServiceSpecificationEditor from \"../../components/tools/ServiceSpecificationEditor\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>Service Specification Editor</h1>\n            <p>\n                Read the{\" \"}\n                <Link to=\"/reference/service-specification\">\n                    service specifiation\n                </Link>{\" \"}\n                documentation. Use the packet console to monitor packets from\n                your devices.\n            </p>\n            <ServiceSpecificationEditor />\n        </>\n    )\n}\n"],"names":["React","useState","serviceSpecificationFromClassIdentifier","Card","CardContent","CardActions","CardHeader","Typography","Input","CheckIcon","Alert","Button","NoSsr","useId","cryptoRandomUint32","toFullHex","useDeviceCatalog","looksRandom","n","s","toString","h","i","length","hh","indexOf","test","genServId","undefined","genFirmwareId","uniqueServiceId","id","uniqueDeviceId","RandomGenerator","props","device","firmware","labelId","fieldId","deviceCatalog","value","setValue","copySuccess","setCopySuccess","uniqueFirmwareId","specificationFromProductIdentifier","handleRegenerate","v","handleCopy","navigator","clipboard","writeText","err","title","Grid","useContext","DashboardDevice","useChange","dashboardServiceWeight","AppContext","DrawerType","DashboardDeviceItem","variant","other","drawerType","breakpoints","breakpointWeight","services","map","srv","readingRegister","valueRegister","intensityRegister","reduce","c","None","xs","sm","md","lg","xl","Fragment","Chip","EnumSpecification","serviceClass","spec","enums","Object","values","filter","en","derived","e","name","isFlags","keys","members","Link","serviceSpecificationFromName","isRegister","isEvent","isCommand","isPipeReport","isReportOf","isPipeReportOf","PacketSpecification","IDChip","Markdown","Box","ServiceSpecificationStatusAlert","useServiceProviderFromServiceClass","JacdacContext","DashbardDeviceItem","DashboardServiceDevices","bus","devices","b","ServiceSpecification","service","node","showDerived","shortId","classIdentifier","packets","pkt","registers","events","commands","reports","r","secondary","pipeReports","others","reportOf","find","rep","pipeReportOf","notes","short","extends","extend","long","note","group","sort","l","identifier","useMemo","parseServiceSpecificationMarkdownToJSON","serviceMap","useLocalStorage","HighlightTextField","SERVICE_SPECIFICATION_STORAGE_KEY","ServiceSpecificationEditor","source","setSource","json","servicePath","camelName","toLowerCase","errors","Page"],"sourceRoot":""}