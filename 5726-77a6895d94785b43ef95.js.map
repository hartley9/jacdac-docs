{"version":3,"file":"5726-77a6895d94785b43ef95.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGe,SAASU,cAAT,CAAwBC,KAAxB,EAAsD;AACjE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,MAAME,cAAc,GAAGP,uEAAW,CAACM,OAAD,EAAUR,wGAAV,CAAlC;AACA,MAAMW,MAAM,GAAGV,wFAAoB,CAACQ,cAAD,EAAiBF,KAAjB,CAAnC;AACA,MAAMK,MAAM,GAAGT,4EAAgB,CAACK,OAAD,CAA/B;AACA,MAAMK,KAAK,GAAGD,MAAM,GAAG,WAAH,GAAiB,SAArC;AACA,MAAM;AAAEE,IAAAA;AAAF,MAAkBT,4EAAc,CAACQ,KAAD,CAAtC;;AAEA,MAAME,WAAW,GAAG,CAACC,KAAD,EAAiBC,OAAjB,KAChBR,cADgB,aAChBA,cADgB,uBAChBA,cAAc,CAAES,gBAAhB,CAAiCD,OAAjC,EAA0C,IAA1C,CADJ;;AAGA,MAAIN,MAAM,KAAKQ,SAAf,EAA0B,oBAAO,iDAAC,8DAAD,OAAP;AAE1B,MAAMC,UAAyB,GAAG;AAC9BP,IAAAA,KAAK,EAAEC;AADuB,GAAlC;AAGA,sBACI,iDAAC,+DAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,aAAS,EAAC,KAAtC;AAA4C,cAAU,EAAC;AAAvD,kBACI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,8DAAD;AAAY,WAAO,EAAC,WAApB;AAAgC,SAAK,EAAEM;AAAvC,YADJ,CADJ,eAMI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,oEAAD;AACI,SAAK,EAAC,QADV;AAEI,WAAO,EAAET,MAFb;AAGI,YAAQ,EAAEI,WAHd;AAII,cAAU,EAAEK;AAJhB,IADJ,CANJ,CADJ;AAiBH;;;;;;;;;;;;;;;;AC3CD;AACA;AAEe,SAAShB,eAAT,CACXG,KADW,EAMb;AACE,MAAM;AAAEgB,IAAAA,KAAF;AAASC,IAAAA,cAAT;AAAyBJ,IAAAA;AAAzB,MAAiDb,KAAvD;AAAA,MAA8CkB,IAA9C,2GAAuDlB,KAAvD;;AACA,sBACI,iDAAC,8DAAD;AACI,WAAO,eAAE,iDAAC,8DAAD,EAAYkB,IAAZ,CADb;AAEI,SAAK,EAAEF,KAFX;AAGI,SAAK,EAAEH,UAHX;AAII,kBAAc,EAAEI;AAJpB,IADJ;AAQH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRelay.tsx","webpack://jacdac-docs/./src/components/ui/SwitchWithLabel.tsx"],"sourcesContent":["import { CircularProgress, Grid, Typography } from \"@mui/material\"\nimport React, { CSSProperties } from \"react\"\nimport { RelayReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport useRegister from \"../hooks/useRegister\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SwitchWithLabel from \"../ui/SwitchWithLabel\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\n\nexport default function DashboardRelay(props: DashboardServiceProps) {\n    const { service } = props\n    const closedRegister = useRegister(service, RelayReg.Closed)\n    const closed = useRegisterBoolValue(closedRegister, props)\n    const server = useServiceServer(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const { textPrimary } = useWidgetTheme(color)\n\n    const handleClose = (event: unknown, checked) =>\n        closedRegister?.sendSetBoolAsync(checked, true)\n\n    if (closed === undefined) return <CircularProgress />\n\n    const labelStyle: CSSProperties = {\n        color: textPrimary,\n    }\n    return (\n        <Grid container spacing={1} direction=\"row\" alignItems=\"center\">\n            <Grid item>\n                <Typography variant=\"subtitle1\" style={labelStyle}>\n                    open\n                </Typography>\n            </Grid>\n            <Grid item>\n                <SwitchWithLabel\n                    label=\"closed\"\n                    checked={closed}\n                    onChange={handleClose}\n                    labelStyle={labelStyle}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n","import { FormControlLabel, Switch, SwitchProps } from \"@mui/material\"\nimport React, { CSSProperties } from \"react\"\n\nexport default function SwitchWithLabel(\n    props: {\n        label: string | number | JSX.Element\n        labelPlacement?: \"end\" | \"start\" | \"top\" | \"bottom\"\n        labelStyle?: CSSProperties\n    } & SwitchProps\n) {\n    const { label, labelPlacement, labelStyle, ...rest } = props\n    return (\n        <FormControlLabel\n            control={<Switch {...rest} />}\n            label={label}\n            style={labelStyle}\n            labelPlacement={labelPlacement}\n        />\n    )\n}\n"],"names":["CircularProgress","Grid","Typography","React","RelayReg","useRegisterBoolValue","useRegister","useServiceServer","SwitchWithLabel","useWidgetTheme","DashboardRelay","props","service","closedRegister","Closed","closed","server","color","textPrimary","handleClose","event","checked","sendSetBoolAsync","undefined","labelStyle","FormControlLabel","Switch","label","labelPlacement","rest"],"sourceRoot":""}