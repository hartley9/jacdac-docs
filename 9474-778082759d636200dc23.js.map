{"version":3,"file":"9474-778082759d636200dc23.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./src/components/dialogs/ConnectTransportDialog.tsx","webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack://jacdac-docs/./src/components/ui/CardMediaWithSkeleton.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import {\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n} from \"@material-ui/core\"\nimport React, { useContext, useMemo } from \"react\"\nimport { useId } from \"react-use-id-hook\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport { deviceSpecifications } from \"../../../jacdac-ts/src/jdom/spec\"\nimport useDeviceImage from \"../devices/useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function ConnectTransportDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const { open, onClose } = props\n    const dialogId = useId()\n    const labelId = useId()\n    const devices = useMemo(\n        () =>\n            deviceSpecifications()\n                .map(device => ({\n                    device,\n                    transport: transports.find(\n                        t => t.type === device.transport\n                    ),\n                }))\n                .filter(({ transport }) => !!transport),\n        []\n    )\n    return (\n        <Dialog\n            id={dialogId}\n            aria-labelledby={labelId}\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n        >\n            <DialogTitle id={labelId}>\n                Connect to a device\n                {transports.map(transport => (\n                    <ConnectButton\n                        key={transport.type}\n                        transport={transport}\n                        full={false}\n                        transparent={true}\n                        onClick={onClose}\n                    />\n                ))}\n            </DialogTitle>\n            <DialogContent>\n                <Grid container spacing={2}>\n                    {devices.map(({ device, transport }) => (\n                        <Grid item key={device.id}>\n                            <Card>\n                                <CardMediaWithSkeleton\n                                    title={\"photograph of the device\"}\n                                    image={useDeviceImage(device, \"preview\")}\n                                />\n                                <CardHeader subheader={device.name} />\n                                <CardActions>\n                                    <ConnectButton\n                                        transport={transport}\n                                        full={true}\n                                        transparent={true}\n                                        onClick={onClose}\n                                    />\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"outlined\" onClick={onClose}>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import {\n    CardMedia,\n    CardMediaProps,\n    createStyles,\n    makeStyles,\n} from \"@material-ui/core\"\nimport React from \"react\"\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        media: {\n            height: 0,\n            paddingTop: \"75%\", // 4:3\n        },\n    })\n)\n\nexport default function CardMediaWithSkeleton(props: CardMediaProps) {\n    const { image, src, className, ...others } = props\n    const classes = useStyles()\n    const hasImage = !!image || !!src\n    if (!hasImage) return null\n\n    return (\n        <CardMedia\n            className={className || classes.media}\n            {...others}\n            image={image}\n            src={src}\n        />\n    )\n}\n"],"names":["Button","Card","CardActions","CardHeader","Dialog","DialogActions","DialogContent","DialogTitle","Grid","React","useContext","useMemo","useId","JacdacContext","ConnectButton","deviceSpecifications","useDeviceImage","CardMediaWithSkeleton","ConnectTransportDialog","props","bus","transports","open","onClose","dialogId","labelId","devices","map","device","transport","find","t","type","filter","id","name","CardMedia","createStyles","makeStyles","useStyles","media","height","paddingTop","image","src","className","others","classes","hasImage"],"sourceRoot":""}