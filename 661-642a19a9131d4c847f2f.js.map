{"version":3,"file":"661-642a19a9131d4c847f2f.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/blockly/fields/TwinWidget.tsx","webpack://jacdac-docs/./src/components/hooks/useBestRegister.ts"],"sourcesContent":["import React, { useContext } from \"react\"\nimport { Grid } from \"@mui/material\"\nimport DashboardServiceWidget from \"../../dashboard/DashboardServiceWidget\"\nimport WorkspaceContext from \"../WorkspaceContext\"\nimport NoServiceAlert from \"./NoServiceAlert\"\nimport { PointerBoundary } from \"./PointerBoundary\"\nimport useBestRegister from \"../../hooks/useBestRegister\"\nimport { useEffect } from \"react\"\nimport { REPORT_UPDATE } from \"../../../../jacdac-ts/src/jdom/constants\"\nimport useBlockData from \"../useBlockData\"\nimport JacdacContext, { JacdacContextProps } from \"../../../jacdac/Context\"\nimport { toMap } from \"../../../../jacdac-ts/src/jdom/utils\"\n\nconst HORIZON = 10\nexport default function TwinWidget() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { roleService, flyout, sourceId, sourceBlock } =\n        useContext(WorkspaceContext)\n    const { data, setData } = useBlockData(sourceBlock, [])\n\n    // data collection\n    const register = useBestRegister(roleService)\n    const setRegisterData = () => {\n        const newValue = register?.unpackedValue\n        if (newValue !== undefined) {\n            const newRow = toMap(\n                register.fields,\n                f => f.name,\n                (f, i) => newValue[i]\n            )\n            const newData = [\n                ...(data || []),\n                {\n                    ...{ time: bus.timestamp / 1000 },\n                    ...newRow,\n                },\n            ].slice(-HORIZON)\n            setData(newData)\n        }\n    }\n    useEffect(() => {\n        setRegisterData()\n        return register?.subscribe(REPORT_UPDATE, setRegisterData)\n    }, [register, sourceId, data])\n\n    if (flyout) return null\n    if (!roleService) return <NoServiceAlert />\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"center\"\n            justifyContent=\"center\"\n            spacing={1}\n        >\n            <Grid item>\n                <PointerBoundary>\n                    <DashboardServiceWidget\n                        service={roleService}\n                        visible={true}\n                        variant=\"icon\"\n                    />\n                </PointerBoundary>\n            </Grid>\n        </Grid>\n    )\n}\n","import { useMemo } from \"react\"\nimport { SystemReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    isReading,\n    isValue,\n    isValueOrIntensity,\n} from \"../../../jacdac-ts/src/jdom/spec\"\n\nexport default function useBestRegister(service: JDService) {\n    return useMemo(() => {\n        const specification = service?.specification\n        const hasReading = specification?.packets.some(reg => isReading(reg))\n        if (hasReading) return service.register(SystemReg.Reading)\n        const hasValue = specification?.packets.some(reg => isValue(reg))\n        if (hasValue) return service.register(SystemReg.Value)\n        const hasIntensity = specification?.packets.some(reg =>\n            isValueOrIntensity(reg)\n        )\n        if (hasIntensity) return service.register(SystemReg.Intensity)\n        return undefined\n    }, [service])\n}\n"],"names":["React","useContext","Grid","DashboardServiceWidget","WorkspaceContext","NoServiceAlert","PointerBoundary","useBestRegister","useEffect","REPORT_UPDATE","useBlockData","JacdacContext","toMap","HORIZON","TwinWidget","bus","roleService","flyout","sourceId","sourceBlock","data","setData","register","setRegisterData","newValue","unpackedValue","undefined","newRow","fields","f","name","i","newData","time","timestamp","slice","subscribe","useMemo","SystemReg","isReading","isValue","isValueOrIntensity","service","specification","hasReading","packets","some","reg","Reading","hasValue","Value","hasIntensity","Intensity"],"sourceRoot":""}