{"version":3,"file":"4556-7344b8e4a0c562189f88.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://jacdac-docs/./src/workers/csv/workerloader.js","webpack://jacdac-docs/./src/workers/data/workerloader.js","webpack://jacdac-docs/./src/workers/tf/workerloader.js","webpack://jacdac-docs/./src/workers/vm/workerloader.js","webpack://jacdac-docs/./src/workers/cad/workerloader.js","webpack://jacdac-docs/./src/components/blockly/dsl/workers/proxy.ts","webpack://jacdac-docs/./src/components/blockly/dsl/workers/cad.proxy.ts","webpack://jacdac-docs/./src/components/tools/EnclosureGenerator.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","export default function createCsvWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/csv-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}","export default function createDataWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/data-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createTFWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/tf-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createVMWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                // gatsby fast-refresh ignores files with node_modules in path\n                \"./dist/node_modules/vm-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createCadWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/cad-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { MESSAGE } from \"../../../../../jacdac-ts/src/jdom/constants\"\nimport JDEventSource from \"../../../../../jacdac-ts/src/jdom/eventsource\"\nimport { assert, SMap } from \"../../../../../jacdac-ts/src/jdom/utils\"\nimport createCsvWorker from \"../../../../workers/csv/workerloader\"\nimport createDataWorker from \"../../../../workers/data/workerloader\"\nimport createTFWorker from \"../../../../workers/tf/workerloader\"\nimport createVMWorker from \"../../../../workers/vm/workerloader\"\nimport createCadWorker from \"../../../../workers/cad/workerloader\"\n\nexport type VMType = \"data\" | \"csv\" | \"tf\" | \"vm\" | \"cad\"\n\nexport interface WorkerMessage {\n    worker: VMType\n    id?: string\n}\n\nexport interface WorkerResponse {\n    error?: string\n}\n\nexport class WorkerProxy extends JDEventSource {\n    readonly pendings: SMap<{\n        resolve: (res: any) => void\n        reject: (err: any) => void\n    }> = {}\n    constructor(readonly worker: Worker, readonly workerid: VMType) {\n        super()\n        this.worker.addEventListener(\"message\", this.handleMessage.bind(this))\n    }\n\n    private handleMessage(event: MessageEvent) {\n        const { data: message } = event\n        const { id, worker } = message\n        const pending = this.pendings[id]\n        if (pending) {\n            assert(worker === message.worker)\n            pending.resolve(message)\n        } else {\n            this.emit(MESSAGE, event.data)\n        }\n    }\n\n    postMessage<T, R>(message: WorkerMessage & T): Promise<WorkerResponse & R> {\n        message.id = message.id || Math.random() + \"\"\n        message.worker = this.workerid\n        return new Promise<R>((resolve, reject) => {\n            this.pendings[message.id] = { resolve, reject }\n            this.worker.postMessage(message)\n        })\n    }\n}\n\nconst _workers: SMap<WorkerProxy> = {}\nconst loaders = {\n    data: createDataWorker,\n    csv: createCsvWorker,\n    tf: createTFWorker,\n    vm: createVMWorker,\n    cad: createCadWorker,\n}\nexport default function workerProxy(workerid: VMType) {\n    const worker =\n        _workers[workerid] ||\n        (_workers[workerid] = new WorkerProxy(loaders[workerid](), workerid))\n    return worker\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport workerProxy from \"./proxy\"\nimport type {\n    CadConvertRequest,\n    CadConvertResponse,\n} from \"../../../../workers/cad/dist/node_modules/cad.worker\"\nimport type {\n    EnclosureModel,\n    EnclosureOptions,\n    EnclosureFile,\n} from \"../../../../workers/cad/dist/node_modules/enclosurecad\"\n\nexport async function convertToSTL(\n    model: EnclosureModel,\n    options?: EnclosureOptions\n): Promise<{ stls?: EnclosureFile[]; error?: string }> {\n    const worker = workerProxy(\"cad\")\n    const res = await worker.postMessage<CadConvertRequest, CadConvertResponse>(\n        {\n            worker: \"cad\",\n            type: \"convert\",\n            model,\n            options,\n        }\n    )\n    return { stls: res?.stls, error: res?.error }\n}\n","import React, { lazy, useEffect, useState } from \"react\"\n\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    CardMedia,\n    Grid,\n} from \"@material-ui/core\"\nimport Suspense from \"../ui/Suspense\"\nimport { convertToSTL } from \"../blockly/dsl/workers/cad.proxy\"\nimport type {\n    EnclosureModel,\n    EnclosureOptions,\n} from \"../../workers/cad/dist/node_modules/enclosurecad\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\nimport useMounted from \"../hooks/useMounted\"\nimport { CircularProgress } from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\n\nconst ModelViewer = lazy(() => import(\"../home/models/ModelViewer\"))\nconst STLModel = lazy(() => import(\"../home/models/STLModel\"))\n\nfunction STLModelCard(props: { name: string; url: string; color: string }) {\n    const { name, url, color } = props\n    const fn = `${name}.stl`\n    return (\n        <Card>\n            <CardHeader title={fn} />\n            <CardMedia>\n                <Suspense>\n                    <ModelViewer\n                        responsive={true}\n                        style={{\n                            position: \"relative\",\n                            height: \"20rem\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <STLModel url={url} color={color} />\n                    </ModelViewer>\n                </Suspense>\n            </CardMedia>\n            <CardActions>\n                <Button href={url} variant=\"outlined\" download={fn}>\n                    Download\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default function EnclosureGenerator(props: {\n    module: EnclosureModel\n    options?: EnclosureOptions\n    color?: string\n}) {\n    const { color, module, options } = props\n    const [working, setWorking] = useState(false)\n    const [files, setFiles] = useState<{ name: string; url: string }[]>()\n    const gridBreakpoints = useGridBreakpoints(files?.length)\n    const [stlError, setStlError] = useState(\"\")\n    const mounted = useMounted()\n\n    const updateUrl = async () => {\n        try {\n            setStlError(undefined)\n            setWorking(true)\n            const { stls: files, error } = await convertToSTL(module, options)\n            if (!mounted()) return\n\n            const newFiles = files?.map(({ name, blob }) => ({\n                name,\n                url: URL.createObjectURL(blob),\n            }))\n            setFiles(newFiles)\n            setStlError(error)\n        } finally {\n            if (mounted()) setWorking(false)\n        }\n    }\n    useEffect(\n        () => () => files?.forEach(({ url }) => URL.revokeObjectURL(url)),\n        [files]\n    )\n    const handleClick = () => updateUrl()\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <Button\n                    onClick={handleClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={working}\n                    startIcon={\n                        working && (\n                            <CircularProgress\n                                size=\"1rem\"\n                                title=\"generating STL files\"\n                                variant=\"indeterminate\"\n                            />\n                        )\n                    }\n                >\n                    Generate STL\n                </Button>\n            </Grid>\n            {stlError && (\n                <Grid item xs={12}>\n                    <Alert severity=\"error\">{stlError}</Alert>\n                </Grid>\n            )}\n            {files?.map(file => (\n                <Grid item key={file.name} {...gridBreakpoints}>\n                    <STLModelCard {...file} color={color} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}"],"names":["import","MESSAGE","JDEventSource","assert","createCsvWorker","createDataWorker","createTFWorker","createVMWorker","createCadWorker","WorkerProxy","worker","workerid","pendings","addEventListener","handleMessage","bind","event","data","message","id","pending","resolve","emit","postMessage","Math","random","Promise","reject","_workers","loaders","csv","tf","vm","cad","workerProxy","convertToSTL","model","options","res","type","stls","error","React","lazy","useEffect","useState","Button","Card","CardActions","CardHeader","CardMedia","Grid","Suspense","useGridBreakpoints","useMounted","CircularProgress","Alert","ModelViewer","STLModel","STLModelCard","props","name","url","color","fn","position","height","width","EnclosureGenerator","module","working","setWorking","files","setFiles","gridBreakpoints","length","stlError","setStlError","mounted","updateUrl","undefined","newFiles","map","blob","URL","createObjectURL","forEach","revokeObjectURL","handleClick","file","useContext","AppContext","DrawerType","itemCount","drawerType","xs","sm","md","lg","xl","None"],"sourceRoot":""}