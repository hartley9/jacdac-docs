{"version":3,"file":"2459-b87c031982e7b0099c6f.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/widgets/SoilMoistureWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardSoilMoisture.tsx"],"sourcesContent":["import React from \"react\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function SoilMoistureWidget(props: {\n    value: number\n    color: \"primary\" | \"secondary\"\n    size?: string\n}) {\n    const { value, color, size } = props\n    const { active, background, controlBackground, textProps } =\n        useWidgetTheme(color)\n    const clipId = useId()\n\n    const hasValue = !isNaN(value)\n    const tvalue = hasValue ? `${Math.round(value * 100)}%` : `--`\n\n    const w = 5\n    const h = 9.488\n    const cm = 3.3\n    const ch = (h - cm) * ((0.12 + value) / 1.12)\n\n    return (\n        <SvgWidget width={w} height={h} size={size}>\n            {hasValue && (\n                <defs>\n                    <clipPath id={clipId}>\n                        <rect x={0} y={h - ch} width={w} height={ch} />\n                    </clipPath>\n                </defs>\n            )}\n            <path\n                fill={background}\n                d=\"M4.812 7.997V.5a.5.5 0 00-.5-.5H.689a.5.5 0 00-.5.5v7.497l.503 1.491h.466l.503-1.491V3.373a.792.792 0 01.84-.791.792.792 0 01.838.79v4.625l.503 1.491h.466z\"\n            />\n            <path\n                fill={active}\n                d=\"M4.812 7.997V.5a.5.5 0 00-.5-.5H.689a.5.5 0 00-.5.5v7.497l.503 1.491h.466l.503-1.491V3.373a.792.792 0 01.84-.791.792.792 0 01.838.79v4.625l.503 1.491h.466z\"\n                clipPath={`url(#${clipId})`}\n            />\n            <path\n                fill={controlBackground}\n                d=\"M4.075 8.548a.075.075 0 100-.15.075.075 0 100 .15zM4.425 7.281a.075.075 0 100-.15.075.075 0 100 .15zM4.425 5.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 4.614a.075.075 0 100-.15.075.075 0 100 .15zM3.725 3.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 5.281a.075.075 0 100-.15.075.075 0 100 .15zM4.425 6.614a.075.075 0 100-.15.075.075 0 100 .15zM4.425 7.948a.075.075 0 100-.15.075.075 0 100 .15zM3.725 7.281a.075.075 0 100-.15.075.075 0 100 .15zM3.725 5.948a.075.075 0 100-.15.075.075 0 100 .15zM4.425 4.614a.075.075 0 100-.15.075.075 0 100 .15zM4.425 3.948a.075.075 0 100-.15.075.075 0 100 .15zM4.425 5.281a.075.075 0 100-.15.075.075 0 100 .15zM3.725 6.614a.075.075 0 100-.15.075.075 0 100 .15zM3.725 7.948a.075.075 0 100-.15.075.075 0 100 .15zM.925 8.548a.075.075 0 100-.15.075.075 0 100 .15zM.575 7.281a.075.075 0 100-.15.075.075 0 100 .15zM.575 5.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 4.614a.075.075 0 100-.15.075.075 0 100 .15zM1.275 3.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 5.281a.075.075 0 100-.15.075.075 0 100 .15zM.575 6.614a.075.075 0 100-.15.075.075 0 100 .15zM.575 7.948a.075.075 0 100-.15.075.075 0 100 .15zM1.275 7.281a.075.075 0 100-.15.075.075 0 100 .15zM1.275 5.948a.075.075 0 100-.15.075.075 0 100 .15zM.575 4.614a.075.075 0 100-.15.075.075 0 100 .15zM.575 3.948a.075.075 0 100-.15.075.075 0 100 .15zM.575 5.281a.075.075 0 100-.15.075.075 0 100 .15zM1.275 6.614a.075.075 0 100-.15.075.075 0 100 .15zM1.275 7.948a.075.075 0 100-.15.075.075 0 100 .15z\"\n            />\n            <text\n                x={w / 2}\n                y=\"1.4\"\n                fontSize=\"1\"\n                strokeWidth=\".026\"\n                {...textProps}\n                fill={\"#fff\"}\n            >\n                {tvalue}\n            </text>\n        </SvgWidget>\n    )\n}\n","import React from \"react\"\nimport { SoilMoistureReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport useWidgetSize from \"../widgets/useWidgetSize\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport SensorServer from \"../../../jacdac-ts/src/servers/sensorserver\"\nimport { Grid, Slider } from \"@mui/material\"\nimport SoilMoistureWidget from \"../widgets/SoilMoistureWidget\"\nimport useRegister from \"../hooks/useRegister\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function DashboardSoilMoisture(props: DashboardServiceProps) {\n    const { service, services, variant } = props\n    const moistureReg = useRegister(service, SoilMoistureReg.Moisture)\n    const [value] = useRegisterUnpackedValue<[number]>(moistureReg, props)\n    const widgetSize = useWidgetSize(variant, services?.length)\n    const server = useServiceServer<SensorServer<[number]>>(service)\n    const color = server ? \"secondary\" : \"primary\"\n    const sliderId = useId()\n\n    const hasValue = !isNaN(value)\n\n    const onChange = (event: unknown, newValue: number | number[]): void => {\n        const svalue = newValue as number\n        server?.reading.setValues([svalue])\n        moistureReg.refresh()\n    }\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <SoilMoistureWidget\n                    value={value}\n                    color={color}\n                    size={widgetSize}\n                />\n            </Grid>\n            {server && hasValue && (\n                <Grid item xs>\n                    <Slider\n                        id={sliderId}\n                        aria-label=\"moisture\"\n                        valueLabelDisplay=\"off\"\n                        min={0}\n                        max={1}\n                        step={0.05}\n                        value={value}\n                        onChange={onChange}\n                        color={color}\n                    />\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n"],"names":["React","SvgWidget","useWidgetTheme","useId","SoilMoistureWidget","props","value","color","size","active","background","controlBackground","textProps","clipId","hasValue","isNaN","tvalue","Math","round","w","h","cm","ch","SoilMoistureReg","useRegisterUnpackedValue","useWidgetSize","useServiceServer","Grid","Slider","useRegister","DashboardSoilMoisture","service","services","variant","moistureReg","Moisture","widgetSize","length","server","sliderId","onChange","event","newValue","svalue","reading","setValues","refresh"],"sourceRoot":""}