{"version":3,"file":"component---src-pages-tools-model-editor-tsx-48f85f115bad6c3fcb1f.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Delete.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/GetApp.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Stop.js","webpack://jacdac-docs/./node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/InputAdornment/InputAdornment.js","webpack://jacdac-docs/./src/components/ClassDataSetGrid.tsx","webpack://jacdac-docs/./src/workers/csv/workerloader.js","webpack://jacdac-docs/./src/workers/data/workerloader.js","webpack://jacdac-docs/./src/workers/tf/workerloader.js","webpack://jacdac-docs/./src/workers/vm/workerloader.js","webpack://jacdac-docs/./src/workers/cad/workerloader.js","webpack://jacdac-docs/./src/components/blockly/dsl/workers/proxy.ts","webpack://jacdac-docs/./src/components/model-editor/CollectData.tsx","webpack://jacdac-docs/./src/components/model-editor/ModelEditor.tsx","webpack://jacdac-docs/./src/pages/tools/model-editor.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nvar inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar overridesResolver = (props, styles) => {\n  var {\n    ownerState\n  } = props;\n  return [styles.root, styles[\"position\".concat(capitalize(ownerState.position))], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  var slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && \"position\".concat(capitalize(position)), variant, hiddenLabel && 'hiddenLabel', size && \"size\".concat(capitalize(size))]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nvar InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(_ref => {\n  var {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    color: theme.palette.action.active\n  }, ownerState.variant === 'filled' && {\n    // Styles applied to the root element if `variant=\"filled\"`.\n    [\"&.\".concat(inputAdornmentClasses.positionStart, \"&:not(.\").concat(inputAdornmentClasses.hiddenLabel, \")\")]: {\n      marginTop: 16\n    }\n  }, ownerState.position === 'start' && {\n    // Styles applied to the root element if `position=\"start\"`.\n    marginRight: 8\n  }, ownerState.position === 'end' && {\n    // Styles applied to the root element if `position=\"end\"`.\n    marginLeft: 8\n  }, ownerState.disablePointerEvents === true && {\n    // Styles applied to the root element if `disablePointerEvents={true}`.\n    pointerEvents: 'none'\n  });\n});\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  var {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  var ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default InputAdornment;","import React from \"react\"\n\nimport { Card, CardContent, CardHeader, Grid } from \"@mui/material\"\nimport { IconButton } from \"gatsby-theme-material-ui\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\n\nimport Trend from \"./Trend\"\nimport FieldDataSet from \"./FieldDataSet\"\n\nexport default function ClassDataSetGrid(props: {\n    label: string\n    tables: FieldDataSet[]\n    handleDeleteTable?: (table: FieldDataSet) => void\n}) {\n    const { label, tables, handleDeleteTable } = props\n\n    const handleDelete = (table: FieldDataSet) => () => handleDeleteTable(table)\n\n    return (\n        <Grid container spacing={2}>\n            <Card>\n                <CardHeader\n                    subheader={label + `, ${tables.length} sample(s)`}\n                />\n                <CardContent>\n                    <Grid container spacing={1}>\n                        {tables.map(table => (\n                            <Grid item key={`result` + table.id}>\n                                <Trend dataSet={table} height={8} mini={true} />\n                                {handleDeleteTable && (\n                                    <IconButton\n                                        onClick={handleDelete(table)}\n                                        title=\"Delete this sample\"\n                                        size=\"large\"\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                )}\n                            </Grid>\n                        ))}\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n    )\n}\n","export default function createCsvWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/csv-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}","export default function createDataWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/data-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createTFWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/tf-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createVMWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                // gatsby fast-refresh ignores files with node_modules in path\n                \"./dist/node_modules/vm-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}\n","export default function createCadWorker() {\n    return (\n        typeof Window !== \"undefined\" &&\n        new Worker(\n            new URL(\n                \"./dist/node_modules/cad-worker.js\",\n                import.meta.url // syntax not supported in typescript\n            )\n        )\n    )\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { MESSAGE } from \"../../../../../jacdac-ts/src/jdom/constants\"\nimport JDEventSource from \"../../../../../jacdac-ts/src/jdom/eventsource\"\nimport { assert, SMap } from \"../../../../../jacdac-ts/src/jdom/utils\"\nimport createCsvWorker from \"../../../../workers/csv/workerloader\"\nimport createDataWorker from \"../../../../workers/data/workerloader\"\nimport createTFWorker from \"../../../../workers/tf/workerloader\"\nimport createVMWorker from \"../../../../workers/vm/workerloader\"\nimport createCadWorker from \"../../../../workers/cad/workerloader\"\n\nexport type VMType = \"data\" | \"csv\" | \"tf\" | \"vm\" | \"cad\"\n\nexport interface WorkerMessage {\n    worker: VMType\n    id?: string\n}\n\nexport interface WorkerResponse {\n    error?: string\n}\n\nexport class WorkerProxy extends JDEventSource {\n    readonly pendings: SMap<{\n        resolve: (res: any) => void\n        reject: (err: any) => void\n    }> = {}\n    constructor(readonly worker: Worker, readonly workerid: VMType) {\n        super()\n        this.worker.addEventListener(\"message\", this.handleMessage.bind(this))\n    }\n\n    private handleMessage(event: MessageEvent) {\n        const { data: message } = event\n        const { id, worker } = message\n        const pending = this.pendings[id]\n        if (pending) {\n            assert(worker === message.worker)\n            pending.resolve(message)\n        } else {\n            this.emit(MESSAGE, event.data)\n        }\n    }\n\n    postMessage<T, R>(message: WorkerMessage & T): Promise<WorkerResponse & R> {\n        message.id = message.id || Math.random() + \"\"\n        message.worker = this.workerid\n        return new Promise<R>((resolve, reject) => {\n            this.pendings[message.id] = { resolve, reject }\n            this.worker.postMessage(message)\n        })\n    }\n}\n\nconst _workers: SMap<WorkerProxy> = {}\nconst loaders = {\n    data: createDataWorker,\n    csv: createCsvWorker,\n    tf: createTFWorker,\n    vm: createVMWorker,\n    cad: createCadWorker,\n}\nexport default function workerProxy(workerid: VMType) {\n    const worker =\n        _workers[workerid] ||\n        (_workers[workerid] = new WorkerProxy(loaders[workerid](), workerid))\n    return worker\n}\n","import React, { lazy, useEffect, useContext, useState } from \"react\"\n\nimport { Button, Grid, TextField, InputAdornment } from \"@mui/material\"\nimport { Autocomplete } from \"@mui/material\"\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport StopIcon from \"@mui/icons-material/Stop\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DownloadIcon from \"@mui/icons-material/GetApp\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteAllIcon from \"@mui/icons-material/DeleteSweep\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AddIcon from \"@mui/icons-material/Add\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n\nimport ServiceManagerContext from \"../ServiceManagerContext\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\n\nimport useChange from \"../../jacdac/useChange\"\nimport { arrayConcatMany } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JDRegister from \"../../../jacdac-ts/src/jdom/register\"\nimport { isSensor } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport { REPORT_UPDATE } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { throttle } from \"../../../jacdac-ts/src/jdom/utils\"\n\nimport Trend from \"../Trend\"\nimport ClassDataSetGrid from \"../ClassDataSetGrid\"\nimport ReadingFieldGrid from \"../ReadingFieldGrid\"\nimport FieldDataSet from \"../FieldDataSet\"\nimport MBDataSet, { arraysEqual } from \"./MBDataSet\"\nimport { DATASET_NAME } from \"./ModelEditor\"\nimport Suspense from \"../ui/Suspense\"\nimport AppContext from \"../AppContext\"\n\nconst DataSetPlot = lazy(() => import(\"./components/DataSetPlot\"))\n\nconst LIVE_HORIZON = 24\nfunction createDataSet(\n    bus: JDBus,\n    registers: JDRegister[],\n    name: string,\n    live: boolean,\n    palette: string[]\n) {\n    const fields = arrayConcatMany(registers.map(reg => reg.fields))\n    const colors = fields.map((f, i) => palette[i % palette.length])\n    const set = new FieldDataSet(bus, name, fields, colors)\n    if (live) set.maxRows = LIVE_HORIZON + 4\n\n    return set\n}\n\nexport default function CollectData(props: {\n    chartProps: any\n    reactStyle: any\n    chartPalette: string[]\n    dataset: MBDataSet\n    onChange: (dataset) => void\n    onNext: (dataset) => void\n}) {\n    const { chartPalette, onChange, onNext } = props\n    const [dataset, setDataSet] = useState<MBDataSet>(props.dataset)\n    const [dataTimestamp, setDataTimestamp] = useState(0)\n    const classes = props.reactStyle\n    const chartProps = props.chartProps\n\n    const { fileStorage } = useContext(ServiceManagerContext)\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { toggleShowDeviceHostsDialog } = useContext(AppContext)\n    const readingRegisters = useChange(bus, bus =>\n        arrayConcatMany(\n            bus.devices().map(device =>\n                device\n                    .services()\n                    .filter(srv => isSensor(srv.specification))\n                    .map(srv => srv.readingRegister)\n            )\n        )\n    )\n\n    /* For choosing sensors */\n    const [registerIdsChecked, setRegisterIdsChecked] = useState<string[]>([])\n    const [totalRecordings, setTotalRecordings] = useState(0)\n    const [recordingName, setRecordingName] = useState(\n        \"recording\" + totalRecordings\n    )\n\n    const [isRecording, setIsRecording] = useState(false)\n    const [liveRecording, setLiveRecording] = useState<FieldDataSet>(undefined)\n    const [, setLiveDataTimestamp] = useState(0)\n\n    const newRecording = (registerIds: string[], live: boolean) =>\n        registerIds.length\n            ? createDataSet(\n                  bus,\n                  readingRegisters.filter(\n                      reg => registerIds.indexOf(reg.id) > -1\n                  ),\n                  `${currentClassLabel}$${dataset.totalRecordings}`,\n                  live,\n                  chartPalette\n              )\n            : undefined\n    const handleRegisterCheck = (reg: JDRegister) => {\n        const i = registerIdsChecked.indexOf(reg.id)\n        if (i > -1) registerIdsChecked.splice(i, 1)\n        else registerIdsChecked.push(reg.id)\n\n        registerIdsChecked.sort()\n        setRegisterIdsChecked([...registerIdsChecked])\n        setLiveRecording(newRecording(registerIdsChecked, true))\n    }\n\n    const handleRecordingNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setRecordingName(event.target.value.trim())\n    }\n\n    /* For recording data*/\n    const [currentClassLabel, setCurrentClassLabel] = useState(\"class1\")\n    const [samplingIntervalDelay, setSamplingIntervalDelay] = useState(\"50\")\n    const [samplingDuration, setSamplingDuration] = useState(\"2\")\n    const [datasetMatch, setDataSetMatch] = useState(false)\n    const recordingRegisters = readingRegisters.filter(\n        reg => registerIdsChecked.indexOf(reg.id) > -1\n    )\n\n    const samplingIntervalDelayi = parseInt(samplingIntervalDelay)\n    const samplingCount = Math.ceil(\n        (parseFloat(samplingDuration) * 1000) / samplingIntervalDelayi\n    )\n    const errorSamplingIntervalDelay =\n        isNaN(samplingIntervalDelayi) || !/\\d+/.test(samplingIntervalDelay)\n    const errorSamplingDuration = isNaN(samplingCount)\n    const error = errorSamplingDuration || errorSamplingIntervalDelay\n    const startEnabled = !!recordingRegisters?.length && datasetMatch\n\n    const handleSamplingIntervalChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingIntervalDelay(event.target.value.trim())\n    }\n    const handleSamplingDurationChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setSamplingDuration(event.target.value.trim())\n    }\n    const handleLabelChange = newLabel => {\n        setCurrentClassLabel(newLabel)\n    }\n    const handleDownloadDataSet = async () => {\n        fileStorage.saveText(`${dataset.name}.csv`, dataset.toCSV())\n    }\n    const handleDeleteDataSet = () => {\n        if (confirm(\"Are you sure you want to delete all recorded samples?\")) {\n            const newDataSet = new MBDataSet(DATASET_NAME)\n            handleDataSetUpdate(newDataSet)\n            setDataSet(newDataSet)\n\n            resetDataCollection()\n        }\n    }\n    const resetDataCollection = () => {\n        setCurrentClassLabel(\"class1\")\n        setTotalRecordings(0)\n        setSamplingIntervalDelay(\"50\")\n        setSamplingDuration(\"2\")\n    }\n    const stopRecording = () => {\n        if (isRecording) {\n            // add new data to the dataset\n            liveRecording.interval = samplingIntervalDelayi\n            dataset.addRecording(\n                liveRecording,\n                currentClassLabel,\n                registerIdsChecked\n            )\n            setTotalRecordings(totalRecordings + 1)\n            setDataSet(dataset)\n            handleDataSetUpdate(dataset)\n            setDataTimestamp(Date.now())\n\n            // create new live recording\n            setLiveRecording(newRecording(registerIdsChecked, true))\n\n            // stop recording\n            setIsRecording(false)\n        }\n    }\n    const startRecording = async () => {\n        if (!isRecording && recordingRegisters.length) {\n            setLiveRecording(newRecording(registerIdsChecked, false))\n            setIsRecording(true)\n        }\n    }\n    const startStreamingRegisters = () => {\n        console.log(`start streaming`)\n        const streamers = recordingRegisters?.map(reg =>\n            reg.subscribe(REPORT_UPDATE, () => {})\n        )\n        return () => {\n            console.log(`stop streaming`)\n            streamers.map(streamer => streamer())\n        }\n    }\n    const toggleRecording = () => {\n        if (isRecording) stopRecording()\n        else startRecording()\n    }\n    const handleDeleteRecording = (recording: FieldDataSet) => {\n        dataset.removeRecording(recording)\n        setDataTimestamp(Date.now())\n        setDataSet(dataset)\n        handleDataSetUpdate(dataset)\n    }\n    const updateLiveData = () => {\n        setLiveRecording(liveRecording)\n        setLiveDataTimestamp(bus.timestamp)\n    }\n    const throttleUpdate = throttle(() => updateLiveData(), 30)\n    // data collection\n    // interval add data entry\n    const addRow = (values?: number[]) => {\n        if (!liveRecording) return\n        liveRecording.addRow(values)\n        if (isRecording && liveRecording.length >= samplingCount) {\n            // stop recording\n            updateLiveData()\n            stopRecording()\n        } else {\n            throttleUpdate()\n        }\n    }\n    // setting interval\n    useEffect(() => {\n        if (error) return\n        console.log(`set interval to ${samplingIntervalDelayi}`)\n        recordingRegisters.forEach(reg =>\n            reg.sendSetPackedAsync([samplingIntervalDelayi])\n        )\n    }, [samplingIntervalDelayi, registerIdsChecked, errorSamplingIntervalDelay])\n    // collecting\n    useEffect(() => {\n        if (error) return undefined\n        const interval = setInterval(() => addRow(), samplingIntervalDelayi)\n        const stopStreaming = startStreamingRegisters()\n\n        return () => {\n            clearInterval(interval)\n            stopStreaming()\n        }\n    }, [isRecording, samplingIntervalDelayi, samplingCount, registerIdsChecked])\n    useEffect(() => {\n        setRecordingName(\"recording\" + totalRecordings)\n    }, [totalRecordings])\n    useEffect(() => {\n        let matchingInputs = true\n        if (dataset && liveRecording) {\n            if (dataset.inputTypes && dataset.inputTypes.length) {\n                if (!arraysEqual(dataset.inputTypes, liveRecording.headers))\n                    matchingInputs = false\n            }\n        }\n        setDataSetMatch(matchingInputs)\n    }, [registerIdsChecked, liveRecording])\n\n    const handleDataSetUpdate = dataset => {\n        onChange(dataset)\n    }\n    const handleNext = () => {\n        onNext(dataset)\n    }\n\n    return (\n        <Grid container direction={\"column\"}>\n            <Grid item>\n                <h2>\n                    Current Dataset\n                    <IconButtonWithTooltip\n                        onClick={handleDownloadDataSet}\n                        title=\"Download all recording data\"\n                        disabled={dataset.totalRecordings == 0}\n                    >\n                        <DownloadIcon />\n                    </IconButtonWithTooltip>\n                    <IconButtonWithTooltip\n                        onClick={handleDeleteDataSet}\n                        title=\"Delete all recording data\"\n                        disabled={dataset.totalRecordings == 0}\n                    >\n                        <DeleteAllIcon />\n                    </IconButtonWithTooltip>\n                </h2>\n                <div key=\"recordedData\">\n                    {dataset.totalRecordings ? (\n                        <div key=\"recordings\">\n                            <p>\n                                Input type(s): {dataset.inputTypes.join(\",\")}{\" \"}\n                            </p>\n                            {dataset.labels.map(classLabel => (\n                                <ClassDataSetGrid\n                                    key={\"dataset-\" + classLabel}\n                                    label={classLabel}\n                                    tables={dataset.getRecordingsWithLabel(\n                                        classLabel\n                                    )}\n                                    handleDeleteTable={handleDeleteRecording}\n                                />\n                            ))}\n                            <br />\n                            <Suspense>\n                                <DataSetPlot\n                                    chartProps={chartProps}\n                                    reactStyle={classes}\n                                    dataset={dataset}\n                                    predictedLabels={undefined}\n                                    timestamp={dataTimestamp}\n                                />\n                            </Suspense>\n                        </div>\n                    ) : (\n                        <p>Empty</p>\n                    )}\n                </div>\n            </Grid>\n            <Grid item>\n                <h2>Collect More Data</h2>\n                {/* TODO Toggle button to get data from sensors vs upload from file */}\n                <div key=\"sensors\">\n                    <h3>\n                        Select input sensors&nbsp;\n                        <IconButtonWithTooltip\n                            title=\"start simulator\"\n                            onClick={toggleShowDeviceHostsDialog}\n                        >\n                            <AddIcon />\n                        </IconButtonWithTooltip>\n                    </h3>\n                    {!readingRegisters.length && (\n                        <span>Waiting for sensors...</span>\n                    )}\n                    {!!readingRegisters.length && (\n                        <ReadingFieldGrid\n                            readingRegisters={readingRegisters}\n                            registerIdsChecked={registerIdsChecked}\n                            recording={isRecording}\n                            liveDataSet={liveRecording}\n                            handleRegisterCheck={handleRegisterCheck}\n                        />\n                    )}\n                </div>\n            </Grid>\n            <Grid item>\n                <div key=\"record\">\n                    <h3>Record data</h3>\n                    <div className={classes.row}>\n                        <TextField\n                            className={classes.field}\n                            label=\"Recording name\"\n                            value={recordingName}\n                            variant=\"outlined\"\n                            onChange={handleRecordingNameChange}\n                        />\n                        <Autocomplete\n                            disabled={isRecording}\n                            className={classes.field}\n                            options={dataset.labelOptions}\n                            renderInput={params => (\n                                <TextField\n                                    {...params}\n                                    label=\"Class label\"\n                                    variant=\"outlined\"\n                                />\n                            )}\n                            value={currentClassLabel}\n                            onInputChange={(event, newValue) =>\n                                handleLabelChange(newValue)\n                            }\n                            isOptionEqualToValue={() => true}\n                        />\n                        <TextField\n                            className={classes.field}\n                            error={errorSamplingDuration}\n                            disabled={isRecording}\n                            label=\"Sampling duration\"\n                            value={samplingDuration}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        s\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleSamplingDurationChange}\n                        />\n                        <TextField\n                            className={classes.field}\n                            error={errorSamplingIntervalDelay}\n                            disabled={isRecording}\n                            label=\"Sampling interval\"\n                            value={samplingIntervalDelay}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        ms\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleSamplingIntervalChange}\n                        />\n                    </div>\n                    <div className={classes.buttons}>\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isRecording ? \"secondary\" : \"primary\"}\n                            aria-label=\"start/stop recording\"\n                            title=\"start/stop recording\"\n                            onClick={toggleRecording}\n                            startIcon={\n                                isRecording ? <StopIcon /> : <PlayArrowIcon />\n                            }\n                            disabled={!startEnabled}\n                        >\n                            {isRecording ? \"Stop\" : \"Start\"}\n                        </Button>\n                    </div>\n                </div>\n                <div key=\"liveData\">\n                    {liveRecording && (\n                        <Trend\n                            key=\"trends\"\n                            height={12}\n                            dataSet={liveRecording}\n                            horizon={LIVE_HORIZON}\n                            dot={true}\n                            gradient={true}\n                        />\n                    )}\n                </div>\n            </Grid>\n            <Grid item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<NavigateNextIcon />}\n                        disabled={dataset.labels.length < 2}\n                        onClick={handleNext}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Tabs, Tab } from \"@mui/material\"\nimport TabPanel from \"../ui/TabPanel\"\n\nimport useChartPalette from \"../useChartPalette\"\n\nimport CollectData from \"./CollectData\"\nimport TrainModel from \"./TrainModel\"\nimport ModelOutput from \"./ModelOutput\"\n\nimport MBDataSet from \"./MBDataSet\"\nimport MBModel from \"./MBModel\"\n\nconst PREFIX = \"DATASET_NAME\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    grow: `${PREFIX}-grow`,\n    field: `${PREFIX}-field`,\n    segment: `${PREFIX}-segment`,\n    row: `${PREFIX}-row`,\n    buttons: `${PREFIX}-buttons`,\n    trend: `${PREFIX}-trend`,\n    vmiddle: `${PREFIX}-vmiddle`,\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n    [`& .${classes.root}`]: {\n        marginBottom: theme.spacing(1),\n    },\n\n    [`& .${classes.grow}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.field}`]: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1.5),\n        display: \"inline-flex\",\n        width: theme.spacing(35),\n    },\n\n    [`& .${classes.segment}`]: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n\n    [`& .${classes.row}`]: {\n        marginBottom: theme.spacing(0.5),\n    },\n\n    [`& .${classes.buttons}`]: {\n        display: \"inline-flex\",\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n    },\n\n    [`& .${classes.trend}`]: {\n        width: theme.spacing(10),\n    },\n\n    [`& .${classes.vmiddle}`]: {\n        verticalAlign: \"middle\",\n    },\n}))\n\nconst MODEL_EDITOR = \"model_editor\" // create prefix for model editor page\nconst MODEL_NAME = MODEL_EDITOR + \"-model\"\nexport const DATASET_NAME = MODEL_EDITOR + \"-dataset\"\nexport const MODEL_EDITOR_STORAGE_KEY = \"model-editor-data-json\"\n\nfunction getDataSetFromLocalStorage() {\n    // check local storage for recording\n    const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n    if (storedDataJSON) {\n        const modelEditorData = JSON.parse(storedDataJSON)\n        if (modelEditorData[\"dataset\"])\n            return MBDataSet.createFromFile(\n                DATASET_NAME,\n                modelEditorData[\"dataset\"]\n            )\n    }\n    return new MBDataSet(DATASET_NAME)\n}\n\nfunction getModelFromLocalStorage() {\n    // check local storage for saved model\n    const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n    if (storedDataJSON) {\n        const modelEditorData = JSON.parse(storedDataJSON)\n        if (modelEditorData[\"model\"])\n            return MBModel.createFromFile(modelEditorData[\"model\"])\n    }\n\n    const newModel = new MBModel(MODEL_NAME)\n    return newModel\n}\n\nfunction getTabFromLocalStorage() {\n    // check local storage for saved model\n    const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n    if (storedDataJSON) {\n        const modelEditorData = JSON.parse(storedDataJSON)\n        if (modelEditorData[\"tab\"]) return modelEditorData[\"tab\"]\n    }\n    return 0\n}\n\nexport default function ModelPlayground() {\n    const chartPalette = useChartPalette()\n    const chartProps = {\n        CHART_WIDTH: 300,\n        CHART_HEIGHT: 300,\n        MARK_SIZE: 75,\n        TOOLTIP_NUM_FORMAT: \"0.2f\",\n        PALETTE: chartPalette,\n    }\n\n    const [dataset, setDataSet] = useState<MBDataSet>(\n        getDataSetFromLocalStorage\n    )\n    const [tfModel, setTFModel] = useState<MBModel>(getModelFromLocalStorage)\n    const [tab, setTab] = useState<number>(getTabFromLocalStorage)\n\n    /* Data and interface management */\n    const handleTabChange = (\n        event: React.ChangeEvent<unknown>,\n        newTab: number\n    ) => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous dataset and model data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"tab\"] = newTab\n        } else {\n            modelEditorData = {\n                dataset: undefined,\n                model: undefined,\n                tab: newTab,\n            }\n        }\n\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n        setTab(newTab)\n    }\n\n    const handleDataChange = newDataSet => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous model and tab data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"dataset\"] = newDataSet\n\n            // if dataset is changed, model should be reset too\n            modelEditorData[\"model\"] = new MBModel(MODEL_NAME)\n            setTFModel(new MBModel(MODEL_NAME))\n        } else {\n            modelEditorData = {\n                dataset: newDataSet,\n                model: undefined,\n                tab: 0,\n            }\n        }\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n        setDataSet(newDataSet)\n    }\n\n    const handleModelChange = async newModel => {\n        const storedDataJSON = localStorage.getItem(MODEL_EDITOR_STORAGE_KEY)\n        let modelEditorData\n        if (storedDataJSON) {\n            // keep previous dataset and tab data\n            modelEditorData = JSON.parse(storedDataJSON)\n            modelEditorData[\"model\"] = newModel\n        } else {\n            modelEditorData = {\n                dataset: undefined,\n                model: newModel,\n                tab: 0,\n            }\n        }\n        // save JSON string in local storage\n        localStorage.setItem(\n            MODEL_EDITOR_STORAGE_KEY,\n            JSON.stringify(modelEditorData)\n        )\n\n        setTFModel(newModel)\n    }\n\n    const nextTab = () => {\n        if (tab == 0 && dataset.labels.length >= 2) {\n            setTab(1)\n        } else if (tab == 1 && tfModel.status == \"trained\") {\n            setTab(2)\n        }\n    }\n\n    return (\n        <StyledBox mb={2}>\n            <h1>ML Model Editor</h1>\n            <p>\n                This page allows you to collect data from Jacdac sensors and use\n                them to train a neural network model that does classification.\n            </p>\n\n            <Tabs\n                value={tab}\n                onChange={handleTabChange}\n                aria-label=\"View specification formats\"\n            >\n                <Tab label={`1 - Collect Data`} />\n                <Tab\n                    label={`2 - Train Model`}\n                    disabled={dataset.labels.length < 2}\n                />\n                <Tab\n                    label={`3 - Test Model`}\n                    disabled={\n                        dataset.labels.length < 2 ||\n                        tfModel.status !== \"trained\"\n                    }\n                />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n                <CollectData\n                    chartProps={chartProps}\n                    reactStyle={classes}\n                    chartPalette={chartPalette}\n                    dataset={dataset}\n                    onChange={handleDataChange}\n                    onNext={nextTab}\n                />\n            </TabPanel>\n            <TabPanel value={tab} index={1}>\n                <TrainModel\n                    chartProps={chartProps}\n                    reactStyle={classes}\n                    dataset={dataset}\n                    model={tfModel}\n                    onChange={handleModelChange}\n                    onNext={nextTab}\n                />\n            </TabPanel>\n            <TabPanel value={tab} index={2}>\n                <ModelOutput\n                    chartProps={chartProps}\n                    reactStyle={classes}\n                    chartPalette={chartPalette}\n                    model={tfModel}\n                />\n            </TabPanel>\n        </StyledBox>\n    )\n}\n","import React from \"react\"\nimport ModelEditor from \"../../components/model-editor/ModelEditor\"\n\nexport default function Page() {\n    return <ModelEditor />\n}\n"],"names":["React","Card","CardContent","CardHeader","Grid","IconButton","DeleteIcon","Trend","ClassDataSetGrid","props","label","tables","handleDeleteTable","handleDelete","table","length","map","id","import","MESSAGE","JDEventSource","assert","createCsvWorker","createDataWorker","createTFWorker","createVMWorker","createCadWorker","WorkerProxy","worker","workerid","pendings","addEventListener","handleMessage","bind","event","data","message","pending","resolve","emit","postMessage","Math","random","Promise","reject","_workers","loaders","csv","tf","vm","cad","workerProxy","lazy","useEffect","useContext","useState","Button","TextField","InputAdornment","Autocomplete","PlayArrowIcon","StopIcon","DownloadIcon","DeleteAllIcon","NavigateNextIcon","AddIcon","IconButtonWithTooltip","ServiceManagerContext","JacdacContext","useChange","arrayConcatMany","isSensor","REPORT_UPDATE","throttle","ReadingFieldGrid","FieldDataSet","MBDataSet","arraysEqual","DATASET_NAME","Suspense","AppContext","DataSetPlot","LIVE_HORIZON","createDataSet","bus","registers","name","live","palette","fields","reg","colors","f","i","set","maxRows","CollectData","chartPalette","onChange","onNext","dataset","setDataSet","dataTimestamp","setDataTimestamp","classes","reactStyle","chartProps","fileStorage","toggleShowDeviceHostsDialog","readingRegisters","devices","device","services","filter","srv","specification","readingRegister","registerIdsChecked","setRegisterIdsChecked","totalRecordings","setTotalRecordings","recordingName","setRecordingName","isRecording","setIsRecording","liveRecording","setLiveRecording","undefined","setLiveDataTimestamp","newRecording","registerIds","indexOf","currentClassLabel","handleRegisterCheck","splice","push","sort","handleRecordingNameChange","target","value","trim","setCurrentClassLabel","samplingIntervalDelay","setSamplingIntervalDelay","samplingDuration","setSamplingDuration","datasetMatch","setDataSetMatch","recordingRegisters","samplingIntervalDelayi","parseInt","samplingCount","ceil","parseFloat","errorSamplingIntervalDelay","isNaN","test","errorSamplingDuration","error","startEnabled","handleSamplingIntervalChange","handleSamplingDurationChange","handleLabelChange","newLabel","handleDownloadDataSet","saveText","toCSV","handleDeleteDataSet","confirm","newDataSet","handleDataSetUpdate","resetDataCollection","stopRecording","interval","addRecording","Date","now","startRecording","startStreamingRegisters","console","log","streamers","subscribe","streamer","toggleRecording","handleDeleteRecording","recording","removeRecording","updateLiveData","timestamp","throttleUpdate","addRow","values","forEach","sendSetPackedAsync","setInterval","stopStreaming","clearInterval","matchingInputs","inputTypes","headers","handleNext","join","labels","classLabel","getRecordingsWithLabel","row","field","labelOptions","params","newValue","startAdornment","buttons","display","justifyContent","styled","Box","Tabs","Tab","TabPanel","useChartPalette","TrainModel","ModelOutput","MBModel","PREFIX","root","grow","segment","trend","vmiddle","StyledBox","theme","marginBottom","spacing","flexGrow","marginRight","width","marginTop","verticalAlign","MODEL_EDITOR","MODEL_NAME","MODEL_EDITOR_STORAGE_KEY","getDataSetFromLocalStorage","storedDataJSON","localStorage","getItem","modelEditorData","JSON","parse","createFromFile","getModelFromLocalStorage","newModel","getTabFromLocalStorage","ModelPlayground","CHART_WIDTH","CHART_HEIGHT","MARK_SIZE","TOOLTIP_NUM_FORMAT","PALETTE","tfModel","setTFModel","tab","setTab","handleTabChange","newTab","model","setItem","stringify","handleDataChange","handleModelChange","nextTab","status","ModelEditor","Page"],"sourceRoot":""}