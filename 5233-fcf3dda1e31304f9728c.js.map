{"version":3,"file":"5233-fcf3dda1e31304f9728c.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,KAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;;;;;;;;ACjBf;;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AAEA,IAAMc,MAAM,GAAG,mBAAf;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAKF,MAAL;AADK,CAAhB;AAIA,IAAMG,UAAU,GAAGd,0EAAM,CAACC,+DAAD,CAAN,CAAa;AAAA,MAAC;AAAEc,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC5C,aAAOH,OAAO,CAACC,OAAf,GAA2B;AACvBG,MAAAA,UAAU,EAAE,UADW;AAEvBC,MAAAA,WAAW,EAAE,KAFU;AAGvBC,MAAAA,WAAW,EAAE,OAHU;AAIvBC,MAAAA,WAAW,EAAE,aAJU;AAKvBC,MAAAA,UAAU,EAAE,MALW;AAMvB,iBAAW;AACPD,QAAAA,WAAW,EAAEJ,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsBC;AAD5B,OANY;AASvB,iBAAW;AACPJ,QAAAA,WAAW,EAAEJ,KAAK,CAACM,OAAN,CAAcG,MAAd,CAAqBC;AAD3B;AATY;AADiB,GAAhB;AAAA,CAAb,CAAnB;AAgBe,SAASC,iBAAT,CAA2BC,KAA3B,EAAyD;AACpE,MAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,MAAME,MAAM,GAAG/B,6CAAM,EAArB;AACA,MAAMgC,MAAM,GAAGvB,4EAAgB,CAAiBqB,OAAjB,CAA/B;AACA,MAAM;AAAA,OAACG,QAAD;AAAA,OAAWC;AAAX,MAA0BjC,+CAAQ,CAAC,EAAD,CAAxC;;AACA,MAAMkC,UAAU;AAAA,iHAAG,WACfC,OADe,EAEfC,KAFe,EAGd;AACD,UAAMC,IAAI,GAAG9B,0EAAM,CAAwC,QAAxC,EAAkD,CACjE4B,OADiE,EAEjEC,KAFiE,CAAlD,CAAnB;AAIA,YAAMP,OAAO,CAACS,YAAR,CAAqBhC,iHAArB,EAA4C+B,IAA5C,CAAN;AACH,KATe;;AAAA,oBAAVH,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAUA,MAAMM,QAAQ;AAAA,iHAAG,WAAOC,EAAP,EAAmBC,EAAnB,EAAkC;AAC/C,UAAML,IAAI,GAAG9B,0EAAM,CAA2B,aAA3B,EAA0C,CACzDkC,EADyD,EAEzDC,EAFyD,EAGzD,GAHyD,CAA1C,CAAnB;AAKA,YAAMb,OAAO,CAACS,YAAR,CAAqBhC,uGAArB,EAAuC+B,IAAvC,CAAN;AACH,KAPa;;AAAA,oBAARG,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAQA,MAAMI,SAAS;AAAA,iHAAG,WAAOF,EAAP,EAAsB;AACpC,UAAML,IAAI,GAAG9B,0EAAM,CAAmB,SAAnB,EAA8B,CAACmC,EAAD,EAAK,GAAL,CAA9B,CAAnB;AACA,YAAMb,OAAO,CAACS,YAAR,CAAqBhC,yGAArB,EAAwC+B,IAAxC,CAAN;AACH,KAHc;;AAAA,oBAATO,SAAS;AAAA;AAAA;AAAA,KAAf;;AAIA,MAAME,WAAW,GAAGpC,sEAAS,CAACqB,MAAD,EAASgB,CAAC,IAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEC,WAAjB,CAA7B;AACA,MAAMC,OAAO,GAAGH,WAAW,IAAId,QAA/B;;AACA,MAAMkB,eAAe,GAAIC,EAAD,IAAoC;AACxD,QAAM;AAAEhB,MAAAA;AAAF,QAAcgB,EAApB;AACArB,IAAAA,MAAM,CAACsB,OAAP,CAAeC,KAAf;AACApB,IAAAA,WAAW,iBAAexB,qGAAqB,CAAC0B,OAAD,CAApC,WAAX;AACH,GAJD;;AAKA,MAAMmB,aAAa,GAAIH,EAAD,IAAoC;AACtD,QAAM;AAAEhB,MAAAA;AAAF,QAAcgB,EAApB;AACAlB,IAAAA,WAAW,iBAAexB,qGAAqB,CAAC0B,OAAD,CAApC,SAAX;AACH,GAHD;;AAIA,MAAMoB,aAAa;AAAA,iHAAG,WAAOJ,EAAP,EAA6C;AAC/DA,MAAAA,EAAE,CAACK,eAAH;AACAL,MAAAA,EAAE,CAACM,cAAH;AACA,UAAM;AAAEC,QAAAA;AAAF,UAAUP,EAAhB;;AACA,cAAQO,GAAR;AACI,aAAK,GAAL;AACIxB,UAAAA,UAAU,CAAC9B,0GAAD,EAAsBC,iHAAtB,CAAV;AACA;;AACJ,aAAK,GAAL;AACI6B,UAAAA,UAAU,CAAC9B,4GAAD,EAAuBC,iHAAvB,CAAV;AACA;;AACJ,aAAK,GAAL;AACI6B,UAAAA,UAAU,CAAC9B,8GAAD,EAAwBC,iHAAxB,CAAV;AACA;;AACJ,aAAK,YAAL;AACImC,UAAAA,QAAQ,CAAC,EAAD,EAAK,CAAL,CAAR;AACA;;AACJ,aAAK,WAAL;AACIA,UAAAA,QAAQ,CAAC,CAAC,EAAF,EAAM,CAAN,CAAR;AACA;;AACJ,aAAK,SAAL;AACIA,UAAAA,QAAQ,CAAC,CAAD,EAAI,CAAC,EAAL,CAAR;AACA;;AACJ,aAAK,WAAL;AACIA,UAAAA,QAAQ,CAAC,CAAD,EAAI,EAAJ,CAAR;AACA;;AACJ,aAAK,GAAL;AACII,UAAAA,SAAS,CAAC,CAAC,EAAF,CAAT;AACA;;AACJ,aAAK,GAAL;AACIA,UAAAA,SAAS,CAAC,EAAD,CAAT;AACA;AA3BR;AA6BH,KAjCkB;;AAAA,oBAAbW,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAmCA,sBACI,iDAAC,UAAD;AAAY,aAAS;AAArB,kBACI,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI;AACI,OAAG,EAAEzB,MADT;AAEI,aAAS,EAAEjB,OAAO,CAACC,OAFvB;AAGI,YAAQ,EAAE,CAHd;AAII,eAAW,EAAEoC,eAJjB;AAKI,aAAS,EAAEI,aALf;AAMI,aAAS,EAAEC;AANf,kBAQI,iDAAC,+DAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,aAAS,EAAC;AAAtC,kBACI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,kFAAD;AAAW,YAAQ,EAAC;AAApB,IADJ,CADJ,eAII,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE,MAAb;AAAc,SAAK,EAAE;AAAElC,MAAAA,UAAU,EAAE;AAAd;AAArB,yHAJJ,CARJ,CADJ,CADJ,EAsBKU,MAAM,IAAIkB,OAAV,iBACG,iDAAC,+DAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,+DAAD;AAAY,WAAO,EAAC,SAApB;AAA8B,aAAS,EAAC;AAAxC,wBACoBA,OAAO,IAAI,KAD/B,CADJ,CAvBR,CADJ;AAgCH","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/MouseOutlined.js","webpack://jacdac-docs/./src/components/dashboard/DashboardHIDMouse.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 9c-.04-4.39-3.6-7.93-8-7.93S4.04 4.61 4 9v6c0 4.42 3.58 8 8 8s8-3.58 8-8V9zm-2 0h-5V3.16c2.81.47 4.96 2.9 5 5.84zm-7-5.84V9H6c.04-2.94 2.19-5.37 5-5.84zM18 15c0 3.31-2.69 6-6 6s-6-2.69-6-6v-4h12v4z\"\n}), 'MouseOutlined');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { KeyboardEvent, MouseEvent, useRef, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Grid, Typography } from \"@mui/material\"\nimport {\n    HidMouseButton,\n    HidMouseButtonEvent,\n    HidMouseCmd,\n} from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { jdpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport HIDMouseServer, {\n    renderHidMouseButtons,\n} from \"../../../jacdac-ts/src/servers/hidmouseserver\"\nimport useChange from \"../../jacdac/useChange\"\nimport MouseIcon from \"@mui/icons-material/MouseOutlined\"\n\nconst PREFIX = \"DashboardHIDMouse\"\n\nconst classes = {\n    capture: `${PREFIX}-capture`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.capture}`]: {\n        whiteSpace: \"pre-wrap\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"transparent\",\n        userSelect: \"none\",\n        \"&:hover\": {\n            borderColor: theme.palette.primary.main,\n        },\n        \"&:focus\": {\n            borderColor: theme.palette.action.active,\n        },\n    },\n}))\n\nexport default function DashboardHIDMouse(props: DashboardServiceProps) {\n    const { service } = props\n\n    const preRef = useRef<HTMLPreElement>()\n    const server = useServiceServer<HIDMouseServer>(service)\n    const [observed, setObserved] = useState(\"\")\n    const sendButton = async (\n        buttons: HidMouseButton,\n        event: HidMouseButtonEvent\n    ) => {\n        const data = jdpack<[HidMouseButton, HidMouseButtonEvent]>(\"u16 u8\", [\n            buttons,\n            event,\n        ])\n        await service.sendCmdAsync(HidMouseCmd.SetButton, data)\n    }\n    const sendMove = async (dx: number, dy: number) => {\n        const data = jdpack<[number, number, number]>(\"i16 i16 u16\", [\n            dx,\n            dy,\n            100,\n        ])\n        await service.sendCmdAsync(HidMouseCmd.Move, data)\n    }\n    const sendWheel = async (dy: number) => {\n        const data = jdpack<[number, number]>(\"i16 u16\", [dy, 100])\n        await service.sendCmdAsync(HidMouseCmd.Wheel, data)\n    }\n    const serverValue = useChange(server, _ => _?.lastCommand)\n    const preview = serverValue || observed\n    const handleMouseDown = (ev: MouseEvent<HTMLPreElement>) => {\n        const { buttons } = ev\n        preRef.current.focus()\n        setObserved(`set button ${renderHidMouseButtons(buttons)} down`)\n    }\n    const handleMouseUp = (ev: MouseEvent<HTMLPreElement>) => {\n        const { buttons } = ev\n        setObserved(`set button ${renderHidMouseButtons(buttons)} up`)\n    }\n    const handleKeyDown = async (ev: KeyboardEvent<HTMLPreElement>) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        const { key } = ev\n        switch (key) {\n            case \"l\":\n                sendButton(HidMouseButton.Left, HidMouseButtonEvent.Click)\n                break\n            case \"r\":\n                sendButton(HidMouseButton.Right, HidMouseButtonEvent.Click)\n                break\n            case \"m\":\n                sendButton(HidMouseButton.Middle, HidMouseButtonEvent.Click)\n                break\n            case \"ArrowRight\":\n                sendMove(10, 0)\n                break\n            case \"ArrowLeft\":\n                sendMove(-10, 0)\n                break\n            case \"ArrowUp\":\n                sendMove(0, -10)\n                break\n            case \"ArrowDown\":\n                sendMove(0, 10)\n                break\n            case \"w\":\n                sendWheel(-10)\n                break\n            case \"s\":\n                sendWheel(10)\n                break\n        }\n    }\n\n    return (\n        <StyledGrid container>\n            <Grid item xs={12}>\n                <pre\n                    ref={preRef}\n                    className={classes.capture}\n                    tabIndex={0}\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onKeyDown={handleKeyDown}\n                >\n                    <Grid container spacing={1} direction=\"row\">\n                        <Grid item>\n                            <MouseIcon fontSize=\"large\" />\n                        </Grid>\n                        <Grid item xs style={{ userSelect: \"none\" }}>\n                            focus and type l(eft), r(ight), m(iddle) for\n                            buttons, arrow keys to move, w(heel up), d(wheel\n                            down) for the wheel\n                        </Grid>\n                    </Grid>\n                </pre>\n            </Grid>\n            {server && preview && (\n                <Grid item xs={12}>\n                    <Typography variant=\"caption\" component=\"pre\">\n                        mouse preview: {preview || \"...\"}\n                    </Typography>\n                </Grid>\n            )}\n        </StyledGrid>\n    )\n}\n"],"names":["React","useRef","useState","styled","Grid","Typography","HidMouseButton","HidMouseButtonEvent","HidMouseCmd","jdpack","useServiceServer","renderHidMouseButtons","useChange","MouseIcon","PREFIX","classes","capture","StyledGrid","theme","whiteSpace","borderWidth","borderStyle","borderColor","userSelect","palette","primary","main","action","active","DashboardHIDMouse","props","service","preRef","server","observed","setObserved","sendButton","buttons","event","data","sendCmdAsync","SetButton","sendMove","dx","dy","Move","sendWheel","Wheel","serverValue","_","lastCommand","preview","handleMouseDown","ev","current","focus","handleMouseUp","handleKeyDown","stopPropagation","preventDefault","key","Left","Click","Right","Middle"],"sourceRoot":""}