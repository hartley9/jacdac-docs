{"version":3,"file":"4610-3761d2d68b237595549d.js","mappings":";;;;;;;AAAa;;AAEb,6BAA6B,mBAAO,CAAC,KAA8C;;AAEnF,6BAA6C;AAC7C;AACA,CAAC,CAAC;AACF,SAAe;;AAEf,4CAA4C,mBAAO,CAAC,KAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,KAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB0D;AAClE;AACP,SAAS,uCAAoB;AAC7B;AACA,2BAA2B,yCAAsB;AACjD,uEAAe,oEAAoB;;;;ACLiE;AAC1C;AAC1D;AAC+B;AACP;AAC8C;AAChC;AACc;AACkB;AACtB;;AAEhD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,iCAAc,QAAQ,4BAA4B;AAC3D;;AAEA,wBAAwB,0BAAM;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI;AACJ,SAAS,8BAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,iCAAiC,gBAAgB;AACjD,cAAc,gCAAa;AAC3B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,IAAI;AACJ,cAAc,+CAA6B;;AAE3C,mBAAmB,8BAAQ,GAAG;AAC9B;AACA,GAAG;;AAEH;AACA,sBAAsB,mBAAI,oBAAoB,8BAAQ;AACtD,eAAe,qBAAI;AACnB;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAAM;AAC9C,gEAAe,aAAa;;;;;;;;;;;;ACvE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2EAA2E,OAAO;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,yCAAyC;AACzC;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA,8EAA8E,mBAAmB;AACjG;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,4BAA4B;;AAE5B;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,MAAM;AACN;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gGAAgG;AAC1G,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2CAA2C;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C,uCAAuC,oDAAoD;AAC3F,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC,OAAO,IAAI,gCAAgC,QAAQ;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sEAAsE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mFAAmF;AAC9F,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD,eAAe,sEAAsE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,WAAW,mFAAmF;AAC9F,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,gDAAgD;AAChD;AACA,SAAS;;AAET;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;;AAEA,+BAA+B,mBAAmB;AAClD,KAAK,qBAAqB;;AAE1B;AACA;;AAEA,+BAA+B;AAC/B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG,SAAS;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,GAAG,IAAI;AACP,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS;AACZ,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,8CAA8C,WAAW,EAAE;;;;;;;;ACvhE3D;AACA,EAAE,KAA4D,oBAAoB,mBAAO,CAAC,KAAY,GAAG,mBAAO,CAAC,KAAO,KAAK,CAAwP;AACrX,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,+CAA+C,OAAO;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/FilterList.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogActions/dialogActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/DialogActions/DialogActions.js","webpack://jacdac-docs/./node_modules/minisearch/dist/es5m/index.js","webpack://jacdac-docs/./node_modules/react-minisearch/dist/react-minisearch.js","webpack://jacdac-docs/./src/components/dialogs/StartSimulatorDialog.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nvar dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disableSpacing\n  } = ownerState;\n  var slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nvar DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(_ref => {\n  var {\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  }, !ownerState.disableSpacing && {\n    '& > :not(:first-of-type)': {\n      marginLeft: 8\n    }\n  });\n});\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  var {\n    className,\n    disableSpacing = false\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default DialogActions;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n/** @ignore */\n\n\nvar ENTRIES = 'ENTRIES';\n/** @ignore */\n\nvar KEYS = 'KEYS';\n/** @ignore */\n\nvar VALUES = 'VALUES';\n/** @ignore */\n\nvar LEAF = '';\n/**\n * @private\n */\n\nvar TreeIterator = function () {\n  function TreeIterator(set, type) {\n    var node = set._tree;\n    var keys = Object.keys(node);\n    this.set = set;\n    this._type = type;\n    this._path = keys.length > 0 ? [{\n      node: node,\n      keys: keys\n    }] : [];\n  }\n\n  TreeIterator.prototype.next = function () {\n    var value = this.dive();\n    this.backtrack();\n    return value;\n  };\n\n  TreeIterator.prototype.dive = function () {\n    if (this._path.length === 0) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    var _a = last$1(this._path),\n        node = _a.node,\n        keys = _a.keys;\n\n    if (last$1(keys) === LEAF) {\n      return {\n        done: false,\n        value: this.result()\n      };\n    }\n\n    this._path.push({\n      node: node[last$1(keys)],\n      keys: Object.keys(node[last$1(keys)])\n    });\n\n    return this.dive();\n  };\n\n  TreeIterator.prototype.backtrack = function () {\n    if (this._path.length === 0) {\n      return;\n    }\n\n    last$1(this._path).keys.pop();\n\n    if (last$1(this._path).keys.length > 0) {\n      return;\n    }\n\n    this._path.pop();\n\n    this.backtrack();\n  };\n\n  TreeIterator.prototype.key = function () {\n    return this.set._prefix + this._path.map(function (_a) {\n      var keys = _a.keys;\n      return last$1(keys);\n    }).filter(function (key) {\n      return key !== LEAF;\n    }).join('');\n  };\n\n  TreeIterator.prototype.value = function () {\n    return last$1(this._path).node[LEAF];\n  };\n\n  TreeIterator.prototype.result = function () {\n    if (this._type === VALUES) {\n      return this.value();\n    }\n\n    if (this._type === KEYS) {\n      return this.key();\n    }\n\n    return [this.key(), this.value()];\n  };\n\n  TreeIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  return TreeIterator;\n}();\n\nvar last$1 = function last$1(array) {\n  return array[array.length - 1];\n};\n\nvar NONE = 0;\nvar CHANGE = 1;\nvar ADD = 2;\nvar DELETE = 3;\n/**\n * @ignore\n */\n\nvar fuzzySearch = function fuzzySearch(node, query, maxDistance) {\n  var stack = [{\n    distance: 0,\n    i: 0,\n    key: '',\n    node: node\n  }];\n  var results = {};\n  var innerStack = [];\n\n  var _loop_1 = function _loop_1() {\n    var _a = stack.pop(),\n        node_1 = _a.node,\n        distance = _a.distance,\n        key = _a.key,\n        i = _a.i,\n        edit = _a.edit;\n\n    Object.keys(node_1).forEach(function (k) {\n      if (k === LEAF) {\n        var totDistance = distance + (query.length - i);\n\n        var _a = __read(results[key] || [null, Infinity], 2),\n            d = _a[1];\n\n        if (totDistance <= maxDistance && totDistance < d) {\n          results[key] = [node_1[k], totDistance];\n        }\n      } else {\n        withinDistance(query, k, maxDistance - distance, i, edit, innerStack).forEach(function (_a) {\n          var d = _a.distance,\n              i = _a.i,\n              edit = _a.edit;\n          stack.push({\n            node: node_1[k],\n            distance: distance + d,\n            key: key + k,\n            i: i,\n            edit: edit\n          });\n        });\n      }\n    });\n  };\n\n  while (stack.length > 0) {\n    _loop_1();\n  }\n\n  return results;\n};\n/**\n * @ignore\n */\n\n\nvar withinDistance = function withinDistance(a, b, maxDistance, i, edit, stack) {\n  stack.push({\n    distance: 0,\n    ia: i,\n    ib: 0,\n    edit: edit\n  });\n  var results = [];\n\n  while (stack.length > 0) {\n    var _a = stack.pop(),\n        distance = _a.distance,\n        ia = _a.ia,\n        ib = _a.ib,\n        edit_1 = _a.edit;\n\n    if (ib === b.length) {\n      results.push({\n        distance: distance,\n        i: ia,\n        edit: edit_1\n      });\n      continue;\n    }\n\n    if (a[ia] === b[ib]) {\n      stack.push({\n        distance: distance,\n        ia: ia + 1,\n        ib: ib + 1,\n        edit: NONE\n      });\n    } else {\n      if (distance >= maxDistance) {\n        continue;\n      }\n\n      if (edit_1 !== ADD) {\n        stack.push({\n          distance: distance + 1,\n          ia: ia,\n          ib: ib + 1,\n          edit: DELETE\n        });\n      }\n\n      if (ia < a.length) {\n        if (edit_1 !== DELETE) {\n          stack.push({\n            distance: distance + 1,\n            ia: ia + 1,\n            ib: ib,\n            edit: ADD\n          });\n        }\n\n        if (edit_1 !== DELETE && edit_1 !== ADD) {\n          stack.push({\n            distance: distance + 1,\n            ia: ia + 1,\n            ib: ib + 1,\n            edit: CHANGE\n          });\n        }\n      }\n    }\n  }\n\n  return results;\n};\n/**\n * A class implementing the same interface as a standard JavaScript\n * [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)\n * with string keys, but adding support for efficiently searching entries with\n * prefix or fuzzy search. This class is used internally by [[MiniSearch]] as\n * the inverted index data structure. The implementation is a radix tree\n * (compressed prefix tree).\n *\n * Since this class can be of general utility beyond _MiniSearch_, it is\n * exported by the `minisearch` package and can be imported (or required) as\n * `minisearch/SearchableMap`.\n *\n * @typeParam T  The type of the values stored in the map.\n */\n\n\nvar SearchableMap = function () {\n  /**\n   * The constructor is normally called without arguments, creating an empty\n   * map. In order to create a [[SearchableMap]] from an iterable or from an\n   * object, check [[SearchableMap.from]] and [[SearchableMap.fromObject]].\n   *\n   * The constructor arguments are for internal use, when creating derived\n   * mutable views of a map at a prefix.\n   */\n  function SearchableMap(tree, prefix) {\n    if (tree === void 0) {\n      tree = {};\n    }\n\n    if (prefix === void 0) {\n      prefix = '';\n    }\n\n    this._tree = tree;\n    this._prefix = prefix;\n  }\n  /**\n   * Creates and returns a mutable view of this [[SearchableMap]], containing only\n   * entries that share the given prefix.\n   *\n   * ### Usage:\n   *\n   * ```javascript\n   * let map = new SearchableMap()\n   * map.set(\"unicorn\", 1)\n   * map.set(\"universe\", 2)\n   * map.set(\"university\", 3)\n   * map.set(\"unique\", 4)\n   * map.set(\"hello\", 5)\n   *\n   * let uni = map.atPrefix(\"uni\")\n   * uni.get(\"unique\") // => 4\n   * uni.get(\"unicorn\") // => 1\n   * uni.get(\"hello\") // => undefined\n   *\n   * let univer = map.atPrefix(\"univer\")\n   * univer.get(\"unique\") // => undefined\n   * univer.get(\"universe\") // => 2\n   * univer.get(\"university\") // => 3\n   * ```\n   *\n   * @param prefix  The prefix\n   * @return A [[SearchableMap]] representing a mutable view of the original Map at the given prefix\n   */\n\n\n  SearchableMap.prototype.atPrefix = function (prefix) {\n    var _a;\n\n    if (!prefix.startsWith(this._prefix)) {\n      throw new Error('Mismatched prefix');\n    }\n\n    var _b = __read(trackDown(this._tree, prefix.slice(this._prefix.length)), 2),\n        node = _b[0],\n        path = _b[1];\n\n    if (node === undefined) {\n      var _c = __read(last(path), 2),\n          parentNode = _c[0],\n          key_1 = _c[1];\n\n      var nodeKey = Object.keys(parentNode).find(function (k) {\n        return k !== LEAF && k.startsWith(key_1);\n      });\n\n      if (nodeKey !== undefined) {\n        return new SearchableMap((_a = {}, _a[nodeKey.slice(key_1.length)] = parentNode[nodeKey], _a), prefix);\n      }\n    }\n\n    return new SearchableMap(node || {}, prefix);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   */\n\n\n  SearchableMap.prototype.clear = function () {\n    delete this._size;\n    this._tree = {};\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   * @param key  Key to delete\n   */\n\n\n  SearchableMap.prototype.delete = function (key) {\n    delete this._size;\n    return remove(this._tree, key);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\n   * @return An iterator iterating through `[key, value]` entries.\n   */\n\n\n  SearchableMap.prototype.entries = function () {\n    return new TreeIterator(this, ENTRIES);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   * @param fn  Iteration function\n   */\n\n\n  SearchableMap.prototype.forEach = function (fn) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            key = _d[0],\n            value = _d[1];\n\n        fn(key, value, this);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Returns a key-value object of all the entries that have a key within the\n   * given edit distance from the search key. The keys of the returned object are\n   * the matching keys, while the values are two-elements arrays where the first\n   * element is the value associated to the key, and the second is the edit\n   * distance of the key to the search key.\n   *\n   * ### Usage:\n   *\n   * ```javascript\n   * let map = new SearchableMap()\n   * map.set('hello', 'world')\n   * map.set('hell', 'yeah')\n   * map.set('ciao', 'mondo')\n   *\n   * // Get all entries that match the key 'hallo' with a maximum edit distance of 2\n   * map.fuzzyGet('hallo', 2)\n   * // => { \"hello\": [\"world\", 1], \"hell\": [\"yeah\", 2] }\n   *\n   * // In the example, the \"hello\" key has value \"world\" and edit distance of 1\n   * // (change \"e\" to \"a\"), the key \"hell\" has value \"yeah\" and edit distance of 2\n   * // (change \"e\" to \"a\", delete \"o\")\n   * ```\n   *\n   * @param key  The search key\n   * @param maxEditDistance  The maximum edit distance (Levenshtein)\n   * @return A key-value object of the matching keys to their value and edit distance\n   */\n\n\n  SearchableMap.prototype.fuzzyGet = function (key, maxEditDistance) {\n    return fuzzySearch(this._tree, key, maxEditDistance);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   * @param key  Key to get\n   * @return Value associated to the key, or `undefined` if the key is not\n   * found.\n   */\n\n\n  SearchableMap.prototype.get = function (key) {\n    var node = lookup(this._tree, key);\n    return node !== undefined ? node[LEAF] : undefined;\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   * @param key  Key\n   * @return True if the key is in the map, false otherwise\n   */\n\n\n  SearchableMap.prototype.has = function (key) {\n    var node = lookup(this._tree, key);\n    return node !== undefined && node.hasOwnProperty(LEAF);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\n   * @return An `Iterable` iterating through keys\n   */\n\n\n  SearchableMap.prototype.keys = function () {\n    return new TreeIterator(this, KEYS);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\n   * @param key  Key to set\n   * @param value  Value to associate to the key\n   * @return The [[SearchableMap]] itself, to allow chaining\n   */\n\n\n  SearchableMap.prototype.set = function (key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('key must be a string');\n    }\n\n    delete this._size;\n    var node = createPath(this._tree, key);\n    node[LEAF] = value;\n    return this;\n  };\n\n  Object.defineProperty(SearchableMap.prototype, \"size\", {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n     */\n    get: function get() {\n      var _this = this;\n\n      if (this._size) {\n        return this._size;\n      }\n      /** @ignore */\n\n\n      this._size = 0;\n      this.forEach(function () {\n        _this._size += 1;\n      });\n      return this._size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Updates the value at the given key using the provided function. The function\n   * is called with the current value at the key, and its return value is used as\n   * the new value to be set.\n   *\n   * ### Example:\n   *\n   * ```javascript\n   * // Increment the current value by one\n   * searchableMap.update('somekey', (currentValue) => currentValue == null ? 0 : currentValue + 1)\n   * ```\n   *\n   * @param key  The key to update\n   * @param fn  The function used to compute the new value from the current one\n   * @return The [[SearchableMap]] itself, to allow chaining\n   */\n\n  SearchableMap.prototype.update = function (key, fn) {\n    if (typeof key !== 'string') {\n      throw new Error('key must be a string');\n    }\n\n    delete this._size;\n    var node = createPath(this._tree, key);\n    node[LEAF] = fn(node[LEAF]);\n    return this;\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\n   * @return An `Iterable` iterating through values.\n   */\n\n\n  SearchableMap.prototype.values = function () {\n    return new TreeIterator(this, VALUES);\n  };\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   */\n\n\n  SearchableMap.prototype[Symbol.iterator] = function () {\n    return this.entries();\n  };\n  /**\n   * Creates a [[SearchableMap]] from an `Iterable` of entries\n   *\n   * @param entries  Entries to be inserted in the [[SearchableMap]]\n   * @return A new [[SearchableMap]] with the given entries\n   */\n\n\n  SearchableMap.from = function (entries) {\n    var e_2, _a;\n\n    var tree = new SearchableMap();\n\n    try {\n      for (var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {\n        var _b = __read(entries_1_1.value, 2),\n            key = _b[0],\n            value = _b[1];\n\n        tree.set(key, value);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (entries_1_1 && !entries_1_1.done && (_a = entries_1.return)) _a.call(entries_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return tree;\n  };\n  /**\n   * Creates a [[SearchableMap]] from the iterable properties of a JavaScript object\n   *\n   * @param object  Object of entries for the [[SearchableMap]]\n   * @return A new [[SearchableMap]] with the given entries\n   */\n\n\n  SearchableMap.fromObject = function (object) {\n    return SearchableMap.from(Object.entries(object));\n  };\n\n  return SearchableMap;\n}();\n\nvar trackDown = function trackDown(tree, key, path) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  if (key.length === 0 || tree == null) {\n    return [tree, path];\n  }\n\n  var nodeKey = Object.keys(tree).find(function (k) {\n    return k !== LEAF && key.startsWith(k);\n  });\n\n  if (nodeKey === undefined) {\n    path.push([tree, key]); // performance: update in place\n\n    return trackDown(undefined, '', path);\n  }\n\n  path.push([tree, nodeKey]); // performance: update in place\n\n  return trackDown(tree[nodeKey], key.slice(nodeKey.length), path);\n};\n\nvar lookup = function lookup(tree, key) {\n  if (key.length === 0 || tree == null) {\n    return tree;\n  }\n\n  var nodeKey = Object.keys(tree).find(function (k) {\n    return k !== LEAF && key.startsWith(k);\n  });\n\n  if (nodeKey === undefined) {\n    return undefined;\n  }\n\n  return lookup(tree[nodeKey], key.slice(nodeKey.length));\n};\n\nvar createPath = function createPath(tree, key) {\n  var _a;\n\n  if (key.length === 0 || tree == null) {\n    return tree;\n  }\n\n  var nodeKey = Object.keys(tree).find(function (k) {\n    return k !== LEAF && key.startsWith(k);\n  });\n\n  if (nodeKey === undefined) {\n    var toSplit = Object.keys(tree).find(function (k) {\n      return k !== LEAF && k.startsWith(key[0]);\n    });\n\n    if (toSplit === undefined) {\n      tree[key] = {};\n    } else {\n      var prefix = commonPrefix(key, toSplit);\n      tree[prefix] = (_a = {}, _a[toSplit.slice(prefix.length)] = tree[toSplit], _a);\n      delete tree[toSplit];\n      return createPath(tree[prefix], key.slice(prefix.length));\n    }\n\n    return tree[key];\n  }\n\n  return createPath(tree[nodeKey], key.slice(nodeKey.length));\n};\n\nvar commonPrefix = function commonPrefix(a, b, i, length, prefix) {\n  if (i === void 0) {\n    i = 0;\n  }\n\n  if (length === void 0) {\n    length = Math.min(a.length, b.length);\n  }\n\n  if (prefix === void 0) {\n    prefix = '';\n  }\n\n  if (i >= length) {\n    return prefix;\n  }\n\n  if (a[i] !== b[i]) {\n    return prefix;\n  }\n\n  return commonPrefix(a, b, i + 1, length, prefix + a[i]);\n};\n\nvar remove = function remove(tree, key) {\n  var _a = __read(trackDown(tree, key), 2),\n      node = _a[0],\n      path = _a[1];\n\n  if (node === undefined) {\n    return;\n  }\n\n  delete node[LEAF];\n  var keys = Object.keys(node);\n\n  if (keys.length === 0) {\n    cleanup(path);\n  }\n\n  if (keys.length === 1) {\n    merge(path, keys[0], node[keys[0]]);\n  }\n};\n\nvar cleanup = function cleanup(path) {\n  if (path.length === 0) {\n    return;\n  }\n\n  var _a = __read(last(path), 2),\n      node = _a[0],\n      key = _a[1];\n\n  delete node[key];\n  var keys = Object.keys(node);\n\n  if (keys.length === 0) {\n    cleanup(path.slice(0, -1));\n  }\n\n  if (keys.length === 1 && keys[0] !== LEAF) {\n    merge(path.slice(0, -1), keys[0], node[keys[0]]);\n  }\n};\n\nvar merge = function merge(path, key, value) {\n  if (path.length === 0) {\n    return;\n  }\n\n  var _a = __read(last(path), 2),\n      node = _a[0],\n      nodeKey = _a[1];\n\n  node[nodeKey + key] = value;\n  delete node[nodeKey];\n};\n\nvar last = function last(array) {\n  return array[array.length - 1];\n};\n\nvar _a;\n\nvar OR = 'or';\nvar AND = 'and';\nvar AND_NOT = 'and_not';\n/**\n * [[MiniSearch]] is the main entrypoint class, implementing a full-text search\n * engine in memory.\n *\n * @typeParam T  The type of the documents being indexed.\n *\n * ### Basic example:\n *\n * ```javascript\n * const documents = [\n *   {\n *     id: 1,\n *     title: 'Moby Dick',\n *     text: 'Call me Ishmael. Some years ago...',\n *     category: 'fiction'\n *   },\n *   {\n *     id: 2,\n *     title: 'Zen and the Art of Motorcycle Maintenance',\n *     text: 'I can see by my watch...',\n *     category: 'fiction'\n *   },\n *   {\n *     id: 3,\n *     title: 'Neuromancer',\n *     text: 'The sky above the port was...',\n *     category: 'fiction'\n *   },\n *   {\n *     id: 4,\n *     title: 'Zen and the Art of Archery',\n *     text: 'At first sight it must seem...',\n *     category: 'non-fiction'\n *   },\n *   // ...and more\n * ]\n *\n * // Create a search engine that indexes the 'title' and 'text' fields for\n * // full-text search. Search results will include 'title' and 'category' (plus the\n * // id field, that is always stored and returned)\n * const miniSearch = new MiniSearch({\n *   fields: ['title', 'text'],\n *   storeFields: ['title', 'category']\n * })\n *\n * // Add documents to the index\n * miniSearch.addAll(documents)\n *\n * // Search for documents:\n * let results = miniSearch.search('zen art motorcycle')\n * // => [\n * //   { id: 2, title: 'Zen and the Art of Motorcycle Maintenance', category: 'fiction', score: 2.77258 },\n * //   { id: 4, title: 'Zen and the Art of Archery', category: 'non-fiction', score: 1.38629 }\n * // ]\n * ```\n */\n\nvar MiniSearch = function () {\n  /**\n   * @param options  Configuration options\n   *\n   * ### Examples:\n   *\n   * ```javascript\n   * // Create a search engine that indexes the 'title' and 'text' fields of your\n   * // documents:\n   * const miniSearch = new MiniSearch({ fields: ['title', 'text'] })\n   * ```\n   *\n   * ### ID Field:\n   *\n   * ```javascript\n   * // Your documents are assumed to include a unique 'id' field, but if you want\n   * // to use a different field for document identification, you can set the\n   * // 'idField' option:\n   * const miniSearch = new MiniSearch({ idField: 'key', fields: ['title', 'text'] })\n   * ```\n   *\n   * ### Options and defaults:\n   *\n   * ```javascript\n   * // The full set of options (here with their default value) is:\n   * const miniSearch = new MiniSearch({\n   *   // idField: field that uniquely identifies a document\n   *   idField: 'id',\n   *\n   *   // extractField: function used to get the value of a field in a document.\n   *   // By default, it assumes the document is a flat object with field names as\n   *   // property keys and field values as string property values, but custom logic\n   *   // can be implemented by setting this option to a custom extractor function.\n   *   extractField: (document, fieldName) => document[fieldName],\n   *\n   *   // tokenize: function used to split fields into individual terms. By\n   *   // default, it is also used to tokenize search queries, unless a specific\n   *   // `tokenize` search option is supplied. When tokenizing an indexed field,\n   *   // the field name is passed as the second argument.\n   *   tokenize: (string, _fieldName) => string.split(SPACE_OR_PUNCTUATION),\n   *\n   *   // processTerm: function used to process each tokenized term before\n   *   // indexing. It can be used for stemming and normalization. Return a falsy\n   *   // value in order to discard a term. By default, it is also used to process\n   *   // search queries, unless a specific `processTerm` option is supplied as a\n   *   // search option. When processing a term from a indexed field, the field\n   *   // name is passed as the second argument.\n   *   processTerm: (term, _fieldName) => term.toLowerCase(),\n   *\n   *   // searchOptions: default search options, see the `search` method for\n   *   // details\n   *   searchOptions: undefined,\n   *\n   *   // fields: document fields to be indexed. Mandatory, but not set by default\n   *   fields: undefined\n   *\n   *   // storeFields: document fields to be stored and returned as part of the\n   *   // search results.\n   *   storeFields: []\n   * })\n   * ```\n   */\n  function MiniSearch(options) {\n    if ((options === null || options === void 0 ? void 0 : options.fields) == null) {\n      throw new Error('MiniSearch: option \"fields\" must be provided');\n    }\n\n    this._options = _assign(_assign(_assign({}, defaultOptions), options), {\n      searchOptions: _assign(_assign({}, defaultSearchOptions), options.searchOptions || {})\n    });\n    this._index = new SearchableMap();\n    this._documentCount = 0;\n    this._documentIds = {};\n    this._fieldIds = {};\n    this._fieldLength = {};\n    this._averageFieldLength = {};\n    this._nextId = 0;\n    this._storedFields = {};\n    this.addFields(this._options.fields);\n  }\n  /**\n   * Adds a document to the index\n   *\n   * @param document  The document to be indexed\n   */\n\n\n  MiniSearch.prototype.add = function (document) {\n    var _this = this;\n\n    var _a = this._options,\n        extractField = _a.extractField,\n        tokenize = _a.tokenize,\n        processTerm = _a.processTerm,\n        fields = _a.fields,\n        idField = _a.idField;\n    var id = extractField(document, idField);\n\n    if (id == null) {\n      throw new Error(\"MiniSearch: document does not have ID field \\\"\".concat(idField, \"\\\"\"));\n    }\n\n    var shortDocumentId = this.addDocumentId(id);\n    this.saveStoredFields(shortDocumentId, document);\n    fields.forEach(function (field) {\n      var fieldValue = extractField(document, field);\n\n      if (fieldValue == null) {\n        return;\n      }\n\n      var tokens = tokenize(fieldValue.toString(), field);\n\n      _this.addFieldLength(shortDocumentId, _this._fieldIds[field], _this.documentCount - 1, tokens.length);\n\n      tokens.forEach(function (term) {\n        var processedTerm = processTerm(term, field);\n\n        if (processedTerm) {\n          _this.addTerm(_this._fieldIds[field], shortDocumentId, processedTerm);\n        }\n      });\n    });\n  };\n  /**\n   * Adds all the given documents to the index\n   *\n   * @param documents  An array of documents to be indexed\n   */\n\n\n  MiniSearch.prototype.addAll = function (documents) {\n    var _this = this;\n\n    documents.forEach(function (document) {\n      return _this.add(document);\n    });\n  };\n  /**\n   * Adds all the given documents to the index asynchronously.\n   *\n   * Returns a promise that resolves (to `undefined`) when the indexing is done.\n   * This method is useful when index many documents, to avoid blocking the main\n   * thread. The indexing is performed asynchronously and in chunks.\n   *\n   * @param documents  An array of documents to be indexed\n   * @param options  Configuration options\n   * @return A promise resolving to `undefined` when the indexing is done\n   */\n\n\n  MiniSearch.prototype.addAllAsync = function (documents, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _a = options.chunkSize,\n        chunkSize = _a === void 0 ? 10 : _a;\n    var acc = {\n      chunk: [],\n      promise: Promise.resolve()\n    };\n\n    var _b = documents.reduce(function (_a, document, i) {\n      var chunk = _a.chunk,\n          promise = _a.promise;\n      chunk.push(document);\n\n      if ((i + 1) % chunkSize === 0) {\n        return {\n          chunk: [],\n          promise: promise.then(function () {\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 0);\n            });\n          }).then(function () {\n            return _this.addAll(chunk);\n          })\n        };\n      } else {\n        return {\n          chunk: chunk,\n          promise: promise\n        };\n      }\n    }, acc),\n        chunk = _b.chunk,\n        promise = _b.promise;\n\n    return promise.then(function () {\n      return _this.addAll(chunk);\n    });\n  };\n  /**\n   * Removes the given document from the index.\n   *\n   * The document to delete must NOT have changed between indexing and deletion,\n   * otherwise the index will be corrupted. Therefore, when reindexing a document\n   * after a change, the correct order of operations is:\n   *\n   *   1. remove old version\n   *   2. apply changes\n   *   3. index new version\n   *\n   * @param document  The document to be removed\n   */\n\n\n  MiniSearch.prototype.remove = function (document) {\n    var _this = this;\n\n    var _a = this._options,\n        tokenize = _a.tokenize,\n        processTerm = _a.processTerm,\n        extractField = _a.extractField,\n        fields = _a.fields,\n        idField = _a.idField;\n    var id = extractField(document, idField);\n\n    if (id == null) {\n      throw new Error(\"MiniSearch: document does not have ID field \\\"\".concat(idField, \"\\\"\"));\n    }\n\n    var _b = __read(Object.entries(this._documentIds).find(function (_a) {\n      var _b = __read(_a, 2);\n\n      _b[0];\n      var longId = _b[1];\n      return id === longId;\n    }) || [], 1),\n        shortDocumentId = _b[0];\n\n    if (shortDocumentId == null) {\n      throw new Error(\"MiniSearch: cannot remove document with ID \".concat(id, \": it is not in the index\"));\n    }\n\n    fields.forEach(function (field) {\n      var fieldValue = extractField(document, field);\n\n      if (fieldValue == null) {\n        return;\n      }\n\n      var tokens = tokenize(fieldValue.toString(), field);\n      tokens.forEach(function (term) {\n        var processedTerm = processTerm(term, field);\n\n        if (processedTerm) {\n          _this.removeTerm(_this._fieldIds[field], shortDocumentId, processedTerm);\n        }\n      });\n\n      _this.removeFieldLength(shortDocumentId, _this._fieldIds[field], _this.documentCount, tokens.length);\n    });\n    delete this._storedFields[shortDocumentId];\n    delete this._documentIds[shortDocumentId];\n    delete this._fieldLength[shortDocumentId];\n    this._documentCount -= 1;\n  };\n  /**\n   * Removes all the given documents from the index. If called with no arguments,\n   * it removes _all_ documents from the index.\n   *\n   * @param documents  The documents to be removed. If this argument is omitted,\n   * all documents are removed. Note that, for removing all documents, it is\n   * more efficient to call this method with no arguments than to pass all\n   * documents.\n   */\n\n\n  MiniSearch.prototype.removeAll = function (documents) {\n    var _this = this;\n\n    if (documents) {\n      documents.forEach(function (document) {\n        return _this.remove(document);\n      });\n    } else if (arguments.length > 0) {\n      throw new Error('Expected documents to be present. Omit the argument to remove all documents.');\n    } else {\n      this._index = new SearchableMap();\n      this._documentCount = 0;\n      this._documentIds = {};\n      this._fieldLength = {};\n      this._averageFieldLength = {};\n      this._storedFields = {};\n      this._nextId = 0;\n    }\n  };\n  /**\n   * Search for documents matching the given search query.\n   *\n   * The result is a list of scored document IDs matching the query, sorted by\n   * descending score, and each including data about which terms were matched and\n   * in which fields.\n   *\n   * ### Basic usage:\n   *\n   * ```javascript\n   * // Search for \"zen art motorcycle\" with default options: terms have to match\n   * // exactly, and individual terms are joined with OR\n   * miniSearch.search('zen art motorcycle')\n   * // => [ { id: 2, score: 2.77258, match: { ... } }, { id: 4, score: 1.38629, match: { ... } } ]\n   * ```\n   *\n   * ### Restrict search to specific fields:\n   *\n   * ```javascript\n   * // Search only in the 'title' field\n   * miniSearch.search('zen', { fields: ['title'] })\n   * ```\n   *\n   * ### Field boosting:\n   *\n   * ```javascript\n   * // Boost a field\n   * miniSearch.search('zen', { boost: { title: 2 } })\n   * ```\n   *\n   * ### Prefix search:\n   *\n   * ```javascript\n   * // Search for \"moto\" with prefix search (it will match documents\n   * // containing terms that start with \"moto\" or \"neuro\")\n   * miniSearch.search('moto neuro', { prefix: true })\n   * ```\n   *\n   * ### Fuzzy search:\n   *\n   * ```javascript\n   * // Search for \"ismael\" with fuzzy search (it will match documents containing\n   * // terms similar to \"ismael\", with a maximum edit distance of 0.2 term.length\n   * // (rounded to nearest integer)\n   * miniSearch.search('ismael', { fuzzy: 0.2 })\n   * ```\n   *\n   * ### Combining strategies:\n   *\n   * ```javascript\n   * // Mix of exact match, prefix search, and fuzzy search\n   * miniSearch.search('ismael mob', {\n   *  prefix: true,\n   *  fuzzy: 0.2\n   * })\n   * ```\n   *\n   * ### Advanced prefix and fuzzy search:\n   *\n   * ```javascript\n   * // Perform fuzzy and prefix search depending on the search term. Here\n   * // performing prefix and fuzzy search only on terms longer than 3 characters\n   * miniSearch.search('ismael mob', {\n   *  prefix: term => term.length > 3\n   *  fuzzy: term => term.length > 3 ? 0.2 : null\n   * })\n   * ```\n   *\n   * ### Combine with AND:\n   *\n   * ```javascript\n   * // Combine search terms with AND (to match only documents that contain both\n   * // \"motorcycle\" and \"art\")\n   * miniSearch.search('motorcycle art', { combineWith: 'AND' })\n   * ```\n   *\n   * ### Combine with AND_NOT:\n   *\n   * There is also an AND_NOT combinator, that finds documents that match the\n   * first term, but do not match any of the other terms. This combinator is\n   * rarely useful with simple queries, and is meant to be used with advanced\n   * query combinations (see later for more details).\n   *\n   * ### Filtering results:\n   *\n   * ```javascript\n   * // Filter only results in the 'fiction' category (assuming that 'category'\n   * // is a stored field)\n   * miniSearch.search('motorcycle art', {\n   *   filter: (result) => result.category === 'fiction'\n   * })\n   * ```\n   *\n   * ### Advanced combination of queries:\n   *\n   * It is possible to combine different subqueries with OR, AND, and AND_NOT,\n   * and even with different search options, by passing a query expression\n   * tree object as the first argument, instead of a string.\n   *\n   * ```javascript\n   * // Search for documents that contain \"zen\" and (\"motorcycle\" or \"archery\")\n   * miniSearch.search({\n   *   combineWith: 'AND',\n   *   queries: [\n   *     'zen',\n   *     {\n   *       combineWith: 'OR',\n   *       queries: ['motorcycle', 'archery']\n   *     }\n   *   ]\n   * })\n   *\n   * // Search for documents that contain (\"apple\" or \"pear\") but not \"juice\" and\n   * // not \"tree\"\n   * miniSearch.search({\n   *   combineWith: 'AND_NOT',\n   *   queries: [\n   *     {\n   *       combineWith: 'OR',\n   *       queries: ['apple', 'pear']\n   *     },\n   *     'juice',\n   *     'tree'\n   *   ]\n   * })\n   * ```\n   *\n   * Each node in the expression tree can be either a string, or an object that\n   * supports all `SearchOptions` fields, plus a `queries` array field for\n   * subqueries.\n   *\n   * Note that, while this can become complicated to do by hand for complex or\n   * deeply nested queries, it provides a formalized expression tree API for\n   * external libraries that implement a parser for custom query languages.\n   *\n   * @param query  Search query\n   * @param options  Search options. Each option, if not given, defaults to the corresponding value of `searchOptions` given to the constructor, or to the library default.\n   */\n\n\n  MiniSearch.prototype.search = function (query, searchOptions) {\n    var _this = this;\n\n    if (searchOptions === void 0) {\n      searchOptions = {};\n    }\n\n    var combinedResults = this.executeQuery(query, searchOptions);\n    return Object.entries(combinedResults).reduce(function (results, _a) {\n      var _b = __read(_a, 2),\n          docId = _b[0],\n          _c = _b[1],\n          score = _c.score,\n          match = _c.match,\n          terms = _c.terms;\n\n      var result = {\n        id: _this._documentIds[docId],\n        terms: uniq(terms),\n        score: score,\n        match: match\n      };\n      Object.assign(result, _this._storedFields[docId]);\n\n      if (searchOptions.filter == null || searchOptions.filter(result)) {\n        results.push(result);\n      }\n\n      return results;\n    }, []).sort(function (_a, _b) {\n      var a = _a.score;\n      var b = _b.score;\n      return a < b ? 1 : -1;\n    });\n  };\n  /**\n   * Provide suggestions for the given search query\n   *\n   * The result is a list of suggested modified search queries, derived from the\n   * given search query, each with a relevance score, sorted by descending score.\n   *\n   * ### Basic usage:\n   *\n   * ```javascript\n   * // Get suggestions for 'neuro':\n   * miniSearch.autoSuggest('neuro')\n   * // => [ { suggestion: 'neuromancer', terms: [ 'neuromancer' ], score: 0.46240 } ]\n   * ```\n   *\n   * ### Multiple words:\n   *\n   * ```javascript\n   * // Get suggestions for 'zen ar':\n   * miniSearch.autoSuggest('zen ar')\n   * // => [\n   * //  { suggestion: 'zen archery art', terms: [ 'zen', 'archery', 'art' ], score: 1.73332 },\n   * //  { suggestion: 'zen art', terms: [ 'zen', 'art' ], score: 1.21313 }\n   * // ]\n   * ```\n   *\n   * ### Fuzzy suggestions:\n   *\n   * ```javascript\n   * // Correct spelling mistakes using fuzzy search:\n   * miniSearch.autoSuggest('neromancer', { fuzzy: 0.2 })\n   * // => [ { suggestion: 'neuromancer', terms: [ 'neuromancer' ], score: 1.03998 } ]\n   * ```\n   *\n   * ### Filtering:\n   *\n   * ```javascript\n   * // Get suggestions for 'zen ar', but only within the 'fiction' category\n   * // (assuming that 'category' is a stored field):\n   * miniSearch.autoSuggest('zen ar', {\n   *   filter: (result) => result.category === 'fiction'\n   * })\n   * // => [\n   * //  { suggestion: 'zen archery art', terms: [ 'zen', 'archery', 'art' ], score: 1.73332 },\n   * //  { suggestion: 'zen art', terms: [ 'zen', 'art' ], score: 1.21313 }\n   * // ]\n   * ```\n   *\n   * @param queryString  Query string to be expanded into suggestions\n   * @param options  Search options. The supported options and default values\n   * are the same as for the `search` method, except that by default prefix\n   * search is performed on the last term in the query.\n   * @return  A sorted array of suggestions sorted by relevance score.\n   */\n\n\n  MiniSearch.prototype.autoSuggest = function (queryString, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = _assign(_assign({}, defaultAutoSuggestOptions), options);\n    var suggestions = this.search(queryString, options).reduce(function (suggestions, _a) {\n      var score = _a.score,\n          terms = _a.terms;\n      var phrase = terms.join(' ');\n\n      if (suggestions[phrase] == null) {\n        suggestions[phrase] = {\n          score: score,\n          terms: terms,\n          count: 1\n        };\n      } else {\n        suggestions[phrase].score += score;\n        suggestions[phrase].count += 1;\n      }\n\n      return suggestions;\n    }, {});\n    return Object.entries(suggestions).map(function (_a) {\n      var _b = __read(_a, 2),\n          suggestion = _b[0],\n          _c = _b[1],\n          score = _c.score,\n          terms = _c.terms,\n          count = _c.count;\n\n      return {\n        suggestion: suggestion,\n        terms: terms,\n        score: score / count\n      };\n    }).sort(function (_a, _b) {\n      var a = _a.score;\n      var b = _b.score;\n      return a < b ? 1 : -1;\n    });\n  };\n\n  Object.defineProperty(MiniSearch.prototype, \"documentCount\", {\n    /**\n     * Number of documents in the index\n     */\n    get: function get() {\n      return this._documentCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Deserializes a JSON index (serialized with `miniSearch.toJSON()`) and\n   * instantiates a MiniSearch instance. It should be given the same options\n   * originally used when serializing the index.\n   *\n   * ### Usage:\n   *\n   * ```javascript\n   * // If the index was serialized with:\n   * let miniSearch = new MiniSearch({ fields: ['title', 'text'] })\n   * miniSearch.addAll(documents)\n   *\n   * const json = JSON.stringify(miniSearch)\n   * // It can later be deserialized like this:\n   * miniSearch = MiniSearch.loadJSON(json, { fields: ['title', 'text'] })\n   * ```\n   *\n   * @param json  JSON-serialized index\n   * @param options  configuration options, same as the constructor\n   * @return An instance of MiniSearch deserialized from the given JSON.\n   */\n\n  MiniSearch.loadJSON = function (json, options) {\n    if (options == null) {\n      throw new Error('MiniSearch: loadJSON should be given the same options used when serializing the index');\n    }\n\n    return MiniSearch.loadJS(JSON.parse(json), options);\n  };\n  /**\n   * Returns the default value of an option. It will throw an error if no option\n   * with the given name exists.\n   *\n   * @param optionName  Name of the option\n   * @return The default value of the given option\n   *\n   * ### Usage:\n   *\n   * ```javascript\n   * // Get default tokenizer\n   * MiniSearch.getDefault('tokenize')\n   *\n   * // Get default term processor\n   * MiniSearch.getDefault('processTerm')\n   *\n   * // Unknown options will throw an error\n   * MiniSearch.getDefault('notExisting')\n   * // => throws 'MiniSearch: unknown option \"notExisting\"'\n   * ```\n   */\n\n\n  MiniSearch.getDefault = function (optionName) {\n    if (defaultOptions.hasOwnProperty(optionName)) {\n      return getOwnProperty(defaultOptions, optionName);\n    } else {\n      throw new Error(\"MiniSearch: unknown option \\\"\".concat(optionName, \"\\\"\"));\n    }\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.loadJS = function (js, options) {\n    var index = js.index,\n        documentCount = js.documentCount,\n        nextId = js.nextId,\n        documentIds = js.documentIds,\n        fieldIds = js.fieldIds,\n        fieldLength = js.fieldLength,\n        averageFieldLength = js.averageFieldLength,\n        storedFields = js.storedFields;\n    var miniSearch = new MiniSearch(options);\n    miniSearch._index = new SearchableMap(index._tree, index._prefix);\n    miniSearch._documentCount = documentCount;\n    miniSearch._nextId = nextId;\n    miniSearch._documentIds = documentIds;\n    miniSearch._fieldIds = fieldIds;\n    miniSearch._fieldLength = fieldLength;\n    miniSearch._averageFieldLength = averageFieldLength;\n    miniSearch._fieldIds = fieldIds;\n    miniSearch._storedFields = storedFields || {};\n    return miniSearch;\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.executeQuery = function (query, searchOptions) {\n    var _this = this;\n\n    if (searchOptions === void 0) {\n      searchOptions = {};\n    }\n\n    if (typeof query === 'string') {\n      return this.executeSearch(query, searchOptions);\n    } else {\n      var results = query.queries.map(function (subquery) {\n        var options = _assign(_assign(_assign({}, searchOptions), query), {\n          queries: undefined\n        });\n\n        return _this.executeQuery(subquery, options);\n      });\n      return this.combineResults(results, query.combineWith);\n    }\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.executeSearch = function (queryString, searchOptions) {\n    var _this = this;\n\n    if (searchOptions === void 0) {\n      searchOptions = {};\n    }\n\n    var _a = this._options,\n        tokenize = _a.tokenize,\n        processTerm = _a.processTerm,\n        globalSearchOptions = _a.searchOptions;\n\n    var options = _assign(_assign({\n      tokenize: tokenize,\n      processTerm: processTerm\n    }, globalSearchOptions), searchOptions);\n\n    var searchTokenize = options.tokenize,\n        searchProcessTerm = options.processTerm;\n    var terms = searchTokenize(queryString).map(function (term) {\n      return searchProcessTerm(term);\n    }).filter(function (term) {\n      return !!term;\n    });\n    var queries = terms.map(termToQuerySpec(options));\n    var results = queries.map(function (query) {\n      return _this.executeQuerySpec(query, options);\n    });\n    return this.combineResults(results, options.combineWith);\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.executeQuerySpec = function (query, searchOptions) {\n    var _this = this;\n\n    var options = _assign(_assign({}, this._options.searchOptions), searchOptions);\n\n    var boosts = (options.fields || this._options.fields).reduce(function (boosts, field) {\n      var _a;\n\n      return _assign(_assign({}, boosts), (_a = {}, _a[field] = getOwnProperty(boosts, field) || 1, _a));\n    }, options.boost || {});\n\n    var boostDocument = options.boostDocument,\n        weights = options.weights;\n\n    var _a = _assign(_assign({}, defaultSearchOptions.weights), weights),\n        fuzzyWeight = _a.fuzzy,\n        prefixWeight = _a.prefix;\n\n    var exactMatch = this.termResults(query.term, boosts, boostDocument, this._index.get(query.term));\n\n    if (!query.fuzzy && !query.prefix) {\n      return exactMatch;\n    }\n\n    var results = [exactMatch];\n\n    if (query.prefix) {\n      this._index.atPrefix(query.term).forEach(function (term, data) {\n        var weightedDistance = 0.3 * (term.length - query.term.length) / term.length;\n        results.push(_this.termResults(term, boosts, boostDocument, data, prefixWeight, weightedDistance));\n      });\n    }\n\n    if (query.fuzzy) {\n      var fuzzy = query.fuzzy === true ? 0.2 : query.fuzzy;\n      var maxDistance = fuzzy < 1 ? Math.round(query.term.length * fuzzy) : fuzzy;\n      Object.entries(this._index.fuzzyGet(query.term, maxDistance)).forEach(function (_a) {\n        var _b = __read(_a, 2),\n            term = _b[0],\n            _c = __read(_b[1], 2),\n            data = _c[0],\n            distance = _c[1];\n\n        var weightedDistance = distance / term.length;\n        results.push(_this.termResults(term, boosts, boostDocument, data, fuzzyWeight, weightedDistance));\n      });\n    }\n\n    return results.reduce(combinators[OR]);\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.combineResults = function (results, combineWith) {\n    if (combineWith === void 0) {\n      combineWith = OR;\n    }\n\n    if (results.length === 0) {\n      return {};\n    }\n\n    var operator = combineWith.toLowerCase();\n    return results.reduce(combinators[operator]) || {};\n  };\n  /**\n   * Allows serialization of the index to JSON, to possibly store it and later\n   * deserialize it with `MiniSearch.loadJSON`.\n   *\n   * Normally one does not directly call this method, but rather call the\n   * standard JavaScript `JSON.stringify()` passing the `MiniSearch` instance,\n   * and JavaScript will internally call this method. Upon deserialization, one\n   * must pass to `loadJSON` the same options used to create the original\n   * instance that was serialized.\n   *\n   * ### Usage:\n   *\n   * ```javascript\n   * // Serialize the index:\n   * let miniSearch = new MiniSearch({ fields: ['title', 'text'] })\n   * miniSearch.addAll(documents)\n   * const json = JSON.stringify(miniSearch)\n   *\n   * // Later, to deserialize it:\n   * miniSearch = MiniSearch.loadJSON(json, { fields: ['title', 'text'] })\n   * ```\n   *\n   * @return A plain-object serializeable representation of the search index.\n   */\n\n\n  MiniSearch.prototype.toJSON = function () {\n    return {\n      index: this._index,\n      documentCount: this._documentCount,\n      nextId: this._nextId,\n      documentIds: this._documentIds,\n      fieldIds: this._fieldIds,\n      fieldLength: this._fieldLength,\n      averageFieldLength: this._averageFieldLength,\n      storedFields: this._storedFields\n    };\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.termResults = function (term, boosts, boostDocument, indexData, weight, editDistance) {\n    var _this = this;\n\n    if (editDistance === void 0) {\n      editDistance = 0;\n    }\n\n    if (indexData == null) {\n      return {};\n    }\n\n    return Object.entries(boosts).reduce(function (results, _a) {\n      var _b = __read(_a, 2),\n          field = _b[0],\n          boost = _b[1];\n\n      var fieldId = _this._fieldIds[field];\n\n      var _c = indexData[fieldId] || {\n        ds: {}\n      },\n          df = _c.df,\n          ds = _c.ds;\n\n      Object.entries(ds).forEach(function (_a) {\n        var _b = __read(_a, 2),\n            documentId = _b[0],\n            tf = _b[1];\n\n        var docBoost = boostDocument ? boostDocument(_this._documentIds[documentId], term) : 1;\n\n        if (!docBoost) {\n          return;\n        }\n\n        var normalizedLength = _this._fieldLength[documentId][fieldId] / _this._averageFieldLength[fieldId];\n        results[documentId] = results[documentId] || {\n          score: 0,\n          match: {},\n          terms: []\n        };\n        results[documentId].terms.push(term);\n        results[documentId].match[term] = getOwnProperty(results[documentId].match, term) || [];\n        results[documentId].score += docBoost * score(tf, df, _this._documentCount, normalizedLength, boost, editDistance);\n        results[documentId].match[term].push(field);\n      });\n      return results;\n    }, {});\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.addTerm = function (fieldId, documentId, term) {\n    this._index.update(term, function (indexData) {\n      var _a;\n\n      indexData = indexData || {};\n      var fieldIndex = indexData[fieldId] || {\n        df: 0,\n        ds: {}\n      };\n\n      if (fieldIndex.ds[documentId] == null) {\n        fieldIndex.df += 1;\n      }\n\n      fieldIndex.ds[documentId] = (fieldIndex.ds[documentId] || 0) + 1;\n      return _assign(_assign({}, indexData), (_a = {}, _a[fieldId] = fieldIndex, _a));\n    });\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.removeTerm = function (fieldId, documentId, term) {\n    var _this = this;\n\n    if (!this._index.has(term)) {\n      this.warnDocumentChanged(documentId, fieldId, term);\n      return;\n    }\n\n    this._index.update(term, function (indexData) {\n      var _a;\n\n      var fieldIndex = indexData[fieldId];\n\n      if (fieldIndex == null || fieldIndex.ds[documentId] == null) {\n        _this.warnDocumentChanged(documentId, fieldId, term);\n\n        return indexData;\n      }\n\n      if (fieldIndex.ds[documentId] <= 1) {\n        if (fieldIndex.df <= 1) {\n          delete indexData[fieldId];\n          return indexData;\n        }\n\n        fieldIndex.df -= 1;\n      }\n\n      if (fieldIndex.ds[documentId] <= 1) {\n        delete fieldIndex.ds[documentId];\n        return indexData;\n      }\n\n      fieldIndex.ds[documentId] -= 1;\n      return _assign(_assign({}, indexData), (_a = {}, _a[fieldId] = fieldIndex, _a));\n    });\n\n    if (Object.keys(this._index.get(term)).length === 0) {\n      this._index.delete(term);\n    }\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.warnDocumentChanged = function (shortDocumentId, fieldId, term) {\n    if (console == null || console.warn == null) {\n      return;\n    }\n\n    var fieldName = Object.entries(this._fieldIds).find(function (_a) {\n      var _b = __read(_a, 2);\n\n      _b[0];\n      var id = _b[1];\n      return id === fieldId;\n    })[0];\n    console.warn(\"MiniSearch: document with ID \".concat(this._documentIds[shortDocumentId], \" has changed before removal: term \\\"\").concat(term, \"\\\" was not present in field \\\"\").concat(fieldName, \"\\\". Removing a document after it has changed can corrupt the index!\"));\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.addDocumentId = function (documentId) {\n    var shortDocumentId = this._nextId.toString(36);\n\n    this._documentIds[shortDocumentId] = documentId;\n    this._documentCount += 1;\n    this._nextId += 1;\n    return shortDocumentId;\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.addFields = function (fields) {\n    var _this = this;\n\n    fields.forEach(function (field, i) {\n      _this._fieldIds[field] = i;\n    });\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.addFieldLength = function (documentId, fieldId, count, length) {\n    this._averageFieldLength[fieldId] = this._averageFieldLength[fieldId] || 0;\n    var totalLength = this._averageFieldLength[fieldId] * count + length;\n    this._fieldLength[documentId] = this._fieldLength[documentId] || {};\n    this._fieldLength[documentId][fieldId] = length;\n    this._averageFieldLength[fieldId] = totalLength / (count + 1);\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.removeFieldLength = function (documentId, fieldId, count, length) {\n    var totalLength = this._averageFieldLength[fieldId] * count - length;\n    this._averageFieldLength[fieldId] = totalLength / (count - 1);\n  };\n  /**\n   * @ignore\n   */\n\n\n  MiniSearch.prototype.saveStoredFields = function (documentId, doc) {\n    var _this = this;\n\n    var _a = this._options,\n        storeFields = _a.storeFields,\n        extractField = _a.extractField;\n\n    if (storeFields == null || storeFields.length === 0) {\n      return;\n    }\n\n    this._storedFields[documentId] = this._storedFields[documentId] || {};\n    storeFields.forEach(function (fieldName) {\n      var fieldValue = extractField(doc, fieldName);\n\n      if (fieldValue === undefined) {\n        return;\n      }\n\n      _this._storedFields[documentId][fieldName] = fieldValue;\n    });\n  };\n\n  return MiniSearch;\n}();\n\nvar getOwnProperty = function getOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property) ? object[property] : undefined;\n};\n\nvar combinators = (_a = {}, _a[OR] = function (a, b) {\n  return Object.entries(b).reduce(function (combined, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        documentId = _c[0],\n        _d = _c[1],\n        score = _d.score,\n        match = _d.match,\n        terms = _d.terms;\n\n    if (combined[documentId] == null) {\n      combined[documentId] = {\n        score: score,\n        match: match,\n        terms: terms\n      };\n    } else {\n      combined[documentId].score += score;\n      combined[documentId].score *= 1.5;\n\n      (_b = combined[documentId].terms).push.apply(_b, __spreadArray([], __read(terms), false));\n\n      Object.assign(combined[documentId].match, match);\n    }\n\n    return combined;\n  }, a || {});\n}, _a[AND] = function (a, b) {\n  return Object.entries(b).reduce(function (combined, _a) {\n    var _b = __read(_a, 2),\n        documentId = _b[0],\n        _c = _b[1],\n        score = _c.score,\n        match = _c.match,\n        terms = _c.terms;\n\n    if (a[documentId] === undefined) {\n      return combined;\n    }\n\n    combined[documentId] = combined[documentId] || {};\n    combined[documentId].score = a[documentId].score + score;\n    combined[documentId].match = _assign(_assign({}, a[documentId].match), match);\n    combined[documentId].terms = __spreadArray(__spreadArray([], __read(a[documentId].terms), false), __read(terms), false);\n    return combined;\n  }, {});\n}, _a[AND_NOT] = function (a, b) {\n  return Object.entries(b).reduce(function (combined, _a) {\n    var _b = __read(_a, 2),\n        documentId = _b[0],\n        _c = _b[1];\n\n    _c.score;\n    _c.match;\n    _c.terms;\n    delete combined[documentId];\n    return combined;\n  }, a || {});\n}, _a);\n\nvar tfIdf = function tfIdf(tf, df, n) {\n  return tf * Math.log(n / df);\n};\n\nvar score = function score(termFrequency, documentFrequency, documentCount, normalizedLength, boost, editDistance) {\n  var weight = boost / (1 + 0.333 * boost * editDistance);\n  return weight * tfIdf(termFrequency, documentFrequency, documentCount) / normalizedLength;\n};\n\nvar termToQuerySpec = function termToQuerySpec(options) {\n  return function (term, i, terms) {\n    var fuzzy = typeof options.fuzzy === 'function' ? options.fuzzy(term, i, terms) : options.fuzzy || false;\n    var prefix = typeof options.prefix === 'function' ? options.prefix(term, i, terms) : options.prefix === true;\n    return {\n      term: term,\n      fuzzy: fuzzy,\n      prefix: prefix\n    };\n  };\n};\n\nvar uniq = function uniq(array) {\n  return array.filter(function (element, i, array) {\n    return array.indexOf(element) === i;\n  });\n};\n\nvar defaultOptions = {\n  idField: 'id',\n  extractField: function extractField(document, fieldName) {\n    return document[fieldName];\n  },\n  tokenize: function tokenize(text, fieldName) {\n    return text.split(SPACE_OR_PUNCTUATION);\n  },\n  processTerm: function processTerm(term, fieldName) {\n    return term.toLowerCase();\n  },\n  fields: undefined,\n  searchOptions: undefined,\n  storeFields: []\n};\nvar defaultSearchOptions = {\n  combineWith: OR,\n  prefix: false,\n  fuzzy: false,\n  boost: {},\n  weights: {\n    fuzzy: 0.9,\n    prefix: 0.75\n  }\n};\nvar defaultAutoSuggestOptions = {\n  prefix: function prefix(term, i, terms) {\n    return i === terms.length - 1;\n  }\n}; // This regular expression matches any Unicode space or punctuation character\n// Adapted from https://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5Cp%7BZ%7D%5Cp%7BP%7D&abb=on&c=on&esc=on\n\nvar SPACE_OR_PUNCTUATION = /[\\n\\r -#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA0\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u1680\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2000-\\u200A\\u2010-\\u2029\\u202F-\\u2043\\u2045-\\u2051\\u2053-\\u205F\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u3000-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]+/;\nexport { MiniSearch as default };","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('minisearch'), require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'minisearch', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['react-minisearch'] = {}, global.MiniSearch, global.React));\n})(this, function (exports, MiniSearch, React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var MiniSearch__default = /*#__PURE__*/_interopDefaultLegacy(MiniSearch);\n\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\n\n\n  var _assign = function __assign() {\n    _assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) {\n          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n      }\n\n      return t;\n    };\n\n    return _assign.apply(this, arguments);\n  };\n\n  function useMiniSearch(documents, options) {\n    var miniSearchRef = React.useRef(new MiniSearch__default['default'](options));\n\n    var _a = React.useState(null),\n        rawResults = _a[0],\n        setRawResults = _a[1];\n\n    var _b = React.useState(null),\n        searchResults = _b[0],\n        setSearchResults = _b[1];\n\n    var _c = React.useState(null),\n        suggestions = _c[0],\n        setSuggestions = _c[1];\n\n    var documentByIdRef = React.useRef({});\n\n    var _d = React.useState(false),\n        isIndexing = _d[0],\n        setIsIndexing = _d[1];\n\n    var idField = options.idField || MiniSearch__default['default'].getDefault('idField');\n    var extractField = options.extractField || MiniSearch__default['default'].getDefault('extractField');\n\n    var gatherById = function gatherById(documents) {\n      return documents.reduce(function (byId, doc) {\n        var id = extractField(doc, idField);\n        byId[id] = doc;\n        return byId;\n      }, {});\n    };\n\n    var miniSearch = miniSearchRef.current;\n    var documentById = documentByIdRef.current;\n\n    var search = function search(query, searchOptions) {\n      var results = miniSearch.search(query, searchOptions);\n      var searchResults = results.map(function (_a) {\n        var id = _a.id;\n        return documentById[id];\n      });\n      setSearchResults(searchResults);\n      setRawResults(results);\n    };\n\n    var autoSuggest = function autoSuggest(query, searchOptions) {\n      var suggestions = miniSearch.autoSuggest(query, searchOptions);\n      setSuggestions(suggestions);\n    };\n\n    var add = function add(document) {\n      documentByIdRef.current[extractField(document, idField)] = document;\n      miniSearch.add(document);\n    };\n\n    var addAll = function addAll(documents) {\n      var byId = gatherById(documents);\n      documentByIdRef.current = Object.assign(documentById, byId);\n      miniSearch.addAll(documents);\n    };\n\n    var addAllAsync = function addAllAsync(documents, options) {\n      var byId = gatherById(documents);\n      documentByIdRef.current = Object.assign(documentById, byId);\n      setIsIndexing(true);\n      return miniSearch.addAllAsync(documents, options || {}).then(function () {\n        setIsIndexing(false);\n      });\n    };\n\n    var remove = function remove(document) {\n      miniSearch.remove(document);\n      documentByIdRef.current = removeFromMap(documentById, extractField(document, idField));\n    };\n\n    var removeById = function removeById(id) {\n      var document = documentById[id];\n\n      if (document == null) {\n        throw new Error(\"react-minisearch: document with id \" + id + \" does not exist in the index\");\n      }\n\n      miniSearch.remove(document);\n      documentByIdRef.current = removeFromMap(documentById, id);\n    };\n\n    var removeAll = function removeAll(documents) {\n      if (arguments.length === 0) {\n        miniSearch.removeAll();\n        documentByIdRef.current = {};\n      } else {\n        miniSearch.removeAll(documents);\n        var idsToRemove = documents.map(function (doc) {\n          return extractField(doc, idField);\n        });\n        documentByIdRef.current = removeManyFromMap(documentById, idsToRemove);\n      }\n    };\n\n    var clearSearch = function clearSearch() {\n      setSearchResults(null);\n      setRawResults(null);\n    };\n\n    var clearSuggestions = function clearSuggestions() {\n      setSuggestions(null);\n    };\n\n    useOnMount(function () {\n      addAll(documents);\n    });\n    return {\n      search: search,\n      searchResults: searchResults,\n      rawResults: rawResults,\n      autoSuggest: autoSuggest,\n      suggestions: suggestions,\n      add: add,\n      addAll: addAll,\n      addAllAsync: addAllAsync,\n      remove: remove,\n      removeById: removeById,\n      removeAll: removeAll,\n      isIndexing: isIndexing,\n      clearSearch: clearSearch,\n      clearSuggestions: clearSuggestions,\n      miniSearch: miniSearch\n    };\n  }\n\n  function removeFromMap(map, keyToRemove) {\n    delete map[keyToRemove];\n    return map;\n  }\n\n  function removeManyFromMap(map, keysToRemove) {\n    keysToRemove.forEach(function (keyToRemove) {\n      delete map[keyToRemove];\n    });\n    return map;\n  }\n\n  function getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n  }\n\n  function useOnMount(callback) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return React.useEffect(callback, []);\n  }\n\n  function withMiniSearch(documents, options, Component) {\n    var WithMiniSearch = function WithMiniSearch(props) {\n      var miniSearchProps = useMiniSearch(documents, options);\n      return React__default['default'].createElement(Component, _assign({}, miniSearchProps, props));\n    };\n\n    WithMiniSearch.displayName = \"WithMiniSearch(\" + getDisplayName(Component) + \")\";\n    return WithMiniSearch;\n  }\n\n  var WithMiniSearch = function WithMiniSearch(_a) {\n    var documents = _a.documents,\n        options = _a.options,\n        children = _a.children;\n    var miniSearchProps = useMiniSearch(documents, options);\n    return children(miniSearchProps);\n  };\n\n  exports.WithMiniSearch = WithMiniSearch;\n  exports.useMiniSearch = useMiniSearch;\n  exports.withMiniSearch = withMiniSearch;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    List,\n    ListItem,\n    TextField,\n} from \"@mui/material\"\nimport AppContext from \"../AppContext\"\nimport React, { useContext, useMemo, useState } from \"react\"\nimport { useId } from \"react-use-id-hook\"\nimport servers, {\n    addServiceProvider,\n    ServiceProviderDefinition,\n} from \"../../../jacdac-ts/src/servers/servers\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\nimport { delay, uniqueMap } from \"../../../jacdac-ts/src/jdom/utils\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport HostedSimulatorsContext, {\n    HostedSimulatorDefinition,\n    hostedSimulatorDefinitions,\n} from \"../HostedSimulatorsContext\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport { useMiniSearch } from \"react-minisearch\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport FilterListIcon from \"@mui/icons-material/FilterList\"\nimport DialogTitleWithClose from \"../ui/DialogTitleWithClose\"\n\nconst miniSearchOptions = {\n    fields: [\"name\", \"description\"],\n    searchOptions: {\n        fuzzy: true,\n        prefix: true,\n        boost: { name: 5, description: 1 },\n    },\n}\nexport default function StartSimulatorDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const { open, onClose } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { enqueueSnackbar } = useContext(AppContext)\n    const { addHostedSimulator } = useContext(HostedSimulatorsContext)\n    const { trackEvent } = useAnalytics()\n    const { mobile } = useMediaQueries()\n    const searchId = useId()\n    const deviceHostDialogId = useId()\n    const deviceHostLabelId = useId()\n    const [showFilters, setShowFilters] = useState(false)\n\n    const documents: {\n        id: string\n        name: string\n        description: string\n        server?: ServiceProviderDefinition\n        simulator?: HostedSimulatorDefinition\n    }[] = useMemo(\n        () => [\n            ...servers().map(server => ({\n                id: `server:${server.name}`,\n                name: server.name,\n                description: server.serviceClasses\n                    .map(serviceSpecificationFromClassIdentifier)\n                    .map(\n                        spec =>\n                            `${spec.name} ${spec.shortName} ${spec.notes[\"short\"]}`\n                    )\n                    .join(\", \"),\n                server,\n            })),\n            ...hostedSimulatorDefinitions().map(simulator => ({\n                id: `sim:${simulator.name}`,\n                name: simulator.name,\n                description: simulator.url,\n                simulator,\n            })),\n        ],\n        []\n    )\n    const { search, clearSearch, searchResults } = useMiniSearch(\n        documents,\n        miniSearchOptions\n    )\n    const handleSearchChange = event => {\n        search(event.target.value)\n    }\n\n    const handleProviderDefinition =\n        (provider: ServiceProviderDefinition) => () => {\n            trackEvent(\"dashboard.server.start\", { server: provider.name })\n            addServiceProvider(bus, provider)\n            onClose()\n        }\n    const handleHostedSimulator =\n        (simulator: HostedSimulatorDefinition) => () => {\n            trackEvent(\"dashboard.sim.start\", { simulator: simulator.name })\n            addHostedSimulator(simulator)\n            onClose()\n        }\n    const handleCancel = () => onClose()\n    const handleAddAll = async () => {\n        const allProviderDefinitions = uniqueMap(\n            servers().filter(hd => hd.serviceClasses.length === 1),\n            hd => hd.serviceClasses[0].toString(),\n            h => h\n        )\n        enqueueSnackbar(\n            `starting ${allProviderDefinitions.length} simulators...`,\n            `info`\n        )\n        onClose()\n        for (const provider of allProviderDefinitions) {\n            await delay(100)\n            addServiceProvider(bus, provider)\n        }\n    }\n    const handleShowFilters = () => {\n        if (showFilters) {\n            clearSearch()\n            setShowFilters(false)\n        }\n        setShowFilters(!showFilters)\n    }\n\n    return (\n        <Dialog\n            id={deviceHostDialogId}\n            aria-labelledby={deviceHostLabelId}\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n            fullScreen={mobile}\n        >\n            <DialogTitleWithClose onClose={onClose} id={deviceHostLabelId}>\n                Start a simulator\n                <IconButtonWithTooltip\n                    title={showFilters ? \"show filters\" : \"hide filters\"}\n                    onClick={handleShowFilters}\n                >\n                    <FilterListIcon />\n                </IconButtonWithTooltip>\n            </DialogTitleWithClose>\n            <DialogContent>\n                {showFilters && (\n                    <TextField\n                        id={searchId}\n                        label=\"Filter\"\n                        type=\"search\"\n                        fullWidth={true}\n                        onChange={handleSearchChange}\n                    />\n                )}\n                <List>\n                    {(searchResults || documents).map(\n                        ({ id, name, server, simulator }) => (\n                            <ListItem\n                                button\n                                key={id}\n                                onClick={\n                                    server\n                                        ? handleProviderDefinition(server)\n                                        : handleHostedSimulator(simulator)\n                                }\n                            >\n                                {name}\n                            </ListItem>\n                        )\n                    )}\n                </List>\n            </DialogContent>\n            {Flags.diagnostics && (\n                <DialogActions>\n                    {Flags.diagnostics && (\n                        <Button variant=\"outlined\" onClick={handleAddAll}>\n                            start all simulators\n                        </Button>\n                    )}\n                </DialogActions>\n            )}\n        </Dialog>\n    )\n}\n"],"names":["Button","Dialog","DialogActions","DialogContent","List","ListItem","TextField","AppContext","React","useContext","useMemo","useState","useId","servers","addServiceProvider","Flags","delay","uniqueMap","JacdacContext","useMediaQueries","HostedSimulatorsContext","hostedSimulatorDefinitions","useAnalytics","useMiniSearch","serviceSpecificationFromClassIdentifier","IconButtonWithTooltip","FilterListIcon","DialogTitleWithClose","miniSearchOptions","fields","searchOptions","fuzzy","prefix","boost","name","description","StartSimulatorDialog","props","open","onClose","bus","enqueueSnackbar","addHostedSimulator","trackEvent","mobile","searchId","deviceHostDialogId","deviceHostLabelId","showFilters","setShowFilters","documents","map","server","id","serviceClasses","spec","shortName","notes","join","simulator","url","search","clearSearch","searchResults","handleSearchChange","event","target","value","handleProviderDefinition","provider","handleHostedSimulator","handleCancel","handleAddAll","allProviderDefinitions","filter","hd","length","toString","h","handleShowFilters","diagnostics"],"sourceRoot":""}