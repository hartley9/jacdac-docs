{"version":3,"file":"component---src-pages-tools-hid-events-tsx-23570f92f605c503665b.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@material-ui/icons/Delete.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/clients/settingsclient.ts","webpack://jacdac-docs/./src/components/alert/ConnectAlert.tsx","webpack://jacdac-docs/./src/components/hooks/useServices.ts","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx","webpack://jacdac-docs/./src/components/ui/KeyboardKeyInput.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts","webpack://jacdac-docs/./src/components/useServiceClient.ts","webpack://jacdac-docs/./src/pages/tools/hid-events.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import { CHANGE, SettingsCmd } from \"../constants\"\nimport { jdpack, jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport { InPipeReader } from \"../pipes\"\nimport JDService from \"../service\"\nimport { JDServiceClient } from \"../serviceclient\"\nimport { bufferToString, stringToBuffer } from \"../utils\"\n\n/**\n * A settings service client implementation.\n * @category Clients\n */\nexport class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear)\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.ListKeys),\n            true\n        )\n        const { output } = await inp.readAll()\n        const keys = output.map(pkt => pkt.stringData)\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string; value?: Uint8Array }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.List),\n            true\n        )\n        const { output } = await inp.readAll()\n        return output\n            .map(pkt => {\n                const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n                return key && { key, value }\n            })\n            .filter(kv => !!kv)\n    }\n\n    async setValue(key: string, value: Uint8Array) {\n        key = key.trim()\n        if (value === undefined) {\n            await this.deleteValue(key)\n        } else {\n            const pkt = Packet.from(\n                SettingsCmd.Set,\n                jdpack(\"z b\", [key, value])\n            )\n            await this.service.sendPacketAsync(pkt)\n            this.emit(CHANGE)\n        }\n    }\n\n    async setStringValue(key: string, value: string) {\n        await this.setValue(key, value ? stringToBuffer(value) : undefined)\n    }\n\n    async getValue(key: string): Promise<Uint8Array> {\n        if (!key) return undefined\n\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]))\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt)\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\")\n        if (key !== rkey) {\n            console.error(\n                `device returned different key, got \"${rkey}\", expected \"${key}\"`\n            )\n            return undefined\n        }\n        return value\n    }\n\n    async getStringValue(key: string) {\n        const value = await this.getValue(key)\n        return value && bufferToString(value)\n    }\n\n    async deleteValue(key: string) {\n        if (!key) return\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]))\n        await this.service.sendPacketAsync(pkt)\n\n        this.emit(CHANGE)\n    }\n}\nexport default SettingsClient\n","// tslint:disable-next-line: no-submodule-imports\nimport { Box } from \"@material-ui/core\"\n// tslint:disable-next-line: no-submodule-imports\nimport Alert from \"../ui/Alert\"\nimport React, { useContext } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../jacdac-ts/src/jdom/spec\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport { NoSsr } from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\nimport ConnectButtons from \"../buttons/ConnectButtons\"\n\nfunction NoSsrConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    const { serviceClass, closeable } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const devices = useChange(bus, b =>\n        b.devices({ serviceClass, ignoreInfrastructure: true })\n    )\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n\n    // don't show if no transport, some devices\n    if (!transports.length || devices?.length) return null\n\n    return (\n        <Box displayPrint=\"none\">\n            <Alert severity=\"info\" closeable={closeable}>\n                {!spec && <span>Did you connect your device?</span>}\n                {spec && <span>Did you connect a {spec.name} device?</span>}\n                <Box component=\"span\" ml={2}>\n                    <ConnectButtons full=\"always\" transparent={true} />\n                </Box>\n            </Alert>\n        </Box>\n    )\n}\n\nexport default function ConnectAlert(props: {\n    serviceClass?: number\n    closeable?: boolean\n}) {\n    return (\n        <NoSsr>\n            <NoSsrConnectAlert {...props} />\n        </NoSsr>\n    )\n}\n","import { useContext } from \"react\"\nimport DeviceFilter from \"../../../jacdac-ts/src/jdom/filters/devicefilter\"\nimport ServiceFilter from \"../../../jacdac-ts/src/jdom/filters/servicefilter\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\n\nexport default function useServices(options?: ServiceFilter & DeviceFilter) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const services = useChange(bus, _ => _?.services(options) || [], [\n        JSON.stringify(options),\n    ])\n    return services\n}\n","import {\n    Box,\n    Chip,\n    createStyles,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        hr: {\n            background: theme.palette.text.disabled,\n            marginBottom: \"unset\",\n        },\n        start: {\n            width: theme.spacing(2),\n        },\n    })\n)\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n    const classes = useStyles()\n    return (\n        <Grid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core\"\nimport { HidKeyboardModifiers } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport Keyboard from \"react-simple-keyboard\"\nimport \"react-simple-keyboard/build/css/index.css\"\nimport DarkModeContext from \"./DarkModeContext\"\nimport { useId } from \"react-use-id-hook\"\nimport {\n    modifierCodes,\n    renderKeyboardKey,\n    selectors,\n} from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        capture: {\n            cursor: \"pointer\",\n            \"&:hover\": {\n                borderColor: theme.palette.primary.main,\n            },\n            \"&:focus\": {\n                borderColor: theme.palette.action.active,\n            },\n        },\n        darkKeyboard: {\n            backgroundColor: \"#333 !important\",\n            borderColor: \"#777 !important\",\n            color: \"white !important\",\n            \"& .hg-button\": {\n                background: \"rgba(0, 0, 0, 0.5) !important\",\n                color: \"white\",\n            },\n            \"& .hg-button.buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n        keyboard: {\n            \"& .buttonSelected\": {\n                background: `${theme.palette.primary.dark} !important`,\n                color: \"white !important\",\n            },\n        },\n    })\n)\n\nexport default function KeyboardKeyInput(props: {\n    initialSelector?: number\n    initialModifiers?: HidKeyboardModifiers\n    selector?: number\n    modifiers?: HidKeyboardModifiers\n    onChange: (newSelector: number, newModifiers: HidKeyboardModifiers) => void\n}) {\n    const { initialSelector, initialModifiers, selector, modifiers, onChange } =\n        props\n    const uncontrolled = useMemo(\n        () => selector === undefined || modifiers === undefined,\n        []\n    )\n    const [selector_, setSelector_] = useState<number>(initialSelector || 0)\n    const [modifiers_, setModifiters_] = useState<HidKeyboardModifiers>(\n        initialModifiers || HidKeyboardModifiers.None\n    )\n    const { darkMode } = useContext(DarkModeContext)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const keyboardRef = useRef<any>()\n    const classes = useStyles()\n    const theme = `hg-theme-default hg-layout-default ${\n        darkMode === \"dark\" ? classes.darkKeyboard : classes.keyboard\n    }`\n    const { mobile } = useMediaQueries()\n    const layoutName = mobile ? \"mobile\" : \"default\"\n    const keyboardId = useId()\n\n    const layout = {\n        default: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6 7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space} {metaright} {altright}\",\n        ],\n        mobile: [\n            \"{escape} {f1} {f2} {f3} {f4} {f5}\",\n            \"{f6} {f7} {f8} {f9} {f10} {f11} {f12}\",\n            \"` 1 2 3 4 5 6\",\n            \"7 8 9 0 - = {backspace}\",\n            \"{tab} q w e r t\",\n            \"y u i o p [ ] \\\\\",\n            \"{capslock} a s d f g\",\n            \"h j k l ; ' {enter}\",\n            \"{shiftleft} z x c v b\",\n            \"n m , . / {shiftright}\",\n            \"{controlleft} {altleft} {metaleft} {space}\",\n            \"{metaright} {altright}\",\n        ],\n    }\n    const display = {\n        \"{escape}\": \"esc ⎋\",\n        \"{tab}\": \"tab ⇥\",\n        \"{backspace}\": \"backspace ⌫\",\n        \"{enter}\": \"enter ↵\",\n        \"{capslock}\": \"caps lock ⇪\",\n        \"{shiftleft}\": \"shift ⇧\",\n        \"{shiftright}\": \"shift ⇧\",\n        \"{controlleft}\": \"ctrl ⌃\",\n        \"{controlright}\": \"ctrl ⌃\",\n        \"{altleft}\": \"alt ⌥\",\n        \"{altright}\": \"alt ⌥\",\n        \"{metaleft}\": \"cmd ⌘\",\n        \"{metaright}\": \"cmd ⌘\",\n        \"{space}\": \"⎵\",\n    }\n    const handleKeyboardKeyPress = (code: string) => {\n        code = code.toLowerCase().replace(/[{}]/g, \"\")\n        let newSelector = selector_\n        let newModifiers = modifiers_\n        const msel = selectors[code]\n        const mcode = modifierCodes[code]\n        if (msel) {\n            if (msel === selector) newSelector = undefined\n            else newSelector = msel\n        } else {\n            if (mcode) {\n                if (newModifiers & mcode) newModifiers &= ~mcode\n                else newModifiers |= mcode\n            }\n        }\n        setSelector_(newSelector)\n        setModifiters_(newModifiers)\n        onChange(newSelector, newModifiers)\n    }\n\n    // update external values\n    useEffect(() => {\n        if (selector !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled selector`)\n            setSelector_(selector)\n        }\n    }, [selector])\n    useEffect(() => {\n        if (modifiers !== undefined) {\n            if (uncontrolled)\n                console.warn(`trying to set an uncontrolled modifier`)\n            setModifiters_(modifiers)\n        }\n    }, [modifiers])\n\n    const value = renderKeyboardKey(selector_, modifiers_, false)\n    useEffect(() => {\n        keyboardRef.current?.addButtonTheme(value, \"buttonSelected\")\n        return () =>\n            keyboardRef.current?.removeButtonTheme(value, \"buttonSelected\")\n    }, [value])\n\n    return (\n        <Keyboard\n            baseClass={keyboardId}\n            keyboardRef={r => (keyboardRef.current = r)}\n            onKeyPress={handleKeyboardKeyPress}\n            layout={layout}\n            layoutName={layoutName}\n            theme={theme}\n            display={display}\n            mergeDisplay={true}\n        />\n    )\n}\n","import { GridSize } from \"@material-ui/core\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize,\n    md?: GridSize,\n    sm?: GridSize,\n    lg?: GridSize,\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(itemCount?: number): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n\n    if (itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2: return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3: return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (drawerType != DrawerType.None)\n        return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else return {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 3\n    }\n}","import { useEffect, useState } from \"react\"\nimport JDService from \"../../jacdac-ts/src/jdom/service\"\nimport { JDServiceClient } from \"../../jacdac-ts/src/jdom/serviceclient\"\n\nexport default function useServiceClient<T extends JDServiceClient>(\n    service: JDService,\n    factory: (service: JDService) => T,\n    deps: React.DependencyList = []\n) {\n    const [client, setClient] = useState<T>(undefined)\n\n    useEffect(() => {\n        const c = service && factory(service)\n        setClient(c)\n        return () => c?.unmount()\n    }, [service, ...deps]) // don't use factory in cache!\n\n    return client\n}\n","import React, {\n    lazy,\n    useCallback,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Typography,\n} from \"@material-ui/core\"\nimport useChange from \"../../jacdac/useChange\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport {\n    HidKeyboardModifiers,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_PROTO_TEST,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n    SystemEvent,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport JDEvent from \"../../../jacdac-ts/src/jdom/event\"\nimport KeyboardKeyInput from \"../../components/ui/KeyboardKeyInput\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport SettingsClient from \"../../../jacdac-ts/src/jdom/clients/settingsclient\"\nimport useServiceClient from \"../../components/useServiceClient\"\nimport {\n    arrayConcatMany,\n    clone,\n    fromHex,\n    toHex,\n} from \"../../../jacdac-ts/src/jdom/utils\"\nimport { jdpack, jdunpack } from \"../../../jacdac-ts/src/jdom/pack\"\nimport { randomDeviceId } from \"../../../jacdac-ts/src/jdom/random\"\nimport JDBus from \"../../../jacdac-ts/src/jdom/bus\"\nimport useServices from \"../../components/hooks/useServices\"\nimport { Button } from \"gatsby-theme-material-ui\"\nimport Alert from \"../../components/ui/Alert\"\nimport GridHeader from \"../../components/ui/GridHeader\"\nimport { humanify } from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ConnectAlert from \"../../components/alert/ConnectAlert\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport useServiceProviderFromServiceClass from \"../../components/hooks/useServiceProviderFromServiceClass\"\nimport AppContext from \"../../components/AppContext\"\nimport { AlertTitle } from \"@material-ui/lab\"\nimport { renderKeyboardKey } from \"../../../jacdac-ts/src/servers/hidkeyboardserver\"\nconst ImportButton = lazy(() => import(\"../../components/ImportButton\"))\n\n// all settings keys are prefixed with this string\nconst PREFIX = \"@ke_\"\n// data layout format (18bytes)\nconst FORMAT = \"b[8] u32 u8 u8 u16 u16\"\n// data layout types\ntype FORMAT_TYPE = [Uint8Array, number, number, number, number, number]\n\ninterface HIDEvent {\n    key?: string\n    eventId: string\n    selector: number\n    modifiers: HidKeyboardModifiers\n}\n\nfunction HIDEventToBuffer(event: JDEvent, ev: HIDEvent) {\n    const deviceId = fromHex(event.service.device.deviceId)\n    const { service, code } = event\n    const { serviceClass, serviceIndex } = service\n    const { selector, modifiers } = ev\n    const payload = jdpack<FORMAT_TYPE>(FORMAT, [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        code,\n        selector,\n        modifiers,\n    ])\n    return payload\n}\n\nfunction bufferToHIDEvent(key: string, data: Uint8Array, bus: JDBus): HIDEvent {\n    if (data?.length !== 18) return undefined\n    const [\n        deviceId,\n        serviceClass,\n        serviceIndex,\n        eventCode,\n        selector,\n        modifiers,\n    ] = jdunpack<FORMAT_TYPE>(data, FORMAT)\n    const deviceIds = toHex(deviceId)\n    const device = bus.device(deviceIds, true)\n    const event = device?.service(serviceIndex)?.event(eventCode)\n\n    if (!event || event.service.serviceClass !== serviceClass) return undefined\n    return {\n        key,\n        eventId: event.id,\n        selector,\n        modifiers,\n    }\n}\n\nfunction SelectHIDEvent(props: { onAdd: (hidEvent: HIDEvent) => void }) {\n    const { onAdd } = props\n    const [event, setEvent] = useState<JDEvent>()\n    const [selector, setSelector] = useState(0)\n    const [modifiers, setModifiers] = useState(HidKeyboardModifiers.None)\n\n    const excludedServices = [\n        SRV_CONTROL,\n        SRV_PROTO_TEST,\n        SRV_ROLE_MANAGER,\n        SRV_SETTINGS,\n        SRV_LOGGER,\n    ]\n    const eventFilter = (ev: JDEvent) =>\n        ev.code !== SystemEvent.StatusCodeChanged\n    const services = useServices({ ignoreInfrastructure: true, specification: true })\n        .filter(srv => excludedServices.indexOf(srv.serviceClass) < 0)\n        .filter(srv => srv.events.some(eventFilter))\n    const events = arrayConcatMany(\n        services.map(service => service.events.filter(eventFilter))\n    )\n\n    const handleClickEvent = (newEvent: JDEvent) => () =>\n        setEvent(event === newEvent ? undefined : newEvent)\n\n    const handleKeyChange = (\n        newSelector: number,\n        newModifiers: HidKeyboardModifiers\n    ) => {\n        setSelector(newSelector)\n        setModifiers(newModifiers)\n    }\n    const disabled = !event || !selector\n    const handleAdd = () => onAdd({ eventId: event.id, selector, modifiers })\n\n    return (\n        <Grid container spacing={2}>\n            {!events?.length && (\n                <Grid item xs={12}>\n                    <Alert severity=\"info\">\n                        Connect your devices to bind keyboard commands.\n                    </Alert>\n                </Grid>\n            )}\n            {events\n                .filter(ev => !event || ev === event)\n                .map(ev => (\n                    <Grid item xs={12} sm={6} lg={4} xl={3} key={ev.id}>\n                        <Card>\n                            <DeviceCardHeader\n                                device={ev.service.device}\n                                showAvatar={true}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\">\n                                    {ev.service.name}\n                                </Typography>\n                                <Typography variant=\"h4\">\n                                    {humanify(ev.name)}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button\n                                    onClick={handleClickEvent(ev)}\n                                    variant={\"outlined\"}\n                                >\n                                    {ev === event ? \"unselect\" : \"select\"}\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            {event && (\n                <>\n                    <GridHeader title=\"Enter your keyboard/mouse command\" />\n                    <Grid item xs={12}>\n                        <KeyboardKeyInput\n                            selector={selector}\n                            modifiers={modifiers}\n                            onChange={handleKeyChange}\n                        />\n                    </Grid>\n                </>\n            )}\n            {!disabled && (\n                <>\n                    <GridHeader title=\"Save your binding\" />\n                    <Grid item xs={12}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={disabled}\n                            onClick={handleAdd}\n                        >\n                            Save binding\n                        </Button>\n                    </Grid>\n                </>\n            )}\n        </Grid>\n    )\n}\n\nexport default function HIDEvents() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { setError } = useContext(AppContext)\n    const settingsServices = useServices({ serviceClass: SRV_SETTINGS })\n    const [settingsService, setSettingsService] = useState<JDService>()\n    const [hidEvents, setHIDEvents] = useState<HIDEvent[]>([])\n    const [open, setOpen] = useState(false)\n    const gridBreakpoints = useGridBreakpoints()\n    const exportRef = useRef()\n\n    const handleOpenAdd = () => setOpen(true)\n    const handleCloseAdd = () => setOpen(false)\n\n    const factory = useCallback(srv => new SettingsClient(srv), [])\n    const settings = useServiceClient(settingsService, factory)\n\n    useServiceProviderFromServiceClass(SRV_SETTINGS)\n    useChange(settings, async () => {\n        const hes: HIDEvent[] = []\n        if (settings) {\n            const all = await settings.list()\n            for (const kv of all.filter(entry =>\n                entry.key?.startsWith(PREFIX)\n            )) {\n                const { key, value } = kv\n                const he = bufferToHIDEvent(key, value, bus)\n                if (he) hes.push(he)\n            }\n        }\n        if (JSON.stringify(hes) !== JSON.stringify(hidEvents)) setHIDEvents(hes)\n    })\n    const handleAdd = async (hidEvent: HIDEvent) => {\n        setOpen(false)\n\n        const event = bus.node(hidEvent.eventId) as JDEvent\n        if (!event) return\n\n        const payload = HIDEventToBuffer(event, hidEvent)\n        settings.setValue(PREFIX + randomDeviceId(), payload)\n    }\n    const handleRemoveBinding = (index: number) => () => {\n        const { key } = hidEvents[index]\n        if (key) settings.deleteValue(key)\n    }\n    const handleSelectSettingsService = (service: JDService) => () =>\n        setSettingsService(settingsService === service ? undefined : service)\n\n    const exportUri =\n        hidEvents &&\n        `data:application/json;charset=UTF-8,${encodeURIComponent(\n            JSON.stringify(\n                clone(hidEvents).map(h => {\n                    delete h.key\n                    return h\n                })\n            )\n        )}`\n    useEffect(() => {\n        if (exportRef.current)\n            (exportRef.current as HTMLAnchorElement).download = \"bindings.json\"\n    }, [exportRef.current])\n    const handleFilesUploaded = async (files: File[]) => {\n        for (const file of files) {\n            try {\n                const text = await file.text()\n                const json = JSON.parse(text)\n                if (Array.isArray(json)) {\n                    for (const hidEvent of json as HIDEvent[]) {\n                        const event = bus.node(hidEvent.eventId) as JDEvent\n                        if (event) {\n                            const payload = HIDEventToBuffer(event, hidEvent)\n                            settings.setValue(\n                                PREFIX + randomDeviceId(),\n                                payload\n                            )\n                        }\n                    }\n                }\n            } catch (e) {\n                console.warn(e)\n                setError(`invalid file ${file.name}`)\n            }\n        }\n    }\n    return (\n        <>\n            <h1>Accessibility Adapter</h1>\n            <Grid container spacing={1}>\n                <GridHeader title=\"Select an adapter\" />\n                {!settingsServices?.length && (\n                    <Grid item xs>\n                        <ConnectAlert serviceClass={SRV_SETTINGS} />\n                    </Grid>\n                )}\n                {settingsServices\n                    .filter(srv => !settingsService || srv === settingsService)\n                    .map(srv => (\n                        <Grid item key={srv.id} {...gridBreakpoints}>\n                            <Card>\n                                <DeviceCardHeader\n                                    device={srv.device}\n                                    showAvatar={true}\n                                    showMedia={true}\n                                />\n                                <CardActions>\n                                    <Button\n                                        variant={\"outlined\"}\n                                        onClick={handleSelectSettingsService(\n                                            srv\n                                        )}\n                                    >\n                                        {settingsService === srv\n                                            ? \"unselect\"\n                                            : \"select\"}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                {settings && (\n                    <>\n                        <GridHeader title=\"Command Bindings\" />\n                        {!hidEvents?.length && (\n                            <Grid item xs>\n                                <Alert severity=\"info\">\n                                    No bindings yet! Click{\" \"}\n                                    <strong>Add binding</strong> to start\n                                    building your adapter.\n                                </Alert>\n                            </Grid>\n                        )}\n                        {hidEvents\n                            ?.map(({ eventId, selector, modifiers }) => ({\n                                eventId,\n                                event: bus.node(eventId) as JDEvent,\n                                selector,\n                                modifiers,\n                            }))\n                            .map(\n                                (\n                                    { eventId, event, selector, modifiers },\n                                    index\n                                ) => (\n                                    <Grid\n                                        item\n                                        {...gridBreakpoints}\n                                        key={eventId}\n                                    >\n                                        <Card>\n                                            <DeviceCardHeader\n                                                device={event?.service.device}\n                                                showAvatar={true}\n                                            />\n                                            <CardContent>\n                                                {event ? (\n                                                    <Typography variant=\"h6\">\n                                                        {`${\n                                                            event.service.name\n                                                        } ${humanify(\n                                                            event.name\n                                                        )}`}\n                                                    </Typography>\n                                                ) : (\n                                                    <Alert severity=\"warning\">\n                                                        <AlertTitle>\n                                                            Device not found\n                                                        </AlertTitle>\n                                                    </Alert>\n                                                )}\n\n                                                <Typography variant=\"h5\">\n                                                    {renderKeyboardKey(\n                                                        selector,\n                                                        modifiers,\n                                                        true\n                                                    )}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <IconButtonWithTooltip\n                                                    title={\"Remove binding\"}\n                                                    onClick={handleRemoveBinding(\n                                                        index\n                                                    )}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButtonWithTooltip>\n                                            </CardActions>\n                                        </Card>\n                                    </Grid>\n                                )\n                            )}\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleOpenAdd}\n                                    >\n                                        Add binding\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        ref={exportRef}\n                                        variant=\"outlined\"\n                                        href={exportUri}\n                                    >\n                                        Export\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Suspense>\n                                        <ImportButton\n                                            icon={false}\n                                            text=\"Import\"\n                                            onFilesUploaded={\n                                                handleFilesUploaded\n                                            }\n                                            acceptedFiles={[\"application/json\"]}\n                                        />\n                                    </Suspense>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n            <Dialog\n                open={open}\n                onClose={handleCloseAdd}\n                maxWidth={\"lg\"}\n                fullWidth={true}\n            >\n                <DialogTitle>Add binding</DialogTitle>\n                <DialogContent>\n                    <SelectHIDEvent onAdd={handleAdd} />\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n"],"names":["CHANGE","SettingsCmd","jdpack","jdunpack","Packet","InPipeReader","JDServiceClient","bufferToString","stringToBuffer","SettingsClient","service","registersUseAcks","clear","sendCmdAsync","Clear","listKeys","inp","bus","sendPacketAsync","openCommand","ListKeys","output","readAll","keys","map","pkt","stringData","filter","k","list","List","key","value","kv","setValue","trim","undefined","deleteValue","from","Set","emit","setStringValue","getValue","Get","resp","sendCmdAwaitResponseAsync","rkey","data","console","error","getStringValue","Delete","Box","Alert","React","useContext","serviceSpecificationFromClassIdentifier","JacdacContext","NoSsr","useChange","ConnectButtons","NoSsrConnectAlert","props","serviceClass","closeable","transports","devices","b","ignoreInfrastructure","spec","length","name","ConnectAlert","useServices","options","services","_","JSON","stringify","Chip","createStyles","Grid","makeStyles","Typography","clsx","useStyles","theme","hr","background","palette","text","disabled","marginBottom","start","width","spacing","GridHeader","title","count","variant","action","classes","useEffect","useMemo","useRef","useState","HidKeyboardModifiers","Keyboard","DarkModeContext","useId","modifierCodes","renderKeyboardKey","selectors","useMediaQueries","capture","cursor","borderColor","primary","main","active","darkKeyboard","backgroundColor","color","dark","keyboard","KeyboardKeyInput","initialSelector","initialModifiers","selector","modifiers","onChange","uncontrolled","selector_","setSelector_","modifiers_","setModifiters_","None","darkMode","keyboardRef","mobile","layoutName","keyboardId","layout","default","display","handleKeyboardKeyPress","code","toLowerCase","replace","newSelector","newModifiers","msel","mcode","warn","current","addButtonTheme","removeButtonTheme","r","AppContext","DrawerType","useGridBreakpoints","itemCount","drawerType","xs","sm","md","lg","xl","useServiceClient","factory","deps","client","setClient","c","unmount","lazy","useCallback","Card","CardActions","CardContent","Dialog","DialogContent","DialogTitle","SRV_CONTROL","SRV_LOGGER","SRV_PROTO_TEST","SRV_ROLE_MANAGER","SRV_SETTINGS","SystemEvent","IconButtonWithTooltip","DeleteIcon","arrayConcatMany","clone","fromHex","toHex","randomDeviceId","Button","humanify","DeviceCardHeader","Suspense","useServiceProviderFromServiceClass","AlertTitle","ImportButton","PREFIX","FORMAT","HIDEventToBuffer","event","ev","deviceId","device","serviceIndex","payload","bufferToHIDEvent","eventCode","deviceIds","eventId","id","SelectHIDEvent","onAdd","setEvent","setSelector","setModifiers","excludedServices","eventFilter","StatusCodeChanged","specification","srv","indexOf","events","some","handleClickEvent","newEvent","handleKeyChange","handleAdd","HIDEvents","setError","settingsServices","settingsService","setSettingsService","hidEvents","setHIDEvents","open","setOpen","gridBreakpoints","exportRef","handleOpenAdd","handleCloseAdd","settings","hes","all","entry","startsWith","he","push","hidEvent","node","handleRemoveBinding","index","handleSelectSettingsService","exportUri","encodeURIComponent","h","download","handleFilesUploaded","files","file","json","parse","Array","isArray","e"],"sourceRoot":""}