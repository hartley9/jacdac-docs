{"version":3,"file":"component---src-pages-tools-device-registration-tsx-e00452155f2f7a989e5e.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./src/components/AddServiceIconButton.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardMedia.tsx","webpack://jacdac-docs/./src/components/devices/DeviceCardHeader.tsx","webpack://jacdac-docs/./src/components/hooks/useIdleCallback.ts","webpack://jacdac-docs/./src/components/firmware/useFirmwareBlobs.ts","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/ui/PaperBox.tsx","webpack://jacdac-docs/./src/components/useBlobCanvas.ts","webpack://jacdac-docs/./src/components/ui/ImageImportCanvas.tsx","webpack://jacdac-docs/./src/pages/tools/device-registration.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import React, { useMemo } from \"react\"\nimport { Menu, MenuItem, Typography } from \"@mui/material\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../../jacdac-ts/src/jdom/spec\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport IconButtonWithTooltip from \"./ui/IconButtonWithTooltip\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function AddServiceIconButton(props: {\n    onAdd: (service: jdspec.ServiceSpec) => void\n    serviceFilter?: (service: jdspec.ServiceSpec) => boolean\n    error?: string\n    children?: JSX.Element | JSX.Element[]\n}) {\n    const { error, onAdd, children, serviceFilter } = props\n    const [servicesAnchorEl, setServicesAnchorEl] =\n        React.useState<null | HTMLElement>(null)\n    const servicesMenuId = useId()\n    const services = useMemo(\n        () =>\n            serviceSpecifications()\n                .filter(srv => !isInfrastructure(srv))\n                .filter(srv => !serviceFilter || serviceFilter(srv)),\n        [serviceFilter]\n    )\n\n    const handleServiceAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setServicesAnchorEl(event.currentTarget)\n    }\n    const handleServiceAddClose = (id: number) => () => {\n        setServicesAnchorEl(null)\n        if (id !== undefined) {\n            const srv = serviceSpecificationFromClassIdentifier(id)\n            onAdd(srv)\n        }\n    }\n\n    return (\n        <>\n            <IconButtonWithTooltip\n                title=\"Add a service\"\n                aria-controls={servicesMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleServiceAddClick}\n            >\n                {children || <AddIcon />}\n            </IconButtonWithTooltip>\n            <Menu\n                id={servicesMenuId}\n                anchorEl={servicesAnchorEl}\n                keepMounted\n                open={Boolean(servicesAnchorEl)}\n                onClose={handleServiceAddClose(undefined)}\n            >\n                {services.map(srv => (\n                    <MenuItem\n                        key={srv.classIdentifier}\n                        value={srv.classIdentifier.toString(16)}\n                        onClick={handleServiceAddClose(srv.classIdentifier)}\n                    >\n                        {srv.name}\n                    </MenuItem>\n                ))}\n            </Menu>\n            <Typography\n                variant=\"caption\"\n                color={error ? \"error\" : \"inherit\"}\n                component=\"div\"\n            >\n                {error || \"Select one or more services.\"}\n            </Typography>\n        </>\n    )\n}\n","import React from \"react\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport useDeviceImage from \"./useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\n\nexport default function DeviceCardMedia(props: { device: JDDevice }) {\n    const { device } = props\n    const specification = useDeviceSpecification(device)\n    const imageUrl = useDeviceImage(specification, \"preview\")\n\n    return (\n        <CardMediaWithSkeleton image={imageUrl} title={specification?.name} />\n    )\n}\n","import { ControlReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { CardHeader, Chip, Typography } from \"@mui/material\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Link } from \"gatsby-theme-material-ui\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport React from \"react\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport DeviceActions from \"./DeviceActions\"\nimport DeviceName from \"./DeviceName\"\nimport DeviceCardMedia from \"./DeviceCardMedia\"\nimport useDeviceSpecification from \"../../jacdac/useDeviceSpecification\"\nimport { identifierToUrlPath } from \"../../../jacdac-ts/src/jdom/spec\"\nimport DeviceAvatar from \"./DeviceAvatar\"\nimport useChange from \"../../jacdac/useChange\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nfunction DeviceProductIdentifierChip(props: { device: JDDevice }) {\n    const { device } = props\n    const register = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.ProductIdentifier)\n    )\n    const [productIdentifier] = useRegisterUnpackedValue<[number]>(register)\n    if (isNaN(productIdentifier)) return null\n\n    return (\n        <Chip size=\"small\" label={`pid: 0x${productIdentifier.toString(16)}`} />\n    )\n}\n\nfunction DeviceFirmwareVersionChip(props: { device: JDDevice }) {\n    const { device } = props\n    const firmwareVersionRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.FirmwareVersion)\n    )\n    const [firmwareVersion] = useRegisterUnpackedValue<[string]>(\n        firmwareVersionRegister\n    )\n    if (!firmwareVersion) return null\n\n    return <Chip size=\"small\" label={firmwareVersion} />\n}\n\nfunction DeviceTemperatureChip(props: { device: JDDevice }) {\n    const { device } = props\n    const tempRegister = useChange(device, _ =>\n        _?.service(0)?.register(ControlReg.McuTemperature)\n    )\n    const [temperature] = useRegisterUnpackedValue<[number]>(tempRegister)\n    if (isNaN(temperature)) return null\n    return <Chip size=\"small\" label={`${temperature}°`} />\n}\n\nexport default function DeviceCardHeader(props: {\n    device: JDDevice\n    showAvatar?: boolean\n    showDeviceId?: boolean\n    showFirmware?: boolean\n    showTemperature?: boolean\n    showMedia?: boolean\n    showSettings?: boolean\n    showReset?: boolean\n}) {\n    const {\n        device,\n        showFirmware,\n        showTemperature,\n        showMedia,\n        showDeviceId,\n        showAvatar,\n        showSettings,\n        showReset,\n    } = props\n    const specification = useDeviceSpecification(device)\n\n    return (\n        <>\n            {showMedia && <DeviceCardMedia device={device} />}\n            <CardHeader\n                avatar={showAvatar && <DeviceAvatar device={device} />}\n                action={\n                    <DeviceActions\n                        device={device}\n                        showReset={showReset}\n                        showSettings={showSettings}\n                        hideIdentity={showAvatar}\n                    />\n                }\n                title={\n                    <Link\n                        color=\"textPrimary\"\n                        underline=\"hover\"\n                        to={`/devices/${\n                            identifierToUrlPath(specification?.id) || \"\"\n                        }`}\n                    >\n                        <DeviceName device={device} />\n                    </Link>\n                }\n                subheader={\n                    <>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {[\n                                specification?.name,\n                                showDeviceId && device.deviceId,\n                            ]\n                                .filter(s => !!s)\n                                .join(\", \")}\n                        </Typography>\n                        {showFirmware && Flags.diagnostics && (\n                            <DeviceProductIdentifierChip device={device} />\n                        )}\n                        {showFirmware && (\n                            <DeviceFirmwareVersionChip device={device} />\n                        )}\n                        {showTemperature && (\n                            <DeviceTemperatureChip device={device} />\n                        )}\n                    </>\n                }\n            />\n        </>\n    )\n}\n","import { DependencyList, useEffect } from \"react\"\n\ntype RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n    timeout: number\n}\ntype RequestIdleCallbackDeadline = {\n    readonly didTimeout: boolean\n    timeRemaining: () => number\n}\n\ndeclare global {\n    interface Window {\n        requestIdleCallback: (\n            callback: (deadline: RequestIdleCallbackDeadline) => void,\n            opts?: RequestIdleCallbackOptions\n        ) => RequestIdleCallbackHandle\n        cancelIdleCallback: (handle: RequestIdleCallbackHandle) => void\n    }\n}\n\nexport default function useIdleCallback(\n    cb: () => void,\n    timeout: number,\n    deps?: DependencyList\n) {\n    useEffect(() => {\n        if (typeof window === \"undefined\" || !cb) return\n\n        if (\"requestIdleCallback\" in window) {\n            const id = window.requestIdleCallback(cb, { timeout })\n            return () => window.cancelIdleCallback(id)\n        } else {\n            const id = setTimeout(cb, timeout)\n            return () => clearTimeout(id)\n        }\n    }, [cb, timeout, ...(deps || [])])\n}\n","import { useCallback, useContext, useState } from \"react\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport {\n    FirmwareBlob,\n    parseFirmwareFile,\n} from \"../../../jacdac-ts/src/jdom/flashing\"\nimport DbContext, { DbContextProps } from \"../DbContext\"\nimport { useChangeAsync } from \"../../jacdac/useChange\"\nimport { unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport { fetchLatestFirmwareRelease, fetchFirmwareReleaseBinary } from \"../github\"\nimport useIdleCallback from \"../hooks/useIdleCallback\"\nimport useMounted from \"../hooks/useMounted\"\nimport useAnalytics from \"../hooks/useAnalytics\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\n\nexport default function useFirmwareBlobs() {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { db } = useContext<DbContextProps>(DbContext)\n    const { trackEvent } = useAnalytics()\n    const [throttled, setThrottled] = useState(false)\n    const mounted = useMounted()\n    const firmwares = db?.firmwares\n    const specifications = useDeviceSpecifications()\n\n    const loadFirmwares = useCallback(async () => {\n        const names = await firmwares?.list()\n        if (!names) return\n\n        const slugs = unique(\n            specifications\n                .filter(spec => !!spec?.productIdentifiers?.length) // needs some product identifiers\n                .map(spec => spec.repo)\n                .filter(repo => /^https:\\/\\/github.com\\//.test(repo))\n                .map(repo => repo.substr(\"https://github.com/\".length))\n        )\n        console.debug(`firmware: found ${slugs.join(\", \")}`)\n        for (const slug of slugs) {\n            const fw = await firmwares.get(slug)\n            if (fw) {\n                const { time } = fw\n                const age = Date.now() - time\n                console.debug(`firmware: ${slug} age ${prettyDuration(age)}`)\n                if (age < 3600_000) {\n                    console.debug(`firmware: skipping fresh firmware ${slug}`)\n                    continue\n                }\n            }\n            console.debug(`firmware: fetch latest release of ${slug}`)\n            const { status, release } = await fetchLatestFirmwareRelease(slug, {\n                ignoreThrottled: true,\n            })\n            trackEvent(\"github.fetch\", { status, slug })\n            if (status === 403) {\n                trackEvent(\"github.fetch.throttled\", { repo: slug })\n                if (mounted()) setThrottled(true)\n            }\n            if (!release?.version) {\n                trackEvent(\"github.fetch.notfound\", { repo: slug })\n                console.warn(`firmware: release not found`)\n                return\n            }\n            setThrottled(false)\n            console.log(\n                `firmware: fetch binary release ${slug} ${release.version}`\n            )\n            const firmware = await fetchFirmwareReleaseBinary(\n                slug,\n                release.version\n            )\n            if (firmware) {\n                console.debug(\n                    `firmware: binary release ${slug} ${release.version} downloaded`\n                )\n                firmwares.set(slug, { time: Date.now(), firmware })\n            }\n            // throttle github queries\n            await bus.delay(5000)\n        }\n    }, [db, firmwares, throttled])\n    // reload firmwares\n    useIdleCallback(loadFirmwares, 5000, [db, firmwares])\n    // update bus with info on changes\n    useChangeAsync(\n        firmwares,\n        async fw => {\n            const names = await fw?.list()\n            const uf2s: FirmwareBlob[] = []\n            if (names?.length) {\n                for (const name of names) {\n                    const { firmware } = (await fw.get(name)) || {}\n                    if (firmware) {\n                        const uf2Blobs = await parseFirmwareFile(firmware, name)\n                        uf2Blobs?.forEach(uf2Blob => {\n                            uf2s.push(uf2Blob)\n                        })\n                    }\n                }\n            }\n            bus.firmwareBlobs = uf2s\n        },\n        []\n    )\n\n    return { throttled }\n}\n\nexport function useFirmwareBlob(repoSlug: string) {\n    repoSlug = repoSlug?.replace(/^https:\\/\\/github\\.com\\//i, \"\")\n    const { db } = useContext<DbContextProps>(DbContext)\n    const firmwares = db?.firmwares\n\n    const blobs = useChangeAsync(\n        firmwares,\n        async () => {\n            if (!repoSlug) return undefined\n\n            const { firmware } = (await firmwares?.get(repoSlug)) || {}\n            if (!firmware) {\n                return undefined\n            } else {\n                const uf2Blobs = await parseFirmwareFile(firmware, repoSlug)\n                return uf2Blobs\n            }\n        },\n        [repoSlug]\n    )\n\n    const setFirmwareFile = async (tag: string, f: Blob) => {\n        if (!f) await firmwares?.set(repoSlug, undefined)\n        else await firmwares?.set(repoSlug, { time: Date.now(), firmware: f })\n    }\n\n    return {\n        firmwareBlobs: blobs,\n        setFirmwareFile,\n    }\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nexport interface GithubRelease {\n    url: string\n    tag_name: string\n    name: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    if (!slug) return {}\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchFirmwareReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(path ? `${ROOT}${path}` : undefined)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = repoPath ? `repos/${repoPath}` : undefined\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}/releases/latest`\n    const res = useFetchApi<GithubRelease>(path)\n    return res\n}\n\nexport function useLatestReleaseAsset(url: string) {\n    const [, slug, filename] =\n        /^https:\\/\\/github.com\\/(.+)\\/releases\\/download\\/.+\\/(.+)$/i.exec(\n            url\n        ) || []\n    const { status, response } = useLatestRelease(slug)\n    console.log({ url, slug, filename, status, response })\n    if (status === 200 && response) {\n        const { tag_name, name } = response\n        return {\n            name,\n            version: tag_name,\n            assertUrl: `https://github.com/${normalizeSlug(\n                slug\n            )}/releases/download/${tag_name}/${filename}`,\n        }\n    } else return {}\n}\n\nexport function useLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    const resp = useLatestFirmwareReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestFirmwareReleases(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m =\n        /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n            v\n        )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import { BoxProps, Paper } from \"@mui/material\"\nimport React from \"react\"\n\nexport default function PaperBox(\n    props: { padding?: number; elevation?: number; bgcolor?: string } & BoxProps\n) {\n    const { children, padding = 1, elevation = 1, bgcolor, ...others } = props\n    return (\n        <Paper\n            sx={{ mb: 1, bgcolor, p: padding, ...others }}\n            square\n            elevation={elevation}\n        >\n            {children}\n        </Paper>\n    )\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nfunction readBlobToCanvas(\n    blob: Blob,\n    width: number,\n    height: number\n): Promise<HTMLCanvasElement> {\n    return new Promise((resolve, reject) => {\n        const url = URL.createObjectURL(blob)\n        const img = new Image()\n        img.onload = () => {\n            URL.revokeObjectURL(url)\n\n            const cvs = document.createElement(\"canvas\")\n            cvs.width = width\n            cvs.height = height\n            const ctx = cvs.getContext(\"2d\")\n\n            // compute center of image to be copied into canvas\n            const cw = cvs.width\n            const ch = cvs.height\n            const car = cw / ch\n            const iw = img.width\n            const ih = img.height\n            const iar = iw / ih\n            let sx = 0,\n                sy = 0,\n                sw = iw,\n                sh = ih\n\n            //console.log(`image (${iw}x${ih}:${iar}), target (${cw}x${ch}:${car})`)\n            if (iar > car) {\n                const dw = iw * (1 - car / iar)\n                sx = dw >> 1\n                sw = iw - dw\n                //console.log({ dw, sx, sw })\n            } else if (iar < car) {\n                // klip top\n                const dh = ih * (1 - iar / car)\n                sy = dh >> 1\n                sh = ih - dh\n                //console.log({ dh, sy, sh })\n            }\n            //console.log({ sx, sy, sw, sh, cw, ch })\n            ctx.drawImage(img, sx, sy, sw, sh, 0, 0, cw, ch)\n\n            // done\n            resolve(cvs)\n        }\n        img.onerror = () => {\n            // error\n            URL.revokeObjectURL(url)\n            reject(undefined)\n        }\n        img.src = url\n    })\n}\n\nexport default function useBlobCanvas(\n    blob: Blob,\n    width: number,\n    height: number\n) {\n    const [canvas, setCanvas] = useState<HTMLCanvasElement>(undefined)\n    useEffectAsync(async () => {\n        if (!blob) setCanvas(undefined)\n        else {\n            try {\n                const cvs = await readBlobToCanvas(blob, width, height)\n                setCanvas(cvs)\n            } catch (e) {\n                setCanvas(undefined)\n            }\n        }\n    }, [blob, width, height])\n    return canvas\n}\n","import React, { lazy, useEffect, useMemo, useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport { Box } from \"@mui/material\"\nimport { Skeleton } from \"@mui/material\"\nimport useBlobCanvas from \"../useBlobCanvas\"\n\nimport Suspense from \"./Suspense\"\nconst PREFIX = \"ImageImportCanvas\"\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    img: `${PREFIX}-img`,\n    btn: `${PREFIX}-btn`,\n}\n\nconst Root = styled(\"div\")(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        position: \"relative\",\n    },\n\n    [`& .${classes.img}`]: {\n        margin: \"auto\",\n        display: \"block\",\n        width: \"100%\",\n    },\n\n    [`& .${classes.btn}`]: {\n        position: \"absolute\",\n        borderRadius: \"6rem\",\n        left: \"calc(50% - 2rem)\",\n        top: \"calc(50% - 2rem)\",\n        background: theme.palette.background.paper,\n    },\n}))\n\nconst ImportButton = lazy(() => import(\"../ImportButton\"))\n\nexport default function ImportImageCanvas(props: {\n    width: number\n    height: number\n    onImageImported?: (cvs: HTMLCanvasElement) => void\n}) {\n    const { width, height, onImageImported } = props\n    const [imageBlob, setImageBlob] = useState<Blob>(undefined)\n    const canvas = useBlobCanvas(imageBlob, width, height)\n    const canvasUrl = useMemo(() => canvas?.toDataURL(\"image/png\"), [canvas])\n\n    const handleFilesUploaded = async (files: File[]) => {\n        const file = files[0]\n        setImageBlob(file)\n    }\n    // notify of new canvas\n    useEffect(() => canvas && onImageImported(canvas), [canvas])\n\n    return (\n        <Root className={classes.root}>\n            <div className={classes.img}>\n                {!canvasUrl && (\n                    <Skeleton\n                        variant=\"rectangular\"\n                        width={\"100%\"}\n                        height={\"18rem\"}\n                    />\n                )}\n                {canvasUrl && (\n                    <img\n                        alt=\"preview\"\n                        src={canvasUrl}\n                        width={\"100%\"}\n                        height={\"100%\"}\n                    />\n                )}\n            </div>\n            <Box className={classes.btn}>\n                <Suspense>\n                    <ImportButton\n                        icon={true}\n                        text=\"Import 4:3 image\"\n                        onFilesUploaded={handleFilesUploaded}\n                        acceptedFiles={[\"image/jpeg\", \"image/png\"]}\n                    />\n                </Suspense>\n            </Box>\n        </Root>\n    )\n}\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { lazy, useMemo, useState } from \"react\"\nimport { Grid, Link } from \"@mui/material\"\nimport useLocalStorage from \"../../components/hooks/useLocalStorage\"\nimport { clone, unique } from \"../../../jacdac-ts/src/jdom/utils\"\nimport {\n    Box,\n    Chip,\n    Menu,\n    MenuItem,\n    TextField,\n    Typography,\n    Card,\n    CardActions,\n    Button,\n} from \"@mui/material\"\nimport { ChangeEvent } from \"react\"\nimport {\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n} from \"../../../jacdac-ts/src/jdom/spec\"\nimport PaperBox from \"../../components/ui/PaperBox\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: match-default-export-name no-submodule-imports\nimport CreateIcon from \"@mui/icons-material/Create\"\nimport IconButtonWithTooltip from \"../../components/ui/IconButtonWithTooltip\"\nimport { parseRepoUrl } from \"../../components/github\"\nimport {\n    DEVICE_IMAGE_HEIGHT,\n    DEVICE_IMAGE_WIDTH,\n    generateDeviceSpecificationId,\n    normalizeDeviceSpecification,\n} from \"../../../jacdac-ts/jacdac-spec/spectool/jdspec\"\nimport ImportImageCanvas from \"../../components/ui/ImageImportCanvas\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Autocomplete } from \"@mui/material\"\nimport { useFirmwareBlob } from \"../../components/firmware/useFirmwareBlobs\"\nimport { FirmwareBlob } from \"../../../jacdac-ts/src/jdom/flashing\"\nimport { useId } from \"react-use-id-hook\"\nimport AddServiceIconButton from \"../../components/AddServiceIconButton\"\nimport useDevices from \"../../components/hooks/useDevices\"\nimport DeviceCardHeader from \"../../components/devices/DeviceCardHeader\"\nimport Suspense from \"../../components/ui/Suspense\"\nimport { ControlReg } from \"../../../jacdac-ts/jacdac-spec/dist/specconstants\"\nimport JDDevice from \"../../../jacdac-ts/src/jdom/device\"\nimport useGridBreakpoints from \"../../components/useGridBreakpoints\"\nimport Alert from \"../../components/ui/Alert\"\nimport { GithubPullRequestFiles } from \"../../components/buttons/GithubPullRequestButton\"\nimport useDeviceSpecifications from \"../../components/devices/useDeviceSpecifications\"\nimport useDeviceCatalog from \"../../components/devices/useDeviceCatalog\"\n\nconst GithubPullRequestButton = lazy(\n    () => import(\"../../components/buttons/GithubPullRequestButton\")\n)\n\nfunction CompanySelect(props: {\n    error?: string\n    value?: string\n    onValueChange?: (name: string) => void\n}) {\n    const { onValueChange, value, error } = props\n    const [company, setCompany] = useState(value)\n    const specifications = useDeviceSpecifications()\n    const companies = useMemo(\n        () => unique(specifications.map(dev => dev.company)),\n        [specifications]\n    )\n    const companyId = useId()\n    const helperText =\n        \"Name of the company manufacturing this device. The company name will be used to generate the module identifier.\"\n\n    const handleChange = (ev: unknown, newValue: string) => {\n        setCompany(newValue)\n        onValueChange?.(newValue)\n    }\n    const renderInputs = params => (\n        <TextField\n            {...params}\n            error={!!error}\n            label=\"Company\"\n            helperText={error || helperText}\n            variant=\"outlined\"\n        />\n    )\n\n    return (\n        <Autocomplete\n            id={companyId}\n            freeSolo={true}\n            fullWidth={true}\n            includeInputInList\n            autoComplete\n            options={companies}\n            renderInput={renderInputs}\n            inputValue={company}\n            aria-label={helperText}\n            onInputChange={handleChange}\n        />\n    )\n}\n\nexport default function DeviceRegistration() {\n    const [device, setDevice] = useLocalStorage<jdspec.DeviceSpec>(\n        \"jacdac:devicedesigner;2\",\n        {\n            id: \"my-device\",\n            name: \"My device\",\n            services: [],\n            productIdentifiers: [],\n            repo: \"\",\n        } as jdspec.DeviceSpec\n    )\n    const gridBreakpoints = useGridBreakpoints()\n    const devices = useDevices({\n        announced: true,\n        physical: true,\n        ignoreInfrastructure: true,\n        productIdentifier: true,\n    })\n    const updateDevice = () => {\n        const dev = clone(device)\n        dev.id = generateDeviceSpecificationId(dev)\n        setDevice(dev)\n    }\n    const [firmwaresAnchorEl, setFirmwaresAnchorEl] =\n        React.useState<null | HTMLElement>(null)\n    const [imageDataURI, setImageDataURI] = useState<string>(undefined)\n    const deviceCatalog = useDeviceCatalog()\n    const nameId = useId()\n    const firmwareMenuId = useId()\n    const repoId = useId()\n    const identifierId = useId()\n    const descriptionId = useId()\n    const homepageId = useId()\n    const hardwareVersionId = useId()\n    const hardwareDesignId = useId()\n    const specifications = useDeviceSpecifications({\n        includeDeprecated: true,\n        includeExperimental: true,\n    })\n    const handleServiceAdd = (srv: jdspec.ServiceSpec) => {\n        console.log(`add`, srv.classIdentifier)\n        device.services.push(srv.classIdentifier)\n        updateDevice()\n    }\n    const companyRepos = useMemo(\n        () =>\n            unique(\n                specifications\n                    .filter(d => d.company === device.company)\n                    .map(d => d.repo)\n                    .filter(repo => !!repo)\n            ),\n        [device?.company, specifications]\n    )\n    const { firmwareBlobs } = useFirmwareBlob(device.repo)\n    const variant = \"outlined\"\n    const companyError = !device.company ? \"select a company\" : \"\"\n    const nameError = device.name?.length > 32 ? \"name too long\" : undefined\n    const parsedRepo = parseRepoUrl(device.repo)\n    const githubError =\n        device.repo && !parsedRepo ? \"invalid GitHub repository\" : \"\"\n    const linkError =\n        !device.link || /^https:\\/\\//.test(device.link)\n            ? \"\"\n            : \"Must be https://...\"\n    const idError = !device.id\n        ? \"missing identifier\"\n        : specifications.find(dev => dev.id == device.id)\n        ? \"identifer already used\"\n        : \"\"\n    const imageError = !imageDataURI ? \"missing image\" : \"\"\n    const versionError =\n        device?.version &&\n        !/^(v\\d+\\.\\d+(\\.\\d+(\\.\\d+)?)?\\w?)?$/.test(device?.version)\n            ? \"Preferred format is vN.N\"\n            : \"\"\n    const ok =\n        !nameError && !linkError && !idError && !imageError && !companyError\n\n    const route = device.id?.split(\"-\").join(\"/\")\n    const modulePath = ok && `devices/${route}.json`\n    const imagePath = ok && `devices/${route}.jpg`\n\n    const handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.name = ev.target.value\n        updateDevice()\n    }\n    const handleRepoChange = (ev: unknown, newValue: string) => {\n        console.log(`new repo`, { newValue })\n        device.repo = newValue\n        updateDevice()\n    }\n    const handleLinkChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.link = ev.target.value\n        updateDevice()\n    }\n    const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.description = ev.target.value\n        updateDevice()\n    }\n    const handleDeleteService = (i: number) => () => {\n        device.services.splice(i, 1)\n        updateDevice()\n    }\n    const handleDeleteFirmware = (i: number) => () => {\n        device.productIdentifiers.splice(i, 1)\n        updateDevice()\n    }\n    const handleHardwareDesign = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.designIdentifier = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleVersion = (ev: ChangeEvent<HTMLInputElement>) => {\n        device.version = ev.target.value?.trim()\n        updateDevice()\n    }\n    const handleFirmwareAddClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setFirmwaresAnchorEl(event.currentTarget)\n        updateDevice()\n    }\n    const handleProductIdentifierAddRandomClick = () => {\n        device.productIdentifiers.push(\n            parseInt(deviceCatalog.uniqueFirmwareId(), 16)\n        )\n        updateDevice()\n    }\n    const handleFirmwareAddClose = (blob: FirmwareBlob) => () => {\n        setFirmwaresAnchorEl(null)\n        const id = blob?.productIdentifier\n        if (id !== undefined) {\n            device.productIdentifiers.push(id)\n            device.name = blob.name\n            updateDevice()\n        }\n    }\n    const handleImageImported = (cvs: HTMLCanvasElement) => {\n        const url = cvs.toDataURL(\"image/jpeg\", 100)\n        setImageDataURI(url)\n    }\n    const handleCompanyChanged = (value: string) => {\n        device.company = value\n        updateDevice()\n    }\n    const renderRepoInput = params => (\n        <TextField\n            {...params}\n            error={!!githubError}\n            type=\"url\"\n            label=\"Firmware repository\"\n            helperText={\n                githubError ||\n                \"GitHub Repository hosting the firmware binaries.\"\n            }\n            variant=\"outlined\"\n        />\n    )\n    const handleImportDevice = (dev: JDDevice) => async () => {\n        const controlService = dev.service(0)\n        const descrReg = controlService.register(ControlReg.DeviceDescription)\n        await descrReg.refresh(true)\n\n        const fw = await dev.resolveProductIdentifier()\n        if (fw) device.productIdentifiers = [fw]\n        device.services = dev\n            .services()\n            .filter(srv => !isInfrastructure(srv.specification))\n            .map(srv => srv.serviceClass)\n        device.description = descrReg.stringValue\n        updateDevice()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const files = useMemo<GithubPullRequestFiles>(\n        () =>\n            modulePath && {\n                [modulePath]: JSON.stringify(\n                    normalizeDeviceSpecification(device),\n                    null,\n                    2\n                ),\n                [imagePath]: {\n                    content: imageDataURI?.slice(imageDataURI?.indexOf(\",\")),\n                    encoding: \"base64\",\n                },\n            },\n        [modulePath, imagePath, imageDataURI, JSON.stringify(device)]\n    )\n\n    return (\n        <>\n            <h1>Device Registration</h1>\n            <p>\n                Compose a device from various services, prepare the metadata and\n                register it to the{\" \"}\n                <Link href=\"/devices/\" underline=\"hover\">\n                    Devices catalog\n                </Link>\n                .\n            </p>\n            <Grid container spacing={3}>\n                {devices.map(dev => (\n                    <Grid item key={dev.id} {...gridBreakpoints}>\n                        <Card>\n                            <DeviceCardHeader device={dev} />\n                            <CardActions>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={handleImportDevice(dev)}\n                                >\n                                    Import\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n                <Grid item xs={12}>\n                    <TextField\n                        id={nameId}\n                        required\n                        error={!!nameError}\n                        helperText={nameError}\n                        fullWidth={true}\n                        label=\"Name\"\n                        placeholder=\"My module\"\n                        value={device.name || \"\"}\n                        onChange={handleNameChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Autocomplete\n                        id={repoId}\n                        freeSolo={true}\n                        autoComplete\n                        placeholder=\"https://github.com/...\"\n                        inputValue={device.repo || \"\"}\n                        onInputChange={handleRepoChange}\n                        options={companyRepos}\n                        renderInput={renderRepoInput}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <CompanySelect\n                        value={device?.company}\n                        error={companyError}\n                        onValueChange={handleCompanyChanged}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareDesignId}\n                        fullWidth={true}\n                        helperText=\"A unique identifier for this hardware design.\"\n                        label=\"Hardware design\"\n                        value={device?.designIdentifier}\n                        onChange={handleHardwareDesign}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={hardwareVersionId}\n                        fullWidth={true}\n                        error={!!versionError}\n                        helperText={versionError}\n                        label=\"Version\"\n                        value={device?.version}\n                        onChange={handleVersion}\n                        variant={variant}\n                    />\n                    <Typography variant=\"caption\">\n                        Revision identifier for this hardware design using\n                        semver format (v1.0, v1.1, ...).\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography>Product Identifiers</Typography>\n                        {device.productIdentifiers?.map((id, i) => {\n                            const blob = firmwareBlobs?.find(\n                                b => b.productIdentifier == id\n                            )\n                            return (\n                                <Box\n                                    component=\"span\"\n                                    ml={0.5}\n                                    mb={0.5}\n                                    key={id}\n                                >\n                                    <Chip\n                                        label={\n                                            blob\n                                                ? `${\n                                                      blob.name\n                                                  } (0x${id.toString(16)})`\n                                                : `0x${id.toString(16)}`\n                                        }\n                                        onDelete={handleDeleteFirmware(i)}\n                                    />\n                                </Box>\n                            )\n                        })}\n                        <IconButtonWithTooltip\n                            title=\"Add random product identifier\"\n                            onClick={handleProductIdentifierAddRandomClick}\n                        >\n                            <CreateIcon />\n                        </IconButtonWithTooltip>\n                        {firmwareBlobs && (\n                            <IconButtonWithTooltip\n                                title=\"Add product identifier from repository\"\n                                aria-controls={firmwareMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleFirmwareAddClick}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        )}\n                        <Menu\n                            id={firmwareMenuId}\n                            anchorEl={firmwaresAnchorEl}\n                            keepMounted\n                            open={Boolean(firmwaresAnchorEl)}\n                            onClose={handleFirmwareAddClose(undefined)}\n                        >\n                            {firmwareBlobs?.map(blob => (\n                                <MenuItem\n                                    key={blob.productIdentifier}\n                                    value={blob.productIdentifier.toString(16)}\n                                    onClick={handleFirmwareAddClose(blob)}\n                                >\n                                    {blob.name}\n                                    <Typography\n                                        variant=\"caption\"\n                                        component=\"span\"\n                                    >\n                                        {blob.version}\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        <Typography variant=\"caption\" component=\"div\">\n                            Product identifiers uniquely identify your hardware\n                            on the Jacdac bus. Each revision of your hardware\n                            may have a different identifier.\n                        </Typography>\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox elevation={1}>\n                        <Typography color=\"inherit\">Services</Typography>\n                        {device.services?.map((id, i) => (\n                            <Box component=\"span\" m={0.5} key={id}>\n                                <Chip\n                                    label={\n                                        serviceSpecificationFromClassIdentifier(\n                                            id\n                                        )?.name || id\n                                    }\n                                    onDelete={handleDeleteService(i)}\n                                />\n                            </Box>\n                        ))}\n                        <AddServiceIconButton onAdd={handleServiceAdd} />\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={identifierId}\n                        disabled\n                        error={!!idError}\n                        fullWidth={true}\n                        label=\"Identifier\"\n                        variant={variant}\n                        value={device.id || \"\"}\n                    />\n                    <Typography variant=\"caption\">\n                        This generated identifer is a URL friendly string\n                        created from your company and product name.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={descriptionId}\n                        fullWidth={true}\n                        required\n                        label=\"Description\"\n                        multiline={true}\n                        rows={4}\n                        value={device.description || \"\"}\n                        onChange={handleDescriptionChange}\n                        variant={variant}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        id={homepageId}\n                        label=\"Home page url\"\n                        error={!!linkError}\n                        helperText={linkError}\n                        fullWidth={true}\n                        placeholder=\"https://...\"\n                        value={device.link || \"\"}\n                        onChange={handleLinkChange}\n                        variant={variant}\n                        type=\"url\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <PaperBox>\n                        <Typography>Catalog image</Typography>\n                        <ImportImageCanvas\n                            width={DEVICE_IMAGE_WIDTH}\n                            height={DEVICE_IMAGE_HEIGHT}\n                            onImageImported={handleImageImported}\n                        />\n                        <Typography variant=\"caption\" component=\"div\">\n                            {`Import an image of the device, at least ${DEVICE_IMAGE_WIDTH}x${DEVICE_IMAGE_HEIGHT}.`}\n                        </Typography>\n                        {imageError && (\n                            <Alert severity=\"error\">{imageError}</Alert>\n                        )}\n                    </PaperBox>\n                </Grid>\n                <Grid item xs={12}>\n                    <Suspense>\n                        <GithubPullRequestButton\n                            label={\"register device\"}\n                            title={`Device: ${device.name}`}\n                            head={`devices/${device.id}`}\n                            description={`This pull request registers a new device for Jacdac.`}\n                            files={files}\n                        />\n                    </Suspense>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n"],"names":["React","useMemo","Menu","MenuItem","Typography","isInfrastructure","serviceSpecificationFromClassIdentifier","serviceSpecifications","AddIcon","IconButtonWithTooltip","useId","AddServiceIconButton","props","error","onAdd","children","serviceFilter","servicesAnchorEl","setServicesAnchorEl","useState","servicesMenuId","services","filter","srv","handleServiceAddClick","event","currentTarget","handleServiceAddClose","id","undefined","Boolean","map","classIdentifier","toString","name","useDeviceSpecification","useDeviceImage","CardMediaWithSkeleton","DeviceCardMedia","device","specification","imageUrl","ControlReg","CardHeader","Chip","Link","useRegisterUnpackedValue","DeviceActions","DeviceName","identifierToUrlPath","DeviceAvatar","useChange","Flags","DeviceProductIdentifierChip","register","_","service","ProductIdentifier","productIdentifier","isNaN","DeviceFirmwareVersionChip","firmwareVersionRegister","FirmwareVersion","firmwareVersion","DeviceTemperatureChip","tempRegister","McuTemperature","temperature","DeviceCardHeader","showFirmware","showTemperature","showMedia","showDeviceId","showAvatar","showSettings","showReset","deviceId","s","join","diagnostics","useEffect","useIdleCallback","cb","timeout","deps","window","requestIdleCallback","cancelIdleCallback","setTimeout","clearTimeout","useCallback","useContext","JacdacContext","parseFirmwareFile","DbContext","useChangeAsync","unique","fetchLatestFirmwareRelease","fetchFirmwareReleaseBinary","useMounted","useAnalytics","prettyDuration","useDeviceSpecifications","useFirmwareBlobs","bus","db","trackEvent","throttled","setThrottled","mounted","firmwares","specifications","loadFirmwares","names","list","slugs","spec","productIdentifiers","length","repo","test","substr","console","debug","slug","fw","get","time","age","Date","now","status","release","ignoreThrottled","version","warn","log","firmware","set","delay","uf2s","uf2Blobs","forEach","uf2Blob","push","firmwareBlobs","useFirmwareBlob","repoSlug","replace","blobs","setFirmwareFile","tag","f","useEffectAsync","useFetch","url","options","response","setResponse","setError","setStatus","loading","setLoading","res","fetch","json","semverCmp","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","exec","sha","size","html_url","download_url","contentsToFirmwareReleases","contents","r","sort","l","normalizeSlug","cleaned","parts","split","repoPath","folder","slice","parseRepoUrl","m","owner","uri","resp","releases","Error","downloadUrl","req","headers","Accept","blob","fetchText","path","mimeType","src","text","useFetchApi","useFetchJSON","useRepository","useLatestRelease","useLatestReleaseAsset","filename","tag_name","assertUrl","useLatestFirmwareRelease","useLatestFirmwareReleases","cmp","a","b","d","major","minor","patch","pre","i","aa","bb","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","Paper","PaperBox","padding","elevation","bgcolor","others","mb","p","readBlobToCanvas","width","height","Promise","resolve","reject","URL","createObjectURL","img","Image","onload","revokeObjectURL","cvs","document","createElement","ctx","getContext","cw","ch","car","iw","ih","iar","sx","sy","sw","sh","dw","dh","drawImage","onerror","useBlobCanvas","canvas","setCanvas","e","lazy","styled","Box","Skeleton","Suspense","PREFIX","classes","root","btn","Root","theme","position","margin","display","borderRadius","left","top","background","palette","paper","ImportButton","ImportImageCanvas","onImageImported","imageBlob","setImageBlob","canvasUrl","toDataURL","handleFilesUploaded","files","file","Grid","useLocalStorage","clone","TextField","Card","CardActions","Button","CreateIcon","DEVICE_IMAGE_HEIGHT","DEVICE_IMAGE_WIDTH","generateDeviceSpecificationId","normalizeDeviceSpecification","Autocomplete","useDevices","useGridBreakpoints","Alert","useDeviceCatalog","GithubPullRequestButton","CompanySelect","onValueChange","value","company","setCompany","companies","dev","companyId","helperText","handleChange","ev","newValue","renderInputs","params","DeviceRegistration","setDevice","gridBreakpoints","devices","announced","physical","ignoreInfrastructure","updateDevice","firmwaresAnchorEl","setFirmwaresAnchorEl","imageDataURI","setImageDataURI","deviceCatalog","nameId","firmwareMenuId","repoId","identifierId","descriptionId","homepageId","hardwareVersionId","hardwareDesignId","includeDeprecated","includeExperimental","handleServiceAdd","companyRepos","variant","companyError","nameError","parsedRepo","githubError","linkError","link","idError","find","imageError","versionError","ok","route","modulePath","imagePath","handleNameChange","target","handleRepoChange","handleLinkChange","handleDescriptionChange","description","handleDeleteService","splice","handleDeleteFirmware","handleHardwareDesign","designIdentifier","trim","handleVersion","handleFirmwareAddClick","handleProductIdentifierAddRandomClick","uniqueFirmwareId","handleFirmwareAddClose","handleImageImported","handleCompanyChanged","renderRepoInput","handleImportDevice","controlService","descrReg","DeviceDescription","refresh","resolveProductIdentifier","serviceClass","stringValue","JSON","stringify","indexOf","encoding"],"sourceRoot":""}