{"version":3,"file":"5441-a3f5525d5712682e218b.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AACA;AACA;AAEA;AAIA;AAEA,IAAMa,oBAAoB,gBAAGZ,2CAAI,CAC7B,MAAM,qGADuB,CAAjC;AAGA,IAAMa,WAAW,gBAAGb,2CAAI,CAAC,MAAM,gJAAP,CAAxB;AAEe,SAASc,gBAAT,CAA0BC,KAA1B,EAMZ;AACC,MAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA;AAAvC,MAAiDL,KAAvD;AAEA,MAAMM,UAAU,GAAG;AACfC,IAAAA,WAAW,EAAE,GADE;AAEfC,IAAAA,YAAY,EAAE,GAFC;AAGfC,IAAAA,SAAS,EAAE,EAHI;AAIfC,IAAAA,kBAAkB,EAAE,MAJL;AAKfC,IAAAA,OAAO,EAAET;AALM,GAAnB;AAOA,MAAM;AAAEU,IAAAA;AAAF,MAAkB1B,iDAAU,CAACS,wEAAD,CAAlC;AAEA;;AACA,MAAMkB,YAAY,GAAG,MAAM;AACvB;AACAT,IAAAA,MAAM;AACT,GAHD;;AAIA,MAAMU,mBAAmB,GAAG,MAAM;AAC9B;AACAF,IAAAA,WAAW,CAACG,QAAZ,CAAwBV,KAAK,CAACW,IAA9B,YAA2CC,IAAI,CAACC,SAAL,CAAeb,KAAf,CAA3C;AACH,GAHD;;AAKA,sBACI,iDAAC,qFAAD,qBACI,iDAAC,8DAAD;AACI,QAAI,EAAEF,IADV;AAEI,WAAO,EAAEU,YAFb;AAGI,aAAS,EAAE,IAHf;AAII,YAAQ,EAAE;AAJd,kBAMI,iDAAC,8DAAD,qBACI,iDAAC,+DAAD;AAAM,aAAS,MAAf;AAAgB,aAAS,EAAE;AAA3B,kBACI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI,2FAEI,iDAAC,0EAAD;AACI,WAAO,EAAEC,mBADb;AAEI,SAAK,EAAC;AAFV,kBAII,iDAAC,2EAAD,OAJJ,CAFJ,CADJ,eAUI,iDAAC,6DAAD,qBACI,iDAAC,oBAAD;AACI,cAAU,EAAEb,OADhB;AAEI,WAAO,EAAEkB,SAFb;AAGI,SAAK,EAAEd;AAHX,IADJ,CAVJ,CADJ,eAmBI,iDAAC,+DAAD;AAAM,QAAI;AAAV,kBACI,iDAAC,WAAD;AACI,cAAU,EAAEC,UADhB;AAEI,cAAU,EAAEL,OAFhB;AAGI,gBAAY,EAAEC,YAHlB;AAII,SAAK,EAAEG;AAJX,IADJ,CAnBJ,CADJ,CANJ,eAoCI,iDAAC,8DAAD,qBACI,iDAAC,+DAAD;AACI,WAAO,EAAC,WADZ;AAEI,SAAK,EAAC,SAFV;AAGI,YAAQ,EAAE,KAHd;AAII,WAAO,EAAEQ;AAJb,aADJ,CApCJ,CADJ,CADJ;AAmDH","sources":["webpack://jacdac-docs/./src/components/dialogs/mb/TestModelDialog.tsx"],"sourcesContent":["import React, { lazy, useContext } from \"react\"\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    Grid,\n} from \"@mui/material\"\nimport DownloadIcon from \"@mui/icons-material/GetApp\"\nimport IconButtonWithTooltip from \"../../ui/IconButtonWithTooltip\"\nimport Suspense from \"../../ui/Suspense\"\n\nimport ServiceManagerContext from \"../../ServiceManagerContext\"\n\nimport MBModel from \"../../model-editor/MBModel\"\n\nimport { PointerBoundary } from \"../../blockly/fields/PointerBoundary\"\n\nconst ModelSummaryDropdown = lazy(\n    () => import(\"../../model-editor/components/ModelSummaryDropdown\")\n)\nconst ModelOutput = lazy(() => import(\"../../model-editor/ModelOutput\"))\n\nexport default function TrainModelDialog(props: {\n    classes: any\n    chartPalette: string[]\n    open: boolean\n    onDone: () => void\n    model: MBModel\n}) {\n    const { classes, chartPalette, open, onDone, model } = props\n\n    const chartProps = {\n        CHART_WIDTH: 300,\n        CHART_HEIGHT: 300,\n        MARK_SIZE: 75,\n        TOOLTIP_NUM_FORMAT: \"0.2f\",\n        PALETTE: chartPalette,\n    }\n    const { fileStorage } = useContext(ServiceManagerContext)\n\n    /* For interface controls */\n    const handleCancel = () => {\n        // close the modal\n        onDone()\n    }\n    const handleDownloadModel = () => {\n        // TODO also download arm model (as a zip file?)\n        fileStorage.saveText(`${model.name}.json`, JSON.stringify(model))\n    }\n\n    return (\n        <PointerBoundary>\n            <Dialog\n                open={open}\n                onClose={handleCancel}\n                fullWidth={true}\n                maxWidth={\"md\"}\n            >\n                <DialogContent>\n                    <Grid container direction={\"column\"}>\n                        <Grid item>\n                            <h3>\n                                Trained Model\n                                <IconButtonWithTooltip\n                                    onClick={handleDownloadModel}\n                                    title=\"Download trained model\"\n                                >\n                                    <DownloadIcon />\n                                </IconButtonWithTooltip>\n                            </h3>\n                            <Suspense>\n                                <ModelSummaryDropdown\n                                    reactStyle={classes}\n                                    dataset={undefined}\n                                    model={model}\n                                />\n                            </Suspense>\n                        </Grid>\n                        <Grid item>\n                            <ModelOutput\n                                chartProps={chartProps}\n                                reactStyle={classes}\n                                chartPalette={chartPalette}\n                                model={model}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={false}\n                        onClick={handleCancel}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </PointerBoundary>\n    )\n}\n"],"names":["React","lazy","useContext","Button","Dialog","DialogActions","DialogContent","Grid","DownloadIcon","IconButtonWithTooltip","Suspense","ServiceManagerContext","PointerBoundary","ModelSummaryDropdown","ModelOutput","TrainModelDialog","props","classes","chartPalette","open","onDone","model","chartProps","CHART_WIDTH","CHART_HEIGHT","MARK_SIZE","TOOLTIP_NUM_FORMAT","PALETTE","fileStorage","handleCancel","handleDownloadModel","saveText","name","JSON","stringify","undefined"],"sourceRoot":""}