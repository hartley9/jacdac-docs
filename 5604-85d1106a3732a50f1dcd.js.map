{"version":3,"file":"5604-85d1106a3732a50f1dcd.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://jacdac-docs/./node_modules/@mui/material/CardActions/CardActions.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/logparser.ts","webpack://jacdac-docs/./src/components/trace/TraceCard.tsx","webpack://jacdac-docs/./src/components/trace/TraceList.tsx","webpack://jacdac-docs/./src/components/ui/Markdown.tsx","webpack://jacdac-docs/./src/components/useGridBreakpoints.ts"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nvar cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = ownerState => {\n  var {\n    classes,\n    disableSpacing\n  } = ownerState;\n  var slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nvar CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    var {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(_ref => {\n  var {\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  }, !ownerState.disableSpacing && {\n    '& > :not(:first-of-type)': {\n      marginLeft: 8\n    }\n  });\n});\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  var {\n    disableSpacing = false,\n    className\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default CardActions;","import { arrayConcatMany, fromHex } from \"./utils\"\nimport JDBus from \"./bus\"\nimport Packet from \"./packet\"\nimport TracePlayer from \"./trace/traceplayer\"\nimport Frame from \"./frame\"\nimport Trace from \"./trace/trace\"\nimport { META_TRACE, META_TRACE_DESCRIPTION } from \"./constants\"\n\n/**\n * Parse a trace text file\n * @param contents\n * @returns\n * @category Trace\n */\nexport function parseTrace(contents: string): Trace {\n    const description: string[] = []\n    const packets: Packet[] = []\n    contents?.split(/\\r?\\n/).forEach(ln => {\n        // parse data\n        const m = /^(\\d+.?\\d*)\\s+([a-f0-9]{12,})/i.exec(ln)\n        if (!m) {\n            // might be a stack trace\n            if (/^\\s+at\\s/.test(ln)) {\n                const lastPacket = packets[packets.length - 1]\n                if (lastPacket) {\n                    let trace = (lastPacket.meta[META_TRACE] as string) || \"\"\n                    trace += ln + \"\\n\"\n                    lastPacket.meta[META_TRACE] = trace\n                }\n            } else {\n                // probably junk data\n                if (packets.length == 0) description.push(ln)\n            }\n            return\n        }\n\n        const timestamp = parseInt(m[1])\n        const data = fromHex(m[2])\n        // add to array\n        const pkt = Packet.fromBinary(data, timestamp)\n        pkt.meta[META_TRACE_DESCRIPTION] = ln.substring(m[0].length).trim()\n        packets.push(pkt)\n    })\n    if (packets.length)\n        return new Trace(packets, {\n            description: description.join(\"\\n\").trim(),\n        })\n    else return undefined\n}\n\n/**\n * Parses a logic analyzer log into a trace\n * @param logcontents\n * @returns\n * @category Trace\n */\nexport function parseLogicLog(logcontents: string): Frame[] {\n    if (!logcontents) return undefined\n\n    const res: Frame[] = []\n    let frameBytes = []\n    let lastTime = 0\n    for (const ln of logcontents.split(/\\r?\\n/)) {\n        let m = /^JD (\\d+) ([0-9a-f]+)/i.exec(ln)\n        if (m) {\n            res.push({\n                timestamp: parseInt(m[1]),\n                data: fromHex(m[2]),\n            })\n            continue\n        }\n\n        /** Windows, logic 1.*\nTime [s],Value,Parity Error,Framing Error\n0.042909760000000,0x00,,Error\n0.042980320000000,0xD4,,\n0.042990240000000,0x81,,\n0.043000160000000,0x10,,\n0.043010240000000,0x00,,\n0.043020160000000,0xE8,,\n0.043030240000000,0xDF,,\n0.043040160000000,0xCB,,\n0.043050240000000,0xD1,,\n0.043060160000000,0x97,,\n0.043070240000000,0x34,,\n0.043080160000000,0x37,,\n0.043090240000000,0x48,,\n0.043100160000000,0x0C,,\n0.043110080000000,0x00,,\n0.043120160000000,0x00,,\n0.043130080000000,0x00,,\n0.043140160000000,0x00,,\n0.043150080000000,0x00,,\n0.043160160000000,0x00,,\n0.043170080000000,0x00,,\n0.043180160000000,0xCA,,\n0.043190080000000,0x1F,,\n0.043200160000000,0xDC,,\n0.043210080000000,0x12,,\n0.043220160000000,0x46,,\n0.043230080000000,0x47,,\n0.043240160000000,0x27,,\n0.043250080000000,0x1F,,\n0.043264800000000,0x00,,Error\n0.063968960000000,0x00,,Error\n         */\n        m = /^([\\d.]+),(?:Async Serial,)?.*(0x[A-F0-9][A-F0-9])/.exec(ln)\n        if (!m) continue\n        const tm = parseFloat(m[1])\n        if (lastTime && tm - lastTime > 0.1) {\n            res.push({\n                timestamp: lastTime * 1000,\n                data: new Uint8Array(frameBytes),\n                info: \"timeout\",\n            })\n            frameBytes = []\n            lastTime = 0\n        }\n\n        lastTime = tm\n        if (/(framing error|Error)/.test(ln)) {\n            if (frameBytes.length > 0)\n                res.push({\n                    timestamp: lastTime * 1000,\n                    data: new Uint8Array(frameBytes),\n                })\n            frameBytes = []\n            lastTime = 0\n        } else {\n            frameBytes.push(parseInt(m[2]))\n        }\n    }\n\n    return res\n}\n\n/**\n * Replays a parsed logic log\n * @param bus\n * @param frames\n * @param speed\n * @category Trace\n */\nexport function replayLogicLog(\n    bus: JDBus,\n    frames: Frame[],\n    speed?: number\n): void {\n    const packets = arrayConcatMany(\n        frames.map(frame => Packet.fromFrame(frame.data, frame.timestamp))\n    )\n    const player = new TracePlayer(bus, speed)\n    player.trace = new Trace(packets)\n    bus.clear(packets[0].timestamp)\n    player.start()\n}\n","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n} from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { prettyDuration } from \"../../../jacdac-ts/src/jdom/pretty\"\nimport Trace from \"../../../jacdac-ts/src/jdom/trace/trace\"\nimport Markdown from \"../ui/Markdown\"\nimport PacketsContext from \"../PacketsContext\"\nimport { navigate } from \"gatsby\"\n\nexport default function TraceCard(props: { name: string; trace: Trace }) {\n    const { name, trace } = props\n    const { description, duration, length } = trace\n    const { setReplayTrace } = useContext(PacketsContext)\n\n    const handleClick = () => {\n        setReplayTrace(trace)\n        navigate(\"/tools/player\");\n    }\n\n    return (\n        <Card>\n            <CardHeader\n                title={name}\n                subheader={`${prettyDuration(duration)}, ${length} packets`}\n            />\n            <CardContent>\n                {description && <Markdown source={description} />}\n            </CardContent>\n            <CardActions>\n                <Button onClick={handleClick} variant=\"outlined\">\n                    import\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { parseTrace } from \"../../../jacdac-ts/src/jdom/logparser\"\nimport Trace from \"../../../jacdac-ts/src/jdom/trace/trace\"\nimport { Grid } from \"@mui/material\"\nimport TraceCard from \"./TraceCard\"\nimport useGridBreakpoints from \"../useGridBreakpoints\"\n\nexport default function TraceList() {\n    const gridBreakpoints = useGridBreakpoints()\n    const data = useStaticQuery(graphql`\n        query {\n            allPlainText {\n                nodes {\n                    content\n                    parent {\n                        ... on File {\n                            name\n                            ext\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const traces: { trace: Trace; name: string }[] = data.allPlainText.nodes\n        .filter(node => node.parent?.ext === \".txt\")\n        .map(node => {\n            return {\n                trace: parseTrace(node.content as string),\n                name: node.parent.name as string,\n            }\n        })\n        .filter(trace => !!trace.trace)\n\n    return (\n        <Grid container spacing={2}>\n            {traces.map(({ trace, name }) => (\n                <Grid item key={name}>\n                    <TraceCard name={name} trace={trace} {...gridBreakpoints} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import React, { lazy } from \"react\"\nimport Suspense from \"./Suspense\"\nconst ReactMarkdown = lazy(() => import(\"react-markdown\"))\n\nexport default function Markdown(props: {\n    source: string\n    className?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    components?: Partial<any>\n}) {\n    const { source, ...others } = props\n    return (\n        <Suspense>\n            <ReactMarkdown {...others}>{source}</ReactMarkdown>\n        </Suspense>\n    )\n}\n","import { GridSize } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport AppContext, { DrawerType } from \"./AppContext\"\n\nexport interface GridBreakpoints {\n    xs?: GridSize\n    md?: GridSize\n    sm?: GridSize\n    lg?: GridSize\n    xl?: GridSize\n}\n\nexport default function useGridBreakpoints(\n    itemCount?: number\n): GridBreakpoints {\n    const { drawerType } = useContext(AppContext)\n    const hasDrawer = drawerType !== DrawerType.None\n\n    if (!drawerType && itemCount !== undefined) {\n        switch (itemCount) {\n            case 1:\n            case 2:\n                return { xs: 12, sm: 6, md: 6, lg: 6, xl: 6 }\n            case 3:\n                return { xs: 12, sm: 6, md: 6, lg: 4, xl: 4 }\n        }\n    }\n\n    if (hasDrawer) return { xs: 12, md: 6, sm: 6, lg: 6, xl: 4 }\n    else\n        return {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            xl: 3,\n        }\n}\n"],"names":["arrayConcatMany","fromHex","Packet","TracePlayer","Trace","META_TRACE","META_TRACE_DESCRIPTION","parseTrace","contents","description","packets","split","forEach","ln","m","exec","test","lastPacket","length","trace","meta","push","timestamp","parseInt","data","pkt","fromBinary","substring","trim","join","undefined","parseLogicLog","logcontents","res","frameBytes","lastTime","tm","parseFloat","Uint8Array","info","replayLogicLog","bus","frames","speed","map","frame","fromFrame","player","clear","start","Button","Card","CardActions","CardContent","CardHeader","React","useContext","prettyDuration","Markdown","PacketsContext","navigate","TraceCard","props","name","duration","setReplayTrace","handleClick","useStaticQuery","Grid","useGridBreakpoints","TraceList","gridBreakpoints","traces","allPlainText","nodes","filter","node","parent","ext","content","lazy","Suspense","ReactMarkdown","source","others","AppContext","DrawerType","itemCount","drawerType","hasDrawer","None","xs","sm","md","lg","xl"],"sourceRoot":""}