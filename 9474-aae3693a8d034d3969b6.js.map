{"version":3,"file":"9474-aae3693a8d034d3969b6.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/dialogs/ConnectTransportDialog.tsx","webpack://jacdac-docs/./src/components/ui/GridHeader.tsx"],"sourcesContent":["import {\n    Card,\n    CardActions,\n    CardHeader,\n    Dialog,\n    DialogContent,\n    Grid,\n    Typography,\n    useTheme,\n} from \"@mui/material\"\nimport React, { useContext, useMemo } from \"react\"\nimport { useId } from \"react-use-id-hook\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport ConnectButton from \"../buttons/ConnectButton\"\nimport useDeviceImage from \"../devices/useDeviceImage\"\nimport CardMediaWithSkeleton from \"../ui/CardMediaWithSkeleton\"\nimport useDeviceSpecifications from \"../devices/useDeviceSpecifications\"\nimport Transport from \"../../../jacdac-ts/src/jdom/transport/transport\"\nimport DialogTitleWithClose from \"../ui/DialogTitleWithClose\"\nimport GridHeader from \"../ui/GridHeader\"\nimport Flags from \"../../../jacdac-ts/src/jdom/flags\"\n\nfunction ConnectDeviceCard(props: { device: jdspec.DeviceSpec }) {\n    const { device } = props\n    const image = useDeviceImage(device, \"preview\")\n    const theme = useTheme()\n    return (\n        <Card>\n            <CardMediaWithSkeleton\n                title={\"photograph of the device\"}\n                image={image}\n                height={theme.spacing(12)}\n            />\n            <CardHeader subheader={device.name} />\n        </Card>\n    )\n}\n\nfunction ConnectTransport(props: {\n    transport: Transport\n    onClose: () => void\n}) {\n    const { transport, onClose } = props\n    const specifications = useDeviceSpecifications()\n    const devices = useMemo(\n        () =>\n            specifications.filter(\n                device => device.transport?.type === transport.type\n            ),\n        [specifications]\n    )\n    if (!devices?.length && !Flags.diagnostics) return null\n    return (\n        <>\n            <GridHeader title={transport.type.toUpperCase()} />\n            {devices.map(device => (\n                <Grid item xs={12} sm={6} lg={4} key={device.id}>\n                    <ConnectDeviceCard device={device} />\n                </Grid>\n            ))}\n            <Grid item xs={12} textAlign=\"right\">\n                <ConnectButton\n                    key={transport.type}\n                    transport={transport}\n                    onClick={onClose}\n                    full={true}\n                    typeInTitle={true}\n                />\n            </Grid>\n        </>\n    )\n}\n\nexport default function ConnectTransportDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const { transports } = bus\n    const { open, onClose } = props\n    const dialogId = useId()\n    const labelId = useId()\n    return (\n        <Dialog\n            id={dialogId}\n            aria-labelledby={labelId}\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n        >\n            <DialogTitleWithClose onClose={onClose} id={labelId}>\n                Connect to a device\n            </DialogTitleWithClose>\n            <DialogContent>\n                <Typography variant=\"caption\">\n                    Find your device connection type and connect.\n                </Typography>\n                <Grid container spacing={2}>\n                    {transports.map(transport => (\n                        <ConnectTransport\n                            key={transport.type}\n                            transport={transport}\n                            onClose={onClose}\n                        />\n                    ))}\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import { Box, Chip, Grid, Typography } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\nimport React from \"react\"\nimport clsx from \"clsx\"\n\nconst PREFIX = \"GridHeader\"\n\nconst classes = {\n    hr: `${PREFIX}-hr`,\n    start: `${PREFIX}-start`,\n}\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.hr}`]: {\n        background: theme.palette.text.disabled,\n        marginBottom: \"unset\",\n    },\n\n    [`& .${classes.start}`]: {\n        width: theme.spacing(2),\n    },\n}))\n\nexport default function GridHeader(props: {\n    title?: string\n    count?: number\n    variant?: \"subtitle1\" | \"caption\" | \"subtitle2\"\n    action?: JSX.Element\n}) {\n    const { title, count, variant, action } = props\n\n    return (\n        <StyledGrid item xs={12}>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <hr className={clsx(classes.hr, classes.start)} />\n                </Grid>\n                <Grid item>\n                    {action && (\n                        <Box component=\"span\" mr={1}>\n                            {action}\n                        </Box>\n                    )}\n                    <Typography\n                        component=\"span\"\n                        variant={variant || \"subtitle1\"}\n                    >\n                        {title}\n                    </Typography>\n                    {count !== undefined && (\n                        <Box component=\"span\" ml={0.5}>\n                            <Chip label={count} />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs>\n                    <hr className={classes.hr} />\n                </Grid>\n            </Grid>\n        </StyledGrid>\n    )\n}\n"],"names":["Card","CardHeader","Dialog","DialogContent","Grid","Typography","useTheme","React","useContext","useMemo","useId","JacdacContext","ConnectButton","useDeviceImage","CardMediaWithSkeleton","useDeviceSpecifications","DialogTitleWithClose","GridHeader","Flags","ConnectDeviceCard","props","device","image","theme","spacing","name","ConnectTransport","transport","onClose","specifications","devices","filter","type","length","diagnostics","toUpperCase","map","id","ConnectTransportDialog","bus","transports","open","dialogId","labelId","Box","Chip","styled","clsx","PREFIX","classes","hr","start","StyledGrid","background","palette","text","disabled","marginBottom","width","title","count","variant","action","undefined"],"sourceRoot":""}