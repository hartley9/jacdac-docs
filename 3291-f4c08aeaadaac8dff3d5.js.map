{"version":3,"file":"3291-f4c08aeaadaac8dff3d5.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA,SAASW,cAAT,CAAwBC,OAAxB,EAA4CC,OAA5C,EAA8D;AAC1D,MAAMC,aAAa,GAAGJ,uEAAW,CAACE,OAAD,EAAUX,0FAAV,CAAjC;AACA,MAAM,CAACe,KAAD,IAAUb,4FAAwB,CAAWW,aAAX,EAA0B;AAC9DD,IAAAA;AAD8D,GAA1B,CAAxC,CAF0D,CAK1D;;AACA,MAAMI,qBAAqB,GAAGP,uEAAW,CAACE,OAAD,EAAUX,0GAAV,CAAzC;AACA,MAAM,CAACkB,aAAD,IAAkBhB,4FAAwB,CAC5Cc,qBAD4C,EAE5C;AAAEJ,IAAAA;AAAF,GAF4C,CAAhD;AAIA,MAAMO,eAAe,GAAG,MAAMD,aAAa,IAAIb,wFAAvB,CAAxB;AACA,MAAMe,WAAW,GAAGhB,6EAAiB,CAACW,KAAK,IAAI,CAAV,EAAaI,eAAb,CAArC;AAEA,SAAOC,WAAP;AACH;;AAEc,SAASC,cAAT,CAAwBC,KAAxB,EAAsD;AACjE,MAAM;AAAEX,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBU,KAA7B;AAEA,MAAMC,eAAe,GAAGd,uEAAW,CAACE,OAAD,EAAUX,8FAAV,CAAnC;AACA,MAAMyB,OAAO,GAAGxB,wFAAoB,CAACsB,eAAD,EAAkBD,KAAlB,CAApC;AACA,MAAMT,aAAa,GAAGJ,uEAAW,CAACE,OAAD,EAAUX,0FAAV,CAAjC;AACA,MAAMe,KAAK,GAAGL,cAAc,CAACC,OAAD,EAAUC,OAAV,CAA5B;AACA,MAAMc,cAAc,GAAGjB,uEAAW,CAACE,OAAD,EAAUX,4FAAV,CAAlC;AACA,MAAM,CAAC4B,MAAD,IAAW1B,4FAAwB,CAAWwB,cAAX,EAA2BJ,KAA3B,CAAzC;AAEA,MAAMO,MAAM,GAAG1B,4EAAgB,CAAcQ,OAAd,CAA/B;AACA,MAAMmB,KAAK,GAAGD,MAAM,GAAG,WAAH,GAAiB,SAArC;;AAEA,MAAME,SAAS,GAAG,MAAMR,eAAe,CAACS,gBAAhB,CAAiC,CAACP,OAAlC,EAA2C,IAA3C,CAAxB;;AAEA,sBACI,iDAAC,kEAAD;AAAM,aAAS,MAAf;AAAgB,gBAAY,EAAC;AAA7B,kBACI,iDAAC,kEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,4DAAD;AACI,SAAK,EAAEV,KADX;AAEI,UAAM,EAAEa,MAFZ;AAGI,SAAK,EAAEE,KAHX;AAII,WAAO,EAAEL,OAJb;AAKI,aAAS,EAAEM;AALf,IADJ,CADJ,eAUI,iDAAC,kEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,+DAAD;AAAe,YAAQ,EAAElB,aAAzB;AAAwC,WAAO,EAAED;AAAjD,IADJ,CAVJ,CADJ;AAgBH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardServo.tsx"],"sourcesContent":["import React from \"react\"\nimport { ServoReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport {\n    useRegisterBoolValue,\n    useRegisterUnpackedValue,\n} from \"../../jacdac/useRegisterValue\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport useThrottledValue from \"../hooks/useThrottledValue\"\nimport { SG90_RESPONSE_SPEED } from \"../../../jacdac-ts/src/servers/servers\"\nimport { Grid } from \"@material-ui/core\"\nimport ServoServer from \"../../../jacdac-ts/src/servers/servoserver\"\nimport RegisterInput from \"../RegisterInput\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport ServoWidget from \"../widgets/ServoWidget\"\nimport useRegister from \"../hooks/useRegister\"\n\nfunction useActualAngle(service: JDService, visible: boolean) {\n    const angleRegister = useRegister(service, ServoReg.Angle)\n    const [angle] = useRegisterUnpackedValue<[number]>(angleRegister, {\n        visible,\n    })\n    // sec/60deg\n    const responseSpeedRegister = useRegister(service, ServoReg.ResponseSpeed)\n    const [responseSpeed] = useRegisterUnpackedValue<[number]>(\n        responseSpeedRegister,\n        { visible }\n    )\n    const rotationalSpeed = 60 / (responseSpeed || SG90_RESPONSE_SPEED)\n    const actualAngle = useThrottledValue(angle || 0, rotationalSpeed)\n\n    return actualAngle\n}\n\nexport default function DashboardServo(props: DashboardServiceProps) {\n    const { service, visible } = props\n\n    const enabledRegister = useRegister(service, ServoReg.Enabled)\n    const enabled = useRegisterBoolValue(enabledRegister, props)\n    const angleRegister = useRegister(service, ServoReg.Angle)\n    const angle = useActualAngle(service, visible)\n    const offsetRegister = useRegister(service, ServoReg.Offset)\n    const [offset] = useRegisterUnpackedValue<[number]>(offsetRegister, props)\n\n    const server = useServiceServer<ServoServer>(service)\n    const color = server ? \"secondary\" : \"primary\"\n\n    const toggleOff = () => enabledRegister.sendSetBoolAsync(!enabled, true)\n\n    return (\n        <Grid container alignContent=\"center\">\n            <Grid item xs={12}>\n                <ServoWidget\n                    angle={angle}\n                    offset={offset}\n                    color={color}\n                    enabled={enabled}\n                    toggleOff={toggleOff}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <RegisterInput register={angleRegister} visible={visible} />\n            </Grid>\n        </Grid>\n    )\n}\n"],"names":["React","ServoReg","useRegisterBoolValue","useRegisterUnpackedValue","useServiceServer","useThrottledValue","SG90_RESPONSE_SPEED","Grid","RegisterInput","ServoWidget","useRegister","useActualAngle","service","visible","angleRegister","Angle","angle","responseSpeedRegister","ResponseSpeed","responseSpeed","rotationalSpeed","actualAngle","DashboardServo","props","enabledRegister","Enabled","enabled","offsetRegister","Offset","offset","server","color","toggleOff","sendSetBoolAsync"],"sourceRoot":""}