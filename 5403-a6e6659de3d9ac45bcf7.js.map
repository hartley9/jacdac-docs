{"version":3,"file":"5403-a6e6659de3d9ac45bcf7.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Add.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/PlayArrow.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/RadioButtonChecked.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/RadioButtonUnchecked.js","webpack://jacdac-docs/./node_modules/@mui/icons-material/Remove.js","webpack://jacdac-docs/./jacdac-ts/src/jdom/light.ts","webpack://jacdac-docs/./src/components/widgets/LightWidget.tsx","webpack://jacdac-docs/./src/components/dashboard/DashboardLEDPixel.tsx","webpack://jacdac-docs/./src/components/ui/SelectWithLabel.tsx","webpack://jacdac-docs/./src/components/widgets/ColorButtons.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonChecked');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import {\n    LIGHT_PROG_COL1_SET,\n    LIGHT_PROG_FADE,\n    LIGHT_PROG_FADE_HSV,\n    LIGHT_PROG_MODE,\n    LIGHT_PROG_MODE1,\n    LIGHT_PROG_RANGE,\n    LIGHT_PROG_ROTATE_BACK,\n    LIGHT_PROG_ROTATE_FWD,\n    LIGHT_PROG_SET_ALL,\n    LIGHT_PROG_SHOW,\n} from \"./lightconstants\"\nimport { fromHex } from \"./utils\"\n\nfunction cmdCode(cmd: string) {\n    switch (cmd) {\n        case \"setall\":\n            return LIGHT_PROG_SET_ALL\n        case \"fade\":\n            return LIGHT_PROG_FADE\n        case \"fadehsv\":\n            return LIGHT_PROG_FADE_HSV\n        case \"rotfwd\":\n            return LIGHT_PROG_ROTATE_FWD\n        case \"rotback\":\n            return LIGHT_PROG_ROTATE_BACK\n        case \"show\":\n        case \"wait\":\n            return LIGHT_PROG_SHOW\n        case \"range\":\n            return LIGHT_PROG_RANGE\n        case \"mode\":\n            return LIGHT_PROG_MODE\n        case \"tmpmode\":\n            return LIGHT_PROG_MODE1\n        case \"setone\":\n            return LIGHT_PROG_COL1_SET\n        case \"mult\":\n            return 0x100\n        default:\n            return undefined\n    }\n}\n\nfunction isWhiteSpace(code: number) {\n    return code == 32 || code == 13 || code == 10 || code == 9\n}\n\n/**\n * Encodes a light command into a buffer\n * @param format\n * @param args\n * @returns\n * @category Data Packing\n */\nexport function lightEncode(format: string, args: (number | number[])[]) {\n    // tokens are white-space separated\n    // % - number from args[]\n    // # - color from args[]\n    // #0123ff - color\n    // 123 - number\n    // commands: set, fade, fadehsv, rotfwd, rotback, pause\n    // fadehsv 0 12 #00ffff #ffffff\n\n    const outarr: number[] = []\n    let colors: number[] = []\n    let pos = 0\n    let currcmd = 0\n\n    function pushNumber(n: number) {\n        if (n == null || (n | 0) != n || n < 0 || n >= 16383)\n            throw new Error(\"number out of range: \" + n)\n        if (n < 128) outarr.push(n)\n        else {\n            outarr.push(0x80 | (n >> 8))\n            outarr.push(n & 0xff)\n        }\n    }\n\n    function flush() {\n        if (currcmd == 0xcf) {\n            if (colors.length != 1) throw new Error(\"setone requires 1 color\")\n        } else {\n            if (colors.length == 0) return\n            if (colors.length <= 3) outarr.push(0xc0 | colors.length)\n            else {\n                outarr.push(0xc0)\n                outarr.push(colors.length)\n            }\n        }\n        for (const c of colors) {\n            outarr.push((c >> 16) & 0xff)\n            outarr.push((c >> 8) & 0xff)\n            outarr.push((c >> 0) & 0xff)\n        }\n        colors = []\n    }\n\n    function nextToken() {\n        while (isWhiteSpace(format.charCodeAt(pos))) pos++\n        const beg = pos\n        while (pos < format.length && !isWhiteSpace(format.charCodeAt(pos)))\n            pos++\n        return format.slice(beg, pos)\n    }\n\n    while (pos < format.length) {\n        const token = nextToken()\n        const t0 = token.charCodeAt(0)\n        if (97 <= t0 && t0 <= 122) {\n            // a-z\n            flush()\n            currcmd = cmdCode(token)\n            if (currcmd == undefined)\n                throw new Error(\"unknown light command: \" + token)\n            if (currcmd == 0x100) {\n                const f = parseFloat(nextToken())\n                if (isNaN(f) || f < 0 || f > 2)\n                    throw new Error(\"expecting scale\")\n                outarr.push(0xd8) // tmpmode\n                outarr.push(3) // mult\n                outarr.push(0xd0) // setall\n                const mm = Math.round(128 * f) & 0xff\n                outarr.push(0xc1)\n                outarr.push(mm)\n                outarr.push(mm)\n                outarr.push(mm)\n            } else {\n                outarr.push(currcmd)\n            }\n        } else if (48 <= t0 && t0 <= 57) {\n            // 0-9\n            pushNumber(parseInt(token))\n        } else if (t0 == 37) {\n            // %\n            if (args.length == 0) throw new Error(\"out of args, %\")\n            const v = args.shift()\n            if (typeof v != \"number\") throw new Error(\"expecting number\")\n            pushNumber(v)\n        } else if (t0 == 35) {\n            // #\n            if (token.length == 1) {\n                if (args.length == 0) throw new Error(\"out of args, #\")\n                const v = args.shift()\n                if (typeof v === \"number\") colors.push(v)\n                else if (Array.isArray(v)) for (const vv of v) colors.push(vv)\n                else throw Error(\"invalid number \" + v)\n            } else {\n                if (token.length == 7) {\n                    const b = fromHex(token.slice(1))\n                    const c = (b[0] << 16) | (b[1] << 8) | b[2]\n                    colors.push(c)\n                } else {\n                    throw new Error(\"invalid color: \" + token)\n                }\n            }\n        }\n    }\n    flush()\n\n    return new Uint8Array(outarr)\n}\n","import React, { useEffect, useRef } from \"react\"\nimport {\n    LedPixelReg,\n    LedPixelVariant,\n    RENDER,\n} from \"../../../jacdac-ts/src/jdom/constants\"\nimport LedPixelServer from \"../../../jacdac-ts/src/servers/ledpixelserver\"\nimport SvgWidget from \"../widgets/SvgWidget\"\nimport useWidgetTheme from \"../widgets/useWidgetTheme\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\nimport { useRegisterUnpackedValue } from \"../../jacdac/useRegisterValue\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport useRegister from \"../hooks/useRegister\"\nimport useFireKey from \"../hooks/useFireKey\"\n\nfunction rgbToHsl(r: number, g: number, b: number): [number, number, number] {\n    const [r$, g$, b$] = [r / 255, g / 255, b / 255]\n    const cMin = Math.min(r$, g$, b$)\n    const cMax = Math.max(r$, g$, b$)\n    const cDelta = cMax - cMin\n    let h: number\n    let s: number\n    let l: number\n    const maxAndMin = cMax + cMin\n\n    //lum\n    l = (maxAndMin / 2) * 100\n\n    if (cDelta === 0) s = h = 0\n    else {\n        //hue\n        if (cMax === r$) h = 60 * (((g$ - b$) / cDelta) % 6)\n        else if (cMax === g$) h = 60 * ((b$ - r$) / cDelta + 2)\n        else if (cMax === b$) h = 60 * ((r$ - g$) / cDelta + 4)\n\n        //sat\n        if (l > 50) s = 100 * (cDelta / (2 - maxAndMin))\n        else s = 100 * (cDelta / maxAndMin)\n    }\n\n    // at least 60% luminosity\n    l = Math.max(l, 60)\n    return [Math.floor(h), Math.floor(s), Math.floor(l)]\n}\n\nfunction setRgb(\n    el: SVGElement,\n    r: number,\n    g: number,\n    b: number,\n    radius?: number\n) {\n    const hsl = rgbToHsl(r, g, b)\n    const [h, s, l] = hsl\n    const fill = `hsl(${h}, ${s}%, ${l}%)`\n    el.setAttribute(\"fill\", fill)\n    if (radius !== undefined) {\n        const nr = radius * (1 + (l - 60) / 200)\n        el.setAttribute(\"r\", \"\" + nr)\n    }\n}\n\nfunction setRgbLeds(\n    pixelsContainer: SVGElement,\n    colors: Uint8Array,\n    radius?: number\n) {\n    const pixels = pixelsContainer?.children\n    if (!colors || !pixels) return\n\n    const pn = Math.min(pixels.length, colors.length / 3)\n    let ci = 0\n    for (let i = 0; i < pn; ++i) {\n        const pixel = pixels.item(i) as SVGElement\n        setRgb(pixel, colors[ci], colors[ci + 1], colors[ci + 2], radius)\n        ci += 3\n    }\n}\n\nfunction LightStripWidget(props: {\n    lightVariant: LedPixelVariant\n    numPixels: number\n    actualBrightness: number\n    server: LedPixelServer\n    widgetSize?: string\n    onLedClick?: (index: number) => void\n}) {\n    const {\n        lightVariant,\n        numPixels,\n        actualBrightness,\n        server,\n        widgetSize,\n        onLedClick,\n    } = props\n    const { background, controlBackground } = useWidgetTheme()\n    const pathRef = useRef<SVGPathElement>(undefined)\n    const pixelsRef = useRef<SVGGElement>(undefined)\n    const neoradius = 6\n    const neocircleradius = neoradius + 1\n    const sw = neoradius * 2.8\n    const isJewel = lightVariant === LedPixelVariant.Jewel\n    const isRing = lightVariant === LedPixelVariant.Ring\n    const handleLedClick = (index: number) =>\n        onLedClick ? () => onLedClick(index) : undefined\n\n    // paint svg via dom\n    const paint = () => {\n        //console.log('paint')\n        setRgbLeds(pixelsRef.current, server?.colors, neocircleradius)\n    }\n\n    // reposition pixels along the path\n    useEffect(() => {\n        const p = pathRef.current\n        const pixels = pixelsRef.current?.children\n        if (!p || !pixels) return\n\n        const offset = isJewel ? 1 : 0\n        const pn = pixels.length\n        const length = p.getTotalLength()\n        const extra = isRing || isJewel ? 0 : 1\n        const step = length / (pn - offset)\n\n        for (let i = offset; i < pn; ++i) {\n            const pixel = pixels.item(i) as SVGCircleElement\n            const pos = i - offset\n            const point = p.getPointAtLength(step * (pos + extra / 2.0))\n            pixel.setAttribute(\"cx\", \"\" + point.x)\n            pixel.setAttribute(\"cy\", \"\" + point.y)\n        }\n\n        paint()\n    }, [lightVariant, numPixels, pathRef.current, pixelsRef.current])\n\n    // render when new colors are in\n    useEffect(() => server?.subscribe(RENDER, paint), [server])\n\n    let width: number\n    let height: number\n\n    let d = \"\"\n    if (lightVariant === LedPixelVariant.Stick) {\n        const dx = neoradius * 3\n        d = `M 0 ${dx}`\n        for (let i = 0; i < numPixels; ++i) {\n            d += ` h ${dx} 0`\n        }\n        width = numPixels * dx\n        height = 2 * dx\n    } else if (lightVariant === LedPixelVariant.Strip) {\n        const side = Math.ceil(Math.sqrt(numPixels) * 1.6108)\n\n        let i = 0\n        let dir = 1\n        const dx = neoradius * 3\n        const tr = neoradius * 6\n\n        let line = 1\n        d = `M ${2 * tr} ${dx}`\n        while (i < numPixels) {\n            d += ` h ${dx * dir}`\n            if (i % side === side - 1) {\n                // turn around\n                d += ` c ${tr * dir} 0, ${tr * dir} ${tr}, 0 ${tr}`\n                dir = -dir\n                line++\n            }\n            i++\n        }\n\n        width = side * dx + 4 * tr\n        height = line * tr + 2 * dx\n    } else {\n        const n = numPixels - (isJewel ? 1 : 0)\n        const neoperimeter = n * (2.7 * neoradius)\n        const margin = 2 * neoradius\n        const ringradius = (1.5 * neoperimeter) / (2 * Math.PI)\n        width = 2 * (margin + ringradius)\n        height = width\n        const wm = width - 2 * margin\n        d = `M ${margin},${\n            height >> 1\n        } a ${ringradius},${ringradius} 0 1,0 ${wm},0 a ${ringradius},${ringradius} 0 1,0 -${wm}, 0`\n    }\n\n    // tune opacity to account for global opacity\n    const alpha = 0.7\n    const opacity = alpha + (1 - alpha) * ((actualBrightness || 0) / 0xff)\n\n    return (\n        <SvgWidget width={width} height={height} size={widgetSize}>\n            <>\n                <path\n                    ref={pathRef}\n                    d={d}\n                    fill=\"transparent\"\n                    stroke={background}\n                    strokeWidth={sw}\n                />\n                <g ref={pixelsRef} opacity={opacity}>\n                    {Array(numPixels)\n                        .fill(0)\n                        .map((_, i) => {\n                            const handleClick = handleLedClick(i)\n                            const fireClick = useFireKey(handleClick)\n                            return (\n                                <circle\n                                    className=\"clickeable\"\n                                    key={\"pixel\" + i}\n                                    r={neocircleradius}\n                                    cx={width >> 1}\n                                    cy={height >> 1}\n                                    stroke={controlBackground}\n                                    strokeWidth={1}\n                                    aria-label={`pixel ${i}`}\n                                    onPointerDown={handleClick}\n                                    onPointerEnter={handleClick}\n                                    onKeyDown={fireClick}\n                                >\n                                    <title>pixel {i}</title>\n                                </circle>\n                            )\n                        })}\n                </g>\n            </>\n        </SvgWidget>\n    )\n}\n\nfunction LightMatrixWidget(props: {\n    lightVariant: LedPixelVariant\n    actualBrightness: number\n    server: LedPixelServer\n    widgetSize?: string\n    columns: number\n    rows: number\n    onLedClick?: (index: number) => void\n}) {\n    const { columns, rows, server, widgetSize, onLedClick } = props\n    const { background, controlBackground } = useWidgetTheme()\n\n    const widgetRef = useRef<SVGGElement>()\n    // compute size\n    const pw = 8\n    const ph = 8\n    const ps = 0.5\n    const pr = 1\n    const m = 2\n    const w = columns * pw + (columns + 1) * m\n    const h = rows * ph + (rows + 1) * m\n    const handleLedClick = (index: number) =>\n        onLedClick ? () => onLedClick(index) : undefined\n\n    // paint svg via dom\n    const paint = () => setRgbLeds(widgetRef.current, server?.colors)\n\n    // add leds\n    const render = () => {\n        const ledEls: JSX.Element[] = []\n\n        let y = m\n        for (let row = 0; row < rows; row++) {\n            let x = m\n            for (let col = 0; col < columns; col++) {\n                const index = row * columns + col\n                const label = `pixel ${index} at ${row},${col}`\n                const handleClick = handleLedClick(index)\n                const fireClick = useFireKey(handleClick)\n\n                ledEls.push(\n                    <rect\n                        className=\"clickeable\"\n                        key={`l${row}-${col}`}\n                        x={x}\n                        y={y}\n                        width={pw}\n                        height={ph}\n                        rx={pr}\n                        ry={pr}\n                        fill={controlBackground}\n                        stroke={\"none\"}\n                        strokeWidth={ps}\n                        aria-label={label}\n                        onPointerDown={handleClick}\n                        onPointerEnter={handleClick}\n                        onKeyDown={fireClick}\n                    >\n                        <title>{label}</title>\n                    </rect>\n                )\n                x += pw + m\n            }\n            y += ph + m\n        }\n        return ledEls\n    }\n\n    // render when DOM render\n    useEffect(paint, [columns, rows, widgetRef.current])\n\n    // render when new colors are in\n    useEffect(() => server?.subscribe(RENDER, paint), [server])\n\n    return (\n        <SvgWidget width={w} height={h} size={widgetSize}>\n            <rect\n                x={0}\n                y={0}\n                width={w}\n                height={h}\n                rx={pr}\n                ry={pr}\n                fill={background}\n            />\n            <g ref={widgetRef}>{render()}</g>\n        </SvgWidget>\n    )\n}\n\nexport default function LightWidget(props: {\n    server: LedPixelServer\n    variant?: \"icon\" | \"\"\n    service: JDService\n    widgetCount?: number\n    visible?: boolean\n    onLedClick?: (index: number) => void\n}) {\n    const { service, server, onLedClick } = props\n\n    const numPixelsRegister = useRegister(service, LedPixelReg.NumPixels)\n    const variantRegister = useRegister(service, LedPixelReg.Variant)\n    const actualBrightnessRegister = useRegister(\n        service,\n        LedPixelReg.ActualBrightness\n    )\n    const numColumnsRegister = useRegister(service, LedPixelReg.NumColumns)\n\n    const [numPixels] = useRegisterUnpackedValue<[number]>(\n        numPixelsRegister,\n        props\n    )\n    const [lightVariant] = useRegisterUnpackedValue<[LedPixelVariant]>(\n        variantRegister,\n        props\n    )\n    const [actualBrightness] = useRegisterUnpackedValue<[number]>(\n        actualBrightnessRegister,\n        props\n    )\n    const [numColumns] = useRegisterUnpackedValue<[number]>(\n        numColumnsRegister,\n        props\n    )\n\n    if (numPixels === undefined || actualBrightness === undefined)\n        return <LoadingProgress /> // nothing to render\n\n    if (!numPixels) return null\n\n    if (lightVariant === LedPixelVariant.Matrix) {\n        const columns = numColumns || Math.floor(Math.sqrt(numPixels))\n        const rows = Math.floor(numPixels / columns)\n        return (\n            <LightMatrixWidget\n                lightVariant={lightVariant}\n                actualBrightness={actualBrightness}\n                server={server}\n                columns={columns}\n                rows={rows}\n                onLedClick={onLedClick}\n            />\n        )\n    } else\n        return (\n            <LightStripWidget\n                numPixels={numPixels}\n                lightVariant={lightVariant}\n                actualBrightness={actualBrightness}\n                server={server}\n                onLedClick={onLedClick}\n            />\n        )\n}\n","import { Grid, MenuItem, TextField, Typography } from \"@mui/material\"\nimport React, { ChangeEvent, lazy, useMemo, useState } from \"react\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { lightEncode } from \"../../../jacdac-ts/src/jdom/light\"\nimport SelectWithLabel from \"../ui/SelectWithLabel\"\nimport JDService from \"../../../jacdac-ts/src/jdom/service\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport RemoveIcon from \"@mui/icons-material/Remove\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport AddIcon from \"@mui/icons-material/Add\"\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\nimport useServiceServer from \"../hooks/useServiceServer\"\nimport LedPixelServer from \"../../../jacdac-ts/src/servers/ledpixelserver\"\nimport LightWidget from \"../widgets/LightWidget\"\nimport { LedPixelCmd } from \"../../../jacdac-ts/src/jdom/constants\"\nimport ColorButtons from \"../widgets/ColorButtons\"\nimport Suspense from \"../ui/Suspense\"\nconst ColorInput = lazy(() => import(\"../ui/ColorInput\"))\n\n/*\n0xD6: range P=0 N=length W=1 S=0- range from pixel P, Npixels long (currently unsupported: every Wpixels skip Spixels)\n*/\n\ninterface LightCommand {\n    name: string\n    args: \"C+\" | \"K\" | \"M\"\n    description: string\n}\n\nconst lightCommands = [\n    {\n        name: \"setall\",\n        args: \"C+\",\n        description: \"set all pixels in current range to given color pattern\",\n    },\n    {\n        name: \"fade\",\n        args: \"C+\",\n        description:\n            \"set pixels in current range to colors between colors in sequence\",\n    },\n    {\n        name: \"rotfwd\",\n        args: \"K\",\n        description: \"rotate (shift) pixels away from the connector\",\n        valueDescription: \"pixel positions to rotate\",\n    },\n    {\n        name: \"rotback\",\n        args: \"K\",\n        description: \"rotate (shift) pixels towards the connector\",\n        valueDescription: \"pixel positions to rotate\",\n    },\n]\n\nfunction LightCommand(props: { service: JDService; expanded: boolean }) {\n    const { service } = props\n    const [sending, setSending] = useState(false)\n\n    const [command, setCommand] = useState(lightCommands[1])\n    const [offset, setOffset] = useState(\"1\")\n    const [duration, setDuration] = useState(\"100\")\n    const [colors, setColors] = useState([\"#0000ff\", \"#ff0000\"])\n    const [mode, setMode] = useState(0)\n\n    const { name, args, description, valueDescription } = command\n    const dcolors = args == \"PC\" ? colors.slice(0, 1) : colors\n\n    const encoded = useMemo(() => {\n        let sargs = \"\"\n        let vargs = []\n        switch (args) {\n            case \"C+\":\n                sargs = Array(colors.length).fill(\"#\").join(\" \")\n                vargs = colors.map(c => parseInt(c.slice(1), 16))\n                break\n            case \"K\": {\n                sargs = \"%\"\n                vargs = [parseInt(offset)]\n                break\n            }\n            case \"PC\": {\n                sargs = \"% #\"\n                vargs = [parseInt(offset), parseInt(colors[0].slice(1), 16)]\n                break\n            }\n        }\n\n        if (mode) vargs.unshift(mode)\n\n        if (vargs.some(v => v === undefined || isNaN(v))) return undefined\n\n        let ms = parseInt(duration)\n        if (isNaN(ms)) ms = 100\n        const src = [mode && `tmpmode %`, `${name} ${sargs}`, `show %`]\n            .filter(l => !!l)\n            .join(\"\\n\")\n        const largs = [...vargs, ms]\n        const r = lightEncode(src, largs)\n        return r\n    }, [command, colors, duration, offset, mode])\n\n    const sendCommand = async () => {\n        if (!encoded) return\n        try {\n            setSending(true)\n            await service.sendCmdAsync(LedPixelCmd.Run, encoded)\n        } finally {\n            setSending(false)\n        }\n    }\n    const handleCommandChange = (\n        ev: ChangeEvent<{ name?: string; value: unknown }>\n    ) => {\n        const newName = ev.target.value as string\n        setCommand(lightCommands.find(cmd => cmd.name === newName))\n    }\n    const handleOffsetChange = (ev: ChangeEvent<{ value: string }>) => {\n        setOffset(ev.target.value)\n    }\n    const handleModeChange = (ev: ChangeEvent<any>) => {\n        const v = parseInt(ev.target.value)\n        if (!isNaN(v)) setMode(v)\n    }\n    const handleDurationChange = (ev: ChangeEvent<{ value: string }>) => {\n        setDuration(ev.target.value)\n    }\n    const handleColorChange = (index: number) => async (color: string) => {\n        const cs = colors.slice(0)\n        cs[index] = color\n        setColors(cs)\n    }\n    const handleRemoveColor = () => {\n        const cs = colors.slice(0)\n        cs.pop()\n        setColors(cs)\n    }\n    const handleAddColor = () => {\n        const cs = colors.slice(0)\n        cs.push(\"#ff0000\")\n        setColors(cs)\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Grid\n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justifyContent=\"flex-start\"\n                >\n                    <Grid item key=\"descr\" xs={12}>\n                        <Typography variant=\"caption\">{description}</Typography>\n                    </Grid>\n                    <Grid item key=\"select\" xs={12}>\n                        <SelectWithLabel\n                            disabled={sending}\n                            fullWidth={true}\n                            label=\"command\"\n                            value={name}\n                            onChange={handleCommandChange}\n                        >\n                            {lightCommands.map(cmd => (\n                                <MenuItem key={cmd.name} value={cmd.name}>\n                                    {cmd.name}\n                                </MenuItem>\n                            ))}\n                        </SelectWithLabel>\n                    </Grid>\n                    <Grid item key=\"time\" xs={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            label={\"duration (milliseconds)\"}\n                            type=\"number\"\n                            value={duration}\n                            onChange={handleDurationChange}\n                        />\n                    </Grid>\n                    <Grid item key=\"mode\" xs={6}>\n                        <SelectWithLabel\n                            fullWidth={true}\n                            label=\"update mode\"\n                            value={mode + \"\"}\n                            onChange={handleModeChange}\n                        >\n                            <MenuItem value={0}>replace</MenuItem>\n                            <MenuItem value={1}>add</MenuItem>\n                            <MenuItem value={2}>substract</MenuItem>\n                            <MenuItem value={3}>multiply</MenuItem>\n                        </SelectWithLabel>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid\n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    alignContent=\"flex-start\"\n                    justifyContent=\"flex-start\"\n                >\n                    {(args === \"K\" || args === \"PC\") && (\n                        <Grid item key=\"K\">\n                            <TextField\n                                variant=\"outlined\"\n                                type=\"number\"\n                                helperText={valueDescription}\n                                value={offset}\n                                onChange={handleOffsetChange}\n                            />\n                        </Grid>\n                    )}\n                    {(args === \"C+\" || args === \"PC\") &&\n                        dcolors.map((c, i) => (\n                            <Grid item xs key={i}>\n                                <Suspense>\n                                    <ColorInput\n                                        value={c}\n                                        onChange={handleColorChange(i)}\n                                    />\n                                </Suspense>\n                            </Grid>\n                        ))}\n                    {args === \"C+\" && (\n                        <Grid item xs key=\"minuscolor\">\n                            <IconButtonWithTooltip\n                                disabled={colors.length < 2}\n                                title={\"Remove color\"}\n                                onClick={handleRemoveColor}\n                            >\n                                <RemoveIcon />\n                            </IconButtonWithTooltip>\n                            <IconButtonWithTooltip\n                                disabled={colors.length > 4}\n                                title={\"Add color\"}\n                                onClick={handleAddColor}\n                            >\n                                <AddIcon />\n                            </IconButtonWithTooltip>\n                        </Grid>\n                    )}\n                    <Grid item xs key=\"run\">\n                        <IconButtonWithTooltip\n                            disabled={!encoded}\n                            title={\"Run command\"}\n                            onClick={sendCommand}\n                        >\n                            <PlayArrowIcon />\n                        </IconButtonWithTooltip>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default function DashboardLEDPixel(props: DashboardServiceProps) {\n    const { service, services, expanded } = props\n    const [penColor, setPenColor] = useState<number>(0x020202)\n    const server = useServiceServer<LedPixelServer>(\n        service,\n        () => new LedPixelServer()\n    )\n    const handleColorChange = (newColor: number) => setPenColor(newColor)\n    const handleLedClick: (index: number) => void = async (index: number) => {\n        const encoded = lightEncode(\n            `setone % #\nshow 20`,\n            [index, penColor]\n        )\n        await service?.sendCmdAsync(LedPixelCmd.Run, encoded)\n    }\n    return (\n        <>\n            {server && (\n                <LightWidget\n                    server={server}\n                    widgetCount={services.length}\n                    onLedClick={handleLedClick}\n                    {...props}\n                />\n            )}\n            <ColorButtons color={penColor} onColorChange={handleColorChange} />\n            {expanded && <LightCommand service={service} expanded={expanded} />}\n        </>\n    )\n}\n","import {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select,\n} from \"@mui/material\"\nimport React, { ChangeEvent, ReactNode } from \"react\"\nimport { useId } from \"react-use-id-hook\"\n\nexport default function SelectWithLabel(props: {\n    required?: boolean\n    label?: string\n    disabled?: boolean\n    error?: string\n    value?: string\n    placeholder?: string\n    type?: string\n    fullWidth?: boolean\n    onChange?: (ev: ChangeEvent<{ name?: string; value: unknown }>) => void\n    onClose?: (ev: ChangeEvent<unknown>) => void\n    helperText?: string\n    children?: ReactNode\n    none?: ReactNode\n}) {\n    const {\n        label,\n        fullWidth,\n        required,\n        disabled,\n        value,\n        error,\n        placeholder,\n        onChange,\n        onClose,\n        children,\n        helperText,\n        type,\n        none,\n    } = props\n    const labelId = useId()\n    const descrId = useId()\n    const id = useId()\n    const hasDescr = !!helperText || !!error\n\n    return (\n        <FormControl fullWidth={fullWidth} variant=\"outlined\">\n            <InputLabel id={labelId} key=\"label\">\n                {required ? `${label} *` : label}\n            </InputLabel>\n            <Select\n                id={id}\n                disabled={disabled}\n                label={label}\n                value={value}\n                error={!!error}\n                fullWidth={true}\n                placeholder={placeholder}\n                type={type}\n                labelId={labelId}\n                aria-describedby={hasDescr ? descrId : undefined}\n                onChange={onChange}\n                onClose={onClose}\n            >\n                {none !== undefined && (\n                    <MenuItem key={\"none\"} value={\"\"}>\n                        {none}\n                    </MenuItem>\n                )}\n                {children}\n            </Select>\n            {hasDescr && (\n                <FormHelperText id={descrId}>\n                    {error || helperText}\n                </FormHelperText>\n            )}\n        </FormControl>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React from \"react\"\nimport { rgbToHtmlColor } from \"../../../jacdac-ts/src/jdom/utils\"\nimport RadioButtonCheckedIcon from \"@mui/icons-material/RadioButtonChecked\"\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\"\nimport IconButtonWithTooltip from \"../ui/IconButtonWithTooltip\"\n\nexport default function ColorButtons(props: {\n    colors?: { name: string; value: number }[]\n    color: number\n    onColorChange?: (newLedColor: number) => void\n}) {\n    const DEFAULT_COLORS = [\n        {\n            name: \"red\",\n            value: 0xff0000,\n        },\n        {\n            name: \"violet\",\n            value: 0xff00ff,\n        },\n        { name: \"blue\", value: 0x0000ff },\n        { name: \"green\", value: 0x00ff00 },\n        { name: \"yellow\", value: 0xffff00 },\n        { name: \"black\", value: 0x010101 },\n    ]\n    const { colors = DEFAULT_COLORS, color, onColorChange } = props\n    const handleSetColor = (col: number) => () => onColorChange(col)\n    return (\n        <Grid container spacing={1}>\n            {colors.map(({ name, value }) => (\n                <Grid key={name} item xs={colors.length === 2 ? 4 : 2}>\n                    <IconButtonWithTooltip\n                        style={{ color: rgbToHtmlColor(value) }}\n                        onClick={handleSetColor(value)}\n                        size=\"large\"\n                        title={name}\n                    >\n                        {value !== color ? (\n                            <RadioButtonUncheckedIcon />\n                        ) : (\n                            <RadioButtonCheckedIcon />\n                        )}\n                    </IconButtonWithTooltip>\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n"],"names":["LIGHT_PROG_COL1_SET","LIGHT_PROG_FADE","LIGHT_PROG_FADE_HSV","LIGHT_PROG_MODE","LIGHT_PROG_MODE1","LIGHT_PROG_RANGE","LIGHT_PROG_ROTATE_BACK","LIGHT_PROG_ROTATE_FWD","LIGHT_PROG_SET_ALL","LIGHT_PROG_SHOW","fromHex","cmdCode","cmd","undefined","isWhiteSpace","code","lightEncode","format","args","outarr","colors","pos","currcmd","pushNumber","n","Error","push","flush","length","c","nextToken","charCodeAt","beg","slice","token","t0","f","parseFloat","isNaN","mm","Math","round","parseInt","v","shift","Array","isArray","vv","b","Uint8Array","React","useEffect","useRef","LedPixelReg","LedPixelVariant","RENDER","SvgWidget","useWidgetTheme","useRegisterUnpackedValue","LoadingProgress","useRegister","useFireKey","rgbToHsl","r","g","r$","g$","b$","cMin","min","cMax","max","cDelta","h","s","l","maxAndMin","floor","setRgb","el","radius","hsl","fill","setAttribute","nr","setRgbLeds","pixelsContainer","pixels","children","pn","ci","i","pixel","item","LightStripWidget","props","lightVariant","numPixels","actualBrightness","server","widgetSize","onLedClick","background","controlBackground","pathRef","pixelsRef","neoradius","neocircleradius","sw","isJewel","Jewel","isRing","Ring","handleLedClick","index","paint","current","p","offset","getTotalLength","extra","step","point","getPointAtLength","x","y","subscribe","width","height","d","Stick","dx","Strip","side","ceil","sqrt","dir","tr","line","neoperimeter","margin","ringradius","PI","wm","alpha","opacity","map","_","handleClick","fireClick","LightMatrixWidget","columns","rows","widgetRef","pw","ph","ps","pr","m","w","render","ledEls","row","col","label","LightWidget","service","numPixelsRegister","NumPixels","variantRegister","Variant","actualBrightnessRegister","ActualBrightness","numColumnsRegister","NumColumns","numColumns","Matrix","Grid","MenuItem","TextField","Typography","lazy","useMemo","useState","SelectWithLabel","RemoveIcon","AddIcon","PlayArrowIcon","IconButtonWithTooltip","useServiceServer","LedPixelServer","LedPixelCmd","ColorButtons","Suspense","ColorInput","lightCommands","name","description","valueDescription","LightCommand","sending","setSending","command","setCommand","setOffset","duration","setDuration","setColors","mode","setMode","dcolors","encoded","sargs","vargs","join","unshift","some","ms","src","filter","largs","sendCommand","sendCmdAsync","Run","handleCommandChange","ev","newName","target","value","find","handleOffsetChange","handleModeChange","handleDurationChange","handleColorChange","color","cs","handleRemoveColor","pop","handleAddColor","DashboardLEDPixel","services","expanded","penColor","setPenColor","newColor","FormControl","FormHelperText","InputLabel","Select","useId","fullWidth","required","disabled","error","placeholder","onChange","onClose","helperText","type","none","labelId","descrId","id","hasDescr","rgbToHtmlColor","RadioButtonCheckedIcon","RadioButtonUncheckedIcon","DEFAULT_COLORS","onColorChange","handleSetColor"],"sourceRoot":""}