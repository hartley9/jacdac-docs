{"version":3,"file":"571-f662541428bb1a27a8a8.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASY,oBAAT,CAA8BC,KAA9B,EAA4D;AACvE,MAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBF,KAA9B;AACA,MAAM;AAAEG,IAAAA;AAAF,MAAUb,iDAAU,CAAqBK,gEAArB,CAA1B;AACA,MAAMS,gBAAgB,GAAGN,uEAAW,CAACG,OAAD,EAAUV,sGAAV,CAApC;AACA,MAAMe,QAAQ,GAAGb,wFAAoB,CAACW,gBAAD,EAAmBJ,KAAnB,CAArC;;AACA,MAAMO,aAAa;AAAA,gHAAG,WAAOC,EAAP,EAAWC,OAAX,EAAgC;AAClD,YAAML,gBAAgB,CAACM,gBAAjB,CAAkCD,OAAlC,EAA2C,IAA3C,CAAN;AACH,KAFkB;;AAAA,oBAAbF,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAGA,MAAMI,QAAQ,GAAGnB,kEAAK,EAAtB;AACA,MAAMoB,OAAO,GAAGpB,kEAAK,EAArB;AACA,MAAMqB,WAAW,GAAGjB,sEAAS,CAACO,GAAD,EAAMW,CAAC,IAAIA,CAAC,CAACD,WAAb,CAA7B;AACA,MAAME,KAAK,GAAGnB,sEAAS,CAACiB,WAAD,EAAcC,CAAC,IAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEC,KAAtB,CAAvB;AACA,MAAIT,QAAQ,KAAKU,SAAjB,EAA4B,oBAAO,iDAAC,oEAAD,OAAP;AAE5B,sBACI,oGACKD,KAAK,iBACF,iDAAC,gEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,gEAAD;AAAM,aAAS,MAAf;AAAgB,WAAO,EAAE,CAAzB;AAA4B,aAAS,EAAC;AAAtC,KACKA,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACX,iDAAC,gEAAD;AAAM,OAAG,EAAEA,IAAI,CAACC,IAAhB;AAAsB,QAAI,MAA1B;AAA2B,MAAE;AAA7B,kBACI,iDAAC,uEAAD;AAAc,QAAI,EAAED;AAApB,IADJ,CADH,CADL,CADJ,CAFR,EAYKhB,QAAQ,iBACL,iDAAC,gEAAD;AAAM,QAAI,MAAV;AAAW,MAAE,EAAE;AAAf,kBACI,iDAAC,+DAAD;AACI,MAAE,EAAES,QADR;AAEI,WAAO,EAAEL,QAFb;AAGI,YAAQ,EAAEC;AAHd,IADJ,eAMI;AAAO,MAAE,EAAEK,OAAX;AAAoB,WAAO,EAAED;AAA7B,yBANJ,CAbR,CADJ;AA2BH","sources":["webpack://jacdac-docs/./src/components/dashboard/DashboardRoleManager.tsx"],"sourcesContent":["import { Grid, List, Switch } from \"@mui/material\"\nimport React, { useContext } from \"react\"\nimport { RoleManagerReg } from \"../../../jacdac-ts/src/jdom/constants\"\nimport { DashboardServiceProps } from \"./DashboardServiceWidget\"\nimport { useId } from \"react-use-id-hook\"\nimport { useRegisterBoolValue } from \"../../jacdac/useRegisterValue\"\nimport LoadingProgress from \"../ui/LoadingProgress\"\nimport JacdacContext, { JacdacContextProps } from \"../../jacdac/Context\"\nimport useChange from \"../../jacdac/useChange\"\nimport RoleListItem from \"../services/RoleListItem\"\nimport useRegister from \"../hooks/useRegister\"\n\nexport default function DashboardRoleManager(props: DashboardServiceProps) {\n    const { service, expanded } = props\n    const { bus } = useContext<JacdacContextProps>(JacdacContext)\n    const autoBindRegister = useRegister(service, RoleManagerReg.AutoBind)\n    const autoBind = useRegisterBoolValue(autoBindRegister, props)\n    const handleChecked = async (ev, checked: boolean) => {\n        await autoBindRegister.sendSetBoolAsync(checked, true)\n    }\n    const switchId = useId()\n    const labelId = useId()\n    const roleManager = useChange(bus, _ => _.roleManager)\n    const roles = useChange(roleManager, _ => _?.roles)\n    if (autoBind === undefined) return <LoadingProgress />\n\n    return (\n        <>\n            {roles && (\n                <Grid item xs={12}>\n                    <Grid container spacing={1} direction=\"row\">\n                        {roles.map(role => (\n                            <Grid key={role.name} item xs>\n                                <RoleListItem role={role} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            )}\n            {expanded && (\n                <Grid item xs={12}>\n                    <Switch\n                        id={switchId}\n                        checked={autoBind}\n                        onChange={handleChecked}\n                    />\n                    <label id={labelId} htmlFor={switchId}>\n                        auto assign roles\n                    </label>\n                </Grid>\n            )}\n        </>\n    )\n}\n"],"names":["Grid","Switch","React","useContext","RoleManagerReg","useId","useRegisterBoolValue","LoadingProgress","JacdacContext","useChange","RoleListItem","useRegister","DashboardRoleManager","props","service","expanded","bus","autoBindRegister","AutoBind","autoBind","handleChecked","ev","checked","sendSetBoolAsync","switchId","labelId","roleManager","_","roles","undefined","map","role","name"],"sourceRoot":""}