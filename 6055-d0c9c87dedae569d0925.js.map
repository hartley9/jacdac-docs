{"version":3,"file":"6055-d0c9c87dedae569d0925.js","mappings":"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","sources":["webpack://jacdac-docs/./node_modules/@mui/icons-material/Edit.js","webpack://jacdac-docs/./src/components/ui/CodeSandboxButton.tsx","webpack://jacdac-docs/./src/components/ui/VanillaCodeButton.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { useContext, useState } from \"react\"\nimport AppContext from \"../AppContext\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport IconButtonWithTooltip from \"./IconButtonWithTooltip\"\nimport useMediaQueries from \"../hooks/useMediaQueries\"\nimport { Button } from \"gatsby-material-ui-components\"\n\nexport default function CodeSandboxButton(props: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    files: () => Record<string, any>\n    startFile?: string\n}) {\n    const { files, startFile } = props\n    const { setError } = useContext(AppContext)\n    const { mobile } = useMediaQueries()\n    const [importing, setImporting] = useState(false)\n\n    const handleClick = async () => {\n        const f = files()\n        const file =\n            startFile ||\n            Object.keys(f).filter(fn => /\\.js$/.test(fn))[0] ||\n            \"index.js\"\n        try {\n            setImporting(true)\n            const x = await fetch(\n                \"https://codesandbox.io/api/v1/sandboxes/define?json=1\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                    body: JSON.stringify({\n                        files: f,\n                    }),\n                }\n            )\n            const data = await x.json()\n            const url = `https://codesandbox.io/s/${data.sandbox_id}?file=/${file}`\n            window.location.href = url\n        } catch (error) {\n            setError(error)\n        } finally {\n            setImporting(false)\n        }\n    }\n\n    return mobile ? (\n        <IconButtonWithTooltip\n            color=\"primary\"\n            onClick={handleClick}\n            disabled={importing}\n            title=\"Try in CodeSandbox\"\n        >\n            <EditIcon />\n        </IconButtonWithTooltip>\n    ) : (\n        <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={handleClick}\n            startIcon={<EditIcon />}\n            disabled={importing}\n        >\n            Try in CodeSandbox\n        </Button>\n    )\n}\n","import React, { useCallback } from \"react\"\nimport CodeSandboxButton from \"./CodeSandboxButton\"\nimport packageJson from \"../../../jacdac-ts/package.json\"\n\nexport default function VanillaCodeButton(props: {\n    title?: string\n    source: { js?: string; html?: string }\n}) {\n    const { title, source } = props\n    const { js = \"\", html = \"\" } = source\n\n    const files = useCallback(() => {\n        // find imports\n        const i = js.indexOf(\"\\n\\n\")\n        const imports = js.slice(0, i)\n        const code = js.slice(i + 2).trim()\n\n        const indexTs = `\nimport \"milligram\";\nimport { createWebBus, CONNECTION_STATE } from \"jacdac-ts\";\n${imports}\n\nconst connectEl = document.getElementById(\"connectbtn\") as HTMLButtonElement;\nconst logEl = document.getElementById(\"log\") as HTMLPreElement;\nconst log = (msg: any) => {\n  console.log(msg);\n  logEl.innerText += msg + \"\\\\n\";\n};\n// create WebUSB bus\nconst bus = createWebBus();\n// track connection state and update button\nbus.on(CONNECTION_STATE, () => {\n  connectEl.innerText = bus.connected\n    ? \"connected ðŸŽ‰\"\n    : bus.disconnected\n    ? \"connect\"\n    : \"ðŸ‘€ðŸ‘€ðŸ‘€\";\n});\n// connect must be triggered by a user interaction\nconnectEl.onclick = async () =>\n  bus.connected ? bus.disconnect() : bus.connect();\n// we're ready\nlog(\"click connect to start\")\n\n${code}\n`\n        const indexHtml = `\n<html>\n    <body>\n        <h1>Jacdac ${title || \"demo\"}</h1>\n        <div>\n        <button id=\"connectbtn\">connect</button>\n        </div>    \n\n${html}\n        <pre id=\"log\"></pre>\n\n    <footer>\n        <small>\n        Need to learn more about Jacdac?\n        <a target=\"_blank\" href=\"https://aka.ms/jacdac\">Read the docs</a>\n        or\n        <a\n            target=\"_blank\"\n            href=\"https://github.com/microsoft/jacdac/discussions\"\n            >start a discussion</a\n        >.\n        </small>\n    </footer>\n    <script src=\"./index.ts\"></script>\n    </body>\n</html>    \n        `\n\n        return {\n            \"package.json\": {\n                content: {\n                    name: \"vanilla-jacdac-typescript\",\n                    version: \"0.0.0\",\n                    description:\n                        \"Vanilla Jacdac + TypeScript sandbox - https://aka.ms/jacdac\",\n                    main: \"index.html\",\n                    scripts: {\n                        start: \"parcel index.html --open\",\n                        build: \"parcel build index.html\",\n                    },\n                    dependencies: {\n                        \"jacdac-ts\": `^${packageJson.version}`,\n                        milligram: \"^1.4.1\",\n                        \"parcel-bundler\": \"^2.0.0\",\n                    },\n                    devDependencies: {\n                        typescript: \"^4.4.3\",\n                    },\n                    resolutions: {\n                        \"@babel/preset-env\": \"^7.15.8\",\n                    },\n                    keywords: [\"jacdac\", \"typescript\", \"javascript\"],\n                    browserslist: [\"defaults\"],\n                },\n            },\n            \"index.ts\": {\n                content: indexTs,\n            },\n            \"index.html\": {\n                content: indexHtml,\n            },\n        }\n    }, [title, source, js, html])\n\n    return <CodeSandboxButton files={files} />\n}\n"],"names":["React","useContext","useState","AppContext","EditIcon","IconButtonWithTooltip","useMediaQueries","Button","CodeSandboxButton","props","files","startFile","setError","mobile","importing","setImporting","handleClick","f","file","Object","keys","filter","fn","test","x","fetch","method","headers","Accept","body","JSON","stringify","data","json","url","sandbox_id","window","location","href","error","useCallback","packageJson","VanillaCodeButton","title","source","js","html","i","indexOf","imports","slice","code","trim","indexTs","indexHtml","content","name","version","description","main","scripts","start","build","dependencies","milligram","devDependencies","typescript","resolutions","keywords","browserslist"],"sourceRoot":""}