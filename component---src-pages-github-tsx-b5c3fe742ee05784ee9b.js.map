{"version":3,"file":"component---src-pages-github-tsx-b5c3fe742ee05784ee9b.js","mappings":"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","sources":["webpack://jacdac-docs/./src/components/GithubRepositoryCardHeader.tsx","webpack://jacdac-docs/./src/components/useFetch.ts","webpack://jacdac-docs/./src/components/github.ts","webpack://jacdac-docs/./src/components/semver.ts","webpack://jacdac-docs/./src/components/GithubRepositoryCard.tsx","webpack://jacdac-docs/./src/components/GithubRespositoryList.tsx","webpack://jacdac-docs/./src/pages/github.tsx"],"sourcesContent":["import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Box, CardHeader, Typography } from \"@mui/material\"\nimport {\n    GithubRepository,\n    normalizeSlug,\n    useFetchJSON,\n    useLatestFirmwareRelease,\n    useRepository,\n} from \"./github\"\nimport GitHubIcon from \"@mui/icons-material/GitHub\"\nimport { Link } from \"gatsby-theme-material-ui\"\nimport LoadingProgress from \"./ui/LoadingProgress\"\n\nfunction MakeCodeFolderLink(props: {\n    slug: string\n    folder: string\n    repo: GithubRepository\n}) {\n    const { slug, folder, repo } = props\n    const { response: pxtJson } = useFetchJSON<{\n        name: string\n        description: string\n    }>(slug, repo.default_branch, \"pxt.json\", \"application/json\")\n    return (\n        <Link\n            href={`${repo.html_url}/tree/${repo.default_branch}/${folder}`}\n            target=\"blank\"\n        >\n            <Typography component=\"span\" variant=\"h5\">\n                {`${repo.name}/ ${pxtJson?.name || folder}`}\n            </Typography>\n        </Link>\n    )\n}\n\nexport default function GithubRepositoryCardHeader(props: {\n    slug: string\n    showRelease?: boolean\n}) {\n    const { slug, showRelease } = props\n    const { response: repo, loading: repoLoading, status } = useRepository(slug)\n    const { response: release } = useLatestFirmwareRelease(showRelease && slug)\n    const { folder } = normalizeSlug(slug)\n\n    const title = repo ? (\n        <>\n            <Typography component=\"span\" variant=\"h6\">\n                {repo.organization?.login}\n            </Typography>\n            <Box component=\"span\" ml={0.5} mr={0.5}>\n                /\n            </Box>\n            {folder ? (\n                <MakeCodeFolderLink slug={slug} folder={folder} repo={repo} />\n            ) : (\n                <Link href={repo.html_url} target=\"_blank\" underline=\"hover\">\n                    <Typography component=\"span\" variant=\"h5\">\n                        {repo.name}\n                    </Typography>\n                </Link>\n            )}\n        </>\n    ) : (\n        <>\n            <Link\n                href={`https://github.com/${slug}`}\n                target=\"_blank\"\n                underline=\"hover\"\n            >\n                <Typography component=\"span\" variant=\"h6\">\n                    {slug}\n                </Typography>\n            </Link>\n            {repoLoading && <LoadingProgress />}\n            {status !== 403 && !repoLoading && !repo && (\n                <Typography component=\"p\" variant=\"caption\">\n                    Unable to find repository.\n                </Typography>\n            )}\n        </>\n    )\n\n    return (\n        <CardHeader\n            title={title}\n            subheader={\n                release && (\n                    <Link\n                        color=\"textSecondary\"\n                        target=\"_blank\"\n                        to={release.html_url}\n                    >\n                        {release.version}\n                    </Link>\n                )\n            }\n            avatar={<GitHubIcon />}\n        />\n    )\n}\n","import { useState } from \"react\"\nimport useEffectAsync from \"./useEffectAsync\"\n\nexport default function useFetch<T>(url: RequestInfo, options?: RequestInit) {\n    const [response, setResponse] = useState<T>(undefined)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [error, setError] = useState<any>(undefined)\n    const [status, setStatus] = useState<number>(undefined)\n    const [loading, setLoading] = useState(true) // start in loading mode\n\n    useEffectAsync(\n        async mounted => {\n            setLoading(true)\n            try {\n                if (!url) {\n                    setStatus(404)\n                    setResponse(undefined)\n                } else {\n                    const res = await fetch(url, options)\n                    if (!mounted()) return\n                    const status = res.status\n                    setStatus(status)\n                    if (status >= 200 && status <= 204) {\n                        const json = await res.json()\n                        if (!mounted()) return\n                        setResponse(json)\n                    }\n                }\n            } catch (error) {\n                if (!mounted()) return\n                setError(error)\n            } finally {\n                if (mounted()) setLoading(false)\n            }\n        },\n        [url]\n    )\n\n    return {\n        response,\n        error,\n        status,\n        loading,\n    }\n}\n","import { semverCmp } from \"./semver\"\nimport useFetch from \"./useFetch\"\n\nconst ROOT = \"https://api.github.com/\"\nexport const GITHUB_API_KEY = \"githubtoken\"\n\ninterface GithubContent {\n    name: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n    type: \"file\" | \"dir\" | \"symlink\"\n}\n\nexport interface GithubFirmwareRelease {\n    version: string\n    sha: string\n    size: number\n    html_url: string\n    download_url: string\n}\n\nexport interface GithubUser {\n    login: string\n    avatar_url: string\n    html_url: string\n}\n\nexport interface GithubRepository {\n    name: string\n    full_name: string\n    private: boolean\n    owner: GithubUser\n    description: string\n    fork: boolean\n    homepage: string\n    default_branch: string\n    organization: GithubUser\n    html_url: string\n}\n\nexport interface GithubRelease {\n    url: string\n    tag_name: string\n    name: string\n}\n\nfunction contentToFirmwareRelease(\n    content: GithubContent\n): GithubFirmwareRelease {\n    // filter out non-file, non-uf2\n    const version =\n        content?.type === \"file\" &&\n        /^fw-(\\d+\\.\\d+.\\d+)\\.uf2$/.exec(content.name)?.[1]\n    if (!version) return undefined\n\n    return {\n        version,\n        sha: content.sha,\n        size: content.size,\n        html_url: content.html_url,\n        download_url: content.download_url,\n    }\n}\n\nfunction contentsToFirmwareReleases(contents: GithubContent[]) {\n    return contents\n        ?.map(contentToFirmwareRelease)\n        .filter(r => !!r)\n        .sort((l, r) => -semverCmp(l.version, r.version))\n}\n\nexport function normalizeSlug(slug: string) {\n    if (!slug) return {}\n    const cleaned = slug.replace(/^https:\\/\\/github.com\\//, \"\")\n    const parts = cleaned.split(\"/\")\n    return {\n        repoPath: `${parts[0]}/${parts[1]}`,\n        folder: parts.slice(2).join(\"/\"),\n    }\n}\n\nexport interface GitHubApiOptions {\n    ignoreThrottled?: boolean\n}\n\nexport function parseRepoUrl(url: string): { owner: string; name: string } {\n    const m = /^https:\\/\\/github\\.com\\/([^/ \\t]+)\\/([^/ \\t]+)\\/?$/.exec(\n        url || \"\"\n    )\n    if (m) return { owner: m[1], name: m[2] }\n    return undefined\n}\n\nexport async function fetchLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n): Promise<{\n    status: number\n    release?: GithubFirmwareRelease\n}> {\n    // https://api.github.com/repos/microsoft/jacdac-msr-modules/contents/dist\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `${ROOT}repos/${repoPath}/contents/dist`\n    const resp = await fetch(uri)\n    //    console.log(resp)\n    const { status } = resp\n    switch (status) {\n        case 200:\n        case 204: {\n            const contents: GithubContent[] = await resp.json()\n            const releases = contentsToFirmwareReleases(contents)\n            return { release: releases[0], status }\n        }\n        case 404:\n            // unknow repo or no access\n            return { status }\n        case 403:\n            // throttled\n            if (options?.ignoreThrottled) return { status }\n            throw new Error(\"Too many calls to GitHub, try again later\")\n    }\n    throw new Error(`unknown status code ${resp.status}`)\n}\n\nexport async function fetchFirmwareReleaseBinary(\n    slug: string,\n    version: string\n): Promise<Blob> {\n    // we are not using the release api because of CORS.\n    const { repoPath } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/main/dist/fw-${version}.uf2`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: \"application/octet-stream\" },\n    })\n    if (req.status == 200) {\n        const firmware = await req.blob()\n        return firmware\n    }\n    return undefined\n}\n\nexport async function fetchText(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: string\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    const req = await fetch(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n    if (req.status == 200) {\n        const src = await req.text()\n        return src\n    }\n    return undefined\n}\n\nfunction useFetchApi<T>(path: string, options?: GitHubApiOptions) {\n    const res = useFetch<T>(path ? `${ROOT}${path}` : undefined)\n    if (res.status !== undefined)\n        switch (res.status) {\n            case 200:\n            case 201:\n            case 202:\n            case 203:\n            case 204:\n                break\n            case 404:\n                // unknow repo or no access\n                res.response = undefined\n                break\n            case 403:\n                // throttled\n                if (options?.ignoreThrottled) {\n                    res.response = undefined\n                    return res\n                } else\n                    throw new Error(\"Too many calls to GitHub, try again later\")\n\n            default:\n                console.log(`unknown status`, res)\n                throw new Error(`Unknown response from GitHub ${res.status}`)\n        }\n    return res\n}\n\nexport function useFetchJSON<T>(\n    slug: string,\n    tag: string,\n    path: string,\n    mimeType: \"text/plain\" | \"application/json\"\n) {\n    const { repoPath, folder } = normalizeSlug(slug)\n    const downloadUrl = `https://raw.githubusercontent.com/${repoPath}/${tag}/${\n        folder ? `${folder}/` : \"\"\n    }${path}`\n    return useFetch<T>(downloadUrl, {\n        headers: { Accept: mimeType },\n    })\n}\n\nexport function useRepository(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = repoPath ? `repos/${repoPath}` : undefined\n    const res = useFetchApi<GithubRepository>(path, { ignoreThrottled: true })\n    return res\n}\n\nexport function useLatestRelease(slug: string) {\n    const { repoPath } = normalizeSlug(slug)\n    const path = `repos/${repoPath}/releases/latest`\n    const res = useFetchApi<GithubRelease>(path)\n    return res\n}\n\nexport function useLatestReleaseAsset(url: string) {\n    const [, slug, filename] =\n        /^https:\\/\\/github.com\\/(.+)\\/releases\\/download\\/.+\\/(.+)$/i.exec(\n            url\n        ) || []\n    const { status, response } = useLatestRelease(slug)\n    console.log({ url, slug, filename, status, response })\n    if (status === 200 && response) {\n        const { tag_name, name } = response\n        return {\n            name,\n            version: tag_name,\n            assertUrl: `https://github.com/${slug}/releases/download/${tag_name}/${filename}`,\n        }\n    } else return {}\n}\n\nexport function useLatestFirmwareRelease(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    const resp = useLatestFirmwareReleases(slug, options)\n    return {\n        ...resp,\n        response: resp.response?.[0],\n    }\n}\n\nexport function useLatestFirmwareReleases(\n    slug: string,\n    options?: GitHubApiOptions\n) {\n    if (!slug)\n        return {\n            response: undefined,\n            loading: false,\n            error: undefined,\n            status: undefined,\n        }\n    const { repoPath } = normalizeSlug(slug)\n    const uri = `repos/${repoPath}/contents/dist`\n    const res = useFetchApi<GithubContent[]>(uri, {\n        ...(options || {}),\n        ignoreThrottled: true,\n    })\n    return {\n        ...res,\n        response: contentsToFirmwareReleases(res.response),\n    }\n}\n","interface Version {\n    major: number\n    minor: number\n    patch: number\n    pre: string[]\n    build: string[]\n}\n\nfunction cmp(a: Version, b: Version) {\n    if (!a)\n        if (!b) return 0\n        else return 1\n    else if (!b) return -1\n    else {\n        let d = a.major - b.major || a.minor - b.minor || a.patch - b.patch\n        if (d) return d\n        if (a.pre.length == 0 && b.pre.length > 0) return 1\n        if (a.pre.length > 0 && b.pre.length == 0) return -1\n        for (let i = 0; i < a.pre.length + 1; ++i) {\n            const aa = a.pre[i]\n            const bb = b.pre[i]\n            if (!aa)\n                if (!bb) return 0\n                else return -1\n            else if (!bb) return 1\n            else if (/^\\d+$/.test(aa))\n                if (/^\\d+$/.test(bb)) {\n                    d = parseInt(aa) - parseInt(bb)\n                    if (d) return d\n                } else return -1\n            else if (/^\\d+$/.test(bb)) return 1\n            else {\n                d = strcmp(aa, bb)\n                if (d) return d\n            }\n        }\n        return 0\n    }\n}\n\nfunction tryParse(v: string): Version {\n    if (!v) return null\n    if (\"*\" === v) {\n        return {\n            major: Number.MAX_SAFE_INTEGER,\n            minor: Number.MAX_SAFE_INTEGER,\n            patch: Number.MAX_SAFE_INTEGER,\n            pre: [],\n            build: [],\n        }\n    }\n    if (/^v\\d/i.test(v)) v = v.slice(1)\n    const m =\n        /^(\\d+)\\.(\\d+)\\.(\\d+)(-([0-9a-zA-Z\\-\\.]+))?(\\+([0-9a-zA-Z\\-\\.]+))?$/.exec(\n            v\n        )\n    if (m)\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            patch: parseInt(m[3]),\n            pre: m[5] ? m[5].split(\".\") : [],\n            build: m[7] ? m[7].split(\".\") : [],\n        }\n    return null\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a === b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function semverCmp(a: string, b: string) {\n    const aa = tryParse(a)\n    const bb = tryParse(b)\n    if (!aa && !bb) return strcmp(a, b)\n    else return cmp(aa, bb)\n}\n","import React from \"react\"\n// tslint:disable-next-line: no-submodule-imports\nimport { Card, CardContent, Typography } from \"@mui/material\"\nimport { useRepository } from \"./github\"\nimport GithubRepositoryCardHeader from \"./GithubRepositoryCardHeader\"\n\nexport default function GithubRepositoryCard(props: {\n    slug: string\n    showRelease?: boolean\n    showDescription?: boolean\n}) {\n    const { slug, showRelease, showDescription } = props\n    const { response: repo } = useRepository(slug)\n    const description = showDescription && repo?.description\n\n    return (\n        <Card>\n            <GithubRepositoryCardHeader slug={slug} showRelease={showRelease} />\n            {description && (\n                <CardContent>\n                    {description && <Typography>{description}</Typography>}\n                </CardContent>\n            )}\n        </Card>\n    )\n}\n","import { Grid } from \"@mui/material\"\nimport React from \"react\"\nimport GithubRepositoryCard from \"./GithubRepositoryCard\"\n\nexport default function GithubRepositoryList(props: {\n    repos: string[]\n    showDescription?: boolean\n    showRelease?: boolean\n}) {\n    const { repos, ...others } = props\n    return (\n        <Grid container spacing={2}>\n            {repos.map(repo => (\n                <Grid item xs={12} key={repo}>\n                    <GithubRepositoryCard slug={repo} {...others} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n","import { Link } from \"gatsby-theme-material-ui\"\nimport React from \"react\"\nimport GithubRepositoryList from \"../components/GithubRespositoryList\"\n\nexport default function Page() {\n    return (\n        <>\n            <h1>GitHub Repositories</h1>\n            <p>\n                Jacdac is Open Source on GitHub. Here is a map to help you find\n                the part you want:\n            </p>\n            <h2>Discussions</h2>\n            <p>\n                Post your questions, bugs, suggestions on the centralized\n                discussions at{\" \"}\n                <a href=\"https://github.com/microsoft/jacdac/discussions\">\n                    https://github.com/microsoft/jacdac/discussions\n                </a>\n                .\n            </p>\n            <h2>Specification</h2>\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac\"]}\n                showDescription={true}\n            />\n            <h2>Module Development</h2>\n\n            <h3>Schematics and Server C SDK</h3>\n\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac-ddk\", \"microsoft/jacdac-c\"]}\n                showDescription={true}\n            />\n\n            <h3>Server SDKs</h3>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/jacdac-stm32x0\",\n                    \"microsoft/jacdac-esp32\",\n                    \"microsoft/jacdac-padauk\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2>Client SDKs</h2>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/jacdac-ts\",\n                    \"microsoft/react-jacdac\",\n                    \"microsoft/pxt-jacdac\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2>Integrations</h2>\n\n            <GithubRepositoryList\n                repos={[\"microsoft/node-red-contrib-jacdac\"]}\n                showDescription={true}\n            />\n\n            <h2>Embedded Tools</h2>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/pxt-jacdac/tools/multitool\",\n                    \"microsoft/pxt-jacdac/tools/hid-events\",\n                    \"microsoft/pxt-jacdac/devices/microbit\",\n                    \"microsoft/pxt-jacdac/tools/microbit-oob\",\n                ]}\n                showDescription={false}\n            />\n\n            <h2> Documentation</h2>\n\n            <GithubRepositoryList\n                repos={[\"microsoft/jacdac-docs\"]}\n                showDescription={true}\n            />\n\n            <h2>Experimental</h2>\n\n            <GithubRepositoryList\n                repos={[\n                    \"microsoft/jacdac-circuitpython\",\n                    \"microsoft/jacdac-dotnet\",\n                    \"microsoft/jupyter-jacdac\",\n                ]}\n                showDescription={true}\n            />\n\n            <h2> Microsoft Open Source Code of Conduct</h2>\n\n            <p>\n                This project is hosted at{\" \"}\n                <Link href=\"https://github.com/microsoft/jacdac-docs\">\n                    https://github.com/microsoft/jacdac-docs\n                </Link>\n                . This project has adopted the{\" \"}\n                <Link href=\"https://opensource.microsoft.com/codeofconduct/\">\n                    Microsoft Open Source Code of Conduct\n                </Link>\n                .\n            </p>\n\n            <h3>Resources</h3>\n            <ul>\n                <li>\n                    <Link href=\"https://opensource.microsoft.com/codeofconduct/\">\n                        Microsoft Open Source Code of Conduct\n                    </Link>\n                </li>\n                <li>\n                    <Link href=\"https://opensource.microsoft.com/codeofconduct/faq/\">\n                        Microsoft Code of Conduct FAQ\n                    </Link>\n                </li>\n                <li>\n                    Contact{\" \"}\n                    <Link href=\"mailto:opencode@microsoft.com\">\n                        opencode@microsoft.com\n                    </Link>{\" \"}\n                    with questions or concerns\n                </li>\n            </ul>\n        </>\n    )\n}\n"],"names":["React","Box","CardHeader","Typography","normalizeSlug","useFetchJSON","useLatestFirmwareRelease","useRepository","GitHubIcon","Link","LoadingProgress","MakeCodeFolderLink","props","slug","folder","repo","response","pxtJson","default_branch","html_url","name","GithubRepositoryCardHeader","showRelease","loading","repoLoading","status","release","title","organization","login","version","useState","useEffectAsync","useFetch","url","options","setResponse","undefined","error","setError","setStatus","setLoading","mounted","res","fetch","json","semverCmp","ROOT","GITHUB_API_KEY","contentToFirmwareRelease","content","type","exec","sha","size","download_url","contentsToFirmwareReleases","contents","map","filter","r","sort","l","cleaned","replace","parts","split","repoPath","slice","join","parseRepoUrl","m","owner","fetchLatestFirmwareRelease","uri","resp","releases","ignoreThrottled","Error","fetchFirmwareReleaseBinary","downloadUrl","req","headers","Accept","firmware","blob","fetchText","tag","path","mimeType","src","text","useFetchApi","console","log","useLatestRelease","useLatestReleaseAsset","filename","tag_name","assertUrl","useLatestFirmwareReleases","cmp","a","b","d","major","minor","patch","pre","length","i","aa","bb","test","parseInt","strcmp","tryParse","v","Number","MAX_SAFE_INTEGER","build","Card","CardContent","GithubRepositoryCard","showDescription","description","Grid","GithubRepositoryList","repos","others","Page"],"sourceRoot":""}